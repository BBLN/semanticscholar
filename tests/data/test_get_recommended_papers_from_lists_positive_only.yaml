interactions:
- request:
    body: '{"positivePaperIds": ["10.1145/3544585.3544600", "10.1145/301250.301271"],
      "negativePaperIds": null}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '100'
      User-Agent:
      - python-requests/2.28.1
    method: POST
    uri: https://api.semanticscholar.org/recommendations/v1/papers/?&fields=abstract,authors,citationCount,corpusId,externalIds,fieldsOfStudy,influentialCitationCount,isOpenAccess,journal,openAccessPdf,paperId,publicationDate,publicationTypes,publicationVenue,referenceCount,s2FieldsOfStudy,title,url,venue,year&limit=100
  response:
    body:
      string: '{"recommendedPapers": [{"paperId": "a77cc69e7feaa7ee7f27c2f465366b8603a3608d",
        "externalIds": {"DBLP": "conf/hopc/CaoFR23", "DOI": "10.1145/3597635.3598019",
        "CorpusId": 259949805}, "corpusId": 259949805, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/a77cc69e7feaa7ee7f27c2f465366b8603a3608d",
        "title": "Efficient Construction of Directed Hopsets and Parallel Single-source
        Shortest Paths (Abstract)", "abstract": "The single-source shortest-path problem
        is as follows: given a graph with nonnegative edge weights and a designated
        source vertex s, return the distances from~s to each other vertex such. This
        paper presents a randomized parallel single-source shortest paths (SSSP) algorithm
        for directed graphs with non-negative integer edge weights that solves the
        exact SSSP problem in O (m) work and n^1/2+o(1) span, with high probability.
        All previous exact SSSP algorithms with nearly linear work have linear span,
        even for undirected unweighted graphs. To solve exact SSSP problem, we first
        show a deterministic reduction from exact SSSP to directed hopsets using the
        iterative gradual rounding technique. An (\u03b2, \u03b5)-hopset is a set
        of weighted edges, also known as shortcuts, that when added to the graph,
        admit \u03b2-hop paths with weights no more than (1 + \u03b5) times the true
        shortest path distances. We show that (\u03b2, \u03b5)-hopsets can be used
        to solve the exact SSSP problem in O (m) work and O (\u03b2) span. Furthermore,
        we present the first nearly linear-work algorithm for constructing hopsets
        on directed graphs. Our sequential algorithm runs in O (m) time and constructs
        a hopset with O (n) edges and \u03b2 = n^1/2+o(1) . We also provide a parallel
        version of the algorithm with O (m) work and n^1/2+o(1) span. The directed
        hopsets can be used to solve approximate SSSP problems efficiently, where
        the objective is to return estimates of the distances from the source vertex
        to every other vertex such that the estimate falls between the true distance
        and (1+\u03b5) times the distance. Specifically, for constant \u03b5 and graphs
        with polynomially-bounded real edge weights, there is an algorithm solving
        approximate SSSP problem with O (m) work and n^1/2+o(1) span.", "venue": "HOPC@SPAA",
        "year": 2023, "referenceCount": 8, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2023-07-18",
        "journal": {"name": "Proceedings of the 2023 ACM Workshop on Highlights of
        Parallel Computing"}, "authors": [{"authorId": "36242427", "name": "Nairen
        Cao"}, {"authorId": "5619883", "name": "Jeremy T. Fineman"}, {"authorId":
        "66592973", "name": "Katina Russell"}]}, {"paperId": "558d6d05b344803b534c5b48144ed4e5812d9a13",
        "externalIds": {"DBLP": "journals/corr/abs-2307-07583", "ArXiv": "2307.07583",
        "DOI": "10.48550/arXiv.2307.07583", "CorpusId": 259937389}, "corpusId": 259937389,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/558d6d05b344803b534c5b48144ed4e5812d9a13",
        "title": "On Diameter Approximation in Directed Graphs", "abstract": "Computing
        the diameter of a graph, i.e. the largest distance, is a fundamental problem
        that is central in fine-grained complexity. In undirected graphs, the Strong
        Exponential Time Hypothesis (SETH) yields a lower bound on the time vs. approximation
        trade-off that is quite close to the upper bounds. In \\emph{directed} graphs,
        however, where only some of the upper bounds apply, much larger gaps remain.
        Since $d(u,v)$ may not be the same as $d(v,u)$, there are multiple ways to
        define the problem, the two most natural being the \\emph{(one-way) diameter}
        ($\\max_{(u,v)} d(u,v)$) and the \\emph{roundtrip diameter} ($\\max_{u,v}
        d(u,v)+d(v,u)$). In this paper we make progress on the outstanding open question
        for each of them. -- We design the first algorithm for diameter in sparse
        directed graphs to achieve $n^{1.5-\\varepsilon}$ time with an approximation
        factor better than $2$. The new upper bound trade-off makes the directed case
        appear more similar to the undirected case. Notably, this is the first algorithm
        for diameter in sparse graphs that benefits from fast matrix multiplication.
        -- We design new hardness reductions separating roundtrip diameter from directed
        and undirected diameter. In particular, a $1.5$-approximation in subquadratic
        time would refute the All-Nodes $k$-Cycle hypothesis, and any $(2-\\varepsilon)$-approximation
        would imply a breakthrough algorithm for approximate $\\ell_{\\infty}$-Closest-Pair.
        Notably, these are the first conditional lower bounds for diameter that are
        not based on SETH.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        50, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-14", "journal": {"name": "ArXiv", "volume": "abs/2307.07583"},
        "authors": [{"authorId": "1730630", "name": "Amir Abboud"}, {"authorId": "29884449",
        "name": "M. Dalirrooyfard"}, {"authorId": "2097705", "name": "Ray Li"}, {"authorId":
        "2275118", "name": "V. V. Williams"}]}, {"paperId": "0f0c01ecdc3042d2a15a84ff3de6a4a65fddfb7c",
        "externalIds": {"DBLP": "journals/corr/abs-2307-06113", "ArXiv": "2307.06113",
        "DOI": "10.48550/arXiv.2307.06113", "CorpusId": 259837128}, "corpusId": 259837128,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/0f0c01ecdc3042d2a15a84ff3de6a4a65fddfb7c",
        "title": "Sublinear Time Shortest Path in Expander Graphs", "abstract": "Computing
        a shortest path between two nodes in an undirected unweighted graph is among
        the most basic algorithmic tasks. Breadth first search solves this problem
        in linear time, which is clearly also a lower bound in the worst case. However,
        several works have shown how to solve this problem in sublinear time in expectation
        when the input graph is drawn from one of several classes of random graphs.
        In this work, we extend these results by giving sublinear time shortest path
        (and short path) algorithms for expander graphs. We thus identify a natural
        deterministic property of a graph (that is satisfied by typical random regular
        graphs) which suffices for sublinear time shortest paths. The algorithms are
        very simple, involving only bidirectional breadth first search and short random
        walks. We also complement our new algorithms by near-matching lower bounds.",
        "venue": "arXiv.org", "year": 2023, "referenceCount": 16, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-12", "journal":
        {"name": "ArXiv", "volume": "abs/2307.06113"}, "authors": [{"authorId": "1734327",
        "name": "N. Alon"}, {"authorId": "1403067997", "name": "A. J\u00f8rgensen"},
        {"authorId": "2054527409", "name": "S\u00f8ren Fuglede J\u00f8rgensen"}, {"authorId":
        "1741455", "name": "Kasper Green Larsen"}]}, {"paperId": "155cb08fb622f3526051b27bbeac290fbd573383",
        "externalIds": {"DBLP": "conf/icalp/KarczmarzS23", "DOI": "10.4230/LIPIcs.ICALP.2023.84",
        "CorpusId": 259335438}, "corpusId": 259335438, "publicationVenue": "d024be26-06b0-4afe-8fa3-a297e04fe604",
        "url": "https://www.semanticscholar.org/paper/155cb08fb622f3526051b27bbeac290fbd573383",
        "title": "Fully Dynamic Shortest Paths and Reachability in Sparse Digraphs",
        "abstract": "We study the exact fully dynamic shortest paths problem. For
        real-weighted directed graphs, we show a deterministic fully dynamic data
        structure with e O ( mn 4 / 5 ) worst-case update time processing arbitrary
        s, t -distance queries in e O ( n 4 / 5 ) time. This constitutes the first
        non-trivial update/query tradeoff for this problem in the regime of sparse
        weighted directed graphs. Moreover, we give a Monte Carlo randomized fully
        dynamic reachability data structure processing single-edge updates in e O
        ( n \u221a m ) worst-case time and queries in O ( \u221a m ) time. For sparse
        digraphs, such a tradeoff has only been previously described with amortized
        update time [Roditty and Zwick, SIAM J. Comp. 2008].", "venue": "International
        Colloquium on Automata, Languages and Programming", "year": 2023, "referenceCount":
        44, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
        null, "journal": {"pages": "84:1-84:20"}, "authors": [{"authorId": "47775561",
        "name": "Adam Karczmarz"}, {"authorId": "1734541", "name": "P. Sankowski"}]},
        {"paperId": "592900cc8ef6a718e6a53506f5acb46a3e79d755", "externalIds": {"DBLP":
        "journals/corr/abs-2307-04139", "ArXiv": "2307.04139", "DOI": "10.48550/arXiv.2307.04139",
        "CorpusId": 259501045}, "corpusId": 259501045, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/592900cc8ef6a718e6a53506f5acb46a3e79d755",
        "title": "A Randomized Algorithm for Single-Source Shortest Path on Undirected
        Real-Weighted Graphs", "abstract": "In undirected graphs with real non-negative
        weights, we give a new randomized algorithm for the single-source shortest
        path (SSSP) problem with running time $O(m\\sqrt{\\log n \\cdot \\log\\log
        n})$ in the comparison-addition model. This is the first algorithm to break
        the $O(m+n\\log n)$ time bound for real-weighted sparse graphs by Dijkstra''s
        algorithm with Fibonacci heaps. Previous undirected non-negative SSSP algorithms
        give time bound of $O(m\\alpha(m,n)+\\min\\{n\\log n, n\\log\\log r\\})$ in
        comparison-addition model, where $\\alpha$ is the inverse-Ackermann function
        and $r$ is the ratio of the maximum-to-minimum edge weight [Pettie&Ramachandran
        2005], and linear time for integer edge weights in RAM model [Thorup 1999].
        Note that there is a proposed complexity lower bound of $\\Omega(m+\\min\\{n\\log
        n, n\\log\\log r\\})$ for hierarchy-based algorithms for undirected real-weighted
        SSSP [Pettie&Ramachandran 2005], but our algorithm does not obey the properties
        required for that lower bound. As a non-hierarchy-based approach, our algorithm
        shows great advantage with much simpler structure, and is much easier to implement.",
        "venue": "arXiv.org", "year": 2023, "referenceCount": 35, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-07-09", "journal": {"name": "ArXiv", "volume": "abs/2307.04139"}, "authors":
        [{"authorId": "1747710", "name": "Ran Duan"}, {"authorId": "2176031139", "name":
        "Jiayi Mao"}, {"authorId": "2058256821", "name": "Xinkai Shu"}, {"authorId":
        "1894767683", "name": "Longhui Yin"}]}, {"paperId": "4ec52c61b6066dcf4e4f5165b302b03b35ab186f",
        "externalIds": {"DBLP": "journals/corr/abs-2307-14663", "ArXiv": "2307.14663",
        "DOI": "10.48550/arXiv.2307.14663", "CorpusId": 260202899}, "corpusId": 260202899,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/4ec52c61b6066dcf4e4f5165b302b03b35ab186f",
        "title": "The Unweighted and Weighted Reverse Shortest Path Problem for Disk
        Graphs", "abstract": "We study the reverse shortest path problem on disk graphs
        in the plane. In this problem we consider the proximity graph of a set of
        $n$ disks in the plane of arbitrary radii: In this graph two disks are connected
        if the distance between them is at most some threshold parameter $r$. The
        case of intersection graphs is a special case with $r=0$. We give an algorithm
        that, given a target length $k$, computes the smallest value of $r$ for which
        there is a path of length at most $k$ between some given pair of disks in
        the proximity graph. Our algorithm runs in $O^*(n^{5/4})$ randomized expected
        time, which improves to $O^*(n^{6/5})$ for unit disk graphs, where all the
        disks have the same radius. Our technique is robust and can be applied to
        many variants of the problem. One significant variant is the case of weighted
        proximity graphs, where edges are assigned real weights equal to the distance
        between the disks or between their centers, and $k$ is replaced by a target
        weight $w$; that is, we seek a path whose length is at most $w$. In other
        variants, we want to optimize a parameter different from $r$, such as a scale
        factor of the radii of the disks. The main technique for the decision version
        of the problem (determining whether the graph with a given $r$ has the desired
        property) is based on efficient implementations of BFS (for the unweighted
        case) and of Dijkstra''s algorithm (for the weighted case), using efficient
        data structures for maintaining the bichromatic closest pair for certain bicliques
        and several distance functions. The optimization problem is then solved by
        combining the resulting decision procedure with enhanced variants of the interval
        shrinking and bifurcation technique of [4].", "venue": "arXiv.org", "year":
        2023, "referenceCount": 16, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Mathematics", "source": "s2-fos-model"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-27", "journal": {"name": "ArXiv", "volume": "abs/2307.14663"},
        "authors": [{"authorId": "145325898", "name": "Haim Kaplan"}, {"authorId":
        "31650437", "name": "M. J. Katz"}, {"authorId": "2058225262", "name": "Rachel
        Saban"}, {"authorId": "1704273", "name": "M. Sharir"}]}, {"paperId": "7229600e027663c241adca10b4f55b2d5d6d90e5",
        "externalIds": {"DBLP": "journals/corr/abs-2307-09258", "ArXiv": "2307.09258",
        "DOI": "10.48550/arXiv.2307.09258", "CorpusId": 259951410}, "corpusId": 259951410,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/7229600e027663c241adca10b4f55b2d5d6d90e5",
        "title": "Fast 2-Approximate All-Pairs Shortest Paths", "abstract": "In this
        paper, we revisit the classic approximate All-Pairs Shortest Paths (APSP)
        problem in undirected graphs. For unweighted graphs, we provide an algorithm
        for $2$-approximate APSP in $\\tilde O(n^{2.5-r}+n^{\\omega(r)})$ time, for
        any $r\\in[0,1]$. This is $O(n^{2.032})$ time, using known bounds for rectangular
        matrix multiplication~$n^{\\omega(r)}$~[Le Gall, Urrutia, SODA 2018]. Our
        result improves on the $\\tilde{O}(n^{2.25})$ bound of [Roddity, STOC 2023],
        and on the $\\tilde{O}(m\\sqrt n+n^2)$ bound of [Baswana, Kavitha, SICOMP
        2010] for graphs with $m\\geq n^{1.532}$ edges. For weighted graphs, we obtain
        $(2+\\epsilon)$-approximate APSP in $\\tilde O(n^{3-r}+n^{\\omega(r)})$ time,
        for any $r\\in [0,1]$. This is $O(n^{2.214})$ time using known bounds for
        $\\omega(r)$. It improves on the state of the art bound of $O(n^{2.25})$ by
        [Kavitha, Algorithmica 2012]. Our techniques further lead to improved bounds
        in a wide range of density for weighted graphs. In particular, for the sparse
        regime we construct a distance oracle in $\\tilde O(mn^{2/3})$ time that supports
        $2$-approximate queries in constant time. For sparse graphs, the preprocessing
        time of the algorithm matches conditional lower bounds [Patrascu, Roditty,
        Thorup, FOCS 2012; Abboud, Bringmann, Fischer, STOC 2023]. To the best of
        our knowledge, this is the first 2-approximate distance oracle that has subquadratic
        preprocessing time in sparse graphs. We also obtain new bounds in the near
        additive regime for unweighted graphs. We give faster algorithms for $(1+\\epsilon,k)$-approximate
        APSP, for $k=2,4,6,8$. We obtain these results by incorporating fast rectangular
        matrix multiplications into various combinatorial algorithms that carefully
        balance out distance computation on layers of sparse graphs preserving certain
        distance information.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        77, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-07-18", "journal": {"name": "ArXiv", "volume": "abs/2307.09258"}, "authors":
        [{"authorId": "21230419", "name": "Michal Dory"}, {"authorId": "51487176",
        "name": "S. Forster"}, {"authorId": "2172446768", "name": "Yael Kirkpatrick"},
        {"authorId": "3440512", "name": "Yasamin Nazari"}, {"authorId": "2275118",
        "name": "V. V. Williams"}, {"authorId": "2140919232", "name": "Tijn de Vos"}]},
        {"paperId": "2bfe692181995ea596ed3fc4d0a498b19fcec934", "externalIds": {"DBLP":
        "journals/corr/abs-2306-07872", "ArXiv": "2306.07872", "DOI": "10.48550/arXiv.2306.07872",
        "CorpusId": 259145215}, "corpusId": 259145215, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/2bfe692181995ea596ed3fc4d0a498b19fcec934",
        "title": "Expanding the Scope of DAWN: A Novel Version for Weighted Shortest
        Path Problem", "abstract": "The shortest path problem is a typical problem
        in graph theory with wide potential applications. The state-of-the-art single-source
        shortest paths algorithm on the weight graph is the $\\Delta$-stepping algorithm,
        which can efficiently process weighted graphs in parallel. DAWN is an algorithm
        that addresses the shortest path problem on unweighted graphs, and we propose
        a weighted version that can handle graphs with weights edges, while maintaining
        the high scalability and parallelism features as DAWN. The novel version requires
        $O(\\mu m)$ and $O(\\mu \\cdot E_{wcc})$ times on the connected and unconnected
        graphs for SSSP problems, respectively. $E_{wcc}$ denote the number of edges
        included in the largest weakly connected component, and $\\mu$ is a constant
        denoting the average number of path transformations in the tasks. We tested
        the weighted version on the real graphs from Stanford Network Analysis Platform
        and SuiteSparse Matrix Collection, which outperformed the solution of $\\Delta$-stepping
        algorithm from Gunrock, achieving a speedup of 43.163$\\times$.", "venue":
        "arXiv.org", "year": 2023, "referenceCount": 25, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-06-13", "journal":
        {"name": "ArXiv", "volume": "abs/2306.07872"}, "authors": [{"authorId": "2115205726",
        "name": "Ye Feng"}]}, {"paperId": "e8057a46e762e56b97e721fd8298e0cff45352e7",
        "externalIds": {"DBLP": "journals/corr/abs-2307-15557", "ArXiv": "2307.15557",
        "DOI": "10.48550/arXiv.2307.15557", "CorpusId": 260315869}, "corpusId": 260315869,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/e8057a46e762e56b97e721fd8298e0cff45352e7",
        "title": "Dynamic algorithms for k-center on graphs", "abstract": "In this
        paper we give the first efficient algorithms for the $k$-center problem on
        dynamic graphs undergoing edge updates. In this problem, the goal is to partition
        the input into $k$ sets by choosing $k$ centers such that the maximum distance
        from any data point to the closest center is minimized. It is known that it
        is NP-hard to get a better than $2$ approximation for this problem. While
        in many applications the input may naturally be modeled as a graph, all prior
        works on $k$-center problem in dynamic settings are on metrics. In this paper,
        we give a deterministic decremental $(2+\\epsilon)$-approximation algorithm
        and a randomized incremental $(4+\\epsilon)$-approximation algorithm, both
        with amortized update time $kn^{o(1)}$ for weighted graphs. Moreover, we show
        a reduction that leads to a fully dynamic $(2+\\epsilon)$-approximation algorithm
        for the $k$-center problem, with worst-case update time that is within a factor
        $k$ of the state-of-the-art upper bound for maintaining $(1+\\epsilon)$-approximate
        single-source distances in graphs. Matching this bound is a natural goalpost
        because the approximate distances of each vertex to its center can be used
        to maintain a $(2+\\epsilon)$-approximation of the graph diameter and the
        fastest known algorithms for such a diameter approximation also rely on maintaining
        approximate single-source distances.", "venue": "arXiv.org", "year": 2023,
        "referenceCount": 42, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-07-28", "journal": {"name": "ArXiv", "volume": "abs/2307.15557"}, "authors":
        [{"authorId": "41018464", "name": "Emilio Cruciani"}, {"authorId": "51487176",
        "name": "S. Forster"}, {"authorId": "3393453", "name": "Gramoz Goranci"},
        {"authorId": "3440512", "name": "Yasamin Nazari"}, {"authorId": "2148756609",
        "name": "Antonis Skarlatos"}]}, {"paperId": "765b1742fc5e224aefbc859a919e50ffa3392e05",
        "externalIds": {"ArXiv": "2307.02787", "DBLP": "journals/corr/abs-2307-02787",
        "DOI": "10.48550/arXiv.2307.02787", "CorpusId": 259360491}, "corpusId": 259360491,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/765b1742fc5e224aefbc859a919e50ffa3392e05",
        "title": "Shortest Beer Path Queries based on Graph Decomposition", "abstract":
        "Given a directed edge-weighted graph $G=(V, E)$ with beer vertices $B\\subseteq
        V$, a beer path between two vertices $u$ and $v$ is a path between $u$ and
        $v$ that visits at least one beer vertex in $B$, and the beer distance between
        two vertices is the shortest length of beer paths. We consider \\emph{indexing
        problems} on beer paths, that is, a graph is given a priori, and we construct
        some data structures (called indexes) for the graph. Then later, we are given
        two vertices, and we find the beer distance or beer path between them using
        the data structure. For such a scheme, efficient algorithms using indexes
        for the beer distance and beer path queries have been proposed for outerplanar
        graphs and interval graphs. For example, Bacic et al. (2021) present indexes
        with size $O(n)$ for outerplanar graphs and an algorithm using them that answers
        the beer distance between given two vertices in $O(\\alpha(n))$ time, where
        $\\alpha(\\cdot)$ is the inverse Ackermann function; the performance is shown
        to be optimal. This paper proposes indexing data structures and algorithms
        for beer path queries on general graphs based on two types of graph decomposition:
        the tree decomposition and the triconnected component decomposition. We propose
        indexes with size $O(m+nr^2)$ based on the triconnected component decomposition,
        where $r$ is the size of the largest triconnected component. For a given query
        $u,v\\in V$, our algorithm using the indexes can output the beer distance
        in query time $O(\\alpha(m))$. In particular, our indexing data structures
        and algorithms achieve the optimal performance (the space and the query time)
        for series-parallel graphs, which is a wider class of outerplanar graphs.",
        "venue": "arXiv.org", "year": 2023, "referenceCount": 12, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-06", "journal":
        {"name": "ArXiv", "volume": "abs/2307.02787"}, "authors": [{"authorId": "1739295",
        "name": "T. Hanaka"}, {"authorId": "145436125", "name": "H. Ono"}, {"authorId":
        "1701242", "name": "K. Sadakane"}, {"authorId": "2221225607", "name": "Kosuke
        Sadakane"}]}, {"paperId": "2cd432f494ee983e1103c5ef5862dc87ae6b4ecd", "externalIds":
        {"DBLP": "conf/ics/YangLWHT23", "DOI": "10.1145/3577193.3593728", "CorpusId":
        259205569}, "corpusId": 259205569, "publicationVenue": "914d4734-285a-4cd8-bba1-eec0db26a512",
        "url": "https://www.semanticscholar.org/paper/2cd432f494ee983e1103c5ef5862dc87ae6b4ecd",
        "title": "Fast All-Pairs Shortest Paths Algorithm in Large Sparse Graph",
        "abstract": "Finding the All-Pairs Shortest Paths (APSP) in a graph is the
        key for various domains. Motivated by the graphs are sparse in most real-world
        applications, we store the whole graph as a compressed storage format in each
        process of the distributed computing clusters and combine the Floyd algorithm
        with the Dijkstra algorithm to solve the APSP problem in this work, which
        leads to the novel Fast APSP algorithm. In contrast to the state-of-the-art
        Part APSP algorithm, our algorithm adds some memory overhead to store the
        original sparse graph and uses local Floyd and global Dijkstra algorithms
        simultaneously. The payoff is the circumvention of expensive global communication,
        reducing one local FW operation, simplifying the Minplus function, and making
        its data access continuous. Furthermore, we propose a parallel framework to
        solve the problem of mismatch between the number of GPUs and the number of
        divisible blocks of a graph. The Fast APSP algorithm exhibits an average speedup
        of 16.97x compared to the CPU Dijkstra algorithm, 7.09x compared to the GPU
        Dijkstra algorithm, 7.09x compared to the Part APSP algorithm, and 4.6x compared
        to the decentralized Part APSP algorithm. It also shows good scalability in
        our experiments. It takes about 12.45 minutes to solve the APSP problem for
        the graph with 11,548,845 vertices by engaging 2048 GPUs.", "venue": "International
        Conference on Supercomputing", "year": 2023, "referenceCount": 31, "citationCount":
        2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle",
        "Conference"], "publicationDate": "2023-06-21", "journal": {"name": "Proceedings
        of the 37th International Conference on Supercomputing"}, "authors": [{"authorId":
        "2115299113", "name": "Shaofeng Yang"}, {"authorId": "2144509639", "name":
        "Xiandong Liu"}, {"authorId": "119917083", "name": "Yun-Tsz Wang"}, {"authorId":
        "2195806551", "name": "Xin He"}, {"authorId": "1930057", "name": "Guangming
        Tan"}]}, {"paperId": "1d886ea26acaa5bd4024df257f193069f7636b87", "externalIds":
        {"DBLP": "journals/corr/abs-2307-02774", "ArXiv": "2307.02774", "DOI": "10.48550/arXiv.2307.02774",
        "CorpusId": 259360605}, "corpusId": 259360605, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/1d886ea26acaa5bd4024df257f193069f7636b87",
        "title": "Approximation Algorithms for Directed Weighted Spanners", "abstract":
        "In the pairwise weighted spanner problem, the input consists of an $n$-vertex-directed
        graph, where each edge is assigned a cost and a length. Given $k$ vertex pairs
        and a distance constraint for each pair, the goal is to find a minimum-cost
        subgraph in which the distance constraints are satisfied. This formulation
        captures many well-studied connectivity problems, including spanners, distance
        preservers, and Steiner forests. In the offline setting, we show: 1. An $\\tilde{O}(n^{4/5
        + \\epsilon})$-approximation algorithm for pairwise weighted spanners. When
        the edges have unit costs and lengths, the best previous algorithm gives an
        $\\tilde{O}(n^{3/5 + \\epsilon})$-approximation, due to Chlamt\\''a\\v{c},
        Dinitz, Kortsarz, and Laekhanukit (TALG, 2020). 2. An $\\tilde{O}(n^{1/2+\\epsilon})$-approximation
        algorithm for all-pair weighted distance preservers. When the edges have unit
        costs and arbitrary lengths, the best previous algorithm gives an $\\tilde{O}(n^{1/2})$-approximation
        for all-pair spanners, due to Berman, Bhattacharyya, Makarychev, Raskhodnikova,
        and Yaroslavtsev (Information and Computation, 2013). In the online setting,
        we show: 1. An $\\tilde{O}(k^{1/2 + \\epsilon})$-competitive algorithm for
        pairwise weighted spanners. The state-of-the-art results are $\\tilde{O}(n^{4/5})$-competitive
        when edges have unit costs and arbitrary lengths, and $\\min\\{\\tilde{O}(k^{1/2
        + \\epsilon}), \\tilde{O}(n^{2/3 + \\epsilon})\\}$-competitive when edges
        have unit costs and lengths, due to Grigorescu, Lin, and Quanrud (APPROX,
        2021). 2. An $\\tilde{O}(k^{\\epsilon})$-competitive algorithm for single-source
        weighted spanners. Without distance constraints, this problem is equivalent
        to the directed Steiner tree problem. The best previous algorithm for online
        directed Steiner trees is $\\tilde{O}(k^{\\epsilon})$-competitive, due to
        Chakrabarty, Ene, Krishnaswamy, and Panigrahi (SICOMP, 2018).", "venue": "arXiv.org",
        "year": 2023, "referenceCount": 56, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-06", "journal":
        {"name": "ArXiv", "volume": "abs/2307.02774"}, "authors": [{"authorId": "145714076",
        "name": "Elena Grigorescu"}, {"authorId": "145911174", "name": "Nithish Kumar"},
        {"authorId": "2115000", "name": "Young-San Lin"}]}, {"paperId": "c5ac59b90d3b7e300d3742708808f87d70e5c8de",
        "externalIds": {"DBLP": "journals/corr/abs-2307-01781", "ArXiv": "2307.01781",
        "DOI": "10.48550/arXiv.2307.01781", "CorpusId": 259341608}, "corpusId": 259341608,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/c5ac59b90d3b7e300d3742708808f87d70e5c8de",
        "title": "Faster Detours in Undirected Graphs", "abstract": "The $k$-Detour
        problem is a basic path-finding problem: given a graph $G$ on $n$ vertices,
        with specified nodes $s$ and $t$, and a positive integer $k$, the goal is
        to determine if $G$ has an $st$-path of length exactly $\\text{dist}(s, t)
        + k$, where $\\text{dist}(s, t)$ is the length of a shortest path from $s$
        to $t$. The $k$-Detour problem is NP-hard when $k$ is part of the input, so
        researchers have sought efficient parameterized algorithms for this task,
        running in $f(k)\\text{poly}(n)$ time, for $f$ as slow-growing as possible.
        We present faster algorithms for $k$-Detour in undirected graphs, running
        in $1.853^k \\text{poly}(n)$ randomized and $4.082^k \\text{poly}(n)$ deterministic
        time. The previous fastest algorithms for this problem took $2.746^k \\text{poly}(n)$
        randomized and $6.523^k \\text{poly}(n)$ deterministic time [Bez\\''akov\\''a-Curticapean-Dell-Fomin,
        ICALP 2017]. Our algorithms use the fact that detecting a path of a given
        length in an undirected graph is easier if we are promised that the path belongs
        to what we call a\"bipartitioned\"subgraph, where the nodes are split into
        two parts and the path must satisfy constraints on those parts. Previously,
        this idea was used to obtain the fastest known algorithm for finding paths
        of length $k$ in undirected graphs [Bj\\\"orklund-Husfeldt-Kaski-Koivisto,
        JCSS 2017]. Our work has direct implications for the $k$-Longest Detour problem:
        in this problem, we are given the same input as in $k$-Detour, but are now
        tasked with determining if $G$ has an $st$-path of length at least $\\text{dist}(s,
        t) + k.$ Our results for k-Detour imply that we can solve $k$-Longest Detour
        in $3.432^k \\text{poly}(n)$ randomized and $16.661^k \\text{poly}(n)$ deterministic
        time. The previous fastest algorithms for this problem took $7.539^k \\text{poly}(n)$
        randomized and $42.549^k \\text{poly}(n)$ deterministic time [Fomin et al.,
        STACS 2022].", "venue": "arXiv.org", "year": 2023, "referenceCount": 21, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
        "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-04", "journal":
        {"name": "ArXiv", "volume": "abs/2307.01781"}, "authors": [{"authorId": "2045344",
        "name": "Shyan S. Akmal"}, {"authorId": "2275118", "name": "V. V. Williams"},
        {"authorId": "2110217002", "name": "Ryan Williams"}, {"authorId": "2117883341",
        "name": "Zixuan Xu"}]}, {"paperId": "5e2c8e8928bb03364f0ac1f4ce3bb90533b311d6",
        "externalIds": {"ArXiv": "2307.10847", "DBLP": "journals/corr/abs-2307-10847",
        "DOI": "10.48550/arXiv.2307.10847", "CorpusId": 259991688}, "corpusId": 259991688,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/5e2c8e8928bb03364f0ac1f4ce3bb90533b311d6",
        "title": "Shortest Dominating Set Reconfiguration under Token Sliding", "abstract":
        "In this paper, we present novel algorithms that efficiently compute a shortest
        reconfiguration sequence between two given dominating sets in trees and interval
        graphs under the Token Sliding model. In this problem, a graph is provided
        along with its two dominating sets, which can be imagined as tokens placed
        on vertices. The objective is to find a shortest sequence of dominating sets
        that transforms one set into the other, with each set in the sequence resulting
        from sliding a single token in the previous set. While identifying any sequence
        has been well studied, our work presents the first polynomial algorithms for
        this optimization variant in the context of dominating sets.", "venue": "arXiv.org",
        "year": 2023, "referenceCount": 25, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Mathematics", "source": "external"},
        {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-07-20", "journal": {"name": "ArXiv", "volume": "abs/2307.10847"}, "authors":
        [{"authorId": "2122812149", "name": "Jan Maty\u00e1s Kristan"}, {"authorId":
        "2064928696", "name": "Jakub Svoboda"}]}, {"paperId": "82b84fb3e7dd21c234fcc3f21522ca3a21c2da76",
        "externalIds": {"DBLP": "journals/corr/abs-2306-11401", "ArXiv": "2306.11401",
        "DOI": "10.48550/arXiv.2306.11401", "CorpusId": 259203301}, "corpusId": 259203301,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/82b84fb3e7dd21c234fcc3f21522ca3a21c2da76",
        "title": "Increasing paths in random temporal graphs", "abstract": "We consider
        random temporal graphs, a version of the classical Erd\\H{o}s--R\\''enyi random
        graph G(n,p) where additionally, each edge has a distinct random time stamp,
        and connectivity is constrained to sequences of edges with increasing time
        stamps. We study the asymptotics for the distances in such graphs, mostly
        in the regime of interest where np is of order log n. We establish the first
        order asymptotics for the lengths of increasing paths: the lengths of the
        shortest and longest paths between typical vertices, the maxima of these lengths
        from a given vertex, as well as the maxima between any two vertices; this
        covers the (temporal) diameter.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        20, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-06-20", "journal": {"name": "ArXiv", "volume": "abs/2306.11401"}, "authors":
        [{"authorId": "1690358", "name": "N. Broutin"}, {"authorId": "3263552", "name":
        "Nina Kam\u010dev"}, {"authorId": "1755694", "name": "G. Lugosi"}]}, {"paperId":
        "0b1ad4cb29a5093fee4b2c88f2b18b78231a51c1", "externalIds": {"DBLP": "journals/corr/abs-2307-12602",
        "ArXiv": "2307.12602", "DOI": "10.48550/arXiv.2307.12602", "CorpusId": 260126053},
        "corpusId": 260126053, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/0b1ad4cb29a5093fee4b2c88f2b18b78231a51c1",
        "title": "Shortest two disjoint paths in conservative graphs", "abstract":
        "We consider the following problem that we call the Shortest Two Disjoint
        Paths problem: given an undirected graph $G=(V,E)$ with edge weights $w:E
        \\rightarrow \\mathbb{R}$, two terminals $s$ and $t$ in $G$, find two internally
        vertex-disjoint paths between $s$ and $t$ with minimum total weight. As shown
        recently by Schlotter and Seb\\H{o} (2022), this problem becomes NP-hard if
        edges can have negative weights, even if the weight function is conservative,
        i.e., there are are no cycles in $G$ with negative weight. We propose a polynomial-time
        algorithm that solves the Shortest Two Disjoint Paths problem for conservative
        weights in the case when the negative-weight edges form a single tree in $G$.",
        "venue": "arXiv.org", "year": 2023, "referenceCount": 20, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-07-24", "journal": {"name": "ArXiv", "volume": "abs/2307.12602"}, "authors":
        [{"authorId": "1771983", "name": "Ildik\u00f3 Schlotter"}]}, {"paperId": "943aa49d5dabb208eaa02053bd573d25a7363d8e",
        "externalIds": {"DBLP": "journals/corr/abs-2307-12547", "ArXiv": "2307.12547",
        "DOI": "10.48550/arXiv.2307.12547", "CorpusId": 260125639}, "corpusId": 260125639,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/943aa49d5dabb208eaa02053bd573d25a7363d8e",
        "title": "Knapsack: Connectedness, Path, and Shortest-Path", "abstract": "We
        study the knapsack problem with graph theoretic constraints. That is, we assume
        that there exists a graph structure on the set of items of knapsack and the
        solution also needs to satisfy certain graph theoretic properties on top of
        knapsack constraints. In particular, we need to compute in the connected knapsack
        problem a connected subset of items which has maximum value subject to the
        size of knapsack constraint. We show that this problem is strongly NP-complete
        even for graphs of maximum degree four and NP-complete even for star graphs.
        On the other hand, we develop an algorithm running in time $O\\left(2^{tw\\log
        tw}\\cdot\\text{poly}(\\min\\{s^2,d^2\\})\\right)$ where $tw,s,d$ are respectively
        treewidth of the graph, size, and target value of the knapsack. We further
        exhibit a $(1-\\epsilon)$ factor approximation algorithm running in time $O\\left(2^{tw\\log
        tw}\\cdot\\text{poly}(n,1/\\epsilon)\\right)$ for every $\\epsilon>0$. We
        show similar results for several other graph theoretic properties, namely
        path and shortest-path under the problem names path-knapsack and shortestpath-knapsack.
        Our results seems to indicate that connected-knapsack is computationally hardest
        followed by path-knapsack and shortestpath-knapsack.", "venue": "arXiv.org",
        "year": 2023, "referenceCount": 22, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-24", "journal": {"name": "ArXiv", "volume": "abs/2307.12547"},
        "authors": [{"authorId": "143892297", "name": "P. Dey"}, {"authorId": "1730875",
        "name": "Sudeshna Kolay"}, {"authorId": "2224671674", "name": "Sipra Singh"}]},
        {"paperId": "5fb3bd4d5def1f7fcc895c5d68b460a506298eb8", "externalIds": {"DOI":
        "10.47191/ijmcr/v11i7.15", "CorpusId": 260661637}, "corpusId": 260661637,
        "publicationVenue": "cd41036d-35b8-4a1e-9817-c992f9dfee04", "url": "https://www.semanticscholar.org/paper/5fb3bd4d5def1f7fcc895c5d68b460a506298eb8",
        "title": "D^DM- DISTANCE IN CYCLE RELATED GRAPHS", "abstract": "For two vertices
        u and v of a graph G, the usual distance d (u, v), is the length of the shortest
        path between u and v. In this paper we introduced the concept of DdM- distance
        by considering the degrees of various vertices presented in the path, in addition
        to the length of the path. We study some properties with this new distance.
        We define the eccentricities of vertices, radius and diameter of G with respect
        to the DdM- distance. First we prove that the new distance is a metric on
        the set of vertices of G. We compare the usual, detour and DdM-distances of
        two vertices u,v of V.", "venue": "INTERNATIONAL JOURNAL OF MATHEMATICS AND
        COMPUTER RESEARCH", "year": 2023, "referenceCount": 0, "citationCount": 0,
        "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
        "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics", "source":
        "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-29", "journal":
        {"name": "INTERNATIONAL JOURNAL OF MATHEMATICS AND COMPUTER RESEARCH"}, "authors":
        []}, {"paperId": "de3006e28e623f4cd487fccfcd1936f8c1ea37a8", "externalIds":
        {"CorpusId": 260549119}, "corpusId": 260549119, "publicationVenue": null,
        "url": "https://www.semanticscholar.org/paper/de3006e28e623f4cd487fccfcd1936f8c1ea37a8",
        "title": "One-wasy trail orientation", "abstract": "Given a graph, does there
        exist an orientation of the edges such that the resulting directed graph is
        strongly connected? Robbins\u2019 theorem [Robbins, Am. Math. Monthly, 1939]
        asserts that such an orientation exists if and only if the graph is 2-edge
        connected. A natural extension of this problem is the following: Suppose that
        the edges of the graph are partitioned into trails. Can the trails be oriented
        consistently such that the resulting directed graph is strongly connected?
        We show that 2-edge connectivity is again a su\ufb03cient condition and we
        provide a linear time algorithm for \ufb01nding such an orientation. The generalised
        Robbins\u2019 theorem [Boesch, Am. Math. Monthly, 1980] for mixed multigraphs
        asserts that the undirected edges of a mixed multigraph can be oriented to
        make the resulting directed graph strongly connected exactly when the mixed
        graph is strongly connected and the underlying graph is bridgeless. We consider
        the natural extension where the undirected edges of a mixed multigraph are
        partitioned into trails. It turns out that in this case the condition of the
        generalised Robbin\u2019s Theorem is not su\ufb03cient. However, we show that
        as long as each cut either contains at least 2 undirected edges or directed
        edges in both directions, there exists an orientation of the trails such that
        the resulting directed graph is strongly connected. Moreover, if the condition
        is satis\ufb01ed, we may start by orienting an arbitrary trail in an arbitrary
        direction. Using this result one", "venue": "", "year": 2018, "referenceCount":
        10, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": []}, {"paperId": "94564f1eb0557af81ea3ebf93ac827bb94461ea3",
        "externalIds": {"CorpusId": 259505016}, "corpusId": 259505016, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/94564f1eb0557af81ea3ebf93ac827bb94461ea3",
        "title": "Exploring Shortest Paths on Large-scale networks", "abstract": "Networks,
        which are gaining much popularity in various disciplines, model connections
        between different real-world entities. Based on graph theory, we study a series
        of problems for understanding networks. Shortest path is among the most fundamental
        notions studied in graph theory. By exploring shortest path structure, we
        can better understand the connections between entities. However, it is often
        computationally expensive to compute shortest paths on large-scale networks
        which are common nowadays. This thesis addresses two problems on large-scale
        networks in relating to shortest paths: (1) How are two vertices connected
        in a graph? We first define the notion of shortest path graph which contains
        exactly all shortest paths between two vertices. This notion empowers us to
        make full use of shortest path structures for analysing the connection between
        vertices. We formalize the shortest-path-graph problem and propose a novel
        method, called Query-by-Sketch, which can efficiently leverage offline labelling
        to guide online searching through a fast-sketching process for solving the
        shortest-path-graph problem on complex networks. (2) How is one source vertex
        connected to other vertices in a graph? Enumerating all shortest paths between
        a source vertex and all other vertices is less informative due the fact that
        the number of shortest paths is excessive. In addition to this, coverage centrality
        fails to measure how influential a vertex is in the information flow from
        a source vertex. Thus we extend the notion of coverage centrality to relative
        coverage, to measure the importance a vertex is w.r.t a source vertex. Then
        we formalize the top-k relative coverage problem and develop an efficient
        method to answer top-k relative coverage queries in a reduced space, and design
        a bit-parallel optimization to speed up the computation of relative coverage.
        The thesis also theoretically discusses the complexity of proposed methods,
        and presents the experimental results of proposed methods using 12 and 6 real-world
        datasets for two problems respectively, which illustrates the efficiency and
        scalability of proposed methods.", "venue": "", "year": 2021, "referenceCount":
        62, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "2115738406",
        "name": "Ye Wang"}]}, {"paperId": "9bc84f5c3f1504f891b92c57873bd1723fea8b46",
        "externalIds": {"CorpusId": 260056083}, "corpusId": 260056083, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/9bc84f5c3f1504f891b92c57873bd1723fea8b46",
        "title": "SHORTER LABELING SCHEMES FOR PLANAR GRAPHS\\ast", "abstract": "An
        adjacency labeling scheme for a given class of graphs is an algorithm that,
        for every graph G from the class, assigns bit strings (labels) to vertices
        of G so that for any two vertices u, v, whether u and v are adjacent can be
        determined by a fixed procedure that examines only their labels. It is known
        that planar graphs with n vertices admit a labeling scheme with labels of
        bit length (2+o(1)) logn. In this work we improve this bound by designing
        a labeling scheme with labels of bit length ( 4 3 + o(1)) logn. All the labels
        of the input graph can be computed in polynomial time, while adjacency can
        be decided from the labels in constant time. In graph-theoretical terms, this
        implies an explicit construction of a graph on n4/3+o(1) vertices that contains
        all planar graphs on n vertices as induced subgraphs, improving the previous
        best upper bound of n2+o(1). Our labeling scheme can be generalized to larger
        classes of topologically constrained graphs, for instance, to graphs embeddable
        in any fixed surface or to k-planar graphs for any fixed k, at the cost of
        larger second-order terms.", "venue": "", "year": 2022, "referenceCount":
        54, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": null, "authors": [{"authorId": "3345689", "name": "Marthe
        Bonamy"}, {"authorId": "1692428", "name": "C. Gavoille"}]}, {"paperId": "d15f00445c8bd53f5cbfcd01407cc6538c46fbe9",
        "externalIds": {"ArXiv": "2308.00501", "CorpusId": 260351403}, "corpusId":
        260351403, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d15f00445c8bd53f5cbfcd01407cc6538c46fbe9",
        "title": "Structural Parameterizations of the Biclique-Free Vertex Deletion
        Problem", "abstract": "In this work, we study the Biclique-Free Vertex Deletion
        problem: Given a graph $G$ and integers $k$ and $i \\le j$, find a set of
        at most $k$ vertices that intersects every (not necessarily induced) biclique
        $K_{i, j}$ in $G$. This is a natural generalization of the Bounded-Degree
        Deletion problem, wherein one asks whether there is a set of at most $k$ vertices
        whose deletion results in a graph of a given maximum degree $r$. The two problems
        coincide when $i = 1$ and $j = r + 1$. We show that Biclique-Free Vertex Deletion
        is fixed-parameter tractable with respect to $k + d$ for the degeneracy $d$
        by developing a $2^{O(d k^2)} \\cdot n^{O(1)}$-time algorithm. We also show
        that it can be solved in $2^{O(f k)} \\cdot n^{O(1)}$ time for the feedback
        vertex number $f$ when $i \\ge 2$. In contrast, we find that it is W[1]-hard
        for the treedepth for any integer $i \\ge 1$. Finally, we show that Biclique-Free
        Vertex Deletion has a polynomial kernel for every $i \\ge 1$ when parameterized
        by the feedback edge number. Previously, for this parameter, its fixed-parameter
        tractability for $i = 1$ was known [Betzler et al., DAM ''12] but the existence
        of polynomial kernel was open.", "venue": "", "year": 2023, "referenceCount":
        38, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": "2023-08-01", "journal": null,
        "authors": [{"authorId": "2226259989", "name": "Lito Goldmann"}, {"authorId":
        "8810314", "name": "Leon Kellerhals"}, {"authorId": "150320816", "name": "Tomohiro
        Koana"}]}, {"paperId": "eefd00081b3839a4e2f2a087ab63070b3a9a2415", "externalIds":
        {"ArXiv": "2307.07279", "DBLP": "journals/corr/abs-2307-07279", "DOI": "10.48550/arXiv.2307.07279",
        "CorpusId": 259924891}, "corpusId": 259924891, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/eefd00081b3839a4e2f2a087ab63070b3a9a2415",
        "title": "Graph Search Trees and Their Leaves", "abstract": "Graph searches
        and their respective search trees are widely used in algorithmic graph theory.
        The problem whether a given spanning tree can be a graph search tree has been
        considered for different searches, graph classes and search tree paradigms.
        Similarly, the question whether a particular vertex can be visited last by
        some search has been studied extensively in recent years. We combine these
        two problems by considering the question whether a vertex can be a leaf of
        a graph search tree. We show that for particular search trees, including DFS
        trees, this problem is easy if we allow the leaf to be the first vertex of
        the search ordering. We contrast this result by showing that the problem becomes
        hard for many searches, including DFS and BFS, if we forbid the leaf to be
        the first vertex. Additionally, we present several structural and algorithmic
        results for search tree leaves of chordal graphs.", "venue": "arXiv.org",
        "year": 2023, "referenceCount": 37, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-14", "journal":
        {"name": "ArXiv", "volume": "abs/2307.07279"}, "authors": [{"authorId": "39540803",
        "name": "R. Scheffler"}]}, {"paperId": "0fa2ac68b06d45870576fcaaa4b0e0d374128c7e",
        "externalIds": {"ArXiv": "2308.01564", "CorpusId": 260438886}, "corpusId":
        260438886, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0fa2ac68b06d45870576fcaaa4b0e0d374128c7e",
        "title": "Sparse pancyclic subgraphs of random graphs", "abstract": "It is
        known that the complete graph $K_n$ contains a pancyclic subgraph with $n+(1+o(1))\\cdot
        \\log _2 n$ edges, and that there is no pancyclic graph on $n$ vertices with
        fewer than $n+\\log _2 (n-1) -1$ edges. We show that, with high probability,
        $G(n,p)$ contains a pancyclic subgraph with $n+(1+o(1))\\log_2 n$ edges for
        $p \\ge p^*$, where $p^*=(1+o(1))\\ln n/n$, right above the threshold for
        pancyclicity.", "venue": "", "year": 2023, "referenceCount": 12, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
        {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": "2023-08-03", "journal": null, "authors": [{"authorId":
        "102942312", "name": "Yahav Alon"}, {"authorId": "1745629", "name": "M. Krivelevich"}]},
        {"paperId": "7e001476ce05ea2cbf6b80dd45905fb4707503c0", "externalIds": {"ArXiv":
        "2308.01574", "CorpusId": 260438788}, "corpusId": 260438788, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/7e001476ce05ea2cbf6b80dd45905fb4707503c0",
        "title": "Another Hamiltonian Cycle in Bipartite Pfaffian Graphs", "abstract":
        "We present a linear-time algorithm that, given as input (i) a bipartite Pfaffian
        graph $G$ of minimum degree three, (ii) a Hamiltonian cycle $H$ in $G$, and
        (iii) an edge $e$ in $H$, outputs at least three other Hamiltonian cycles
        through the edge $e$ in $G$. This linear-time complexity of finding another
        Hamiltonian cycle given one is in sharp contrast to the problem of deciding
        the existence of a Hamiltonian cycle, which is NP-complete already for cubic
        bipartite planar graphs; such graphs are Pfaffian. Also, without the degree
        requirement, we show that it is NP-hard to find another Hamiltonian cycle
        in a bipartite Pfaffian graph. We present further improved algorithms for
        finding optimal traveling salesperson tours and counting Hamiltonian cycles
        in bipartite planar graphs with running times that are not known to hold in
        general planar graphs. We prove our results by a new structural technique
        that efficiently witnesses each Hamiltonian cycle $H$ through an arbitrary
        fixed anchor edge $e$ in a bipartite Pfaffian graph using a two-coloring of
        the vertices as advice that is unique to $H$. Previous techniques -- the Cut&Count
        technique of Cygan et al. [FOCS''11, TALG''22] in particular -- were able
        to reduce the Hamiltonian cycle problem only to essentially counting problems;
        our results show that counting can be avoided by leveraging properties of
        bipartite Pfaffian graphs. Our technique also has purely graph-theoretical
        consequences; for example, we show that every cubic bipartite Pfaffian graph
        has either zero or at least six distinct Hamiltonian cycles; the latter case
        is tight for the cube graph.", "venue": "", "year": 2023, "referenceCount":
        42, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-08-03",
        "journal": null, "authors": [{"authorId": "102631168", "name": "A. Bjorklund"},
        {"authorId": "1789283", "name": "P. Kaski"}, {"authorId": "1691242", "name":
        "Jesper Nederlof"}]}, {"paperId": "11c6d1705c0815e2c5f9b9155cd9459ab2bb1704",
        "externalIds": {"DBLP": "journals/corr/abs-2307-00254", "ArXiv": "2307.00254",
        "DOI": "10.48550/arXiv.2307.00254", "CorpusId": 259316787}, "corpusId": 259316787,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/11c6d1705c0815e2c5f9b9155cd9459ab2bb1704",
        "title": "Efficient Algorithms for Euclidean Steiner Minimal Tree on Near-Convex
        Terminal Sets", "abstract": "The Euclidean Steiner Minimal Tree problem takes
        as input a set $\\mathcal P$ of points in the Euclidean plane and finds the
        minimum length network interconnecting all the points of $\\mathcal P$. In
        this paper, in continuation to the works of Du et al. and Weng et al., we
        study Euclidean Steiner Minimal Tree when $\\mathcal P$ is formed by the vertices
        of a pair of regular, concentric and parallel $n$-gons. We restrict our attention
        to the cases where the two polygons are not very close to each other. In such
        cases, we show that Euclidean Steiner Minimal Tree is polynomial-time solvable,
        and we describe an explicit structure of a Euclidean Steiner minimal tree
        for $\\mathcal P$. We also consider point sets $\\mathcal P$ of size $n$ where
        the number of input points not on the convex hull of $\\mathcal P$ is $f(n)
        \\leq n$. We give an exact algorithm with running time $2^{\\mathcal{O}(f(n)\\log
        n)}$ for such input point sets $\\mathcal P$. Note that when $f(n) = \\mathcal{O}(\\frac{n}{\\log
        n})$, our algorithm runs in single-exponential time, and when $f(n) = o(n)$
        the running time is $2^{o(n\\log n)}$ which is better than the known algorithm
        stated in Hwang et al. We know that no FPTAS exists for Euclidean Steiner
        Minimal Tree unless P=NP, as shown by Garey et al. On the other hand FPTASes
        exist for Euclidean Steiner Minimal Tree on convex point sets, as given by
        Scott Provan. In this paper, we show that if the number of input points in
        $\\mathcal P$ not belonging to the convex hull of $\\mathcal P$ is $\\mathcal{O}(\\log
        n)$, then an FPTAS exists for Euclidean Steiner Minimal Tree. In contrast,
        we show that for any $\\epsilon \\in (0,1]$, when there are $\\Omega(n^{\\epsilon})$
        points not belonging to the convex hull of the input set, then no FPTAS can
        exist for Euclidean Steiner Minimal Tree unless P=NP.", "venue": "arXiv.org",
        "year": 2023, "referenceCount": 16, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Mathematics", "source": "s2-fos-model"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-01", "journal": {"name": "ArXiv", "volume": "abs/2307.00254"},
        "authors": [{"authorId": "2166067053", "name": "A. Dhar"}, {"authorId": "2184674203",
        "name": "Soumita Hait"}, {"authorId": "1730875", "name": "Sudeshna Kolay"}]},
        {"paperId": "5281b02247de3b06fd4bb63dcf7c83b378f248ce", "externalIds": {"DBLP":
        "conf/ics/PathakSG23", "DOI": "10.1145/3577193.3593727", "CorpusId": 259205824},
        "corpusId": 259205824, "publicationVenue": "914d4734-285a-4cd8-bba1-eec0db26a512",
        "url": "https://www.semanticscholar.org/paper/5281b02247de3b06fd4bb63dcf7c83b378f248ce",
        "title": "Scalable algorithms for compact spanners on real world graphs",
        "abstract": "A graph spanner is a subgraph that preserves the shortest distance
        between every pair of vertices within a permissible distortion. Typically,
        the allowed distortion is a multiplicative factor (of the original distances)
        and is referred to as stretch. Efficient multiplicative spanners, based on
        finding low diameter decompositions, have been studied in the distributed
        and parallel settings. Most of these studies aim to find spanners with theoretical
        guarantees on the stretch and spanner size. The spanner size guarantees obtained
        in these works are not very useful for real world sparse graphs. In this work,
        we evaluate and compare the state of the art algorithms for multiplicative
        spanners on real world and synthetic graphs. We propose a heuristic that aims
        to reduce the size of the output spanner. When combined with existing approaches,
        it admits similar theoretical guarantees as described in prior work while
        yielding considerably smaller spanners. Our heuristic builds on the idea of
        selecting centers with large neighborhoods and growing clusters around them.
        We present a parallel algorithm for selecting a large set of cluster centers
        based on this heuristic. We evaluate our algorithms on 18 real world graphs
        from the SNAP data set and 3 well studied synthetic graphs. We demonstrate
        that our heuristic yields spanners with significantly fewer edges - up to
        6x smaller on real world graphs and up to 20x smaller on synthetic graphs,
        compared to baselines from prior work.", "venue": "International Conference
        on Supercomputing", "year": 2023, "referenceCount": 24, "citationCount": 0,
        "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
        "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
        Science", "source": "external"}, {"category": "Computer Science", "source":
        "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle", "Conference"],
        "publicationDate": "2023-06-21", "journal": {"name": "Proceedings of the 37th
        International Conference on Supercomputing"}, "authors": [{"authorId": "2220314809",
        "name": "Maulein Pathak"}, {"authorId": "1787471", "name": "Yogish Sabharwal"},
        {"authorId": "36031531", "name": "Neelima Gupta"}]}, {"paperId": "a419b621eab3fb34073aa6f0ed31892ead05140f",
        "externalIds": {"DOI": "10.1145/3583668.3594566", "CorpusId": 259177917},
        "corpusId": 259177917, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/a419b621eab3fb34073aa6f0ed31892ead05140f",
        "title": "Brief Announcement: Minimum Cost Maximum Flow in the CONGEST Model",
        "abstract": "We consider the CONGEST model on a network with n nodes, m edges,
        diameter D, and integer costs and capacities bounded by poly n. In this paper,
        we show how to find an exact solution to the minimum cost flow problem in
        n1/2+o(1)(\u221an + D) rounds, improving the state of the art algorithm with
        running time m3/7+o(1)(\u221anD1/4 + D)[13], which only holds for the special
        case of unit capacity graphs. For certain graphs, we achieve even better results.
        In particular, for planar graphs, expander graphs, no(1)-genus graphs, no(1)-treewidth
        graphs, and excluded-minor graphs our algorithm takes n1/2+o(1) D rounds.
        We obtain this result by combining recent results on Laplacian solvers in
        the CONGEST model [2, 13] with a CONGEST implementation of the LP solver of
        Lee and Sidford [22], and finally show that we can round the approximate solution
        to an exact solution. Our algorithm solves certain linear programs, that generalize
        minimum cost flow, up to additive error \u03f5 in n1/2+o(1)(\u221an + D)log3(1/\u03f5)
        rounds.", "venue": "Proceedings of the 2023 ACM Symposium on Principles of
        Distributed Computing", "year": 2023, "referenceCount": 35, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
        "https://dl.acm.org/doi/pdf/10.1145/3583668.3594566", "status": "BRONZE"},
        "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["Book"], "publicationDate": "2023-06-16", "journal":
        {"name": "Proceedings of the 2023 ACM Symposium on Principles of Distributed
        Computing"}, "authors": [{"authorId": "2178707701", "name": "Tijn de Vos"}]},
        {"paperId": "a58c1fc08f51eee1f09c2c89d2b7e54ce106b13e", "externalIds": {"DBLP":
        "journals/corr/abs-2307-02107", "ArXiv": "2307.02107", "DOI": "10.48550/arXiv.2307.02107",
        "CorpusId": 259341922}, "corpusId": 259341922, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/a58c1fc08f51eee1f09c2c89d2b7e54ce106b13e",
        "title": "Exact and Parameterized Algorithms for the Independent Cutset Problem",
        "abstract": "The Independent Cutset problem asks whether there is a set of
        vertices in a given graph that is both independent and a cutset. Such a problem
        is $\\textsf{NP}$-complete even when the input graph is planar and has maximum
        degree five. In this paper, we first present a $\\mathcal{O}^*(1.4423^{n})$-time
        algorithm for the problem. We also show how to compute a minimum independent
        cutset (if any) in the same running time. Since the property of having an
        independent cutset is MSO$_1$-expressible, our main results are concerned
        with structural parameterizations for the problem considering parameters that
        are not bounded by a function of the clique-width of the input. We present
        $\\textsf{FPT}$-time algorithms for the problem considering the following
        parameters: the dual of the maximum degree, the dual of the solution size,
        the size of a dominating set (where a dominating set is given as an additional
        input), the size of an odd cycle transversal, the distance to chordal graphs,
        and the distance to $P_5$-free graphs. We close by introducing the notion
        of $\\alpha$-domination, which allows us to identify more fixed-parameter
        tractable and polynomial-time solvable cases.", "venue": "arXiv.org", "year":
        2023, "referenceCount": 36, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Mathematics", "source": "external"},
        {"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-05", "journal": {"name": "ArXiv", "volume": "abs/2307.02107"},
        "authors": [{"authorId": "108663176", "name": "J. Rauch"}, {"authorId": "1750221",
        "name": "D. Rautenbach"}, {"authorId": "1959676", "name": "U. Souza"}]}, {"paperId":
        "46557220829a41152c594c8d7388732b1e3ba352", "externalIds": {"ArXiv": "2307.02951",
        "CorpusId": 259360924}, "corpusId": 259360924, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/46557220829a41152c594c8d7388732b1e3ba352",
        "title": "Lower (total) mutual visibility in graphs", "abstract": "Given a
        graph $G$, a set $X$ of vertices in $G$ satisfying that between every two
        vertices in $X$ (respectively, in $G$) there is a shortest path whose internal
        vertices are not in $X$ is a mutual-visibility (respectively, total mutual-visibility)
        set in $G$. The cardinality of a largest (total) mutual-visibility set in
        $G$ is known under the name (total) mutual-visibility number, and has been
        studied in several recent works. In this paper, we propose two lower variants
        of the mentioned concepts, defined as the smallest possible cardinality among
        all maximal (total) mutual-visibility sets in $G$, and denote them by $\\mu^{-}(G)$
        and $\\mu_t^{-}(G)$, respectively. While the total mutual-visibility number
        is never larger than the mutual-visibility number in a graph $G$, we prove
        that both differences $\\mu^{-}(G)-\\mu_t^{-}(G)$ and $\\mu_t^{-}(G)-\\mu^{-}(G)$
        can be arbitrarily large. We characterize graphs $G$ with some small values
        of $\\mu^{-}(G)$ and $\\mu_t^{-}(G)$, and prove a useful tool called Neighborhood
        Lemma, which enables us to find upper bounds on the lower mutual-visibility
        number in several classes of graphs. We compare the lower mutual-visibility
        number with the lower general position number, and find a close relationship
        with Bollob\\''{a}s-Wessel theorem when this number is considered in Cartesian
        products of complete graphs. Finally, we also prove the NP-completeness of
        the decision problem related to $\\mu_t^{-}(G)$.", "venue": "", "year": 2023,
        "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-07-06",
        "journal": null, "authors": [{"authorId": "102795720", "name": "Bovstjan Brevsar"},
        {"authorId": "3162346", "name": "I. Yero"}]}, {"paperId": "aa22f1f3945fd1ce471efdaa7bf6da0612385845",
        "externalIds": {"DBLP": "journals/corr/abs-2307-07440", "ArXiv": "2307.07440",
        "DOI": "10.48550/arXiv.2307.07440", "CorpusId": 259924885}, "corpusId": 259924885,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/aa22f1f3945fd1ce471efdaa7bf6da0612385845",
        "title": "A simple deterministic near-linear time approximation scheme for
        transshipment with arbitrary positive edge costs", "abstract": "We describe
        a simple deterministic near-linear time approximation scheme for uncapacitated
        minimum cost flow in undirected graphs with real edge weights, a problem also
        known as transshipment. Specifically, our algorithm takes as input a (connected)
        undirected graph $G = (V, E)$, vertex demands $b \\in \\mathbb{R}^V$ such
        that $\\sum_{v \\in V} b(v) = 0$, positive edge costs $c \\in \\mathbb{R}_{>0}^E$,
        and a parameter $\\varepsilon>0$. In $O(\\varepsilon^{-2} m \\log^{O(1)} n)$
        time, it returns a flow $f$ such that the net flow out of each vertex is equal
        to the vertex''s demand and the cost of the flow is within a $(1 + \\varepsilon)$
        factor of optimal. Our algorithm is combinatorial and has no running time
        dependency on the demands or edge costs. With the exception of a recent result
        presented at STOC 2022 for polynomially bounded edge weights, all almost-
        and near-linear time approximation schemes for transshipment relied on randomization
        in two main ways: 1) to embed the problem instance into low-dimensional space
        and 2) to randomly pick target locations to send flow so nearby opposing demands
        can be satisfied. Our algorithm instead deterministically approximates the
        cost of routing decisions that would be made if the input were subject to
        a random tree embedding. To avoid computing the $\\Omega(n^2)$ vertex-vertex
        distances that an approximation of this kind suggests, we also limit the available
        routing decisions using distances explicitly stored in the well-known Thorup-Zwick
        distance oracle.", "venue": "arXiv.org", "year": 2023, "referenceCount": 19,
        "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-14", "journal": {"name": "ArXiv", "volume": "abs/2307.07440"},
        "authors": [{"authorId": "2223540131", "name": "Emily Fox"}]}, {"paperId":
        "13f11eac60110442e00349f4094bb3ff697521e4", "externalIds": {"DBLP": "journals/corr/abs-2307-08505",
        "ArXiv": "2307.08505", "DOI": "10.48550/arXiv.2307.08505", "CorpusId": 259937130},
        "corpusId": 259937130, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/13f11eac60110442e00349f4094bb3ff697521e4",
        "title": "Approximation Algorithms for the Graph Burning on Cactus and Directed
        Trees", "abstract": "Given a graph $G=(V, E)$, the problem of Graph Burning
        is to find a sequence of nodes from $V$, called a burning sequence, to burn
        the whole graph. This is a discrete-step process, and at each step, an unburned
        vertex is selected as an agent to spread fire to its neighbors by marking
        it as a burnt node. A burnt node spreads the fire to its neighbors at the
        next consecutive step. The goal is to find the burning sequence of minimum
        length. The Graph Burning problem is NP-Hard for general graphs and even for
        binary trees. A few approximation results are known, including a $ 3$-approximation
        algorithm for general graphs and a $ 2$-approximation algorithm for trees.
        The Graph Burning on directed graphs is more challenging than on undirected
        graphs. In this paper, we propose 1) A $2.75$-approximation algorithm for
        a cactus graph (undirected), 2) A $3$-approximation algorithm for multi-rooted
        directed trees (polytree) and 3) A $1.905$-approximation algorithm for single-rooted
        directed tree (arborescence). We implement all the three approximation algorithms
        and the results are shown for randomly generated cactus graphs and directed
        trees.", "venue": "arXiv.org", "year": 2023, "referenceCount": 21, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-17", "journal":
        {"name": "ArXiv", "volume": "abs/2307.08505"}, "authors": [{"authorId": "2132621016",
        "name": "Rahul Gautam"}, {"authorId": "3067556", "name": "Anjeneya Swami Kare"},
        {"authorId": "144041491", "name": "S. Bhavani"}]}, {"paperId": "dda5098fa90ced4dc8365727b0ca44260d55ca6b",
        "externalIds": {"CorpusId": 260172989}, "corpusId": 260172989, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/dda5098fa90ced4dc8365727b0ca44260d55ca6b",
        "title": "Balanced Separator Theorem for Unit Disk Graphs with Applications",
        "abstract": ". In this paper, we establish a novel balanced separator theorem
        for Unit Disk Graphs (UDGs) , which mimics the well-known Lipton and Tarjan\u2019s
        planar balanced shortest paths separator theorem. We prove that, in any n
        -vertex UDG G , one can \ufb01nd two hop-shortest paths P ( s, x ) and P (
        s, y ) such that the removal of the 3-hop-neighborhood of these paths (i.e.,
        N 3 G [ P ( s, x ) \u222a P ( s, y )]) from G leaves no connected component
        with more than 2 / 3 n vertices. This new balanced shortest-paths\u20143-hop-neighborhood
        separator theorem allows us to build, for any n -vertex UDG G , a system T
        ( G ) of at most 2 log 3 2 n + 2 spanning trees of G such that, for any two
        vertices x and y of G , there exists a tree T in T ( G ) with d T ( x, y )
        \u2264 3 \u00b7 d G ( x, y ) + 12. That is, the distances in any UDG can be
        approximately represented by the distances in at most 2 log 32 n + 2 of its
        spanning trees. Using these results, we propose a new compact and low delay
        routing labeling scheme for UDGs. They often model wireless ad hoc networks.
        We show that one can assign each vertex of an n -vertex UDG G a compact O
        (log 2 n )-bit label such that, given the label of a source vertex and the
        label of a destination, it is possible to compute e\ufb03ciently, based solely
        on these two labels, a neighbor of the source vertex that heads in the direction
        of the destination. We prove that this routing labeling scheme has a constant
        hop route-stretch (= hop delay ), i.e., for each two vertices x and y of G
        , it produces a routing path with h ( x, y ) hops (edges) such that h ( x,
        y ) \u2264 3 \u00b7 d G ( x, y ) + 12, where d G ( x, y ) is the hop distance
        between x and y in G . To the best of our knowledge, this is the \ufb01rst
        compact routing scheme for UDGs which not only guaranties delivery but has
        a low hop delay. It is easy to see that, for UDGs, a constant hop route-stretch
        implies a constant length route-stretch and a constant power route-stretch
        .", "venue": "", "year": 2008, "referenceCount": 34, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": null, "authors": [{"authorId": "34991966",
        "name": "Chenyu Yan"}, {"authorId": "144608443", "name": "Yang Xiang"}, {"authorId":
        "1757152", "name": "F. Dragan"}]}, {"paperId": "0825ad3f54bfc9b45b7be84f219b1922062c37ef",
        "externalIds": {"ArXiv": "2308.04695", "CorpusId": 260736307}, "corpusId":
        260736307, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0825ad3f54bfc9b45b7be84f219b1922062c37ef",
        "title": "Deterministic $k$-Vertex Connectivity in $k^2$ Max-flows", "abstract":
        "An $n$-vertex $m$-edge graph is \\emph{$k$-vertex connected} if it cannot
        be disconnected by deleting less than $k$ vertices. After more than half a
        century of intensive research, the result by [Li et al. STOC''21] finally
        gave a \\emph{randomized} algorithm for checking $k$-connectivity in near-optimal
        $\\widehat{O}(m)$ time. (We use $\\widehat{O}(\\cdot)$ to hide an $n^{o(1)}$
        factor.) Deterministic algorithms, unfortunately, have remained much slower
        even if we assume a linear-time max-flow algorithm: they either require at
        least $\\Omega(mn)$ time [Even''75; Henzinger Rao and Gabow, FOCS''96; Gabow,
        FOCS''00] or assume that $k=o(\\sqrt{\\log n})$ [Saranurak and Yingchareonthawornchai,
        FOCS''22]. We show a \\emph{deterministic} algorithm for checking $k$-vertex
        connectivity in time proportional to making $\\widehat{O}(k^{2})$ max-flow
        calls, and, hence, in $\\widehat{O}(mk^{2})$ time using the deterministic
        max-flow algorithm by [Brand et al. FOCS''23]. Our algorithm gives the first
        almost-linear-time bound for all $k$ where $\\sqrt{\\log n}\\le k\\le n^{o(1)}$
        and subsumes up to a sub polynomial factor the long-standing state-of-the-art
        algorithm by [Even''75] which requires $O(n+k^{2})$ max-flow calls. Our key
        technique is a deterministic algorithm for terminal reduction for vertex connectivity:
        given a terminal set separated by a vertex mincut, output either a vertex
        mincut or a smaller terminal set that remains separated by a vertex mincut.
        We also show a deterministic $(1+\\epsilon)$-approximation algorithm for vertex
        connectivity that makes $O(n/\\epsilon^2)$ max-flow calls, improving the bound
        of $O(n^{1.5})$ max-flow calls in the exact algorithm of [Gabow, FOCS''00].
        The technique is based on Ramanujan graphs.", "venue": "", "year": 2023, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        "2023-08-09", "journal": null, "authors": []}, {"paperId": "3dec9414fbb4bc767c51e287d3260fbb03b3a5c3",
        "externalIds": {"CorpusId": 260618842}, "corpusId": 260618842, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/3dec9414fbb4bc767c51e287d3260fbb03b3a5c3",
        "title": "Some results on k -step Hamiltonian graph", "abstract": "Let G (
        V, E ) be a simple graph with | V | = n vertices and | E | = m edges. A graph
        G is said to admit an AL ( k ) -traversal if there exists a sequence of vertices
        { v 1 , v 2 , . . . , v n } such for each i = 1 , 2 , . . . , n \u2212 1,
        the distance for v i and v i + 1 is equal to k . The graph G is called a k
        -step Hamiltonian graph if it has an AL ( k ) -traversal in G and d ( v 1
        , v n ) = k . In this paper, we obtain results of the investigation of property
        k -step Hamiltonian on some graph operations such that line graph, join of
        two graphs and jump graph of certain graphs. We investigate k -step Hamiltonicity
        for some graph families.", "venue": "", "year": 2023, "referenceCount": 11,
        "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": null, "authors": []}, {"paperId": "bcb831095577a215841874a1f252038e691d78e6",
        "externalIds": {"DOI": "10.1117/12.2679167", "CorpusId": 259177421}, "corpusId":
        259177421, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/bcb831095577a215841874a1f252038e691d78e6",
        "title": "Gr\u00f6bner bases method for solving N-path in finite graph and
        its application", "abstract": "Let G be a finite directed graph with no loop
        and no heavy edges, or an undirected graph with no loops and no edges. \ud835\udc41
        is a given natural number. This paper proves that the existence problem of
        two paths with length \ud835\udc41 in G (referred to as \ud835\udc41-path)
        is completely equivalent to the solutions of a multivariate of polynomial
        \ud835\udc41 the range of {0,1} or {0,1, \u22121}. Therefore, the Gr\u00f6bner
        bases method can be used to give an effective discrimination of the existence
        of the solution. This result can be applied to solve the problems of cutting
        edge judgment, tree and forest judgment in G.", "venue": "Conference on Pure,
        Applied, and Computational Mathematics", "year": 2023, "referenceCount": 7,
        "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Engineering"], "s2FieldsOfStudy":
        [{"category": "Engineering", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
        "2023-06-14", "journal": {"pages": "127250N - 127250N-8", "volume": "12725"},
        "authors": [{"authorId": "2146628666", "name": "Zhiqin Zhao"}, {"authorId":
        "2220158622", "name": "Xuewei Xiong"}]}, {"paperId": "c1fab9cf4da1b9acc779483060c8d35f54ee20e0",
        "externalIds": {"DBLP": "journals/corr/abs-2307-13964", "ArXiv": "2307.13964",
        "DOI": "10.48550/arXiv.2307.13964", "CorpusId": 260165015}, "corpusId": 260165015,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/c1fab9cf4da1b9acc779483060c8d35f54ee20e0",
        "title": "Recognition of chordal graphs and cographs which are Cover-Incomparability
        graphs", "abstract": "Cover-Incomparability graphs (C-I graphs) are an interesting
        class of graphs from posets. A C-I graph is a graph from a poset $P=(V,\\le)$
        with vertex set $V$, and the edge-set is the union of edge sets of the cover
        graph and the incomparability graph of the poset. The recognition of the C-I
        graphs is known to be NP-complete (Maxov\\''{a} et al., Order 26(3), 229--236(2009)).
        In this paper, we prove that chordal graphs having at most two independent
        simplicial vertices are exactly the chordal graphs which are also C-I graphs.
        A similar result is obtained for cographs as well. Using the structural results
        of these graphs, we derive linear time recognition algorithms for chordal
        graphs and cographs, which are C-I graphs.", "venue": "arXiv.org", "year":
        2023, "referenceCount": 38, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Mathematics", "source": "external"},
        {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
        ["JournalArticle"], "publicationDate": "2023-07-26", "journal": {"name": "ArXiv",
        "volume": "abs/2307.13964"}, "authors": [{"authorId": "2088222034", "name":
        "Arun Anil"}, {"authorId": "1802965", "name": "M. Changat"}]}, {"paperId":
        "06abe41a2920fbe546cf522e4e77ca27e58d06e3", "externalIds": {"DOI": "10.5817/cz.muni.eurocomb23-113",
        "CorpusId": 259197745}, "corpusId": 259197745, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/06abe41a2920fbe546cf522e4e77ca27e58d06e3",
        "title": "Semidegree, edge density and antidirected subgraphs", "abstract":
        "An oriented graph is called {\\it anti\\-directed} if it has no directed
        path with $2$ edges. We prove that asymptotically, any oriented graph $D$
        of minimum semidegree greater than $\\frac k2$ contains every balanced antidirected
        tree of bounded degree and with $k$ edges, and $D$ also contains every antidirected
        subdivision $H$ of a sufficiently small complete graph~$K_h$, with a mild
        restriction on the lengths of the antidirected paths in $H$ replacing the
        edges of $K_h$, and with $H$ having a total of $k$ edges. \\\\ Further, we
        address a conjecture of Addario-Berry, Havet, Linhares Sales, Reed and Thomass\\\u2018e
        stating that every digraph on $n$ vertices and with more than $(k-1)n$ edges
        contains all antidirected trees with $k$ edges. We show that their conjecture
        is asymptotically true in oriented graphs for balanced antidirected trees
        of bounded degree and size linear in $n$.", "venue": "European Conference
        on Combinatorics, Graph Theory and Applications", "year": 2023, "referenceCount":
        15, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
        "openAccessPdf": {"url": "https://journals.muni.cz/eurocomb/article/download/35647/30383",
        "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": "2023-08-28", "journal": {"name": "European
        Conference on Combinatorics, Graph Theory and Applications"}, "authors": [{"authorId":
        "145175439", "name": "M. Stein"}, {"authorId": "2220264861", "name": "Camila
        Z\u00e1rate-Guer\u00e9n"}]}, {"paperId": "37a41e86be51583641b7b37a827acaf3f268b90e",
        "externalIds": {"DBLP": "journals/corr/abs-2306-17811", "ArXiv": "2306.17811",
        "DOI": "10.48550/arXiv.2306.17811", "CorpusId": 259309327}, "corpusId": 259309327,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/37a41e86be51583641b7b37a827acaf3f268b90e",
        "title": "Safe Edges: A Study of Triangulation in Fill-in and Tree-Width Problems",
        "abstract": "This paper considers two well-studied problems \\textsc{Minimum
        Fill-In} (\\textsc{Min Fill-In}) and \\textsc{Treewidth}. Since both problems
        are \\textsf{NP}-hard, various reduction rules simplifying an input graph
        have been intensively studied to better understand the structural properties
        relevant to these problems. Bodlaender at el. introduced the concept of a
        safe edge that is included in a solution of the \\textsc{Minimum Fill-In}
        problem and showed some initial results. In this paper, we extend their result
        and prove a new condition for an edge set to be safe. This in turn helps us
        to construct a novel reduction tool for \\textsc{Min Fill-In} that we use
        to answer other questions related to the problem. In this paper, we also study
        another interesting research question: Whether there exists a triangulation
        that answers both problems \\textsc{Min Fill-In} and \\textsc{Treewidth}.
        To formalise our study, we introduce a new parameter reflecting a distance
        of triangulations optimising both problems. We present some initial results
        regarding this parameter and study graph classes where both problems can be
        solved with one triangulation.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-06-30", "journal": {"name": "ArXiv", "volume": "abs/2306.17811"},
        "authors": [{"authorId": "2038590407", "name": "Mani Ghahremani"}, {"authorId":
        "2192558645", "name": "Janka Chleb\u00edkov\u00e1"}]}, {"paperId": "d089d297d411c32351ecbf66d03d17916823de4b",
        "externalIds": {"DBLP": "journals/corr/abs-2306-16203", "ArXiv": "2306.16203",
        "DOI": "10.48550/arXiv.2306.16203", "CorpusId": 259274765}, "corpusId": 259274765,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/d089d297d411c32351ecbf66d03d17916823de4b",
        "title": "New Dynamic Programming Algorithm for the Multiobjective Minimum
        Spanning Tree Problem", "abstract": "The Multiobjective Minimum Spanning Tree
        (MO-MST) problem is a variant of the Minimum Spanning Tree problem, in which
        the costs associated with every edge of the input graph are vectors. In this
        paper, we design a new dynamic programming MO-MST algorithm. Dynamic programming
        for a MO-MST instance leads to the definition of an instance of the One-to-One
        Multiobjective Shortest Path (MOSP) problem and both instances have equivalent
        solution sets. The arising MOSP instance is defined on a so called transition
        graph. We study the original size of this graph in detail and reduce its size
        using cost dependent arc pruning criteria. To solve the MOSP instance on the
        reduced transition graph, we design the Implicit Graph Multiobjective Dijkstra
        Algorithm (IG-MDA), exploiting recent improvements on MOSP algorithms from
        the literature. All in all, the new IG-MDA outperforms the current state of
        the art on a big set of instances from the literature. Our code and results
        are publicly available.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-06-28", "journal": {"name": "ArXiv", "volume": "abs/2306.16203"},
        "authors": [{"authorId": "2054318157", "name": "P. M. Casas"}, {"authorId":
        "1398710244", "name": "A. Sede\u00f1o-Noda"}, {"authorId": "2529463", "name":
        "R. Bornd\u00f6rfer"}]}, {"paperId": "14ff05abdebe4630526a012185eed8a9adcfceaa",
        "externalIds": {"DBLP": "conf/icalp/Lokshtanov0S23", "DOI": "10.4230/LIPIcs.ICALP.2023.90",
        "CorpusId": 259336021}, "corpusId": 259336021, "publicationVenue": "d024be26-06b0-4afe-8fa3-a297e04fe604",
        "url": "https://www.semanticscholar.org/paper/14ff05abdebe4630526a012185eed8a9adcfceaa",
        "title": "Breaking the All Subsets Barrier for Min k-Cut", "abstract": "In
        the Min k -Cut problem, the input is a graph G and an integer k . The task
        is to find a partition of the vertex set of G into k parts, while minimizing
        the number of edges that go between different parts of the partition. The
        problem is NP -complete, and admits a simple 3 n \u00b7 n O (1) time dynamic
        programming algorithm, which can be improved to a 2 n \u00b7 n O (1) time
        algorithm using the fast subset convolution framework by Bj\u00f6rklund et
        al. [STOC\u201907]. In this paper we give an algorithm for Min k -Cut with
        running time O ((2 \u2212 \u03b5 ) n ), for \u03b5 > 10 \u2212 50 . This is
        the first algorithm for Min k -Cut with running time O ( c n ) for c < 2.",
        "venue": "International Colloquium on Automata, Languages and Programming",
        "year": 2023, "referenceCount": 59, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null,
        "journal": {"pages": "90:1-90:19"}, "authors": [{"authorId": "1733989", "name":
        "D. Lokshtanov"}, {"authorId": "143621584", "name": "Saket Saurabh"}, {"authorId":
        "1667847715", "name": "Vaishali Surianarayanan"}]}, {"paperId": "c88db8ea74270d3ceffaaaf098f06dd228ecc4a5",
        "externalIds": {"DBLP": "conf/sand/BoeckmannTW23", "DOI": "10.4230/LIPIcs.SAND.2023.9",
        "CorpusId": 259149961}, "corpusId": 259149961, "publicationVenue": "88656b98-f228-4d01-8ba8-d9bc1a4c9dec",
        "url": "https://www.semanticscholar.org/paper/c88db8ea74270d3ceffaaaf098f06dd228ecc4a5",
        "title": "Complexity of the Temporal Shortest Path Interdiction Problem",
        "abstract": "In the shortest path interdiction problem, an interdictor aims
        to remove arcs of total cost at most a given budget from a directed graph
        with given arc costs and traversal times such that the length of a shortest
        s - t -path is maximized. For static graphs, this problem is known to be strongly
        NP -hard, and it has received considerable attention in the literature. While
        the shortest path problem is one of the most fundamental and well-studied
        problems also for temporal graphs, the shortest path interdiction problem
        has not yet been formally studied on temporal graphs, where common definitions
        of a \u201cshortest path\u201d include: latest start path (path with maximum
        start time), earliest arrival path (path with minimum arrival time), shortest
        duration path (path with minimum traveling time including waiting times at
        nodes), and shortest traversal path (path with minimum traveling time not
        including waiting times at nodes). In this paper, we analyze the complexity
        of the shortest path interdiction problem on temporal graphs with respect
        to all four definitions of a shortest path mentioned above. Even though the
        shortest path interdiction problem on static graphs is known to be strongly
        NP -hard, we show that the latest start and the earliest arrival path interdiction
        problems on temporal graphs are polynomial-time solvable. For the shortest
        duration and shortest traversal path interdiction problems, however, we show
        strong NP -hardness, but we obtain polynomial-time algorithms for these problems
        on extension-parallel temporal graphs.", "venue": "Symposium on Algorithmic
        Foundations of Dynamic Networks", "year": 2023, "referenceCount": 39, "citationCount":
        1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        null, "journal": {"pages": "9:1-9:20"}, "authors": [{"authorId": "4290754",
        "name": "J. Boeckmann"}, {"authorId": "3047082", "name": "Clemens Thielen"},
        {"authorId": "2220005407", "name": "Alina Wittmann"}]}, {"paperId": "71f9623f14e05a964cb72545c6043fc4ae44c17f",
        "externalIds": {"DOI": "10.1002/net.22164", "CorpusId": 259481716}, "corpusId":
        259481716, "publicationVenue": "69d79d4c-49aa-4c2b-b616-80100a634f67", "url":
        "https://www.semanticscholar.org/paper/71f9623f14e05a964cb72545c6043fc4ae44c17f",
        "title": "Achieving feasibility for clustered traveling salesman problems
        using PQ\u2010trees", "abstract": "Let H=\u27e8V,\ud835\udcae\u27e9 be a hypergraph,
        where V$$ V $$ is a set of vertices and \ud835\udcae is a set of clusters
        S1,\u2026,Sm$$ {S}_1,\\dots, {S}_m $$ , Si\u2286V$$ {S}_i\\subseteq V $$ ,
        such that the clusters in \ud835\udcae are not necessarily disjoint. This
        article considers the feasibility clustered traveling salesman problem, denoted
        by FCTSP$$ FCTSP $$ . In the FCTSP$$ FCTSP $$ we aim to decide whether a simple
        path exists that visits each vertex exactly once, such that the vertices of
        each cluster are visited consecutively. We focus on hypergraphs with no feasible
        solution path and consider removing vertices from clusters, such that the
        hypergraph with the new clusters has a feasible solution path for FCTSP$$
        FCTSP $$ . The algorithm uses a PQ\u2010tree data structure and runs in linear
        time.", "venue": "Networks", "year": 2023, "referenceCount": 15, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-06-15", "journal": {"name": "Networks", "pages": "153 - 166", "volume":
        "82"}, "authors": [{"authorId": "1403386965", "name": "Nili Guttmann-Beck"},
        {"authorId": "2221778213", "name": "Hadas Meshita\u2010Sayag"}, {"authorId":
        "1883807", "name": "M. Stern"}]}, {"paperId": "cabac452efd3e72b4a603fa36da8c10ab1778861",
        "externalIds": {"ArXiv": "2307.05829", "DBLP": "journals/corr/abs-2307-05829",
        "DOI": "10.48550/arXiv.2307.05829", "CorpusId": 259837352}, "corpusId": 259837352,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/cabac452efd3e72b4a603fa36da8c10ab1778861",
        "title": "Distance-Preserving Graph Compression Techniques", "abstract": "We
        study the problem of distance-preserving graph compression for weighted paths
        and trees. The problem entails a weighted graph $G = (V, E)$ with non-negative
        weights, and a subset of edges $E^{\\prime} \\subset E$ which needs to be
        removed from G (with their endpoints merged as a supernode). The goal is to
        redistribute the weights of the deleted edges in a way that minimizes the
        error. The error is defined as the sum of the absolute differences of the
        shortest path lengths between different pairs of nodes before and after contracting
        $E^{\\prime}$. Based on this error function, we propose optimal approaches
        for merging any subset of edges in a path and a single edge in a tree. Previous
        works on graph compression techniques aimed at preserving different graph
        properties (such as the chromatic number) or solely focused on identifying
        the optimal set of edges to contract. However, our focus in this paper is
        on achieving optimal edge contraction (when the contracted edges are provided
        as input) specifically for weighted trees and paths.", "venue": "arXiv.org",
        "year": 2023, "referenceCount": 34, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-11", "journal": {"name": "ArXiv", "volume": "abs/2307.05829"},
        "authors": [{"authorId": "2123024816", "name": "Amirali Madani"}, {"authorId":
        "144763652", "name": "A. Maheshwari"}]}, {"paperId": "8102b0e299ce932fabda2a0ddc592ef0742137e2",
        "externalIds": {"CorpusId": 259380955}, "corpusId": 259380955, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/8102b0e299ce932fabda2a0ddc592ef0742137e2",
        "title": "Parameterized algorithms for connectivity, separation, and modi\ufb01cation
        problems in graphs", "abstract": "Graph problems are ubiquitous in computer
        science. Graphs are one of the most natural models that represent the networks
        in real-life world and have numerous applications in different disciplines.
        Computer scientists are perusing faster algorithms to solve graph problems,
        both in practice and in theory. On the other side, there are many graph problems
        which are resistant to efficient algorithms. NP-completeness theory provides
        some clue on these problems [29, 74, 54]. If a problem is shown to be in the
        class of NP-complete problems, any efficient or polynomial-time algorithms
        for this problem imply that every NP-complete problem admits polynomial-time
        algorithms. In other words, there are probably no efficient algorithms for
        this problem. Although NP-hardness imply strong restrictions of algorithms
        for problems, people are still interested in how fast a problem can be solved
        and where the limitations of algorithms are. Exact algorithms for NPhard problems
        focus mostly on reducing the exponential part of the running time as much
        as possible [49]. Approximation algorithms for NP-hard (optimization) problems
        aim to find efficient algorithms, classically polynomial-time algorithms at
        the cost of the optimality of the solution. Approximation algorithms try to
        find an approximate solution such that the distance between the approximate
        solution and the optimal solution is within a provable guarantee [114, 115].
        Recently parameterized algorithms for NP-hard problems have received a lot
        of attention, which focus on both the input instance and the parameter. More
        formally, a parameterized problem is a language L \u2286 \u03a3\u2217\u00d7N,
        where \u03a3 is a fixed finite alphabet. An input instance of a parameterized
        problem is of the form (x, k) \u2208 \u03a3\u2217\u00d7N and k is called the
        parameter. If a parameterized problem can be solved in time bounded by f(k)|x|,
        where |x| is the size of the input instance, k is the parameter, f : N \u2192
        N is a computable function, and c is a universal constant, then we say this
        problem is fixed-parameter tractable (FPT). If a parameterized problem can
        be solved in time bounded by f(k)|x|, where |x| is the size of the input instance,
        k is the parameter and f : N\u2192 N is a computable function, then we say
        this problem can be solved in XP time. A parameterized problem admits a kernel
        of size g(k) for some computable function g if there is a polynomial-time
        procedure that reduces an arbitrary instance I of this problem with parameter
        k to an equivalent instance I \u2032 with size and parameter value bounded
        by g(k). We refer to the following books for a deeper introduction to parameterized
        algorithms [41, 48, 30, 51]. In this thesis, we study a few graph problems,
        mostly concerning connectivity and separation in graphs.", "venue": "", "year":
        2021, "referenceCount": 108, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": null, "authors": [{"authorId": "1576068159",
        "name": "Shaohua Li"}]}, {"paperId": "3a99c01dc4f914b00f693018832b81e69604e79c",
        "externalIds": {"ArXiv": "2306.10182", "DBLP": "journals/corr/abs-2306-10182",
        "DOI": "10.48550/arXiv.2306.10182", "CorpusId": 259203872}, "corpusId": 259203872,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/3a99c01dc4f914b00f693018832b81e69604e79c",
        "title": "Learning Spanning Forests Optimally using CUT Queries in Weighted
        Undirected Graphs", "abstract": "In this paper we describe a randomized algorithm
        which returns a maximal spanning forest of an unknown {\\em weighted} undirected
        graph making $O(n)$ $\\mathsf{CUT}$ queries in expectation. For weighted graphs,
        this is optimal due to a result in [Auza and Lee, 2021] which shows an $\\Omega(n)$
        lower bound for zero-error randomized algorithms. %To our knowledge, it is
        the only regime of this problem where we have upper and lower bounds tight
        up to constants. These questions have been extensively studied in the past
        few years, especially due to the problem''s connections to symmetric submodular
        function minimization. We also describe a simple polynomial time deterministic
        algorithm that makes $O(\\frac{n\\log n}{\\log\\log n})$ queries on undirected
        unweighted graphs and returns a maximal spanning forest, thereby (slightly)
        improving upon the state-of-the-art.", "venue": "arXiv.org", "year": 2023,
        "referenceCount": 40, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-06-16", "journal": {"name": "ArXiv", "volume": "abs/2306.10182"}, "authors":
        [{"authorId": "2067746874", "name": "Hang Liao"}, {"authorId": "1731029",
        "name": "Deeparnab Chakrabarty"}]}, {"paperId": "2eb5585b6ea939a6edc7cd10c8b90256f1285c06",
        "externalIds": {"ArXiv": "2307.15879", "DBLP": "journals/corr/abs-2307-15879",
        "DOI": "10.48550/arXiv.2307.15879", "CorpusId": 260334577}, "corpusId": 260334577,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/2eb5585b6ea939a6edc7cd10c8b90256f1285c06",
        "title": "Search for shortest paths based on the projective description of
        unweighted graphs", "abstract": "A new method of representing graph projections
        in computer memory is proposed, which is more informative than matrix and
        list data structures based on elementary relations of vertices adjacency or
        edge incidences. The class of graphs considered in this study is expanded
        to include mixed graphs containing both undirected and directed edges (arcs).
        A new method for searching the shortest routes based on this approach is also
        proposed. The results of the general and special (for compact graphs) analysis
        of the asymptotic complexity of this method in solving typical SPP problems
        (Shortest Path Problem) show that the developed method is highly efficient
        and will find its application not only in information networks, where there
        are particularly high requirements for the topology of computing systems and
        the efficiency of finding shortest routes, but also in other scientific, technical,
        transport and economic fields.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        22, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Mathematics", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-29", "journal": {"name": "ArXiv", "volume": "abs/2307.15879"},
        "authors": [{"authorId": "1403056871", "name": "V. A. Melent''ev"}]}, {"paperId":
        "922f9e06062621a776d51b17e37263413d9b505b", "externalIds": {"ArXiv": "2308.00555",
        "CorpusId": 260351199}, "corpusId": 260351199, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/922f9e06062621a776d51b17e37263413d9b505b",
        "title": "Shortcut Partitions in Minor-Free Graphs: Steiner Point Removal,
        Distance Oracles, Tree Covers, and More", "abstract": "The notion of shortcut
        partition, introduced recently by Chang, Conroy, Le, Milenkovi\\''c, Solomon,
        and Than [CCLMST23], is a new type of graph partition into low-diameter clusters.
        Roughly speaking, the shortcut partition guarantees that for every two vertices
        $u$ and $v$ in the graph, there exists a path between $u$ and $v$ that intersects
        only a few clusters. They proved that any planar graph admits a shortcut partition
        and gave several applications, including a construction of tree cover for
        arbitrary planar graphs with stretch $1+\\varepsilon$ and $O(1)$ many trees
        for any fixed $\\varepsilon \\in (0,1)$. However, the construction heavily
        exploits planarity in multiple steps, and is thus inherently limited to planar
        graphs. In this work, we breach the\"planarity barrier\"to construct a shortcut
        partition for $K_r$-minor-free graphs for any $r$. To this end, we take a
        completely different approach -- our key contribution is a novel deterministic
        variant of the cop decomposition in minor-free graphs [And86, AGG14]. Our
        shortcut partition for $K_r$-minor-free graphs yields several direct applications.
        Most notably, we construct the first optimal distance oracle for $K_r$-minor-free
        graphs, with $1+\\varepsilon$ stretch, linear space, and constant query time
        for any fixed $\\varepsilon \\in (0,1)$. The previous best distance oracle
        [AG06] uses $O(n\\log n)$ space and $O(\\log n)$ query time, and its construction
        relies on Robertson-Seymour structural theorem and other sophisticated tools.
        We also obtain the first tree cover of $O(1)$ size for minor-free graphs with
        stretch $1+\\varepsilon$, while the previous best $(1+\\varepsilon)$-tree
        cover has size $O(\\log^2 n)$ [BFN19].", "venue": "", "year": 2023, "referenceCount":
        49, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
        "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-07-31",
        "journal": null, "authors": [{"authorId": "3359035", "name": "Hsien-Chih Chang"},
        {"authorId": "2086221363", "name": "Jonathan Conroy"}, {"authorId": "143725625",
        "name": "Hung Le"}, {"authorId": "103114199", "name": "Lazar Milenkovi\u0107"},
        {"authorId": "2248804", "name": "Shay Solomon"}, {"authorId": "1739873", "name":
        "Cuong V. Than"}]}, {"paperId": "57e5df1a029dc989e09c05af1dda5b200a9d623f",
        "externalIds": {"CorpusId": 259344218}, "corpusId": 259344218, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/57e5df1a029dc989e09c05af1dda5b200a9d623f",
        "title": "Advanced Heuristic and Approximation Algorithms (M2)", "abstract":
        "Exercise 2 Tournaments A tournament T = (V,A) is an oriented complete graph:
        for each pair of distinct vertices i and j in V , there is either an arc ij
        or ji (but not both). A tournament is strongly connected if for each pair
        of distinct vertices i and j in V , there is a directed path from i to j and
        a directed path from j to i. a. Prove or disprove: A strongly connected tournament
        on at least three vertices contains a directed triangle. (A directed triangle
        consists of the arcs ij, jk and ki where i, j and k are three distinct vertices.)",
        "venue": "", "year": 2018, "referenceCount": 6, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": null, "authors": []}, {"paperId":
        "08d1006e645ea459477d7ef07b2faa0cf4a0b3fc", "externalIds": {"DBLP": "journals/corr/abs-2307-04446",
        "ArXiv": "2307.04446", "DOI": "10.48550/arXiv.2307.04446", "CorpusId": 259847184},
        "corpusId": 259847184, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/08d1006e645ea459477d7ef07b2faa0cf4a0b3fc",
        "title": "Bounding the chromatic number of dense digraphs by arc neighborhoods",
        "abstract": "The chromatic number of a directed graph is the minimum number
        of induced acyclic subdigraphs that cover its vertex set, and accordingly,
        the chromatic number of a tournament is the minimum number of transitive subtournaments
        that cover its vertex set. The neighborhood of an arc $uv$ in a tournament
        $T$ is the set of vertices that form a directed triangle with arc $uv$. We
        show that if the neighborhood of every arc in a tournament has bounded chromatic
        number, then the whole tournament has bounded chromatic number. This holds
        more generally for oriented graphs with bounded independence number, and we
        extend our proof from tournaments to this class of dense digraphs. As an application,
        we prove the equivalence of a conjecture of El-Zahar and Erd\\H{o}s and a
        recent conjecture of Nguyen, Scott and Seymour relating the structure of graphs
        and tournaments with high chromatic number.", "venue": "arXiv.org", "year":
        2023, "referenceCount": 19, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Mathematics", "source": "external"},
        {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
        ["JournalArticle"], "publicationDate": "2023-07-10", "journal": {"name": "ArXiv",
        "volume": "abs/2307.04446"}, "authors": [{"authorId": "2216066434", "name":
        "Felix Klingelhoefer"}, {"authorId": "16711490", "name": "Alantha Newman"}]},
        {"paperId": "525888a95ddae43d70ad7571b83b97ff8963051d", "externalIds": {"DOI":
        "10.1017/mag.2023.57", "CorpusId": 259309615}, "corpusId": 259309615, "publicationVenue":
        "992e3995-f295-4778-a913-3fe2f227da3f", "url": "https://www.semanticscholar.org/paper/525888a95ddae43d70ad7571b83b97ff8963051d",
        "title": "A graph related to the Euler \u00f8 function", "abstract": "In mathematics,
        graph theory is the study of graphs, which are mathematical structures used
        to model pairwise relations between objects. A graph G is a pair G = (V, E),
        where V and E are the vertex set and the edge set of G, respectively. The
        order and size of G is the number of vertices and edges of G, respectively.
        The degree or valency of a vertex u in a graph G (loopless), denoted by deg
        (u), is the number of edges meeting at u. If, for every vertex \u03bd in G,
        deg (\u03bd) = k, we say that G is a k-regular graph. The cycle of order n
        is denoted by Cn and is a connected 2-regular graph. The path graph of order
        n is denoted by Pn and obtain by deleting an edge of Cn. A tree is an undirected
        graph in which any two vertices are connected by exactly one path, or equivalently
        a connected undirected graph without cycle. A leaf (or pendant vertex) of
        a tree is a vertex of the tree of degree 1. An edge of a graph is said to
        be pendant if one of its vertices is a pendant vertex. A complete bipartite
        graph is a graph G with and such that every vertex of the set (part) X is
        connected to every vertex of the set (part) Y. If , then this graph is denoted
        by Km,n. The complete bipartite graph K1,n is called the star graph which
        has n + 1 vertices. The distance between two vertices u and \u03bd of G, denoted
        by d (u, \u03bd), is defined as the minimum number of edges of the walks between
        them. The complement of graph G is denoted by and is a graph with the same
        vertices such that two distinct vertices of are adjacent if, and only if,
        they are not adjacent in G. For more information on graphs, refer to [1].",
        "venue": "Mathematical Gazette", "year": 2023, "referenceCount": 7, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-07-01", "journal": {"name": "The Mathematical Gazette", "pages": "263
        - 272", "volume": "107"}, "authors": [{"authorId": "2968116", "name": "Nima
        Ghanbari"}, {"authorId": "34606741", "name": "S. Alikhani"}]}, {"paperId":
        "3e4be4ba0646c50fa4e40f45aed28a5bd5d71d5c", "externalIds": {"ArXiv": "2307.04446",
        "CorpusId": 259501335}, "corpusId": 259501335, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/3e4be4ba0646c50fa4e40f45aed28a5bd5d71d5c",
        "title": "Bounding the chromatic number of tournaments by arc neighborhoods",
        "abstract": "The chromatic number of a directed graph is the minimum number
        of induced acyclic subdigraphs that cover its vertex set, and accordingly,
        the chromatic number of a tournament is the minimum number of transitive subtournaments
        that cover its vertex set. The neighborhood of an arc $uv$ in a tournament
        $T$ is the set of vertices that form a directed triangle with arc $uv$. We
        show that if the neighborhood of every arc in a tournament has bounded chromatic
        number, then the whole tournament has bounded chromatic number. We show that
        this holds more generally for oriented graphs with bounded independence number,
        which we use to prove the equivalence of a conjecture of El-Zahar and Erd\\H{o}s
        and a recent conjecture of Nguyen, Scott and Seymour relating the structure
        of graphs and tournaments with high chromatic number.", "venue": "", "year":
        2023, "referenceCount": 17, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics",
        "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
        "external"}, {"category": "Computer Science", "source": "external"}, {"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        "2023-07-10", "journal": null, "authors": [{"authorId": "2216066434", "name":
        "Felix Klingelhoefer"}, {"authorId": "16711490", "name": "Alantha Newman"}]},
        {"paperId": "4545828f888bd53402b1212fcf2a8eb9de260ad8", "externalIds": {"DBLP":
        "journals/corr/abs-2306-17097", "ArXiv": "2306.17097", "DOI": "10.48550/arXiv.2306.17097",
        "CorpusId": 259287179}, "corpusId": 259287179, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/4545828f888bd53402b1212fcf2a8eb9de260ad8",
        "title": "Oriented Spanners", "abstract": "Given a point set $P$ in the Euclidean
        plane and a parameter $t$, we define an \\emph{oriented $t$-spanner} as an
        oriented subgraph of the complete bi-directed graph such that for every pair
        of points, the shortest cycle in $G$ through those points is at most a factor
        $t$ longer than the shortest oriented cycle in the complete bi-directed graph.
        We investigate the problem of computing sparse graphs with small oriented
        dilation. As we can show that minimising oriented dilation for a given number
        of edges is NP-hard in the plane, we first consider one-dimensional point
        sets. While obtaining a $1$-spanner in this setting is straightforward, already
        for five points such a spanner has no plane embedding with the leftmost and
        rightmost point on the outer face. This leads to restricting to oriented graphs
        with a one-page book embedding on the one-dimensional point set. For this
        case we present a dynamic program to compute the graph of minimum oriented
        dilation that runs in $O(n^8)$ time for $n$ points, and a greedy algorithm
        that computes a $5$-spanner in $O(n\\log n)$ time. Expanding these results
        finally gives us a result for two-dimensional point sets: we prove that for
        convex point sets the greedy triangulation results in an oriented $O(1)$-spanner.",
        "venue": "arXiv.org", "year": 2023, "referenceCount": 22, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
        "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-06-29", "journal":
        {"name": "ArXiv", "volume": "abs/2306.17097"}, "authors": [{"authorId": "1989519",
        "name": "K. Buchin"}, {"authorId": "1696160", "name": "Joachim Gudmundsson"},
        {"authorId": "2220831293", "name": "Antonia Kalb"}, {"authorId": "41174390",
        "name": "Aleksandr Popov"}, {"authorId": "27730064", "name": "Carolin Rehs"},
        {"authorId": "1774223", "name": "Andr\u00e9 van Renssen"}, {"authorId": "7847196",
        "name": "Sampson Wong"}]}, {"paperId": "e82cfe8f8c9f8144c5e09c84f1c3ed08bedbe289",
        "externalIds": {"MAG": "2491886730", "DBLP": "journals/dam/Crespelle0T19",
        "DOI": "10.1007/978-3-662-53174-7_8", "CorpusId": 14560081}, "corpusId": 14560081,
        "publicationVenue": "d62ca42c-06bc-40ff-9463-4ec00915599b", "url": "https://www.semanticscholar.org/paper/e82cfe8f8c9f8144c5e09c84f1c3ed08bedbe289",
        "title": "An O(n^2) Time Algorithm for the Minimal Permutation Completion
        Problem", "abstract": null, "venue": "International Workshop on Graph-Theoretic
        Concepts in Computer Science", "year": 2015, "referenceCount": 31, "citationCount":
        4, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Computer
        Science", "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2015-06-17", "journal":
        {"name": "Discret. Appl. Math.", "pages": "80-95", "volume": "254"}, "authors":
        [{"authorId": "2211944", "name": "C. Crespelle"}, {"authorId": "36592196",
        "name": "Anthony Perez"}, {"authorId": "2553209", "name": "I. Todinca"}]},
        {"paperId": "1f8c06da94a516b4931e67d06ab495d52fc53f10", "externalIds": {"ArXiv":
        "2307.07676", "DBLP": "journals/corr/abs-2307-07676", "DOI": "10.48550/arXiv.2307.07676",
        "CorpusId": 259937566}, "corpusId": 259937566, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/1f8c06da94a516b4931e67d06ab495d52fc53f10",
        "title": "Computing SEQ-IC-LCS of Labeled Graphs", "abstract": "We consider
        labeled directed graphs where each vertex is labeled with a non-empty string.
        Such labeled graphs are also known as non-linear texts in the literature.
        In this paper, we introduce a new problem of comparing two given labeled graphs,
        called the SEQ-IC-LCS problem on labeled graphs. The goal of SEQ-IC-LCS is
        to compute the the length of the longest common subsequence (LCS) $Z$ of two
        target labeled graphs $G_1 = (V_1, E_1)$ and $G_2 = (V_2, E_2)$ that includes
        some string in the constraint labeled graph $G_3 = (V_3, E_3)$ as its subsequence.
        Firstly, we consider the case where $G_1$, $G_2$ and $G_3$ are all acyclic,
        and present algorithms for computing their SEQ-IC-LCS in $O(|E_1||E_2||E_3|)$
        time and $O(|V_1||V_2||V_3|)$ space. Secondly, we consider the case where
        $G_1$ and $G_2$ can be cyclic and $G_3$ is acyclic, and present algorithms
        for computing their SEQ-IC-LCS in $O(|E_1||E_2||E_3| + |V_1||V_2||V_3|\\log|\\Sigma|)$
        time and $O(|V_1||V_2||V_3|)$ space, where $\\Sigma$ is the alphabet.", "venue":
        "arXiv.org", "year": 2023, "referenceCount": 43, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-15", "journal": {"name": "ArXiv", "volume": "abs/2307.07676"},
        "authors": [{"authorId": "2074086859", "name": "Yukio Yonemoto"}, {"authorId":
        "2720596", "name": "Yuto Nakashima"}, {"authorId": "2351735", "name": "Shunsuke
        Inenaga"}]}, {"paperId": "220966cdefc59c6707ad507f93327e1d6311692c", "externalIds":
        {"DBLP": "journals/corr/abs-2306-16389", "ArXiv": "2306.16389", "DOI": "10.48550/arXiv.2306.16389",
        "CorpusId": 259274824}, "corpusId": 259274824, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/220966cdefc59c6707ad507f93327e1d6311692c",
        "title": "Finding the connected components of the graph using perturbations
        of the adjacency matrix", "abstract": "The problem of finding the connected
        components of a graph is considered. The algorithms addressed to solve the
        problem are used to solve such problems on graphs as problems of finding points
        of articulation, bridges, maximin bridge, etc. A natural approach to solving
        this problem is a breadth-first search, the implementations of which are presented
        in software libraries designed to maximize the use of the capabi\\-lities
        of modern computer architectures. We present an approach using perturbations
        of adjacency matrix of a graph. We check wether the graph is connected or
        not by comparing the solutions of the two systems of linear algebraic equations
        (SLAE): the first SLAE with a perturbed adjacency matrix of the graph and
        the second SLAE with~unperturbed matrix. This approach makes it possible to
        use effective numerical implementations of SLAE solution methods to solve
        connectivity problems on graphs. Iterations of iterative numerical methods
        for solving such SLAE can be considered as carrying out a graph traversal.
        Generally speaking, the traversal is not equivalent to the traversal that
        is carried out with breadth-first search. An algorithm for finding the connected
        components of a graph using such a traversal is presented. For any instance
        of the problem, this algorithm has no greater computational complexity than
        breadth-first search, and for~most individual problems it has less complexity.",
        "venue": "arXiv.org", "year": 2023, "referenceCount": 14, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-06-28", "journal":
        {"name": "ArXiv", "volume": "abs/2306.16389"}, "authors": [{"authorId": "2673585",
        "name": "A. Prolubnikov"}]}, {"paperId": "8c179c7783dd23c39b6053e7344046bd0fd74e40",
        "externalIds": {"ArXiv": "2308.04575", "CorpusId": 260735645}, "corpusId":
        260735645, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/8c179c7783dd23c39b6053e7344046bd0fd74e40",
        "title": "On the Complexity of Finding a Sparse Connected Spanning Subgraph
        in a non-Uniform Failure Model", "abstract": "We study a generalization of
        the classic Spanning Tree problem that allows for a non-uniform failure model.
        More precisely, edges are either \\emph{safe} or \\emph{unsafe} and we assume
        that failures only affect unsafe edges. In Unweighted Flexible Graph Connectivity
        we are given an undirected graph $G = (V,E)$ in which the edge set $E$ is
        partitioned into a set $S$ of safe edges and a set $U$ of unsafe edges and
        the task is to find a set $T$ of at most $k$ edges such that $T - \\{u\\}$
        is connected and spans $V$ for any unsafe edge $u \\in T$. Unweighted Flexible
        Graph Connectivity generalizes both Spanning Tree and Hamiltonian Cycle. We
        study Unweighted Flexible Graph Connectivity in terms of fixed-parameter tractability
        (FPT). We show an almost complete dichotomy on which parameters lead to fixed-parameter
        tractability and which lead to hardness. To this end, we obtain FPT-time algorithms
        with respect to the vertex deletion distance to cluster graphs and with respect
        to the treewidth. By exploiting the close relationship to Hamiltonian Cycle,
        we show that FPT-time algorithms for many smaller parameters are unlikely
        under standard parameterized complexity assumptions. Regarding problem-specific
        parameters, we observe that Unweighted Flexible Graph Connectivity} admits
        an FPT-time algorithm when parameterized by the number of unsafe edges. Furthermore,
        we investigate a below-upper-bound parameter for the number of edges of a
        solution. We show that this parameter also leads to an FPT-time algorithm.",
        "venue": "", "year": 2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": "2023-08-08", "journal": null, "authors": []}, {"paperId":
        "a359dee15fc732832911d534bb3fc05cf7cc081b", "externalIds": {"ArXiv": "2307.01341",
        "DBLP": "journals/corr/abs-2307-01341", "DOI": "10.48550/arXiv.2307.01341",
        "CorpusId": 259341901}, "corpusId": 259341901, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/a359dee15fc732832911d534bb3fc05cf7cc081b",
        "title": "Polynomial-time Approximation of Independent Set Parameterized by
        Treewidth", "abstract": "We prove the following result about approximating
        the maximum independent set in a graph. Informally, we show that any approximation
        algorithm with a ``non-trivial'''' approximation ratio (as a function of the
        number of vertices of the input graph $G$) can be turned into an approximation
        algorithm achieving almost the same ratio, albeit as a function of the treewidth
        of $G$. More formally, we prove that for any function $f$, the existence of
        a polynomial time $(n/f(n))$-approximation algorithm yields the existence
        of a polynomial time $O(tw \\cdot\\log{f(tw)}/f(tw))$-approximation algorithm,
        where $n$ and $tw$ denote the number of vertices and the width of a given
        tree decomposition of the input graph. By pipelining our result with the state-of-the-art
        $O(n \\cdot (\\log \\log n)^2/\\log^3 n)$-approximation algorithm by Feige
        (2004), this implies an $O(tw \\cdot (\\log \\log tw)^3/\\log^3 tw)$-approximation
        algorithm.", "venue": "arXiv.org", "year": 2023, "referenceCount": 16, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-03", "journal":
        {"name": "ArXiv", "volume": "abs/2307.01341"}, "authors": [{"authorId": "3154315",
        "name": "Parinya Chalermsook"}, {"authorId": "1744120", "name": "F. Fomin"},
        {"authorId": "1388868700", "name": "Thekla Hamm"}, {"authorId": "32319688",
        "name": "T. Korhonen"}, {"authorId": "1691242", "name": "Jesper Nederlof"},
        {"authorId": "2944226", "name": "L. Orgo"}]}, {"paperId": "bb9c92af406653857164bcda843acf6fbf47246c",
        "externalIds": {"DBLP": "journals/corr/abs-2307-02205", "ArXiv": "2307.02205",
        "DOI": "10.48550/arXiv.2307.02205", "CorpusId": 259342870}, "corpusId": 259342870,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/bb9c92af406653857164bcda843acf6fbf47246c",
        "title": "An Approximation Algorithm for the Exact Matching Problem in Bipartite
        Graphs", "abstract": "In 1982 Papadimitriou and Yannakakis introduced the
        Exact Matching problem, in which given a red and blue edge-colored graph $G$
        and an integer $k$ one has to decide whether there exists a perfect matching
        in $G$ with exactly $k$ red edges. Even though a randomized polynomial-time
        algorithm for this problem was quickly found a few years later, it is still
        unknown today whether a deterministic polynomial-time algorithm exists. This
        makes the Exact Matching problem an important candidate to test the RP=P hypothesis.
        In this paper we focus on approximating Exact Matching. While there exists
        a simple algorithm that computes in deterministic polynomial-time an almost
        perfect matching with exactly $k$ red edges, not a lot of work focuses on
        computing perfect matchings with almost $k$ red edges. In fact such an algorithm
        for bipartite graphs running in deterministic polynomial-time was published
        only recently (STACS''23). It outputs a perfect matching with $k''$ red edges
        with the guarantee that $0.5k \\leq k'' \\leq 1.5k$. In the present paper
        we aim at approximating the number of red edges without exceeding the limit
        of $k$ red edges. We construct a deterministic polynomial-time algorithm,
        which on bipartite graphs computes a perfect matching with $k''$ red edges
        such that $k/3 \\leq k'' \\leq k$.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        25, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-05", "journal":
        {"name": "ArXiv", "volume": "abs/2307.02205"}, "authors": [{"authorId": "2122840191",
        "name": "Anita D\u00fcrr"}, {"authorId": "2122932981", "name": "Nicolas El
        Maalouly"}, {"authorId": "51150974", "name": "Lasse Wulf"}]}, {"paperId":
        "d47dadbcc38fdbae6d27a6999b2bdc62a763d93a", "externalIds": {"DBLP": "conf/aaai/DuSC23",
        "DOI": "10.1609/aaai.v37i10.26463", "CorpusId": 259746143}, "corpusId": 259746143,
        "publicationVenue": "bdc2e585-4e48-4e36-8af1-6d859763d405", "url": "https://www.semanticscholar.org/paper/d47dadbcc38fdbae6d27a6999b2bdc62a763d93a",
        "title": "Ultrafast Euclidean Shortest Path Computation Using Hub Labeling",
        "abstract": "Finding shortest paths in a Euclidean plane containing polygonal
        obstacles is a well-studied problem motivated by a variety of real-world applications.
        \nThe state-of-the-art algorithms require finding obstacle corners visible
        to the source and target, and need to consider potentially a large number
        of candidate paths. This adversely affects their query processing cost. We
        address these limitations by proposing a novel adaptation of hub labeling
        which is the state-of-the-art approach for shortest distance computation in
        road networks. Our experimental study conducted on the widely used benchmark
        maps shows that our approach is typically 1-2 orders of magnitude faster than
        two state-of-the-art algorithms.", "venue": "AAAI Conference on Artificial
        Intelligence", "year": 2023, "referenceCount": 16, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ojs.aaai.org/index.php/AAAI/article/download/26463/26235",
        "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": "2023-06-26", "journal": {"pages": "12417-12426"},
        "authors": [{"authorId": "2223296703", "name": "Jinchun Du"}, {"authorId":
        "89248240", "name": "Bojie Shen"}, {"authorId": "3110314", "name": "M. A.
        Cheema"}]}, {"paperId": "c7f847e1257ab17d199fd284898a5f4a1f19e87f", "externalIds":
        {"DBLP": "conf/cpm/Charalampopoulos23", "DOI": "10.4230/LIPIcs.CPM.2023.8",
        "CorpusId": 259213691}, "corpusId": 259213691, "publicationVenue": "25085e3f-671a-46a2-a7d6-dd5563940ec8",
        "url": "https://www.semanticscholar.org/paper/c7f847e1257ab17d199fd284898a5f4a1f19e87f",
        "title": "Optimal Near-Linear Space Heaviest Induced Ancestors", "abstract":
        "We revisit the Heaviest Induced Ancestors (HIA) problem that was introduced
        by Gagie, Gawrychowski, and Nekrich [CCCG 2013] and has a number of applications
        in string algorithms. Let T1 and T2 be two rooted trees whose nodes have weights
        that are increasing in all root-to-leaf paths, and labels on the leaves, such
        that no two leaves of a tree have the same label. A pair of nodes (u, v) \u2208
        T1 \u00d7 T2 is induced if and only if there is a label shared by leaf-descendants
        of u and v. In an HIA query, given nodes x \u2208 T1 and y \u2208 T2, the
        goal is to find an induced pair of nodes (u, v) of the maximum total weight
        such that u is an ancestor of x and v is an ancestor of y. Let n be the upper
        bound on the sizes of the two trees. It is known that no data structure of
        size \u00d5(n) can answer HIA queries in o(log n/ log log n) time [Charalampopoulos,
        Gawrychowski, Pokorski; ICALP 2020].1 This (unconditional) lower bound is
        a polyloglog n factor away from the query time of the fastest \u00d5(n)-size
        data structure known to date for the HIA problem [Abedin, Hooshmand, Ganguly,
        Thankachan; Algorithmica 2022]. In this work, we resolve the query-time complexity
        of the HIA problem for the near-linear space regime by presenting a data structure
        that can be built in \u00d5(n) time and answers HIA queries in O(log n/ log
        log n) time. As a direct corollary, we obtain an \u00d5(n)-size data structure
        that maintains the LCS of a static string and a dynamic string, both of length
        at most n, in time optimal for this space regime. The main ingredients of
        our approach are fractional cascading and the utilization of an O(log n/ log
        log n)-depth tree decomposition. The latter allows us to break through the
        \u03a9(log n) barrier faced by previous works, due to the depth of the considered
        heavy-path decompositions. 2012 ACM Subject Classification Theory of computation
        \u2192 Pattern matching", "venue": "Annual Symposium on Combinatorial Pattern
        Matching", "year": 2023, "referenceCount": 23, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
        {"pages": "8:1-8:18"}, "authors": [{"authorId": "3440697", "name": "P. Charalampopoulos"},
        {"authorId": "8597780", "name": "B. Dudek"}, {"authorId": "1683786", "name":
        "Pawe\u0142 Gawrychowski"}, {"authorId": "1736552620", "name": "Karol Pokorski"}]},
        {"paperId": "37fa3a261a3b5f55ce93a262e622cdf7aa3b4cc0", "externalIds": {"DBLP":
        "journals/corr/abs-2306-11185", "ArXiv": "2306.11185", "DOI": "10.48550/arXiv.2306.11185",
        "CorpusId": 259204068}, "corpusId": 259204068, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/37fa3a261a3b5f55ce93a262e622cdf7aa3b4cc0",
        "title": "Quasipolynomiality of the Smallest Missing Induced Subgraph", "abstract":
        "We study the problem of finding the smallest graph that does not occur as
        an induced subgraph of a given graph. This missing induced subgraph has at
        most logarithmic size and can be found by a brute-force search, in an $n$-vertex
        graph, in time $n^{O(\\log n)}$. We show that under the Exponential Time Hypothesis
        this quasipolynomial time bound is optimal. We also consider variations of
        the problem in which either the missing subgraph or the given graph comes
        from a restricted graph family; for instance, we prove that the smallest missing
        planar induced subgraph of a given planar graph can be found in polynomial
        time.", "venue": "arXiv.org", "year": 2023, "referenceCount": 43, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-06-19", "journal": {"name": "ArXiv", "volume": "abs/2306.11185"}, "authors":
        [{"authorId": "1719358", "name": "D. Eppstein"}, {"authorId": "48652964",
        "name": "Andrea Lincoln"}, {"authorId": "2275118", "name": "V. V. Williams"}]},
        {"paperId": "ef605f911a0254919134b7604a6cc1452adc2584", "externalIds": {"CorpusId":
        259371643}, "corpusId": 259371643, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ef605f911a0254919134b7604a6cc1452adc2584",
        "title": "Partitioning Metric Spaces", "abstract": "2. Consider the following
        algorithm for the Minimum Multiway Cut problem. Find sets S1, . . . , Sk as
        described above. Remove all edges cut by cuts (S1, S\u03041), . . . , (Sk,
        S\u0304k). We get a partition of G into a number of connected components.
        Let Pi be the connected component that contains si. If a connected component
        does not contain any terminals, merge it with an arbitrary set Pi. Show that
        this algorithm gives 2 approximation for the problem.", "venue": "", "year":
        2023, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": null, "authors": [{"authorId": "103683723",
        "name": "Yu. S. Makarychev"}]}, {"paperId": "c9284628b733d09c1f866e3eda87fc631383c2dc",
        "externalIds": {"CorpusId": 259318051}, "corpusId": 259318051, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/c9284628b733d09c1f866e3eda87fc631383c2dc",
        "title": "J ul 2 02 3 Generating faster algorithms for d-Path Vertex Cover
        ( full version ) \u22c6", "abstract": "Many algorithms which exactly solve
        hard problems require branching on more or less complex structures in order
        to do their job. Those who design such algorithms often find themselves doing
        a meticulous analysis of numerous different cases in order to identify these
        structures and design suitable branching rules, all done by hand. This process
        tends to be error prone and often the resulting algorithm may be difficult
        to implement in practice. In this work, we aim to automate a part of this
        process and focus on the simplicity of the resulting implementation. We showcase
        our approach on the following problem. For a constant d, the d-Path Vertex
        Cover problem (d-PVC) is as follows: Given an undirected graph and an integer
        k, find a subset of at most k vertices of the graph, such that their deletion
        results in a graph not containing a path on d vertices as a subgraph. We develop
        a fully automated framework to generate parameterized branching algorithms
        for the problem and obtain algorithms outperforming those previously known
        for 3 \u2264 d \u2264 8, e.g., we show that 5-PVC can be solved in O(2.7 \u00b7
        n) time.", "venue": "", "year": 2023, "referenceCount": 44, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
        [{"authorId": "1416396683", "name": "Radovan Cerven\u00fd"}, {"authorId":
        "1785031", "name": "O. Such\u00fd"}]}, {"paperId": "8a648a534f6b0f333726663bfa0186a4d0cf3c50",
        "externalIds": {"ArXiv": "2307.00786", "DBLP": "journals/corr/abs-2307-00786",
        "DOI": "10.48550/arXiv.2307.00786", "CorpusId": 259316351}, "corpusId": 259316351,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/8a648a534f6b0f333726663bfa0186a4d0cf3c50",
        "title": "An FTP Algorithm for Temporal Graph Untangling", "abstract": "Several
        classical combinatorial problems have been considered and analysed on temporal
        graphs. Recently, a variant of Vertex Cover on temporal graphs, called MinTimelineCover,
        has been introduced to summarize timeline activities in social networks. The
        problem asks to cover every temporal edge while minimizing the total span
        of the vertices (where the span of a vertex is the length of the timestamp
        interval it must remain active in, minus one). While the problem has been
        shown to be NP-hard even in very restricted cases, its parameterized complexity
        has not been fully understood. The problem is known to be in FPT under the
        span parameter only for graphs with two timestamps, but the parameterized
        complexity for the general case is open. We settle this open problem by giving
        an FPT algorithm that is based on a combination of iterative compression and
        a reduction to the Digraph Pair Cut problem, a powerful problem that has received
        significant attention recently.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        20, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-03", "journal": {"name": "ArXiv", "volume": "abs/2307.00786"},
        "authors": [{"authorId": "2545736", "name": "R. Dondi"}, {"authorId": "2652176",
        "name": "Manuel Lafond"}]}, {"paperId": "f27af8a7f2a9dffcc3ea0fa3483bf9ee8acaa1d7",
        "externalIds": {"DOI": "10.3390/math11122712", "CorpusId": 259473615}, "corpusId":
        259473615, "publicationVenue": "6175efe8-6f8e-4cbe-8cee-d154f4e78627", "url":
        "https://www.semanticscholar.org/paper/f27af8a7f2a9dffcc3ea0fa3483bf9ee8acaa1d7",
        "title": "The Longest (s, t)-Path Problem on O-Shaped Supergrid Graphs", "abstract":
        "The longest (s,t)-path problem on supergrid graphs is known to be NP-complete.
        However, the complexity of this problem on supergrid graphs with or without
        holes is still unknown.In the past, we presented linear-time algorithms for
        solving the longest (s,t)-path problem on L-shaped and C-shaped supergrid
        graphs, which form subclasses of supergrid graphs without holes. In this paper,
        we will determine the complexity of the longest (s,t)-path problem on O-shaped
        supergrid graphs, which form a subclass of supergrid graphs with holes. These
        graphs are rectangular supergrid graphs with rectangular holes. It is worth
        noting that O-shaped supergrid graphs contain L-shaped and C-shaped supergrid
        graphs as subgraphs, but there is no inclusion relationship between them.
        We will propose a linear-time algorithm to solve the longest (s,t)-path problem
        on O-shaped supergrid graphs. The longest (s,t)-paths of O-shaped supergrid
        graphs have applications in calculating the minimum trace when printing hollow
        objects using computer embroidery machines and 3D printers.", "venue": "Mathematics",
        "year": 2023, "referenceCount": 16, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/2227-7390/11/12/2712/pdf?version=1687173361",
        "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-06-15", "journal": {"name": "Mathematics"}, "authors":
        [{"authorId": "1401555504", "name": "Fatemeh Keshavarz-Kohjerdi"}, {"authorId":
        "2265124", "name": "Ruo-Wei Hung"}]}, {"paperId": "5b3d4f9d3483d90000349e2cc3f828e295332c71",
        "externalIds": {"DBLP": "journals/corr/abs-2307-05811", "ArXiv": "2307.05811",
        "DOI": "10.48550/arXiv.2307.05811", "CorpusId": 259837111}, "corpusId": 259837111,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/5b3d4f9d3483d90000349e2cc3f828e295332c71",
        "title": "Twin-width of graphs on surfaces", "abstract": "Twin-width is a
        width parameter introduced by Bonnet, Kim, Thomass\\''e and Watrigant [FOCS''20,
        JACM''22], which has many structural and algorithmic applications. We prove
        that the twin-width of every graph embeddable in a surface of Euler genus
        $g$ is $18\\sqrt{47g}+O(1)$, which is asymptotically best possible as it asymptotically
        differs from the lower bound by a constant multiplicative factor. Our proof
        also yields a quadratic time algorithm to find a corresponding contraction
        sequence. To prove the upper bound on twin-width of graphs embeddable in surfaces,
        we provide a stronger version of the Product Structure Theorem for graphs
        of Euler genus $g$ that asserts that every such graph is a subgraph of the
        strong product of a path and a graph with a tree-decomposition with all bags
        of size at most eight with a single exceptional bag of size $\\max\\{8,32g-27\\}$.",
        "venue": "arXiv.org", "year": 2023, "referenceCount": 48, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
        "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-11", "journal":
        {"name": "ArXiv", "volume": "abs/2307.05811"}, "authors": [{"authorId": "1683872",
        "name": "D. Kr\u00e1l"}, {"authorId": "2183082505", "name": "Krist''yna Pek''arkov''a"},
        {"authorId": "1712234126", "name": "Kenny \u0160torgel"}]}, {"paperId": "ac45a9bd5d9cb0e5c68761cf08c5aa1ee05eb37e",
        "externalIds": {"DOI": "10.35378/gujs.1243008", "CorpusId": 260031340}, "corpusId":
        260031340, "publicationVenue": "0bd75d96-747b-4df3-b38d-2eda34615d0e", "url":
        "https://www.semanticscholar.org/paper/ac45a9bd5d9cb0e5c68761cf08c5aa1ee05eb37e",
        "title": "Efficient Algorithm for Dominatig Set In Graph Theory Based on Fundamental
        Cut-Set", "abstract": "Determining the minimum dominating set in connected
        graphs is one of the most difficult problems defined as NP-hard. In this problem,
        it is aimed to determine the important nodes that can influence all nodes
        via the minimum number of nodes on the graph. In this study, an efficient
        near optimal algorithm showing a deterministic approach has been developed
        different from the approximation algorithms mentioned in literature for discovering
        dominating set. The algorithm has O(n3) time complexity in determining the
        Dominating Set (DS). At the same time, the algorithm is a original algorithm
        whose solution is not random by using fundamental cut-set. The DS algorithm
        consists of 3 basic phases. In the first phase of the algorithm, the algorithm
        that constructs the special spanning tree (Karci Max tree) of the graph is
        developed. In the second phase, the algorithm that finds the fundamental cut
        sets using the Kmax spanning tree is developed. In the last phase, Karci centrality
        node values are calculated with fundamental cut set and by using these Karci
        centrality node values, an algorithm has been developed to identify DS nodes.
        As a result of these three phases, the dominance values of the nodes on the
        graph and the DS nodes are calculated. The detected Karci centrality node
        values give priority to the node selection for determining the DS. All phases
        of the developed DS and Efficient node algorithms were coded in R programming
        language and the results were examined by running on sample graphs.", "venue":
        "GAZI UNIVERSITY JOURNAL OF SCIENCE", "year": 2023, "referenceCount": 0, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-07-03", "journal": {"name": "GAZI UNIVERSITY JOURNAL OF SCIENCE"}, "authors":
        [{"authorId": "2194863214", "name": "Furkan \u00d6ztemiz"}, {"authorId": "3173758",
        "name": "A. Karc\u0131"}]}, {"paperId": "1aed6404dfc4f2d469c3d68c0794d92e9759f2e4",
        "externalIds": {"DBLP": "conf/compgeom/HolmHR23", "DOI": "10.4230/LIPIcs.SoCG.2023.40",
        "CorpusId": 259140042}, "corpusId": 259140042, "publicationVenue": "5774ac3d-29e7-4fbe-a3dd-f563db387a6a",
        "url": "https://www.semanticscholar.org/paper/1aed6404dfc4f2d469c3d68c0794d92e9759f2e4",
        "title": "Worst-Case Deterministic Fully-Dynamic Biconnectivity in Changeable
        Planar Embeddings", "abstract": "We study dynamic planar graphs with n vertices,
        subject to edge deletion, edge contraction, edge insertion across a face,
        and the splitting of a vertex in specified corners. We dynamically maintain
        a combinatorial embedding of such a planar graph, subject to connectivity
        and 2-vertex-connectivity (biconnectivity) queries between pairs of vertices.
        Whenever a query pair is connected and not biconnected, we find the first
        and last cutvertex separating them. Additionally, we allow local changes to
        the embedding by flipping the embedding of a subgraph that is connected by
        at most two vertices to the rest of the graph. We support all queries and
        updates in deterministic, worst-case, O (log 2 n ) time, using an O ( n )-sized
        data structure.", "venue": "International Symposium on Computational Geometry",
        "year": 2023, "referenceCount": 43, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": null, "journal": {"pages": "40:1-40:18"},
        "authors": [{"authorId": "1902819", "name": "J. Holm"}, {"authorId": "11952565",
        "name": "I. Hoog"}, {"authorId": "2075610", "name": "E. Rotenberg"}]}, {"paperId":
        "982e3dde5825608ab4cfa57eb1d8540f4463db85", "externalIds": {"DBLP": "conf/podc/ForsterV23",
        "DOI": "10.1145/3583668.3594577", "CorpusId": 259177860}, "corpusId": 259177860,
        "publicationVenue": "cce4d150-8211-4378-a9ef-a234ec19414c", "url": "https://www.semanticscholar.org/paper/982e3dde5825608ab4cfa57eb1d8540f4463db85",
        "title": "Brief Announcement: The Laplacian Paradigm in Deterministic Congested
        Clique", "abstract": "In this paper, we bring the techniques of the Laplacian
        paradigm to the congested clique, while further restricting ourselves to deterministic
        algorithms. In particular, we show how to solve a Laplacian system up to precision
        \u03f5 in no(1) log(1/\u03f5) rounds. We show how to leverage this result
        within existing interior point methods for solving flow problems. We obtain
        an m3/7+o(1) U1/7 round algorithm for maximum flow on a weighted directed
        graph with maximum weight U, and we obtain an \u00d5(m3/7(n0.158 + no(1) poly
        log W)) round algorithm for unit capacity minimum cost flow on a directed
        graph with maximum cost W. Hereto, we give a novel routine for computing Eulerian
        orientations in O(log n log* n) rounds, which we believe may be of separate
        interest.", "venue": "ACM SIGACT-SIGOPS Symposium on Principles of Distributed
        Computing", "year": 2023, "referenceCount": 38, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3583668.3594577",
        "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Book", "Conference"], "publicationDate": "2023-06-16", "journal": {"name":
        "Proceedings of the 2023 ACM Symposium on Principles of Distributed Computing"},
        "authors": [{"authorId": "51487176", "name": "S. Forster"}, {"authorId": "2178707701",
        "name": "Tijn de Vos"}]}, {"paperId": "a23ca0fe90e389cba8bc42145fa9b319ca3de194",
        "externalIds": {"DOI": "10.5817/cz.muni.eurocomb23-066", "CorpusId": 259479328},
        "corpusId": 259479328, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/a23ca0fe90e389cba8bc42145fa9b319ca3de194",
        "title": "On the structure and values of betweenness centrality in dense betweenness-uniform
        graphs", "abstract": "Betweenness centrality is a network centrality measure
        based on the amount of shortest paths passing through a given vertex. A graph
        is betweenness-uniform (BUG) if all vertices have an equal value of betweenness
        centrality. In this contribution, we focus on betweenness-uniform graphs with
        betweenness centrality below one. We disprove a conjecture about the existence
        of a BUG with betweenness value $\\alpha$ for any rational number $\\alpha$
        from the interval $(\\sfrac{3}{4}, \\infty)$ by showing that only very few
        betweenness centrality values below $\\sfrac{6}{7}$ are attained for at least
        one BUG. Furthermore, among graphs with diameter at least three, there are
        no betweenness-uniform graphs with a betweenness centrality smaller than one.
        In graphs of smaller diameter, the same can be shown under a uniformity condition
        on the components of the complement.", "venue": "European Conference on Combinatorics,
        Graph Theory and Applications", "year": 2023, "referenceCount": 12, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
        "https://journals.muni.cz/eurocomb/article/download/35600/30336", "status":
        "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": "2023-08-28", "journal": {"name": "European Conference
        on Combinatorics, Graph Theory and Applications"}, "authors": [{"authorId":
        "2080214349", "name": "Babak Ghanbari"}, {"authorId": "121747770", "name":
        "David Hartman"}, {"authorId": "152426648", "name": "V\u00edt Jel\u00ednek"},
        {"authorId": "52211514", "name": "Aneta Pokorn\u00e1"}, {"authorId": "1763997",
        "name": "Robert \u0160\u00e1mal"}, {"authorId": "49282898", "name": "P. Valtr"}]},
        {"paperId": "f9d89e115236173d3a5f30e381fc7e501a63606b", "externalIds": {"ArXiv":
        "2307.00996", "DBLP": "journals/corr/abs-2307-00996", "DOI": "10.48550/arXiv.2307.00996",
        "CorpusId": 259316801}, "corpusId": 259316801, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/f9d89e115236173d3a5f30e381fc7e501a63606b",
        "title": "Kernelizing Problems on Planar Graphs in Sublinear Space and Polynomial
        Time", "abstract": "In this paper, we devise a scheme for kernelizing, in
        sublinear space and polynomial time, various problems on planar graphs. The
        scheme exploits planarity to ensure that the resulting algorithms run in polynomial
        time and use O((sqrt(n) + k) log n) bits of space, where n is the number of
        vertices in the input instance and k is the intended solution size. As examples,
        we apply the scheme to Dominating Set and Vertex Cover. For Dominating Set,
        we also show that a well-known kernelization algorithm due to Alber et al.
        (JACM 2004) can be carried out in polynomial time and space O(k log n). Along
        the way, we devise restricted-memory procedures for computing region decompositions
        and approximating the aforementioned problems, which might be of independent
        interest.", "venue": "arXiv.org", "year": 2023, "referenceCount": 21, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-03", "journal":
        {"name": "ArXiv", "volume": "abs/2307.00996"}, "authors": [{"authorId": "144984407",
        "name": "A. Biswas"}, {"authorId": "150154310", "name": "Johannes Meintrup"}]},
        {"paperId": "c731afd889043f8439c989b0f6ef79aa9defaa56", "externalIds": {"CorpusId":
        259944011}, "corpusId": 259944011, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/c731afd889043f8439c989b0f6ef79aa9defaa56",
        "title": "\u2113 -Connectivity and \u2113 -edge-connectivity of random graphs",
        "abstract": "For an integer \u2113 \u2265 2, the \u2113 -connectivity \u03ba
        \u2113 ( G ) of a graph G is de(cid:12)ned to be the minimum number of vertices
        of G whose removal produces a disconnected graph with at least \u2113 components
        or a graph with fewer than \u2113 vertices. The \u2113 -edge-connectivity
        \u03bb \u2113 ( G ) of a graph G is the minimum number of edges whose removal
        leaves a graph with at least \u2113 components if | V ( G ) | \u2265 \u2113
        , and \u03bb \u2113 ( G ) = | E ( G ) | if | V ( G ) | < \u2113 . Given integers
        k \u2265 0 and \u2113 \u2265 2, we investigate \u03ba \u2113 ( G ( n, p ))
        and \u03bb \u2113 ( G ( n, p )) when np \u2264 log n + k log log n . Furthermore,
        our arguments can be used to show that in the random graph process, the hitting
        times of minimum degree at least k and of \u2113 -connectivity (or \u2113
        -edge- connectivity) at least k ( \u2113 \u2212 1) coincide with high probability.
        These results generalize the work of Bollob(cid:19)as and Thomason on classical
        connectivity.", "venue": "", "year": 2016, "referenceCount": 20, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "38999533", "name": "Ran Gu"}, {"authorId":
        "2004234069", "name": "Xiaofeng Gu"}, {"authorId": "8064832", "name": "Yongtang
        Shi"}, {"authorId": "2143976220", "name": "Hua Wang"}]}, {"paperId": "661b0e9f4913675320bff4e89ff2d52d09ed8f1f",
        "externalIds": {"DBLP": "journals/jnsm/GomesMCM23", "DOI": "10.1007/s10922-023-09738-z",
        "CorpusId": 259246870}, "corpusId": 259246870, "publicationVenue": "f7486b96-a794-4d6f-9c59-ceb96c3200a8",
        "url": "https://www.semanticscholar.org/paper/661b0e9f4913675320bff4e89ff2d52d09ed8f1f",
        "title": "Two Algorithms for the k-Widest Path Problem", "abstract": null,
        "venue": "Journal of Network and Systems Management", "year": 2023, "referenceCount":
        21, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-06-26", "journal": {"name": "Journal of Network and
        Systems Management", "volume": "31"}, "authors": [{"authorId": "143839908",
        "name": "Teresa Gomes"}, {"authorId": "143626910", "name": "L\u00facia Martins"},
        {"authorId": "2759533", "name": "J. Craveirinha"}, {"authorId": "1752950",
        "name": "D. Medhi"}]}, {"paperId": "4b1185ad8a93ccdfdd25652c627d4efe8ba2618a",
        "externalIds": {"DOI": "10.47191/ijmcr/v11i7.12", "CorpusId": 260224525},
        "corpusId": 260224525, "publicationVenue": "cd41036d-35b8-4a1e-9817-c992f9dfee04",
        "url": "https://www.semanticscholar.org/paper/4b1185ad8a93ccdfdd25652c627d4efe8ba2618a",
        "title": "PRIME LABELLING FOR SOME BIPARTIATE RELATED GRAPHS", "abstract":
        "A graph G =(V,E) with \u2018n\u2019 vertices is said to have a prime labeling
        if its vertices are labelled with distinct positive integers not exceeding
        n such that for each pair of adjacent vertices are relatively prime. A graph
        G which admits prime labeling is called a prime graph. In this paper, we investigate
        prime labeling for some bipartiate and cycle related graphs. We also discuss
        the prime labeling of some graph operation namely joint sum and path joining
        of bipartiate and cycle graphs", "venue": "INTERNATIONAL JOURNAL OF MATHEMATICS
        AND COMPUTER RESEARCH", "year": 2023, "referenceCount": 0, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-07-26", "journal": {"name": "INTERNATIONAL JOURNAL OF MATHEMATICS AND
        COMPUTER RESEARCH"}, "authors": [{"authorId": "2225393514", "name": "Dr.A.
        Ezhil"}]}, {"paperId": "706170d67a5eba64631378534bd45594239e14fb", "externalIds":
        {"DBLP": "journals/corr/abs-2307-05042", "ArXiv": "2307.05042", "DOI": "10.48550/arXiv.2307.05042",
        "CorpusId": 259766380}, "corpusId": 259766380, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/706170d67a5eba64631378534bd45594239e14fb",
        "title": "Direct sampling of short paths for contiguous partitioning", "abstract":
        "In this paper, we provide a family of dynamic programming based algorithms
        to sample nearly-shortest self avoiding walks between two points of the integer
        lattice $\\mathbb{Z}^2$. We show that if the shortest path of between two
        points has length $n$, then we can sample paths (self-avoiding-walks) of length
        $n+O(n^{1-\\delta})$ in polynomial time. As an example of an application,
        we will show that the Glauber dynamics Markov chain for partitions of the
        Aztec Diamonds in $\\mathbb{Z}^2$ into two contiguous regions with nearly
        tight perimeter constraints has exponential mixing time, while the algorithm
        provided in this paper can be used be used to uniformly (and exactly) sample
        such partitions efficiently.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        14, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-07-11", "journal": {"name": "ArXiv", "volume": "abs/2307.05042"}, "authors":
        [{"authorId": "1998665", "name": "W. Pegden"}, {"authorId": "117264912", "name":
        "A. Sevekari"}]}, {"paperId": "5a56f387eae3c8adfc34df3178c125c9da4b8a02",
        "externalIds": {"ArXiv": "2307.16784", "DBLP": "journals/corr/abs-2307-16784",
        "DOI": "10.48550/arXiv.2307.16784", "CorpusId": 260334840}, "corpusId": 260334840,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/5a56f387eae3c8adfc34df3178c125c9da4b8a02",
        "title": "On bipartite coverings of graphs and multigraphs", "abstract": "A
        bipartite covering of a (multi)graph $G$ is a collection of bipartite graphs,
        so that each edge of $G$ belongs to at least one of them. The capacity of
        the covering is the sum of the numbers of vertices of these bipartite graphs.
        In this note we establish a (modest) strengthening of old results of Hansel
        and of Katona and Szemer\\''edi, by showing that the capacity of any bipartite
        covering of a graph on $n$ vertices in which the maximum size of an independent
        set containing vertex number $i$ is $\\alpha_i$, is at least $\\sum_i \\log_2
        (n/\\alpha_i).$ We also obtain slightly improved bounds for a recent result
        of Kim and Lee about the minimum possible capacity of a bipartite covering
        of complete multigraphs.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        4, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-07-31", "journal": {"name": "ArXiv", "volume": "abs/2307.16784"}, "authors":
        [{"authorId": "1734327", "name": "N. Alon"}]}, {"paperId": "574f30e42f4898f5ce4b50e2155603ad50cbdd03",
        "externalIds": {"DBLP": "journals/corr/abs-2306-09128", "ArXiv": "2306.09128",
        "DOI": "10.48550/arXiv.2306.09128", "CorpusId": 259165581}, "corpusId": 259165581,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/574f30e42f4898f5ce4b50e2155603ad50cbdd03",
        "title": "Fast Algorithms for Directed Graph Partitioning Using Flows and
        Reweighted Eigenvalues", "abstract": "We consider a new semidefinite programming
        relaxation for directed edge expansion, which is obtained by adding triangle
        inequalities to the reweighted eigenvalue formulation. Applying the matrix
        multiplicative weight update method to this relaxation, we derive almost linear-time
        algorithms to achieve $O(\\sqrt{\\log{n}})$-approximation and Cheeger-type
        guarantee for directed edge expansion, as well as an improved cut-matching
        game for directed graphs. This provides a primal-dual flow-based framework
        to obtain the best known algorithms for directed graph partitioning. The same
        approach also works for vertex expansion and for hypergraphs, providing a
        simple and unified approach to achieve the best known results for different
        expansion problems and different algorithmic techniques.", "venue": "arXiv.org",
        "year": 2023, "referenceCount": 33, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Mathematics", "source": "external"},
        {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-06-15", "journal": {"name": "ArXiv", "volume": "abs/2306.09128"}, "authors":
        [{"authorId": "2739194", "name": "L. Lau"}, {"authorId": "2158661030", "name":
        "Kam Chuen Tung"}, {"authorId": "2191273173", "name": "Robert Wang"}]}, {"paperId":
        "5dfd3c3738e1abab63d5464f026eb579c08afc46", "externalIds": {"CorpusId": 259226208},
        "corpusId": 259226208, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5dfd3c3738e1abab63d5464f026eb579c08afc46",
        "title": "Efficient Enumeration of Maximal Cliques in Weakly Closed Graphs",
        "abstract": "We demonstrate that the algorithm presented in [J. Fox, T. Roughgarden,
        C. Seshadhri, F. Wei, and N. Wein. Finding cliques in social networks: A new
        distribution-free model. SIAM journal on computing, 49(2):448\u2013464, 2020.]
        can be modified to achieve an enumeration time complexity of \u03b1O(poly(c)n).
        Here, parameter c represents the weakly closure of the graph, \u03b1 denotes
        the number of maximal cliques, and n refers to the graph\u2019s order. This
        result improves over their complexity, which is exponential in the closure
        of the graph.", "venue": "", "year": 2023, "referenceCount": 14, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
        [{"authorId": "46965893", "name": "G. Manoussakis"}]}, {"paperId": "3b805bb07a1e17373814ac7dc7459d7f30ff6759",
        "externalIds": {"ArXiv": "2306.09016", "CorpusId": 259164711}, "corpusId":
        259164711, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3b805bb07a1e17373814ac7dc7459d7f30ff6759",
        "title": "Connectivity of graphs that do not have the edge-Erd\\H{o}s-P\\''{o}sa
        property", "abstract": "I show that we can assume graphs that do not have
        the edge-Erd\\H{o}s-P\\''{o}sa property to be connected. Then I strengthen
        this result to $2$-connectivity under the additional assumptions of a minor-closed
        property and a generic counterexample.", "venue": "", "year": 2023, "referenceCount":
        2, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-06-15",
        "journal": null, "authors": [{"authorId": "1557362632", "name": "Raphael Steck"}]},
        {"paperId": "102031eabb78843afa11aab349c1a36bc5656efe", "externalIds": {"DOI":
        "10.3390/math11132868", "CorpusId": 259696735}, "corpusId": 259696735, "publicationVenue":
        "6175efe8-6f8e-4cbe-8cee-d154f4e78627", "url": "https://www.semanticscholar.org/paper/102031eabb78843afa11aab349c1a36bc5656efe",
        "title": "Optimal Fault-Tolerant Resolving Set of Power Paths", "abstract":
        "In a simple connected undirected graph G, an ordered set R of vertices is
        called a resolving set if for every pair of distinct vertices u and v, there
        is a vertex w\u2208R such that d(u,w)\u2260d(v,w). A resolving set F for the
        graph G is a fault-tolerant resolving set if for each v\u2208F, F\u2216{v}
        is also a resolving set for G. In this article, we determine an optimal fault-resolving
        set of r-th power of any path Pn when n\u2265r(r\u22121)+2. For the other
        values of n, we give bounds for the size of an optimal fault-resolving set.
        We have also presented an algorithm to construct a fault-tolerant resolving
        set of Pmr from a fault-tolerant resolving set of Pnr where m", "venue": "Mathematics",
        "year": 2023, "referenceCount": 10, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/2227-7390/11/13/2868/pdf?version=1687922282",
        "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-06-26", "journal": {"name": "Mathematics"}, "authors":
        [{"authorId": "31613345", "name": "L. Saha"}, {"authorId": "2135253008", "name":
        "Rupen Lama"}, {"authorId": "2214711741", "name": "Bapan Das"}, {"authorId":
        "33661726", "name": "A. Adhikari"}, {"authorId": "144902594", "name": "K.
        Das"}]}, {"paperId": "9b1179a9148896167990ee5d0e38a81536d97462", "externalIds":
        {"DBLP": "journals/corr/abs-2307-12482", "ArXiv": "2307.12482", "DOI": "10.48550/arXiv.2307.12482",
        "CorpusId": 260125011}, "corpusId": 260125011, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/9b1179a9148896167990ee5d0e38a81536d97462",
        "title": "Tight Approximations for Graphical House Allocation", "abstract":
        "The Graphical House Allocation (GHA) problem asks: how can $n$ houses (each
        with a fixed non-negative value) be assigned to the vertices of an undirected
        graph $G$, so as to minimize the sum of absolute differences along the edges
        of $G$? This problem generalizes the classical Minimum Linear Arrangement
        problem, as well as the well-known House Allocation Problem from Economics.
        Recent work has studied the computational aspects of GHA and observed that
        the problem is NP-hard and inapproximable even on particularly simple classes
        of graphs, such as vertex disjoint unions of paths. However, the dependence
        of any approximations on the structural properties of the underlying graph
        had not been studied. In this work, we give a nearly complete characterization
        of the approximability of GHA. We present algorithms to approximate the optimal
        envy on general graphs, trees, planar graphs, bounded-degree graphs, and bounded-degree
        planar graphs. For each of these graph classes, we then prove matching lower
        bounds, showing that in each case, no significant improvement can be attained
        unless P = NP. We also present general approximation ratios as a function
        of structural parameters of the underlying graph, such as treewidth; these
        match the tight upper bounds in general, and are significantly better approximations
        for many natural subclasses of graphs. Finally, we investigate the special
        case of bounded-degree trees in some detail. We first refute a conjecture
        by Hosseini et al. [2023] about the structural properties of exact optimal
        allocations on binary trees by means of a counterexample on a depth-$3$ complete
        binary tree. This refutation, together with our hardness results on trees,
        might suggest that approximating the optimal envy even on complete binary
        trees is infeasible. Nevertheless, we present a linear-time algorithm that
        attains a $3$-approximation on complete binary trees.", "venue": "arXiv.org",
        "year": 2023, "referenceCount": 30, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Mathematics", "source": "s2-fos-model"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-24", "journal": {"name": "ArXiv", "volume": "abs/2307.12482"},
        "authors": [{"authorId": "2064599157", "name": "Hadi Hosseini"}, {"authorId":
        "144078750", "name": "A. Mcgregor"}, {"authorId": "2243189", "name": "Rik
        Sengupta"}, {"authorId": "36539670", "name": "Rohit Vaish"}, {"authorId":
        "2061499353", "name": "V. Viswanathan"}]}, {"paperId": "f299bb9339909a8bc7a04142777c7db51d33e7fd",
        "externalIds": {"DOI": "10.36948/ijfmr.2023.v05i03.4126", "CorpusId": 259607560},
        "corpusId": 259607560, "publicationVenue": "0eedef98-be10-4507-88ab-1d0a9dd75d1d",
        "url": "https://www.semanticscholar.org/paper/f299bb9339909a8bc7a04142777c7db51d33e7fd",
        "title": "Split Restrained Geodetic Number of a Graph", "abstract": "Let \u2018G\u2019
        be a graph. If u,v \u2208V, then a u-v geodetic of G is the shortest path
        between u and v. The closed interval I[u, v] consists of all vertices lying
        in some u-v geodetic of G . For S\u2286V(G) the set I[S] is the union of all
        sets I [u, v] for u,v\u2208S. A set S is a geodetic set of G if I[S]=V(G).
        The cardinality of minimum geodetic set of G is the geodetic number of G,
        denoted by g(G). A set S of vertices of a graph G is a split geodetic set
        if S is a geodetic set and \u2329V-S\u232a is disconnected, split geodetic
        number g_s (G) of G is the minimum cardinality of a split geodetic set of
        G. In this paper I study split restrained geodetic number of a graph. A set
        S of vertices of a graph G is a split restrained geodetic set if S is a geodetic
        set and the subgraph \u2329V-S\u232a is disconnected with no isolated vertices.
        The minimum cardinality of a split restrained geodetic set of G is the split
        restrained geodetic number of G and is denoted by\u3016 g\u3017_sr (G). The
        split restrained geodetic numbers of some standard graphs are determined and
        also obtain the split restrained geodetic number in the Cartesian product
        of graphs.", "venue": "International Journal For Multidisciplinary Research",
        "year": 2023, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.ijfmr.com/papers/2023/3/4126.pdf",
        "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-06-30", "journal": {"name": "International Journal
        For Multidisciplinary Research"}, "authors": [{"authorId": "2214238101", "name":
        "A. -"}]}, {"paperId": "2cec99a683c3fced9515d5a43470f5e32ad3f821", "externalIds":
        {"ArXiv": "2307.08162", "DBLP": "journals/corr/abs-2307-08162", "DOI": "10.48550/arXiv.2307.08162",
        "CorpusId": 259937436}, "corpusId": 259937436, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/2cec99a683c3fced9515d5a43470f5e32ad3f821",
        "title": "Better Diameter Algorithms for Bounded VC-dimension Graphs and Geometric
        Intersection Graphs", "abstract": "We develop a framework for algorithms finding
        diameter in graphs of bounded distance Vapnik-Chervonenkis dimension, in (parametrized)
        sub-quadratic time complexity. The class of bounded distance VC-dimension
        graphs is wide, including, e.g. all minor-free graphs. We build on the work
        of Ducoffe et al., improving their technique. With our approach the algorithms
        become simpler and faster, working in $\\widetilde{\\mathcal{O}}(k \\cdot
        V^{1-1/d} \\cdot E)$ time complexity, where $k$ is the diameter, $d$ is the
        VC-dimension. Furthermore, it allows us to use the technique in more general
        setting. In particular, we use this framework for geometric intersection graphs,
        i.e. graphs where vertices are identical geometric objects on a plane and
        the adjacency is defined by intersection. Applying our approach for these
        graphs, we answer a question posed by Bringmann et al., finding a $\\widetilde{\\mathcal{O}}(n^{7/4})$
        parametrized diameter algorithm for unit square intersection graph of size
        $n$, as well as a more general algorithm for convex polygon intersection graphs.",
        "venue": "arXiv.org", "year": 2023, "referenceCount": 0, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-16", "journal":
        {"name": "ArXiv", "volume": "abs/2307.08162"}, "authors": [{"authorId": "2943619",
        "name": "Lech Duraj"}, {"authorId": "21620862", "name": "F. Konieczny"}, {"authorId":
        "2043631608", "name": "Krzysztof Potepa"}]}, {"paperId": "fddd26b0fe097f19dd503ca6fa6bbab8f6f4e3e3",
        "externalIds": {"DOI": "10.58245/ipsi.tir.2302.11", "CorpusId": 259340904},
        "corpusId": 259340904, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/fddd26b0fe097f19dd503ca6fa6bbab8f6f4e3e3",
        "title": "Diameter-2-critical graphs with at most 13 nodes", "abstract": "Diameter-2-critical
        graphs (abbr. D2C) are diameter 2 graphs whose diameter increases by removing
        any edge. The procedure used to obtain the list of D2C graphs of the order
        at most 13 is described. This is achieved by incorporating the diameter 2
        test and the criticality test into geng, the program from the package nauty
        that generates the list of all non-isomorphic connected graphs. Experiments
        with the two heuristics in diameter 2 test, which is intensively used during
        the search, show that it is slightly more efficient to start the test with
        the largest degree node using BFS algorithm. As an application of the obtained
        list, the three conjectures concerning the maximum number of edges in D2C
        graphs were checked for graphs of the order at most 13 and one counterexample
        was found. Index Terms: diameter-2-critical graphs, graph diameter, primitive
        graph.", "venue": "IPSI Transactions on Internet Research", "year": 2023,
        "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
        true, "openAccessPdf": {"url": "http://ipsitransactions.org/journals/papers/tir/2023jul/p11.pdf",
        "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-01", "journal": {"name": "IPSI Transactions on
        Internet Research"}, "authors": [{"authorId": "1388638576", "name": "Jovan
        G. Radosavljevi\u0107"}]}, {"paperId": "30b6a42370caaade20efa234d5315256d00bbaf1",
        "externalIds": {"DOI": "10.11648/j.ijtam.20230901.11", "CorpusId": 259910365},
        "corpusId": 259910365, "publicationVenue": "0f399fe1-5d91-41ea-9b66-c132d4160834",
        "url": "https://www.semanticscholar.org/paper/30b6a42370caaade20efa234d5315256d00bbaf1",
        "title": "A Comprehensive Survey on the Metric Dimension Problem of Graphs
        and Its Types", "abstract": ": Consider a robot that is navigating a graph-based
        environment and trying to figure out where it is at the moment. It can send
        a signal to determine how far away it is from every set of fixed landmarks.
        We address the problem of finding exactly the minimum number of landmarks
        required and their perfect placement to make sure the robot can always locate
        itself. The graph''s metric dimension is the quantity of landmarks, and the
        graph''s metric basis is the set of nodes on which they are distributed. The
        metric dimension of a graph is the smallest set of nodes needed to uniquely
        identify every other node using the shortest path distances. Optimization,
        network theory, navigation, pattern recognition, image processing, locating
        the origin of a spread in a network, canonically labeling graphs, and embedding
        symbolic data in low-dimensional Euclidean spaces are a few examples of applications
        for metric dimension. Also, Due to its many and varied applications in fields
        like social sciences, communications networks, algorithmic designs, and others,
        the study of dominance is the kind of metric dimension that is developing
        at the fastest rate. This survey provides a self-contained introduction to
        the metric dimension and an overview of several metric dimension results and
        applications. We also present algorithms for computing the metric dimension
        of families of graphs.", "venue": "International Journal of Theoretical and
        Applied Mathematics", "year": 2023, "referenceCount": 55, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
        "https://article.sciencepublishinggroup.com/pdf/10.11648.j.ijtam.20230901.11.pdf",
        "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Review"], "publicationDate": "2023-07-13", "journal": {"name": "International
        Journal of Theoretical and Applied Mathematics"}, "authors": [{"authorId":
        "2052530714", "name": "Basma Mohamed"}]}, {"paperId": "4ee4b1f81877d8bda7fc5105014c53811053f128",
        "externalIds": {"ArXiv": "2306.09965", "CorpusId": 259188007}, "corpusId":
        259188007, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4ee4b1f81877d8bda7fc5105014c53811053f128",
        "title": "Lower General Position Sets in Graphs", "abstract": "A subset $S$
        of vertices of a graph $G$ is a \\emph{general position set} if no shortest
        path in $G$ contains three or more vertices of $S$. In this paper, we generalise
        a problem of M. Gardner to graph theory by introducing the \\emph{lower general
        position number} $\\gp ^-(G)$ of $G$, which is the number of vertices in a
        smallest maximal general position set of $G$. We show that ${\\rm gp}^-(G)
        = 2$ if and only if $G$ contains a universal line and determine this number
        for several classes of graphs, including Kneser graphs $K(n,2)$, line graphs
        of complete graphs, and Cartesian and direct products of two complete graphs.
        We also prove several realisation results involving the lower general position
        number, the general position number and the geodetic number, and compare it
        with the lower version of the monophonic position number. We provide a sharp
        upper bound on the size of graphs with given lower general position number.
        Finally we demonstrate that the decision version of the lower general position
        problem is NP-complete.", "venue": "", "year": 2023, "referenceCount": 41,
        "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-06-16",
        "journal": null, "authors": [{"authorId": "1808292", "name": "G. Stefano"},
        {"authorId": "102240903", "name": "Sandi Klavvzar"}, {"authorId": "2140045521",
        "name": "A. Krishnakumar"}, {"authorId": "87208183", "name": "J. Tuite"},
        {"authorId": "3162346", "name": "I. Yero"}]}, {"paperId": "fa7cd0206f21f28cf8c705c3c1525d4c6cbfcd5a",
        "externalIds": {"CorpusId": 259319277}, "corpusId": 259319277, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/fa7cd0206f21f28cf8c705c3c1525d4c6cbfcd5a",
        "title": "EDGE DOMINATION IN SOME BRICK PRODUCT GRAPHS", "abstract": "Let
        G = (V,E) be a simple connected and undirected graph. A set F of edges in
        G is called an edge dominating set if every edge e in E \u2212 F is adjacent
        to at least one edge in F . The edge domination number \u03b3 \u2032 (G) of
        G is the minimum cardinality of an edge dominating set of G. The shadow graph
        of G, denoted D2(G) is the graph constructed from G by taking two copies of
        G, say G itself and G \u2032 and joining each vertex u in G to the neighbors
        of the corresponding vertex u \u2032 in G \u2032 . Let D be the set of all
        distinct pairs of vertices in G and let Ds (called the distance set) be a
        subset of D. The distance graph of G, denoted by D(G,Ds) is the graph having
        the same vertex set as that of G and two vertices u and v are adjacent in
        D(G,Ds) whenever d(u, v) \u2208 Ds. In this paper, we determine the edge domination
        number of the shadow distance graph of the brick product graph C(2n,m, r).",
        "venue": "", "year": 2019, "referenceCount": 8, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2004460516",
        "name": "U. Kumar"}, {"authorId": "50363495", "name": "R. Murali"}, {"authorId":
        "103552360", "name": "A. Girisha"}]}, {"paperId": "a72341ec26b2fe5be9ce8212a25e13b4a345d760",
        "externalIds": {"ArXiv": "2307.03835", "CorpusId": 259501017}, "corpusId":
        259501017, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/a72341ec26b2fe5be9ce8212a25e13b4a345d760",
        "title": "On the eccentric graph of trees", "abstract": "We consider the eccentric
        graph of a graph $G$, denoted by $ecc(G)$, which has the same vertex set as
        $G$, and two vertices in the eccentric graph are adjacent iff their distance
        in $G$ is equal to the eccentricity of one of them. In this paper, we present
        a fundamental requirement for the isomorphism between $ecc(G)$ and the complement
        of $G$, and show that the previous necessary condition given in the literature
        is inadequate. Also we obtain that diameter of $ecc(T)$ is at most $3$ for
        any tree and get some characterizations of the eccentric graph of trees.",
        "venue": "", "year": 2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        "2023-07-07", "journal": null, "authors": [{"authorId": "2100431", "name":
        "Sezer Sorgun"}, {"authorId": "2221852561", "name": "Esma Elyemani"}]}, {"paperId":
        "274122d563743ec71d33a0b7be87d5defd8125f5", "externalIds": {"CorpusId": 259923049},
        "corpusId": 259923049, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/274122d563743ec71d33a0b7be87d5defd8125f5",
        "title": "Comparison of Primand Kruskal\u2019s Algorithm", "abstract": "-
        The goal of this research is to compare the performance of the common Prim
        and the Kruskal of the minimum spanning tree in building up super metric space.
        We suggested using complexity analysis and experimental methods to evaluate
        these two methods. After analysing daily sample data from the Shanghai and
        Shenzhen 300 indexes from the second half of 2005 to the second half of 2007,
        the results revealed that when the number of shares is less than 100, the
        Kruskal algorithm is relatively superior to the Prim algorithm in terms of
        space complexity; however, when the number of shares is greater than 100,
        the Prim algorithm is more superior in terms of time complexity. A spanning
        tree is defined in the glossary as a connected graph with non-negative weights
        on its edges", "venue": "", "year": 2023, "referenceCount": 70, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "39895025", "name": "R. Maurya"},
        {"authorId": "1584278686", "name": "Rahul Sharma"}]}, {"paperId": "a8f799e4184367251ead33a55aafb801c345a88e",
        "externalIds": {"CorpusId": 259336907}, "corpusId": 259336907, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/a8f799e4184367251ead33a55aafb801c345a88e",
        "title": "Homework 2 Solutions Exercise 1", "abstract": "Given a graph with
        nonnegative edge weights {yij}, we want to determine if every odd cycle has
        weight at least 1, i.e. if the above constraint is satisfied. To do this,
        we create a new bipartite graph G\u2032 with vertex set VL = VR = V . For
        each edge ij \u2208 E, we add the edge from iL to jR and from jL to iR. There
        is an odd cycle in G containing vertex i iff there is a path from iL to iR
        in G \u2032. So for each v \u2208 V , we can find the shortest path from vL
        to vR in G \u2032 and if these paths all have value at least 1, then x\u2217
        is feasible. Otherwise, we have found an odd cycle corresponding to a violated
        constraint.", "venue": "", "year": 2017, "referenceCount": 2, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "2065066116", "name": "A. Newman"},
        {"authorId": "51119126", "name": "F. Br\u00e9hard"}, {"authorId": "40651371",
        "name": "N. Le"}]}, {"paperId": "0926f54456728cb00748d9433c805bb22f6a57ca",
        "externalIds": {"DBLP": "journals/corr/abs-2307-09389", "ArXiv": "2307.09389",
        "DOI": "10.48550/arXiv.2307.09389", "CorpusId": 259951425}, "corpusId": 259951425,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/0926f54456728cb00748d9433c805bb22f6a57ca",
        "title": "Algorithms and hardness for Metric Dimension on digraphs", "abstract":
        "In the Metric Dimension problem, one asks for a minimum-size set R of vertices
        such that for any pair of vertices of the graph, there is a vertex from R
        whose two distances to the vertices of the pair are distinct. This problem
        has mainly been studied on undirected graphs and has gained a lot of attention
        in the recent years. We focus on directed graphs, and show how to solve the
        problem in linear-time on digraphs whose underlying undirected graph (ignoring
        multiple edges) is a tree. This (nontrivially) extends a previous algorithm
        for oriented trees. We then extend the method to unicyclic digraphs (understood
        as the digraphs whose underlying undirected multigraph has a unique cycle).
        We also give a fixed-parameter-tractable algorithm for digraphs when parameterized
        by the directed modular-width, extending a known result for undirected graphs.
        Finally, we show that Metric Dimension is NP-hard even on planar triangle-free
        acyclic digraphs of maximum degree 6.", "venue": "arXiv.org", "year": 2023,
        "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-07-18", "journal": {"name": "ArXiv", "volume": "abs/2307.09389"}, "authors":
        [{"authorId": "37963046", "name": "Antoine Dailly"}, {"authorId": "2050726",
        "name": "Florent Foucaud"}, {"authorId": "152935002", "name": "Anni Hakanen"}]},
        {"paperId": "280293c8a36d7dd2bd3ee18ffb7baf02adeaa4ad", "externalIds": {"DOI":
        "10.22342/jims.29.2.1321.156-165", "CorpusId": 260146015}, "corpusId": 260146015,
        "publicationVenue": "8fd7aa55-825b-4b32-ad18-b3da67291acf", "url": "https://www.semanticscholar.org/paper/280293c8a36d7dd2bd3ee18ffb7baf02adeaa4ad",
        "title": "Total Edge Irregularity Strength of the Cartesian Product of Bipartite
        Graphs and Paths", "abstract": "For a simple graph G = (V (G), E(G)), a total
        labeling \u2202 is called an edge irregular total k-labeling of G if \u2202
        : V (G) \u222a E(G) \u2192 {1, 2, . . . , k} such that for any two different
        edges uv and u''v'' in E(G), we have wt\u2202(uv) not equal to wt\u2202(u''v'')
        where wt\u2202(uv) = \u2202(u) + \u2202(v) + \u2202(uv). The minimum k for
        which G has an edge irregulartotal k-labeling is called the total edge irregularity
        strength, denoted by tes(G). It is known that ceil((|E(G)|+2)/3) is a lower
        bound for the total edge irregularity strength of a graph G. In this paper
        we prove that if G is a bipartite graph for which this bound is tight then
        this is also true for Cartesian product of G with any path.", "venue": "Journal
        of the Indonesian Mathematical Society", "year": 2023, "referenceCount": 16,
        "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-19", "journal": {"name": "Journal of the Indonesian
        Mathematical Society"}, "authors": [{"authorId": "3436457", "name": "R. W.
        N. Wijaya"}, {"authorId": "9614803", "name": "J. Ryan"}, {"authorId": "1850820",
        "name": "T. Kalinowski"}]}, {"paperId": "8ecb4c58af63d09fe93bf6baa999c628b0f9dba2",
        "externalIds": {"DBLP": "journals/corr/abs-2307-07222", "ArXiv": "2307.07222",
        "DOI": "10.48550/arXiv.2307.07222", "CorpusId": 259924583}, "corpusId": 259924583,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/8ecb4c58af63d09fe93bf6baa999c628b0f9dba2",
        "title": "\u00d5ptimal Fault-Tolerant Reachability Labeling in Planar Graphs",
        "abstract": "We show how to assign labels of size $\\tilde O(1)$ to the vertices
        of a directed planar graph $G$, such that from the labels of any three vertices
        $s,t,f$ we can deduce in $\\tilde O(1)$ time whether $t$ is reachable from
        $s$ in the graph $G\\setminus \\{f\\}$. Previously it was only known how to
        achieve $\\tilde O(1)$ queries using a centralized $\\tilde O(n)$ size oracle
        [SODA''21].", "venue": "arXiv.org", "year": 2023, "referenceCount": 30, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
        "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-14", "journal":
        {"name": "ArXiv", "volume": "abs/2307.07222"}, "authors": [{"authorId": "1725512",
        "name": "S. Chechik"}, {"authorId": "34762109", "name": "S. Mozes"}, {"authorId":
        "1681527", "name": "O. Weimann"}]}, {"paperId": "7c7782b8181b68bb3f9e31e3b004e63ce421d32b",
        "externalIds": {"ArXiv": "2307.13684", "CorpusId": 260155091}, "corpusId":
        260155091, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/7c7782b8181b68bb3f9e31e3b004e63ce421d32b",
        "title": "Induced subgraphs and tree decompositions X. Towards logarithmic
        treewidth for even-hole-free graphs", "abstract": "A generalized $t$-pyramid
        is a graph obtained from a certain kind of tree (a subdivided star or a subdivided
        cubic caterpillar) and the line graph of a subdivided cubic caterpillar by
        identifying simplicial vertices. We prove that for every integer $t$ there
        exists a constant $c(t)$ such that every $n$-vertex even-hole-free graph with
        no clique of size $t$ and no induced subgraph isomorphic to a generalized
        $t$-pyramid has treewidth at most $c(t)\\log{n}$. This settles a special case
        of a conjecture of Sintiari and Trotignon; this bound is also best possible
        for the class. It follows that several NP-hard problems such as Stable Set,
        Vertex Cover, Dominating Set and Coloring admit polynomial-time algorithms
        on this class of graphs.", "venue": "", "year": 2023, "referenceCount": 24,
        "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-07-25",
        "journal": null, "authors": [{"authorId": "9429084", "name": "Tara Abrishami"},
        {"authorId": "40952051", "name": "Bogdan Alecu"}, {"authorId": "1797007",
        "name": "M. Chudnovsky"}, {"authorId": "73591882", "name": "Sepehr Hajebi"},
        {"authorId": "1821637", "name": "S. Spirkl"}]}, {"paperId": "9969acfe6a1222f6b274c3ab7c7a0da47872467e",
        "externalIds": {"CorpusId": 259359498}, "corpusId": 259359498, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/9969acfe6a1222f6b274c3ab7c7a0da47872467e",
        "title": "2 Formal Description of a Linear Program", "abstract": "Our next
        goal is to present algorithms for the maximum cut problem (max-cut). Given
        an undirected, unweighted graph G = (V,E), the max-cut problem is to find
        a proper, nonempty subset of vertices S \u2282 V such that |E(S, V \\ S)|
        is maximized. Recall that an edge ij \u2208 E belongs to E(S, V \\ S) if one
        endpoint belongs to S and the other endpoint belongs to the complement of
        S, namely S\u0304 = V \\ S. Since max-cut is NP-hard, we cannot hope to obtain
        an algorithm that ouputs the optimal solution with high probability, as we
        saw for min-cut. A simple 12 -approximation algorithm for max-cut is to assign
        each vertex to S with probability 12 . There are no known simple combinatorial
        algorithms for maxcut with an approximation ratio greater than 1 2 . Therefore,
        we turn to the mathematical programming toolbox for help.", "venue": "", "year":
        2017, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": null, "authors": []}, {"paperId":
        "0ba633710053daf696a1466f764837664dee7884", "externalIds": {"DOI": "10.5817/cz.muni.eurocomb23-049",
        "CorpusId": 259480212}, "corpusId": 259480212, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/0ba633710053daf696a1466f764837664dee7884",
        "title": "Powers of planar graphs, product structure, and blocking partitions",
        "abstract": "We show that there exist a constant \\(c\\) and a function \\(f\\)
        such that the \\(k\\)-power of a planar graph with maximum degree \\(\\Delta\\)
        is isomorphic to a subgraph of \\(H \\boxtimes P \\boxtimes K_{f(\\Delta,
        k)}\\) for some graph \\(H\\) with treewidth at most \\(c\\) and some path
        \\(P\\). This is the first product structure theorem for \\(k\\)-powers of
        planar graphs, where the treewidth of \\(H\\) does not depend on \\(k\\).
        We actually prove a stronger result, which implies an analogous product structure
        theorem for other graph classes, including \\(k\\)-planar graphs (of arbitrary
        degree). Our proof uses a new concept of blocking partitions which is of independent
        interest. An \\(\\ell\\)-blocking partition of a graph \\(G\\) is a partition
        of the vertex set of \\(G\\) into connected subsets such that every path in
        \\(G\\) of length greater than \\(\\ell\\) contains two vertices in one set
        of the partition. The key lemma in our proof states that there exists a positive
        integer \\(\\ell\\) such that every planar graph of maximum degree \\(\\Delta\\)
        has an \\(\\ell\\)-blocking partition with parts of size bounded in terms
        of \\(\\Delta\\).", "venue": "European Conference on Combinatorics, Graph
        Theory and Applications", "year": 2023, "referenceCount": 15, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
        "https://journals.muni.cz/eurocomb/article/download/35583/30319", "status":
        "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": "2023-08-28", "journal": {"name": "European Conference
        on Combinatorics, Graph Theory and Applications"}, "authors": [{"authorId":
        "2146376460", "name": "Marc Distel"}, {"authorId": "2007758568", "name": "Robert
        Hickingbotham"}, {"authorId": "2221766458", "name": "Micha\u0142 T. Seweryn"},
        {"authorId": "2221760922", "name": "David R. Wood"}]}, {"paperId": "08c0addf0ce3e1ca98f319037347491168826e7b",
        "externalIds": {"DBLP": "journals/corr/abs-2306-17710", "ArXiv": "2306.17710",
        "DOI": "10.48550/arXiv.2306.17710", "CorpusId": 259309134}, "corpusId": 259309134,
        "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/08c0addf0ce3e1ca98f319037347491168826e7b",
        "title": "Subexponential parameterized algorithms for cycle-hitting problems
        in contact and intersection graphs of segments", "abstract": "In this paper
        we investigate the existence of subexponential parameterized algorithms of
        three fundamental cycle-hitting problems in geometric graph classes. The considered
        problems, \\textsc{Triangle Hitting} (TH), \\textsc{Feedback Vertex Set} (FVS),
        and \\textsc{Odd Cycle Transversal} (OCT) ask for the existence in a graph
        $G$ of a set $X$ of at most $k$ vertices such that $G-X$ is, respectively,
        triangle-free, acyclic, or bipartite. Such subexponential parameterized algorithms
        are known to exist in planar and even $H$-minor free graphs from bidimensionality
        theory [Demaine et al., JACM 2005], and there is a recent line of work lifting
        these results to geometric graph classes consisting of intersection of\"fat\"objects
        ([Grigoriev et al., FOCS 2022] and [Lokshtanov et al., SODA 2022]). In this
        paper we focus on\"thin\"objects by considering intersection graphs of segments
        in the plane with $d$ possible slopes ($d$-DIR graphs) and contact graphs
        of segments in the plane. Assuming the ETH, we rule out the existence of algorithms:
        - solving TH in time $2^{o(n)}$ in 2-DIR graphs; and - solving TH, FVS, and
        OCT in time $2^{o(\\sqrt{n})}$ in $K_{2,2}$-free contact 2-DIR graphs. These
        results indicate that additional restrictions are necessary in order to obtain
        subexponential parameterized algorithms for %these problems. In this direction
        we provide: - a $2^{O(k^{3/4}\\cdot \\log k)}n^{O(1)}$-time algorithm for
        FVS in contact segment graphs; - a $2^{O(\\sqrt d\\cdot t^2 \\log t\\cdot
        k^{2/3}\\log k)} n^{O(1)}$-time algorithm for TH in $K_{t,t}$-free $d$-DIR
        graphs; and - a $2^{O(k^{7/9}\\log^{3/2}k)} n^{O(1)}$-time algorithm for TH
        in contact segment graphs.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2023-06-30", "journal": {"name": "ArXiv", "volume": "abs/2306.17710"}, "authors":
        [{"authorId": "2084026985", "name": "Ga\u00e9tan Berthe"}, {"authorId": "3219453",
        "name": "Marin Bougeret"}, {"authorId": "144505753", "name": "D. Gon\u00e7alves"},
        {"authorId": "33839929", "name": "Jean-Florent Raymond"}]}, {"paperId": "4fe9ca50a760b703bb99abe8d5cc4bc6a2c01f87",
        "externalIds": {"DOI": "10.3390/ijgi12070277", "CorpusId": 259919249}, "corpusId":
        259919249, "publicationVenue": "ad45a4cc-056a-498b-a1e1-86e80cc8cbac", "url":
        "https://www.semanticscholar.org/paper/4fe9ca50a760b703bb99abe8d5cc4bc6a2c01f87",
        "title": "In-Path Oracles for Road Networks", "abstract": "Many spatial applications
        benefit from the fast answering to a seemingly simple spatial query: \u201cIs
        a point of interest (POI) \u2018in-path\u2019 to the shortest path between
        a source and a destination?\u201d In this context, an in-path POI is one that
        is either on the shortest path or can be reached within a bounded yet small
        detour from the shortest path. The fast answering of the in-path queries is
        contingent on being able to determine without having to actually compute the
        shortest paths during runtime. Thus, this requires a precomputation solution.
        The key contribution of the paper is the development of an in-path oracle
        that is based on precomputation of which pairs of sources and destinations
        are in-path with respect to the given POI. For a given road network with n
        nodes and m POIs, an O(m\u00d7n)-sized oracle is envisioned based on the reduction
        of the well-separated pairs (WSP) decomposition of the road network. Furthermore,
        an oracle can be indexed in a database using a B-tree that can answer queries
        at very high throughput. Experimental results on the real road network POI
        dataset illustrate the superiority of this technique compared to a baseline
        algorithm. The proposed approach can answer \u2248 1.5 million in-path queries
        per second compared to a few hundred per second using a suitable baseline
        approach.", "venue": "ISPRS International Journal of Geo-Information", "year":
        2023, "referenceCount": 84, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/2220-9964/12/7/277/pdf?version=1689292897",
        "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-07-13", "journal": {"name": "ISPRS International
        Journal of Geo-Information"}, "authors": [{"authorId": "49028726", "name":
        "Debajyoti Ghosh"}, {"authorId": "2646653", "name": "Jagan Sankaranarayanan"},
        {"authorId": "3086273", "name": "Kiran Khatter"}, {"authorId": "1719385",
        "name": "H. Samet"}]}, {"paperId": "1db3845acfe4b890ffe4c873ab7dbd84cad31c65",
        "externalIds": {"DBLP": "conf/sand/CohenPRS23", "ArXiv": "2208.14700", "DOI":
        "10.4230/LIPIcs.SAND.2023.11", "CorpusId": 251953655}, "corpusId": 251953655,
        "publicationVenue": "88656b98-f228-4d01-8ba8-d9bc1a4c9dec", "url": "https://www.semanticscholar.org/paper/1db3845acfe4b890ffe4c873ab7dbd84cad31c65",
        "title": "Making Self-Stabilizing Algorithms for Any Locally Greedy Problem",
        "abstract": "We propose a way to transform synchronous distributed algorithms
        solving locally greedy and mendable problems into self-stabilizing algorithms
        in anonymous networks. Mendable problems are a generalization of greedy problems
        where any partial solution may be transformed -- instead of completed -- into
        a global solution: every time we extend the partial solution we are allowed
        to change the previous partial solution up to a given distance. Locally here
        means that to extend a solution for a node, we need to look at a constant
        distance from it. In order to do this, we propose the first explicit self-stabilizing
        algorithm computing a $(k,k-1)$-ruling set (i.e. a\"maximal independent set
        at distance $k$\"). By combining multiple time this technique, we compute
        a distance-$K$ coloring of the graph. With this coloring we can finally simulate
        \\local~model algorithms running in a constant number of rounds, using the
        colors as unique identifiers. Our algorithms work under the Gouda daemon,
        which is similar to the probabilistic daemon: if an event should eventually
        happen, it will occur under this daemon.", "venue": "Symposium on Algorithmic
        Foundations of Dynamic Networks", "year": 2022, "referenceCount": 41, "citationCount":
        2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2022-08-31", "journal": {"pages": "11:1-11:17"}, "authors": [{"authorId":
        "1683169", "name": "Johanne Cohen"}, {"authorId": "2065447", "name": "Laurence
        Pilard"}, {"authorId": "31678114", "name": "M. Rabie"}, {"authorId": "2183484122",
        "name": "Jonas S''enizergues"}]}]}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Connection:
      - keep-alive
      Content-Length:
      - '211737'
      Content-Type:
      - application/json
      Date:
      - Fri, 11 Aug 2023 16:29:40 GMT
      Via:
      - 1.1 4c7a286e4c4b2577a22c17c9071a3a38.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - Zlc-HwGzHxr76W9-_yg2n9pUjHku3bY4J8vfCcmy1dswA0PuFkxy4Q==
      X-Amz-Cf-Pop:
      - GRU1-P2
      X-Cache:
      - Miss from cloudfront
      x-amz-apigw-id:
      - JgQ93Fk3PHcF4SA=
      x-amzn-Remapped-Connection:
      - keep-alive
      x-amzn-Remapped-Content-Length:
      - '211737'
      x-amzn-Remapped-Date:
      - Fri, 11 Aug 2023 16:29:40 GMT
      x-amzn-Remapped-Server:
      - gunicorn
      x-amzn-RequestId:
      - ed1e6df9-1a32-4a5f-baad-65446c8ed289
    status:
      code: 200
      message: OK
- request:
    body: '"{\"positivePaperIds\": [\"10.1145/3544585.3544600\", \"10.1145/301250.301271\"],
      \"negativePaperIds\": null}"'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '110'
      content-type:
      - application/json
      host:
      - api.semanticscholar.org
      user-agent:
      - python-httpx/0.24.1
    method: POST
    uri: https://api.semanticscholar.org/recommendations/v1/papers/?&fields=abstract,authors,citationCount,corpusId,externalIds,fieldsOfStudy,influentialCitationCount,isOpenAccess,journal,openAccessPdf,paperId,publicationDate,publicationTypes,publicationVenue,referenceCount,s2FieldsOfStudy,title,url,venue,year&limit=100
  response:
    content: '{"message": "Internal Server Error"}

      '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Connection:
      - keep-alive
      Content-Length:
      - '37'
      Content-Type:
      - application/json
      Date:
      - Thu, 07 Sep 2023 19:39:19 GMT
      Via:
      - 1.1 0406aa08030e059015fb279667e94e6e.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - Ca_8ecOL1aahZmht4jTbSzz-ujuFJubf2QK0MKWIL-Yo1ThMmwW_yw==
      X-Amz-Cf-Pop:
      - EWR50-C1
      X-Cache:
      - Error from cloudfront
      x-amz-apigw-id:
      - K5sEMHGSPHcFZmA=
      x-amzn-Remapped-Connection:
      - keep-alive
      x-amzn-Remapped-Content-Length:
      - '37'
      x-amzn-Remapped-Date:
      - Thu, 07 Sep 2023 19:39:19 GMT
      x-amzn-Remapped-Server:
      - gunicorn
      x-amzn-RequestId:
      - e8d43e8f-c742-4640-a228-5fe54735c16f
    http_version: HTTP/1.1
    status_code: 500
version: 1
