interactions:
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
    method: GET
    uri: https://api.semanticscholar.org/recommendations/v1/papers/forpaper/10.1145/3544585.3544600?&fields=abstract,authors,citationCount,corpusId,externalIds,fieldsOfStudy,influentialCitationCount,isOpenAccess,journal,openAccessPdf,paperId,publicationDate,publicationTypes,publicationVenue,referenceCount,s2FieldsOfStudy,title,url,venue,year&limit=100&from=all-cs
  response:
    body:
      string: '{"recommendedPapers": [{"paperId": "9c1ab0728d90e35992fe24a1fc43b076e8229eb5",
        "externalIds": {"MAG": "761778066", "CorpusId": 117069249}, "corpusId": 117069249,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/9c1ab0728d90e35992fe24a1fc43b076e8229eb5",
        "title": "Another view on two graph orientation problems", "abstract": "Note:
        PRO 00.07 Reference ROSO-CONF-2000-007 Record created on 2006-02-13, modified
        on 2016-08-08", "venue": "", "year": 2000, "referenceCount": 0, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"name": "",
        "pages": "152", "volume": ""}, "authors": [{"authorId": "2918362", "name":
        "A. Prodon"}]}, {"paperId": "dce1fa5033aafd205a2151cb188ce6e117d9dfdc", "externalIds":
        {"MAG": "2137393438", "DBLP": "conf/bmei/YaoY09", "DOI": "10.1109/BMEI.2009.5304812",
        "CorpusId": 2524651}, "corpusId": 2524651, "publicationVenue": "e33b5b9a-d6c0-40c7-93a4-ca5dd12c1837",
        "url": "https://www.semanticscholar.org/paper/dce1fa5033aafd205a2151cb188ce6e117d9dfdc",
        "title": "A Note on the Definition of a Tree", "abstract": "Very often trees
        appear in computer science. For example, information is often stored in treelike
        data structures and the execution of many recursive programs can be regarded
        as a traversal of a tree. Moreover, trees are efficiently used to verify many
        very difficult problems which are still open now. As known, leaves in a tree
        play an important role in the Steiner tree problem. We show that a connected
        graph G is a tree if and only if n1(G) = 2+ \u2211 d\u22653(d\u22122)nd(G),
        where ni(G) is the number of vertices of degree i of G with respect to \u03b4(G)
        \u2264 i \u2264 \u0394(G), and the number \u03c6(G) of faces of a planar graph
        G can be expressed as \u03c6(G) = 2 + 1 2 \u2211 d\u22653(d \u2212 2)nd(G).",
        "venue": "International Conference on BioMedical Engineering and Informatics",
        "year": 2009, "referenceCount": 6, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics",
        "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
        "external"}, {"category": "Computer Science", "source": "external"}, {"category":
        "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": "2009-10-30", "journal": {"name": "2009 2nd International
        Conference on Biomedical Engineering and Informatics", "pages": "1-5"}, "authors":
        [{"authorId": "145685008", "name": "Ming Yao"}, {"authorId": "145323141",
        "name": "B. Yao"}]}, {"paperId": "fd46b52af508ff4b625b5855dbe822f8c81fb9e6",
        "externalIds": {"CorpusId": 35175169}, "corpusId": 35175169, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/fd46b52af508ff4b625b5855dbe822f8c81fb9e6",
        "title": "Solutions Midterm Exam 2 Solutions Problem", "abstract": "Answer:
        O(n log n) Justification: The running time satisfies T (n) = 3T (dn/3e) +
        \u0398(n log n). Master theorem: Here a = b = 3 and the work term has the
        from nb a log n for k = 1. So the solution has the from T (n) = nb a log n
        = n log n. (b) Suppose you are given a directed graph G = (V, E) with lengths
        ` : E \u2192 R for each edge, a source node s and a list of candidate distances
        d(v) (where d(v) is the claimed to be the length of the shortest path from
        s to v in G). What is the running time of the fastest algorithm which checks
        whether the distances d are correct?", "venue": "", "year": 2010, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "39765787",
        "name": "Adam D. Smith"}]}, {"paperId": "3d1b511ed028a3a948fb647e9bf70699dde74562",
        "externalIds": {"ArXiv": "2104.04810", "DOI": "10.1007/978-3-030-83823-2_3",
        "CorpusId": 233210190}, "corpusId": 233210190, "publicationVenue": "03d8c2a4-d329-4119-82c2-72e9a4bee91b",
        "url": "https://www.semanticscholar.org/paper/3d1b511ed028a3a948fb647e9bf70699dde74562",
        "title": "Nested Cycles with No Geometric Crossings", "abstract": null, "venue":
        "Trends in Mathematics", "year": 2021, "referenceCount": 18, "citationCount":
        12, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
        {"url": "http://arxiv.org/pdf/2104.04810", "status": "GREEN"}, "fieldsOfStudy":
        ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": "2021-04-10", "journal": {"name":
        "Trends in Mathematics"}, "authors": [{"authorId": "2072817790", "name": "Irene
        Gil Fern''andez"}, {"authorId": "2116670242", "name": "Jaehoon Kim"}, {"authorId":
        "1965116", "name": "Younjin Kim"}, {"authorId": "2118902602", "name": "Hong
        Liu"}]}, {"paperId": "7a75ccca8fa9b0e27d933634a975e0c86a15b4d1", "externalIds":
        {"MAG": "595300436", "CorpusId": 117863185}, "corpusId": 117863185, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/7a75ccca8fa9b0e27d933634a975e0c86a15b4d1",
        "title": "PROBLEMS IN TOPOLOGICAL GRAPH THEORY : QUESTIONS I CAN''T ANSWER",
        "abstract": ". This paper describes my Problems in Topological Graph Theory,
        which can be accessed through the world-wide-web at This list of problems
        is constantly being revised; the interested reader is encour-aged to submit
        additions and updates.", "venue": "", "year": 1999, "referenceCount": 7, "citationCount":
        2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"name": "",
        "pages": "89-92", "volume": "47"}, "authors": [{"authorId": "2569739", "name":
        "D. Archdeacon"}]}, {"paperId": "2df8b487074c2238aea3fe96352a926266594db1",
        "externalIds": {"MAG": "2610240799", "DOI": "10.1007/978-3-319-49475-3_10",
        "CorpusId": 67445016}, "corpusId": 67445016, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/2df8b487074c2238aea3fe96352a926266594db1",
        "title": "Some Research Topics", "abstract": null, "venue": "", "year": 2017,
        "referenceCount": 90, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"name": "", "pages": "135-163", "volume": ""}, "authors":
        [{"authorId": "144911760", "name": "M. S. Rahman"}]}, {"paperId": "ab3eeec31a5e9a68e2387a375cd126e74c35459c",
        "externalIds": {"DBLP": "books/hal/Bessy12", "MAG": "2288843953", "CorpusId":
        11829132}, "corpusId": 11829132, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ab3eeec31a5e9a68e2387a375cd126e74c35459c",
        "title": "Some problems in graph theory and graphs algorithmic theory", "abstract":
        "This document is a long abstract of my research work, concerning graph theory
        and algorithms on graphs. It summarizes some results, gives ideas of the proof
        for some of them and presents the context of the different topics together
        with some interesting open questions connected to them The first part precises
        the notations used in the rest of the paper; the second part deals with some
        problems on cycles in digraphs; the third part is an overview of two graph
        coloring problems and one problem on structures in colored graphs; finally
        the fourth part focus on some results in algorithmic graph theory, mainly
        in parametrized complexity.", "venue": "", "year": 2012, "referenceCount":
        175, "citationCount": 2, "influentialCitationCount": 1, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["Review"], "publicationDate": "2012-02-09", "journal":
        {"name": "", "volume": ""}, "authors": [{"authorId": "2768268", "name": "S.
        Bessy"}]}, {"paperId": "6f020f6637bef48a657d2e54ae58ee8f5faefc16", "externalIds":
        {"DBLP": "conf/wg/EpsteinLW12", "MAG": "2103905945", "DOI": "10.1007/s00453-014-9896-2",
        "CorpusId": 1297071}, "corpusId": 1297071, "publicationVenue": "300eb16f-ce6c-495a-8da3-2e691bf9051d",
        "url": "https://www.semanticscholar.org/paper/6f020f6637bef48a657d2e54ae58ee8f5faefc16",
        "title": "The (Weighted) Metric Dimension of Graphs: Hard and Easy Cases",
        "abstract": null, "venue": "Algorithmica", "year": 2012, "referenceCount":
        19, "citationCount": 56, "influentialCitationCount": 9, "isOpenAccess": true,
        "openAccessPdf": {"url": "https://pure.tue.nl/ws/files/3891635/43179071317553.pdf",
        "status": "GREEN"}, "fieldsOfStudy": ["Computer Science", "Mathematics"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Mathematics", "source": "external"}, {"category": "Materials
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2012-06-26", "journal": {"name": "Algorithmica", "pages":
        "1130 - 1171", "volume": "72"}, "authors": [{"authorId": "1687689", "name":
        "L. Epstein"}, {"authorId": "145269840", "name": "Asaf Levin"}, {"authorId":
        "1729250", "name": "G. Woeginger"}]}, {"paperId": "66e10ae20ff7bc6d8c83fc909a328a931c06b56c",
        "externalIds": {"MAG": "1581266644", "DOI": "10.1007/978-3-642-03822-8_3",
        "CorpusId": 60992213}, "corpusId": 60992213, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/66e10ae20ff7bc6d8c83fc909a328a931c06b56c",
        "title": "Minimum Spanning Trees", "abstract": null, "venue": "", "year":
        2010, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"name": "",
        "pages": "19-32", "volume": ""}, "authors": [{"authorId": "1703063", "name":
        "W. Hochst\u00e4ttler"}, {"authorId": "50475819", "name": "Alexander Schliep"}]},
        {"paperId": "8606499bc45921285c6a7bfe10fc751009bece08", "externalIds": {"ArXiv":
        "1306.3916", "DBLP": "journals/corr/abs-1306-3916", "MAG": "2950261448", "DOI":
        "10.1016/j.jcta.2014.02.006", "CorpusId": 12043969}, "corpusId": 12043969,
        "publicationVenue": "8a32f160-84d2-4c72-b3ab-c5de11116574", "url": "https://www.semanticscholar.org/paper/8606499bc45921285c6a7bfe10fc751009bece08",
        "title": "Two notions of unit distance graphs", "abstract": null, "venue":
        "Journal of combinatorial theory. Series A", "year": 2013, "referenceCount":
        14, "citationCount": 25, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2013-06-17", "journal":
        {"name": "J. Comb. Theory, Ser. A", "pages": "1-17", "volume": "125"}, "authors":
        [{"authorId": "1734327", "name": "N. Alon"}, {"authorId": "1679129", "name":
        "A. Kupavskii"}]}, {"paperId": "4e41012ae05c58130fcf02fc47f65ec4620fafae",
        "externalIds": {"CorpusId": 16808789}, "corpusId": 16808789, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/4e41012ae05c58130fcf02fc47f65ec4620fafae",
        "title": "A 2-Level Cactus Tree Model for the System of Minimum and Minimum+1
        Edge . . .", "abstract": "3] Ye. Dinitz, \\The 3-edge components and the structural
        description of all 3-edge cuts in a graph\", 5] Ye. Dinitz and Z. Nutov, \\A
        2-level cactus tree model for the minimum and minimum+1 edge cuts in a graph
        and its incremental maintenance\", Proc. the 27th Symposium on Theory of Computing,
        1995, 509{518. 6] Ye. Dinitz and Z. Nutov, \\A 2-level cactus tree model for
        the minimum and mini-mum+1 edge cuts in a graph and its incremental maintenance.
        Part I: the odd case\", a manuscript. 7] Ye. Dinitz and Z. Nutov, \\Cactus-tree
        type models for families of bisections of a set\", a manuscript. 8] Ye. Dinitz
        and A. Vainshtein, \\The connectivity carcass of a vertex subset in a graph
        and its incremental maintenance\", 37 The worst case time for each query is
        O(1). The initialization time is polynomial in n, and the space required is
        O(n). Relying on 17], the complexity of incremental maintaining can be reduced
        to O((u + q + n)(u + q; n)). Notice that the above complexities of maintenance
        can be reduced substituting each instance of n by n +2 in the following way.
        At the preprocessing stage, we can build the quotient graph G 0 by shrinking
        each of the n 0 +2 (0 + 2)-classes of G into a single supervertex and apply
        our algorithm to G 0 , with n 0 +2 supervertices, instead of G. In this version,
        the current (0 + 2)-class of a vertex v of G is found as the current (0 +
        2)-class of the supervertex of G 0 corresponding to the initial (0 + 2)-class
        of v. This is done via two queries, where nding the supervertex can be supported
        by a static data structure in O(1) time. 5 Concluding remarks 1. Observe that
        the properties mentioned in Theorem 4.1 are similar to those of the cactus
        tree model for the minimum cuts, though more complicated. Since the structure
        of the modeling cuts is explicit and, in a sense, simple, and since the representation
        is compact, our model seems to be convenient to represent the minimum and
        minimum+1 cuts of graphs in various applications. 2. It is likely that the
        2-level cactus model can be a useful tool for handling edge-augmentation problems
        when the increase of the connectivity is 2. Another possible direction is
        to use our representation for eeective maintenance of optimal augmentation
        sets of an incremental \u2026", "venue": "", "year": 1998, "referenceCount":
        8, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "143817739",
        "name": "J. Leeuwen"}]}, {"paperId": "684a91792d08bad9234d318790984a7b6e617475",
        "externalIds": {"MAG": "2291246510", "ArXiv": "1311.4852", "CorpusId": 119659504},
        "corpusId": 119659504, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/684a91792d08bad9234d318790984a7b6e617475",
        "title": "On the construction of tree decompositions of hypercubes", "abstract":
        "There are different concepts regarding to tree decomposition of a graph $G$.
        For the Hypercube $Q_n$, these concepts have been shown to have many applications.
        But some diverse papers on this subject make it difficult to follow what is
        precisely known. In this note first we will mention some known results on
        the tree decomposition of hypercubes and then introduce new explicit constructions
        for the previously known and unknown cases.", "venue": "", "year": 2013, "referenceCount":
        12, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": "2013-11-19", "journal": {"name":
        "arXiv: Combinatorics", "volume": ""}, "authors": [{"authorId": "20737423",
        "name": "Negin Karisani"}, {"authorId": "1730392", "name": "E. Mahmoodian"}]},
        {"paperId": "a063b5f1d16a8f1dc7558fa2df7b68304cbe5d64", "externalIds": {"CorpusId":
        543563}, "corpusId": 543563, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/a063b5f1d16a8f1dc7558fa2df7b68304cbe5d64",
        "title": "A Note on the Importance of Collaboration Graphs", "abstract": "Numerous
        challenging problems in graph theory has attracted the attention and imagination
        of researchers from physics, computer science, engineering, biology, social
        science and mathematics. If we put all these different branches one into basket,
        what evolves is a new science called \u201cNetwork Science\u201d. It calls
        for a solid scientific foundation and vigorous analysis. Graph theory in general
        and the collaboration graphs, in particular are well suited for this task.
        In this paper, we give a overview of the importance of collaboration graphs
        with its interesting background. Also we study one particular type of collaboration
        graph and list a number of open problems.", "venue": "", "year": 2011, "referenceCount":
        16, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["Review"],
        "publicationDate": null, "journal": null, "authors": [{"authorId": "3009830",
        "name": "V. Yegnanarayanan"}, {"authorId": "47213909", "name": "G. UmaMaheswari"}]},
        {"paperId": "992986c934747fa5cb333463f7d65ebb45eb70ab", "externalIds": {"ArXiv":
        "1707.08047", "MAG": "2747715876", "CorpusId": 51814361}, "corpusId": 51814361,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/992986c934747fa5cb333463f7d65ebb45eb70ab",
        "title": "Not Conway''s 99-Graph Problem", "abstract": "Conway''s 99-graph
        problem is the second problem amongst the five 1000\\$ 2017 open problems
        set. Four out of the five remain unsolved to this day, including the 99-graph
        problem. In this paper we quote Conway''s definition of the problem and give
        an alternative interpretation of it, which we humorously name \"not Conway''s
        99-graph problem\". We solve the alternative interpretation completely.",
        "venue": "", "year": 2017, "referenceCount": 2, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2017-07-25",
        "journal": {"name": "arXiv: Combinatorics", "volume": ""}, "authors": [{"authorId":
        "102924564", "name": "Sa\u2019ar Zehavi"}, {"authorId": "102823772", "name":
        "Ivo Fagundes David de Olivera"}]}, {"paperId": "49f0e32f5d4a20f1890c29f2abef56700a8fdd6f",
        "externalIds": {"MAG": "2360271695", "CorpusId": 124166039}, "corpusId": 124166039,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/49f0e32f5d4a20f1890c29f2abef56700a8fdd6f",
        "title": "Correctly Master Broken Circle Method with Graph Theory", "abstract":
        "The article points out the errors about \"Broken Circle Method\"of some books
        by using the theory about \"Directed Tree\" and \"Weighted Graph\"and at the
        same time it introduces two kinds of new methods.It also explains in detail
        how to use \"Broken Circle Method\"correctly.", "venue": "", "year": 2007,
        "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": null, "authors": [{"authorId": "1470902398", "name": "Pan
        Su-zhen"}]}, {"paperId": "9e40076a7a90309285bb2b284bc698ad51159627", "externalIds":
        {"MAG": "2952226354", "DBLP": "journals/corr/abs-1209-0700", "ArXiv": "1209.0700",
        "DOI": "10.1016/j.ipl.2013.01.016", "CorpusId": 7040381}, "corpusId": 7040381,
        "publicationVenue": "44ecc2bb-f8fd-4c6d-bd54-30ca098be91d", "url": "https://www.semanticscholar.org/paper/9e40076a7a90309285bb2b284bc698ad51159627",
        "title": "A simple test on 2-vertex- and 2-edge-connectivity", "abstract":
        null, "venue": "Information Processing Letters", "year": 2012, "referenceCount":
        17, "citationCount": 76, "influentialCitationCount": 10, "isOpenAccess": true,
        "openAccessPdf": {"url": "https://arxiv.org/pdf/1209.0700", "status": "GREEN"},
        "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "external"}, {"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2012-09-04", "journal": {"name": "Inf. Process. Lett.",
        "pages": "241-244", "volume": "113"}, "authors": [{"authorId": "34189607",
        "name": "Jens M. Schmidt"}]}, {"paperId": "e5fdf93d6f4dfb9888b093f8ef4a22c381f112e1",
        "externalIds": {"MAG": "2397848304", "DBLP": "conf/wg/BoyaciESZ13", "DOI":
        "10.1007/978-3-642-45043-3_11", "CorpusId": 33598723}, "corpusId": 33598723,
        "publicationVenue": "d62ca42c-06bc-40ff-9463-4ec00915599b", "url": "https://www.semanticscholar.org/paper/e5fdf93d6f4dfb9888b093f8ef4a22c381f112e1",
        "title": "Graphs of Edge-Intersecting Non-splitting Paths in a Tree: Towards
        Hole Representations - (Extended Abstract)", "abstract": null, "venue": "International
        Workshop on Graph-Theoretic Concepts in Computer Science", "year": 2013, "referenceCount":
        18, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
        "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2013-06-19", "journal":
        {"pages": "115-126"}, "authors": [{"authorId": "2652278", "name": "Arman Boyaci"},
        {"authorId": "1723087", "name": "T. Ekim"}, {"authorId": "1715031", "name":
        "M. Shalom"}, {"authorId": "1745839", "name": "S. Zaks"}]}, {"paperId": "d4e1ca419f3ea59a360cffbaad3ebe2068e4c744",
        "externalIds": {"MAG": "2187431552", "CorpusId": 124224316}, "corpusId": 124224316,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d4e1ca419f3ea59a360cffbaad3ebe2068e4c744",
        "title": "On construction for tree decomposition of hypercube Qn", "abstract":
        "Hypercube Qn is a graph in which the vertices are all binary vectors of length
        n, and two vertices are adjacent if and only if their components dier in exactly
        one place. There are dierent concepts regarding to tree decomposition of a
        graph G. For Qn, these concepts have been shown to have many applications.
        But some diverse papers on this subject make it dicult to follow what is precisely
        known. In this note first we will mention some known results on the tree decomposition
        of hypercubes and then introduce a new explicit constructions for the previously
        known and unknown cases.", "venue": "", "year": 2012, "referenceCount": 15,
        "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"name": "",
        "volume": ""}, "authors": [{"authorId": "20737423", "name": "Negin Karisani"},
        {"authorId": "1730392", "name": "E. Mahmoodian"}]}, {"paperId": "18b1598183996e8d972e57ab95a6c7d26ea92a06",
        "externalIds": {"CorpusId": 15846985}, "corpusId": 15846985, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/18b1598183996e8d972e57ab95a6c7d26ea92a06",
        "title": "Reports in Informatics Issn 0333-3590 Lex M versus Mcs-m Lex M versus
        Mcs-m", "abstract": "We study the problem of minimal triangulation of graphs.
        One of the first algorithms to solve this problem is Lex M, which was presented
        in 1976. A new algorithm, and a simplification of Lex M, called MCS-M was
        presented in 2002. In this paper we compare these two algorithms and show
        that they produce the same set of chordal graphs, answering an open question
        mentioned by the authors of MCS-M.", "venue": "", "year": 2004, "referenceCount":
        15, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "2286924",
        "name": "Yngve Villanger"}, {"authorId": "2104665959", "name": "Lex M versus
        MCS-M"}]}, {"paperId": "6c5881c95aa4c376c662c2c39292f19c2ceb9899", "externalIds":
        {"MAG": "2350474652", "CorpusId": 124329471}, "corpusId": 124329471, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/6c5881c95aa4c376c662c2c39292f19c2ceb9899",
        "title": "A Probe into AND/OR Graph Search AJgorithms", "abstract": "The AND/OR
        graph search algorithms are discussed. We analyze their complexity, and emphasize
        their advantages and shortcomings as well. Some improved points are put forward.
        In addition, we porbe into an analogy search method.", "venue": "", "year":
        1999, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "71730312",
        "name": "Yang Xian-ze"}]}, {"paperId": "a0b8115d23bbaf919dd37e5741507e9233ccb14f",
        "externalIds": {"MAG": "2073087946", "DBLP": "journals/dm/Keqin85", "DOI":
        "10.1016/0012-365X(85)90067-6", "CorpusId": 21338101}, "corpusId": 21338101,
        "publicationVenue": "2f38f299-9909-4c8e-a12e-76fca8afb42e", "url": "https://www.semanticscholar.org/paper/a0b8115d23bbaf919dd37e5741507e9233ccb14f",
        "title": "A problem on algebraic graph theory", "abstract": null, "venue":
        "Discrete Mathematics", "year": 1985, "referenceCount": 3, "citationCount":
        1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
        "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
        {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        ["JournalArticle"], "publicationDate": "1985-03-01", "journal": {"name": "Discret.
        Math.", "pages": "107-109", "volume": "54"}, "authors": [{"authorId": "66446769",
        "name": "Feng Keqin"}]}, {"paperId": "95802dd87e3ad0a893d48c2ea2b990fb2ccd364f",
        "externalIds": {"DBLP": "conf/soda/Gupta01", "MAG": "2005191532", "CorpusId":
        2987025}, "corpusId": 2987025, "publicationVenue": "5545566b-c0b8-418c-83a5-a986a4657572",
        "url": "https://www.semanticscholar.org/paper/95802dd87e3ad0a893d48c2ea2b990fb2ccd364f",
        "title": "Steiner points in tree metrics don''t (really) help", "abstract":
        "Consider an edge-weighted tree <i>T</i> = (<i>V</i>, <i>E</i>, <i>w</i> :
        <i>E</i> \u21a3 R<sup>+</sup>), in which a subset <i>R</i> of the nodes (called
        the <i>required</i> nodes) are colored red and the remaining nodes in <i>S</i>
        = <i>V</i>\\<i>R</i> are colored black (and called the <i>Steiner</i> nodes).
        The shortest-path distance according to the edge-weights defines a metric
        <i>d<subscrpt>T</subscrpt></i> on the vertex set <i>V</i>.\nWe now ask the
        following question: Is it possible to define another weighted tree <i>T</i>*
        = (<i>R</i>, <i>E</i>*, <i>w</i>* : <i>E</i>* \u21a3 R<sup>+</sup>), this
        time on <i>just the red vertices</i> so that the shortest-path metric <i>d<subscrpt>T</subscrpt></i>*
        induced by <i>T</i>* on the vertices in <i>R</i> is \u201cclose\u201d to the
        metric <i>d<subscrpt>T</subscrpt></i> restricted to the red vertices? I.e.,
        does there exist a weighted tree <i>T</i>* = (<i>R</i>, <i>E</i>*, <i>c</i>*)
        and a (small) constant \u03b1 such that <i>d<subscrpt>T</subscrpt></i>(<i>u</i>,
        <i>v</i>) \u2264 <i>d<subscrpt>T</subscrpt></i>* (<i>u</i>, <i>v</i>) \u2264
        \u03b1 <i>d<subscrpt>T</subscrpt></i>(<i>u</i>, <i>v</i>) for any two red
        vertices <i>u</i>, <i>v</i> \u2208 <i>R</i>?\nWe answer this question in the
        affirmative, and give a linear time algorithm to obtain a tree <i>T</i>* with
        \u03b1 \u2264 8. We also give two applications of this result: an upper bound,
        in which we show that emulating multicasts using unicasts can be almost as
        good as general multicasts for certain performance measures; and a lower bound,
        in which we give a simple combinatorial proof of the fact that the metric
        generated by a graph of girth<i>g</i> must suffer a distortion of at least
        &OHgr;(<i>g</i>) when approximated by a tree.", "venue": "ACM-SIAM Symposium
        on Discrete Algorithms", "year": 2001, "referenceCount": 6, "citationCount":
        104, "influentialCitationCount": 9, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
        "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2001-01-09", "journal":
        {"pages": "220-227"}, "authors": [{"authorId": "2110759547", "name": "Anupam
        Gupta"}]}, {"paperId": "539723910efb0128bfa341755aae3c2787030d7b", "externalIds":
        {"DBLP": "journals/siamdm/BoriePT91", "MAG": "2016461430", "DOI": "10.1137/0404043",
        "CorpusId": 207053214}, "corpusId": 207053214, "publicationVenue": "602bea1c-7ecb-43ec-a867-7666099e62c3",
        "url": "https://www.semanticscholar.org/paper/539723910efb0128bfa341755aae3c2787030d7b",
        "title": "Deterministic Decomposition of Recursive Graph Classes", "abstract":
        "The popular class of series-parallel graphs can be built recursively from
        single edges by combining smaller components via connections only at a fixed
        pair of vertices called terminals. This recursive construction property with
        a limited number of terminals is essential to the linear time solution of
        problems on these graphs. A second useful property of these graphs is that
        decomposition is deterministic with respect to the series-parallel rules.
        This implies that the parse-tree of decomposition (which is required by the
        algorithms) can be determined in a straightforward manner by repeatedly applying
        the decomposition rules. Subject to retaining these properties, we examine
        how far the series-parallel graphs can be generalized. Corollaries of our
        results yield the deterministic decomposition of the series-parallel and Halin
        graph classes.", "venue": "SIAM Journal on Discrete Mathematics", "year":
        1991, "referenceCount": 3, "citationCount": 28, "influentialCitationCount":
        1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics",
        "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
        "external"}, {"category": "Computer Science", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "1991-09-01", "journal": {"name": "SIAM J. Discret. Math.", "pages": "481-501",
        "volume": "4"}, "authors": [{"authorId": "1854954", "name": "R. Borie"}, {"authorId":
        "49966188", "name": "R. Parker"}, {"authorId": "1693856", "name": "C. Tovey"}]},
        {"paperId": "2c5eb355a56549858391adee075629cc753b2de5", "externalIds": {"CorpusId":
        221791526}, "corpusId": 221791526, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2c5eb355a56549858391adee075629cc753b2de5",
        "title": "1 A First Encounter with Graphs", "abstract": "There is not much
        fun in listing basic definitions about graphs (this is quite a bad introduction
        to start with!) but if we seek a rigorous presentation of results and proofs,
        then we cannot avoid giving accurate definitions of the objects that we will
        manipulate, but hopefully nice examples will also come quickly. In this book,
        we assume that the reader has a basic (or, at least a naive) knowledge of
        sets and operations on them.", "venue": "", "year": 2016, "referenceCount":
        13, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": []}, {"paperId": "6a92e988bc6f8f6e7b5e8955143f3f265a28c622",
        "externalIds": {"MAG": "2171697943", "DOI": "10.1007/978-3-7091-9076-0_9",
        "CorpusId": 124531701}, "corpusId": 124531701, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/6a92e988bc6f8f6e7b5e8955143f3f265a28c622",
        "title": "Path Problems in Graphs", "abstract": null, "venue": "", "year":
        1990, "referenceCount": 14, "citationCount": 62, "influentialCitationCount":
        3, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": {"name": "", "pages": "155-189", "volume": ""}, "authors": [{"authorId":
        "1685555", "name": "G. Rote"}]}, {"paperId": "792a229a1447fd7d7b37b32a67230d4107d18103",
        "externalIds": {"MAG": "2157246792", "DBLP": "journals/combinatorics/Domshlak02",
        "DOI": "10.37236/1640", "CorpusId": 5301836}, "corpusId": 5301836, "publicationVenue":
        "98ea9a6a-c9d7-4b4e-97ec-ee582bd62fa2", "url": "https://www.semanticscholar.org/paper/792a229a1447fd7d7b37b32a67230d4107d18103",
        "title": "On Recursively Directed Hypercubes", "abstract": "In this paper
        we introduce the recursively directed hypercubes , and analyze some of their
        structural properties. We show that every recursively directed hypercube is
        acyclic, and has a unique pair of source and sink nodes. The main contribution
        of the paper is an analysis of distances between the nodes in such a graph.
        We show that the distance from the source node to any other node, and from
        any node to the sink node is bounded by $n+1$, where $n$ is the dimension
        of the hypercube, but the diameter of a recursively directed hypercube may
        be exponential in $n$.", "venue": "Electronic Journal of Combinatorics", "year":
        2001, "referenceCount": 13, "citationCount": 10, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.combinatorics.org/ojs/index.php/eljc/article/download/v9i1r23/pdf",
        "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science", "Mathematics"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Mathematics", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2001-05-07", "journal": {"name": "Electron. J. Comb.", "volume": "9"}, "authors":
        [{"authorId": "1735824", "name": "C. Domshlak"}]}, {"paperId": "115bb1a8a7b45745649202af73524517c191b9ea",
        "externalIds": {"CorpusId": 54193941}, "corpusId": 54193941, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/115bb1a8a7b45745649202af73524517c191b9ea",
        "title": "Graph Theory 2017 \u2013 EPFL \u2013", "abstract": "The first is
        a multigraph, which can have multiple edges and loops; the corresponding definition
        would allow the edge set and the edges to be multisets. The second is a directed
        graph, in which every edge has a direction; in the corresponding definition
        the edges would be ordered pairs instead of two-element subsets. In this course
        we mostly avoid these variants for simplicity, although they are certainly
        very useful objects. The graphs of these type appear, e.g., when trying to
        model Internet: represent sites (or web pages) as vertices, and links", "venue":
        "", "year": 2017, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "s2-fos-model"}, {"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": null, "authors": [{"authorId": "1679129", "name": "A. Kupavskii"}]},
        {"paperId": "586b6a34456a13e5d32a6f8bc6c4f9e96f848e2a", "externalIds": {"DBLP":
        "journals/networks/PandaD07", "DOI": "10.1002/net.20198", "CorpusId": 3978885},
        "corpusId": 3978885, "publicationVenue": "69d79d4c-49aa-4c2b-b616-80100a634f67",
        "url": "https://www.semanticscholar.org/paper/586b6a34456a13e5d32a6f8bc6c4f9e96f848e2a",
        "title": "On tree 3\u2010spanners in directed path graphs", "abstract": "A
        spanning tree T of a graph G is said to be a tree t\u2010spanner if the distance
        between any two vertices in T is at most t times their distance in G. While
        the complexity of the problem of recognizing whether a graph has a tree t\u2010spanner
        is known for any fixed t\u22603, the case t = 3 is still open. H.\u2010O.
        Le and V. B. Le (1999, Networks, 34(2), 81\u201087) have shown that every
        directed path graph admits a tree 3\u2010spanner by proposing an algorithm
        to construct a tree 3\u2010spanner of a given directed path graph. In this
        paper, we point out a flaw in their algorithm by producing a directed path
        graph for which their algorithm fails to produce a tree 3\u2010spanner although
        the graph admits a tree 3\u2010spanner. Furthermore, we show that directed
        path graphs need not admit tree 3\u2010spanners in general. Next, we show
        that directed path graphs of diameter two always admit tree 2\u2010spanners
        and hence tree 3\u2010spanners. Finally, we show that a tree 2\u2010spanner
        of a diameter two directed path graph can be constructed in linear time. \u00a9
        2007 Wiley Periodicals, Inc. NETWORKS, Vol. 50(3), 203\u2013210 2007", "venue":
        "Networks", "year": 2007, "referenceCount": 0, "citationCount": 2, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://onlinelibrary.wiley.com/doi/pdfdirect/10.1002/net.20198",
        "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2007-10-01", "journal":
        {"name": "Networks", "volume": "50"}, "authors": [{"authorId": "34775605",
        "name": "B. S. Panda"}, {"authorId": "48806821", "name": "Anita Das"}]}, {"paperId":
        "4b6da1a83bdd79202663cc2fe04addbbc74111cf", "externalIds": {"DBLP": "phd/ca/Chaplick12",
        "MAG": "2564348232", "CorpusId": 125344771}, "corpusId": 125344771, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/4b6da1a83bdd79202663cc2fe04addbbc74111cf",
        "title": "Path Graphs and PR-trees", "abstract": "The PR-tree data structure
        is introduced to characterize the sets of path-tree models of path graphs.
        We further characterize the sets of directed path-tree models of directed
        path graphs with a slightly restricted form of the PR-tree called the Strong
        PR-tree. Additionally, via PR-trees and Strong PR-trees, we characterize path
        graphs and directed path graphs by their Split Decompositions. Two distinct
        approaches (Split Decomposition and Reduction ) are presented to construct
        a PR-tree that captures the path-tree models of a given graph G = (V, E) with
        n = |V| and m = |E|. An implementation of the split decomposition approach
        is presented which runs in O (nm) time. Similarly, an implementation of the
        reduction approach is presented which runs in O (A(n + m) nm) time (where
        A(s) is the inverse of Ackermann''s function arising from Union-Find [40]).
        Also, from a PR-tree, an algorithm to construct a corresponding Strong PR-tree
        is given which runs in O (n + m) time. The sizes of the PR-trees and Strong
        PR-trees produced by these approaches are O (n + m) with respect to the given
        graph. Furthermore, we demonstrate that an implicit form of the PR-tree and
        Strong PR-tree can be represented in O (n) space.", "venue": "", "year": 2012,
        "referenceCount": 0, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Mathematics", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
        "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
        {"name": "", "volume": ""}, "authors": [{"authorId": "1798388", "name": "S.
        Chaplick"}]}, {"paperId": "f6c952628d866f8418533aa4c70e5ca71c888f88", "externalIds":
        {"MAG": "2053469126", "DBLP": "journals/dam/Babel00", "DOI": "10.1016/S0166-218X(99)00140-7",
        "CorpusId": 20123365}, "corpusId": 20123365, "publicationVenue": "8287474c-2cf8-4dfe-b1c6-cf6119d879ab",
        "url": "https://www.semanticscholar.org/paper/f6c952628d866f8418533aa4c70e5ca71c888f88",
        "title": "Recognition and Isomorphism of Tree-like P4-connected Graphs", "abstract":
        null, "venue": "Discrete Applied Mathematics", "year": 2000, "referenceCount":
        18, "citationCount": 9, "influentialCitationCount": 4, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2000-02-01", "journal":
        {"name": "Discret. Appl. Math.", "pages": "295-315", "volume": "99"}, "authors":
        [{"authorId": "3213320", "name": "Luitpold Babel"}]}, {"paperId": "6363e363304b962a0a8745a3cfa71e1a546b10d1",
        "externalIds": {"CorpusId": 201913660}, "corpusId": 201913660, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/6363e363304b962a0a8745a3cfa71e1a546b10d1",
        "title": "On Edge Product Cordial Labeling of Some Product Related Graphs",
        "abstract": "An edge product cordial labeling is a variant of product cordial
        labeling. We have explored this concept in the context of different graph
        products.", "venue": "", "year": 2014, "referenceCount": 13, "citationCount":
        2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Biology", "source":
        "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
        [{"authorId": "32056272", "name": "S. Vaidya"}, {"authorId": "102980368",
        "name": "C. M. Barasara"}]}, {"paperId": "c2a6ba9c5a6a5aced7a0a7c7aef7dff8f83ecc85",
        "externalIds": {"CorpusId": 73557877}, "corpusId": 73557877, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/c2a6ba9c5a6a5aced7a0a7c7aef7dff8f83ecc85",
        "title": "CONNECTIONS BETWEEN LABELLINGS OF TREES", "abstract": "There are
        many long-standing conjectures related with some labellings of trees. It is
        important to connect labellings that are related with conjectures. We find
        some connections between known labellings of", "venue": "", "year": 2017,
        "referenceCount": 6, "citationCount": 27, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "100573736", "name": "M. Yao"},
        {"authorId": "145323141", "name": "B. Yao"}, {"authorId": "49544451", "name":
        "X. Liu"}, {"authorId": "1730392", "name": "E. Mahmoodian"}]}, {"paperId":
        "5d66e0fabe911d5f39dd418a48621e5cde32dd50", "externalIds": {"CorpusId": 209522680},
        "corpusId": 209522680, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5d66e0fabe911d5f39dd418a48621e5cde32dd50",
        "title": "A M inimum 3-Connectivity Augmentat ion of a Graph", "abstract":
        "The paper considers the minimum 3-connectivity augmentat ion problems: determining
        a minimum-weight set of edges to be added so as to 3-connect a given undirected
        simple graph. The first result is that the problem is NP-complete even if
        a given graph and weights are restricted to a 2-connected graph and either
        1 or 2, respectively. The second result is for the problem with all weights
        are equal: it is shown that the cardinahty of a solution to the problem can
        be computed from a given graph and that there is an U(n,(n, + n,)*) algorithm
        for finding a solution, where n, and np are the numbers of vertices and edges
        of a given graph, respectively.", "venue": "", "year": 2003, "referenceCount":
        10, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "2075931095", "name": "Akira"},
        {"authorId": "2105408437", "name": "Nakamcjra"}]}, {"paperId": "f57a44bf74f695a5dd4b696bc539813182089f72",
        "externalIds": {"CorpusId": 6742442}, "corpusId": 6742442, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/f57a44bf74f695a5dd4b696bc539813182089f72",
        "title": "On determining number and metric dimension of graphs", "abstract":
        "This paper initiates a study on the problem of computing the difference between
        the metric dimension and the determining number of graphs. We provide new
        proofs and results on the determining number of trees and Cartesian products
        of graphs and establish some lower bounds on the difference between the two
        parameters.", "venue": "", "year": 2007, "referenceCount": 22, "citationCount":
        33, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
        [{"authorId": "144514502", "name": "J. C\u00e1ceres"}, {"authorId": "144420364",
        "name": "D. Garijo"}, {"authorId": "1893590", "name": "M. L. Puertas"}, {"authorId":
        "1714475", "name": "C. Seara"}]}, {"paperId": "9b4a45a72c26db4e15a78ca224c14d733a3e6922",
        "externalIds": {"MAG": "2000595973", "DBLP": "conf/spaa/EvenL92", "DOI": "10.1145/140901.140908",
        "CorpusId": 13516309}, "corpusId": 13516309, "publicationVenue": "43893b55-fde6-4e2b-9d2e-c15a669a1f94",
        "url": "https://www.semanticscholar.org/paper/9b4a45a72c26db4e15a78ca224c14d733a3e6922",
        "title": "Layered cross product\u2014a technique to construct interconnection
        networks", "abstract": "We introduce a Layered Cross Product \u2014 A Technique
        to Construct Interconnection Networks Shimon Even* and Ami Litmant Computer
        Science Department Technion, Israel Institute of Technology Haifa, Israel
        32000 Layered Cross Product, LCP, of layered graphs and show that several
        well known networks are LCP-S of simple layered graphs, such as trees. Some
        important properties of these networks are shown to be trivial consequences,
        once a network is presented as an LCP of simpler graphs. We believe that this
        new tool will make the construction of new networks easier, and it will simplify
        the study of the properties of known and new networks.", "venue": "ACM Symposium
        on Parallelism in Algorithms and Architectures", "year": 1992, "referenceCount":
        11, "citationCount": 14, "influentialCitationCount": 2, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "1992-06-01", "journal": {"pages": "60-69"}, "authors":
        [{"authorId": "1733075", "name": "S. Even"}, {"authorId": "145903595", "name":
        "A. Litman"}]}, {"paperId": "53ff71bdce845c27ca44097d4c87792991827664", "externalIds":
        {"MAG": "2907875989", "DBLP": "conf/isaac/LoS18", "DOI": "10.4230/LIPIcs.ISAAC.2018.38",
        "CorpusId": 54448302}, "corpusId": 54448302, "publicationVenue": "01259446-be8e-4510-a20c-cf0cb92f2a75",
        "url": "https://www.semanticscholar.org/paper/53ff71bdce845c27ca44097d4c87792991827664",
        "title": "A Cut Tree Representation for Pendant Pairs", "abstract": "Two vertices
        v and w of a graph G are called a pendant pair if the maximal number of edge-disjoint
        paths in G between them is precisely min{d(v), d(w)}, where d denotes the
        degree function. The importance of pendant pairs stems from the fact that
        they are the key ingredient in one of the simplest and most widely used algorithms
        for the minimum cut problem today. Mader showed 1974 that every simple graph
        with minimum degree \u03b4 contains \u03a9(\u03b42) pendant pairs; this is
        the best bound known so far. We improve this result by showing that every
        simple graph G with minimum degree \u03b4 \u2265 5 or with edge-connectivity
        \u03bb \u2265 4 or with vertex-connectivity \u03ba \u2265 3 contains in fact
        \u03a9(\u03b4|V |) pendant pairs. We prove that this bound is tight from several
        perspectives, and that \u03a9(\u03b4|V |) pendant pairs can be computed efficiently,
        namely in linear time when a Gomory-Hu tree is given. Our method utilizes
        a new cut tree representation of graphs. 2012 ACM Subject Classification Mathematics
        of computing \u2192 Graph theory, Mathematics of computing \u2192 Graph algorithms",
        "venue": "International Symposium on Algorithms and Computation", "year":
        2018, "referenceCount": 16, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Mathematics", "source": "external"},
        {"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": null, "journal": {"pages": "38:1-38:9"},
        "authors": [{"authorId": "22238802", "name": "O. S. Lo"}, {"authorId": "34189607",
        "name": "Jens M. Schmidt"}]}, {"paperId": "7dc3433d22de7f3438014a6f703dba14ca5bce29",
        "externalIds": {"MAG": "2088408040", "DOI": "10.1016/0898-1221(91)90191-6",
        "CorpusId": 122854146}, "corpusId": 122854146, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/7dc3433d22de7f3438014a6f703dba14ca5bce29",
        "title": "Total exchange algorithms on \u2018sandwich graphs\u2019", "abstract":
        null, "venue": "", "year": 1991, "referenceCount": 2, "citationCount": 1,
        "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
        "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
        {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": {"name": "Computers & Mathematics
        With Applications", "pages": "45-48", "volume": "22"}, "authors": [{"authorId":
        "2968332", "name": "K. Coolsaet"}, {"authorId": "2829390", "name": "V. Fack"}]},
        {"paperId": "19868844fa517ea03f47feb71042b2629676fc0e", "externalIds": {"CorpusId":
        13296182}, "corpusId": 13296182, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/19868844fa517ea03f47feb71042b2629676fc0e",
        "title": "2 F eb 2 00 5 How to count trees ?", "abstract": "We propose a new
        topological invariant of unlabeled trees of N nodes. The invariant is a set
        of N \u00d7 2 matrices of integers, with j k d i,j and vi as the matrix elements,
        where di,j are the elements of the distance matrix and vi denotes i-th node''s
        degree and k \u2208 Z. To compare the invariant calculated for possibly different
        graphs, the matrix rows are ordered with respect to first column, and \u2014
        if necessary \u2014 with respect to the second one. We use the new invariant
        to evaluate from below the number of topologically different unlabeled trees
        up to N = 17. The results slightly exceed the asymptotic evaluation of Otter.",
        "venue": "", "year": 2005, "referenceCount": 9, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "s2-fos-model"}, {"category":
        "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": null, "authors": [{"authorId": "102699689", "name": "S. Piec"},
        {"authorId": "3209892", "name": "K. Malarz"}, {"authorId": "98639388", "name":
        "K. K. lakowski"}]}, {"paperId": "c54a575be47b73220196ba56a03b6131164b3819",
        "externalIds": {"MAG": "2256395349", "DOI": "10.17969/JN.V13I1.840", "CorpusId":
        124538007}, "corpusId": 124538007, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/c54a575be47b73220196ba56a03b6131164b3819",
        "title": "IDENTIFY CONNECTIVITY GRAPH USING A MODIFIED PR\u00dcFER\u2019S
        ALGORITHM LABELLING TREES", "abstract": "Connectivity of graph easily can
        be given when we see it with the bare of eyes, but needs an algorithm that
        can assure the connectivity in computerization. Some graphs require the connectivity
        in their definitions, such as Hamiltonian graph, Eulerian graph and tree.
        The connectivity become important in order to solve any of graphs'' problems
        by using computer technology. Most of the algorithm cannot run perfectly,
        if the graph which is given was not connected. It is happened to Djikstra
        and Prufer graphs for example. However, this study will provide the solution
        by modifying Prufer algorithm to show the connectivity in the graph.", "venue":
        "", "year": 2013, "referenceCount": 8, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": "2013-03-01", "journal": {"name": "", "volume": "13"},
        "authors": [{"authorId": "2078170710", "name": "Al Aiyub"}, {"authorId": "103356282",
        "name": "M. Ihsan"}, {"authorId": "18154757", "name": "Rahma Zuhra"}]}, {"paperId":
        "5942616aef4c13559cc08a1b30a92703efbffc15", "externalIds": {"CorpusId": 18995},
        "corpusId": 18995, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5942616aef4c13559cc08a1b30a92703efbffc15",
        "title": "MICHAEL J. PELSMAJER Brief Research Summary (October 2007)", "abstract":
        "Mostly I study graph theory: sometimes more as mathematics (structural, extremal)
        and sometimes more as computer science (algorithms, complexity), although
        one often helps with the other, and I have interests (graph drawing, tree-width)
        that fall squarely in the middle of of the two fields. As for topics, I have
        not particularly specialized or restricted the types of problems I work on.
        Rather, as I look back it seems that for the most part, I selected projects
        based simply on niceness: of a problem, the people involved, and whether there
        is an application. Unfortunately my style of working makes it harder to quickly
        summarize my work, even assuming that the reader knows is familiar with basic
        graph theory concepts (terminology will agree with [84] or [27] whenever possible.)
        However, this is what I must do next. Unless specified otherwise, all graphs
        are assumed to be simple, and G is a graph on n vertices.", "venue": "", "year":
        2007, "referenceCount": 78, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": null, "authors": [{"authorId": "1709295",
        "name": "M. J. Pelsmajer"}]}, {"paperId": "6fbd4bab086f429baa2764e38d172c33c8a33737",
        "externalIds": {"DOI": "10.1515/9783110635485-002", "CorpusId": 241127096},
        "corpusId": 241127096, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6fbd4bab086f429baa2764e38d172c33c8a33737",
        "title": "2 The stable marriage problem", "abstract": "A large part of the
        course will address ways of \u201cdealing\u201d with NP-hard optimization
        problems. Recall that these are problems that (unless P = NP) do not have
        polynomial time algorithms. One example is Vertex Cover. A vertex cover is
        a subset of vertices in a graph such that every edge in the graph is incident
        on at least one of the vertices. The associated optimization problem, Vertex
        Cover, is to find a minimal vertex cover\u2014 i.e., one with the smallest
        possible number of vertices. Here are some ways we will address NP-hard optimization
        problems:", "venue": "Optimal Transport", "year": 2021, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2021-01-18",
        "journal": {"name": "Optimal Transport"}, "authors": [{"authorId": "1717488",
        "name": "D. Melkebeek"}]}, {"paperId": "556bb7c8892c0a5b4e467dd9a0ae29eb70606f77",
        "externalIds": {"CorpusId": 44830960}, "corpusId": 44830960, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/556bb7c8892c0a5b4e467dd9a0ae29eb70606f77",
        "title": "1 : 2 2-Connectivity in Directed Graphs", "abstract": "We survey
        some recent results on 2-edge and 2-vertex connectivity problems in directed
        graphs. Despite being complete analogs of the corresponding notions on undirected
        graphs, in digraphs 2vertex and 2-edge connectivity have a much richer and
        more complicated structure. It is thus not surprising that 2-connectivity
        problems on directed graphs appear to be more difficult than on undirected
        graphs. For undirected graphs it has been known for over 40 years how to compute
        all bridges, articulation points, 2-edgeand 2-vertex-connected components
        in linear time, by simply using depth-first search. In the case of digraphs,
        however, the very same problems have been much more challenging and required
        the development of new tools and techniques. 1998 ACM Subject Classification
        E.1 [Graphs and Networks] Trees, F.2.2 [Nonnumerical Algorithms and Problems]
        Computations on Discrete Structures, G.2.2 [Graph Algorithms] Trees", "venue":
        "", "year": 2016, "referenceCount": 33, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate":
        null, "journal": null, "authors": [{"authorId": "2317777", "name": "L. Georgiadis"},
        {"authorId": "1688493", "name": "G. Italiano"}, {"authorId": "3170658", "name":
        "Nikos Parotsidis"}]}, {"paperId": "b3235fbf2a5dce8978bbd36e0f28a9cb05426305",
        "externalIds": {"CorpusId": 17937215}, "corpusId": 17937215, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/b3235fbf2a5dce8978bbd36e0f28a9cb05426305",
        "title": "Advanced Algorithms Course. Lecture Notes. Part 3 Disjoint Paths
        and Routing", "abstract": "Given a directed graph with m edges, and k node
        pairs (s i , t i), we wish to find directed paths from s i to t i for as many
        as possible indices i, that do not share any edges. We also call such paths
        edge-disjoint. This is a fundamental problem in routing in networks. Imagine
        that we want to send goods, information, etc., from source nodes to destination
        nodes along available directed paths, without unreasonable congestion. In
        general we cannot send everything simultaneously, but we may try and maximize
        the number of served requests. The problem is NP-complete (which we do not
        prove here), but we present an algorithm with approximation ratio O(\u221a
        m). The square root is a \" small \" function, still the quality of the solution
        deteriorates with growing network size. This result seems to be poor, but
        it is the best possible guarantee one can achieve in polynomial time, and
        still better than no guarantee at all. As often, the idea of a greedy algorithm
        is simple: Short paths should minimize the chances of conflicts with other
        paths, and the shortest paths can be computed efficiently. Therefore, the
        proposed algorithm just chooses a shortest path that connects some yet unconnected
        pair and adds it to the solution, as long as possible. After every step we
        delete the edges of the path used, in order to avoid collisions with paths
        chosen later. However, the idea is not as powerful as one might hope: In each
        step there could exist many short paths to choose from, and we may easily
        miss a good one, since we only take length as selection criterion. But at
        least we can prove the O(\u221a m) factor, as follows. Let I * and I denote
        the set of indices i of the pairs (s i , t i) connected by the optimal and
        the greedy solution, respectively. Let P * i and P i denote the selected paths
        for index i.", "venue": "", "year": null, "referenceCount": 0, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": []}, {"paperId": "4d39232a5b86f1a09a5d0fd88266cca9940dfac6",
        "externalIds": {"MAG": "2144852945", "DOI": "10.1109/TCS.1985.1085721", "CorpusId":
        122814169}, "corpusId": 122814169, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4d39232a5b86f1a09a5d0fd88266cca9940dfac6",
        "title": "An approximate formula for counting trees in a graph", "abstract":
        "In the paper, an approximate formula for counting trees in a graph is presented.
        The formula estimates the change in the number of trees of a reference graph
        after adding or removing a certain number of lines to obtain a graph with
        the same number of lines as the graph considered. It is assumed that the reference
        graph and the graph analyzed have the same number of points. It is also assumed
        that the number of trees of a reference graph changes with a change in the
        number of lines identically as in a uniform graph. Special classes of reference
        graphs are discussed and formulas for counting trees are given.", "venue":
        "", "year": 1985, "referenceCount": 11, "citationCount": 10, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "1985-04-01",
        "journal": {"name": "IEEE Transactions on Circuits and Systems", "pages":
        "382-385", "volume": "32"}, "authors": [{"authorId": "49421541", "name": "J.
        Wojciechowski"}]}, {"paperId": "720894c7046745e5f42f0ebd863515ecb11126e8",
        "externalIds": {"CorpusId": 17218510}, "corpusId": 17218510, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/720894c7046745e5f42f0ebd863515ecb11126e8",
        "title": "The Complexity of the Matching-Cut Problem", "abstract": null, "venue":
        "", "year": 1998, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": null, "authors": []}, {"paperId": "87f8c7e5d93dc3f8e376bcc117d5917a3ef42105",
        "externalIds": {"DBLP": "conf/wg/1992", "MAG": "2487390077", "DOI": "10.1007/3-540-56402-0",
        "CorpusId": 1572251}, "corpusId": 1572251, "publicationVenue": "2f5d0e8a-faad-4f10-b323-2b2e3c439a78",
        "url": "https://www.semanticscholar.org/paper/87f8c7e5d93dc3f8e376bcc117d5917a3ef42105",
        "title": "Graph-Theoretic Concepts in Computer Science", "abstract": null,
        "venue": "Lecture Notes in Computer Science", "year": 1992, "referenceCount":
        0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
        "openAccessPdf": {"url": "https://link.springer.com/content/pdf/bfm:978-3-540-47554-5/1?pdf=chapter%20toc",
        "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "657"},
        "authors": [{"authorId": "1744120", "name": "F. Fomin"}]}, {"paperId": "bc273d1ef032da0def56f9824d5b4d2ccdf28f23",
        "externalIds": {"MAG": "2608652533", "DOI": "10.7494/OPMATH.2017.37.4.501",
        "CorpusId": 20668424}, "corpusId": 20668424, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/bc273d1ef032da0def56f9824d5b4d2ccdf28f23",
        "title": "Spanning trees with a bounded number of leaves", "abstract": "In
        1998, H. Broersma and H. Tuinstra proved that: Given a connected graph \\(G\\)
        with \\(n\\geq 3\\) vertices, if \\(d(u)+d(v)\\geq n-k+1\\) for all non-adjacent
        vertices \\(u\\) and \\(v\\) of \\(G\\) (\\(k\\geq 1\\)), then \\(G\\) has
        a spanning tree with at most \\(k\\) leaves. In this paper, we generalize
        this result by using implicit degree sum condition of \\(t\\) (\\(2\\leq t\\leq
        k\\)) independent vertices and we prove what follows: Let \\(G\\) be a connected
        graph on \\(n\\geq 3\\) vertices and \\(k\\geq 2\\) be an integer. If the
        implicit degree sum of any \\(t\\) independent vertices is at least \\(\\frac{t(n-k)}{2}+1\\)
        for (\\(k\\geq t\\geq 2\\)), then \\(G\\) has a spanning tree with at most
        \\(k\\) leaves.", "venue": "", "year": 2017, "referenceCount": 13, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
        {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": {"name": "Opuscula Mathematica",
        "pages": "501-508", "volume": "37"}, "authors": [{"authorId": "3165098", "name":
        "Junqing Cai"}, {"authorId": "3262237", "name": "E. Flandrin"}, {"authorId":
        "2152297901", "name": "Hao Li"}, {"authorId": "2112590308", "name": "Qiang
        Sun"}]}, {"paperId": "30287549b01c0846d04be53574b4525f4b61fcb6", "externalIds":
        {"MAG": "806160400", "CorpusId": 118380540}, "corpusId": 118380540, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/30287549b01c0846d04be53574b4525f4b61fcb6",
        "title": "Disjoint euclidean paths problem (DEPP)", "abstract": "Note: PRO
        91.03 Reference ROSO-CONF-1991-001 Record created on 2006-02-13, modified
        on 2016-08-08", "venue": "", "year": 1991, "referenceCount": 0, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": {"name": "", "pages": "10", "volume": ""}, "authors": [{"authorId":
        "2159430", "name": "T. Liebling"}]}, {"paperId": "d6aa2d6c4f449defb2005f8ecbb050453c999a8a",
        "externalIds": {"DBLP": "journals/endm/Szwarcfiter01", "MAG": "1576296087",
        "DOI": "10.1016/S1571-0653(04)00209-4", "CorpusId": 30693249}, "corpusId":
        30693249, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d6aa2d6c4f449defb2005f8ecbb050453c999a8a",
        "title": "Preface: Volume 7", "abstract": null, "venue": "Electron. Notes
        Discret. Math.", "year": 2001, "referenceCount": 0, "citationCount": 3, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2001-04-01", "journal":
        {"name": "Electron. Notes Discret. Math.", "pages": "1", "volume": "7"}, "authors":
        [{"authorId": "1696569", "name": "J. Szwarcfiter"}]}, {"paperId": "25ae1c7fb83f657e30cff8493d3761271d08fd0c",
        "externalIds": {"MAG": "271097825", "DOI": "10.1007/978-3-642-95486-3_31",
        "CorpusId": 118109617}, "corpusId": 118109617, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/25ae1c7fb83f657e30cff8493d3761271d08fd0c",
        "title": "Partial Path Groups and Parallel Graph Contractions", "abstract":
        null, "venue": "", "year": 1986, "referenceCount": 6, "citationCount": 8,
        "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
        "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
        Science", "source": "external"}, {"category": "Computer Science", "source":
        "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
        {"name": "", "pages": "369-382", "volume": ""}, "authors": [{"authorId": "143766793",
        "name": "A. Rosenfeld"}]}, {"paperId": "12bc78410570753c46db1f61e2250440d39c2fc2",
        "externalIds": {"MAG": "2503004676", "CorpusId": 56074483}, "corpusId": 56074483,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/12bc78410570753c46db1f61e2250440d39c2fc2",
        "title": "A Lower Bound on the Degree Distance in a Tree", "abstract": "For
        a graph G =( V,E), the degree distance of G is defined as DD(G )= {u,v}\u2286V
        (G) (dG(u )+ dG(v))dG(u,v) where dG(u) (or d(u)) is the degree of the vertex
        uG , and dG(u,v )i s the distance between u and v. This paper gets a lower
        bound on the degree distance in a tree in terms of the order and diameter
        of the tree. Mathematics Subject Classification: 05C05, 05C12", "venue": "",
        "year": 2010, "referenceCount": 9, "citationCount": 10, "influentialCitationCount":
        1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": {"name": "", "volume": ""}, "authors":
        [{"authorId": "1937986", "name": "Shubo Chen"}, {"authorId": "2116390163",
        "name": "Zhijun Guo"}]}, {"paperId": "565d3857b8f6838bd66aea49733c4e3389a8c188",
        "externalIds": {"MAG": "2385244139", "CorpusId": 124587805}, "corpusId": 124587805,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/565d3857b8f6838bd66aea49733c4e3389a8c188",
        "title": "A Polynomial Algorithm for Double-Weight Arborescence", "abstract":
        "In this paper, according to a real example, we build the model of finding
        the minimum parametric double-weight arborescence in a double-weight directed
        graph. By solving a series of other problems p2(l), we deduce an algorithm
        which is polynomial and produces the desired arborescence.", "venue": "",
        "year": 2002, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "2103487151",
        "name": "Tang Ze-ying"}]}, {"paperId": "6d97217d4557cd4e9cb774bc745c10ac44dc3984",
        "externalIds": {"DBLP": "journals/dam/LalouTK16", "MAG": "2063077688", "DOI":
        "10.1016/j.dam.2015.01.043", "CorpusId": 5581065}, "corpusId": 5581065, "publicationVenue":
        "8287474c-2cf8-4dfe-b1c6-cf6119d879ab", "url": "https://www.semanticscholar.org/paper/6d97217d4557cd4e9cb774bc745c10ac44dc3984",
        "title": "Component-cardinality-constrained critical node problem in graphs",
        "abstract": null, "venue": "Discrete Applied Mathematics", "year": 2016, "referenceCount":
        32, "citationCount": 35, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2016-09-10", "journal":
        {"name": "Discret. Appl. Math.", "pages": "150-163", "volume": "210"}, "authors":
        [{"authorId": "3428079", "name": "M. Lalou"}, {"authorId": "3054756", "name":
        "Mohammed Amin Tahraoui"}, {"authorId": "1710654", "name": "H. Kheddouci"}]},
        {"paperId": "de733fcd1255b9165070476cb9307dd0d383ad9d", "externalIds": {"CorpusId":
        235819658}, "corpusId": 235819658, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/de733fcd1255b9165070476cb9307dd0d383ad9d",
        "title": "Some product cordial graphs", "abstract": "Introduction We begin
        with simple, finite, connected and undirected graph ( , ) G p q with order
        p and size q . Throughout this work V and E respectively denote the vertex
        set and edge set of G . For all standard terminology and notations we follow
        Gross and Yellen [1]. We will give brief summary of definitions which are
        useful for the present investigations. Definition 1.1 : If the vertices of
        the graph are assigned values subject to certain conditions then is known
        as graph labeling. Most of the graph labeling problems have following three
        common characteristics: 1. a set of numbers for assignment of vertex labels;
        2. a rule that assigns a label to each edge; 3. some condition(s) these labels
        must satisfy. Labeled graphs have applications in many diversified fields.
        A detailed study on variety of applications of graph labeling is reported
        in Bloom and Golomb [2]. For extensive survey on graph labeling and bibliographic
        reference we refer to Gallian [3]. Enough literature is available in printed
        as well as in electronic form on different types of graph labeling. According
        to Beineke and Hegde [4], the concept of graph labeling is a frontier between
        number theory and structure of graphs. Definition 1.2 : A mapping : ( ) {0,1}
        f V G \u2192 is called binary", "venue": "", "year": 2012, "referenceCount":
        12, "citationCount": 6, "influentialCitationCount": 1, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["Review"],
        "publicationDate": null, "journal": null, "authors": [{"authorId": "2067367746",
        "name": "S. Vaidya"}, {"authorId": "102980368", "name": "C. M. Barasara"}]},
        {"paperId": "7efc39fd108df88049b06bf37b23a627dcab729f", "externalIds": {"CorpusId":
        14922096}, "corpusId": 14922096, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/7efc39fd108df88049b06bf37b23a627dcab729f",
        "title": "Graph Connectivity and Network Coding", "abstract": "Graph Connectivity
        and Network Coding LEUNG, Kai Man Master of Philosophy Department of Computer
        Science and Engineering The Chinese University of Hong Kong 2011 In this thesis
        we present a new algebraic formulation to compute edge connectivities in a
        directed graph, using the ideas developed in network coding. This reduces
        the problem of computing edge connectivities to solving systems of linear
        equations, thus allowing us to use tools in linear algebra to design new algorithms.
        Using the algebraic formulation we obtain faster algorithms for computing
        single source edge connectivities and all pairs edge connectivities, in some
        settings the amortized time to compute the edge connectivity for one pair
        is sublinear. Through this connection, we have also found an interesting use
        of expanders and superconcentrators to design fast algorithms for some graph
        connectivity problems.", "venue": "", "year": 2011, "referenceCount": 63,
        "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "120973945",
        "name": "K. Man"}]}, {"paperId": "956a3fe42ef644650d4674fac13c9496ce9c296b",
        "externalIds": {"CorpusId": 59456304}, "corpusId": 59456304, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/956a3fe42ef644650d4674fac13c9496ce9c296b",
        "title": "Rooted Tree Arithmetic and Equations\u2217", "abstract": "We propose
        a new arithmetic for non-empty rooted unordered trees simply called trees.
        After discussing tree representation and enumeration, we define the operations
        of tree addition, multiplication and stretch, prove their properties, and
        show that all trees can be generated from a starting tree of one vertex. We
        then show how a given tree can be obtained as the sum or product of two trees,
        thus defining prime trees with respect to addition and multiplication. In
        both cases we show how primality can be decided in time polynomial in the
        number of vertices and we prove that factorization is unique. We then define
        negative trees and suggest dealing with tree equations, giving some preliminary
        results. Finally we comment on how our arithmetic might be useful, and discuss
        preceding studies that have some relations with our. To the best of our knowledge
        our approach and results are completely new aside for a similar proposal deposited
        as an arXiv manuscript [6]. 1 Basic properties and notation \u2022 We refer
        to rooted unordered trees simply called trees. Our trees are non empty. 1
        denotes the tree containing exactly one vertex, and is the basic element of
        our theory. \u2022 In a tree T , r (T ) denotes the root of T ; x \u2208 T
        denotes any of its vertices; nT and eT respectively denote the numbers of
        vertices and leaves. A subtree is the tree composed of a vertex x and all
        its descendants in T . The subtrees routed at the children of x are called
        subtrees of x. sT denotes the number of subtrees of r (T ). \u2022 A tree
        T can be represented as a binary sequences ST (the original reference for
        ordered trees is [10]). In our scheme T is traversed in left to right preorder
        inserting 1 in the sequence for each vertex encountered, and inserting 0 for
        each move backwards. Then ST is composed of 2n bits as shown in Figure 1,
        and has the recursive structure 1 S1 . . . Sk 0, where the Si are the sequences
        representing the subtrees of r (T ). The sequences for tree 1 is 10. Note
        that all the prefixes of ST have more 1\u2019s than 0\u2019s except for the
        whole sequence that has as many 1\u2019s as 0\u2019s. Since T is unordered,
        the order in which the subsequences Si appear in ST is immaterial (i.e., in
        general many different sequences represent T ). However a canonical form for
        trees \u2217Many thanks are due to Federico Poloni and Mahdi Amani for their
        comments and suggestions. 1 ar X iv :1 51 0. 05 51 2v 3 [ cs .D M ] 1 F eb
        2 01 6 Figure 1: Tree representation as a binary sequence. S1, S2, S3 represent
        the subtrees of the root of T . Figure 2: The canonical families of trees
        F1 to F6 and the corresponding tree enumeration. is established so that their
        sequences will be uniquely determined, and will result to be ordered for increasing
        values if interpreted as binary numbers. To this end the trees are grouped
        into consecutive families F1,F2, . . . as shown in Figure 2, where Fi contains
        the trees of i vertices. So the trees are ordered for increasing number of
        vertices, and inside each family the ordering is determined by the canonical
        form as follows. Trees and sequences are then numbered with increasing natural
        numbers. \u2022 If the sequences are interpreted as binary numbers, for two
        trees U, T with nU < nT we have SU < ST because the initial character of each
        sequence is 1 and SU is shorter than ST . This is consistent with the property
        that the trees of FnU precede the trees of FnT in the ordering. \u2022 The
        families F1,F2 contain one tree each numbered 1, 2. \u2022 The ordering of
        the trees in Fn>2 is based on the ordering of the preceding families. Consider
        the multisets of positive integers whose sum is n\u2212 1. E.g., for n = 6
        these multisets are: 1,1,1,1,1 1,1,1,2 1,1,3 1,2,2 1,4 2,3 5 ordered for non-decreasing
        value of the digits left to right. Each multiset corresponds to a group of
        consecutive", "venue": "", "year": 2016, "referenceCount": 10, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
        [{"authorId": "1719153", "name": "F. Luccio"}]}, {"paperId": "b186c1852d6e852db450dd41122c487eba63e632",
        "externalIds": {"MAG": "1594942989", "CorpusId": 118877861}, "corpusId": 118877861,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/b186c1852d6e852db450dd41122c487eba63e632",
        "title": "Edge product cordial labeling of graphs", "abstract": "The product
        cordial labeling is a variant of cordial labeling. We introduce a variant
        of product cordial labeling and name it as edge product cordial labeling.
        Unlike in product cordial labeling the roles of vertices and edges are interchanged.
        We investigate several results on this newly defined concept.", "venue": "",
        "year": 2012, "referenceCount": 5, "citationCount": 42, "influentialCitationCount":
        4, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Biology", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
        "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2012-09-17",
        "journal": {"name": "Journal of Mathematical and Computational Science", "pages":
        "1436-1450", "volume": "2"}, "authors": [{"authorId": "32056272", "name":
        "S. Vaidya"}, {"authorId": "102980368", "name": "C. M. Barasara"}]}, {"paperId":
        "ac95dd1989e891d75fc7daa45adeda9dfab50247", "externalIds": {"MAG": "2142314838",
        "DOI": "10.1287/TRSC.8.1.75", "CorpusId": 121931755}, "corpusId": 121931755,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ac95dd1989e891d75fc7daa45adeda9dfab50247",
        "title": "Letter to the Editor\u2014On Finding the Absolute and Vertex Centers
        of a Tree with Distances", "abstract": "We show that a modification of an
        algorithm that was proposed by A. J. Goldman yields a simpler and more efficient
        method to locate the absolute and vertex centers of a tree.", "venue": "",
        "year": 1974, "referenceCount": 0, "citationCount": 33, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": "1974-02-01", "journal": {"name": "Transportation Science",
        "pages": "75-77", "volume": "8"}, "authors": [{"authorId": "2612383", "name":
        "S. Halfin"}]}, {"paperId": "cdb27b16d90d6fd01095f76988b48e26f621fc3b", "externalIds":
        {"MAG": "2077085881", "DOI": "10.4171/OWR/2006/07", "CorpusId": 41048881},
        "corpusId": 41048881, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/cdb27b16d90d6fd01095f76988b48e26f621fc3b",
        "title": "Algorithmic Graph Theory", "abstract": "Exercise 1 The treewidth
        of a graph G can also be defined via the minimum number of cops needed to
        succeed in the pursuitevasion game defined in the lecture. Show that the minimum
        number of cops needed to always win the game in finite time is k + 1 iff G\u2019s
        tree width is k. For the \u201d\u21d2\u201d direction, it is enough to describe
        informally how a tree decomposition can be derived from a pursuit strategy,
        and why it fits the definition.", "venue": "", "year": 1986, "referenceCount":
        5, "citationCount": 734, "influentialCitationCount": 47, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        "1986-11-01", "journal": {"name": "Oberwolfach Reports", "pages": "379-460",
        "volume": "3"}, "authors": [{"authorId": "1717169", "name": "A. Czumaj"},
        {"authorId": "48205425", "name": "K. Jansen"}, {"authorId": "1732130", "name":
        "F. Heide"}, {"authorId": "2055275", "name": "I. Schiermeyer"}]}, {"paperId":
        "afbe8fefba10e64000f34940afc368b4be23e2c7", "externalIds": {"MAG": "2541059431",
        "DOI": "10.1007/978-3-319-42937-3_15", "CorpusId": 125849932}, "corpusId":
        125849932, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/afbe8fefba10e64000f34940afc368b4be23e2c7",
        "title": "Directed and Undirected Graphs", "abstract": null, "venue": "",
        "year": 2016, "referenceCount": 28, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"name": "",
        "pages": "121-127", "volume": ""}, "authors": [{"authorId": "34936995", "name":
        "G. Mazzola"}, {"authorId": "2943731", "name": "Maria Mannone"}, {"authorId":
        "49789559", "name": "Yan Pang"}]}, {"paperId": "5e4341c243f8dacd145ff625dcc1231960bc2839",
        "externalIds": {"MAG": "970419232", "DOI": "10.1007/978-1-4613-0105-9_40",
        "CorpusId": 161608365}, "corpusId": 161608365, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/5e4341c243f8dacd145ff625dcc1231960bc2839",
        "title": "Seventeen Open Problems", "abstract": null, "venue": "", "year":
        2001, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["History"],
        "s2FieldsOfStudy": [{"category": "History", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": {"name": "", "pages": "516-520", "volume":
        ""}, "authors": [{"authorId": "70054199", "name": "Y. F\u00e9lix"}, {"authorId":
        "50659135", "name": "S. Halperin"}, {"authorId": "2115544044", "name": "Jean-Claude
        Thomas"}]}, {"paperId": "e01c0c8c212280bbfe3054090f7b5f8de652dd8c", "externalIds":
        {"MAG": "2892380699", "DBLP": "journals/jam/KolaGN18", "DOI": "10.1155/2018/8186345",
        "CorpusId": 53294391}, "corpusId": 53294391, "publicationVenue": "7fca2e40-f552-41ac-9a64-d76dc15c981b",
        "url": "https://www.semanticscholar.org/paper/e01c0c8c212280bbfe3054090f7b5f8de652dd8c",
        "title": "Infinitely Many Trees with Maximum Number of Holes Zero, One, and
        Two", "abstract": "<jats:p>An <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M1\"><mml:mi>L</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
        stretchy=\"false\">)</mml:mo></mml:math>-coloring of a simple connected graph
        <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M2\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>
        is an assignment <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M3\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math> of nonnegative
        integers to the vertices of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M4\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math> such that <mml:math
        xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M5\"><mml:mfenced open=\"|\"
        close=\"|\" separators=\"|\"><mml:mrow><mml:mi>f</mml:mi><mml:mfenced separators=\"|\"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:mi>f</mml:mi><mml:mfenced
        separators=\"|\"><mml:mrow><mml:mi>v</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>\u2a7e</mml:mo><mml:mn
        mathvariant=\"normal\">2</mml:mn></mml:math> if <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M6\"><mml:mi>d</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo
        stretchy=\"false\">)</mml:mo><mml:mo>=</mml:mo><mml:mn mathvariant=\"normal\">1</mml:mn></mml:math>
        and <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M7\"><mml:mfenced
        open=\"|\" close=\"|\" separators=\"|\"><mml:mrow><mml:mi>f</mml:mi><mml:mfenced
        separators=\"|\"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:mi>f</mml:mi><mml:mfenced
        separators=\"|\"><mml:mrow><mml:mi>v</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>\u2a7e</mml:mo><mml:mn
        mathvariant=\"normal\">1</mml:mn></mml:math> if <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M8\"><mml:mi>d</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo
        stretchy=\"false\">)</mml:mo><mml:mo>=</mml:mo><mml:mn mathvariant=\"normal\">2</mml:mn></mml:math>
        for all <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M9\"><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>,
        where <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M10\"><mml:mi>d</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo
        stretchy=\"false\">)</mml:mo></mml:math> denotes the distance between <mml:math
        xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M11\"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:math>
        and <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M12\"><mml:mrow><mml:mi>v</mml:mi></mml:mrow></mml:math>
        in <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M13\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>.
        The span of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M14\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math>
        is the maximum color assigned by <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M15\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math>. The span of
        a graph <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M16\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>,
        denoted by <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M17\"><mml:mi>\u03bb</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>,
        is the minimum of span over all <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M18\"><mml:mi>L</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mn
        mathvariant=\"normal\">2,1</mml:mn><mml:mo stretchy=\"false\">)</mml:mo></mml:math>-colorings
        on <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M19\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>.
        An <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M20\"><mml:mi>L</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
        stretchy=\"false\">)</mml:mo></mml:math>-coloring of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M21\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math> with span <mml:math
        xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M22\"><mml:mi>\u03bb</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
        is called a span coloring of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M23\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>. An <mml:math
        xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M24\"><mml:mi>L</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
        stretchy=\"false\">)</mml:mo></mml:math>-coloring <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M25\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math> is said to be
        irreducible if there exists no <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M26\"><mml:mi>L</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mn
        mathvariant=\"normal\">2,1</mml:mn><mml:mo stretchy=\"false\">)</mml:mo></mml:math>-coloring
        g such that <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M27\"><mml:mi>g</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy=\"false\">)</mml:mo><mml:mo>\u2a7d</mml:mo><mml:mi>f</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
        for all <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M28\"><mml:mi>u</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
        and <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M29\"><mml:mi>g</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy=\"false\">)</mml:mo><mml:mo><</mml:mo><mml:mi>f</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
        for some <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M30\"><mml:mi>v</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>.
        If <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M31\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math>
        is an <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M32\"><mml:mi>L</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
        stretchy=\"false\">)</mml:mo></mml:math>-coloring with span <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M33\"><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:math>, then <mml:math
        xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M34\"><mml:mi>h</mml:mi><mml:mo>\u2208</mml:mo><mml:mfenced
        open=\"{\" close=\"}\" separators=\"|\"><mml:mrow><mml:mn mathvariant=\"normal\">0,1</mml:mn><mml:mo>,</mml:mo><mml:mn
        mathvariant=\"normal\">2</mml:mn><mml:mo>,</mml:mo><mml:mo>\u2026</mml:mo><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:mfenced></mml:math>
        is a hole if there is no <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M35\"><mml:mi>v</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
        such that <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M36\"><mml:mi>f</mml:mi><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy=\"false\">)</mml:mo><mml:mo>=</mml:mo><mml:mi>h</mml:mi></mml:math>.
        The maximum number of holes over all irreducible span colorings of <mml:math
        xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M37\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>
        is denoted by <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M38\"><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mrow><mml:mi>\u03bb</mml:mi></mml:mrow></mml:msub><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>.
        A tree <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M39\"><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:math>
        with maximum degree <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M40\"><mml:mrow><mml:mi mathvariant=\"normal\">\u0394</mml:mi></mml:mrow></mml:math>
        having span <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M41\"><mml:mi
        mathvariant=\"normal\">\u0394</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant=\"normal\">1</mml:mn></mml:math>
        is referred to as Type-I tree; otherwise it is Type-II. In this paper, we
        give a method to construct infinitely many trees with at least one hole from
        a one-hole tree and infinitely many two-hole trees from a two-hole tree. Also,
        using the method, we construct infinitely many Type-II trees with maximum
        number of holes one and two. Further, we give a sufficient condition for a
        Type-II tree with maximum number of holes zero.</jats:p>", "venue": "Journal
        of Applied Mathematics", "year": 2018, "referenceCount": 9, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
        "http://downloads.hindawi.com/journals/jam/2018/8186345.pdf", "status": "GOLD"},
        "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "external"}, {"category": "Computer Science", "source":
        "external"}, {"category": "Art", "source": "s2-fos-model"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Chemistry", "source": "s2-fos-model"},
        {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        ["JournalArticle"], "publicationDate": "2018-09-20", "journal": {"name": "J.
        Appl. Math.", "pages": "8186345:1-8186345:14", "volume": "2018"}, "authors":
        [{"authorId": "2051257", "name": "S. Kola"}, {"authorId": "9424517", "name":
        "Balakrishna Gudla"}, {"authorId": "144129258", "name": "P. K. Niranjan"}]},
        {"paperId": "ced09d3f811045ffe6ba52d387318a43c5f1ce89", "externalIds": {"CorpusId":
        16365725}, "corpusId": 16365725, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ced09d3f811045ffe6ba52d387318a43c5f1ce89",
        "title": "Problem Set 2-3 Problem 1.1", "abstract": "Let G = (V, E) be a connected
        graph and g, h be two edge-cost functions such that for all e, e \u2208 E,
        h(e) \u2264 h(e) \u21d4 g(r) \u2264 g(e). Show there is a single tree which
        is an MST with respect to g, h. Solution (sketch): We simply show that any
        tree constructed by Kruskal''s algorithm using the function g, is also a valid
        output of Kruskal''s algorithm using the function h (recall that Kruskal''s
        algorithm does not produce a unique tree). To see this, we notice that the
        cost-functions in Kruskal''s algorithm are only used to select a minimal cost
        edge. But a minimal cost-edge under the function g is also a minimal-cost
        edge under the function h and hence, by the correctness of Kruskal, if we
        run it with cost function g, we also get an MST under the function h. Assume
        that the edge-costs are time varying and that the cost of an edge e at time
        t is given by some degree 2 polynomial f e (t). Find the time t at which the
        cost of the MST of G is minimized. Solution (sketch): The main idea is to
        partition the time-line into intervals so that, for all values of t within
        an interval, the ordering of the edges with respect to cost is preserved.
        Using the observation from the first part, we can then find a single candidate
        MST per interval and this will be an MST for all times t within that interval.
        Lastly, we take the smallest candidate. So we are only left with the task
        of partitioning the time-line. We notice that, if at some time t the ordering
        of the edge costs changes, then f e (t) = f e (t) for some e, e \u2208 E.
        Since f e is quadratic, there are at most two solutions to any such equation.
        Hence, by taking all pairs e, e \u2208 E and finding the solutions of f e
        (t) = f e (t), we get at most m = 2|E|(|E| \u2212 1)/2 points t 1 ,. .. t
        m at which the ordering can change. By sorting the points, we can also assume
        that t 1 \u2264 t 2 ,. .. , \u2264 t m and hence we get our m + 1 time intervals
        [\u2212\u221e, t 1 ], [t 1 , t 2 ],. .. , [t m\u22121 \u2026", "venue": "",
        "year": null, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": null, "authors": []}, {"paperId": "6edf478da45763afc3b484d478d67dd848be8ca6",
        "externalIds": {"MAG": "2089540962", "DOI": "10.1287/MNSC.25.1.105", "CorpusId":
        207232914}, "corpusId": 207232914, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6edf478da45763afc3b484d478d67dd848be8ca6",
        "title": "Note\u2014A Simple Edge Elimination Criterion in a Search for the
        Center of a Graph", "abstract": "This note proposes a new edge elimination
        criterion in an algorithm whose purpose is to locate the center of a graph.
        The new criterion requites the same amount of information and computation
        but generates a stronger lower bound. It therefore reduces substantially the
        number of edges that have to be checked thoroughly, at a high computational
        cost, for a possible center point along them.", "venue": "", "year": 1979,
        "referenceCount": 3, "citationCount": 6, "influentialCitationCount": 0, "isOpenAccess":
        true, "openAccessPdf": {"url": "https://pubsonline.informs.org/doi/pdf/10.1287/mnsc.25.1.105",
        "status": "BRONZE"}, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"name": "Management Science", "pages": "105-107", "volume":
        "25"}, "authors": [{"authorId": "48118154", "name": "J. Halpern"}]}, {"paperId":
        "644b4b4ae3ce1b39720be374bcf8e6860834cfc0", "externalIds": {"MAG": "2082772405",
        "DBLP": "journals/dam/Beardon13", "DOI": "10.1016/j.dam.2013.02.012", "CorpusId":
        43154403}, "corpusId": 43154403, "publicationVenue": "8287474c-2cf8-4dfe-b1c6-cf6119d879ab",
        "url": "https://www.semanticscholar.org/paper/644b4b4ae3ce1b39720be374bcf8e6860834cfc0",
        "title": "Resolving the hypercube", "abstract": null, "venue": "Discrete Applied
        Mathematics", "year": 2013, "referenceCount": 17, "citationCount": 11, "influentialCitationCount":
        4, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Mathematics", "source": "external"},
        {"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2013-09-01", "journal": {"name": "Discret. Appl. Math.",
        "pages": "1882-1887", "volume": "161"}, "authors": [{"authorId": "1872761",
        "name": "A. Beardon"}]}, {"paperId": "23c5af63ab87f826ab7e0bf77664d39b6ec4d223",
        "externalIds": {"DBLP": "conf/walcom/YamanakaN08a", "MAG": "2126143638", "DOI":
        "10.7155/jgaa.00174", "CorpusId": 5866531}, "corpusId": 5866531, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/23c5af63ab87f826ab7e0bf77664d39b6ec4d223",
        "title": "Listing All Plane Graphs", "abstract": "In this paper we give a
        simple algorithm to generate all connected rooted plane graphs with at most
        m edges. A \"rooted\" plane graph is a plane graph with one designated (directed)
        edge on the outer face. The algorithm uses O(m) space and generates such graphs
        in O(1) time per graph on average without duplications. The algorithm does
        not output the entire graph but the difference from the previous graph. By
        modifying the algorithm we can generate all connected (non-rooted) plane graphs
        with at most m edges in O(m3) time per graph.", "venue": "J. Graph Algorithms
        Appl.", "year": 2008, "referenceCount": 17, "citationCount": 14, "influentialCitationCount":
        1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Mathematics", "source": "external"},
        {"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2008-02-07", "journal": {"name": "J. Graph Algorithms
        Appl.", "pages": "5-18", "volume": "13"}, "authors": [{"authorId": "1681066",
        "name": "Katsuhisa Yamanaka"}, {"authorId": "1687506", "name": "Shin-Ichi
        Nakano"}]}, {"paperId": "c71211e66d572a84df702f95b3579d5e453523dd", "externalIds":
        {"DBLP": "conf/mfcs/AllenderCD21", "DOI": "10.1007/s00236-022-00425-1", "CorpusId":
        237218496}, "corpusId": 237218496, "publicationVenue": "0c66bac6-fc2b-46b2-8953-fda36a3cefd5",
        "url": "https://www.semanticscholar.org/paper/c71211e66d572a84df702f95b3579d5e453523dd",
        "title": "Depth-first search in directed planar graphs, revisited", "abstract":
        null, "venue": "Acta Informatica", "year": 2022, "referenceCount": 51, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2022-06-04", "journal": {"name": "Acta Informatica", "pages": "289 - 319",
        "volume": "59"}, "authors": [{"authorId": "1760644", "name": "E. Allender"},
        {"authorId": "89928312", "name": "Archit Chauhan"}, {"authorId": "1688984",
        "name": "S. Datta"}]}, {"paperId": "2c44c0e80724e0c9352f5326d95049397e5d58c7",
        "externalIds": {"DOI": "10.1159/000085423", "CorpusId": 232270768}, "corpusId":
        232270768, "publicationVenue": "ae4c0c58-aed9-430a-b296-7470df224d39", "url":
        "https://www.semanticscholar.org/paper/2c44c0e80724e0c9352f5326d95049397e5d58c7",
        "title": "Preface", "abstract": "The intersection of graph searching and probabilistic
        methods is a new topic within graph theory, with applications to graph searching
        problems such as the game of Cops and Robbers and its many variants, graph
        cleaning, Firefighting, and acquaintance time. Research on this topic emerged
        only over the last few years, and as such, it represents a rapidly evolving
        and dynamic area. Before we give a definition of this topic, we give some
        background on three of its key constituents: the probabilistic method, random
        graphs, and graph searching. The probabilistic method is a powerful nonconstructive
        tool in mathematics. While it has found tremendous success in combinatorics
        and graph theory, it has been successfully applied to many other areas of
        mathematics (such as number theory, algebra, and analysis) as well as theoretical
        computer science (for example, randomized algorithms). As one of its goals,
        the method may prove the existence of an object with given properties without
        actually finding it. A random graph is a graph that is generated by some random
        process. Although technically a topic within the probabilistic method, random
        graphs are an important topic in their own right. The theory of random graphs
        lies at the intersection between graph theory and probability theory, and
        studies the properties of typical random graphs. Random graphs have also found
        a natural home in the study of real-world complex networks such as the web
        graph and on-line social networks. Graph searching deals with the analysis
        of games and graph processes that model some form of intrusion in a network,
        and efforts to eliminate or contain that intrusion. For example, in Cops and
        Robbers, a robber is loose on the network, and a set of cops attempts to capture
        the robber. How the players move and the rules of capture depend on which
        variant is studied. In graph cleaning, the network begins as contaminated,
        and brushes move between vertices and along edges to clean them. There are
        many variants of graph searching studied in the literature, which are either
        motivated by problems in practice, or are inspired by foundational issues
        in", "venue": "International Archives of Allergy and Immunology", "year":
        2005, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.karger.com/Article/Pdf/85423",
        "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2005-06-01",
        "journal": {"name": "International Archives of Allergy and Immunology", "pages":
        "1 - 1", "volume": "137"}, "authors": [{"authorId": "3191720", "name": "T.
        Fukuda"}]}, {"paperId": "861bff22c2427c54c8de0f15c8b16eb03077771f", "externalIds":
        {"MAG": "2008945525", "DOI": "10.1093/TEAMAT/HRP013", "CorpusId": 119473881},
        "corpusId": 119473881, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/861bff22c2427c54c8de0f15c8b16eb03077771f",
        "title": "Real world graph connectivity", "abstract": "We present the topic
        of graph connectivity along with a famous theorem of Menger in the real-world
        setting of the national computer network infrastructure of National LambdaRail.
        We include a set of exercises where students reinforce their understanding
        of graph connectivity by analysing the National LambdaRail network. Finally,
        we give suggestions for using this module as a project in an undergraduate
        mathematics course.", "venue": "", "year": 2009, "referenceCount": 0, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
        "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": "2009-09-01", "journal": {"name":
        "Teaching Mathematics and Its Applications", "pages": "159-161", "volume":
        "28"}, "authors": [{"authorId": "101630984", "name": "Joy Lind"}, {"authorId":
        "38907363", "name": "D. Narayan"}]}, {"paperId": "850de428456cbe648c7bfb8a8d10cb186c333b42",
        "externalIds": {"MAG": "1982886989", "DBLP": "journals/dam/Hurlbert13", "DOI":
        "10.1016/j.dam.2012.03.010", "CorpusId": 44263153}, "corpusId": 44263153,
        "publicationVenue": "8287474c-2cf8-4dfe-b1c6-cf6119d879ab", "url": "https://www.semanticscholar.org/paper/850de428456cbe648c7bfb8a8d10cb186c333b42",
        "title": "General graph pebbling", "abstract": null, "venue": "Discrete Applied
        Mathematics", "year": 2013, "referenceCount": 73, "citationCount": 30, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Mathematics", "source": "external"},
        {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        ["JournalArticle"], "publicationDate": "2013-06-01", "journal": {"name": "Discret.
        Appl. Math.", "pages": "1221-1231", "volume": "161"}, "authors": [{"authorId":
        "2813637", "name": "G. Hurlbert"}]}, {"paperId": "6d915cbd8a02325e735b4af90dbd4b269263f3c5",
        "externalIds": {"MAG": "2970045796", "CorpusId": 203233532}, "corpusId": 203233532,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6d915cbd8a02325e735b4af90dbd4b269263f3c5",
        "title": "Allurement of Some Graph Algorithms", "abstract": "The last five
        decades have witnessed an upsurge of interest and activity in graph theory,
        particularly among mathematicians and engineers. It has recently emerged as
        a subject in its own right, as well as being an important mathematical tool
        in such diverse subjects as operational research, computer science, networking,
        mobile computing, sociology and many other fields. This book is devoted entirely
        to computational aspects of graph theory, including graph-theoretic algorithms.
        The book provide some new algorithms of graph theory such as generation all
        spanning trees, minimal spanning tree generation, graph colouring algorithm,
        importance of some special graphs in networking, hiding information and applications
        of graphs in different areas. The book is useful for graduate and post graduate
        students of science and engineering and new research scholar to motivate them
        in the field of graph theory.", "venue": "", "year": 2012, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": "2012-03-14", "journal": {"name": "", "volume": ""}, "authors":
        [{"authorId": "3084335", "name": "S. Pal"}, {"authorId": "1882382", "name":
        "S. S. Sarma"}]}, {"paperId": "feb8749dec117a2064e14d0c50dd141813bd6bfe",
        "externalIds": {"CorpusId": 2829130}, "corpusId": 2829130, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/feb8749dec117a2064e14d0c50dd141813bd6bfe",
        "title": "LTCC Course on Graph Theory 2013 / 14 Notes 3 Complexity and Algorithms",
        "abstract": "The graph theory textbooks do little or no algorithms, so for
        these lectures we have to go somewhere else. The default textbook and source
        for anything algorithmic is : T.H. Cormen, C.E. Leiverson, R.L. Rivest and
        C. Stein, Introduction to Algorithms ( 2nd edition ), MIT Press, 2001 ( ISBN:
        0262531968 ). An alternative ( and lighter in weight ) source is H.S. Wilf,
        Algorithms and Complexity ( 2nd edition ), Peters, 2003 ( ISBN: 1568811780
        ). The first edition ( which is more than enough for us ) can be downloaded
        for free from www.math.upenn.edu/~wilf/AlgoComp.pdf. The default book for
        complexity theory is still, after 30 years (!), and still in print, M.R. Garey
        and D.S. Johnson, Computers and Intractability: A Guide to the Theory of NP-completeness,
        Freeman, 1979 ( ISBN: 0716710455 ). The only serious alternative I can think
        of is C.H. Papadimitriou, Computational Complexity, Addison Wesley, 1994 (
        ISBN: 0201530821 ).", "venue": "", "year": 2013, "referenceCount": 2, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "114818546", "name": "H. Cormen"},
        {"authorId": "2081131731", "name": "C. E. Leiverson"}, {"authorId": "2113911099",
        "name": "R. Rivest"}, {"authorId": "1690758", "name": "C. Stein"}, {"authorId":
        "145634459", "name": "M. Garey"}, {"authorId": "23167841", "name": "D. S.
        Johnson"}]}, {"paperId": "d617860cdca995b03f4c4820ac706c6494c9ffdb", "externalIds":
        {"MAG": "2347066391", "CorpusId": 124237654}, "corpusId": 124237654, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/d617860cdca995b03f4c4820ac706c6494c9ffdb",
        "title": "Treewidth of the Product of Two Complete Graphs", "abstract": "We
        determine in this paper the treewidth of K(subscript m)\u00d7K(subscript n).
        Our result is that: If both m and n are even and m\u2265n, or m is odd and
        n is even, or both m and n are odd and n\u2265m, then the treewidth of K(subscript
        m)\u00d7K(subscript n) is (The equation is abbreviated). This is exactly the
        bandwidth of K(subscript m)\u00d7K(subscript n).", "venue": "", "year": 2004,
        "referenceCount": 0, "citationCount": 1, "influentialCitationCount": 1, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": "2004-02-01", "journal": {"name":
        "", "pages": "62-68", "volume": "8"}, "authors": [{"authorId": "145078777",
        "name": "Jinjiang Yuan"}, {"authorId": "103598153", "name": "Lai-Xing Luo"}]},
        {"paperId": "e118962fb3adb9bebe7a5c5f5e048a2232a47bc4", "externalIds": {"DOI":
        "10.5753/ctd.2023.229754", "CorpusId": 259312993}, "corpusId": 259312993,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/e118962fb3adb9bebe7a5c5f5e048a2232a47bc4",
        "title": "On (in)tractability of connection and cut problems", "abstract":
        "This work addresses connection and cut problems from the viewpoint of graph
        classes and computational complexity, classic and parameterized. Regarding
        connection problems, we investigate the so-called TERMINAL CONNECTION problem
        (TCP), which can be seen as a generalisation of the classical STEINER TREE
        problem. We propose several complexity results for TCP, when restricted to
        specific graph classes, and some of its input parameters are fixed. As for
        cut problems, we analyse the complexity of the classical MAXCUT problem. We
        introduce the first complexity classification for the problem on interval
        graphs of bounded interval count. In addition, we prove the NP-completeness
        of MAXCUT on permutation graphs, settling a question posed by David S. Johnson
        in the Ongoing Guide to NP-completeness, which has been open since 1985. Finally,
        we consider the problem of computing the zig-zag number of a directed graph,
        which is a directed width measure defined over cuts of a graph.", "venue":
        "Anais do XXXVI Concurso de Teses e Disserta\u00e7\u00f5es (CTD 2023)", "year":
        2023, "referenceCount": 30, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://sol.sbc.org.br/index.php/ctd/article/download/24848/24669",
        "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-08-06",
        "journal": {"name": "Anais do XXXVI Concurso de Teses e Disserta\u00e7\u00f5es
        (CTD 2023)"}, "authors": [{"authorId": "152470737", "name": "A. A. D. Melo"},
        {"authorId": "2392762", "name": "C. M. Figueiredo"}, {"authorId": "1959676",
        "name": "U. Souza"}, {"authorId": "2357626", "name": "Ana Paula Couto da Silva"}]},
        {"paperId": "54b072145a2dbb60ab6ce49da51d71854ed98318", "externalIds": {"ArXiv":
        "2306.14103", "DBLP": "journals/corr/abs-2306-14103", "DOI": "10.48550/arXiv.2306.14103",
        "CorpusId": 259252347}, "corpusId": 259252347, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
        "url": "https://www.semanticscholar.org/paper/54b072145a2dbb60ab6ce49da51d71854ed98318",
        "title": "On finding 2-cuts and 3-edge-connected components in parallel",
        "abstract": "Given a connected undirected multigraph G (a graph that may contain
        parallel edges), the algorithm of [19] finds the 3-edge-connected components
        of $G$ in linear time using an innovative graph contraction technique based
        on a depth-first search. In [21], it was shown that the algorithm can be extended
        to produce a Mader construction sequence for each 3-edge-connected component,
        a cactus representation of the 2-cuts (cut-pairs) of each 2-edge-connected
        component of $G$, and the 1-cuts (bridges) at the same time. In this paper,
        we further extend the algorithm of [19] to generate the 2-cuts and the 3-edge-connected
        components of $G$ simultaneously in linear time by performing only one depth-first
        search over the input graph. Previously known algorithms solve the two problems
        separately in multiple phases.", "venue": "arXiv.org", "year": 2023, "referenceCount":
        21, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2023-06-25", "journal": {"name": "ArXiv", "volume": "abs/2306.14103"},
        "authors": [{"authorId": "2159047", "name": "Yung H. Tsin"}]}, {"paperId":
        "7f0de389496dc9da885130959321a580e5544f08", "externalIds": {"MAG": "2163940503",
        "DBLP": "conf/soda/Obdrzalek06", "DOI": "10.1145/1109557.1109647", "CorpusId":
        14409151}, "corpusId": 14409151, "publicationVenue": "5545566b-c0b8-418c-83a5-a986a4657572",
        "url": "https://www.semanticscholar.org/paper/7f0de389496dc9da885130959321a580e5544f08",
        "title": "DAG-width: connectivity measure for directed graphs", "abstract":
        "Tree-width is a very useful connectivity measure for undirected graphs. We
        propose a new definition, called DAG-width, for directed graphs which measures
        how close a graph is to a directed acyclic graph. In addition we define a
        cops-and-robber game and show that this game characterises exactly the class
        of graphs of bounded DAG-width. A comparison of DAG-width with tree-width
        and directed tree-width follows. Finally we show that NP-complete problems
        can be solved in polynomial time on graphs of bounded DAG-width.", "venue":
        "ACM-SIAM Symposium on Discrete Algorithms", "year": 2006, "referenceCount":
        9, "citationCount": 92, "influentialCitationCount": 11, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2006-01-22", "journal":
        {"pages": "814-821"}, "authors": [{"authorId": "2619678", "name": "J. Obdr\u017e\u00e1lek"}]},
        {"paperId": "0552ea6f7d8f5eae5981870e938871e9228bb2a3", "externalIds": {"DBLP":
        "reference/crc/GiacomoDL13", "MAG": "2406931340", "DOI": "10.1201/b15385-11",
        "CorpusId": 41289834}, "corpusId": 41289834, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/0552ea6f7d8f5eae5981870e938871e9228bb2a3",
        "title": "Spine and Radial Drawings", "abstract": "University of Perugia 8.1
        Layered Drawings of Undirected Graphs. . . . . . . . . . . . . . . . . . 1
        8.2 A Unified Framework for Spine and Radial Drawings . . 1 8.3 Results .
        . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
        . . . . . . . . . . . . . . . . . . . 1 Spine Drawings in the General Scenario
        \u2022 Radial Drawings in the General Scenario \u2022 Summary for the General
        Scenario \u2022 Further Constrained-scenarios 8.4 Related Problems . . . .
        . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
        . . . 2 Hamiltonicity \u2022 Point-set Embeddability 8.5 Open Problems and
        Future Research Directions . . . . . . . . . 3", "venue": "Handbook of Graph
        Drawing and Visualization", "year": 2013, "referenceCount": 45, "citationCount":
        7, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": {"pages": "247-284"}, "authors": [{"authorId": "7448104", "name":
        "E. D. Giacomo"}, {"authorId": "1713172", "name": "W. Didimo"}, {"authorId":
        "1716384", "name": "G. Liotta"}]}, {"paperId": "b6e3f991a632aa101fdceac0eebf4d24b5317545",
        "externalIds": {"MAG": "2059993753", "DOI": "10.1007/BF01342974", "CorpusId":
        120717284}, "corpusId": 120717284, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/b6e3f991a632aa101fdceac0eebf4d24b5317545",
        "title": "A note on the number of functional digraphs", "abstract": null,
        "venue": "", "year": 1961, "referenceCount": 3, "citationCount": 20, "influentialCitationCount":
        1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": "1961-04-01", "journal": {"name": "Mathematische Annalen",
        "pages": "109-110", "volume": "143"}, "authors": [{"authorId": "35145569",
        "name": "R. Read"}]}, {"paperId": "517821f1b1be054a27f119d3a98e1c933033353c",
        "externalIds": {"DBLP": "journals/endm/FominTT05", "MAG": "2031760049", "DOI":
        "10.1016/j.endm.2005.06.032", "CorpusId": 5761752}, "corpusId": 5761752, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/517821f1b1be054a27f119d3a98e1c933033353c",
        "title": "Connected Graph Searching in Outerplanar Graphs", "abstract": null,
        "venue": "Electron. Notes Discret. Math.", "year": 2005, "referenceCount":
        6, "citationCount": 27, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
        "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2005-10-15", "journal":
        {"name": "Electron. Notes Discret. Math.", "pages": "213-216", "volume": "22"},
        "authors": [{"authorId": "1744120", "name": "F. Fomin"}, {"authorId": "1724691",
        "name": "D. Thilikos"}, {"authorId": "2553209", "name": "I. Todinca"}]}, {"paperId":
        "3088eda9d62f89b7785a4c78d6b303414c6b3a19", "externalIds": {"CorpusId": 50156591},
        "corpusId": 50156591, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3088eda9d62f89b7785a4c78d6b303414c6b3a19",
        "title": "Description of my Research", "abstract": "I study algorithms in
        graphs, maily applied to the spreading of the information in telecommunications
        networks. I study the structure of graphs and some routing problems through
        graph searching games. In these games, a team of searchers aims at capturing
        a fugitive in a graph. The mobile agents follow the paths in the graph with
        bounded or unbounded speed and satisfying some constraints. The (NP-hard)
        problem is to minimize the number of searchers required to capture the fugitive.
        Two main variants have been studied: the graph searching games where mobile
        agents move simultaneously, and the cos and robber games where searchers and
        fugitive move by turns. These two variants are very different since they have
        not the same algorithmic applications, and the tools used for their study
        are completely different too. My contributions have their applications mainly
        in routing problems in Wavelength-Division Multiplexing (WDM) networks, large
        scale networks (e.g., the Internet) and wireless networks. All these networks
        are facing difficult problems, e.g., either NP-complete problems or problems
        that become difficult to be handled because of networks size. To deal with
        this, my approach consists into taking advantage of specific structural properties
        of real instances for the design of efficient algorithms. My objectives are
        twofold. On the one hand, I want to understand which structural properties
        can help to solve problems relative to the spreading of the information in
        networks, and for this prurpose, I am interested in determining which properties
        are shared by real networks. On the other hand, I want to develop (via the
        graph searching paradigm) new algorithmic tools to use these properties efficiently.
        My main contributions deal with:", "venue": "", "year": 2011, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "1736014",
        "name": "N. Nisse"}]}, {"paperId": "2411fd5bf42fc385a20fbc05d94a78a705785c19",
        "externalIds": {"MAG": "2599228288", "DOI": "10.20852/ntmsci.2017.145", "CorpusId":
        125772728}, "corpusId": 125772728, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2411fd5bf42fc385a20fbc05d94a78a705785c19",
        "title": "A new approach to complete graph", "abstract": "A graph consists
        of a nonempty vertex set and an edge set, deno te G=(V, E). An unordered pair
        of edge v,w is known as an undirected edge and an ordered pair of edge (v,
        w) is known a s a directed edge. A graph with directed edges is called a dire
        cted graph, simply a digraph; otherwise an undirected graph. Usu ally, an
        undirected graph is simply known as a graph. This pap er gives a new approach
        to complete graph and investigates some result s rela ed to this idea.", "venue":
        "", "year": 2017, "referenceCount": 3, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Mathematics", "source": "s2-fos-model"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": "2017-03-26", "journal": {"name": "New Trends in Mathematical
        Science", "pages": "264-268", "volume": "1"}, "authors": [{"authorId": "102376786",
        "name": "Basheer Ahamed Mohideen"}]}, {"paperId": "5b948e1039c2894a7e8592b360a68d1e3c18093e",
        "externalIds": {"MAG": "2574893499", "CorpusId": 125636278}, "corpusId": 125636278,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5b948e1039c2894a7e8592b360a68d1e3c18093e",
        "title": "A New and Efficient Framework for the Graph Isomorphism Problem",
        "abstract": "This paper provides a new framework to study graph structure.
        It enables us to define graph orthogonality and a new metrics on graphs. Furthermore,
        it enables us to define the coordinate representation of graphs with respect
        to an ordered set of graphs, which benefits us in the graph isomorphism problem.
        If any graph of set $A$ has a unique coordinates with respect to a graph set
        $ B$, then, we call $B$ is a basis for the graphs set $A$. Having a basis,
        any graph finds a unique coordinates. Thus, the graph isomorphism problem
        equals to comparison of the coordinates. This fact provides a formal approach
        to study the computational complexity of the graph isomorphism problem, i.e.
        finding a suitable basis. We have shown that graphs on at most 3log(n) vertices
        make a basis for almost every $n$-vertex graphs. This fact, easily, results
        that graph isomorphism problem can be solved in $\\exp(6\\log^2(n))$ time
        for almost every pair of $n$-vertex graphs.", "venue": "", "year": 2017, "referenceCount":
        0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": "2017-01-10", "journal": {"name":
        "arXiv: Combinatorics", "volume": ""}, "authors": [{"authorId": "3161363",
        "name": "Ameneh Farhadian"}]}, {"paperId": "eb17edc2bdc92f508ecc47beaef909b3007902a0",
        "externalIds": {"MAG": "2727900420", "CorpusId": 126363148}, "corpusId": 126363148,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/eb17edc2bdc92f508ecc47beaef909b3007902a0",
        "title": "On the Basis Number of Products of Graphs", "abstract": "On the
        Basis Number of Products of Graphs\u060c \u0644\u0644\u062d\u0635\u0648\u0644
        \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0643\u0627\u0645\u0644
        \u064a\u0631\u062c\u0649 \u0632\u064a\u0627\u0631\u0629 \u0645\u0643\u062a\u0628\u0629
        \u0627\u0644\u062d\u0633\u064a\u0646 \u0628\u0646 \u0637\u0644\u0627\u0644
        \u0641\u064a \u062c\u0627\u0645\u0639\u0629 \u0627\u0644\u064a\u0631\u0645\u0648\u0643
        \u0627\u0648 \u0632\u064a\u0627\u0631\u0629 \u0645\u0648\u0642\u0639\u0647\u0627
        \u0627\u0644\u0627\u0644\u0643\u062a\u0631\u0648\u0646\u064a", "venue": "",
        "year": 1995, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": {"name": "", "volume": ""}, "authors":
        [{"authorId": "103567357", "name": "\u0650Al Rhayyel"}, {"authorId": "2057407942",
        "name": "Ahmad"}, {"authorId": "104066358", "name": "Batayneh"}, {"authorId":
        "2055518085", "name": "Muhammad Saleh"}]}, {"paperId": "d80872f4cdea5496b86a1f1b4e51733046861eeb",
        "externalIds": {"MAG": "2912744867", "DOI": "10.1155/2019/3764981", "CorpusId":
        127433412}, "corpusId": 127433412, "publicationVenue": "6401bb05-050b-4beb-8824-066cb2938eb4",
        "url": "https://www.semanticscholar.org/paper/d80872f4cdea5496b86a1f1b4e51733046861eeb",
        "title": "Reformulated Reciprocal Degree Distance and Reciprocal Degree Distance
        of the Complement of the Mycielskian Graph and Generalized Mycielskian", "abstract":
        "<jats:p>The reformulated reciprocal degree distance is defined for a connected
        graph <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M1\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>
        as <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M2\"><mml:msub><mml:mrow><mml:mover
        accent=\"false\"><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mo>\u00af</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo><mml:mo>=</mml:mo><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mrow><mml:mrow><mml:mn mathvariant=\"normal\">1</mml:mn></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mn
        mathvariant=\"normal\">2</mml:mn></mml:mrow></mml:mrow><mml:mo stretchy=\"false\">)</mml:mo><mml:mrow><mml:msub><mml:mo
        stretchy=\"false\">\u2211</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>\u03c5</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mfenced
        separators=\"|\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:msub><mml:mrow><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy=\"false\">(</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy=\"false\">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>\u03c5</mml:mi><mml:mo stretchy=\"false\">)</mml:mo><mml:mo
        stretchy=\"false\">)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mo
        stretchy=\"false\">(</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>\u03c5</mml:mi><mml:mo
        stretchy=\"false\">)</mml:mo><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:mrow></mml:mrow><mml:mo
        stretchy=\"false\">)</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo><mml:mi>t</mml:mi><mml:mo>\u2265</mml:mo><mml:mn
        mathvariant=\"normal\">0</mml:mn></mml:math>, which can be viewed as a weight
        version of the <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
        id=\"M3\"><mml:mi>t</mml:mi><mml:mo>-</mml:mo></mml:math>Harary index; that
        is, <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M4\"><mml:msub><mml:mrow><mml:mover
        accent=\"false\"><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mo>\u00af</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo><mml:mo>=</mml:mo><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mrow><mml:mrow><mml:mn fontstyle=\"italic\">1</mml:mn></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mn
        fontstyle=\"italic\">2</mml:mn></mml:mrow></mml:mrow><mml:mo stretchy=\"false\">)</mml:mo><mml:mrow><mml:msub><mml:mo
        stretchy=\"false\">\u2211</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>\u03c5</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mfenced
        separators=\"|\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:msub><mml:mrow><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mrow><mml:mrow><mml:mn mathvariant=\"normal\">1</mml:mn></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mo
        stretchy=\"false\">(</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo
        stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>\u03c5</mml:mi><mml:mo
        stretchy=\"false\">)</mml:mo><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:mrow></mml:mrow><mml:mo
        stretchy=\"false\">)</mml:mo></mml:mrow></mml:mrow><mml:mo>,</mml:mo><mml:mi>t</mml:mi><mml:mo>\u2265</mml:mo><mml:mn
        mathvariant=\"normal\">0</mml:mn></mml:math>. In this paper, we present the
        reciprocal degree distance index of the complement of Mycielskian graph and
        generalize the corresponding results to the generalized Mycielskian graph.</jats:p>",
        "venue": "Mathematical Problems in Engineering", "year": 2019, "referenceCount":
        21, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Chemistry",
        "source": "s2-fos-model"}, {"category": "Art", "source": "s2-fos-model"},
        {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Physics",
        "source": "s2-fos-model"}, {"category": "Medicine", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": "2019-01-30", "journal": {"name":
        "Mathematical Problems in Engineering"}, "authors": [{"authorId": "2152336919",
        "name": "Feifei Zhao"}, {"authorId": "143878403", "name": "H. Bian"}, {"authorId":
        "2547348", "name": "Haizheng Yu"}, {"authorId": "2112386862", "name": "Min
        Liu"}]}, {"paperId": "af7b21d18b60fccecf0606a9045372c85323810a", "externalIds":
        {"ArXiv": "2112.08768", "DOI": "10.1007/s00009-022-02096-1", "CorpusId": 245218679},
        "corpusId": 245218679, "publicationVenue": "c603edbc-1d22-4459-b06e-57b66fa07c05",
        "url": "https://www.semanticscholar.org/paper/af7b21d18b60fccecf0606a9045372c85323810a",
        "title": "Resolving sets tolerant to failures in three-dimensional grids",
        "abstract": null, "venue": "Mediterranean Journal of Mathematics", "year":
        2021, "referenceCount": 28, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://link.springer.com/content/pdf/10.1007/s00009-022-02096-1.pdf",
        "status": "HYBRID"}, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": "2021-12-16", "journal": {"name":
        "Mediterranean Journal of Mathematics", "volume": "19"}, "authors": [{"authorId":
        "37109659", "name": "M. Mora"}, {"authorId": "2121925337", "name": "Mar\u00eda
        Jos\u00e9 Souto-Salorio"}, {"authorId": "2079603269", "name": "Ana D. Tarr''io-Tobar"}]},
        {"paperId": "082269f95538e777d868d8746ae8d127181dcb03", "externalIds": {"MAG":
        "1523034361", "DOI": "10.1007/978-3-662-44342-2_15", "CorpusId": 116983489},
        "corpusId": 116983489, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/082269f95538e777d868d8746ae8d127181dcb03",
        "title": "Distances in Graph Theory", "abstract": null, "venue": "", "year":
        2014, "referenceCount": 131, "citationCount": 3, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": {"name": "", "pages": "275-307", "volume": ""}, "authors": [{"authorId":
        "1936261", "name": "M. Deza"}, {"authorId": "2599104", "name": "E. Deza"}]},
        {"paperId": "f9f5621c39ba42ec8129dd0ac7d5560757b1ef8b", "externalIds": {"MAG":
        "1596935509", "CorpusId": 37696079}, "corpusId": 37696079, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/f9f5621c39ba42ec8129dd0ac7d5560757b1ef8b",
        "title": "Maintenance of 2- and 3-connected components of graphs; Part I:
        2- and 3-edge-connected components", "abstract": "In this paper a data structure
        is presented to efficiently maintain the 2and 3-edge-connected components
        of a graph, under insertions of edges in the graph. Starting from an \"empty\"
        graph of n nodes, the insertion of e edges takes O( n log n + e) time in total.
        The data structure a.llows for insertions of nodes a.lso (in the same time
        bounds, taking n as the fina.l number of nodes). Moreover, at any moment,
        the data structure can answer the following type of query in 0(1) time: given
        two nodes in the graph, are these nodes 2or 3-edge-connected.", "venue": "",
        "year": 1990, "referenceCount": 26, "citationCount": 13, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"name": "",
        "volume": "9026"}, "authors": [{"authorId": "65972170", "name": "Ja Han La
        Poutr\u00e9"}, {"authorId": "143817739", "name": "J. Leeuwen"}, {"authorId":
        "1683533", "name": "M. Overmars"}]}, {"paperId": "3d0cc2ac43900e11db1f7ae7b0c2f4ebee7d9435",
        "externalIds": {"MAG": "3004278482", "DOI": "10.12737/978686", "CorpusId":
        214470152}, "corpusId": 214470152, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3d0cc2ac43900e11db1f7ae7b0c2f4ebee7d9435",
        "title": "Fundamentals of the theory and algorithms on graphs", "abstract":
        "The textbook describes the main theoretical principles of graph theory, the
        main tasks to be solved using graph structures, and General methods of their
        solution and specific algorithms, with estimates of their complexity. I covered
        a lot of the examples given questions to test knowledge and tasks for independent
        decisions. Along with the control tasks to verify the theoretical training
        provided practical assignments to develop programs to study topics of graph
        theory. \nMeets the requirements of Federal state educational standards of
        higher education of the last generation. \nDesigned for undergraduate and
        graduate programs, studying information technology, for in-depth training
        in analysis and design of systems of complex structure. Also the guide can
        be useful to specialists of the IT sphere in the study of algorithmic aspects
        of graph theory.", "venue": "", "year": 2020, "referenceCount": 0, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2020-01-30",
        "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "98208987",
        "name": "N. Gdanskiy"}]}, {"paperId": "4dfeacdc2d7bd1beea4adc14f287c39766063578",
        "externalIds": {"MAG": "2373444390", "CorpusId": 124617066}, "corpusId": 124617066,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4dfeacdc2d7bd1beea4adc14f287c39766063578",
        "title": "Some Problems on Tree", "abstract": "In the paper a definition of
        the complete order on tree is given.A property of is proved and some known
        results in the theory of ordinal numbers is proved by this property,which
        makes the proving process much simpler.", "venue": "", "year": 2007, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"name": "Journal
        of Longyan University", "volume": ""}, "authors": [{"authorId": "1476608113",
        "name": "Huang Zhong-q"}]}, {"paperId": "0746a30ff43eb1cbd782c9d7804d5293475a6ecb",
        "externalIds": {"DBLP": "journals/dm/Graaf04", "MAG": "133854143", "DOI":
        "10.1016/j.disc.2003.11.002", "CorpusId": 232201}, "corpusId": 232201, "publicationVenue":
        "2f38f299-9909-4c8e-a12e-76fca8afb42e", "url": "https://www.semanticscholar.org/paper/0746a30ff43eb1cbd782c9d7804d5293475a6ecb",
        "title": "Directed Triangles in Directed Graphs", "abstract": null, "venue":
        "Discrete Mathematics", "year": 1992, "referenceCount": 4, "citationCount":
        18, "influentialCitationCount": 3, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science", "Mathematics", "Chemistry"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
        "source": "external"}, {"category": "Chemistry", "source": "external"}, {"category":
        "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "1992-12-11", "journal": {"name": "Mathematics eJournal"}, "authors": [{"authorId":
        "2564387", "name": "M. D. Graaf"}]}, {"paperId": "5577ca442f26ccf3ea1377d99b90e2feade37c12",
        "externalIds": {"MAG": "1486664114", "DBLP": "conf/ciac/EvenL94", "DOI": "10.1007/3-540-57811-0_11",
        "CorpusId": 45082310}, "corpusId": 45082310, "publicationVenue": "dc657ba2-0928-4ef1-80aa-d5001fc79764",
        "url": "https://www.semanticscholar.org/paper/5577ca442f26ccf3ea1377d99b90e2feade37c12",
        "title": "A Unified Scheme for Routing in Expander Based Networks", "abstract":
        null, "venue": "International/Italian Conference on Algorithms and Complexity",
        "year": 1994, "referenceCount": 4, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "1994-03-01", "journal":
        {"pages": "125-135"}, "authors": [{"authorId": "1733075", "name": "S. Even"},
        {"authorId": "145903595", "name": "A. Litman"}]}, {"paperId": "c08dace68db893edb2b0a12fe7ee5ea34003b1e6",
        "externalIds": {"MAG": "70027040", "CorpusId": 115845989}, "corpusId": 115845989,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/c08dace68db893edb2b0a12fe7ee5ea34003b1e6",
        "title": "Finding Minimum Spanning Trees in O(m alpha(m,n)) Time", "abstract":
        "We describe a deterministic minimum spanning tree algorithm running in time
        O(m alpha(m,n)), where alpha is a natural inverse of Ackermann''''s function
        and m and n are the number of edges and vertices, respectively. This improves
        upon the O(m alpha(m,n) log alpha(m,n)) bound established by Chazelle in 1997.
        A similar O(m alpha(m,n))-time algorithm was discovered independently by Chazelle,
        predating the algorithm presented here by many months. This paper may still
        be of interest for its alternative exposition.", "venue": "", "year": 1999,
        "referenceCount": 0, "citationCount": 7, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
        [{"category": "Mathematics", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        "1999-10-01", "journal": {"name": "", "volume": ""}, "authors": [{"authorId":
        "1727806", "name": "S. Pettie"}]}, {"paperId": "c1d7b2740662e44c6341d27a76b12acbbd706317",
        "externalIds": {"DBLP": "journals/algorithmica/AnFKX20", "MAG": "2963001873",
        "ArXiv": "1704.05896", "DOI": "10.1007/s00453-020-00701-x", "CorpusId": 1530286},
        "corpusId": 1530286, "publicationVenue": "300eb16f-ce6c-495a-8da3-2e691bf9051d",
        "url": "https://www.semanticscholar.org/paper/c1d7b2740662e44c6341d27a76b12acbbd706317",
        "title": "The Complexity of Tree Partitioning", "abstract": null, "venue":
        "Algorithmica", "year": 2017, "referenceCount": 38, "citationCount": 6, "influentialCitationCount":
        1, "isOpenAccess": true, "openAccessPdf": {"url": "http://arxiv.org/pdf/1704.05896",
        "status": "GREEN"}, "fieldsOfStudy": ["Mathematics", "Computer Science"],
        "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2017-04-19", "journal":
        {"name": "Algorithmica", "pages": "1-38", "volume": ""}, "authors": [{"authorId":
        "2067765531", "name": "Zhao An"}, {"authorId": "144736605", "name": "Qilong
        Feng"}, {"authorId": "145805394", "name": "Iyad A. Kanj"}, {"authorId": "35175634",
        "name": "Ge Xia"}]}, {"paperId": "accf2a191a4f6d7ff06fbdfdba6c1b1215df0c37",
        "externalIds": {"DBLP": "conf/soda/KawarabayashiK10", "DOI": "10.1007/s00493-014-2828-6",
        "CorpusId": 38749149}, "corpusId": 38749149, "publicationVenue": "b4329971-63d6-4dd2-8f0b-d6e549d6c3a3",
        "url": "https://www.semanticscholar.org/paper/accf2a191a4f6d7ff06fbdfdba6c1b1215df0c37",
        "title": "The edge-disjoint paths problem in Eulerian graphs and 4-edge-connected
        graphs", "abstract": null, "venue": "Combinatorica", "year": 2014, "referenceCount":
        39, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
        "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2014-08-05", "journal":
        {"name": "Combinatorica", "pages": "477 - 495", "volume": "35"}, "authors":
        [{"authorId": "1743527", "name": "K. Kawarabayashi"}, {"authorId": "38575557",
        "name": "Yusuke Kobayashi"}]}, {"paperId": "6836314ac1799d452728eb4486d5f2e134539204",
        "externalIds": {"MAG": "2128357246", "CorpusId": 46964557}, "corpusId": 46964557,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6836314ac1799d452728eb4486d5f2e134539204",
        "title": "Maintenance of 2- and 3-connected components of graphs; Part II:
        2- and 3-edge-connected components and 2-vertex-connected components", "abstract":
        "In this paper data structures and algorithms are presented to efficiently
        maintain the 2and 3-edge-connected components and the 2-vertex-connected components
        of a graph, under insertions of edges in the graph. At any moment, the data
        structure can answer the following type of query: given two nodes in the graph,
        are these nodes 2or 3-edge-connected or 2-vertexconnected. Starting from an
        \"empty\" graph of n nodes, the algorithms run in O( n+ m.a( m, n\u00bb time,
        where m is the total number of queries and edge insertions. The data structure
        allows for insertions of nodes also. Besides, a linear time algorithm is presented
        for maintaining the 2-edge-connected components in case the initial graph
        is connected.", "venue": "", "year": 1990, "referenceCount": 35, "citationCount":
        13, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": {"name": "", "volume": "9027"}, "authors": [{"authorId": "65972170",
        "name": "Ja Han La Poutr\u00e9"}]}, {"paperId": "71ef32ab507b86f6511cc1a032997d22d518de1e",
        "externalIds": {"DOI": "10.1017/9781108592376", "CorpusId": 242723869}, "corpusId":
        242723869, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/71ef32ab507b86f6511cc1a032997d22d518de1e",
        "title": "Topics in Algorithmic Graph Theory", "abstract": "Algorithmic graph
        theory has been expanding at an extremely rapid rate since the middle of the
        twentieth century, in parallel with the growth of computer science and the
        accompanying utilization of computers, where efficient algorithms have been
        a prime goal. This book presents material on developments of graph algorithms
        and related concepts that will be of value to both mathematicians and computer
        scientists, at a level suitable for graduate students, researchers and instructors.
        The 15 expository chapters, written by acknowledged international experts
        on their subjects, focus on the development and application of algorithms
        to solve particular problems. All chapters have been carefully edited to enhance
        readability and to standardize the chapter structure as well as the terminology
        and notation. The editors provide basic background material in graph theory,
        and a chapter written by the book\u2019s Academic Consultant, Martin Charles
        Golumbic (University of Haifa, Israel), provides background material on algorithms
        connected with graph theory.", "venue": "", "year": null, "referenceCount":
        0, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "77888938",
        "name": "Borkar"}]}, {"paperId": "dc77139add16b72d2a49ea8e8f85f6b7e53c0b42",
        "externalIds": {"DBLP": "journals/ipl/WeimannP11", "MAG": "2074619214", "DOI":
        "10.1016/j.ipl.2011.04.006", "CorpusId": 2420806}, "corpusId": 2420806, "publicationVenue":
        "44ecc2bb-f8fd-4c6d-bd54-30ca098be91d", "url": "https://www.semanticscholar.org/paper/dc77139add16b72d2a49ea8e8f85f6b7e53c0b42",
        "title": "A note on exact distance labeling", "abstract": null, "venue": "Information
        Processing Letters", "year": 2011, "referenceCount": 7, "citationCount": 16,
        "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf": null,
        "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "external"}, {"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2011-07-01", "journal":
        {"name": "Inf. Process. Lett.", "pages": "671-673", "volume": "111"}, "authors":
        [{"authorId": "1681527", "name": "O. Weimann"}, {"authorId": "1722034", "name":
        "D. Peleg"}]}, {"paperId": "2a12a79854e96701cd7412745809a59da42b86de", "externalIds":
        {"DOI": "10.1007/s00453-015-0075-x", "CorpusId": 253968945}, "corpusId": 253968945,
        "publicationVenue": "300eb16f-ce6c-495a-8da3-2e691bf9051d", "url": "https://www.semanticscholar.org/paper/2a12a79854e96701cd7412745809a59da42b86de",
        "title": "Certifying 3-Edge-Connectivity", "abstract": null, "venue": "Algorithmica",
        "year": 2015, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "http://arxiv.org/pdf/1211.6553",
        "status": "GREEN"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2015-09-22",
        "journal": {"name": "Algorithmica", "pages": "309 - 335", "volume": "77"},
        "authors": [{"authorId": "1698752", "name": "K. Mehlhorn"}, {"authorId": "2055264790",
        "name": "Adrian Neumann"}, {"authorId": "34189607", "name": "Jens M. Schmidt"}]},
        {"paperId": "77bce095482998d27e1ad1a874ac5994edf71cb7", "externalIds": {"ArXiv":
        "1211.6553", "DBLP": "conf/wg/MehlhornNS13", "MAG": "2164746840", "DOI": "10.1007/s00453-015-0075-x",
        "CorpusId": 3765919}, "corpusId": 3765919, "publicationVenue": "300eb16f-ce6c-495a-8da3-2e691bf9051d",
        "url": "https://www.semanticscholar.org/paper/77bce095482998d27e1ad1a874ac5994edf71cb7",
        "title": "Certifying 3-Edge-Connectivity", "abstract": null, "venue": "Algorithmica",
        "year": 2012, "referenceCount": 39, "citationCount": 27, "influentialCitationCount":
        2, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/1211.6553",
        "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2012-11-28", "journal": {"name": "Algorithmica", "pages": "309-335", "volume":
        "77"}, "authors": [{"authorId": "1698752", "name": "K. Mehlhorn"}, {"authorId":
        "2055264790", "name": "Adrian Neumann"}, {"authorId": "34189607", "name":
        "Jens M. Schmidt"}]}, {"paperId": "c6a019a055aa907396c125fb2d82793f49e7a07d",
        "externalIds": {"MAG": "2346911794", "DOI": "10.2298/AADM160207002A", "CorpusId":
        56259071}, "corpusId": 56259071, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/c6a019a055aa907396c125fb2d82793f49e7a07d",
        "title": "On trees with maximum algebraic connectivity", "abstract": "In this
        paper, trees with fixed diameter and any number of vertices are \n investigated.
        A subclass of trees with diameter 2k is introduced, the \n diameter path trees
        (dp-trees). Two subclasses of dp-trees are defined in \n which we characterize
        the elements that maximize the algebraic connectivity. \n Also, it is proved
        that if any tree maximizes the algebraic connectivity \n over all trees with
        diameter 2k then it is a dp-tree. For such trees, a \n bound for the degrees
        of their vertices is given. In the case of the odd \n diameter, 2k-1, we show
        that P2k is the only tree that maximizes the \n algebraic connectivity.",
        "venue": "", "year": 2016, "referenceCount": 38, "citationCount": 6, "influentialCitationCount":
        1, "isOpenAccess": true, "openAccessPdf": {"url": "http://www.doiserbia.nb.rs/ft.aspx?id=1452-86301600002A",
        "status": "GREEN"}, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category":
        "Mathematics", "source": "external"}, {"category": "Mathematics", "source":
        "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"name": "Applicable
        Analysis and Discrete Mathematics", "pages": "88-101", "volume": "10"}, "authors":
        [{"authorId": "35722946", "name": "N. Abreu"}, {"authorId": "2759784", "name":
        "L. Markenzon"}, {"authorId": "2110027062", "name": "Luciana Lee"}, {"authorId":
        "2651778", "name": "O. Rojo"}]}]}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Connection:
      - keep-alive
      Content-Length:
      - '160165'
      Content-Type:
      - application/json
      Date:
      - Sun, 20 Aug 2023 13:55:51 GMT
      Via:
      - 1.1 bb77ddc77025c8e804224d947c1d5682.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - fyyfooOBIwX50bWJdRao1t97q29q2jR4YgRqlQ0FAd9xPp57N3nF3g==
      X-Amz-Cf-Pop:
      - GIG51-P4
      X-Cache:
      - Miss from cloudfront
      x-amz-apigw-id:
      - J9k4IHEtvHcFtNQ=
      x-amzn-Remapped-Connection:
      - keep-alive
      x-amzn-Remapped-Content-Length:
      - '160165'
      x-amzn-Remapped-Date:
      - Sun, 20 Aug 2023 13:55:51 GMT
      x-amzn-Remapped-Server:
      - gunicorn
      x-amzn-RequestId:
      - e6b299e5-67b1-4966-b561-6c92719097c5
    status:
      code: 200
      message: OK
version: 1
