interactions:
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - api.semanticscholar.org
      user-agent:
      - python-httpx/0.26.0
    method: GET
    uri: https://api.semanticscholar.org/graph/v1/paper/search/bulk?query=kubernetes&fields=abstract,authors,citationCount,citationStyles,corpusId,externalIds,fieldsOfStudy,influentialCitationCount,isOpenAccess,journal,openAccessPdf,paperId,publicationDate,publicationTypes,publicationVenue,referenceCount,s2FieldsOfStudy,title,url,venue,year&offset=0&limit=100
  response:
    content: '{"total": 2464, "token": "PCOKWVSKJJGM4TWNJNI3EUSQJIWVNUSRKBFEYK2JFUBHFI4VZRGE2LCTKLGM3EUNZUGY3UYMQA6AXUYU2M2DHM2UKPFRIY4T4QKKHNBUWMSHGU5F3BNAB2IQCQUA",
      "data": [{"paperId": "0018ce3db8f9957b520d6b7e0cec84abfa230e1c", "externalIds":
      {"DBLP": "journals/sensors/Poniszewska-Maranda21", "PubMedCentral": "7967216",
      "DOI": "10.3390/s21051910", "CorpusId": 232294416, "PubMed": "33803329"}, "corpusId":
      232294416, "publicationVenue": {"id": "3dbf084c-ef47-4b74-9919-047b40704538",
      "name": "Italian National Conference on Sensors", "type": "conference", "alternate_names":
      ["SENSORS", "IEEE Sens", "Ital National Conf Sens", "IEEE Sensors", "Sensors"],
      "issn": "1424-8220", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/0018ce3db8f9957b520d6b7e0cec84abfa230e1c",
      "title": "Kubernetes Cluster for Automating Software Production Environment",
      "abstract": "Microservices, Continuous Integration and Delivery, Docker, DevOps,
      Infrastructure as Code\u2014these are the current trends and buzzwords in the
      technological world of 2020. A popular tool which can facilitate the deployment
      and maintenance of microservices is Kubernetes. Kubernetes is a platform for
      running containerized applications, for example microservices. There are two
      main questions which answer was important for us: how to deploy Kubernetes itself
      and how to ensure that the deployment fulfils the needs of a production environment.
      Our research concentrates on the analysis and evaluation of Kubernetes cluster
      as the software production environment. However, firstly it is necessary to
      determine and evaluate the requirements of production environment. The paper
      presents the determination and analysis of such requirements and their evaluation
      in the case of Kubernetes cluster. Next, the paper compares two methods of deploying
      a Kubernetes cluster: kops and eksctl. Both of the methods concern the AWS cloud,
      which was chosen mainly because of its wide popularity and the range of provided
      services. Besides the two chosen methods of deployment, there are many more,
      including the DIY method and deploying on-premises.", "venue": "Italian National
      Conference on Sensors", "year": 2021, "referenceCount": 72, "citationCount":
      18, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.mdpi.com/1424-8220/21/5/1910/pdf?version=1615350002", "status":
      "GOLD"}, "fieldsOfStudy": ["Computer Science", "Medicine"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Medicine",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2021-03-01", "journal": {"name": "Sensors
      (Basel, Switzerland)", "volume": "21"}, "citationStyles": {"bibtex": "@Article{Poniszewska-Mara\u0144da2021KubernetesCF,\n
      author = {A. Poniszewska-Mara\u0144da and E. Czechowska},\n booktitle = {Italian
      National Conference on Sensors},\n journal = {Sensors (Basel, Switzerland)},\n
      title = {Kubernetes Cluster for Automating Software Production Environment},\n
      volume = {21},\n year = {2021}\n}\n"}, "authors": [{"authorId": "1384039140",
      "name": "A. Poniszewska-Mara\u0144da"}, {"authorId": "23602995", "name": "E.
      Czechowska"}]}, {"paperId": "001e4f9693b704f9024a61bccfc00885edd560ac", "externalIds":
      {"MAG": "2974892200", "DOI": "10.1051/epjconf/201921404035", "CorpusId": 204686883},
      "corpusId": 204686883, "publicationVenue": {"id": "f2cc63fa-90cb-413d-92ce-003d5244a1e8",
      "name": "EPJ Web of Conferences", "type": "journal", "alternate_names": ["EPJ
      Web Conf", "Epj Web of Conferences", "Epj Web Conf"], "issn": "2100-014X", "url":
      "https://web.archive.org/web/*/https:/www.epj-conferences.org/component/issues/",
      "alternate_urls": ["https://www.epj-conferences.org/", "https://web.archive.org/web/20161128151311/http:/www.epj-conferences.org:80/",
      "https://www.epj-conferences.org/component/issues/"]}, "url": "https://www.semanticscholar.org/paper/001e4f9693b704f9024a61bccfc00885edd560ac",
      "title": "Storage events: distributed users, federation and beyond", "abstract":
      "For federated storage to work well, some knowledge from each storage system
      must exist outside that system, regardless of the use case. This is needed to
      allow coordinated activity; e.g., executing analysis jobs on worker nodes with
      good accessibility to the data.\nCurrently, this is achieved by clients notifying
      central services of activity; e.g., a client notifies a replica catalogue after
      an upload. Unfortunately, this forces end users to use bespoke clients. It also
      forces clients to wait for asynchronous activities to finish.\ndCache provides
      an alternative approach: storage events. In this approach the storage systems
      (rather than the clients) become the coordinating service, notifying interested
      parties of key events.\nAt DESY, we are investigating storage events along with
      Apache OpenWhisk and Kubernetes to build a \"serverless\" cloud, similar to
      AWS Lambda or Google Cloud Functions, for photon science use cases.\nStorage
      events are more generally useful: catalogues are notified whenever data is uploaded
      or delete, tape becomes more efficient because analysis can start immediately
      after the data is on disk, caches can be \"smart\" fetching new datasets preemptively.\nIn
      this paper we will present work within dCache to support a new event-based interface,
      with which these and other use cases become more efficient.", "venue": "EPJ
      Web of Conferences", "year": 2019, "referenceCount": 6, "citationCount": 1,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.epj-conferences.org/articles/epjconf/pdf/2019/19/epjconf_chep2018_04035.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": null, "journal": {"name":
      "EPJ Web of Conferences"}, "citationStyles": {"bibtex": "@Conference{Millar2019StorageED,\n
      author = {A. Paul Millar and Olufemi Adeyemi and V. Garonne and D. Litvintsev
      and T. Mkrtchyan and A. Rossi and M. Sahakyan and J\u00fcrgen Starek},\n booktitle
      = {EPJ Web of Conferences},\n journal = {EPJ Web of Conferences},\n title =
      {Storage events: distributed users, federation and beyond},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "2259367737", "name": "A. Paul Millar"}, {"authorId":
      "2115985", "name": "Olufemi Adeyemi"}, {"authorId": "2897755", "name": "V. Garonne"},
      {"authorId": "153401729", "name": "D. Litvintsev"}, {"authorId": "97776354",
      "name": "T. Mkrtchyan"}, {"authorId": "72077658", "name": "A. Rossi"}, {"authorId":
      "144355080", "name": "M. Sahakyan"}, {"authorId": "34034469", "name": "J\u00fcrgen
      Starek"}]}, {"paperId": "0020825b272b31f63359eadf0d714d49590095f4", "externalIds":
      {"DOI": "10.1007/978-1-4842-5817-0_3", "CorpusId": 243630522}, "corpusId": 243630522,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0020825b272b31f63359eadf0d714d49590095f4",
      "title": "Security", "abstract": null, "venue": "MongoDB Topology Design", "year":
      2020, "referenceCount": 4, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "MongoDB Topology Design"},
      "citationStyles": {"bibtex": "@Article{Cottrell2020Security,\n author = {N.
      Cottrell},\n booktitle = {MongoDB Topology Design},\n journal = {MongoDB Topology
      Design},\n title = {Security},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "1933886029", "name": "N. Cottrell"}]}, {"paperId": "00330fcadc21404d6e05f35a9981ae16319e43e1",
      "externalIds": {"MAG": "3107227917", "DBLP": "conf/racs/KimAK20", "DOI": "10.1145/3400286.3418278",
      "CorpusId": 227163818}, "corpusId": 227163818, "publicationVenue": {"id": "c7f93972-20e4-45c1-9dac-2ffafa2dba1d",
      "name": "Research in Adaptive and Convergent Systems", "type": "conference",
      "alternate_names": ["Research in Applied Computation Symposium", "Res Adapt
      Converg Syst", "RACS", "Res Appl Comput Symp"]}, "url": "https://www.semanticscholar.org/paper/00330fcadc21404d6e05f35a9981ae16319e43e1",
      "title": "Design and Implementation an OpenMCP distributed collaborative container
      platform for flexible scaling and service delivery", "abstract": "Recently,
      many companies have been introducing micro-service architecture framework technology
      to increase development productivity and portability. Google''s Kubernetes is
      a representative micro-service architecture framework that introduces the concept
      of clusters to provide flexible expansion and services[1, 2]. Kubernetes applies
      technologies such as Scheduling and Load Balancing on a cluster-by-cluster basis,
      and has the flexibility to add nodes or move services within a single cluster.
      However, it does not provide multiple-cluster services scheduling, load balancing
      or flexible dynamic cluster add/delete technologies. Thus, OpenMCP(Open Multi-Cluster
      Container Platform) was designed for flexible expansion and service delivery
      between Kubernetes based Multi-Cluster. Key features of OpenMCP include multi-cluster
      resource collection, resource analysis, scheduling, load balancing, Auto Scaling,
      Cluster Synchronization, Dynamic Policy, Domain Name Server (DNS) management.",
      "venue": "Research in Adaptive and Convergent Systems", "year": 2020, "referenceCount":
      11, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2020-10-13",
      "journal": {"name": "Proceedings of the International Conference on Research
      in Adaptive and Convergent Systems"}, "citationStyles": {"bibtex": "@Book{Kim2020DesignAI,\n
      author = {Chan-Hong Kim and J. An and Younghwan Kim},\n booktitle = {Research
      in Adaptive and Convergent Systems},\n journal = {Proceedings of the International
      Conference on Research in Adaptive and Convergent Systems},\n title = {Design
      and Implementation an OpenMCP distributed collaborative container platform for
      flexible scaling and service delivery},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "2110368315", "name": "Chan-Hong Kim"}, {"authorId": "2372851", "name": "J.
      An"}, {"authorId": "2108359519", "name": "Younghwan Kim"}]}, {"paperId": "004299e542010532143cecd3696d19f62280f3e7",
      "externalIds": {"MAG": "2770609353", "DOI": "10.1109/ICSTCC.2017.8107019", "CorpusId":
      41045040}, "corpusId": 41045040, "publicationVenue": {"id": "0e5fac1a-c8c9-4b55-a332-5123949e7ab4",
      "name": "International Conference on System Theory, Control and Computing",
      "type": "conference", "alternate_names": ["ICSTCC", "Int Conf Syst Theory Control
      Comput"]}, "url": "https://www.semanticscholar.org/paper/004299e542010532143cecd3696d19f62280f3e7",
      "title": "New software applications for system identification", "abstract":
      "New software applications for linear multivariable system identification are
      presented. The incorporated algorithms use subspace-based techniques (MOESP,
      N4SID, or their combination) to find a standard discrete-time state-space description,
      and optionally the covariance matrices and Kalman predictor gain, using input
      and output (I/O) trajectories. For flexibility, separate applications are offered
      for obtaining the processed triangular factor of the structured, block-Hankel-block
      matrix of I/O data (using fast or standard QR factorization algorithms), for
      computing the system and predictor matrices, for estimating the initial state
      of the system, and for simulating and evaluating the model. The applications
      are encapsulated in Docker containers, which are managed by the Kubernetes platform
      on a Linux machine. This ensures greater flexibility, enhanced security, and
      fast execution. The services to be implemented are part of a cloud-based open
      platform for process control applications.", "venue": "International Conference
      on System Theory, Control and Computing", "year": 2017, "referenceCount": 20,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2017-10-01", "journal":
      {"name": "2017 21st International Conference on System Theory, Control and Computing
      (ICSTCC)", "pages": "106-111"}, "citationStyles": {"bibtex": "@Conference{Sima2017NewSA,\n
      author = {V. Sima and Alexandru Stanciu and F. Hartescu},\n booktitle = {International
      Conference on System Theory, Control and Computing},\n journal = {2017 21st
      International Conference on System Theory, Control and Computing (ICSTCC)},\n
      pages = {106-111},\n title = {New software applications for system identification},\n
      year = {2017}\n}\n"}, "authors": [{"authorId": "3329798", "name": "V. Sima"},
      {"authorId": "46671126", "name": "Alexandru Stanciu"}, {"authorId": "2889990",
      "name": "F. Hartescu"}]}, {"paperId": "006414e6b2b7bf78ffe2a359b47d753894a83cdd",
      "externalIds": {"DOI": "10.1007/978-981-16-0115-6_22", "CorpusId": 245644354},
      "corpusId": 245644354, "publicationVenue": {"id": "9f142d12-860c-4df5-a17f-905e6d46dcb8",
      "name": "Lecture Notes in Electrical Engineering", "alternate_names": ["Lect
      Note Electr Eng"], "issn": "1876-1100", "url": "http://www.springer.com/engineering/signals/book/978-3-540-79040-2"},
      "url": "https://www.semanticscholar.org/paper/006414e6b2b7bf78ffe2a359b47d753894a83cdd",
      "title": "A Container-Based of Edge Device Monitoring on Kubernetes", "abstract":
      null, "venue": "Lecture Notes in Electrical Engineering", "year": 2021, "referenceCount":
      2, "citationCount": 5, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "Lecture Notes in Electrical Engineering"}, "citationStyles": {"bibtex":
      "@Article{Fathoni2021ACO,\n author = {H. Fathoni and Hao-Yi Yen and Chao-Tung
      Yang and Chin-Yin Huang and Endah Kristiani},\n booktitle = {Lecture Notes in
      Electrical Engineering},\n journal = {Lecture Notes in Electrical Engineering},\n
      title = {A Container-Based of Edge Device Monitoring on Kubernetes},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "145606513", "name": "H. Fathoni"},
      {"authorId": "2148230665", "name": "Hao-Yi Yen"}, {"authorId": "144373463",
      "name": "Chao-Tung Yang"}, {"authorId": "40311574", "name": "Chin-Yin Huang"},
      {"authorId": "51107359", "name": "Endah Kristiani"}]}, {"paperId": "006619c94683268a9750b488563515a2c064e48e",
      "externalIds": {"PubMedCentral": "10223742", "DBLP": "journals/sensors/SeoJCCKK23",
      "DOI": "10.3390/s23104712", "CorpusId": 258672992, "PubMed": "37430625"}, "corpusId":
      258672992, "publicationVenue": {"id": "3dbf084c-ef47-4b74-9919-047b40704538",
      "name": "Italian National Conference on Sensors", "type": "conference", "alternate_names":
      ["SENSORS", "IEEE Sens", "Ital National Conf Sens", "IEEE Sensors", "Sensors"],
      "issn": "1424-8220", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/006619c94683268a9750b488563515a2c064e48e",
      "title": "MDED-Framework: A Distributed Microservice Deep-Learning Framework
      for Object Detection in Edge Computing", "abstract": "The demand for deep learning
      frameworks capable of running in edge computing environments is rapidly increasing
      due to the exponential growth of data volume and the need for real-time processing.
      However, edge computing environments often have limited resources, necessitating
      the distribution of deep learning models. Distributing deep learning models
      can be challenging as it requires specifying the resource type for each process
      and ensuring that the models are lightweight without performance degradation.
      To address this issue, we propose the Microservice Deep-learning Edge Detection
      (MDED) framework, designed for easy deployment and distributed processing in
      edge computing environments. The MDED framework leverages Docker-based containers
      and Kubernetes orchestration to obtain a pedestrian-detection deep learning
      model with a speed of up to 19 FPS, satisfying the semi-real-time condition.
      The framework employs an ensemble of high-level feature-specific networks (HFN)
      and low-level feature-specific networks (LFN) trained on the MOT17Det dataset,
      achieving an accuracy improvement of up to AP50 and AP0.18 on MOT20Det data.",
      "venue": "Italian National Conference on Sensors", "year": 2023, "referenceCount":
      42, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/1424-8220/23/10/4712/pdf?version=1683898381",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science", "Medicine"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Medicine",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-05-01", "journal": {"name": "Sensors (Basel, Switzerland)",
      "volume": "23"}, "citationStyles": {"bibtex": "@Article{Seo2023MDEDFrameworkAD,\n
      author = {Jihyun Seo and Sumin Jang and Jae-Geun Cha and Hyunhwa Choi and Daewon
      Kim and Sunwook Kim},\n booktitle = {Italian National Conference on Sensors},\n
      journal = {Sensors (Basel, Switzerland)},\n title = {MDED-Framework: A Distributed
      Microservice Deep-Learning Framework for Object Detection in Edge Computing},\n
      volume = {23},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2111508507",
      "name": "Jihyun Seo"}, {"authorId": "2113778476", "name": "Sumin Jang"}, {"authorId":
      "40538415", "name": "Jae-Geun Cha"}, {"authorId": "2217088133", "name": "Hyunhwa
      Choi"}, {"authorId": "2109268092", "name": "Daewon Kim"}, {"authorId": "2154924919",
      "name": "Sunwook Kim"}]}, {"paperId": "008575b03e1b2f17c50922eeb1f4ada73960d618",
      "externalIds": {"CorpusId": 251044395}, "corpusId": 251044395, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/008575b03e1b2f17c50922eeb1f4ada73960d618",
      "title": "Energy-Aware Scheduling for Microservice-Based Applications", "abstract":
      "Despite the improvements in energy-efficiency of hardware, the overall energy
      consumption in large-scale computing data centers continues to grow. That increasing
      energy consumption of computing systems has become a limiting factor for further
      performance growth due to overwhelming electricity bills, complex requirements
      for the cooling system and power supply infrastructure, high carbon dioxide
      footprints, and more [1]. Existing work on energy-aware resource management
      approaches for data centers mostly relies on reallocating virtual machines between
      physical hosts, thus consolidating the workload into the minimum of physical
      resources and preventing resource underutilization [2, 3]. However, little attention
      is given to application running on these machines and to application-level policies
      that can facilitate further energy savings. One substantial portion of cloud-native
      workloads nowadays is applications built following microservice architectural
      principles [4, 5, 6, 7]. A microservicebased application is a large distributed
      system that consists of small, loosely coupled, mono-functional services communicating
      with each other over a network. The benefits of decomposing a monolithic application
      into smaller independently deployable and decentralized services include an
      independent development and deployment of each service, heterogeneity of used
      tech stacks, loose coupling, and high cohesion. However, as interrelated parts
      of the application extensively communicate with each other, deployment of services
      in nodes can greatly affect the energy consumption of the system. In fact, according
      to data provided by Intel Labs [8], networking accounts for a large fraction
      of the power consumed by a machine; as such, deploying services with a high
      communication volume on separate machines will negatively impact the energy
      consumption of a cluster. With the growing popularity of microservices, the
      goal of this project is to propose an energy-aware scheduler for microservice-based
      applications. The scheduler takes into account information about (a) the traffic
      patterns between microservices, (b) constraints on resource consumption of each
      individual microservice, and (c) availability and utilization of nodes in the
      cluster. It uses this information to adjust the placement of microservices and
      optimally distribute interrelated microservice workloads. By the end of the
      project, we intend to measure whether the proposed algorithm improves the utilization
      of cluster resources and energy-efficiency of the cluster, without sacrificing
      performance. We perform our experiments in a cluster managed by Kubernetes [9].
      In such clusters, microservices run inside pods (typically, one microservice
      per pod)", "venue": "", "year": 2018, "referenceCount": 17, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Inproceedings{None,\n title = {Energy-Aware Scheduling for Microservice-Based
      Applications},\n year = {2018}\n}\n"}, "authors": []}, {"paperId": "00944d92fe5dbf782230984461f9cd27f83bbfbb",
      "externalIds": {"DBLP": "conf/models/Mohammed22", "DOI": "10.1145/3550356.3558505",
      "CorpusId": 253421590}, "corpusId": 253421590, "publicationVenue": {"id": "5353d583-6f50-4967-ab34-74338b908b90",
      "name": "ACM/IEEE International Conference on Model Driven Engineering Languages
      and Systems", "type": "conference", "alternate_names": ["Model Driven Eng Lang
      Syst", "ACM/IEEE Int Conf Model Driven Eng Lang Syst", "Model Driven Engineering
      Languages and Systems", "MoDELS"], "url": "https://dl.acm.org/conference/models"},
      "url": "https://www.semanticscholar.org/paper/00944d92fe5dbf782230984461f9cd27f83bbfbb",
      "title": "Dynamic adaptation for distributed systems in model-driven engineering",
      "abstract": "Modern-day software systems operate within complex, uncertain,
      and highly dynamic environments. Managing such systems is a significant challenge;
      developing self-managing autonomic systems is one way to reduce development
      and maintenance efforts. In the context of distributed systems, achieving this
      autonomy through dynamic adaptation is particularly challenging due to the volatile
      host environment. Model-Driven Engineering (MDE) is a software development paradigm
      that advocates the use of models as the primary artifacts rather than source
      code. MDE promises higher-quality software at a lower cost through abstractions,
      automation, and analyses. The goal of our work is to leverage MDE to facilitate
      the development and maintenance of distributed applications with dynamic adaptation
      capabilities. We assume that the structure and behavior of the application has
      been modeled using the Component-and-Connector (C&C) paradigm and the ''Monitor-Analyze-Plan-Execute
      with shared Knowledge'' (MAPE-K) reference architecture. In the initial work,
      we have developed a model-level monitoring infrastructure, and adapted existing
      code generation and deployment support to generate a distributed system from
      the C&C models and deploy it automatically on a suitable platform. In future
      work, we plan to investigate how the monitoring and adaptation capabilities
      of cloud-native containerization and orchestration platforms (i.e., Docker and
      Kubernetes) can be leveraged for dynamic adaptation, and how this system-level
      adaptation can be combined effectively with any model-level monitoring, planning,
      and adaptation capabilities.", "venue": "ACM/IEEE International Conference on
      Model Driven Engineering Languages and Systems", "year": 2022, "referenceCount":
      51, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate":
      "2022-10-23", "journal": {"name": "Proceedings of the 25th International Conference
      on Model Driven Engineering Languages and Systems: Companion Proceedings"},
      "citationStyles": {"bibtex": "@Article{Mohammed2022DynamicAF,\n author = {Mufasir
      Muthaher Mohammed},\n booktitle = {ACM/IEEE International Conference on Model
      Driven Engineering Languages and Systems},\n journal = {Proceedings of the 25th
      International Conference on Model Driven Engineering Languages and Systems:
      Companion Proceedings},\n title = {Dynamic adaptation for distributed systems
      in model-driven engineering},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "97061967", "name": "Mufasir Muthaher Mohammed"}]}, {"paperId": "00abe7a37d8505d252130b711c549aca15333a16",
      "externalIds": {"DBLP": "conf/cloudcom/TamiruTEP20", "MAG": "3106749574", "DOI":
      "10.1109/CloudCom49646.2020.00002", "CorpusId": 229429206}, "corpusId": 229429206,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/00abe7a37d8505d252130b711c549aca15333a16",
      "title": "An Experimental Evaluation of the Kubernetes Cluster Autoscaler in
      the Cloud", "abstract": "Despite the abundant research in cloud autoscaling,
      autoscaling in Kubernetes, arguably the most popular cloud platform today, is
      largely unexplored. Kubernetes'' Cluster Autoscaler can be configured to select
      nodes either from a single node pool (CA) or from multiple node pools (CA-NAP).
      We evaluate and compare these configurations using two representative applications
      and workloads on Google Kubernetes Engine (GKE). We report our results using
      monetary cost and standard autoscaling performance metrics (under- and over-provisioning
      accuracy, under- and over-provisioning timeshare, instability of elasticity
      and deviation from the theoretical optimal autoscaler) endorsed by the SPEC
      Cloud Group. We show that, overall, CA-NAP outperforms CA and that autoscaling
      performance depends mainly on the composition of the workload. We compare our
      results with those of the related work and point out further configuration tuning
      opportunities to improve performance and cost-saving.", "venue": "2020 IEEE
      International Conference on Cloud Computing Technology and Science (CloudCom)",
      "year": 2020, "referenceCount": 25, "citationCount": 10, "influentialCitationCount":
      2, "isOpenAccess": true, "openAccessPdf": {"url": "https://hal.inria.fr/hal-02958916/file/main.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2020-12-01", "journal": {"name": "2020 IEEE
      International Conference on Cloud Computing Technology and Science (CloudCom)",
      "pages": "17-24"}, "citationStyles": {"bibtex": "@Article{Tamiru2020AnEE,\n
      author = {Mulugeta Ayalew Tamiru and Johan Tordsson and E. Elmroth and G. Pierre},\n
      booktitle = {2020 IEEE International Conference on Cloud Computing Technology
      and Science (CloudCom)},\n journal = {2020 IEEE International Conference on
      Cloud Computing Technology and Science (CloudCom)},\n pages = {17-24},\n title
      = {An Experimental Evaluation of the Kubernetes Cluster Autoscaler in the Cloud},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "151139369", "name": "Mulugeta
      Ayalew Tamiru"}, {"authorId": "2548512", "name": "Johan Tordsson"}, {"authorId":
      "1685517", "name": "E. Elmroth"}, {"authorId": "145074982", "name": "G. Pierre"}]},
      {"paperId": "00c53006e620b383258c9af294e0b240e0d225bd", "externalIds": {"DOI":
      "10.1007/978-1-4842-7460-6_9", "CorpusId": 245230894}, "corpusId": 245230894,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/00c53006e620b383258c9af294e0b240e0d225bd",
      "title": "Kubernetes Primer", "abstract": null, "venue": "Spring Boot Fundamentals
      Part 2", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [], "publicationTypes": null, "publicationDate": null, "journal": {"name": "Spring
      Boot Fundamentals Part 2"}, "citationStyles": {"bibtex": "@Article{Guti\u00e9rrez2021KubernetesP,\n
      author = {Felipe Guti\u00e9rrez},\n booktitle = {Spring Boot Fundamentals Part
      2},\n journal = {Spring Boot Fundamentals Part 2},\n title = {Kubernetes Primer},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "122948690", "name": "Felipe
      Guti\u00e9rrez"}]}, {"paperId": "01079c5c50c9b17fe9c05eccc3764f25df77393c",
      "externalIds": {"DBLP": "journals/fi/GonzalezVVMA23", "DOI": "10.3390/fi15080274",
      "CorpusId": 260993413}, "corpusId": 260993413, "publicationVenue": {"id": "c3e5f1c8-9ba7-47e5-acde-53063a69d483",
      "name": "Future Internet", "type": "journal", "issn": "1999-5903", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-156830",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-156830",
      "https://www.mdpi.com/journal/futureinternet"]}, "url": "https://www.semanticscholar.org/paper/01079c5c50c9b17fe9c05eccc3764f25df77393c",
      "title": "A Link-Layer Virtual Networking Solution for Cloud-Native Network
      Function Virtualisation Ecosystems: L2S-M", "abstract": "Microservices have
      become promising candidates for the deployment of network and vertical functions
      in the fifth generation of mobile networks. However, microservice platforms
      like Kubernetes use a flat networking approach towards the connectivity of virtualised
      workloads, which prevents the deployment of network functions on isolated network
      segments (for example, the components of an IP Telephony system or a content
      distribution network). This paper presents L2S-M, a solution that enables the
      connectivity of Kubernetes microservices over isolated link-layer virtual networks,
      regardless of the compute nodes where workloads are actually deployed. L2S-M
      uses software-defined networking (SDN) to fulfil this purpose. Furthermore,
      the L2S-M design is flexible to support the connectivity of Kubernetes workloads
      across different Kubernetes clusters. We validate the functional behaviour of
      our solution in a moderately complex Smart Campus scenario, where L2S-M is used
      to deploy a content distribution network, showing its potential for the deployment
      of network services in distributed and heterogeneous environments.", "venue":
      "Future Internet", "year": 2023, "referenceCount": 10, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/1999-5903/15/8/274/pdf?version=1692267150",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-08-17", "journal":
      {"name": "Future Internet", "pages": "274", "volume": "15"}, "citationStyles":
      {"bibtex": "@Article{Gonzalez2023ALV,\n author = {Luis F. Gonzalez and I. Vidal
      and F. Valera and Raul Martin and Dulce Artalejo},\n booktitle = {Future Internet},\n
      journal = {Future Internet},\n pages = {274},\n title = {A Link-Layer Virtual
      Networking Solution for Cloud-Native Network Function Virtualisation Ecosystems:
      L2S-M},\n volume = {15},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2072871840",
      "name": "Luis F. Gonzalez"}, {"authorId": "143917913", "name": "I. Vidal"},
      {"authorId": "145764713", "name": "F. Valera"}, {"authorId": "2232383964", "name":
      "Raul Martin"}, {"authorId": "2232320867", "name": "Dulce Artalejo"}]}, {"paperId":
      "011985a1d11926762074d69c3b5643ea98f05e8b", "externalIds": {"CorpusId": 201037790},
      "corpusId": 201037790, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/011985a1d11926762074d69c3b5643ea98f05e8b",
      "title": "A. A. NIKULCHENKO FORECASTING OF CUSTOMER DEMAND FOR SEASONAL GOODS
      USING RETAIL CURVE VECTOR", "abstract": "\u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d
      \u043c\u0435\u0442\u043e\u0434 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f
      \u0441\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u0441\u0435\u0437\u043e\u043d\u043d\u044b\u0435
      \u0442\u043e\u0432\u0430\u0440\u044b \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c
      \u0432\u0435\u043a\u0442\u043e\u0440\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f
      \u043e\u0431\u044a\u0435\u043c\u043e\u0432 \u043f\u0440\u043e\u0434\u0430\u0436
      \u0432 \u0442\u0435\u0447\u0435\u043d\u0438\u0435 \u0433\u043e\u0434\u0430 \u0438\u043b\u0438
      \u0432\u0435\u043a\u0442\u043e\u0440\u0430 \u043a\u0440\u0438\u0432\u043e\u0439
      \u043f\u0440\u043e\u0434\u0430\u0436, \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u043c\u0438
      \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f
      \u043e\u0431\u044a\u0435\u043c\u044b \u043d\u0435\u0434\u0435\u043b\u044c\u043d\u044b\u0445
      \u043f\u0440\u043e\u0434\u0430\u0436 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u043c\u043e\u0433\u043e
      \u043b\u0438\u0431\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u0433\u043e
      \u0442\u043e\u0432\u0430\u0440\u0430, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435
      \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438
      \u043f\u0440\u043e\u0434\u0430\u0436 \u0437\u0430 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0439
      \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u043d\u044b\u0439 \u0433\u043e\u0434.
      \u0423\u0441\u043b\u043e\u0432\u0438\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043c\u043e\u0441\u0442\u0438
      \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u0433\u043e
      \u043c\u0435\u0442\u043e\u0434\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f
      \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0433\u0438\u043f\u043e\u0442\u0435\u0437\u044b
      \u043e \u0441\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445
      \u043d\u0435\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043c\u043e\u0432
      \u043f\u0440\u043e\u0434\u0430\u0436 \u0434\u0432\u0443\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e
      \u0438\u0434\u0443\u0449\u0438\u0445 \u043b\u0435\u0442 \u0438 \u0433\u0438\u043f\u043e\u0442\u0435\u0437\u044b
      \u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0438
      \u0433\u0440\u0443\u043f\u043f \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0441\u043e
      \u0441\u0445\u043e\u0436\u0435\u0439 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u043e\u0439
      \u043f\u0440\u043e\u0434\u0430\u0436. \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435
      \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442
      \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0440\u043e\u0433\u043d\u043e\u0437
      \u0441\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u0442\u043e\u0432\u0430\u0440
      \u0432 \u0442\u0435\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439
      \u043d\u0435\u0434\u0435\u043b\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435
      \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431 \u043e\u0431\u044a\u0435\u043c\u0430\u0445
      \u043f\u0440\u043e\u0434\u0430\u0436 \u0437\u0430 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435
      \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043d\u0435\u0434\u0435\u043b\u044c
      \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e
      \u0433\u043e\u0434\u043e\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0434\u0430\u043d\u043d\u044b\u0445
      \u043e\u0431 \u043e\u0431\u044a\u0435\u043c\u0430\u0445 \u043f\u0440\u043e\u0434\u0430\u0436
      \u0437\u0430 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0443\u044e
      \u043d\u0435\u0434\u0435\u043b\u044e \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e
      \u0433\u043e\u0434\u0430. \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b
      \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0439
      \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u0433\u043e
      \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f
      \u0441\u043f\u0440\u043e\u0441\u0430 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c
      \u043c\u0438\u043a\u0440\u043e-\u0441\u0435\u0440\u0432\u0438\u0441\u043d\u043e\u0439
      \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b \u043d\u0430
      \u043e\u0441\u043d\u043e\u0432\u0435 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u044b
      Google Cloud Platform, \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c
      \u0442\u0430\u043a\u0438\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432
      \u043a\u0430\u043a Google Kubernetes Engine, Google BigQuery, Redis. \u0414\u043b\u044f
      \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439
      \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u0443\u044e
      \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f
      \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445
      \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430
      \u0432 OLAP-\u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435
      \u0442\u0440\u0435\u0431\u0443\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430
      \u0431\u0435\u0437 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f
      OLTP-\u0441\u0438\u0441\u0442\u0435\u043c\u044b. \u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u044b
      \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0433\u043e
      \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0430 \u043f\u043e
      \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e
      \u0441\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u0442\u043e\u0432\u0430\u0440,
      \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435
      \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.
      \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435
      \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f
      \u0441\u043f\u0440\u043e\u0441\u0430, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445
      \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c
      \u0432\u0435\u043a\u0442\u043e\u0440\u0430 \u043a\u0440\u0438\u0432\u043e\u0439
      \u043f\u0440\u043e\u0434\u0430\u0436 \u0438 \u043c\u0435\u0442\u043e\u0434\u0430
      \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0433\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e.
      \u041f\u043e\u043a\u0430\u0437\u0430\u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c
      \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f
      \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430
      \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f
      \u0441\u043f\u0440\u043e\u0441\u0430 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435
      \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0441\u0438\u0441\u0442\u0435\u043c\u044b
      \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e
      \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0430\u0441\u0430\u043c\u0438
      \u0432 \u0441\u0435\u0442\u044f\u0445 \u043f\u043e\u0441\u0442\u0430\u0432\u043e\u043a.
      \u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u0441\u043b\u043e\u0432\u0430:
      \u0442\u043e\u0432\u0430\u0440\u043d\u044b\u0439 \u0437\u0430\u043f\u0430\u0441,
      \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0430\u0441\u0430\u043c\u0438,
      \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435
      \u0441\u043f\u0440\u043e\u0441\u0430, \u0432\u0435\u043a\u0442\u043e\u0440 \u043a\u0440\u0438\u0432\u043e\u0439
      \u043f\u0440\u043e\u0434\u0430\u0436, \u0441\u0435\u0437\u043e\u043d\u043d\u044b\u0439
      \u0442\u043e\u0432\u0430\u0440, \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u043d\u0430\u044f
      \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430.", "venue":
      "", "year": 2018, "referenceCount": 27, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [], "publicationTypes": null, "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Inproceedings{\u0423\u0434\u043a2018AAN,\n author = {\u0423\u0434\u043a
      and \u0410. \u0410. \u041d\u0438\u043a\u0443\u043b\u044c\u0447\u0435\u043d\u043a\u043e},\n
      title = {A. A. NIKULCHENKO FORECASTING OF CUSTOMER DEMAND FOR SEASONAL GOODS
      USING RETAIL CURVE VECTOR},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "69446464", "name": "\u0423\u0434\u043a"}, {"authorId": "134938750", "name":
      "\u0410. \u0410. \u041d\u0438\u043a\u0443\u043b\u044c\u0447\u0435\u043d\u043a\u043e"}]},
      {"paperId": "012892623ff03d72de8b740ffc22f599e6b8bfee", "externalIds": {"PubMedCentral":
      "8955839", "DBLP": "journals/sensors/YingZD22", "DOI": "10.3390/s22062418",
      "CorpusId": 247641200, "PubMed": "35336588"}, "corpusId": 247641200, "publicationVenue":
      {"id": "3dbf084c-ef47-4b74-9919-047b40704538", "name": "Italian National Conference
      on Sensors", "type": "conference", "alternate_names": ["SENSORS", "IEEE Sens",
      "Ital National Conf Sens", "IEEE Sensors", "Sensors"], "issn": "1424-8220",
      "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/012892623ff03d72de8b740ffc22f599e6b8bfee",
      "title": "Microservice Security Framework for IoT by Mimic Defense Mechanism",
      "abstract": "Containers and microservices have become the most popular method
      for hosting IoT applications in cloud servers. However, one major security issue
      of this method is that if a container image contains software with security
      vulnerabilities, the associated microservices also become vulnerable at run-time.
      Existing works attempted to reduce this risk with vulnerability-scanning tools.
      They, however, demand an up-to-date database and may not work with unpublished
      vulnerabilities. In this paper, we propose a novel system to strengthen container
      security from unknown attack using the mimic defense framework. Specifically,
      we constructed a resource pool with variant images and observe the inconsistency
      in execution results, from which we can identify potential vulnerabilities.
      To avoid continuous attack, we created a graph-based scheduling strategy to
      maximize the randomness and heterogeneity of the images used to replace the
      current images. We implemented a prototype using Kubernetes. Experimental results
      show that our framework makes hackers have to send 54.9% more random requests
      to complete the attack and increases the defence success rate by around 8.16%
      over the baseline framework to avoid the continuous unknown attacks.", "venue":
      "Italian National Conference on Sensors", "year": 2022, "referenceCount": 39,
      "citationCount": 6, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      {"url": "https://www.mdpi.com/1424-8220/22/6/2418/pdf?version=1647866396", "status":
      "GOLD"}, "fieldsOfStudy": ["Computer Science", "Medicine"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Medicine",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2022-03-01", "journal": {"name": "Sensors
      (Basel, Switzerland)", "volume": "22"}, "citationStyles": {"bibtex": "@Article{Ying2022MicroserviceSF,\n
      author = {Fei Ying and Shengjie Zhao and Hao Deng},\n booktitle = {Italian National
      Conference on Sensors},\n journal = {Sensors (Basel, Switzerland)},\n title
      = {Microservice Security Framework for IoT by Mimic Defense Mechanism},\n volume
      = {22},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2074113986", "name":
      "Fei Ying"}, {"authorId": "2111159704", "name": "Shengjie Zhao"}, {"authorId":
      "2153490130", "name": "Hao Deng"}]}, {"paperId": "012a4b46d16ddf6a869e2281402365fa333e7cf5",
      "externalIds": {"DOI": "10.1109/BigDIA51454.2020.00027", "CorpusId": 233177575},
      "corpusId": 233177575, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/012a4b46d16ddf6a869e2281402365fa333e7cf5",
      "title": "A Comparative Study of Spark on the bare metal and Kubernetes", "abstract":
      "Kubernetes makes it easier to automate deployment and scale containerized applications
      to achieve near-native performance in cloud environment. However, there still
      lacks a systematic comparison study on how Spark applications perform between
      on the bare metal and on Kubernetes. In this paper, we focus on the performance
      evaluation of these applications running on the two environments by a series
      of experiments. Based on these experiments, we locate what stages cause their
      performance gap and reveal out root causes to the gap by analysing work-flows
      of these Spark applications and their resource costs. Through extensive measurements,
      we find out that Spark on the bare metal almost always contribute to better
      performance when compared with Spark on Kubernetes. More CPU usage of executors
      and better data locality on the bare metal are the root causes to the gap. By
      contrast, Spark on Kubernetes also has some its advantages over Spark on the
      bare metal in terms of disk W-IOPs. The research work in this paper can help
      practitioners and researchers to make more informed decisions on tuning their
      cloud environment and configuring the big data applications, so as to achieve
      better performance and higher resources utilization.", "venue": "2020 6th International
      Conference on Big Data and Information Analytics (BigDIA)", "year": 2020, "referenceCount":
      21, "citationCount": 4, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["Conference"],
      "publicationDate": "2020-12-01", "journal": {"name": "2020 6th International
      Conference on Big Data and Information Analytics (BigDIA)", "pages": "117-124"},
      "citationStyles": {"bibtex": "@Conference{Zhu2020ACS,\n author = {Changpeng
      Zhu and B. Han and Yinliang Zhao},\n booktitle = {2020 6th International Conference
      on Big Data and Information Analytics (BigDIA)},\n journal = {2020 6th International
      Conference on Big Data and Information Analytics (BigDIA)},\n pages = {117-124},\n
      title = {A Comparative Study of Spark on the bare metal and Kubernetes},\n year
      = {2020}\n}\n"}, "authors": [{"authorId": "2141110", "name": "Changpeng Zhu"},
      {"authorId": "71649694", "name": "B. Han"}, {"authorId": "35213482", "name":
      "Yinliang Zhao"}]}, {"paperId": "01374bf4cc3083f314d0d56630e2f8bc90e8d05e",
      "externalIds": {"MAG": "3135441084", "DOI": "10.1109/ICAC51239.2020.9357232",
      "CorpusId": 232072508}, "corpusId": 232072508, "publicationVenue": {"id": "28a83bf1-b6e5-416f-8c5a-fdc53e54f3a1",
      "name": "International Conference on Automation and Computing", "type": "conference",
      "alternate_names": ["IEEE International Conference on Autonomic Computing",
      "IEEE Int Conf Auton Comput", "Int Conf Autom Comput", "ICAC", "International
      Conference on Autonomic Computing", "Int Conf Auton Comput"], "url": "http://www.wikicfp.com/cfp/program?id=1269",
      "alternate_urls": ["https://acsos.github.io/"]}, "url": "https://www.semanticscholar.org/paper/01374bf4cc3083f314d0d56630e2f8bc90e8d05e",
      "title": "A Network Science-Based Approach for an Optimal Microservice Governance",
      "abstract": "In today''s world of software application development, Kubernetes
      has emerged as one of the most effective microservice deployment technologies
      presently available due to its exceptional ability to deploy and orchestrate
      containerized microservices. However, a common issue faced in such orchestration
      technologies is the employment of vast arrays of disjoint monitoring solutions
      that fail to portray a holistic perspective on the state of microservice deployments,
      which consequently inhibit the creation of more optimized deployment policies.
      In response to this issue, this publication proposes the use of a network science-based
      approach to facilitate the creation of a microservice governance model that
      incorporates the use of dependency analysis, load prediction, centrality analysis,
      and resilience evaluation to effectively construct a more holistic perspective
      on a given microservice deployment. Furthermore, through analysis of the factors
      mentioned above, the research conducted, then proceeds to create an optimized
      deployment strategy for the deployment with the aid of a developed optimization
      algorithm. Analysis of results revealed the developed governance model aided
      through the utilization of the developed optimization algorithm proposed in
      this publication, proved to be quite effective in the generation of optimized
      microservice deployment policies.", "venue": "International Conference on Automation
      and Computing", "year": 2020, "referenceCount": 23, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2020-12-10", "journal": {"name": "2020 2nd
      International Conference on Advancements in Computing (ICAC)", "pages": "357-362",
      "volume": "1"}, "citationStyles": {"bibtex": "@Conference{Siriwardhana2020ANS,\n
      author = {Gihan Saranga Siriwardhana and Nishitha De Silva and L. Jayasinghe
      and Lakshitha Vithanage and D. Kasthurirathna},\n booktitle = {International
      Conference on Automation and Computing},\n journal = {2020 2nd International
      Conference on Advancements in Computing (ICAC)},\n pages = {357-362},\n title
      = {A Network Science-Based Approach for an Optimal Microservice Governance},\n
      volume = {1},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2051694289",
      "name": "Gihan Saranga Siriwardhana"}, {"authorId": "2051703835", "name": "Nishitha
      De Silva"}, {"authorId": "2065284505", "name": "L. Jayasinghe"}, {"authorId":
      "2099088503", "name": "Lakshitha Vithanage"}, {"authorId": "1765983", "name":
      "D. Kasthurirathna"}]}, {"paperId": "01408a784380efb3758cd9c496b084926b9f4141",
      "externalIds": {"DBLP": "conf/icpp/FengSXRWLW23", "DOI": "10.1145/3605573.3605589",
      "CorpusId": 261706428}, "corpusId": 261706428, "publicationVenue": {"id": "29df4b17-9a16-4a4c-94a6-002f52e628b4",
      "name": "International Conference on Parallel Processing", "type": "conference",
      "alternate_names": ["ICPP", "Int Conf Parallel Process", "IEEE Int Conf Pulsed
      Power", "IEEE International Conference on Pulsed Power"], "url": "http://www.wikicfp.com/cfp/program?id=1447"},
      "url": "https://www.semanticscholar.org/paper/01408a784380efb3758cd9c496b084926b9f4141",
      "title": "Tango: Harmonious Management and Scheduling for Mixed Services Co-located
      among Distributed Edge-Clouds", "abstract": "Co-locating Latency-Critical (LC)
      and Best-Effort (BE) services in edge-clouds is expected to enhance resource
      utilization. However, this mixed deployment encounters unique challenges. Edge-clouds
      are heterogeneous, distributed, and resource-constrained, leading to intense
      competition for edge resources, making it challenging to balance fluctuating
      co-located workloads. Previous works in cloud datacenters are no longer applicable
      since they do not consider the unique nature of edges. Although very few works
      explicitly provide specific schemes for edge workload co-location, these solutions
      fail to address the major challenges simultaneously. In this paper, we propose
      Tango, a harmonious management and scheduling framework for Kubernetes-based
      edge-cloud systems with mixed services, to address these challenges. Tango incorporates
      novel components and mechanisms for elastic resource allocation and two traffic
      scheduling algorithms that effectively manage distributed edge resources. Tango
      demonstrates harmony not only in the compatible mixed services it supports,
      but also in the collaborative solutions that complement each other. Based on
      a backwards compatible design for Kubernetes, Tango enhances Kubernetes with
      automatic scaling and traffic scheduling capabilities. Experiments on large-scale
      hybrid edge-clouds, driven by real workload traces, show that Tango improves
      the system resource utilization by 36.9%, QoS-guarantee satisfaction rate by
      11.3%, and throughput by 47.6%, compared to state-of-the-art approaches.", "venue":
      "International Conference on Parallel Processing", "year": 2023, "referenceCount":
      35, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate":
      "2023-08-07", "journal": {"name": "Proceedings of the 52nd International Conference
      on Parallel Processing"}, "citationStyles": {"bibtex": "@Article{Feng2023TangoHM,\n
      author = {Yicheng Feng and Shihao Shen and Mengwei Xu and Yuanming Ren and Xiaofei
      Wang and Victor C. M. Leung and Wenyu Wang},\n booktitle = {International Conference
      on Parallel Processing},\n journal = {Proceedings of the 52nd International
      Conference on Parallel Processing},\n title = {Tango: Harmonious Management
      and Scheduling for Mixed Services Co-located among Distributed Edge-Clouds},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2115319860", "name": "Yicheng
      Feng"}, {"authorId": "2072819892", "name": "Shihao Shen"}, {"authorId": "2239403838",
      "name": "Mengwei Xu"}, {"authorId": "2159546779", "name": "Yuanming Ren"}, {"authorId":
      "2155441240", "name": "Xiaofei Wang"}, {"authorId": "143698682", "name": "Victor
      C. M. Leung"}, {"authorId": "2108498302", "name": "Wenyu Wang"}]}, {"paperId":
      "014203a2d0bcb302774b17bf794c8130f3f75942", "externalIds": {"DOI": "10.1007/978-1-4842-7839-0_8",
      "CorpusId": 244903873}, "corpusId": 244903873, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/014203a2d0bcb302774b17bf794c8130f3f75942",
      "title": "Deploying Pulsar on Kubernetes", "abstract": null, "venue": "Cloud-Native
      Microservices with Apache Pulsar", "year": 2021, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-12-05", "journal": {"name":
      "Cloud-Native Microservices with Apache Pulsar"}, "citationStyles": {"bibtex":
      "@Article{Sharma2021DeployingPO,\n author = {Rahul Sharma and Mohammad Atyab},\n
      booktitle = {Cloud-Native Microservices with Apache Pulsar},\n journal = {Cloud-Native
      Microservices with Apache Pulsar},\n title = {Deploying Pulsar on Kubernetes},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "39598262", "name": "Rahul Sharma"},
      {"authorId": "2142993913", "name": "Mohammad Atyab"}]}, {"paperId": "017b193f9247dcbcd96174001b6fd7644d482d1d",
      "externalIds": {"DBLP": "journals/ijnc/KlosRS22", "DOI": "10.15803/ijnc.12.1_164",
      "CorpusId": 246008132}, "corpusId": 246008132, "publicationVenue": {"id": "9fb60ced-f7be-4328-94d4-63d3ffb1c5bb",
      "name": "International Journal of Networking and Computing", "type": "journal",
      "alternate_names": ["Int j netw comput", "International journal of networking
      and computing", "Int J Netw Comput"], "issn": "2185-2839", "url": "http://www.ijnc.org/index.php/ijnc"},
      "url": "https://www.semanticscholar.org/paper/017b193f9247dcbcd96174001b6fd7644d482d1d",
      "title": "Neural Architecture Search based on Genetic Algorithm and Deployed
      in a Bare-Metal Kubernetes Cluster", "abstract": null, "venue": "International
      Journal of Networking and Computing", "year": 2022, "referenceCount": 0, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.jstage.jst.go.jp/article/ijnc/12/1/12_164/_pdf", "status": "GOLD"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "Int. J. Netw.
      Comput.", "pages": "164-187", "volume": "12"}, "citationStyles": {"bibtex":
      "@Article{Klos2022NeuralAS,\n author = {Andreas Klos and Marius Rosenbaum and
      W. Schiffmann},\n booktitle = {International Journal of Networking and Computing},\n
      journal = {Int. J. Netw. Comput.},\n pages = {164-187},\n title = {Neural Architecture
      Search based on Genetic Algorithm and Deployed in a Bare-Metal Kubernetes Cluster},\n
      volume = {12},\n year = {2022}\n}\n"}, "authors": [{"authorId": "47279141",
      "name": "Andreas Klos"}, {"authorId": "1738695600", "name": "Marius Rosenbaum"},
      {"authorId": "1774458", "name": "W. Schiffmann"}]}, {"paperId": "019a2f874e7538ac63893379605567fde15ea051",
      "externalIds": {"DOI": "10.1007/978-1-4842-8900-6", "CorpusId": 253422663},
      "corpusId": 253422663, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/019a2f874e7538ac63893379605567fde15ea051",
      "title": "Pro Cloud Native Java EE Apps: DevOps with MicroProfile, Jakarta EE
      10 APIs, and Kubernetes", "abstract": null, "venue": "", "year": 2022, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Book"], "publicationDate": null, "journal":
      {"name": "Pro Cloud Native Java EE Apps"}, "citationStyles": {"bibtex": "@Book{Saeed2022ProCN,\n
      author = {Luqman Saeed and Ghazy Abdallah},\n journal = {Pro Cloud Native Java
      EE Apps},\n title = {Pro Cloud Native Java EE Apps: DevOps with MicroProfile,
      Jakarta EE 10 APIs, and Kubernetes},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "150192844", "name": "Luqman Saeed"}, {"authorId": "2190297778", "name": "Ghazy
      Abdallah"}]}, {"paperId": "01b0fa40b9f64af8ba171dec445cfed90b7476f0", "externalIds":
      {"MAG": "3093568822", "DBLP": "journals/corr/abs-2010-10350", "ArXiv": "2010.10350",
      "CorpusId": 224803435}, "corpusId": 224803435, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/01b0fa40b9f64af8ba171dec445cfed90b7476f0",
      "title": "Resource Management Schemes for Cloud-Native Platforms with Computing
      Containers of Docker and Kubernetes", "abstract": "Businesses have made increasing
      adoption and incorporation of cloud technology into internal processes in the
      last decade. The cloud-based deployment provides on-demand availability without
      active management. More recently, the concept of cloud-native application has
      been proposed and represents an invaluable step toward helping organizations
      develop software faster and update it more frequently to achieve dramatic business
      outcomes. Cloud-native is an approach to build and run applications that exploit
      the cloud computing delivery model''s advantages. It is more about how applications
      are created and deployed than where. The container-based virtualization technology,
      such as Docker and Kubernetes, serves as the foundation for cloud-native applications.
      This paper investigates the performance of two popular computational-intensive
      applications, big data, and deep learning, in a cloud-native environment. We
      analyze the system overhead and resource usage for these applications. Through
      extensive experiments, we show that the completion time reduces by up to 79.4%
      by changing the default setting and increases by up to 96.7% due to different
      resource management schemes on two platforms. Additionally, the resource release
      is delayed by up to 116.7% across different systems. Our work can guide developers,
      administrators, and researchers to better design and deploy their applications
      by selecting and configuring a hosting platform.", "venue": "arXiv.org", "year":
      2020, "referenceCount": 37, "citationCount": 17, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-10-20", "journal": {"name": "ArXiv", "volume": "abs/2010.10350"}, "citationStyles":
      {"bibtex": "@Article{Mao2020ResourceMS,\n author = {Ying Mao and Yuqi Fu and
      Suwen Gu and Sudip Vhaduri and Long Cheng and Qingzhi Liu},\n booktitle = {arXiv.org},\n
      journal = {ArXiv},\n title = {Resource Management Schemes for Cloud-Native Platforms
      with Computing Containers of Docker and Kubernetes},\n volume = {abs/2010.10350},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "144655483", "name": "Ying Mao"},
      {"authorId": "102752124", "name": "Yuqi Fu"}, {"authorId": "1443775299", "name":
      "Suwen Gu"}, {"authorId": "2989357", "name": "Sudip Vhaduri"}, {"authorId":
      "143778806", "name": "Long Cheng"}, {"authorId": "150270519", "name": "Qingzhi
      Liu"}]}, {"paperId": "01bbce0fd422934a804c77529480dda6c8d3a7c2", "externalIds":
      {"DOI": "10.1109/CCDC58219.2023.10326574", "CorpusId": 265524686}, "corpusId":
      265524686, "publicationVenue": {"id": "2cbf9479-e1fa-4c75-81f6-7103e18156ca",
      "name": "Chinese Control and Decision Conference", "type": "conference", "alternate_names":
      ["CCDC", "Chin Control Decis Conf"]}, "url": "https://www.semanticscholar.org/paper/01bbce0fd422934a804c77529480dda6c8d3a7c2",
      "title": "An Moblie Edge Compting Based Train Control System With LQG Control",
      "abstract": "Nowadays, the construction and development of urban rail transit
      network is facing many challenges. With the increasing demand for transportation
      capacity, the shortage of on-board computing capacity has become one of the
      important problems. In recent years, edge computing (EC) has become a new solution.
      Through edge computing, complex on-board control computing tasks can be unloaded
      to the trackside computing server, and the computational power of on-board equipment
      can be liberated. The fifth generation (5G) mobile communication has the advantages
      of high capacity and high reliability, and combining 5G with edge intelligence
      (EI) can show lower delay and higher stability in train control systems. In
      this paper, we propose an autonomous train control system with edge intelligence
      and 5G.The system is based on Google Kubernetes high reliability edge computing
      platform to implement automatic train control algorithm, which is divided into
      infrastructure layer, edge computing layer and cloud service layer in function.
      The linear quadratic Gaussian control (LQG) algorithm is used to model the train
      autonomous control process, and the cloud safety computer is used to ensure
      the high reliability of the whole system without being affected by local faults.
      Extensive experimental results show that the train control system proposed by
      us based on 5G and EI has high operational reliability and data security, as
      well as low delay performance in the communication packet interval. Using this
      train control system can greatly improve the efficiency and safety of train
      operation, so as to improve the quality of train operation.", "venue": "Chinese
      Control and Decision Conference", "year": 2023, "referenceCount": 11, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Engineering", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2023-05-20", "journal":
      {"name": "2023 35th Chinese Control and Decision Conference (CCDC)", "pages":
      "805-810"}, "citationStyles": {"bibtex": "@Conference{Liang2023AnME,\n author
      = {Yanan Liang and Changrui Liu and Xuetao Shi and Cheng Chen and Qiang Gao},\n
      booktitle = {Chinese Control and Decision Conference},\n journal = {2023 35th
      Chinese Control and Decision Conference (CCDC)},\n pages = {805-810},\n title
      = {An Moblie Edge Compting Based Train Control System With LQG Control},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2269024654", "name": "Yanan Liang"},
      {"authorId": "2268880012", "name": "Changrui Liu"}, {"authorId": "2269029118",
      "name": "Xuetao Shi"}, {"authorId": "2269075256", "name": "Cheng Chen"}, {"authorId":
      "2268996505", "name": "Qiang Gao"}]}, {"paperId": "01e34f42c6e13f5ab32df3e91e3f44f770f3d7e9",
      "externalIds": {"DBLP": "conf/iscc/NettoL0RO18", "MAG": "2900510957", "DOI":
      "10.1109/ISCC.2018.8538452", "CorpusId": 53719233}, "corpusId": 53719233, "publicationVenue":
      {"id": "159aed30-148b-4b50-99a4-372b0af958d9", "name": "International Symposium
      on Computers and Communications", "type": "conference", "alternate_names": ["ISCC",
      "Int Symp Comput Commun"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1000156/all-proceedings"},
      "url": "https://www.semanticscholar.org/paper/01e34f42c6e13f5ab32df3e91e3f44f770f3d7e9",
      "title": "Koordinator: A Service Approach for Replicating Docker Containers
      in Kubernetes", "abstract": "Container-based virtualization technologies such
      as Docker and Kubernetes are being adopted by cloud service providers due to
      their simpler deployment, better performance, and lower memory footprint in
      relation to hypervisor-based virtualization. Kubernetes supports basic replication
      for availability, but does not provide strong consistency and may corrupt application
      state in case there is a fault. This paper presents a state machine replication
      scheme for Kubernetes that provides high availability and integrity with strong
      consistency. Replica coordination is provided as a service, with lightweight
      coupling to applications. Experimental results show the solution feasibility.",
      "venue": "International Symposium on Computers and Communications", "year":
      2018, "referenceCount": 29, "citationCount": 19, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2018-06-01", "journal": {"name": "2018
      IEEE Symposium on Computers and Communications (ISCC)", "pages": "00058-00063"},
      "citationStyles": {"bibtex": "@Article{Netto2018KoordinatorAS,\n author = {Hylson
      Vescovi Netto and A. Luiz and M. Correia and Luciana Rech and Caio Pereira Oliveira},\n
      booktitle = {International Symposium on Computers and Communications},\n journal
      = {2018 IEEE Symposium on Computers and Communications (ISCC)},\n pages = {00058-00063},\n
      title = {Koordinator: A Service Approach for Replicating Docker Containers in
      Kubernetes},\n year = {2018}\n}\n"}, "authors": [{"authorId": "3332738", "name":
      "Hylson Vescovi Netto"}, {"authorId": "2153081", "name": "A. Luiz"}, {"authorId":
      "145250139", "name": "M. Correia"}, {"authorId": "144850855", "name": "Luciana
      Rech"}, {"authorId": "21964647", "name": "Caio Pereira Oliveira"}]}, {"paperId":
      "01e4afc3f8a6bd85dfc59ae4b4a97eb1d70606ee", "externalIds": {"DOI": "10.1109/ISPDS58840.2023.10235497",
      "CorpusId": 261561539}, "corpusId": 261561539, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/01e4afc3f8a6bd85dfc59ae4b4a97eb1d70606ee",
      "title": "A Review of Kubernetes Scheduling and Load Balancing Methods", "abstract":
      "Kubernetes, an open-source project initiated by Google for managing and organizing
      containers in cloud platforms, has become the preferred choice for deploying
      large-scale containerized microservice architectures. However, there exist challenges
      related to allocating hardware resources and optimizing load balancing strategies
      for external access, which require high reliability and low power consumption.
      This paper introduces the native scheduling and load balancing strategies in
      Kubernetes and highlights the current issues in these strategies. Subsequently,
      it presents four existing optimization and improvement strategies for addressing
      these issues, along with related research. Furthermore, the paper proposes research
      directions and development suggestions for large-scale cluster applications
      and diversified business expansions.", "venue": "2023 4th International Conference
      on Information Science, Parallel and Distributed Systems (ISPDS)", "year": 2023,
      "referenceCount": 46, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference", "Review"], "publicationDate":
      "2023-07-14", "journal": {"name": "2023 4th International Conference on Information
      Science, Parallel and Distributed Systems (ISPDS)", "pages": "284-290"}, "citationStyles":
      {"bibtex": "@Conference{Sun2023ARO,\n author = {Yi Sun and Hang Xiang and Qiukai
      Ye and Jun Yang and Ming Xian and Huimei Wang},\n booktitle = {2023 4th International
      Conference on Information Science, Parallel and Distributed Systems (ISPDS)},\n
      journal = {2023 4th International Conference on Information Science, Parallel
      and Distributed Systems (ISPDS)},\n pages = {284-290},\n title = {A Review of
      Kubernetes Scheduling and Load Balancing Methods},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2238211024", "name": "Yi Sun"}, {"authorId": "2238043179", "name":
      "Hang Xiang"}, {"authorId": "2238044601", "name": "Qiukai Ye"}, {"authorId":
      "2238194436", "name": "Jun Yang"}, {"authorId": "2062938685", "name": "Ming
      Xian"}, {"authorId": "2521268", "name": "Huimei Wang"}]}, {"paperId": "01ea4bbf3b053e26ba9cba7aa78c747c73d07669",
      "externalIds": {"DOI": "10.12681/eadd/55258", "CorpusId": 266143194}, "corpusId":
      266143194, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/01ea4bbf3b053e26ba9cba7aa78c747c73d07669",
      "title": "Optimal resource orchestration of distributed 5G applications over
      the cloud continuum", "abstract": "\u0397 \u03c4\u03b1\u03c7\u03b5\u03af\u03b1
      \u03c0\u03c1\u03cc\u03bf\u03b4\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03c4\u03b5\u03c7\u03bd\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2
      \u03b1\u03c3\u03cd\u03c1\u03bc\u03b1\u03c4\u03c9\u03bd \u03b4\u03b9\u03ba\u03c4\u03cd\u03c9\u03bd
      \u03c0\u03ad\u03bc\u03c0\u03c4\u03b7\u03c2 \u03b3\u03b5\u03bd\u03b9\u03ac\u03c2
      (5G) \u03ad\u03c7\u03b5\u03b9 \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c8\u03b5\u03b9
      \u03c4\u03b7\u03bd \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7 \u03b5\u03bd\u03cc\u03c2
      \u03b5\u03c5\u03c1\u03ad\u03bf\u03c2 \u03c6\u03ac\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2
      \u03ba\u03b1\u03b9\u03bd\u03bf\u03c4\u03cc\u03bc\u03c9\u03bd \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ce\u03bd,
      \u03bf\u03b9 \u03bf\u03c0\u03bf\u03af\u03b5\u03c2 \u03c6\u03ad\u03c1\u03bf\u03c5\u03bd
      \u03be\u03b5\u03c7\u03c9\u03c1\u03b9\u03c3\u03c4\u03ad\u03c2 \u03b1\u03c0\u03b1\u03b9\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2
      \u03c0\u03bf\u03c5 \u03b1\u03c6\u03bf\u03c1\u03bf\u03cd\u03bd \u03c4\u03b7\u03bd
      \u03c0\u03bf\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03b7\u03c2 \u03c5\u03c0\u03b7\u03c1\u03b5\u03c3\u03af\u03b1\u03c2
      (Quality of Service - QoS), \u03cc\u03c0\u03c9\u03c2 \u03b5\u03be\u03b1\u03b9\u03c1\u03b5\u03c4\u03b9\u03ba\u03ac
      \u03c7\u03b1\u03bc\u03b7\u03bb\u03ae \u03ba\u03b1\u03b8\u03c5\u03c3\u03c4\u03ad\u03c1\u03b7\u03c3\u03b7,
      \u03c5\u03c8\u03b7\u03bb\u03ae \u03b1\u03be\u03b9\u03bf\u03c0\u03b9\u03c3\u03c4\u03af\u03b1
      \u03ba\u03b1\u03b9 \u03b5\u03bb\u03b1\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1,
      \u03b5\u03b9\u03b4\u03b9\u03ba\u03ac \u03c5\u03c0\u03cc \u03c4\u03bf \u03c0\u03c1\u03af\u03c3\u03bc\u03b1
      \u03c4\u03bf\u03c5 \u0394\u03b9\u03b1\u03b4\u03b9\u03ba\u03c4\u03cd\u03bf\u03c5
      \u03c4\u03c9\u03bd \u0391\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd
      (Internet of Things - IoT). \u0393\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b1\u03c0\u03bf\u03b4\u03bf\u03c4\u03b9\u03ba\u03cc\u03c4\u03b5\u03c1\u03b7
      \u03c5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b7 \u03b1\u03c5\u03c4\u03ce\u03bd
      \u03c4\u03c9\u03bd \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ce\u03bd, \u03b7
      \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03c3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae
      \u03b4\u03b9\u03b1\u03c7\u03b5\u03af\u03c1\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9
      \u03b5\u03bd\u03bf\u03c1\u03c7\u03ae\u03c3\u03c4\u03c1\u03c9\u03c3\u03b7 \u03c4\u03c9\u03bd
      \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd
      \u03ba\u03b1\u03b9 \u03b4\u03b9\u03ba\u03c4\u03c5\u03b1\u03ba\u03ce\u03bd \u03c0\u03cc\u03c1\u03c9\u03bd,
      \u03b5\u03af\u03bd\u03b1\u03b9 \u03b9\u03b4\u03b9\u03b1\u03af\u03c4\u03b5\u03c1\u03b1
      \u03c3\u03b7\u03bc\u03b1\u03bd\u03c4\u03b9\u03ba\u03ae. \u03a4\u03bf Cloud Continuum
      (CC), \u03c4\u03bf \u03bf\u03c0\u03bf\u03af\u03bf \u03c0\u03b5\u03c1\u03b9\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9
      \u03b5\u03c4\u03b5\u03c1\u03bf\u03b3\u03b5\u03bd\u03b5\u03af\u03c2 \u03b4\u03b9\u03ba\u03c4\u03c5\u03b1\u03ba\u03ad\u03c2
      \u03c5\u03c0\u03bf\u03b4\u03bf\u03bc\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03ba\u03c5\u03bc\u03b1\u03af\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9
      \u03b1\u03c0\u03cc \u03ba\u03b5\u03bd\u03c4\u03c1\u03b9\u03ba\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03b5\u03c2
      \u03c5\u03c0\u03bf\u03b4\u03bf\u03bc\u03ad\u03c2 \u03c3\u03cd\u03bd\u03bd\u03b5\u03c6\u03bf\u03c5
      \u03ad\u03c9\u03c2 \u03ba\u03b1\u03c4\u03b1\u03bd\u03b5\u03bc\u03b7\u03bc\u03ad\u03bd\u03b5\u03c2
      \u03c3\u03c4\u03b7\u03bd \u03ac\u03ba\u03c1\u03b7 \u03c4\u03bf\u03c5 \u03b4\u03b9\u03ba\u03c4\u03cd\u03bf\u03c5,
      \u03c0\u03c1\u03bf\u03c3\u03c6\u03ad\u03c1\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03ba\u03b1\u03c4\u03b1\u03bd\u03b5\u03bc\u03b7\u03bc\u03ad\u03bd\u03bf
      \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd
      \u03ba\u03b1\u03b9 \u03b4\u03b9\u03ba\u03c4\u03c5\u03b1\u03ba\u03ce\u03bd \u03c0\u03cc\u03c1\u03c9\u03bd
      \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03ba\u03ac\u03bb\u03c5\u03c8\u03b7 \u03c4\u03c9\u03bd
      \u03b5\u03b9\u03b4\u03b9\u03ba\u03ce\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd
      \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7\u03c2 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ce\u03bd
      5G-IoT. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03b7 \u03b5\u03bd\u03bf\u03c1\u03c7\u03ae\u03c3\u03c4\u03c1\u03c9\u03c3\u03b7
      \u03c0\u03cc\u03c1\u03c9\u03bd \u03c3\u03b5 \u03b1\u03c5\u03c4\u03cc \u03c4\u03bf
      \u03c0\u03bf\u03bb\u03cd\u03c0\u03bb\u03bf\u03ba\u03bf \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd
      \u03b8\u03ad\u03c4\u03b5\u03b9 \u03c3\u03b7\u03bc\u03b1\u03bd\u03c4\u03b9\u03ba\u03ad\u03c2
      \u03c0\u03c1\u03bf\u03ba\u03bb\u03ae\u03c3\u03b5\u03b9\u03c2. \u0391\u03c5\u03c4\u03ae
      \u03b7 \u03b4\u03b9\u03b1\u03c4\u03c1\u03b9\u03b2\u03ae \u03c3\u03c4\u03bf\u03c7\u03b5\u03cd\u03b5\u03b9
      \u03bd\u03b1 \u03b1\u03bd\u03c4\u03b9\u03bc\u03b5\u03c4\u03c9\u03c0\u03af\u03c3\u03b5\u03b9
      \u03b1\u03c5\u03c4\u03ad\u03c2 \u03c4\u03b9\u03c2 \u03c0\u03c1\u03bf\u03ba\u03bb\u03ae\u03c3\u03b5\u03b9\u03c2
      \u03c0\u03c1\u03bf\u03c4\u03b5\u03af\u03bd\u03bf\u03bd\u03c4\u03b1\u03c2 \u03bd\u03ad\u03b5\u03c2
      \u03c0\u03c1\u03bf\u03c3\u03b5\u03b3\u03b3\u03af\u03c3\u03b5\u03b9\u03c2 \u03b3\u03b9\u03b1
      \u03c4\u03b7 \u03b4\u03b9\u03b1\u03c7\u03b5\u03af\u03c1\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9
      \u03c4\u03b7\u03bd \u03b5\u03bd\u03bf\u03c1\u03c7\u03ae\u03c3\u03c4\u03c1\u03c9\u03c3\u03b7
      \u03c4\u03c9\u03bd \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd
      \u03ba\u03b1\u03b9 \u03b4\u03b9\u03ba\u03c4\u03c5\u03b1\u03ba\u03ce\u03bd \u03c0\u03cc\u03c1\u03c9\u03bd
      \u03c3\u03c4\u03b1 \u03b4\u03b9\u03ac\u03c6\u03bf\u03c1\u03b1 \u03b5\u03c0\u03af\u03c0\u03b5\u03b4\u03b1
      \u03c4\u03bf\u03c5 CC, \u03b5\u03c5\u03b8\u03c5\u03b3\u03c1\u03b1\u03bc\u03bc\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2
      \u03bc\u03b5 \u03ba\u03b1\u03b8\u03b9\u03b5\u03c1\u03c9\u03bc\u03ad\u03bd\u03b1
      \u03c0\u03c1\u03cc\u03c4\u03c5\u03c0\u03b1, \u03cc\u03c0\u03c9\u03c2 \u03c4\u03b7\u03c2
      \u0395\u03b9\u03ba\u03bf\u03bd\u03b9\u03ba\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2
      \u039b\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b9\u03ce\u03bd \u0394\u03b9\u03ba\u03c4\u03cd\u03bf\u03c5
      (Network Function Virtualization - NFV). \u03a3\u03c5\u03b3\u03ba\u03b5\u03ba\u03c1\u03b9\u03bc\u03ad\u03bd\u03b1,
      \u03c3\u03c4\u03b7 \u03b4\u03b9\u03b1\u03c4\u03c1\u03b9\u03b2\u03ae \u03b1\u03bd\u03c4\u03b9\u03bc\u03b5\u03c4\u03c9\u03c0\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9
      \u03bf\u03b9 \u03b5\u03be\u03ae\u03c2 \u03c0\u03c1\u03bf\u03ba\u03bb\u03ae\u03c3\u03b5\u03b9\u03c2:
      (i) \u03b7 \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae \u03c4\u03b7\u03c2 \u03ba\u03b1\u03c4\u03ac\u03bb\u03bb\u03b7\u03bb\u03b7\u03c2
      \u03c5\u03c0\u03bf\u03b4\u03bf\u03bc\u03ae\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd
      \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7 \u03c5\u03c0\u03b7\u03c1\u03b5\u03c3\u03b9\u03ce\u03bd
      \u03b4\u03b9\u03ba\u03c4\u03cd\u03bf\u03c5 \u03c3\u03c4\u03bf CC, \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03bf\u03bd\u03c4\u03b1\u03c2
      \u03c5\u03c0\u03cc\u03c8\u03b7 \u03c4\u03b7\u03bd \u03b5\u03c4\u03b5\u03c1\u03bf\u03b3\u03ad\u03bd\u03b5\u03b9\u03b1
      \u03c4\u03c9\u03bd \u03c5\u03c0\u03bf\u03b4\u03bf\u03bc\u03ce\u03bd \u03ba\u03b1\u03b9
      \u03c4\u03b7\u03bd \u03c0\u03bb\u03b7\u03b8\u03ce\u03c1\u03b1 \u03c4\u03c9\u03bd
      \u03b4\u03b9\u03b1\u03c6\u03cc\u03c1\u03c9\u03bd \u03b5\u03c0\u03b9\u03bc\u03ad\u03c1\u03bf\u03c5\u03c2
      \u03b1\u03c0\u03b1\u03b9\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae\u03c2,
      (ii) \u03b7 \u03b5\u03b3\u03ba\u03b1\u03b8\u03af\u03b4\u03c1\u03c5\u03c3\u03b7
      \u03b1\u03bb\u03bb\u03b7\u03bb\u03b5\u03c0\u03af\u03b4\u03c1\u03b1\u03c3\u03b7\u03c2
      \u03bc\u03b5\u03c4\u03b1\u03be\u03cd \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd
      \u03c5\u03c0\u03b7\u03c1\u03b5\u03c3\u03b9\u03ce\u03bd \u03c0\u03bf\u03c5 \u03b1\u03bd\u03b1\u03c0\u03c4\u03cd\u03c3\u03c3\u03bf\u03bd\u03c4\u03b1\u03b9
      \u03c9\u03c2 \u03b4\u03b9\u03ba\u03c4\u03c5\u03b1\u03ba\u03ac \u03c4\u03b5\u03bc\u03ac\u03c7\u03b9\u03b1
      \u03bc\u03ad\u03c3\u03c9 \u03ba\u03bf\u03b9\u03bd\u03ae\u03c2 \u03c7\u03c1\u03ae\u03c3\u03b7\u03c2
      \u03b5\u03b9\u03ba\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd
      \u03b4\u03b9\u03ba\u03c4\u03cd\u03bf\u03c5 (Virtual Network Function \u2013
      VNF), (iii) \u03b7 \u03ba\u03b1\u03c4\u03b1\u03bd\u03b5\u03bc\u03b7\u03bc\u03ad\u03bd\u03b7
      \u03b5\u03bd\u03c3\u03c9\u03bc\u03ac\u03c4\u03c9\u03c3\u03b7 \u03b5\u03b9\u03ba\u03bf\u03bd\u03b9\u03ba\u03bf\u03cd
      \u03b4\u03b9\u03ba\u03c4\u03cd\u03bf\u03c5 (Distributed Virtual Network Embedding
      - DVNE), \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b7
      \u03c3\u03cd\u03b3\u03c7\u03c1\u03bf\u03bd\u03c9\u03bd \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ce\u03bd
      IoT \u03c0\u03bf\u03c5 \u03b1\u03bd\u03b1\u03c0\u03c4\u03cd\u03c3\u03c3\u03bf\u03bd\u03c4\u03b1\u03b9
      \u03c9\u03c2 \u03b4\u03b9\u03b1\u03c3\u03c5\u03bd\u03b4\u03b5\u03b4\u03b5\u03bc\u03ad\u03bd\u03b1
      VNF, \u03c3\u03c4\u03b7 \u03bc\u03bf\u03c1\u03c6\u03ae \u03bc\u03b9\u03b1\u03c2
      \u03c5\u03b2\u03c1\u03b9\u03b4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bb\u03c5\u03c3\u03af\u03b4\u03b1\u03c2
      \u03c5\u03c0\u03b7\u03c1\u03b5\u03c3\u03b9\u03ce\u03bd, \u03c5\u03c0\u03cc \u03b1\u03c5\u03c3\u03c4\u03b7\u03c1\u03bf\u03cd\u03c2
      \u03c0\u03b5\u03c1\u03b9\u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd\u03c2 \u03b4\u03b9\u03b1\u03b8\u03b5\u03c3\u03b9\u03bc\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2
      \u03c0\u03cc\u03c1\u03c9\u03bd, (iv) \u03b7 \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7
      \u03bb\u03cd\u03c3\u03b5\u03c9\u03bd \u03b3\u03b9\u03b1 \u03b1\u03c5\u03c4\u03cc\u03bc\u03b1\u03c4\u03b7
      \u03ba\u03bb\u03b9\u03bc\u03ac\u03ba\u03c9\u03c3\u03b7 \u03c0\u03cc\u03c1\u03c9\u03bd
      \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b7 \u03b2\u03b5\u03bb\u03c4\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7
      \u03c4\u03b7\u03c2 \u03b4\u03b9\u03b1\u03c7\u03b5\u03af\u03c1\u03b9\u03c3\u03b7\u03c2
      \u03b1\u03c5\u03c4\u03ce\u03bd \u03c3\u03b5 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc
      \u03c7\u03c1\u03cc\u03bd\u03bf, \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03bf\u03bd\u03c4\u03b1\u03c2
      \u03c5\u03c0\u03cc\u03c8\u03b7 \u03c4\u03bf \u03b1\u03c0\u03b1\u03b9\u03c4\u03bf\u03cd\u03bc\u03b5\u03bd\u03bf
      \u03c6\u03bf\u03c1\u03c4\u03af\u03bf \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b1 \u03b5\u03b9\u03ba\u03bf\u03bd\u03b9\u03ba\u03ac
      \u03bc\u03b7\u03c7\u03b1\u03bd\u03ae\u03bc\u03b1\u03c4\u03b1 \u03ba\u03ac\u03b8\u03b5
      \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae\u03c2, \u03ba\u03b1\u03b9 (v)
      \u03bf \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03cc\u03c2 \u03ba\u03b1\u03b9
      \u03b7 \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03c3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd
      \u03ba\u03b1\u03b9 \u03c7\u03b1\u03bc\u03b7\u03bb\u03ae\u03c2 \u03c0\u03bf\u03bb\u03c5\u03c0\u03bb\u03bf\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2
      \u03b1\u03bb\u03b3\u03bf\u03c1\u03af\u03b8\u03bc\u03c9\u03bd \u03b3\u03b9\u03b1
      \u03bd\u03b1 \u03c0\u03b1\u03c1\u03ad\u03c7\u03bf\u03c5\u03bd \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2
      \u03c3\u03c4\u03b1 \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03b1
      \u03c0\u03c1\u03bf\u03b2\u03bb\u03ae\u03bc\u03b1\u03c4\u03b1, \u03c3\u03b5 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc
      \u03c7\u03c1\u03cc\u03bd\u03bf, \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03b1\u03bd\u03c4\u03b1\u03c0\u03bf\u03ba\u03c1\u03af\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9
      \u03c3\u03c4\u03b9\u03c2 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ad\u03c2
      \u03c3\u03c5\u03bd\u03b8\u03ae\u03ba\u03b5\u03c2 \u03c4\u03bf\u03c5 CC. \u03a3\u03b5
      \u03b1\u03c5\u03c4\u03cc \u03c4\u03bf \u03c0\u03bb\u03b1\u03af\u03c3\u03b9\u03bf,
      \u03b1\u03c1\u03c7\u03b9\u03ba\u03ac, \u03c0\u03c1\u03bf\u03c4\u03b5\u03af\u03bd\u03b5\u03c4\u03b1\u03b9
      \u03ad\u03bd\u03b1 \u03c0\u03bb\u03b1\u03af\u03c3\u03b9\u03bf \u0395\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae\u03c2
      \u03a5\u03c0\u03bf\u03b4\u03bf\u03bc\u03ae\u03c2 \u03c3\u03c4\u03b1 \u03ac\u03ba\u03c1\u03b1
      \u03c4\u03bf\u03c5 \u0394\u03b9\u03ba\u03c4\u03cd\u03bf\u03c5 (Edge Cloud -
      EC) \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7
      \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ce\u03bd 5G, \u03b5\u03c3\u03c4\u03b9\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03c2
      \u03c3\u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03af\u03c0\u03c4\u03c9\u03c3\u03b7
      \u03b4\u03b9\u03ba\u03c4\u03c5\u03b1\u03ba\u03ce\u03bd \u03c4\u03b5\u03bc\u03b1\u03c7\u03af\u03c9\u03bd.
      \u03a0\u03c1\u03bf\u03c2 \u03b1\u03c5\u03c4\u03ae \u03c4\u03b7\u03bd \u03ba\u03b1\u03c4\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7,
      \u03b1\u03bd\u03b1\u03c0\u03c4\u03cd\u03c3\u03c3\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1
      \u03a0\u03bb\u03b1\u03af\u03c3\u03b9\u03bf \u0391\u03bd\u03b1\u03b6\u03ae\u03c4\u03b7\u03c3\u03b7\u03c2
      \u039a\u03b1\u03c4\u03b1\u03bd\u03b5\u03bc\u03b7\u03bc\u03ad\u03bd\u03c9\u03bd
      \u03a5\u03c0\u03b7\u03c1\u03b5\u03c3\u03b9\u03ce\u03bd \u03b3\u03b9\u03b1 VNF,
      \u03c4\u03b1 \u03bf\u03c0\u03bf\u03af\u03b1 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03c5\u03bd
      \u03b4\u03b9\u03b1\u03c4\u03b5\u03bc\u03b1\u03c7\u03b9\u03b1\u03ba\u03ae \u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03af\u03b1
      \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ce\u03bd\u03c4\u03b1\u03c2
      \u03ad\u03bd\u03b1 \u03c0\u03c1\u03c9\u03c4\u03cc\u03ba\u03bf\u03bb\u03bb\u03bf
      \u03c0\u03bf\u03c5 \u03b2\u03b1\u03c3\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd
      \u03c0\u03c1\u03bf\u03c3\u03c9\u03c1\u03b9\u03bd\u03ae \u03ba\u03c1\u03c5\u03c6\u03ae
      \u03bc\u03bd\u03ae\u03bc\u03b7 \u03c4\u03c9\u03bd \u03b5\u03c0\u03b9\u03bc\u03ad\u03c1\u03bf\u03c5\u03c2
      EC, \u03c3\u03c4\u03bf\u03c7\u03b5\u03cd\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c3\u03c4\u03b7\u03bd
      \u03c7\u03b1\u03bc\u03b7\u03bb\u03ae \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b4\u03b9\u03ba\u03c4\u03c5\u03b1\u03ba\u03ce\u03bd
      \u03c0\u03cc\u03c1\u03c9\u03bd. \u03a4\u03bf \u03c0\u03bb\u03b1\u03af\u03c3\u03b9\u03bf
      \u03b1\u03c5\u03c4\u03cc, \u03b5\u03c0\u03af\u03c3\u03b7\u03c2, \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af
      \u03ad\u03bd\u03b1\u03bd \u03c0\u03bf\u03bb\u03c5\u03ba\u03c1\u03b9\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03cc
      \u03b1\u03bb\u03b3\u03cc\u03c1\u03b9\u03b8\u03bc\u03bf \u03bb\u03ae\u03c8\u03b7\u03c2
      \u03b1\u03c0\u03bf\u03c6\u03ac\u03c3\u03b5\u03c9\u03bd, \u03b3\u03b9\u03b1 \u03bd\u03b1
      \u03c0\u03c1\u03bf\u03c3\u03b4\u03b9\u03bf\u03c1\u03af\u03c3\u03b5\u03b9 \u03c4\u03b7\u03bd
      \u03ba\u03b1\u03c4\u03b1\u03bb\u03bb\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7
      \u03c5\u03c0\u03bf\u03b4\u03bf\u03bc\u03ae EC \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd
      \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7 \u03b4\u03b9\u03ba\u03c4\u03c5\u03b1\u03ba\u03bf\u03cd
      \u03c4\u03b5\u03bc\u03b1\u03c7\u03af\u03bf\u03c5 \u03bc\u03b5 \u03c7\u03b1\u03bc\u03b7\u03bb\u03cc
      \u03c7\u03c1\u03cc\u03bd\u03bf \u03b1\u03c0\u03cc\u03c6\u03b1\u03c3\u03b7\u03c2,
      \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c5\u03c0\u03cc\u03c8\u03b7
      \u03c4\u03b7 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1,
      \u03c4\u03b7\u03bd \u03b1\u03c0\u03cc\u03b4\u03bf\u03c3\u03b7 \u03ba\u03b1\u03b9
      \u03b1\u03c0\u03b1\u03b9\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03cc\u03c3\u03c4\u03bf\u03c5\u03c2
      \u03c4\u03cc\u03c3\u03bf \u03c4\u03bf\u03c5 \u03c0\u03b1\u03c1\u03cc\u03c7\u03bf\u03c5
      \u03c4\u03b7\u03c2 \u03c5\u03c0\u03bf\u03b4\u03bf\u03bc\u03ae\u03c2 \u03cc\u03c3\u03bf
      \u03ba\u03b1\u03b9 \u03c4\u03bf\u03c5 \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03c4\u03b7\u03c2
      \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae\u03c2. \u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd,
      \u03b7 \u03b4\u03b9\u03b1\u03c4\u03c1\u03b9\u03b2\u03ae \u03c0\u03c1\u03bf\u03c4\u03b5\u03af\u03bd\u03b5\u03b9
      \u03bc\u03b9\u03b1 \u03c0\u03c1\u03bf\u03c3\u03ad\u03b3\u03b3\u03b9\u03c3\u03b7
      \u03b4\u03cd\u03bf \u03b5\u03c0\u03b9\u03c0\u03ad\u03b4\u03c9\u03bd \u03b3\u03b9\u03b1
      \u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03bf\u03c7\u03ae \u03bb\u03cd\u03c3\u03b5\u03c9\u03bd
      DVNE \u03bc\u03b5 \u03b5\u03bb\u03b1\u03c7\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03b7
      \u03ba\u03b1\u03b8\u03c5\u03c3\u03c4\u03ad\u03c1\u03b7\u03c3\u03b7 \u03b4\u03b9\u03ba\u03c4\u03c5\u03b1\u03ba\u03ae\u03c2
      \u03ba\u03af\u03bd\u03b7\u03c3\u03b7\u03c2 \u03bc\u03b5\u03c4'' \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae\u03c2.
      \u0388\u03bd\u03b1\u03c2 \u03b5\u03c5\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c2
      \u03b1\u03bb\u03b3\u03cc\u03c1\u03b9\u03b8\u03bc\u03bf\u03c2, \u03b1\u03c1\u03c7\u03b9\u03ba\u03ac,
      \u03b1\u03bd\u03b1\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7
      \u03c3\u03c5\u03c3\u03c7\u03ad\u03c4\u03b9\u03c3\u03b7 \u03c4\u03c9\u03bd VNF
      \u03b5\u03bd\u03cc\u03c2 \u03b1\u03b9\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2
      DVNE, \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03c5\u03c0\u03bf\u03c8\u03ae\u03c6\u03b9\u03c9\u03bd
      EC \u03c0\u03bf\u03c5 \u03b1\u03c5\u03c4\u03ac \u03b8\u03b1 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd
      \u03bd\u03b1 \u03b5\u03bd\u03c3\u03c9\u03bc\u03b1\u03c4\u03c9\u03b8\u03bf\u03cd\u03bd,
      \u03b5\u03c3\u03c4\u03b9\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c3\u03c4\u03b7\u03bd
      \u03b5\u03bb\u03b1\u03c7\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7
      \u03c4\u03b7\u03c2 \u03c7\u03c1\u03ae\u03c3\u03b7\u03c2 \u03c0\u03cc\u03c1\u03c9\u03bd
      \u03b5\u03bd\u03c4\u03cc\u03c2 \u03c4\u03b7\u03c2 \u03ba\u03ac\u03b8\u03b5 \u03c5\u03c0\u03bf\u03b4\u03bf\u03bc\u03ae\u03c2
      EC. \u0394\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b7\u03c2 \u03b1\u03c5\u03c4\u03ae\u03c2
      \u03c4\u03b7\u03c2 \u03b1\u03c1\u03c7\u03b9\u03ba\u03ae\u03c2 \u03c7\u03b1\u03c1\u03c4\u03bf\u03b3\u03c1\u03ac\u03c6\u03b7\u03c3\u03b7\u03c2,
      \u03c0\u03c1\u03bf\u03c4\u03b5\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1\u03c2
      \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03c3\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc\u03c2
      \u03b1\u03bb\u03b3\u03cc\u03c1\u03b9\u03b8\u03bc\u03bf\u03c2 \u03b2\u03b1\u03c3\u03b9\u03c3\u03bc\u03ad\u03bd\u03bf\u03c2
      \u03c3\u03b5 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c5\u03bd\u03c4\u03bf\u03bc\u03cc\u03c4\u03b5\u03c1\u03c9\u03bd
      \u03bc\u03bf\u03bd\u03bf\u03c0\u03b1\u03c4\u03b9\u03ce\u03bd, \u03b3\u03b9\u03b1
      \u03c4\u03b7\u03bd \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae \u03c4\u03b7\u03c2
      \u03bb\u03cd\u03c3\u03b7\u03c2 DVNE, \u03c3\u03b5 \u03c0\u03bf\u03bb\u03c5\u03c9\u03bd\u03c5\u03bc\u03b9\u03ba\u03cc
      \u03c7\u03c1\u03cc\u03bd\u03bf. \u0397 \u03c0\u03bf\u03bb\u03b9\u03c4\u03b9\u03ba\u03ae
      \u03b5\u03bd\u03c3\u03c9\u03bc\u03ac\u03c4\u03c9\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5
      \u03b1\u03bb\u03b3\u03bf\u03c1\u03af\u03b8\u03bc\u03bf\u03c5 \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ac\u03b6\u03b5\u03b9
      \u03b2\u03ad\u03bb\u03c4\u03b9\u03c3\u03c4\u03b5\u03c2 \u03ae \u03c3\u03c7\u03b5\u03b4\u03cc\u03bd
      \u03b2\u03ad\u03bb\u03c4\u03b9\u03c3\u03c4\u03b5\u03c2 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2
      DVNE \u03c3\u03b5 \u03c0\u03bf\u03bb\u03c5\u03c9\u03bd\u03c5\u03bc\u03b9\u03ba\u03cc
      \u03c7\u03c1\u03cc\u03bd\u03bf.\u0391\u03ba\u03cc\u03bc\u03b7, \u03b3\u03b9\u03b1
      \u03bd\u03b1 \u03b5\u03be\u03b1\u03c3\u03c6\u03b1\u03bb\u03b9\u03c3\u03c4\u03b5\u03af
      \u03b7 \u03c3\u03c5\u03bc\u03b2\u03b1\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 \u03ba\u03b1\u03b9
      \u03b7 \u03b4\u03b9\u03b1\u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1
      \u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03c9\u03bd \u03b1\u03c0\u03cc \u03c4\u03bf\u03c5\u03c2
      \u03c0\u03c1\u03bf\u03c4\u03b5\u03b9\u03bd\u03cc\u03bc\u03b5\u03bd\u03bf\u03c5\u03c2
      \u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03bf\u03cd\u03c2 \u03bc\u03b5
      \u03c4\u03b1 \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03bd\u03c4\u03b1 \u03b2\u03b9\u03bf\u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ac
      \u03c0\u03c1\u03cc\u03c4\u03c5\u03c0\u03b1 \u03ba\u03b1\u03b9 \u03c0\u03c1\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2,
      \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03b5\u03bd\u03c3\u03c9\u03bc\u03ac\u03c4\u03c9\u03c3\u03b7
      \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03c4\u03b5\u03b9\u03bd\u03cc\u03bc\u03b5\u03bd\u03c9\u03bd
      \u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03ce\u03bd \u03ba\u03b1\u03b9
      \u03b1\u03bb\u03b3\u03bf\u03c1\u03af\u03b8\u03bc\u03c9\u03bd \u03c3\u03b5 \u03bc\u03b9\u03b1
      \u03b1\u03c1\u03c7\u03b9\u03c4\u03b5\u03ba\u03c4\u03bf\u03bd\u03b9\u03ba\u03ae
      NFV, \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b7
      \u03c4\u03b7\u03c2 \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7\u03c2 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ce\u03bd
      \u03b2\u03b9\u03bf\u03bc\u03b7\u03c7\u03b1\u03bd\u03af\u03b1\u03c2 4.0 (Industry
      4.0). \u03a0\u03c1\u03bf\u03c4\u03b5\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1\u03c2
      \u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7\u03c2
      \u03ba\u03b1\u03b9 \u03b5\u03bd\u03bf\u03c1\u03c7\u03ae\u03c3\u03c4\u03c1\u03c9\u03c3\u03b7\u03c2
      \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7
      \u03b4\u03b9\u03b1\u03c4\u03b5\u03bc\u03b1\u03c7\u03b9\u03b1\u03ba\u03ae\u03c2
      \u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03af\u03b1\u03c2 \u03c3\u03b5
      \u03b2\u03b9\u03bf\u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ac \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\u03c4\u03b1.
      \u0393\u03b9\u03b1 \u03bb\u03cc\u03b3\u03bf\u03c5\u03c2 \u03b1\u03be\u03b9\u03bf\u03bb\u03cc\u03b3\u03b7\u03c3\u03b7\u03c2,
      \u03b1\u03bd\u03b1\u03c0\u03c4\u03cd\u03c3\u03c3\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1
      \u03c3\u03b5\u03bd\u03ac\u03c1\u03b9\u03bf \u03c7\u03c1\u03ae\u03c3\u03b7\u03c2
      Warehouse Robotics, \u03c3\u03c4\u03bf \u03bf\u03c0\u03bf\u03af\u03bf \u03b1\u03c0\u03b1\u03b9\u03c4\u03b5\u03af\u03c4\u03b1\u03b9
      \u03b7 \u03c3\u03c5\u03bd\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03ba\u03b9\u03bd\u03b7\u03c4\u03ce\u03bd
      \u03c1\u03bf\u03bc\u03c0\u03bf\u03c4\u03b9\u03ba\u03ce\u03bd \u03c3\u03c5\u03c3\u03ba\u03b5\u03c5\u03ce\u03bd
      \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03b1\u03c5\u03c4\u03bf\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03bf
      \u03c3\u03cd\u03c3\u03c4\u03b7\u03bc\u03b1 \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7\u03c2
      \u03ba\u03b1\u03b9 \u03b1\u03bd\u03ac\u03ba\u03c4\u03b7\u03c3\u03b7\u03c2. \u0394\u03af\u03bd\u03bf\u03bd\u03c4\u03b1\u03c2
      \u03ad\u03bc\u03c6\u03b1\u03c3\u03b7 \u03c3\u03c4\u03b1 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ac
      \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac
      \u03c4\u03bf\u03c5 CC, \u03c3\u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03bf\u03cd\u03c3\u03b1
      \u03b4\u03b9\u03b1\u03c4\u03c1\u03b9\u03b2\u03ae \u03bc\u03b5\u03bb\u03b5\u03c4\u03ce\u03bd\u03c4\u03b1\u03b9
      \u03ba\u03b1\u03b9 \u03c4\u03b5\u03c7\u03bd\u03b9\u03ba\u03ad\u03c2 \u03ba\u03b1\u03c4\u03b1\u03bd\u03bf\u03bc\u03ae\u03c2
      \u03c0\u03cc\u03c1\u03c9\u03bd \u03ba\u03b1\u03b9 \u03b1\u03c5\u03c4\u03cc\u03bc\u03b1\u03c4\u03b7\u03c2
      \u03ba\u03bb\u03b9\u03bc\u03ac\u03ba\u03c9\u03c3\u03b7\u03c2 (autoscaling).
      \u03a5\u03c0\u03cc \u03b1\u03c5\u03c4\u03cc \u03c4\u03bf \u03c0\u03c1\u03af\u03c3\u03bc\u03b1,
      \u03b1\u03bd\u03b1\u03c0\u03c4\u03cd\u03c7\u03b8\u03b7\u03ba\u03b5 \u03ad\u03bd\u03b1\u03c2
      \u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c0\u03bf\u03bb\u03c5\u03ba\u03c1\u03b9\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae\u03c2
      \u03b2\u03b5\u03bb\u03c4\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2
      \u03b3\u03b9\u03b1 autoscaling, \u03bf \u03bf\u03c0\u03bf\u03af\u03bf\u03c2
      \u03c3\u03c5\u03bd\u03b4\u03c5\u03ac\u03b6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c0\u03c1\u03cc\u03b2\u03bb\u03b5\u03c8\u03b7
      \u03c4\u03bf\u03c5 \u03b1\u03bd\u03b1\u03bc\u03b5\u03bd\u03cc\u03bc\u03b5\u03bd\u03bf\u03c5
      \u03c6\u03bf\u03c1\u03c4\u03af\u03bf\u03c5 \u03bc\u03ad\u03c3\u03c9 \u03bc\u03b5\u03b8\u03cc\u03b4\u03c9\u03bd
      \u03c0\u03c1\u03cc\u03b2\u03bb\u03b5\u03c8\u03b7\u03c2 \u03c7\u03c1\u03bf\u03bd\u03bf\u03c3\u03b5\u03b9\u03c1\u03ce\u03bd,
      \u03b1\u03bb\u03bb\u03ac \u03ba\u03b1\u03b9 \u03c4\u03b7\u03bd \u03b5\u03ba
      \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03c4\u03ad\u03c1\u03c9\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03bc\u03cc
      \u03c0\u03cc\u03c1\u03c9\u03bd \u03b1\u03bd\u03ac \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae,
      \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03bb\u03ad\u03be\u03b5\u03b9
      \u03c4\u03bf\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc \u03c4\u03c9\u03bd \u03b1\u03bd\u03c4\u03b9\u03b3\u03c1\u03ac\u03c6\u03c9\u03bd
      \u03b5\u03b9\u03ba\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \u03bc\u03b7\u03c7\u03b1\u03bd\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd
      (containers) \u03c3\u03b5 \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd
      Kubernetes. \u03a3\u03ba\u03bf\u03c0\u03cc\u03c2 \u03c4\u03bf\u03c5 \u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03bf\u03cd
      \u03b5\u03af\u03bd\u03b1\u03b9 \u03bd\u03b1 \u03c3\u03c5\u03bd\u03b4\u03c5\u03ac\u03c3\u03b5\u03b9
      \u03c4\u03b7\u03bd \u03b5\u03b3\u03b3\u03cd\u03b7\u03c3\u03b7 \u03c0\u03bf\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2
      \u03c5\u03c0\u03b7\u03c1\u03b5\u03c3\u03af\u03b1\u03c2 \u03bc\u03b9\u03b1\u03c2
      \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae\u03c2, \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03ce\u03bd\u03c4\u03b1\u03c2
      \u03c4\u03b7 \u03c3\u03c4\u03b7 \u03c7\u03c1\u03bf\u03bd\u03b9\u03ba\u03ae \u03b1\u03c0\u03cc\u03ba\u03c1\u03b9\u03c3\u03b7,
      \u03bc\u03b5\u03b9\u03ce\u03bd\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c0\u03b1\u03c1\u03ac\u03bb\u03bb\u03b7\u03bb\u03b1
      \u03c4\u03bf \u03b4\u03b9\u03b1\u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc
      \u03ba\u03cc\u03c3\u03c4\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03c0\u03b1\u03c1\u03cc\u03c7\u03bf\u03c5
      \u03c4\u03b7\u03c2 \u03c5\u03c0\u03bf\u03b4\u03bf\u03bc\u03ae\u03c2 \u03ba\u03b1\u03b9
      \u03c4\u03b7 \u03c3\u03c5\u03bd\u03bf\u03bb\u03b9\u03ba\u03ae \u03ba\u03b1\u03c4\u03b1\u03bd\u03ac\u03bb\u03c9\u03c3\u03b7
      \u03b5\u03bd\u03ad\u03c1\u03b3\u03b5\u03b9\u03b1\u03c2. \u039f\u03b9 \u03c0\u03c1\u03bf\u03c3\u03b5\u03b3\u03b3\u03af\u03c3\u03b5\u03b9\u03c2
      \u03c0\u03bf\u03c5 \u03c0\u03c1\u03bf\u03c4\u03b5\u03af\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9
      \u03b1\u03be\u03b9\u03bf\u03bb\u03bf\u03b3\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9
      \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03b9\u03ba\u03ac \u03c4\u03cc\u03c3\u03bf
      \u03bc\u03ad\u03c3\u03c9 \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03af\u03c9\u03c3\u03b7\u03c2
      \u03cc\u03c3\u03bf \u03ba\u03b1\u03b9 \u03bc\u03ad\u03c3\u03c9 \u03b5\u03bd\u03c3\u03c9\u03bc\u03ac\u03c4\u03c9\u03c3\u03ae\u03c2
      \u03c4\u03bf\u03c5\u03c2 \u03c3\u03b5 \u03c3\u03cd\u03b3\u03c7\u03c1\u03bf\u03bd\u03b5\u03c2
      \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b4\u03b9\u03b1\u03c7\u03b5\u03af\u03c1\u03b9\u03c3\u03b7\u03c2
      \u03ba\u03b1\u03b9 \u03b5\u03bd\u03bf\u03c1\u03c7\u03ae\u03c3\u03c4\u03c1\u03c9\u03c3\u03b7\u03c2,
      \u03b5\u03bd\u03ce \u03c0\u03b1\u03c1\u03ad\u03c7\u03bf\u03bd\u03c4\u03b1\u03b9
      \u03c3\u03c5\u03b3\u03ba\u03c1\u03b9\u03c4\u03b9\u03ba\u03ac \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03b1
      \u03ad\u03bd\u03b1\u03bd\u03c4\u03b9 \u03ac\u03bb\u03bb\u03c9\u03bd \u03bb\u03cd\u03c3\u03b5\u03c9\u03bd
      \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03c3\u03b1
      \u03c0\u03c1\u03cc\u03c3\u03c6\u03b1\u03c4\u03b7 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b3\u03c1\u03b1\u03c6\u03af\u03b1.
      \u03a4\u03b1 \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03ac\u03c3\u03bc\u03b1\u03c4\u03b1
      \u03c0\u03bf\u03c5 \u03b5\u03be\u03ac\u03b3\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc
      \u03c4\u03b7 \u03b8\u03b5\u03c9\u03c1\u03b7\u03c4\u03b9\u03ba\u03ae \u03ba\u03b1\u03b9
      \u03c0\u03b5\u03b9\u03c1\u03b1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03b1\u03be\u03b9\u03bf\u03bb\u03cc\u03b3\u03b7\u03c3\u03b7
      \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03c4\u03b5\u03b9\u03bd\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd
      \u03c0\u03bb\u03b1\u03b9\u03c3\u03af\u03c9\u03bd \u03c3\u03c5\u03bd\u03bf\u03c8\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9
      \u03c3\u03c4\u03bf \u03ba\u03b1\u03c4\u03b1\u03bb\u03b7\u03ba\u03c4\u03b9\u03ba\u03cc
      \u03ba\u03b5\u03c6\u03ac\u03bb\u03b1\u03b9\u03bf \u03c4\u03b7\u03c2 \u03b4\u03b9\u03b1\u03c4\u03c1\u03b9\u03b2\u03ae\u03c2,
      \u03cc\u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd, \u03b1\u03bd\u03b1\u03c0\u03c4\u03cd\u03c3\u03c3\u03bf\u03bd\u03c4\u03b1\u03b9
      \u03b1\u03bd\u03bf\u03b9\u03c7\u03c4\u03ac \u03b5\u03c1\u03b5\u03c5\u03bd\u03b7\u03c4\u03b9\u03ba\u03ac
      \u03b8\u03ad\u03bc\u03b1\u03c4\u03b1 \u03b3\u03b9\u03b1 \u03bc\u03b5\u03bb\u03bb\u03bf\u03bd\u03c4\u03b9\u03ba\u03ae
      \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1.", "venue": "", "year": null, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Biology", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "citationStyles": {"bibtex": "@Misc{None,\n author =
      {\u0399\u03c9\u03ac\u03bd\u03bd\u03b7\u03c2 \u0394\u03b7\u03bc\u03bf\u03bb\u03af\u03c4\u03c3\u03b1\u03c2},\n
      title = {Optimal resource orchestration of distributed 5G applications over
      the cloud continuum}\n}\n"}, "authors": [{"authorId": "2273433338", "name":
      "\u0399\u03c9\u03ac\u03bd\u03bd\u03b7\u03c2 \u0394\u03b7\u03bc\u03bf\u03bb\u03af\u03c4\u03c3\u03b1\u03c2"}]},
      {"paperId": "01f089f03700c59c0c8b70a211dc2ea1dc563295", "externalIds": {"DOI":
      "10.1109/INDICON49873.2020.9342504", "CorpusId": 231851985}, "corpusId": 231851985,
      "publicationVenue": {"id": "6a7544ec-28bf-4f81-92a4-f33b3562f11f", "name": "IEEE
      India Conference", "type": "conference", "alternate_names": ["INDICON", "IEEE
      India Conf"]}, "url": "https://www.semanticscholar.org/paper/01f089f03700c59c0c8b70a211dc2ea1dc563295",
      "title": "TEAM: Time and Energy Aware Application Partitioning and Resource
      Allocation Strategy on MEC Platform", "abstract": "In recent times, the hand-held
      smart devices are entrusted with running several data and compute-intensive
      applications which are often of critical nature. As a result, the mobile edge
      computing (MEC) paradigm becomes popular that facilitates an efficient execution
      mechanism for these applications. The existing scheduling policies in this execution
      platform mainly considers independent user tasks and supports only full offloading.
      In this paper, we propose a scheduling strategy for a bag of applications supporting
      partial offloading to reduce the energy consumption of the edge hosts. Further,
      for the execution of applications in edge host, we propose an execution model
      using light-weight container-based solution Kubernetes in place of traditional
      virtual machine-based model. Experimental results show the effectiveness of
      our proposed scheduling policy with an energy saving of 7.9% with respect to
      the baseline state-of-art energy-efficient scheduling policy. The proposed policy
      also meets the delay constraints of all the applications.", "venue": "IEEE India
      Conference", "year": 2020, "referenceCount": 34, "citationCount": 2, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2020-12-10", "journal": {"name": "2020 IEEE 17th India Council International
      Conference (INDICON)", "pages": "1-7"}, "citationStyles": {"bibtex": "@Conference{Deka2020TEAMTA,\n
      author = {Vishal Deka and Charu Guleria and Manojit Ghose},\n booktitle = {IEEE
      India Conference},\n journal = {2020 IEEE 17th India Council International Conference
      (INDICON)},\n pages = {1-7},\n title = {TEAM: Time and Energy Aware Application
      Partitioning and Resource Allocation Strategy on MEC Platform},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2048021066", "name": "Vishal Deka"}, {"authorId":
      "2008208009", "name": "Charu Guleria"}, {"authorId": "36911504", "name": "Manojit
      Ghose"}]}, {"paperId": "02039972b4d6b325c2f622d0d3454f75177f7f25", "externalIds":
      {"DOI": "10.1007/978-1-4842-8032-4", "CorpusId": 250646774}, "corpusId": 250646774,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/02039972b4d6b325c2f622d0d3454f75177f7f25",
      "title": "Kubernetes Application Developer: Develop Microservices and Design
      a Software Solution on the Cloud", "abstract": null, "venue": "", "year": 2022,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://link.springer.com/content/pdf/bfm:978-1-4842-8032-4/1?pdf=chapter%20toc",
      "status": "GREEN"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Book"], "publicationDate": null, "journal":
      {"name": "Kubernetes Application Developer"}, "citationStyles": {"bibtex": "@Book{Khushalani2022KubernetesAD,\n
      author = {Prateek Khushalani},\n journal = {Kubernetes Application Developer},\n
      title = {Kubernetes Application Developer: Develop Microservices and Design
      a Software Solution on the Cloud},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2176881753", "name": "Prateek Khushalani"}]}, {"paperId": "02046d848d20769bc5c29faf285ec56e7e5661f0",
      "externalIds": {"DOI": "10.1088/1742-6596/2433/1/012014", "CorpusId": 257279377},
      "corpusId": 257279377, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/02046d848d20769bc5c29faf285ec56e7e5661f0",
      "title": "Time Series Prediction Method of Metrics of Dispatching Automation
      System Based on AI Platform", "abstract": "In view of the shortcomings of manual
      operation mode and passive anomaly perception in the current dispatching automation
      system, this paper provides a time series prediction method for the metrics
      of the dispatching automation system based on the artificial intelligence platform.
      Firstly, based on the collected metrics of the dispatching automation system,
      the time series prediction algorithm of metrics based on Long Short-Term Memory(LSTM)
      and LightGBM(LGB) combined model is studied. Then, the algorithm is integrated
      into a one-stop graphical interactive modeling tool and the model training process
      is drawn. Through the task is automatic split and distributed model training
      is automatically carried out on a regular basis. Then, the AI model service
      sharing technology based on Kubernetes is used to realize the model service
      release and automatic update, and the platform interactive development component
      is used to realize automatic online prediction and rolling iterative update.
      Finally, the actual data of the system metrics is used for example analysis,
      and the results show that the proposed method can realize the advance prediction
      of the system metrics, and realize the whole process automatic integration model
      training and prediction based on the artificial intelligence platform, and effectively
      improve the model training efficiency, meet the real-time and security requirements
      of the dispatching automation system, and is more suitable for engineering application
      scenarios.", "venue": "Journal of Physics: Conference Series", "year": 2023,
      "referenceCount": 8, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://iopscience.iop.org/article/10.1088/1742-6596/2433/1/012014/pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Physics"], "s2FieldsOfStudy": [{"category":
      "Physics", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2023-02-01", "journal": {"name": "Journal
      of Physics: Conference Series", "volume": "2433"}, "citationStyles": {"bibtex":
      "@Conference{Wan2023TimeSP,\n author = {Xiong Wan and Jialing Shen and Yanru
      Kong and Xinjian Huang and Yinyin Lao and X. Ji},\n booktitle = {Journal of
      Physics: Conference Series},\n journal = {Journal of Physics: Conference Series},\n
      title = {Time Series Prediction Method of Metrics of Dispatching Automation
      System Based on AI Platform},\n volume = {2433},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "144196618", "name": "Xiong Wan"}, {"authorId": "2193352396",
      "name": "Jialing Shen"}, {"authorId": "2152091824", "name": "Yanru Kong"}, {"authorId":
      "2152665462", "name": "Xinjian Huang"}, {"authorId": "2210251727", "name": "Yinyin
      Lao"}, {"authorId": "9273114", "name": "X. Ji"}]}, {"paperId": "0208d2eee9d19982596f10adc74d2e3359c837fb",
      "externalIds": {"DOI": "10.26760/elkomika.v11i2.439", "CorpusId": 258391084},
      "corpusId": 258391084, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0208d2eee9d19982596f10adc74d2e3359c837fb",
      "title": "Analysis of Load Balancing Least Connection and Shortest Expected
      Delay Algorithm for Web Server Using Kube-Proxy on Kubernetes", "abstract":
      null, "venue": "ELKOMIKA: Jurnal Teknik Energi Elektrik, Teknik Telekomunikasi,
      &amp; Teknik Elektronika", "year": 2023, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://ejurnal.itenas.ac.id/index.php/elkomika/article/download/8410/3257",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-04-17", "journal":
      {"name": "ELKOMIKA: Jurnal Teknik Energi Elektrik, Teknik Telekomunikasi, &amp;
      Teknik Elektronika"}, "citationStyles": {"bibtex": "@Article{SUJARWO2023AnalysisOL,\n
      author = {Muhammad Akbar Ibnu Farhan PUTRA SUJARWO and Istikmal Istikmal and
      A. Irawan},\n booktitle = {ELKOMIKA: Jurnal Teknik Energi Elektrik, Teknik Telekomunikasi,
      &amp; Teknik Elektronika},\n journal = {ELKOMIKA: Jurnal Teknik Energi Elektrik,
      Teknik Telekomunikasi, &amp; Teknik Elektronika},\n title = {Analysis of Load
      Balancing Least Connection and Shortest Expected Delay Algorithm for Web Server
      Using Kube-Proxy on Kubernetes},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2216032742", "name": "Muhammad Akbar Ibnu Farhan PUTRA SUJARWO"}, {"authorId":
      "69875365", "name": "Istikmal Istikmal"}, {"authorId": "2057128674", "name":
      "A. Irawan"}]}, {"paperId": "0256a82e588e62d855af2a6cf4e6ee01ef7ac0be", "externalIds":
      {"DOI": "10.1109/ICPECA56706.2023.10076221", "CorpusId": 257808690}, "corpusId":
      257808690, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0256a82e588e62d855af2a6cf4e6ee01ef7ac0be",
      "title": "Heterogeneous Embedded Resource Management under Space-based Edge
      Computing Environment with Kubernetes Device Plugin", "abstract": "Edge devices
      are widely applied in space scenarios for their compact size and diminished
      power consumption. To avoid the collision of different applications, containerizing
      applications becomes a more welcomed option compared to virtual machines for
      its light-weightiness and short loading latency. Kubernetes, considered a de
      facto framework for orchestrating containers, allows automatic allocations of
      resources connected to nodes, but it only supports management on CPU, I/O, network,
      and storage by default. Supported devices can be extended with its device plugin
      mechanism however, official device plugins might not work on edge devices, as
      their functionalities are constrained due to its compactness, such as NVidia
      TX2 that is not supported by the official Nvidia GPU device plugin. Moreover,
      devices vary in type, and architecture and even some do not support operating
      systems, making it unintelligent to develop device plugins separately. Therefore,
      managing device plugins becomes an urgent problem for edge cloud providers.
      In this paper, we proposed and implemented a paradigm of orchestrating devices
      that allows Kubernetes manage edge devices, even if they do not run operating
      systems. As for the obstacles of being unable to report the device topology
      of a single node to the scheduler, we proposed an approach to hijack the scheduling
      process without establishing a new scheduler. We conducted experiments and the
      results showed that the platform we proposed can enable Ku-bernetes to manage
      various devices without device plugins, both on on-board embedded devices and
      non-OS-supported devices. We tested its performance and capacity with a simulated
      device, and the result shows that it only causes 6.34 % overhead, and its embedded
      scheduling method has an adequate performance compared to optimum method, which
      is only 7.7 % slower.", "venue": "2023 IEEE 3rd International Conference on
      Power, Electronics and Computer Applications (ICPECA)", "year": 2023, "referenceCount":
      9, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2023-01-29",
      "journal": {"name": "2023 IEEE 3rd International Conference on Power, Electronics
      and Computer Applications (ICPECA)", "pages": "453-461"}, "citationStyles":
      {"bibtex": "@Conference{Wang2023HeterogeneousER,\n author = {Xin Wang and Xinyu
      Yang and Wenjie Ye and Lei Yan and Suzhi Cao},\n booktitle = {2023 IEEE 3rd
      International Conference on Power, Electronics and Computer Applications (ICPECA)},\n
      journal = {2023 IEEE 3rd International Conference on Power, Electronics and
      Computer Applications (ICPECA)},\n pages = {453-461},\n title = {Heterogeneous
      Embedded Resource Management under Space-based Edge Computing Environment with
      Kubernetes Device Plugin},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2214090587", "name": "Xin Wang"}, {"authorId": "2213800608", "name": "Xinyu
      Yang"}, {"authorId": "2052980227", "name": "Wenjie Ye"}, {"authorId": "2110133208",
      "name": "Lei Yan"}, {"authorId": "14761946", "name": "Suzhi Cao"}]}, {"paperId":
      "025d1ac1509e8400bb5904ab579a18ae48cb2785", "externalIds": {"MAG": "2604497313",
      "DBLP": "journals/stt/WillneckerVK16", "CorpusId": 15203367}, "corpusId": 15203367,
      "publicationVenue": {"id": "f1150339-ae82-476c-8f90-2f6c8d953d77", "name": "Softwaretechnik-Trends",
      "type": "journal", "alternate_names": ["Softwaretechnik-trends"], "issn": "0720-8928",
      "url": "http://pi.informatik.uni-siegen.de/stt/"}, "url": "https://www.semanticscholar.org/paper/025d1ac1509e8400bb5904ab579a18ae48cb2785",
      "title": "SiaaS: Simulation as a Service", "abstract": "One major advantage
      of performance models over tests using real systems is the ability to simulate
      design alternatives by simply modifying or exchanging parts of such models.
      However, the evaluation of numerous design alternatives can be time consuming
      depending on the number of alternatives and the complexity of the model. To
      overcome this challenge, this work presents a scalable simulation service for
      the Palladio Component Model (PCM) workbench based on a headless Eclipse instance,
      a Java EE application server, packaged in a docker container and run in kubernetes.
      The simulation service supports parallel simulation runs, multiple PCM instances
      in the same container and scales out automatically, when resources of one container
      instance exceed. Simulation jobs are triggered by a platform-independent REST
      interface and can be re-used by other applications. This allows to simulate
      a vast amount of model instances in parallel on cloud or on-premise installa-",
      "venue": "Softwaretechnik-Trends", "year": 2016, "referenceCount": 10, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "Softwaretechnik-Trends",
      "volume": "36"}, "citationStyles": {"bibtex": "@Article{Willnecker2016SiaaSSA,\n
      author = {Felix Willnecker and Christian V\u00f6gele and H. Krcmar},\n booktitle
      = {Softwaretechnik-Trends},\n journal = {Softwaretechnik-Trends},\n title =
      {SiaaS: Simulation as a Service},\n volume = {36},\n year = {2016}\n}\n"}, "authors":
      [{"authorId": "2064496", "name": "Felix Willnecker"}, {"authorId": "1777253",
      "name": "Christian V\u00f6gele"}, {"authorId": "1712422", "name": "H. Krcmar"}]},
      {"paperId": "0277650379bf4851d37d8b79a6c8b6e2d662bba5", "externalIds": {"CorpusId":
      254498534}, "corpusId": 254498534, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0277650379bf4851d37d8b79a6c8b6e2d662bba5",
      "title": "Adapting Kubernetes to IIoT and Industry 4.0 protocols - An initial
      performance analysis", "abstract": "Kubernetes (K8s) is one of the most frequently
      used container orchestration tools offering, as it offers a rich set of functions
      to manage containerized applications, it is customizable and extensible. Container
      virtualization of applications and their orchestration on heterogeneous resources
      including edge devices is a recent trend in Industrial Internet of Things (IIoT)/Industry
      4.0, where K8s is also applied. However, IIoT/Industry 4.0 is a domain with
      high standardization requirements. Besides equipment standards, e.g., for electrical
      control cabinets, there are also demands to standardize network protocols, data
      formats or information models. Such standards can foster interoperability and
      reduce complexity or de-ployment/integration costs. Here, the proprietary communication
      protocol of K8s and similar orchestrators can be an obstacle for adoption. To
      explore this situation from an interoperability and integration perspective,
      we present in this paper an approach to replace the communication protocol of
      K8s without modifying its code base. We show by an experiment that applying
      our approach with three current forms of IIoT communication, namely Message
      Queuing Telemetry Transport (MQTT), Advanced Message Queuing Protocol (AMQP),
      and Asset Administration Shell (AAS), does not significantly affect the validity
      and the performance of K8s.", "venue": "", "year": 2022, "referenceCount": 8,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Inproceedings{Alamoush2022AdaptingKT,\n author = {Ahmad Alamoush and Holger
      Eichelberger},\n title = {Adapting Kubernetes to IIoT and Industry 4.0 protocols
      - An initial performance analysis},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "121439888", "name": "Ahmad Alamoush"}, {"authorId": "2319070", "name": "Holger
      Eichelberger"}]}, {"paperId": "028d56acaf9f85a61473ded607f8bbef66c168f0", "externalIds":
      {"DOI": "10.1109/TELECOM53156.2021.9659651", "CorpusId": 245595007}, "corpusId":
      245595007, "publicationVenue": {"id": "2fbd7759-ac03-4545-acea-ba44727987e6",
      "name": "Telecom", "type": "journal", "issn": "2673-4001", "url": "https://www.mdpi.com/journal/telecom",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-1664481"]},
      "url": "https://www.semanticscholar.org/paper/028d56acaf9f85a61473ded607f8bbef66c168f0",
      "title": "Design and Deployment of Kubernetes Cluster on Raspberry Pi OS", "abstract":
      "The rapidly growing number of Internet-connected devices and the plenty of
      services provided and performed on cloud platforms requires efficient and fast
      allocation of hardware resources. This is possible when workloads and services
      are containerized. Such an approach facilitates configuration and automation
      without downtime for the services and applications. To achieve this is needed
      tool that manages the running applications with provisioning of scalability.
      The purpose of this paper is to present the design and implementation of a Kubernetes
      cluster of 20 Raspberry Pi 4 Model B computers.", "venue": "Telecom", "year":
      2021, "referenceCount": 0, "citationCount": 4, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2021-10-28", "journal": {"name": "2021 29th National Conference with International
      Participation (TELECOM)", "pages": "104-107"}, "citationStyles": {"bibtex":
      "@Conference{Todorov2021DesignAD,\n author = {Milen Todorov},\n booktitle =
      {Telecom},\n journal = {2021 29th National Conference with International Participation
      (TELECOM)},\n pages = {104-107},\n title = {Design and Deployment of Kubernetes
      Cluster on Raspberry Pi OS},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "47131676", "name": "Milen Todorov"}]}, {"paperId": "029eb6137782f7c235cbc5fe89ffb0adc50e3e28",
      "externalIds": {"DOI": "10.1088/1742-6596/2438/1/012035", "CorpusId": 256897677},
      "corpusId": 256897677, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/029eb6137782f7c235cbc5fe89ffb0adc50e3e28",
      "title": "Evaluation and Implementation of Various Persistent Storage Options
      for CMSWEB Services in Kubernetes Infrastructure at CERN", "abstract": "This
      paper summarizes the various storage options that we implemented for the CMSWEB
      cluster in Kubernetes infrastructure. All CMSWEB services require storage for
      logs, while some services also require storage for data. We also provide a feasibility
      analysis of various storage options and describe the pros/cons of each technique
      from the perspective of the CMSWEB cluster and its users. In the end, we also
      propose recommendations according to the service needs. The first option is
      the CephFS which can be mounted multiple times across various clusters and VMs
      and works very well with k8s. We use it both for data and the logs. The second
      option is the Cinder volume. It is the block storage that runs the filesystem
      on top of it. It can only be attached to one instance at a time. We use this
      option only for the data. The third option is S3 storage. It is object storage
      that offers a scalable storage service that can be used by applications compatible
      with the Amazon S3 protocol. It is used for the logs. For S3, we explored two
      mechanisms. For the first scenario, we consider fluentd that runs as a sidecar
      container in the service pods and sends logs to S3 bucket. For the second scenario,
      we considered filebeat that runs as a sidecar container in the service pod and
      scaps those logs to fluentd which runs as a daemonset in each node and sends
      those logs to S3 in the end. The fourth option is EOS. We configured EOS inside
      the pods of the CMSWEB services. The fifth option that we explored is to use
      dedicated VMs that have Ceph volume attached to them. In EOS and VM, the logs
      from the service pods are sent to EOS/VM using the rsync approach. The last
      option is to send service logs to Elasticsearch. It has been implemented using
      fluentd that runs as a daemonset in each node. In parallel to the sending logs
      to S3 fluentd also sends those logs to the Elasticsearch infrastructure at CERN.",
      "venue": "Journal of Physics: Conference Series", "year": 2023, "referenceCount":
      1, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://iopscience.iop.org/article/10.1088/1742-6596/2438/1/012035/pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Physics"], "s2FieldsOfStudy": [{"category":
      "Physics", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2023-02-01", "journal": {"name": "Journal
      of Physics: Conference Series", "volume": "2438"}, "citationStyles": {"bibtex":
      "@Conference{Imran2023EvaluationAI,\n author = {M. Imran and V. Kuznetsov and
      P. Paparrigopoulos and Spyridon Trigazis and A. Pfeiffer},\n booktitle = {Journal
      of Physics: Conference Series},\n journal = {Journal of Physics: Conference
      Series},\n title = {Evaluation and Implementation of Various Persistent Storage
      Options for CMSWEB Services in Kubernetes Infrastructure at CERN},\n volume
      = {2438},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2113544459", "name":
      "M. Imran"}, {"authorId": "2037763389", "name": "V. Kuznetsov"}, {"authorId":
      "1396942274", "name": "P. Paparrigopoulos"}, {"authorId": "101754274", "name":
      "Spyridon Trigazis"}, {"authorId": "2056184986", "name": "A. Pfeiffer"}]}, {"paperId":
      "02c6926a190df8dbd0d8f7403e0ef8b0f7c59a40", "externalIds": {"DBLP": "journals/tnsm/SantosWWT23",
      "DOI": "10.1109/TNSM.2023.3271415", "CorpusId": 258407292}, "corpusId": 258407292,
      "publicationVenue": {"id": "a00fde74-d8df-4613-b825-0fff9f531d3f", "name": "IEEE
      Transactions on Network and Service Management", "type": "journal", "alternate_names":
      ["IEEE Trans Netw Serv Manag"], "issn": "1932-4537", "url": "http://ejournals.ebsco.com/direct.asp?JournalID=714200",
      "alternate_urls": ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=4275028",
      "http://ieeexplore.ieee.org/servlet/opac?punumber=4275028"]}, "url": "https://www.semanticscholar.org/paper/02c6926a190df8dbd0d8f7403e0ef8b0f7c59a40",
      "title": "Diktyo: Network-Aware Scheduling in Container-Based Clouds", "abstract":
      "Containers have revolutionized application deployment and life-cycle management
      in current cloud platforms. Applications have evolved from single monoliths
      to complex graphs of loosely-coupled microservices. However, the efficient allocation
      of microservice-based applications is challenging due to their complex inter-dependencies.
      Further, recent applications are becoming even more delay-sensitive, demanding
      lower latency between dependent microservices. Scheduling policies in popular
      container orchestration platforms mainly aim to increase the resource efficiency
      of the infrastructure, insufficient for latency-sensitive applications. Application
      domains such as the Internet of Things and multi-tier Web services would benefit
      from network-aware policies that consider network latency and bandwidth in the
      scheduling process. Previous works have studied network-aware scheduling via
      theoretical formulations or heuristic-based methods evaluated via simulations
      or small testbeds, making their full applicability in popular platforms difficult.
      This paper proposes a novel network-aware framework for the popular Kubernetes
      (K8s) platform named Diktyo that determines the placement of dependent microservices
      in long-running applications focused on reducing the application\u2019s end-to-end
      latency and guaranteeing bandwidth reservations. Simulations show that Diktyo
      can significantly reduce the network latency for various applications across
      different infrastructure topologies compared to default K8s scheduling plugins.
      Also, experiments in a K8s cluster with microservice benchmark applications
      show that Diktyo can increase database throughput by 22% and reduce application
      response time by 45%.", "venue": "IEEE Transactions on Network and Service Management",
      "year": 2023, "referenceCount": 93, "citationCount": 5, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-12-01", "journal": {"name": "IEEE Transactions on Network and Service
      Management", "pages": "4461-4477", "volume": "20"}, "citationStyles": {"bibtex":
      "@Article{Santos2023DiktyoNS,\n author = {Jos\u00e9 Santos and Chen Wang and
      T. Wauters and F. de Turck},\n booktitle = {IEEE Transactions on Network and
      Service Management},\n journal = {IEEE Transactions on Network and Service Management},\n
      pages = {4461-4477},\n title = {Diktyo: Network-Aware Scheduling in Container-Based
      Clouds},\n volume = {20},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2115681922",
      "name": "Jos\u00e9 Santos"}, {"authorId": "2157434199", "name": "Chen Wang"},
      {"authorId": "145115855", "name": "T. Wauters"}, {"authorId": "2065702132",
      "name": "F. de Turck"}]}, {"paperId": "02dcaa2f9e4bdcbb2882bd38109d99edb8b16952",
      "externalIds": {"ArXiv": "2308.03450", "DBLP": "journals/corr/abs-2308-03450",
      "DOI": "10.48550/arXiv.2308.03450", "CorpusId": 260680737}, "corpusId": 260680737,
      "publicationVenue": {"id": "3b4e0d11-3211-4ead-848c-99928b5ef30e", "name": "IEEE
      Network", "type": "journal", "alternate_names": ["IEEE Netw"], "issn": "0890-8044",
      "url": "http://ieeexplore.ieee.org/servlet/opac?punumber=65"}, "url": "https://www.semanticscholar.org/paper/02dcaa2f9e4bdcbb2882bd38109d99edb8b16952",
      "title": "Intelligence-Endogenous Management Platform for Computing and Network
      Convergence", "abstract": "Massive emerging applications are driving demand
      for the ubiquitous deployment of computing power today. This trend not only
      spurs the recent popularity of the \\emph{Computing and Network Convergence}
      (CNC), but also introduces an urgent need for the intelligentization of a management
      platform to coordinate changing resources and tasks in the CNC. Therefore, in
      this article, we present the concept of an intelligence-endogenous management
      platform for CNCs called \\emph{CNC brain} based on artificial intelligence
      technologies. It aims at efficiently and automatically matching the supply and
      demand with high heterogeneity in a CNC via four key building blocks, i.e.,
      perception, scheduling, adaptation, and governance, throughout the CNC''s life
      cycle. Their functionalities, goals, and challenges are presented. To examine
      the effectiveness of the proposed concept and framework, we also implement a
      prototype for the CNC brain based on a deep reinforcement learning technology.
      Also, it is evaluated on a CNC testbed that integrates two open-source and popular
      frameworks (OpenFaas and Kubernetes) and a real-world business dataset provided
      by Microsoft Azure. The evaluation results prove the proposed method''s effectiveness
      in terms of resource utilization and performance. Finally, we highlight the
      future research directions of the CNC brain.", "venue": "IEEE Network", "year":
      2023, "referenceCount": 15, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2308.03450",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-08-07", "journal":
      {"name": "ArXiv", "volume": "abs/2308.03450"}, "citationStyles": {"bibtex":
      "@Article{Hong2023IntelligenceEndogenousMP,\n author = {Zicong Hong and Xiaoyu
      Qiu and Jiangnnan Lin and Wuhui Chen and Yue Yu and Hui Wang and Songxue Guo
      and Wen Gao},\n booktitle = {IEEE Network},\n journal = {ArXiv},\n title = {Intelligence-Endogenous
      Management Platform for Computing and Network Convergence},\n volume = {abs/2308.03450},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "89600513", "name": "Zicong Hong"},
      {"authorId": "150344586", "name": "Xiaoyu Qiu"}, {"authorId": "2220764439",
      "name": "Jiangnnan Lin"}, {"authorId": "2111704521", "name": "Wuhui Chen"},
      {"authorId": "2218865509", "name": "Yue Yu"}, {"authorId": "32269070", "name":
      "Hui Wang"}, {"authorId": "2115742272", "name": "Songxue Guo"}, {"authorId":
      "2223107434", "name": "Wen Gao"}]}, {"paperId": "02e217ebd6f28e40250074bf2e21eae0d2fab385",
      "externalIds": {"MAG": "3137881865", "DOI": "10.30743/INFOTEKJAR.V5I2.3577",
      "CorpusId": 233773628}, "corpusId": 233773628, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/02e217ebd6f28e40250074bf2e21eae0d2fab385",
      "title": "Performance Analysis High Availability of Web Server in Cluster GKE
      (Google Kubernetes Engine) using Infrastructure Google Cloud Platform", "abstract":
      "Internet users in the world according to the Internet World Stat in 2020 reached
      58.7% of internet users worldwide, this percentage increases from year to year.
      The growth of internet users worldwide, namely 1,167% from 2000 to 2020. The
      large number of internet users makes web service providers have to take resources
      for managed web servers. Based on these problems, we need a system that can
      help server performance and availability. Server grouping supports a number
      of computers to work together to perform the computation process. The technology
      server clustering has the advantage of being able to produce a system with a
      high level and level. Kubernetes is a cluster platform for container or container
      orchestrators. Kubernetes is expected to be a solution for more ef icient computing
      and the creation of a high-level system. The simulation system uses the public
      cloud platform, namely the google cloud platform with kubernetes services with
      google kubernetes engine services. The system is simulated using the google
      kubernetes engine on the google cloud platform. The average value of Availability
      was 99.96% of the total 27526 minutes of uptime. With the computational load
      of the nodes on the google kubernetes engine, the average CPU usage for each
      test scenario is quite stable with the highest CPU at 27.178% From the test
      result of throughput, the average value of throughput on each connection is
      7,126 Mbit / s with the highest value for 1000 connections, namely 8,764 Mbit
      / s. The delay indicates the \"Very Good\" category based on the TIPHON standard
      of less than 150 ms. The highest percentage of packet loss was obtained at 5000
      connections at 16.27%.", "venue": "", "year": 2021, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2021-03-08", "journal": {"name": "", "pages": "115-123",
      "volume": "5"}, "citationStyles": {"bibtex": "@Inproceedings{Ginting2021PerformanceAH,\n
      author = {Jafaruddin Gustri Amri Ginting and Syariful Ikhwan and M. Ammar},\n
      pages = {115-123},\n title = {Performance Analysis High Availability of Web
      Server in Cluster GKE (Google Kubernetes Engine) using Infrastructure Google
      Cloud Platform},\n volume = {5},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2088612402", "name": "Jafaruddin Gustri Amri Ginting"}, {"authorId": "2092130861",
      "name": "Syariful Ikhwan"}, {"authorId": "2088612000", "name": "M. Ammar"}]},
      {"paperId": "02e424cd99491b6d9f57f8b88ffb7a16d8561090", "externalIds": {"DBLP":
      "conf/cloudnet/LevinB20", "DOI": "10.1109/CloudNet51028.2020.9335808", "CorpusId":
      229183876}, "corpusId": 229183876, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/02e424cd99491b6d9f57f8b88ffb7a16d8561090",
      "title": "ViperProbe: Rethinking Microservice Observability with eBPF", "abstract":
      "Recent shifts to microservice-based architectures and the supporting servicemesh
      radically disrupt the landscape of performance-oriented management tasks. While
      the adoption of frameworks like Istio and Kubernetes ease the management and
      organization of such systems, they do not themselves provide strong observability.
      Microservice observability requires diverse, highly specialized, and often adaptive,
      metrics and algorithms to monitor both the health of individual services and
      the larger application. However, modern metrics collection frameworks are relatively
      static and rigid. We introduce ViperProbe, an eBPF-based microservices collection
      framework that provides (1) dynamic sampling and (2) collection of deep, diverse,
      and precise system metrics. Viper-Probe builds on the observation that the adoption
      of a common set of design patterns, e.g., servicemesh, enables offline analysis.
      By examining the performance profile of these patterns before deploying on production,
      ViperProbe can effectively reduce the set of collected metrics, thereby improving
      the efficiency and effectiveness of those metrics. To the best of our knowledge,
      ViperProbe is the first scalable eBPF-based dynamic and adaptive microservices
      metrics collection framework. Our results show ViperProbe has limited overhead,
      while significantly more effective for traditional management tasks, e.g., horizontal
      autoscaling.", "venue": "2020 IEEE 9th International Conference on Cloud Networking
      (CloudNet)", "year": 2020, "referenceCount": 62, "citationCount": 24, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2020-11-09", "journal":
      {"name": "2020 IEEE 9th International Conference on Cloud Networking (CloudNet)",
      "pages": "1-8"}, "citationStyles": {"bibtex": "@Article{Levin2020ViperProbeRM,\n
      author = {Joshua Levin and Theophilus A. Benson},\n booktitle = {2020 IEEE 9th
      International Conference on Cloud Networking (CloudNet)},\n journal = {2020
      IEEE 9th International Conference on Cloud Networking (CloudNet)},\n pages =
      {1-8},\n title = {ViperProbe: Rethinking Microservice Observability with eBPF},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "2072995014", "name": "Joshua
      Levin"}, {"authorId": "144992984", "name": "Theophilus A. Benson"}]}, {"paperId":
      "02eda37891acdbd899aa6c01249917ba94449151", "externalIds": {"DOI": "10.3390/math11122675",
      "CorpusId": 259159738}, "corpusId": 259159738, "publicationVenue": {"id": "6175efe8-6f8e-4cbe-8cee-d154f4e78627",
      "name": "Mathematics", "issn": "2227-7390", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-283014",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-283014",
      "https://www.mdpi.com/journal/mathematics"]}, "url": "https://www.semanticscholar.org/paper/02eda37891acdbd899aa6c01249917ba94449151",
      "title": "Toward Optimal Load Prediction and Customizable Autoscaling Scheme
      for Kubernetes", "abstract": "Most enterprise customers now choose to divide
      a large monolithic service into large numbers of loosely-coupled, specialized
      microservices, which can be developed and deployed separately. Docker, as a
      light-weight virtualization technology, has been widely adopted to support diverse
      microservices. At the moment, Kubernetes is a portable, extensible, and open-source
      orchestration platform for managing these containerized microservice applications.
      To adapt to frequently changing user requests, it offers an automated scaling
      method, Horizontal Pod Autoscaler (HPA), that can scale itself based on the
      system\u2019s current workload. The native reactive auto-scaling method, however,
      is unable to foresee the system workload scenario in the future to complete
      proactive scaling, leading to QoS (quality of service) violations, long tail
      latency, and insufficient server resource usage. In this paper, we suggest a
      new proactive scaling scheme based on deep learning approaches to make up for
      HPA\u2019s inadequacies as the default autoscaler in Kubernetes. After meticulous
      experimental evaluation and comparative analysis, we use the Gated Recurrent
      Unit (GRU) model with higher prediction accuracy and efficiency as the prediction
      model, supplemented by a stability window mechanism to improve the accuracy
      and stability of the prediction model. Finally, with the third-party custom
      autoscaling framework, Custom Pod Autoscaler (CPA), we packaged our custom autoscaling
      algorithm into a framework and deployed the framework into the real Kubernetes
      cluster. Comprehensive experiment results prove the feasibility of our autoscaling
      scheme, which significantly outperforms the existing Horizontal Pod Autoscaler
      (HPA) approach.", "venue": "Mathematics", "year": 2023, "referenceCount": 28,
      "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      {"url": "https://www.mdpi.com/2227-7390/11/12/2675/pdf?version=1686645006",
      "status": "CLOSED"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-06-12", "journal": {"name": "Mathematics"}, "citationStyles": {"bibtex":
      "@Article{Mondal2023TowardOL,\n author = {S. Mondal and Xiaohai Wu and H. M.
      D. Kabir and Hongning Dai and Kan Ni and Honggang Yuan and Ting Wang},\n booktitle
      = {Mathematics},\n journal = {Mathematics},\n title = {Toward Optimal Load Prediction
      and Customizable Autoscaling Scheme for Kubernetes},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2203223", "name": "S. Mondal"}, {"authorId": "2108011835",
      "name": "Xiaohai Wu"}, {"authorId": "2038537268", "name": "H. M. D. Kabir"},
      {"authorId": "46448389", "name": "Hongning Dai"}, {"authorId": "2193641674",
      "name": "Kan Ni"}, {"authorId": "2114128823", "name": "Honggang Yuan"}, {"authorId":
      "2155389969", "name": "Ting Wang"}]}, {"paperId": "02f00e57d6bd663cbc399d9032f9ad2894f0dee4",
      "externalIds": {"DBLP": "conf/xsede/SfiligoiDW22", "ArXiv": "2205.01004", "DOI":
      "10.1145/3491418.3535123", "CorpusId": 248496129}, "corpusId": 248496129, "publicationVenue":
      {"id": "b85446b1-9eb7-4d6d-bfde-e2b0c6b2cfb6", "name": "Practice and Experience
      in Advanced Research Computing", "type": "conference", "alternate_names": ["PEARC",
      "Pract Exp Adv Res Comput"], "url": "https://www.pearc.org/"}, "url": "https://www.semanticscholar.org/paper/02f00e57d6bd663cbc399d9032f9ad2894f0dee4",
      "title": "Auto-scaling HTCondor pools using Kubernetes compute resources", "abstract":
      "HTCondor has been very successful in managing globally distributed, pleasantly
      parallel scientific workloads, especially as part of the Open Science Grid.
      HTCondor system design makes it ideal for integrating compute resources provisioned
      from anywhere, but it has very limited native support for autonomously provisioning
      resources managed by other solutions. This work presents a solution that allows
      for autonomous, demand-driven provisioning of Kubernetes-managed resources.
      A high-level overview of the employed architectures is presented, paired with
      the description of the setups used in both on-prem and Cloud deployments in
      support of several Open Science Grid communities. The experience suggests that
      the described solution should be generally suitable for contributing Kubernetes-based
      resources to existing HTCondor pools.", "venue": "Practice and Experience in
      Advanced Research Computing", "year": 2022, "referenceCount": 15, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3491418.3535123", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Environmental Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book", "Review"],
      "publicationDate": "2022-05-02", "journal": {"name": "Practice and Experience
      in Advanced Research Computing"}, "citationStyles": {"bibtex": "@Article{Sfiligoi2022AutoscalingHP,\n
      author = {I. Sfiligoi and T. DeFanti and F. W\u00fcrthwein},\n booktitle = {Practice
      and Experience in Advanced Research Computing},\n journal = {Practice and Experience
      in Advanced Research Computing},\n title = {Auto-scaling HTCondor pools using
      Kubernetes compute resources},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2271565", "name": "I. Sfiligoi"}, {"authorId": "2029117", "name": "T. DeFanti"},
      {"authorId": "9369570", "name": "F. W\u00fcrthwein"}]}, {"paperId": "030b4779ba75998bf14d6607ff5619dc22c8a97d",
      "externalIds": {"DOI": "10.1007/978-1-4842-7496-5_7", "CorpusId": 244107048},
      "corpusId": 244107048, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/030b4779ba75998bf14d6607ff5619dc22c8a97d",
      "title": "Wasm and Kubernetes", "abstract": null, "venue": "WebAssembly for
      Cloud", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2021-11-14",
      "journal": {"name": "WebAssembly for Cloud"}, "citationStyles": {"bibtex": "@Article{Jain2021WasmAK,\n
      author = {Shashank Jain},\n booktitle = {WebAssembly for Cloud},\n journal =
      {WebAssembly for Cloud},\n title = {Wasm and Kubernetes},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "49837646", "name": "Shashank Jain"}]}, {"paperId":
      "0321ec81075999326802aeac79915e2c3cfc42e9", "externalIds": {"DOI": "10.31891/csit-2021-5-8",
      "CorpusId": 248329335}, "corpusId": 248329335, "publicationVenue": {"id": "7a090827-17e9-45b3-807b-4deb0d918e94",
      "name": "Computer Systems and Information Technologies", "alternate_names":
      ["Comput Syst Inf Technol"], "issn": "2710-0766", "alternate_issns": ["2710-0774"]},
      "url": "https://www.semanticscholar.org/paper/0321ec81075999326802aeac79915e2c3cfc42e9",
      "title": "ANALYSIS OF MONOLITHIC AND MICROSERVICE ARCHITECTURES FEATURES AND
      METRICS", "abstract": "In this paper the information technologies stack is presented.
      Thesetechnologies are used during network architecture deployment. The analysis
      of technological advantages and drawbacks under investigation for monolithic
      and network architectures will be useful during of cyber security analysis in
      telecom networks. The analysis of the main numeric characteristics was carried
      out with the aid of Kubectl. The results of a series of numerical experiments
      on the evaluation of the response speed to requests and the fault tolerance
      are presented. The characteristics of the of monolithic and microservice-based
      architectures scalability are under investigation. For the time series sets,
      which characterize the network server load, the value of the Hurst exponent
      was calculated. \nThe research main goal is the monolithic and microservice
      architecture main characteristics analysis, time series data from the network
      server accruing, and their statistical analysis. \nThe methodology of Kubernetes
      clusters deploying using Minikube, Kubectl, Docker has been used. Application
      deploy on AWS ECS virtual machine with monolithic architecture and on the Kubernetes
      cluster (AWS EKS) were conducted. \nThe investigation results gives us the confirmation,
      that the microservices architecture would be more fault tolerance and flexible
      in comparison with the monolithic architecture. Time series fractal analysis
      on the server equipment load showed the presence of long-term dependency, so
      that we can treat the traffic implementation as a self-similar process. \nThe
      scientific novelty of the article lies in the application of fractal analysis
      to real time series: use of the kernel in user space, kernel latency, RAM usage,
      caching of RAM collected over 6 months with a step of 10 seconds, establishing
      a long-term dependence of time series data. \nThe practical significance of
      the research is methodology creation of the monolithic and microservice architectures
      deployment and exploitation, as well as the use of time series fractal analysis
      for the network equipment load exploration.", "venue": "Computer Systems and
      Information Technologies", "year": 2022, "referenceCount": 27, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "http://csitjournal.khmnu.edu.ua/index.php/csit/article/download/91/61", "status":
      "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2022-04-14", "journal": {"name":
      "Computer systems and information technologies"}, "citationStyles": {"bibtex":
      "@Article{Selivorstova2022ANALYSISOM,\n author = {Tatjana Selivorstova and Sergey
      Klishch and S. Kyrychenko and A. Guda and K. Ostrovskaya},\n booktitle = {Computer
      Systems and Information Technologies},\n journal = {Computer systems and information
      technologies},\n title = {ANALYSIS OF MONOLITHIC AND MICROSERVICE ARCHITECTURES
      FEATURES AND METRICS},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2163225818",
      "name": "Tatjana Selivorstova"}, {"authorId": "2138617382", "name": "Sergey
      Klishch"}, {"authorId": "134730074", "name": "S. Kyrychenko"}, {"authorId":
      "34973872", "name": "A. Guda"}, {"authorId": "1643998096", "name": "K. Ostrovskaya"}]},
      {"paperId": "0376018275de3f37f969f3e56331294a29d2d5c4", "externalIds": {"MAG":
      "3021139782", "DOI": "10.1109/ITNEC48623.2020.9084706", "CorpusId": 218494199},
      "corpusId": 218494199, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0376018275de3f37f969f3e56331294a29d2d5c4",
      "title": "A Cluster Autoscaler Based on Multiple Node Types in Kubernetes",
      "abstract": "Kubernetes, as a production-grade container orchestration system,
      has been used in varieties of fields on a large scale. However, as used more
      and more widely, the appropriate selection of auto scaling schemes in kubernetes
      also faces considerable challenges in their respective application fields. Based
      on multiple node types with image pre-loaded, this paper proposes an improved
      automatic scaling scheme that combines the advantages of different types of
      nodes in the scaling process. The results show that, compared with the default
      auto scaler, it can improve the performance of the system under rapid load pressure
      and reduce the instability within the running clusters.", "venue": "2020 IEEE
      4th Information Technology, Networking, Electronic and Automation Control Conference
      (ITNEC)", "year": 2020, "referenceCount": 14, "citationCount": 6, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2020-06-01", "journal": {"name": "2020 IEEE
      4th Information Technology, Networking, Electronic and Automation Control Conference
      (ITNEC)", "pages": "575-579", "volume": "1"}, "citationStyles": {"bibtex": "@Conference{Wang2020ACA,\n
      author = {Mingming Wang and Dongmei Zhang and Bin Wu},\n booktitle = {2020 IEEE
      4th Information Technology, Networking, Electronic and Automation Control Conference
      (ITNEC)},\n journal = {2020 IEEE 4th Information Technology, Networking, Electronic
      and Automation Control Conference (ITNEC)},\n pages = {575-579},\n title = {A
      Cluster Autoscaler Based on Multiple Node Types in Kubernetes},\n volume = {1},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "2145475462", "name": "Mingming
      Wang"}, {"authorId": "2109580618", "name": "Dongmei Zhang"}, {"authorId": "2152564610",
      "name": "Bin Wu"}]}, {"paperId": "03b31dbc09ea53b475c18b827a295196f57677b2",
      "externalIds": {"DBLP": "conf/sosp/FuR21", "DOI": "10.1145/3477132.3483559",
      "CorpusId": 239193919}, "corpusId": 239193919, "publicationVenue": {"id": "6c6fcaa9-fd25-488b-8050-995227ac671c",
      "name": "Symposium on Operating Systems Principles", "type": "conference", "alternate_names":
      ["Symp Oper Syst Princ", "SOSP"], "url": "http://sosp.org/"}, "url": "https://www.semanticscholar.org/paper/03b31dbc09ea53b475c18b827a295196f57677b2",
      "title": "dSpace: Composable Abstractions for Smart Spaces", "abstract": "We
      present dSpace, an open and modular programming framework that aims to simplify
      and accelerate the development of smart space applications. To achieve this,
      dSpace provides two key building blocks~digivices that implement device control
      and actuation and digidata that process IoT data to generate events and insights.
      In addition, dSpace introduces novel abstractions - mount, yield, and pipe -
      via which digivices and digidata can be composed into higher-level abstractions.
      We apply dSpace to home automation systems and show how developers can easily
      and flexibly leverage these abstractions to support a wide range of home automation
      scenarios. Finally, we show how the dSpace concepts can be realized using a
      microservices-based architecture and implement dSpace as a Kubernetes-compatible
      framework.", "venue": "Symposium on Operating Systems Principles", "year": 2021,
      "referenceCount": 62, "citationCount": 36, "influentialCitationCount": 1, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3477132.3483559",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}], "publicationTypes":
      ["JournalArticle", "Book", "Conference"], "publicationDate": "2021-10-26", "journal":
      {"name": "Proceedings of the ACM SIGOPS 28th Symposium on Operating Systems
      Principles"}, "citationStyles": {"bibtex": "@Article{Fu2021dSpaceCA,\n author
      = {Silvery Fu and S. Ratnasamy},\n booktitle = {Symposium on Operating Systems
      Principles},\n journal = {Proceedings of the ACM SIGOPS 28th Symposium on Operating
      Systems Principles},\n title = {dSpace: Composable Abstractions for Smart Spaces},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "32302537", "name": "Silvery
      Fu"}, {"authorId": "1699297", "name": "S. Ratnasamy"}]}, {"paperId": "03c90e1e79a69449585a0799f5be78b4d9744704",
      "externalIds": {"MAG": "2886620722", "DBLP": "conf/bpm/WeerawaranaEPL18", "DOI":
      "10.1007/978-3-319-98648-7_2", "CorpusId": 52140898}, "corpusId": 52140898,
      "publicationVenue": {"id": "bf9874cb-acb6-463d-8faa-54efb9bcaeea", "name": "International
      Conference on Business Process Management", "type": "conference", "alternate_names":
      ["Business Process Management", "Bus Process Manag", "Int Conf Bus Process Manag",
      "BPM"], "url": "https://bpm-conference.org/conferences/"}, "url": "https://www.semanticscholar.org/paper/03c90e1e79a69449585a0799f5be78b4d9744704",
      "title": "Bringing Middleware to Everyday Programmers with Ballerina", "abstract":
      null, "venue": "International Conference on Business Process Management", "year":
      2018, "referenceCount": 9, "citationCount": 5, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2018-09-09", "journal": {"pages": "12-27"},
      "citationStyles": {"bibtex": "@Article{Weerawarana2018BringingMT,\n author =
      {S. Weerawarana and Chathura C. Ekanayake and S. Perera and F. Leymann},\n booktitle
      = {International Conference on Business Process Management},\n pages = {12-27},\n
      title = {Bringing Middleware to Everyday Programmers with Ballerina},\n year
      = {2018}\n}\n"}, "authors": [{"authorId": "2240531", "name": "S. Weerawarana"},
      {"authorId": "3310862", "name": "Chathura C. Ekanayake"}, {"authorId": "38549122",
      "name": "S. Perera"}, {"authorId": "1688415", "name": "F. Leymann"}]}, {"paperId":
      "03dde79ccf2b3c21a0d676223cbf0aaf623f2c1d", "externalIds": {"DBLP": "conf/icc/NguyenDHZ21",
      "DOI": "10.1109/ICC42927.2021.9500400", "CorpusId": 236939744}, "corpusId":
      236939744, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/03dde79ccf2b3c21a0d676223cbf0aaf623f2c1d",
      "title": "EdgePV: Collaborative Edge Computing Framework for Task Offloading",
      "abstract": "Recent analytical research has pointed out that almost all vehicles
      spend over 95% of their time in parking lots where their powerful computing
      resources are wasted. In this paper, we propose a novel collaborative computing
      paradigm that efficiently offloads online heterogeneous computation tasks to
      parked vehicles (PVs) during peak hours. A container orchestration based on
      Kubernetes is advocated to integrate into the existing infrastructure due to
      its cutting-edge features such as auto-healing, load-balancing, and security.
      We formulate the offloading problem analytically and present an intelligent
      metaheuristic algorithm to address dynamic online demands. Extensive evaluation
      demonstrates that our proposed paradigm improves task arrival ratio and average
      offloading cost for more than 40% compared with a set of heuristic algorithms.
      Additionally, owners of PVs can be beneficial by sharing their idle vehicle
      resources through received incentives.", "venue": "ICC 2021 - IEEE International
      Conference on Communications", "year": 2021, "referenceCount": 17, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Environmental Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2021-06-01", "journal": {"name": "ICC 2021
      - IEEE International Conference on Communications", "pages": "1-6"}, "citationStyles":
      {"bibtex": "@Article{Nguyen2021EdgePVCE,\n author = {Khoa T. D. Nguyen and S.
      Drew and Changcheng Huang and Jiayu Zhou},\n booktitle = {ICC 2021 - IEEE International
      Conference on Communications},\n journal = {ICC 2021 - IEEE International Conference
      on Communications},\n pages = {1-6},\n title = {EdgePV: Collaborative Edge Computing
      Framework for Task Offloading},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "1381616828", "name": "Khoa T. D. Nguyen"}, {"authorId": "2047932657", "name":
      "S. Drew"}, {"authorId": "1740408", "name": "Changcheng Huang"}, {"authorId":
      "2131573459", "name": "Jiayu Zhou"}]}, {"paperId": "03e48e840db3e98b517768a4ae88ae95c080aa21",
      "externalIds": {"DOI": "10.14569/ijacsa.2022.0130460", "CorpusId": 248648268},
      "corpusId": 248648268, "publicationVenue": {"id": "20a3a2f3-532a-4f04-9f3d-1e268e100872",
      "name": "International Journal of Advanced Computer Science and Applications",
      "type": "journal", "alternate_names": ["Int J Adv Comput Sci Appl"], "issn":
      "2156-5570", "url": "http://sites.google.com/site/ijacsa2010/", "alternate_urls":
      ["http://thesai.org/Publication/Default.aspx", "https://thesai.org/Publications/IJACSA"]},
      "url": "https://www.semanticscholar.org/paper/03e48e840db3e98b517768a4ae88ae95c080aa21",
      "title": "Framework to Deploy Containers using Kubernetes and CI/CD Pipeline",
      "abstract": "\u2014Containers are continuously replacing the usage of virtual
      machines and gaining popularity in terms of scalability and agility in IT Industry.
      The key concept behind containers is Operating system based virtualization.
      In cloud, computing containers are getting deployed in terms of computing instances
      whereas in premises they are getting deployed using Docker as a part of CI/CD
      pipelines using Jenkin Server. When containers are going to be increased in
      number, its deployment and resource management is always a concern which is
      managed using the Kubernetes. Kubernetes is used to deploy and manage the containers
      in an autonomous manner and Rancher is used to manage the Kubernetes Cluster
      in an efficient manner. First Analysis is done for the scheduler, resource management
      which is used by Kubernetes to deploy the containers and proposed a framework
      which will automate the whole process using the helm-charts, ansible scripts
      from container deployment to the management of Kubernetes Cluster in a scalable
      manner. It is fully automated framework and can be used to deploy the scalable
      applications in form of containers as Docker images. CI/CD pipeline is also
      considered using Jenkin Server.", "venue": "International Journal of Advanced
      Computer Science and Applications", "year": 2022, "referenceCount": 20, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "http://thesai.org/Downloads/Volume13No4/Paper_60-Framework_to_Deploy_Containers_using_Kubernetes_and_CICD_Pipeline.pdf",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "International
      Journal of Advanced Computer Science and Applications"}, "citationStyles": {"bibtex":
      "@Article{Abhishek2022FrameworkTD,\n author = {M. Abhishek and D. Rao and K.
      Subrahmanyam},\n booktitle = {International Journal of Advanced Computer Science
      and Applications},\n journal = {International Journal of Advanced Computer Science
      and Applications},\n title = {Framework to Deploy Containers using Kubernetes
      and CI/CD Pipeline},\n year = {2022}\n}\n"}, "authors": [{"authorId": "9102634",
      "name": "M. Abhishek"}, {"authorId": "47299401", "name": "D. Rao"}, {"authorId":
      "41204470", "name": "K. Subrahmanyam"}]}, {"paperId": "040d8e6ecd5ede85dc7cd9848a22273ec609da66",
      "externalIds": {"DBLP": "conf/middleware/TruyenLJHD20", "DOI": "10.1145/3429885.3429963",
      "CorpusId": 231579103}, "corpusId": 231579103, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/040d8e6ecd5ede85dc7cd9848a22273ec609da66",
      "title": "Flexible Migration in Blue-Green Deployments within a Fixed Cost",
      "abstract": "This paper presents the concept of PolyPod that consists of multiple
      Pods that run different versions of the same container image on the same node
      in order to share common libraries in memory. Its novelty is that it proposes
      a blueprint for blue-green deployments in order to balance maximum flexibility
      in the number of migration steps with maximum workload consolidation within
      a fixed total resource cost. This balance between flexibility and improved resource
      utilization is important for various application areas where users are served
      by the same application instance and have different time preferences for being
      upgraded to a new application version. The PolyPod concept is also relevant
      for a planned feature of Kubernetes so that Pods can be vertically scaled without
      re-starting them, but where scaling actions are aborted if the capacity of the
      node is to be exceeded. We explain how the PolyPod concept supports balancing
      flexible migration and resource utilization, with and without Pod restarts,
      by simulating various migration scenarios based on a quantitative cost model.",
      "venue": "WOC@Middleware", "year": 2020, "referenceCount": 22, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2020-12-07", "journal": {"name":
      "Proceedings of the 2020 6th International Workshop on Container Technologies
      and Container Clouds"}, "citationStyles": {"bibtex": "@Article{Truyen2020FlexibleMI,\n
      author = {E. Truyen and B. Lagaisse and W. Joosen and Arnout Hoebreckx and C\u00e9dric
      De Dycker},\n booktitle = {WOC@Middleware},\n journal = {Proceedings of the
      2020 6th International Workshop on Container Technologies and Container Clouds},\n
      title = {Flexible Migration in Blue-Green Deployments within a Fixed Cost},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "1743981", "name": "E. Truyen"},
      {"authorId": "1796744", "name": "B. Lagaisse"}, {"authorId": "1752104", "name":
      "W. Joosen"}, {"authorId": "2046773872", "name": "Arnout Hoebreckx"}, {"authorId":
      "2046774441", "name": "C\u00e9dric De Dycker"}]}, {"paperId": "0412ab6e19e7ae61e327ea0b96ea2798fe23a719",
      "externalIds": {"DOI": "10.35940/ijeat.b3041.129219", "CorpusId": 242634574},
      "corpusId": 242634574, "publicationVenue": {"id": "47ee480e-9ef9-480e-86e1-bd7187dc7ad4",
      "name": "International Journal of Engineering and Advanced Technology", "type":
      "journal", "alternate_names": ["Int J Eng Adv Technol"], "issn": "2249-8958",
      "url": "https://www.ijeat.org/"}, "url": "https://www.semanticscholar.org/paper/0412ab6e19e7ae61e327ea0b96ea2798fe23a719",
      "title": "REST Architecture Optimization in Cloud Computing Ecosystem to Support
      E-Learning Platform", "abstract": "This study will present an application design
      process in the style of Representational State Transfer (REST) architecture
      to support the E-Learning platform in the cloud computing ecosystem. An application
      optimization process will be presented to provide E-Learning applications for
      schools, faculties or universities that in most cases need manual deployment
      and require more time for server provisioning.This process is optimized by providing
      application solutions that can provide speed of provisioning.The core system
      used Kubernetes containerization technology to provide scalability of growing
      E-Learning tenants. Evaluation of the core system architecture uses the Architecture
      Trade-off Analysis Method (ATAM) to evaluate aspect of performance and scalability
      as quality attributes. From the experimentalresults, the process of making new
      tenants for schools requires an average time of around 173.4 seconds. This meets
      the expectations of the set time limit of 5 minutes. The results of stress tests
      for 250 concurrent users show that the system has availability above 98%.Thus,education
      stakeholders such as schools and universities, no longer need to provide expensive
      e-learning infrastructure in the form of hardware or manpower to deploy the
      e-learning application on premise. In the future, this solution will provide
      a scalable E-Learning system that can spread at scale on the cloud computing
      ecosystem and support a Software as a Service solution in educational technology.",
      "venue": "International Journal of Engineering and Advanced Technology", "year":
      2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Education",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2019-12-30",
      "journal": {"name": "International Journal of Engineering and Advanced Technology"},
      "citationStyles": {"bibtex": "@Article{None,\n booktitle = {International Journal
      of Engineering and Advanced Technology},\n journal = {International Journal
      of Engineering and Advanced Technology},\n title = {REST Architecture Optimization
      in Cloud Computing Ecosystem to Support E-Learning Platform},\n year = {2019}\n}\n"},
      "authors": []}, {"paperId": "042bfe51fb187b933421d444385208c2b34a880e", "externalIds":
      {"DBLP": "conf/xsede/SongSK0ACFGHIMJ22", "DOI": "10.1145/3491418.3530766", "CorpusId":
      250360563}, "corpusId": 250360563, "publicationVenue": {"id": "b85446b1-9eb7-4d6d-bfde-e2b0c6b2cfb6",
      "name": "Practice and Experience in Advanced Research Computing", "type": "conference",
      "alternate_names": ["PEARC", "Pract Exp Adv Res Comput"], "url": "https://www.pearc.org/"},
      "url": "https://www.semanticscholar.org/paper/042bfe51fb187b933421d444385208c2b34a880e",
      "title": "Anvil - System Architecture and Experiences from Deployment and Early
      User Operations", "abstract": "Anvil is a new XSEDE advanced capacity computational
      resource funded by NSF. Designed with a systematic strategy to meet the ever
      increasing and diversifying research needs for advanced computational capacity,
      Anvil integrates a large capacity high-performance computing (HPC) system with
      a comprehensive ecosystem of software, access interfaces, programming environments,
      and composable services in a seamless environment to support a broad range of
      current and future science and engineering applications of the nation\u2019s
      research community. Anchored by a 1000-node CPU cluster featuring the latest
      AMD EPYC 3rd generation (Milan) processors, along with a set of 1TB large memory
      and NVIDIA A100 GPU nodes, Anvil integrates a multi-tier storage system, a Kubernetes
      composable subsystem, and a pathway to Azure commercial cloud to support a variety
      of workflows and storage needs. Anvil was successfully deployed and integrated
      with XSEDE during the world-wide COVID-19 pandemic. Entering production operation
      in February 2022, Anvil will serve the nation\u2019s science and engineering
      research community for five years. This paper describes the Anvil system and
      services, including its various components and subsystems, user facing features,
      and shares the Anvil team\u2019s experience through its early user access program
      from November 2021 through January 2022.", "venue": "Practice and Experience
      in Advanced Research Computing", "year": 2022, "referenceCount": 19, "citationCount":
      6, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3491418.3530766", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Environmental Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book"],
      "publicationDate": "2022-07-08", "journal": {"name": "Practice and Experience
      in Advanced Research Computing"}, "citationStyles": {"bibtex": "@Article{Song2022AnvilS,\n
      author = {C.X. Song and Preston M. Smith and Rajesh Kalyanam and Xiao Zhu and
      Eric Adams and K. Colby and P. Finnegan and E. Gough and Elizabett Hillery and
      R. Irvine and A. Maji and J. S. John},\n booktitle = {Practice and Experience
      in Advanced Research Computing},\n journal = {Practice and Experience in Advanced
      Research Computing},\n title = {Anvil - System Architecture and Experiences
      from Deployment and Early User Operations},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "49153002", "name": "C.X. Song"}, {"authorId": "2108279024", "name":
      "Preston M. Smith"}, {"authorId": "31825217", "name": "Rajesh Kalyanam"}, {"authorId":
      "2116190086", "name": "Xiao Zhu"}, {"authorId": "2057907847", "name": "Eric
      Adams"}, {"authorId": "34351073", "name": "K. Colby"}, {"authorId": "145138228",
      "name": "P. Finnegan"}, {"authorId": "145041883", "name": "E. Gough"}, {"authorId":
      "151423753", "name": "Elizabett Hillery"}, {"authorId": "47771683", "name":
      "R. Irvine"}, {"authorId": "40644800", "name": "A. Maji"}, {"authorId": "73408711",
      "name": "J. S. John"}]}, {"paperId": "0465b0d9d213440c52ab754af83a5eb8df6628df",
      "externalIds": {"DBLP": "conf/icufn/ParkK22", "DOI": "10.1109/icufn55119.2022.9829693",
      "CorpusId": 250943581}, "corpusId": 250943581, "publicationVenue": {"id": "5ba115b2-444a-476a-ae16-66bf1b83372f",
      "name": "International Conference on Ubiquitous and Future Networks", "type":
      "conference", "alternate_names": ["Int Conf Ubiquitous Future Netw", "ICUFN"]},
      "url": "https://www.semanticscholar.org/paper/0465b0d9d213440c52ab754af83a5eb8df6628df",
      "title": "Design and Development of Server-Client Cooperation Framework for
      Federated Learning", "abstract": "Federated learning is a machine learning technique
      that enables distributed training without explicitly data sharing between multiple
      heterogeneous devices. In this paper, we propose and develop a practical federated
      learning framework to effectively support model deployment, aggregation, and
      client device monitoring. The proposed approach is designed as a micro-architecture
      service using container-related technologies such as Docker, Kubernetes, and
      Prometheus.", "venue": "International Conference on Ubiquitous and Future Networks",
      "year": 2022, "referenceCount": 15, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-07-05", "journal": {"name": "2022 Thirteenth International
      Conference on Ubiquitous and Future Networks (ICUFN)", "pages": "271-273"},
      "citationStyles": {"bibtex": "@Article{Park2022DesignAD,\n author = {Jong-Il
      Park and Seung-woo Kum},\n booktitle = {International Conference on Ubiquitous
      and Future Networks},\n journal = {2022 Thirteenth International Conference
      on Ubiquitous and Future Networks (ICUFN)},\n pages = {271-273},\n title = {Design
      and Development of Server-Client Cooperation Framework for Federated Learning},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2109085585", "name": "Jong-Il
      Park"}, {"authorId": "150300252", "name": "Seung-woo Kum"}]}, {"paperId": "04691390b5e8b9b3d440e4cc66e338760fd6928d",
      "externalIds": {"CorpusId": 235343133}, "corpusId": 235343133, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/04691390b5e8b9b3d440e4cc66e338760fd6928d",
      "title": "Comprehensive Review of Virtualization Tools", "abstract": "Virtualization
      is process of creation of hardware or operating systems and processes virtually
      on the underlying hardware which can be a local machine or cloud. It is a growing
      technology and is widely used by IT companies for development of software as
      it allows full and optimal use of resources. In this paper we are going to explain
      virtualization and its different aspects and perform a comparative study on
      the most widely used virtualization tools in the market. Docker is platform
      based service which implements OS level virtualization and delivers software
      as packages in containers. Kubernetes is a container orchestration tool which
      is used for automated software deployment, scaling and management. Vagrant is
      a platform for construction and management of virtual environments. VirtualBox
      is an open source virtualization software for creating virtual environments.
      This paper details the use of these tools and states a comparison between the
      similar softwares while drawing conclusions on the combination of their implementation.",
      "venue": "", "year": 2020, "referenceCount": 6, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate":
      null, "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Agarwal2020ComprehensiveRO,\n
      author = {Akarshan Agarwal and S. Rao and B. Mahendra},\n title = {Comprehensive
      Review of Virtualization Tools},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "1959635989", "name": "Akarshan Agarwal"}, {"authorId": "2107347031", "name":
      "S. Rao"}, {"authorId": "39329640", "name": "B. Mahendra"}]}, {"paperId": "04752eedd583ce667ad84df5f903f58b2d837f38",
      "externalIds": {"MAG": "2772141465", "DOI": "10.18419/OPUS-9402", "CorpusId":
      168669388}, "corpusId": 168669388, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/04752eedd583ce667ad84df5f903f58b2d837f38",
      "title": "Deployment of TOSCA cloud services archives using Kubernetes", "abstract":
      "In recent years container virtualization and container management emerged in
      the context of Cloud computing as a new paradigm in IT enterprises. It introduces
      new approaches that enable the IT industry to manage their application and services
      more effectively in the Cloud. With the rapid increase of usage of Cloud computing,
      IT companies introduce new tools to manage their applications in Cloud environments.
      However, each tool has its own kind of definitions and specifications on describing
      the applications in their platforms which creates vendor lock-in for its users
      and also hampers the portability features of Cloud applications. To solve this
      issue, TOSCA has been introduced to the industry by OASIS. The Topology and
      Orchestration Specification for Cloud Applications (TOSCA) provides a standardization
      approach enabling portability of Cloud services between different Cloud Computing
      providers. The main goal of TOSCA is to model enterprise applications in a standardized
      and technology-independent way regardless of a specific Cloud provider or environment.
      To model and deploy applications using TOSCA properly, all required artifacts
      are packaged and bundled as TOSCA Cloud Service Archives (CSARs). Such CSARs
      are then used by Cloud orchestration engines to deploy the application to Cloud
      platforms. At the technology level, several deployment and cluster management
      approaches and tools are rapidly emerging such as Docker Compose, Docker Swarm,
      Kubernetes, Nomad, and Apache Mesos. Most of them are centered around containerization
      of middleware and application components. The focus of this thesis is to provide
      mapping concepts of TOSCA application topologies to a container-based deployment
      and management approach. Since Kubernetes and Docker are the most prominent
      open-source solutions in this field, we specifically consider Kubernetes and
      Docker as part of the prototype implementation. To assess feasibility of the
      proposed approach and usability of the system, we also provide case studies
      based on a motivating scenario.", "venue": "", "year": 2017, "referenceCount":
      23, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Haider2017DeploymentOT,\n
      author = {M. R. Haider},\n title = {Deployment of TOSCA cloud services archives
      using Kubernetes},\n year = {2017}\n}\n"}, "authors": [{"authorId": "120701943",
      "name": "M. R. Haider"}]}, {"paperId": "047856774c8b12c3e762da134d133fb01b09d032",
      "externalIds": {"DBLP": "conf/cloud/WangLLVGR22", "DOI": "10.1145/3542929.3563471",
      "CorpusId": 253385704}, "corpusId": 253385704, "publicationVenue": {"id": "d13e941e-4cac-4f1d-bdca-77d927e31f1b",
      "name": "ACM Symposium on Cloud Computing", "type": "conference", "alternate_names":
      ["System-on-Chip Conference", "ACM Symp Cloud Comput", "Syst Conf", "Symp Cloud
      Comput", "Annual IEEE International System-on-Chip Conference", "Symposium on
      Cloud Computing", "Annu IEEE Int Syst Conf", "SoCC"], "url": "http://www.ieee-socc.org/"},
      "url": "https://www.semanticscholar.org/paper/047856774c8b12c3e762da134d133fb01b09d032",
      "title": "Quadrant: a cloud-deployable NF virtualization platform", "abstract":
      "Network Functions (NFs) now process a significant fraction of Internet traffic.
      Software-based NF Virtualization (NFV) promised to enable rapid development
      of new NFs by vendors and leverage the power and economics of commodity computing
      infrastructure for NF deployment. To date, no cloud NFV systems achieve NF chaining,
      isolation, SLO-adherence, and scaling together with existing cloud computing
      infrastructure and abstractions, all while achieving generality, speed, and
      ease of deployment. These properties are taken for granted in other cloud contexts
      but unavailable for NF processing. We present Quadrant, an efficient and secure
      cloud-deployable NFV system, and show that Quadrant''s approach of adapting
      existing cloud infrastructure to support packet processing can achieve NF chaining,
      isolation, generality, and performance in NFV. Quadrant reuses common cloud
      infrastructure such as Kubernetes, serverless, the Linux kernel, NIC hardware,
      and switches. It enables easy NFV deployment while delivering up to double the
      performance per core compared to the state of the art.", "venue": "ACM Symposium
      on Cloud Computing", "year": 2022, "referenceCount": 51, "citationCount": 8,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3542929.3563471", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2022-11-07", "journal": {"name": "Proceedings of the 13th
      Symposium on Cloud Computing"}, "citationStyles": {"bibtex": "@Book{Wang2022QuadrantAC,\n
      author = {Jianfeng Wang and Tam\u00e1s L\u00e9vai and Zhuojin Li and M. Vieira
      and R. Govindan and B. Raghavan},\n booktitle = {ACM Symposium on Cloud Computing},\n
      journal = {Proceedings of the 13th Symposium on Cloud Computing},\n title =
      {Quadrant: a cloud-deployable NF virtualization platform},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2110258117", "name": "Jianfeng Wang"}, {"authorId":
      "2281945", "name": "Tam\u00e1s L\u00e9vai"}, {"authorId": "22224102", "name":
      "Zhuojin Li"}, {"authorId": "7250999", "name": "M. Vieira"}, {"authorId": "1747970",
      "name": "R. Govindan"}, {"authorId": "144637058", "name": "B. Raghavan"}]},
      {"paperId": "048f5933dc36b0b9125a11bad24c6826226ec383", "externalIds": {"DOI":
      "10.14529/secur220209", "CorpusId": 250139605}, "corpusId": 250139605, "publicationVenue":
      {"id": "f48f932e-6a70-4af5-91ec-6ec48c236085", "name": "Journal of the Ural
      Federal district Information security", "type": "journal", "alternate_names":
      ["J Ural Fed dist Inf secur"], "issn": "2225-5435", "url": "http://www.info-secur.ru/"},
      "url": "https://www.semanticscholar.org/paper/048f5933dc36b0b9125a11bad24c6826226ec383",
      "title": "SECURITY IN KUBERNETES: BEST PRACTICES AND SECURITY ANALYSIS", "abstract":
      null, "venue": "Journal of the Ural Federal district Information security",
      "year": 2022, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://info-secur.ru/index.php/ojs/article/download/373/334/",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Political Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "Journal of the Ural Federal District. Information security"}, "citationStyles":
      {"bibtex": "@Article{Darwesh2022SECURITYIK,\n author = {G. Darwesh and Jaafar
      Hammoud and A. A. Vorobeva},\n booktitle = {Journal of the Ural Federal district
      Information security},\n journal = {Journal of the Ural Federal District. Information
      security},\n title = {SECURITY IN KUBERNETES: BEST PRACTICES AND SECURITY ANALYSIS},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2166803790", "name": "G. Darwesh"},
      {"authorId": "2174152953", "name": "Jaafar Hammoud"}, {"authorId": "2071675598",
      "name": "A. A. Vorobeva"}]}, {"paperId": "049134632809f2272efa514f31455445c0dd719e",
      "externalIds": {"DBLP": "conf/vissoft/BalreiraAP23", "DOI": "10.1109/VISSOFT60811.2023.00011",
      "CorpusId": 266385300}, "corpusId": 266385300, "publicationVenue": {"id": "74f205c9-3a50-4243-a717-32ef84991aa1",
      "name": "IEEE Working Conference on Software Visualization", "type": "conference",
      "alternate_names": ["Vis Softw Underst Anal", "IEEE Work Conf Softw Vis", "VISSOFT",
      "Visualizing Software for Understanding and Analysis"]}, "url": "https://www.semanticscholar.org/paper/049134632809f2272efa514f31455445c0dd719e",
      "title": "Visualizing Kubernetes Distributed Systems: An Exploratory Study",
      "abstract": "Distributed applications running on virtualization- based systems
      and cloud computing have become popular solutions, allowing developers to focus
      on application logic rather than dealing with the complexities of distributed
      systems. However, these applications often become increasingly complex, presenting
      multiple management challenges. To address this issue, software visualization
      approaches offer valuable solutions by pro-viding real-time insights into resources
      and their functionalities, offering a comprehensive overview. This study aims
      to analyze and evaluate existing software visualization tools for distributed
      applications on the Kubernetes platform. The objective is to comprehensively
      examine these tools'' features, capabilities, and limitations to understand
      their effectiveness in visualizing complex distributed systems. Our findings
      provide valuable insights into the strengths and weaknesses of the available
      visualization tools, enabling researchers and practitioners to make informed
      decisions and advancements in software visualization for distributed applications
      on the Kubernetesplatform. Our research identified eight Kubernetes visualization
      tools, which were examined and compared based on relevant char-acteristics related
      to distributed applications and software vi-sualization standards. However,
      it is worth noting that despite the excellent work done by the community in
      establishing these first proposals, these tools currently only support, on average,
      a visualization of 9 % of the total resource types available, as mentioned in
      the official documentation. Therefore, we propose guidelines followed by a synthesized
      visualization that can guide further research and development in this area.
      Our study will assist users in selecting the most suitable Kubernetes visualization
      tool and encourage researchers and the community to explore new approaches in
      Kubernetes visualization.", "venue": "IEEE Working Conference on Software Visualization",
      "year": 2023, "referenceCount": 41, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference",
      "Review"], "publicationDate": "2023-10-01", "journal": {"name": "2023 IEEE Working
      Conference on Software Visualization (VISSOFT)", "pages": "12-22"}, "citationStyles":
      {"bibtex": "@Article{Balreira2023VisualizingKD,\n author = {D. G. Balreira and
      Thiago da Silva Ara\u00fajo and Fabio Petrillo},\n booktitle = {IEEE Working
      Conference on Software Visualization},\n journal = {2023 IEEE Working Conference
      on Software Visualization (VISSOFT)},\n pages = {12-22},\n title = {Visualizing
      Kubernetes Distributed Systems: An Exploratory Study},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "29396394", "name": "D. G. Balreira"}, {"authorId":
      "2280908777", "name": "Thiago da Silva Ara\u00fajo"}, {"authorId": "2275400300",
      "name": "Fabio Petrillo"}]}, {"paperId": "04a9104bec18df7efdb6f62ca88bd5554cd4d0ac",
      "externalIds": {"PubMedCentral": "8011604", "DOI": "10.1007/978-1-4842-5611-4_9",
      "CorpusId": 232480333}, "corpusId": 232480333, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/04a9104bec18df7efdb6f62ca88bd5554cd4d0ac",
      "title": "Routing and Transformation", "abstract": null, "venue": "Advanced
      Platform Development with Kubernetes", "year": 2020, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2020-09-18", "journal": {"name":
      "Advanced Platform Development with Kubernetes", "pages": "337 - 378"}, "citationStyles":
      {"bibtex": "@Article{Johnston2020RoutingAT,\n author = {Craig Johnston},\n booktitle
      = {Advanced Platform Development with Kubernetes},\n journal = {Advanced Platform
      Development with Kubernetes},\n pages = {337 - 378},\n title = {Routing and
      Transformation},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2067498591",
      "name": "Craig Johnston"}]}, {"paperId": "04dd9cedda0485c1429c155c15db4c5daad60fa8",
      "externalIds": {"DBLP": "journals/jsac/AlmeidaBHHDBC24", "ArXiv": "2301.02760",
      "DOI": "10.1109/JSAC.2023.3336159", "CorpusId": 255546432}, "corpusId": 255546432,
      "publicationVenue": {"id": "68f20e73-515e-4c73-9cd5-5684926b45f7", "name": "IEEE
      Journal on Selected Areas in Communications", "type": "journal", "alternate_names":
      ["IEEE J Sel Area Commun"], "issn": "0733-8716", "url": "http://www.comsoc.org/jsac/",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=49", "https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?puNumber=49"]},
      "url": "https://www.semanticscholar.org/paper/04dd9cedda0485c1429c155c15db4c5daad60fa8",
      "title": "RIC-O: Efficient Placement of a Disaggregated and Distributed RAN
      Intelligent Controller With Dynamic Clustering of Radio Nodes", "abstract":
      "The Radio Access Network (RAN) is the segment of cellular networks that provides
      wireless connectivity to end-users. The O-RAN Alliance has been transforming
      the RAN industry by proposing open RAN specifications and the programmable Non-Real-Time
      and Near-Real-Time RAN Intelligent Controllers (Non-RT RIC and Near-RT RIC).
      Both RICs provide platforms for running applications called rApps and xApps,
      respectively, to optimize the RAN behavior. We investigate the disaggregation
      of the Near-RT RIC into components that meet stringent latency requirements
      while presenting a cost-effective solution. For example, the O-RAN Signalling
      Storm Protection requires the Near-RT RIC to support end-to-end control loop
      latencies as low as 10 ms. We propose the novel RIC Orchestrator (RIC-O) that
      optimizes the deployment of the Near-RT RIC components across the cloud-edge
      continuum. Edge computing nodes often present limited resources and are expensive
      compared to cloud computing. Performance-critical components of Near-RT RIC
      and certain xApps should run at the edge while other components can run on the
      cloud. Furthermore, RIC-O employs an efficient strategy to react to sudden changes
      and re-deploy components dynamically. The proposal is evaluated both analytically
      and through real-world experiments in an extended Kubernetes deployment implementing
      RIC-O and the disaggregated Near-RT RIC.", "venue": "IEEE Journal on Selected
      Areas in Communications", "year": 2023, "referenceCount": 26, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/2301.02760", "status": "GREEN"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-01-07", "journal": {"name": "IEEE Journal on Selected Areas in Communications",
      "pages": "446-459", "volume": "42"}, "citationStyles": {"bibtex": "@Article{Almeida2023RICOEP,\n
      author = {G. M. Almeida and G. Z. Bruno and Alexandre Huff and M. Hiltunen and
      E. P. Duarte and C. Both and K. Cardoso},\n booktitle = {IEEE Journal on Selected
      Areas in Communications},\n journal = {IEEE Journal on Selected Areas in Communications},\n
      pages = {446-459},\n title = {RIC-O: Efficient Placement of a Disaggregated
      and Distributed RAN Intelligent Controller With Dynamic Clustering of Radio
      Nodes},\n volume = {42},\n year = {2023}\n}\n"}, "authors": [{"authorId": "1663911303",
      "name": "G. M. Almeida"}, {"authorId": "2142639355", "name": "G. Z. Bruno"},
      {"authorId": "2068830567", "name": "Alexandre Huff"}, {"authorId": "2530540",
      "name": "M. Hiltunen"}, {"authorId": "144970017", "name": "E. P. Duarte"}, {"authorId":
      "1986311", "name": "C. Both"}, {"authorId": "3215994", "name": "K. Cardoso"}]},
      {"paperId": "04f668e27d7b09494a3cfd0bd2222ac5b5ae002c", "externalIds": {"MAG":
      "3111611961", "DBLP": "journals/corr/abs-2006-10805", "ArXiv": "2006.10805",
      "DOI": "10.1109/SMART-TECH49988.2020.00049", "CorpusId": 219956145}, "corpusId":
      219956145, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/04f668e27d7b09494a3cfd0bd2222ac5b5ae002c",
      "title": "Pervasive Communications Technologies For Managing Pandemics", "abstract":
      "Pandemics always have had serious consequences unless they were effectively
      contained. Recent experiences with COVID-19 show that by using a smart and swift
      approach to deal with pandemics, avoids overwhelming of healthcare systems,
      and reduces loss of precious life. This paper is about using smart technologies
      such as Mobile Edge Clouds (MEC), Internet of Things (IoT), and Artificial Intelligence
      (AI), as an approach to effectively manage pandemics. IoT provides pervasive
      connectivity among various devices and can be used for collecting information
      such as location and symptoms of potentially infected individuals. MECs provide
      cloud services on the edge, integrating IoT infrastructure and execution of
      sophisticated AI algorithms in the Cloud. In this paper, we develop a prototype
      to demonstrate the convergence of pervasive technologies to support research
      in managing pandemics. Low-cost Single Board Computers (SBC) based clusters
      are integrated within MEC to support remote medical teams in the field. The
      prototype implements a lightweight Docker container orchestrated by Kubernetes
      eco-system which is deployed on the clusters. The prototype successfully demonstrates
      that mobile medical facilities can utilize the proposed solution to collect
      information and execute AI algorithms while on the go. Finally, we present a
      discussion on the role of converging pervasive technologies on managing pandemics.",
      "venue": "2020 First International Conference of Smart Systems and Emerging
      Technologies (SMARTTECH)", "year": 2020, "referenceCount": 25, "citationCount":
      3, "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://ieeexplore.ieee.org/ielx7/9283746/9283747/09283796.pdf", "status":
      "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Medicine", "source": "s2-fos-model"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2020-06-18", "journal": {"name": "2020 First
      International Conference of Smart Systems and Emerging Technologies (SMARTTECH)",
      "pages": "171-176"}, "citationStyles": {"bibtex": "@Article{Ilyas2020PervasiveCT,\n
      author = {Mohammad Ilyas and B. Qureshi},\n booktitle = {2020 First International
      Conference of Smart Systems and Emerging Technologies (SMARTTECH)},\n journal
      = {2020 First International Conference of Smart Systems and Emerging Technologies
      (SMARTTECH)},\n pages = {171-176},\n title = {Pervasive Communications Technologies
      For Managing Pandemics},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2151935853",
      "name": "Mohammad Ilyas"}, {"authorId": "145100089", "name": "B. Qureshi"}]},
      {"paperId": "051fe8f42db481f0d04d663d221b9f6e47ba0373", "externalIds": {"MAG":
      "3107470464", "DOI": "10.1109/CVIDL51233.2020.00-47", "CorpusId": 227278490},
      "corpusId": 227278490, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/051fe8f42db481f0d04d663d221b9f6e47ba0373",
      "title": "Application Research of Docker Based on Mesos Application Container
      Cluster", "abstract": "With the increasing maturity of docker container virtualization
      technology, the technology based on Docker application container cluster is
      gradually moving towards a production environment. How to realize efficient
      resource utilization and provide a highly available supporting environment for
      complex distributed applications deployed in Docker application container cluster
      has become a new challenge for enterprise IT resource management. To meet the
      above needs, the industry has introduced a number of open source Docker application
      container cluster management tools, represented by Kubernetes and Mesos, which
      have received extensive attention. Based on the above background, this paper
      uses MVC development mode and Mosos application container cluster management
      tool to simulate the system verification and login process in terms of cluster
      architecture, system design, implementation and testing, and makes a comprehensive
      description of resource scheduling and application container cluster based on
      docker. It is mainly used to verify the communication of Docker container in
      application cluster and the influence of system resources on service response
      time. At present, the system has been tested in both function and performance.
      The test results show that the system is feasible. The application container
      built based on Mesos can ensure normal communication between Docker containers,
      and the impact speed of the program can be improved to a certain extent by modifying
      resource scheduling parameters, which provides strong support for further study
      and use.", "venue": "2020 International Conference on Computer Vision, Image
      and Deep Learning (CVIDL)", "year": 2020, "referenceCount": 0, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2020-07-01", "journal": {"name": "2020 International
      Conference on Computer Vision, Image and Deep Learning (CVIDL)", "pages": "476-479"},
      "citationStyles": {"bibtex": "@Conference{Li2020ApplicationRO,\n author = {Xiaolian
      Li and Yuling Jiang and Yu Ding and Daiming Wei and Xianying Ma and Wenling
      Li},\n booktitle = {2020 International Conference on Computer Vision, Image
      and Deep Learning (CVIDL)},\n journal = {2020 International Conference on Computer
      Vision, Image and Deep Learning (CVIDL)},\n pages = {476-479},\n title = {Application
      Research of Docker Based on Mesos Application Container Cluster},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "50079053", "name": "Xiaolian Li"}, {"authorId": "1995843011",
      "name": "Yuling Jiang"}, {"authorId": "2111068976", "name": "Yu Ding"}, {"authorId":
      "152151379", "name": "Daiming Wei"}, {"authorId": "2211954922", "name": "Xianying
      Ma"}, {"authorId": "2108785437", "name": "Wenling Li"}]}, {"paperId": "053cdd5e45fdb97f4d425f56e1b2dae51a938a6b",
      "externalIds": {"MAG": "2973495128", "DOI": "10.14529/secur190201", "CorpusId":
      203704203}, "corpusId": 203704203, "publicationVenue": {"id": "f48f932e-6a70-4af5-91ec-6ec48c236085",
      "name": "Journal of the Ural Federal district Information security", "type":
      "journal", "alternate_names": ["J Ural Fed dist Inf secur"], "issn": "2225-5435",
      "url": "http://www.info-secur.ru/"}, "url": "https://www.semanticscholar.org/paper/053cdd5e45fdb97f4d425f56e1b2dae51a938a6b",
      "title": "Providing fault tolerance for microservice architectures in Kubernetes,
      the container orchestration engine", "abstract": null, "venue": "Journal of
      the Ural Federal district Information security", "year": 2019, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "Journal
      of the Ural Federal District  Information security"}, "citationStyles": {"bibtex":
      "@Article{Belov2019ProvidingFT,\n author = {D. P. Belov and \u00abE-soft\u00bb
      Ltd. \u0430 and Tyumen Russia let Pobedy St. and I. Zulkarneev and R. V. Kramarenko
      and I. Pelevin and \u00abE-soft\u00bb Ltd. \u0430 Server interfaces specialist},\n
      booktitle = {Journal of the Ural Federal district Information security},\n journal
      = {Journal of the Ural Federal District  Information security},\n title = {Providing
      fault tolerance for microservice architectures in Kubernetes, the container
      orchestration engine},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2057351054",
      "name": "D. P. Belov"}, {"authorId": null, "name": "\u00abE-soft\u00bb Ltd.
      \u0430"}, {"authorId": null, "name": "Tyumen Russia let Pobedy St."}, {"authorId":
      "1396912772", "name": "I. Zulkarneev"}, {"authorId": "1415840009", "name": "R.
      V. Kramarenko"}, {"authorId": "35616814", "name": "I. Pelevin"}, {"authorId":
      null, "name": "\u00abE-soft\u00bb Ltd. \u0430 Server interfaces specialist"}]},
      {"paperId": "059162094ef9b6a80fe98b59f47f7cbad081a3f1", "externalIds": {"DBLP":
      "conf/wpmc/TufeanuMVPL22", "DOI": "10.1109/WPMC55625.2022.10014753", "CorpusId":
      256034263}, "corpusId": 256034263, "publicationVenue": {"id": "5673b7e3-0aae-4472-8238-91f08a5e32f8",
      "name": "International Symposium on Wireless Personal Multimedia Communications",
      "type": "conference", "alternate_names": ["WPMC", "Wireless Personal Multimedia
      Communications", "Wirel Pers Multimedia Commun", "Int Symp Wirel Pers Multimedia
      Commun"], "url": "http://www.wikicfp.com/cfp/program?id=3148"}, "url": "https://www.semanticscholar.org/paper/059162094ef9b6a80fe98b59f47f7cbad081a3f1",
      "title": "Building an Open Source Containerized 5G SA Network through Docker
      and Kubernetes", "abstract": "Automating software orchestration and service
      development represents the newest trend in the development of fifth generation
      (5G) core network (CN) as it enables flexible and scalable service deployment.
      The building blocks for such a trend include Containers, Docker, Kubernetes,
      and other orchestration methods that facilitate easy scaling, management and
      control, load balancing, and personalized quality of service. In this paper,
      we develop a containerized 5G standalone (SA) network, building two types of
      network topologies for 5G SA deployment based on the concepts of 5G cloud network
      functions, Docker containers and Linux virtualization. Based on our implementation
      of both Minimalist Deployment and Basic Deployment, an assessment on the attach
      procedure is performed through next generation application protocol (NGAP) filtering
      along with subscriber information. Moreover, emulated transmission control protocol
      (TCP)/user datagram protocol (UDP) traffic is injected into the network and
      its performance is evaluated based on metrics such as traffic volume and data
      rate for both uplink and downlink.", "venue": "International Symposium on Wireless
      Personal Multimedia Communications", "year": 2022, "referenceCount": 17, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2022-10-30", "journal": {"name": "2022
      25th International Symposium on Wireless Personal Multimedia Communications
      (WPMC)", "pages": "381-386"}, "citationStyles": {"bibtex": "@Article{Tufeanu2022BuildingAO,\n
      author = {Larisa-Mihaela Tufeanu and Alexandru Martian and Marius Constantin
      Vochin and Constantin-Laurentiu Paraschiv and F. Li},\n booktitle = {International
      Symposium on Wireless Personal Multimedia Communications},\n journal = {2022
      25th International Symposium on Wireless Personal Multimedia Communications
      (WPMC)},\n pages = {381-386},\n title = {Building an Open Source Containerized
      5G SA Network through Docker and Kubernetes},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2202192380", "name": "Larisa-Mihaela Tufeanu"}, {"authorId":
      "2547989", "name": "Alexandru Martian"}, {"authorId": "3039332", "name": "Marius
      Constantin Vochin"}, {"authorId": "2202196026", "name": "Constantin-Laurentiu
      Paraschiv"}, {"authorId": "6531417", "name": "F. Li"}]}, {"paperId": "05ad5e6c697f33dea3f614606bc4cb6e5bcac14d",
      "externalIds": {"CorpusId": 260757508}, "corpusId": 260757508, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/05ad5e6c697f33dea3f614606bc4cb6e5bcac14d",
      "title": "Scaling a Declarative Cluster Manager Architecture with Query Optimization
      Techniques (Technical Report)", "abstract": "Cluster managers play a crucial
      role in data centers by distribut-ing workloads among infrastructure resources.
      Declarative Cluster Managers (DCM) is a new cluster management architecture
      that allows users to express placement policies declaratively using SQL-like
      queries. In this paper, we share our experiences scaling up this architecture
      from moderate-sized enterprise clusters (hundreds or thousands of nodes) to
      hyperscale clusters (tens of thousands of nodes) through the lens of query optimization.
      To do so, we first formally specify DCM\u2019s declarative language, C-SQL,
      which introduces new semantics such as variable columns on top of standard SQL
      to express constraint optimization problems. Given cluster management logic
      specified as C-SQL programs, we explore and adapt techniques from classic query
      optimization, namely incremental view maintenance and predicate pushdown, to
      improve the execution efficiency of the relation and constraint components of
      C-SQL programs. We evaluate the effectiveness of our optimizations through a
      case study of building Kubernetes schedulers using C-SQL. Our optimizations
      demonstrated an almost 3000 \u00d7 speed up in database latency and reduced
      the size of optimization problems by as much as 1/300 of the original without
      affecting feasibility", "venue": "", "year": 2022, "referenceCount": 41, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Rong2022ScalingAD,\n
      author = {Kexin Rong and M. Budiu and Athinagoras Skiadopoulos and L. Suresh
      and Amy Tai},\n title = {Scaling a Declarative Cluster Manager Architecture
      with Query Optimization Techniques (Technical Report)},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "7804757", "name": "Kexin Rong"}, {"authorId": "1707533",
      "name": "M. Budiu"}, {"authorId": "1580175613", "name": "Athinagoras Skiadopoulos"},
      {"authorId": "49060428", "name": "L. Suresh"}, {"authorId": "37531541", "name":
      "Amy Tai"}]}, {"paperId": "05b89e7959ed4a496c2e39db44e101361762eb36", "externalIds":
      {"MAG": "2981119325", "CorpusId": 208127206}, "corpusId": 208127206, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/05b89e7959ed4a496c2e39db44e101361762eb36",
      "title": "Containerizing ONAP using Kubernetes and Docker", "abstract": "This
      document explains the deployment of virtualized network functions in a private
      cloud through ONAP, together with the architecture used, the machines employed
      and the software required. ONAP (Open Networking Automation Platform) is an
      open source project of the Linux Foundation, which provides a platform for real-time
      orchestration and automation of physical and virtual network functions.ONAP
      allows designing, orchestrating and managing all the elements related to virtualized
      network functions. In order to deploy ONAP, we acquired and installed a cloud
      infrastructure from scratch following the latest market best practices, which
      included setting up the servers and network devices, configuring their NICs
      and installing all the software required: OpenStack, ONAP, etc. Moreover, these
      software solutions also have to be properly configured and installed, something
      that will be clarified in this paper along with the configuration of the cloud
      network. ONAP, being a novel solution, is not fully developed. Meaning it has
      presented many challenges and setbacks we have had to overcome in order to deploy
      it successfully in our environment. The final goal of this project is to create
      an environment in a private cloud with working virtualized network functions
      and to serve as a guide for other people who desire to deploy ONAP, overcoming
      all the obstacles we had to face and providing solutions, or at least, alternatives
      to the plethora of issues they might stumble across, just as we did. Everything
      discussed in this document can be replicated in environments of greater scope
      than the ones defined in the paper, to the point that what is explained can
      even be applied in production scenarios by telephone operators.", "venue": "",
      "year": 2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2019-07-23",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Marin2019ContainerizingOU,\n
      author = {Albert Toro Marin},\n title = {Containerizing ONAP using Kubernetes
      and Docker},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2056554151",
      "name": "Albert Toro Marin"}]}, {"paperId": "05e8a13e0a2aaa83ffcc5580fd4cd9f895652232",
      "externalIds": {"DBLP": "conf/percom/BenedettiFRS22", "DOI": "10.1109/PerComWorkshops53856.2022.9767437",
      "CorpusId": 248546739}, "corpusId": 248546739, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/05e8a13e0a2aaa83ffcc5580fd4cd9f895652232",
      "title": "Reinforcement Learning Applicability for Resource-Based Auto-scaling
      in Serverless Edge Applications", "abstract": "Serverless computing is an alternative
      deployment paradigm for cloud computing platforms, aimed to provide scalability
      and cost reduction without requiring any additional deployment overhead from
      developers. Generally, open-source serverless computing platforms rely on two
      auto-scaling approaches: workload-based and resource-based. In the former, a
      designated algorithm scales instances according to the number of incoming requests.
      In the latter, instances are scaled when a certain resource usage limit, such
      as maximum Central Processing Unit (CPU) utilization, is reached. Resource-based
      auto-scaling is usually implemented leveraging Kubernetes Horizontal Pod Autoscaler
      (HPA). In this work, we investigate the applicability of a reinforcement-based
      approach to resource-based auto-scaling in OpenFaaS, the most widely used open-source
      serverless platform. Serverless technologies are particularly convenient when
      dealing with edge computing on constrained devices or resource-limited machines.
      Our experimental analysis has been conducted on constrained Kubernetes-based
      nodes, to simulate such an edge application scenario. Its preliminary results
      show that our proposed model learns an effective scaling policy, based on CPU
      utilization, to provide minimal service latency within a limited number of iterations.",
      "venue": "2022 IEEE International Conference on Pervasive Computing and Communications
      Workshops and other Affiliated Events (PerCom Workshops)", "year": 2022, "referenceCount":
      19, "citationCount": 5, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-03-21",
      "journal": {"name": "2022 IEEE International Conference on Pervasive Computing
      and Communications Workshops and other Affiliated Events (PerCom Workshops)",
      "pages": "674-679"}, "citationStyles": {"bibtex": "@Article{Benedetti2022ReinforcementLA,\n
      author = {Priscilla Benedetti and M. Femminella and G. Reali and K. Steenhaut},\n
      booktitle = {2022 IEEE International Conference on Pervasive Computing and Communications
      Workshops and other Affiliated Events (PerCom Workshops)},\n journal = {2022
      IEEE International Conference on Pervasive Computing and Communications Workshops
      and other Affiliated Events (PerCom Workshops)},\n pages = {674-679},\n title
      = {Reinforcement Learning Applicability for Resource-Based Auto-scaling in Serverless
      Edge Applications},\n year = {2022}\n}\n"}, "authors": [{"authorId": "1978665526",
      "name": "Priscilla Benedetti"}, {"authorId": "1705999", "name": "M. Femminella"},
      {"authorId": "1690936", "name": "G. Reali"}, {"authorId": "1746856", "name":
      "K. Steenhaut"}]}, {"paperId": "05fab3d73fa3e730a8138201bc494a58cfec8121", "externalIds":
      {"DOI": "10.1007/978-1-4842-9042-2", "CorpusId": 255682299}, "corpusId": 255682299,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/05fab3d73fa3e730a8138201bc494a58cfec8121",
      "title": "Practical Debugging at Scale: Cloud Native Debugging in Kubernetes
      and Production", "abstract": null, "venue": "", "year": 2023, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Book"], "publicationDate": null, "journal":
      {"name": "Practical Debugging at Scale"}, "citationStyles": {"bibtex": "@Book{Almog2023PracticalDA,\n
      author = {Shai Almog},\n journal = {Practical Debugging at Scale},\n title =
      {Practical Debugging at Scale: Cloud Native Debugging in Kubernetes and Production},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2200445457", "name": "Shai Almog"}]},
      {"paperId": "060cd9859937595bf0fe6305330582f897773ad0", "externalIds": {"DOI":
      "10.1109/ICAC54203.2021.9671185", "CorpusId": 245881961}, "corpusId": 245881961,
      "publicationVenue": {"id": "28a83bf1-b6e5-416f-8c5a-fdc53e54f3a1", "name": "International
      Conference on Automation and Computing", "type": "conference", "alternate_names":
      ["IEEE International Conference on Autonomic Computing", "IEEE Int Conf Auton
      Comput", "Int Conf Autom Comput", "ICAC", "International Conference on Autonomic
      Computing", "Int Conf Auton Comput"], "url": "http://www.wikicfp.com/cfp/program?id=1269",
      "alternate_urls": ["https://acsos.github.io/"]}, "url": "https://www.semanticscholar.org/paper/060cd9859937595bf0fe6305330582f897773ad0",
      "title": "Database Scaling on Kubernetes", "abstract": "Kubernetes is a hot
      topic in the field of Software Engineering and Distributed Computing. When compared
      to previous methods, the principle underlying Kubernetes, which is containerization,
      has altered how applications are created and delivered. However, when considering
      the state, particularly the databases, with Kubernetes, there is a scalability
      and data synchronization barrier. The most frequently used approach is to host
      the database outside of Kubernetes and maintain connectivity with the cluster.
      Kubernetes inherent capabilities are sufficient for hosting databases. But that
      requires high domain knowledge to do the configurations and maintain the databases
      on Kubernetes. The purpose of this research is to fulfil that gap by introducing
      a solution for managing highly available databases on Kubernetes. The solution
      is limited to managing PostgreSQL databases on Kubernetes using auto-scaling.
      A novel algorithm is proposed for auto-scaling, as previous algorithms do not
      take database requests into account when determining the scaling need. The drawbacks
      of data synchronization and auto-scaling will be solved in this research, and
      the end user will be able to access the service without interruption for the
      majority of the time, as the final solution makes the database cluster highly
      available for the service layer.", "venue": "International Conference on Automation
      and Computing", "year": 2021, "referenceCount": 0, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2021-12-09", "journal": {"name": "2021 3rd International Conference on Advancements
      in Computing (ICAC)", "pages": "258-263"}, "citationStyles": {"bibtex": "@Conference{Perera2021DatabaseSO,\n
      author = {H. Perera and T. De Silva and W. M. D. C. Wasala and R. M. P. R. L.
      Rajapakshe and N. Kodagoda and Udara Srimath S. Samaratunge and H. Jayanandana},\n
      booktitle = {International Conference on Automation and Computing},\n journal
      = {2021 3rd International Conference on Advancements in Computing (ICAC)},\n
      pages = {258-263},\n title = {Database Scaling on Kubernetes},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2149706213", "name": "H. Perera"}, {"authorId": "1733568116",
      "name": "T. De Silva"}, {"authorId": "50352591", "name": "W. M. D. C. Wasala"},
      {"authorId": "2149707150", "name": "R. M. P. R. L. Rajapakshe"}, {"authorId":
      "30203786", "name": "N. Kodagoda"}, {"authorId": "2149706392", "name": "Udara
      Srimath S. Samaratunge"}, {"authorId": "1396295599", "name": "H. Jayanandana"}]},
      {"paperId": "0617b9c86c30b46275292d6b09886aed8e236f1f", "externalIds": {"DOI":
      "10.1109/com-it-con54601.2022.9850786", "CorpusId": 251608731}, "corpusId":
      251608731, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0617b9c86c30b46275292d6b09886aed8e236f1f",
      "title": "Prevalence of GitOps, DevOps in Fast CI/CD Cycles", "abstract": "Today,
      when we are surrounded by technology, software and applications are making our
      lives more efficient and easy because of the operations and processes controlled
      by them. Since the technology is constantly changing at a very high pace, improving
      and modifying with each development, there is a constant need of is faster and
      more frequent delivery of the software and applications. Today, most software
      and applications are built in such a way that they could run across multiple
      operating environments. Software development is performed using agile principles
      and the most critical part of it is Continuous Delivery and Continuous Integration
      (CI/CD). CI/CD aims at automating the process of testing, building, and deploying
      the commitments made by the developer to the code repository. The use of Container-based
      applications solves a number of complex problems that are found on CI/CD such
      as portability, elasticity, visibility, and version control. This modular approach
      enables a simpler, faster, more secure, and more efficient way of development
      by more focused teams responsible for specific containers. In this context,
      a new point of interest in the development process, GitOps, which is more agile,
      reliable, fast, and efficient in its approach towards better performance levels
      with cloud-native. The main objective of this paper is to understand the Kubernetes
      GitOps process by day 2 operations, to access the benefits of implementing GitOps
      in the Kubernetes environment, and to implement Kubernetes GitOps on AWS.",
      "venue": "2022 International Conference on Machine Learning, Big Data, Cloud
      and Parallel Computing (COM-IT-CON)", "year": 2022, "referenceCount": 0, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2022-05-26", "journal":
      {"name": "2022 International Conference on Machine Learning, Big Data, Cloud
      and Parallel Computing (COM-IT-CON)", "pages": "589-596", "volume": "1"}, "citationStyles":
      {"bibtex": "@Conference{Gupta2022PrevalenceOG,\n author = {Saumya Gupta and
      Madhulika Bhatia and Meenakshi Memoria and Preeti Manani},\n booktitle = {2022
      International Conference on Machine Learning, Big Data, Cloud and Parallel Computing
      (COM-IT-CON)},\n journal = {2022 International Conference on Machine Learning,
      Big Data, Cloud and Parallel Computing (COM-IT-CON)},\n pages = {589-596},\n
      title = {Prevalence of GitOps, DevOps in Fast CI/CD Cycles},\n volume = {1},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2118972958", "name": "Saumya
      Gupta"}, {"authorId": "30939814", "name": "Madhulika Bhatia"}, {"authorId":
      "2181704295", "name": "Meenakshi Memoria"}, {"authorId": "116046351", "name":
      "Preeti Manani"}]}, {"paperId": "062d840f65b2ab66b7a5ff30b14bef3eadea1849",
      "externalIds": {"MAG": "2992107995", "DOI": "10.1007/978-981-15-0372-6_27",
      "CorpusId": 213702500}, "corpusId": 213702500, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/062d840f65b2ab66b7a5ff30b14bef3eadea1849",
      "title": "Proposed Model for Distributed Storage Automation System Using Kubernetes
      Operators", "abstract": null, "venue": "", "year": 2019, "referenceCount": 10,
      "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Engineering", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "pages": "341-351", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Sharma2019ProposedMF,\n author
      = {Ashish Sharma and Sarita Yadav and N. Gupta and Shafali Dhall and S. Rastogi},\n
      pages = {341-351},\n title = {Proposed Model for Distributed Storage Automation
      System Using Kubernetes Operators},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2143575302", "name": "Ashish Sharma"}, {"authorId": "151502956", "name": "Sarita
      Yadav"}, {"authorId": "2107199808", "name": "N. Gupta"}, {"authorId": "144123565",
      "name": "Shafali Dhall"}, {"authorId": "2066463838", "name": "S. Rastogi"}]},
      {"paperId": "0676c92d1e254a6dc1c162123b5628c4aaa53163", "externalIds": {"MAG":
      "3043757251", "DBLP": "conf/ccgrid/TokaDFS20", "DOI": "10.1109/CCGrid49817.2020.00-33",
      "CorpusId": 220606332}, "corpusId": 220606332, "publicationVenue": {"id": "57f970eb-366a-4bfa-aa06-2ff70d834806",
      "name": "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing",
      "type": "conference", "alternate_names": ["Clust Comput Grid", "CCGRID", "IEEE/ACM
      Int Symp Clust Cloud Grid Comput", "IEEE/ACM International Symposium Cluster,
      Cloud and Grid Computing", "Cluster Computing and the Grid", "IEEE/ACM Int Symp
      Clust Cloud Internet Comput"], "url": "http://www.buyya.com/ccgrid/"}, "url":
      "https://www.semanticscholar.org/paper/0676c92d1e254a6dc1c162123b5628c4aaa53163",
      "title": "Adaptive AI-based auto-scaling for Kubernetes", "abstract": "Kubernetes,
      the prevalent container orchestrator for cloud-deployed web applications, offers
      an automatic scaling feature for the application provider in order to meet the
      ever-changing amount of demand from its clients. This auto-scaling service,
      however, requires a seemingly difficult parameter set to be customized by the
      application provider, and those management parameters are static while incoming
      web request dynamics often change, not to mention the fact that scaling decisions
      are inherently reactive, instead of being proactive. Therefore we set the ultimate
      goal of making cloud-based web applications\u2019 management easier and more
      effective.We propose a Kubernetes scaling engine that makes the auto-scaling
      decisions apt for handling the actual variability of incoming requests. In this
      engine various AI-based forecast methods compete with each other via a short-term
      evaluation loop in order to always give the lead to the method that suits best
      the actual request dynamics, as soon as possible. We also introduce a compact
      management parameter for the cloud-tenant application provider in order to easily
      set their sweet spot in the resource over-provisioning vs. SLA violation trade-off.The
      multi-forecast scaling engine and the proposed management parameter are evaluated
      both in simulations and with measurements on our collected web traces to show
      the improved quality of fitting provisioned resources to service demand. We
      find that with just a few competing forecast methods, our auto-scaling engine,
      implemented in Kubernetes, results in significantly less lost requests with
      slightly more provisioned resources compared to the default baseline.", "venue":
      "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing",
      "year": 2020, "referenceCount": 24, "citationCount": 27, "influentialCitationCount":
      2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2020-05-01", "journal": {"name": "2020
      20th IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing
      (CCGRID)", "pages": "599-608"}, "citationStyles": {"bibtex": "@Article{Toka2020AdaptiveAA,\n
      author = {L\u00e1szl\u00f3 Toka and Gergely Dobreff and Bal\u00e1zs Fodor and
      Bal\u00e1zs Sonkoly},\n booktitle = {IEEE/ACM International Symposium on Cluster,
      Cloud and Internet Computing},\n journal = {2020 20th IEEE/ACM International
      Symposium on Cluster, Cloud and Internet Computing (CCGRID)},\n pages = {599-608},\n
      title = {Adaptive AI-based auto-scaling for Kubernetes},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2955111", "name": "L\u00e1szl\u00f3 Toka"}, {"authorId":
      "1820938878", "name": "Gergely Dobreff"}, {"authorId": "2065166600", "name":
      "Bal\u00e1zs Fodor"}, {"authorId": "1771457", "name": "Bal\u00e1zs Sonkoly"}]},
      {"paperId": "069e01f1b49574a765e2178a1946d81b71faaf84", "externalIds": {"ArXiv":
      "1907.01796", "DBLP": "journals/corr/abs-1907-01796", "MAG": "2954521879", "CorpusId":
      195791677}, "corpusId": 195791677, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/069e01f1b49574a765e2178a1946d81b71faaf84",
      "title": "Koalja: from Data Plumbing to Smart Workspaces in the Extended Cloud",
      "abstract": "Koalja describes a generalized data wiring or `pipeline'' platform,
      built on top of Kubernetes, for plugin user code. Koalja makes the Kubernetes
      underlay transparent to users (for a `serverless'' experience), and offers a
      breadboarding experience for development of data sharing circuitry, to commoditize
      its gradual promotion to a production system, with a minimum of infrastructure
      knowledge. Enterprise grade metadata are captured as data payloads flow through
      the circuitry, allowing full tracing of provenance and forensic reconstruction
      of transactional processes, down to the versions of software that led to each
      outcome. Koalja attends to optimizations for avoiding unwanted processing and
      transportation of data, that are rapidly becoming sustainability imperatives.
      Thus one can minimize energy expenditure and waste, and design with scaling
      in mind, especially with regard to edge computing, to accommodate an Internet
      of Things, Network Function Virtualization, and more.", "venue": "arXiv.org",
      "year": 2019, "referenceCount": 20, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2019-07-03", "journal": {"name": "ArXiv", "volume": "abs/1907.01796"}, "citationStyles":
      {"bibtex": "@Article{Burgess2019KoaljaFD,\n author = {M. Burgess and E. Prangsma},\n
      booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {Koalja: from Data Plumbing
      to Smart Workspaces in the Extended Cloud},\n volume = {abs/1907.01796},\n year
      = {2019}\n}\n"}, "authors": [{"authorId": "145907404", "name": "M. Burgess"},
      {"authorId": "66896052", "name": "E. Prangsma"}]}, {"paperId": "06a40e16b05bd4416094e087503d7b527d21fbd0",
      "externalIds": {"DBLP": "journals/corr/abs-2307-06318", "ArXiv": "2307.06318",
      "DOI": "10.48550/arXiv.2307.06318", "CorpusId": 259837295}, "corpusId": 259837295,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/06a40e16b05bd4416094e087503d7b527d21fbd0",
      "title": "SAGE - A Tool for Optimal Deployments in Kubernetes Clusters", "abstract":
      "Cloud computing has brought a fundamental transformation in how organizations
      operate their applications, enabling them to achieve affordable high availability
      of services. Kubernetes has emerged as the preferred choice for container orchestration
      and service management across many Cloud computing platforms. The scheduler
      in Kubernetes plays a crucial role in determining the placement of newly deployed
      service containers. However, the default scheduler, while fast, often lacks
      optimization, leading to inefficient service placement or even deployment failures.
      This paper introduces SAGE, a tool for optimal solutions in Kubernetes clusters
      that can also assist the Kubernetes default scheduler and any other custom scheduler
      in application deployment. SAGE computes an optimal deployment plan based on
      the constraints of the application to be deployed and the available Cloud resources.
      We show the potential benefits of using SAGE by considering test cases with
      various characteristics. It turns out that SAGE surpasses other schedulers by
      comprehensively analyzing the application demand and cluster image. This ability
      allows it to better understand the needs of the pods, resulting in consistently
      optimal solutions across all scenarios. The accompanying material of this paper
      is publicly available at https://github.com/SAGE-Project/SAGE-Predeployer.",
      "venue": "arXiv.org", "year": 2023, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/2307.06318", "status": "CLOSED"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-07-12", "journal": {"name": "ArXiv",
      "volume": "abs/2307.06318"}, "citationStyles": {"bibtex": "@Article{Luca2023SAGEA,\n
      author = {Vlad-Ioan Luca and Madalina Erascu},\n booktitle = {arXiv.org},\n
      journal = {ArXiv},\n title = {SAGE - A Tool for Optimal Deployments in Kubernetes
      Clusters},\n volume = {abs/2307.06318},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2223142169", "name": "Vlad-Ioan Luca"}, {"authorId": "2896054", "name": "Madalina
      Erascu"}]}, {"paperId": "06a5b89596a39e6776115e52008d55bf871501d0", "externalIds":
      {"MAG": "2999972497", "CorpusId": 214529191}, "corpusId": 214529191, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/06a5b89596a39e6776115e52008d55bf871501d0",
      "title": "Provisioning Object Storage In Kubernetes", "abstract": null, "venue":
      "", "year": 2020, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Rahman2020ProvisioningOS,\n
      author = {A. Rahman},\n title = {Provisioning Object Storage In Kubernetes},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "2115323815", "name": "A. Rahman"}]},
      {"paperId": "06a8b047c269cd1d549f7072d2f968d6a9590664", "externalIds": {"DOI":
      "10.1109/ICCASIT58768.2023.10351699", "CorpusId": 266235458}, "corpusId": 266235458,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/06a8b047c269cd1d549f7072d2f968d6a9590664",
      "title": "Research and implementation of onboard heterogeneous resource scheduling",
      "abstract": "For cutting-edge fields such as aerospace exploration that require
      high real-time and low power consumption, the scheduling of onboard resources
      is closely related to the configuration ability and management efficiency of
      spatial information networks. Therefore, designing a reasonable resource scheduling
      plan has great practical significance. The open-source container orchestration
      management system represented by Kubernetes cannot fully meet the needs of heterogeneous
      resource scheduling in onboard environments. It is not lightweight enough for
      onboard embedded environments, and scheduling strategies have problems such
      as a large gap between requested and actual resources, and node resource imbalance.
      Therefore, this article proposes a lightweight onboard heterogeneous resource
      scheduling scheme and designs a resource balancing scheduling algorithm based
      on historical load. Through experiments, it has been shown that this scheme
      has certain effects in improving the degree of cluster resource balancing and
      reducing resource waste.", "venue": "2023 IEEE 5th International Conference
      on Civil Aviation Safety and Information Technology (ICCASIT)", "year": 2023,
      "referenceCount": 11, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2023-10-11",
      "journal": {"name": "2023 IEEE 5th International Conference on Civil Aviation
      Safety and Information Technology (ICCASIT)", "pages": "323-327"}, "citationStyles":
      {"bibtex": "@Conference{Lu2023ResearchAI,\n author = {Xuesong Lu and Zhigang
      Li and Yucheng Li and Tao Lei and Xuanwen Zhou},\n booktitle = {2023 IEEE 5th
      International Conference on Civil Aviation Safety and Information Technology
      (ICCASIT)},\n journal = {2023 IEEE 5th International Conference on Civil Aviation
      Safety and Information Technology (ICCASIT)},\n pages = {323-327},\n title =
      {Research and implementation of onboard heterogeneous resource scheduling},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2274642696", "name": "Xuesong
      Lu"}, {"authorId": "2274450485", "name": "Zhigang Li"}, {"authorId": "2274453494",
      "name": "Yucheng Li"}, {"authorId": "2274248013", "name": "Tao Lei"}, {"authorId":
      "2274874318", "name": "Xuanwen Zhou"}]}, {"paperId": "06a90af9f3b874e29fce844ded4f96f90720c34e",
      "externalIds": {"ArXiv": "1911.02275", "DBLP": "journals/corr/abs-1911-02275",
      "MAG": "2985050913", "CorpusId": 207880630}, "corpusId": 207880630, "publicationVenue":
      {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names":
      ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/06a90af9f3b874e29fce844ded4f96f90720c34e",
      "title": "Developing a Process in Architecting Microservice Infrastructure with
      Docker, Kubernetes, and Istio", "abstract": "As an application usage grows,
      its owner scales up vertically by replacing old machines with more powerful
      ones. This methodology is expensive and leads to resource waste. In response
      to the business needs, internet giants have developed the microservice architecture,
      which lets developers divide up their application into smaller units that can
      be hosted on multiple machines, thus enabling horizontal scale up. We propose
      a triphasic incremental process to transform a traditional application into
      a microservice application that guarantees stability during the operation. Then
      we demonstrated such methodology in a prototype microservice application based
      on an existing monolithic application. First, the developer splits a monolithic
      application into atomic services and aggregated services. Second, these services
      are packaged, containerized, and then deployed on Kubernetes. During this stage,
      Istio is deployed on the Kubernetes cluster to establish pod level communications,
      delegate traffic flows and filter requests, and enable the autoscaler. Other
      external add-ons, such as database connections, are defined in service entry.
      In the last stage, we developed an algorithm guideline to minimize inter-service
      calls by compiling all needed calls into a list and perform one finalized call.
      Although it increases memory usage, it avoided the wait time incurred during
      interservice calls. We then investigated managing configurations using config
      maps, recommended a pipeline being developed to perform automatic rollover.",
      "venue": "arXiv.org", "year": 2019, "referenceCount": 15, "citationCount": 3,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-11-06", "journal": {"name": "ArXiv",
      "volume": "abs/1911.02275"}, "citationStyles": {"bibtex": "@Article{Wang2019DevelopingAP,\n
      author = {Yujing Wang and Da Ma},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n
      title = {Developing a Process in Architecting Microservice Infrastructure with
      Docker, Kubernetes, and Istio},\n volume = {abs/1911.02275},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "2143538775", "name": "Yujing Wang"}, {"authorId":
      "2087451371", "name": "Da Ma"}]}, {"paperId": "06c52cc6c6a396afb906219f925beb66142af5c8",
      "externalIds": {"DBLP": "conf/edbt/PetrouKA21", "CorpusId": 233260714}, "corpusId":
      233260714, "publicationVenue": {"id": "a2802f40-c210-444a-92bf-62245b599bb1",
      "name": "EDBT/ICDT Workshops", "type": "conference", "alternate_names": ["EDBT-ICDT",
      "EDBT/ICDT Work"]}, "url": "https://www.semanticscholar.org/paper/06c52cc6c6a396afb906219f925beb66142af5c8",
      "title": "Weighted Load Balancing Mechanisms over Streaming Big Data for Online
      Machine Learning", "abstract": "A growing number of complex applications, such
      as cloud and / or mobile computing, video on-demand and streaming big data analytics
      are influenced by the growth of users, devices and connections. At the same
      time, the microservices architecture paradigm enables software developers divide
      their application into small, independent, and loosely coupled services that
      can be hosted onmultiplemachines, thus enabling horizontal scale up. In this
      paper, we study how a weighted load balancing approach can improve application
      performance and online machine learning over streaming big data, specifically
      in Kubernetes-based environments. We introduce an automated process which prioritizes
      events by efficiently managing the communication among the interacting services
      (i.e. pods) through adaptive traffic routing and dynamic rules enforcement allowing
      to control the flow of data and API calls among them. This process guarantees
      services stability and autoscaling at runtime. We demonstrate the proposed approach
      in a prototype microservices application consisting of containerized and deployed
      pods on Kubernetes, named as Information Aware Networking Mechanisms. These
      mechanisms have been integrated into a sophisticated framework which takes into
      account the number of requests per second or the volume of data per hour and
      supports weighted load balancing mechanisms to minimize inter-pods communication
      and prioritize important events to an online machine learning model which is
      crucial for the examined application. The Information Aware Networking Mechanisms
      have been openly made available for deployment and experimentation to the research
      community to build upon.", "venue": "EDBT/ICDT Workshops", "year": 2021, "referenceCount":
      16, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": null, "journal": null, "citationStyles": {"bibtex": "@Article{Petrou2021WeightedLB,\n
      author = {Petros Petrou and Sophia Karagiorgou and D. Alexandrou},\n booktitle
      = {EDBT/ICDT Workshops},\n title = {Weighted Load Balancing Mechanisms over
      Streaming Big Data for Online Machine Learning},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2052655245", "name": "Petros Petrou"}, {"authorId": "3017262",
      "name": "Sophia Karagiorgou"}, {"authorId": "144846835", "name": "D. Alexandrou"}]},
      {"paperId": "06db2d47e544d2f0948d35d20a03023f805bf9ba", "externalIds": {"MAG":
      "2971172474", "DBLP": "conf/services/PaladeKC19", "DOI": "10.1109/SERVICES.2019.00057",
      "CorpusId": 201813150}, "corpusId": 201813150, "publicationVenue": {"id": "4d028914-1c6d-4ef5-95b5-1f1d5a2368ba",
      "name": "World Congress on Services", "type": "conference", "alternate_names":
      ["World Congr Serv", "World Congr Serv [services Soc", "World Congress on Services
      [Services Society]", "SERVICES"], "url": "http://www.servicescongress.org/"},
      "url": "https://www.semanticscholar.org/paper/06db2d47e544d2f0948d35d20a03023f805bf9ba",
      "title": "An Evaluation of Open Source Serverless Computing Frameworks Support
      at the Edge", "abstract": "The proliferation of Internet of Things (IoT) and
      the success of resource-rich cloud services have pushed the data processing
      horizon towards the edge of the network. This has the potential to address bandwidth
      costs, and latency, availability and data privacy concerns. Serverless computing,
      a cloud computing model for stateless and event-driven applications, promises
      to further improve Quality of Service (QoS) by eliminating the burden of always-on
      infrastructure through ephemeral containers. Open source serverless frameworks
      have been introduced to avoid the vendor lock-in and computation restrictions
      of public cloud platforms and to bring the power of serverless computing to
      on-premises deployments. In an IoT environment, these frameworks can leverage
      the computational capabilities of devices in the local network to further improve
      QoS of applications delivered to the user. However, these frameworks have not
      been evaluated in a resource-constrained, edge computing environment. In this
      work we evaluate four open source serverless frameworks, namely, Kubeless, Apache
      OpenWhisk, OpenFaaS, Knative. Each framework is installed on a bare-metal, single
      master, Kubernetes cluster. We use the JMeter framework to evaluate the response
      time, throughput and success rate of functions deployed using these frameworks
      under different workloads. The evaluation results are presented and open research
      opportunities are discussed.", "venue": "World Congress on Services", "year":
      2019, "referenceCount": 25, "citationCount": 58, "influentialCitationCount":
      4, "isOpenAccess": true, "openAccessPdf": {"url": "http://www.tara.tcd.ie/bitstream/2262/89839/1/main.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2019-07-01", "journal":
      {"name": "2019 IEEE World Congress on Services (SERVICES)", "pages": "206-211",
      "volume": "2642-939X"}, "citationStyles": {"bibtex": "@Article{Palade2019AnEO,\n
      author = {Andrei Palade and Aqeel H. Kazmi and Siobh\u00e1n Clarke},\n booktitle
      = {World Congress on Services},\n journal = {2019 IEEE World Congress on Services
      (SERVICES)},\n pages = {206-211},\n title = {An Evaluation of Open Source Serverless
      Computing Frameworks Support at the Edge},\n volume = {2642-939X},\n year =
      {2019}\n}\n"}, "authors": [{"authorId": "2138463", "name": "Andrei Palade"},
      {"authorId": "24419872", "name": "Aqeel H. Kazmi"}, {"authorId": "47584849",
      "name": "Siobh\u00e1n Clarke"}]}, {"paperId": "06eeb8774e0df5a6fe5ab890acca20327345c3b2",
      "externalIds": {"ArXiv": "2012.14086", "DBLP": "journals/corr/abs-2012-14086",
      "DOI": "10.1016/j.jss.2021.110924", "CorpusId": 229680055}, "corpusId": 229680055,
      "publicationVenue": {"id": "10a4a695-8417-42c7-983d-742df48b3905", "name": "Journal
      of Systems and Software", "type": "journal", "alternate_names": ["J Syst Softw"],
      "issn": "0164-1212", "url": "http://www.elsevier.com/wps/find/journaldescription.cws_home/505732/description#description",
      "alternate_urls": ["http://www.elsevier.com/wps/find/journaldescription.cws_home/505732/description",
      "http://www.sciencedirect.com/science/journal/01641212"]}, "url": "https://www.semanticscholar.org/paper/06eeb8774e0df5a6fe5ab890acca20327345c3b2",
      "title": "A Kubernetes Controller for Managing the Availability of Elastic Microservice
      Based Stateful Applications", "abstract": null, "venue": "Journal of Systems
      and Software", "year": 2020, "referenceCount": 34, "citationCount": 24, "influentialCitationCount":
      3, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2012.14086",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-12-28", "journal":
      {"name": "J. Syst. Softw.", "pages": "110924", "volume": "175"}, "citationStyles":
      {"bibtex": "@Article{Vayghan2020AKC,\n author = {Leila Abdollahi Vayghan and
      M. Saied and M. Toeroe and F. Khendek},\n booktitle = {Journal of Systems and
      Software},\n journal = {J. Syst. Softw.},\n pages = {110924},\n title = {A Kubernetes
      Controller for Managing the Availability of Elastic Microservice Based Stateful
      Applications},\n volume = {175},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "51292383", "name": "Leila Abdollahi Vayghan"}, {"authorId": "39014194", "name":
      "M. Saied"}, {"authorId": "1761847", "name": "M. Toeroe"}, {"authorId": "1707039",
      "name": "F. Khendek"}]}, {"paperId": "06fc8912ca8e044f8ac9b0a04712f62c66332313",
      "externalIds": {"DOI": "10.1109/ICCWorkshops53468.2022.9915023", "CorpusId":
      253046906}, "corpusId": 253046906, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/06fc8912ca8e044f8ac9b0a04712f62c66332313",
      "title": "Demo: A Decision Support System for Task Offloading Optimization in
      Cloud-to-Far-Edge Kubernetes Networks", "abstract": "Edge computing techniques
      together with application containerization can greatly reduce the end-to-end
      latency of delay-sensitive applications. Kubernetes is recognized as the most
      popular production-grade container orchestrator. In this paper, we demonstrate
      a decision support system (DSS) that supports custom Kubernetes quality of system
      (QoS) models, and which takes into account specific, heterogeneous hardware
      capabilities at all network nodes. Specifically, we demonstrate the implementation
      of a Kubernetes QoS model based on a three-tier offloading decision algorithm
      (TTODA) and its integration into the DSS.", "venue": "2022 IEEE International
      Conference on Communications Workshops (ICC Workshops)", "year": 2022, "referenceCount":
      13, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-05-16",
      "journal": {"name": "2022 IEEE International Conference on Communications Workshops
      (ICC Workshops)", "pages": "1-2"}, "citationStyles": {"bibtex": "@Conference{Carmona-Cejudo2022DemoAD,\n
      author = {Estela Carmona-Cejudo and Francesco Iadanza},\n booktitle = {2022
      IEEE International Conference on Communications Workshops (ICC Workshops)},\n
      journal = {2022 IEEE International Conference on Communications Workshops (ICC
      Workshops)},\n pages = {1-2},\n title = {Demo: A Decision Support System for
      Task Offloading Optimization in Cloud-to-Far-Edge Kubernetes Networks},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "2188490932", "name": "Estela Carmona-Cejudo"},
      {"authorId": "50828656", "name": "Francesco Iadanza"}]}, {"paperId": "07009ba9de4080e268f262110afe22943410164c",
      "externalIds": {"DBLP": "conf/IEEEcloud/SfakianakisMB21", "DOI": "10.1109/CLOUD53861.2021.00069",
      "CorpusId": 243878162}, "corpusId": 243878162, "publicationVenue": {"id": "406d9f60-417a-4dc5-a6b7-1fe4689a4ff7",
      "name": "IEEE International Conference on Cloud Computing", "type": "conference",
      "alternate_names": ["Int Conf Cloud Comput [services Soc", "CLOUD", "International
      Conference on Cloud Computing [Services Society]", "IEEE Int Conf Cloud Comput"]},
      "url": "https://www.semanticscholar.org/paper/07009ba9de4080e268f262110afe22943410164c",
      "title": "Skynet: Performance-driven Resource Management for Dynamic Workloads",
      "abstract": "A primary concern for cloud operators is to increase resource utilization
      while maintaining good performance for applications. This is particularly difficult
      to achieve for three reasons: users tend to overprovision applications, applications
      are diverse and dynamic, and their performance depends on multiple resources.
      In this paper, we present Skynet, an automated and adaptive cloud resource management
      approach that addresses all three concerns. Skynet uses performance level objectives
      (PLOs) to capture user intentions about required performance more accurately
      to remove the user from the resource allocation loop. Then, Skynet estimates
      the resources required to achieve the target PLO. For this purpose, we employ
      a Proportional Integral Derivative (PID) controller per application and adjust
      its parameters on the fly. Finally, to capture the dependence of applications
      on different or multiple resources, Skynet extends the traditional one-dimensional
      PID controller to estimate CPU, memory, I/O throughput, and network throughput.
      Essentially, Skynet builds a model on-the-fly to map target PLOs to resources
      for each application, taking into account multiple resources and changing input
      load. We implement Skynet as an end-to-end, custom scheduler in Kubernetes and
      evaluate it using real workloads on both a private cluster and AWS. Skynet decreases
      PLO violations by more than 7.4x and increases resource utilization by more
      than 2x, compared to Kubernetes. Essentially, Skynet builds a model on-the-fly
      to map target PLOs to resources for each application, taking into account multiple
      resources and changing input load. We implement Skynet as an end-to-end, custom
      scheduler in Kubernetes and evaluate it using real workloads on both a private
      cluster and AWS. Skynet decreases PLO violations by more than 7.4x and increases
      resource utilization by more than 2x, compared to Kubernetes.", "venue": "IEEE
      International Conference on Cloud Computing", "year": 2021, "referenceCount":
      47, "citationCount": 5, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2021-09-01", "journal": {"name": "2021 IEEE
      14th International Conference on Cloud Computing (CLOUD)", "pages": "527-539"},
      "citationStyles": {"bibtex": "@Article{Sfakianakis2021SkynetPR,\n author = {Yannis
      Sfakianakis and M. Marazakis and A. Bilas},\n booktitle = {IEEE International
      Conference on Cloud Computing},\n journal = {2021 IEEE 14th International Conference
      on Cloud Computing (CLOUD)},\n pages = {527-539},\n title = {Skynet: Performance-driven
      Resource Management for Dynamic Workloads},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2801573", "name": "Yannis Sfakianakis"}, {"authorId": "3135878",
      "name": "M. Marazakis"}, {"authorId": "1805177", "name": "A. Bilas"}]}, {"paperId":
      "0706c0931b5264136925824106ea9cf7a7b3bd2c", "externalIds": {"MAG": "2809632784",
      "CorpusId": 67095008}, "corpusId": 67095008, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/0706c0931b5264136925824106ea9cf7a7b3bd2c",
      "title": "Private cloud deployment with docker and kubernetes", "abstract":
      "Automated software development has been a goal of applications developers.
      Several new technologies are now available to realize that goal. As revealed
      in a recent study by LinkedIn, Site reliability engineers (SRE) are among the
      highest paid occupations at $140,000 [11]. They are experts at maintaining infrastructure
      and web development, as well as pivotal individuals who manage DevOps Engineers.",
      "venue": "", "year": 2018, "referenceCount": 0, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "Journal of Computing Sciences in Colleges", "pages": "58-59",
      "volume": "33"}, "citationStyles": {"bibtex": "@Article{Sanders2018PrivateCD,\n
      author = {Sean Sanders and Charles Border},\n journal = {Journal of Computing
      Sciences in Colleges},\n pages = {58-59},\n title = {Private cloud deployment
      with docker and kubernetes},\n volume = {33},\n year = {2018}\n}\n"}, "authors":
      [{"authorId": "50254300", "name": "Sean Sanders"}, {"authorId": "2261345", "name":
      "Charles Border"}]}, {"paperId": "072b5141c0936de076a988423d2ed3605e147cc9",
      "externalIds": {"MAG": "2996460629", "DOI": "10.1007/978-1-4842-5519-3_7", "CorpusId":
      214317815}, "corpusId": 214317815, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/072b5141c0936de076a988423d2ed3605e147cc9",
      "title": "Operating Azure Kubernetes Service", "abstract": null, "venue": "",
      "year": 2019, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "pages": "101-149", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Buchanan2019OperatingAK,\n author = {Steve Buchanan
      and Janaka Rangama and Ned Bellavance},\n pages = {101-149},\n title = {Operating
      Azure Kubernetes Service},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "14244223", "name": "Steve Buchanan"}, {"authorId": "66925155", "name": "Janaka
      Rangama"}, {"authorId": "1453137264", "name": "Ned Bellavance"}]}, {"paperId":
      "072ca19c50fb6b59c207bddb02b15b1a2fec52cd", "externalIds": {"DOI": "10.1109/mass58611.2023.00081",
      "CorpusId": 264882074}, "corpusId": 264882074, "publicationVenue": {"id": "192d27f9-c6f4-4ada-891f-1099b11c7022",
      "name": "IEEE International Conference on Mobile Adhoc and Sensor Systems",
      "type": "conference", "alternate_names": ["IEEE Int Conf Mob Adhoc Sens Syst",
      "Mobile Adhoc and Sensor Systems", "MASS", "Mob Adhoc Sens Syst"], "url": "http://www.wikicfp.com/cfp/program?id=1999"},
      "url": "https://www.semanticscholar.org/paper/072ca19c50fb6b59c207bddb02b15b1a2fec52cd",
      "title": "Container Restart Reduction Technique in Kubernetes Using Memory Oversubscription",
      "abstract": "This paper proposes a technique to mitigate container restarts
      in a memory oversubscription environment based on Kubernetes. The proposed technique
      involves identifying containers that are likely to request memory allocation
      on nodes experiencing high memory usage and temporarily pausing these containers.
      By significantly reducing the CPU usage of containers, the similar effect as
      pausing them can be achieved. The suspension of the identified containers is
      released as soon as it is determined that the corresponding node\u2019s memory
      usage has been reduced. The proposed method reduces the average number of container
      restarts by a maximum of 58% and reduces the total run time by an average of
      7% and a maximum of 13% for high memory volatile workflows in Kubernetes environments.",
      "venue": "IEEE International Conference on Mobile Adhoc and Sensor Systems",
      "year": 2023, "referenceCount": 2, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2023-09-25", "journal": {"name": "2023 IEEE
      20th International Conference on Mobile Ad Hoc and Smart Systems (MASS)", "pages":
      "606-607"}, "citationStyles": {"bibtex": "@Conference{Kang2023ContainerRR,\n
      author = {Taeshin Kang and Heonchang Yu and Eunyoung Lee},\n booktitle = {IEEE
      International Conference on Mobile Adhoc and Sensor Systems},\n journal = {2023
      IEEE 20th International Conference on Mobile Ad Hoc and Smart Systems (MASS)},\n
      pages = {606-607},\n title = {Container Restart Reduction Technique in Kubernetes
      Using Memory Oversubscription},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2263810657", "name": "Taeshin Kang"}, {"authorId": "2156547863", "name": "Heonchang
      Yu"}, {"authorId": "2263958664", "name": "Eunyoung Lee"}]}, {"paperId": "072d94880d003acc3759a81f8095c655c9cc875f",
      "externalIds": {"ArXiv": "2304.01468", "CorpusId": 257921785}, "corpusId": 257921785,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/072d94880d003acc3759a81f8095c655c9cc875f",
      "title": "DLRover: An Elastic Deep Training Extension with Auto Job Resource
      Recommendation", "abstract": "The cloud is still a popular platform for distributed
      deep learning (DL) training jobs since resource sharing in the cloud can improve
      resource utilization and reduce overall costs. However, such sharing also brings
      multiple challenges for DL training jobs, e.g., high-priority jobs could impact,
      even interrupt, low-priority jobs. Meanwhile, most existing distributed DL training
      systems require users to configure the resources (i.e., the number of nodes
      and resources like CPU and memory allocated to each node) of jobs manually before
      job submission and can not adjust the job''s resources during the runtime. The
      resource configuration of a job deeply affect this job''s performance (e.g.,
      training throughput, resource utilization, and completion rate). However, this
      usually leads to poor performance of jobs since users fail to provide optimal
      resource configuration in most cases. \\system~is a distributed DL framework
      can auto-configure a DL job''s initial resources and dynamically tune the job''s
      resources to win the better performance. With elastic capability, \\system~can
      effectively adjusts the resources of a job when there are performance issues
      detected or a job fails because of faults or eviction. Evaluations results show
      \\system~can outperform manual well-tuned resource configurations. Furthermore,
      in the production Kubernetes cluster of \\company, \\system~reduces the medium
      of job completion time by 31\\%, and improves the job completion rate by 6\\%,
      CPU utilization by 15\\%, and memory utilization by 20\\% compared with manual
      configuration.", "venue": "", "year": 2023, "referenceCount": 22, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-04-04",
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Wang2023DLRoverAE,\n
      author = {Qinlong Wang and Bo Sang and Haitao Zhang and Mingjie Tang and Ke
      Zhang},\n title = {DLRover: An Elastic Deep Training Extension with Auto Job
      Resource Recommendation},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2154736654",
      "name": "Qinlong Wang"}, {"authorId": "2073159520", "name": "Bo Sang"}, {"authorId":
      "2116009560", "name": "Haitao Zhang"}, {"authorId": "47605128", "name": "Mingjie
      Tang"}, {"authorId": "2119059083", "name": "Ke Zhang"}]}, {"paperId": "076c13196901ac809193a8b377a34596bbf1cf93",
      "externalIds": {"DOI": "10.23919/AEIT56783.2022.9951779", "CorpusId": 253803928},
      "corpusId": 253803928, "publicationVenue": {"id": "e32cab02-4d88-4945-8420-be6395e5ed81",
      "name": "AEIT International Annual Conference", "type": "conference", "alternate_names":
      ["AEITIAC", "AEIT Int Annu Conf"]}, "url": "https://www.semanticscholar.org/paper/076c13196901ac809193a8b377a34596bbf1cf93",
      "title": "MESP - An Interoperable Platform for Multi-Energy Systems", "abstract":
      "The future integration of different energy carriers in a single multi-energy
      network is fundamental for enhancing the flexibility, efficiency and sustainability
      of the whole energy system. This challenge is strongly associated with the digital
      transition of networks, as it requires an integrated management of data coming
      not only from several internal systems of utilities (GIS, asset management,
      DMS), but also related to different energy vectors. This paper presents a semantic,
      modular, open-source platform based on international standards to manage and
      study multi-energy networks: the Multi Energy Semantic Platform (MESP). The
      architecture, based on Kubernetes and microservices, ensures synergy between
      semantic web technologies and big data/machine learning algorithms. To show
      the potential of the platform, a real case study for the city of Milan is presented.
      In this example, the electricity distribution grid and the district heating
      network are described using a compatible semantic model (based on IEC CIM) and
      their exchange points are identified and geographically visualized. Both utilities
      and universities may benefit from this open-source platform, which supports
      an easy integration of innovative artificial intelligence algorithms and is
      adaptable according to the needs of considered use cases. Moreover, the MESP
      may support management operations of energy communities or small electric cooperatives,
      which cannot afford large investments both in economic terms and in human resources.",
      "venue": "AEIT International Annual Conference", "year": 2022, "referenceCount":
      21, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Environmental Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2022-10-03", "journal":
      {"name": "2022 AEIT International Annual Conference (AEIT)", "pages": "1-6"},
      "citationStyles": {"bibtex": "@Conference{Paludetto2022MESPA,\n author = {Gabriele
      Paludetto and E. Bionda and F. Soldan},\n booktitle = {AEIT International Annual
      Conference},\n journal = {2022 AEIT International Annual Conference (AEIT)},\n
      pages = {1-6},\n title = {MESP - An Interoperable Platform for Multi-Energy
      Systems},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2008225199", "name":
      "Gabriele Paludetto"}, {"authorId": "7850899", "name": "E. Bionda"}, {"authorId":
      "2005696728", "name": "F. Soldan"}]}, {"paperId": "07c80808411ade5493bdd3c233356a03662882b2",
      "externalIds": {"DOI": "10.3390/electronics12122614", "CorpusId": 259801467},
      "corpusId": 259801467, "publicationVenue": {"id": "ccd8e532-73c6-414f-bc91-271bbb2933e2",
      "name": "Electronics", "type": "journal", "issn": "1450-5843", "alternate_issns":
      ["2079-9292", "0883-4989"], "url": "http://www.electronics.etfbl.net/", "alternate_urls":
      ["http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-247562", "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-247562",
      "https://www.mdpi.com/journal/electronics"]}, "url": "https://www.semanticscholar.org/paper/07c80808411ade5493bdd3c233356a03662882b2",
      "title": "Container Allocation in Cloud Environment Using Multi-Agent Deep Reinforcement
      Learning", "abstract": "Nowadays, many computation tasks are carried out using
      cloud computing services and virtualization technology. The intensive resource
      requirements of virtual machines have led to the adoption of a lighter solution
      based on containers. Containers isolate packaged applications and their dependencies,
      and they can also operate as part of distributed applications. Containers can
      be distributed over a cluster of computers with available resources, such as
      the CPU, memory, and communication bandwidth. Any container distribution mechanism
      should consider resource availability and their impact on overall performance.
      This work suggests a new approach to assigning containers to servers in the
      cloud, while meeting computing and communication resource requirements and minimizing
      the overall task completion time. We introduce a multi-agent environment using
      a deep reinforcement learning-based decision mechanism. The high action space
      complexity is tackled by decentralizing the allocation decisions among multiple
      agents. Considering the interactions among the agents, we introduce a new cooperative
      mechanism for a state and reward design, resulting in efficient container assignments.
      The performances of both long short term memory (LSTM) and memory augmented-based
      agents are examined, for solving the challenging container assignment problem.
      Experimental results demonstrated an improvement of up to 28% in the execution
      runtime compared to existing bin-packing heuristics and the common Kubernetes
      industrial tool.", "venue": "Electronics", "year": 2023, "referenceCount": 21,
      "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      {"url": "https://www.mdpi.com/2079-9292/12/12/2614/pdf?version=1686318583",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-06-09", "journal": {"name": "Electronics"}, "citationStyles":
      {"bibtex": "@Article{Danino2023ContainerAI,\n author = {Tom Danino and Y. Ben-Shimol
      and S. Greenberg},\n booktitle = {Electronics},\n journal = {Electronics},\n
      title = {Container Allocation in Cloud Environment Using Multi-Agent Deep Reinforcement
      Learning},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2189521195", "name":
      "Tom Danino"}, {"authorId": "1404592363", "name": "Y. Ben-Shimol"}, {"authorId":
      "2055731879", "name": "S. Greenberg"}]}, {"paperId": "07d9d1d98ba3dfb40e0f8c7c7bb431e93180e6f7",
      "externalIds": {"MAG": "2943688719", "DOI": "10.1117/12.2519922", "CorpusId":
      155958212}, "corpusId": 155958212, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/07d9d1d98ba3dfb40e0f8c7c7bb431e93180e6f7",
      "title": "Cloud-based computation and networking for space", "abstract": "Cloud
      computing has transformed the evolution of software for much of information
      technology (IT) industry. Focusing on developing microservices rather than complete
      platforms has significant advantages, including enterprise interoperability,
      resiliency, and reduced system development and sustainment costs. Amazon Web
      Services (AWS), Google Cloud Platform, OpenStack, and Kubernetes are examples
      of public and private cloud technologies that commercial and government enterprise
      systems are migrating to. Unfortunately, these technologies do not extend to
      endpoints like Warfighter arm-mounted tablets and spacecraft. The goal of the
      Space Cloud Computing (SCC) project is to develop technologies that provide
      a corollary to public/private cloud concepts for all asset endpoints to enable
      new Warfighter planning and tasking concepts and superior levels of situational
      awareness. This paper explores the computation and networking challenges and
      solutions for such a platform in the space domain.", "venue": "Defense + Commercial
      Sensing", "year": 2019, "referenceCount": 27, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Engineering",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Engineering", "source":
      "external"}, {"category": "Computer Science", "source": "external"}, {"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2019-04-30", "journal": {"pages":
      "110150S - 110150S-16", "volume": "11015"}, "citationStyles": {"bibtex": "@Inproceedings{Carver2019CloudbasedCA,\n
      author = {B. Carver and T. Esposito and J. Lyke},\n booktitle = {Defense + Commercial
      Sensing},\n pages = {110150S - 110150S-16},\n title = {Cloud-based computation
      and networking for space},\n volume = {11015},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "2058806592", "name": "B. Carver"}, {"authorId": "49584383", "name":
      "T. Esposito"}, {"authorId": "145417437", "name": "J. Lyke"}]}, {"paperId":
      "07ddf274bd241d8f8962e07c0a5deb7feebacb23", "externalIds": {"MAG": "2899180718",
      "DBLP": "conf/5gwf/LuongtOG18", "DOI": "10.1109/5GWF.2018.8516950", "CorpusId":
      53228676}, "corpusId": 53228676, "publicationVenue": {"id": "ccf4c4b6-42b3-4f5d-92ee-fe53be8af934",
      "name": "5G World Forum", "type": "conference", "alternate_names": ["5GWF",
      "5G World Forum"]}, "url": "https://www.semanticscholar.org/paper/07ddf274bd241d8f8962e07c0a5deb7feebacb23",
      "title": "Predictive Autoscaling Orchestration for Cloud-native Telecom Microservices",
      "abstract": "Mobile traffic is dramatically increasing in recent several years
      with the evolution of mobile network toward 5G era. Network function virtualization
      (NFV) and cloud computing provide more flexibility and elasticity for mobile
      networks. The autoscaling orchestrator allows adjusting the number of virtual
      network functions (VNFs) in a telecom cloud platform corresponding the devices
      demand (smartphone, IoT, robots,...). However, the adjusting process produces
      the delay resulting on instance creating to make services available with the
      enough resource. The predictive mechanisms with workload forecasting enable
      the improvement in performance of the autoscaling orchestration system. In this
      paper, we investigate predictive autoscaling in the orchestration system for
      virtualized mobile networks. We propose a cloud-native approach for stateless
      telecom services. We also consider and investigate realtime prediction to detect
      the peak load or burst request of resource. We develop longterm forecasting
      for periodical resource that detect seasonal workload demand and provide the
      resource plan to cloud provider. Finally, we evaluate the accuracy of these
      predictive mechanisms with a growing workload with several accuracy criteria.
      We develop our telecom testbed using containerization technology and these approaches
      are integrated with Kubernetes orchestrator.", "venue": "5G World Forum", "year":
      2018, "referenceCount": 14, "citationCount": 20, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2018-07-01", "journal": {"name": "2018 IEEE 5G World Forum (5GWF)", "pages":
      "153-158"}, "citationStyles": {"bibtex": "@Article{Luong2018PredictiveAO,\n
      author = {Duc-Hung Luong and Huu-Trung Thieu and A. Outtagarts and Y. Ghamri-Doudane},\n
      booktitle = {5G World Forum},\n journal = {2018 IEEE 5G World Forum (5GWF)},\n
      pages = {153-158},\n title = {Predictive Autoscaling Orchestration for Cloud-native
      Telecom Microservices},\n year = {2018}\n}\n"}, "authors": [{"authorId": "40660531",
      "name": "Duc-Hung Luong"}, {"authorId": "23144942", "name": "Huu-Trung Thieu"},
      {"authorId": "2390599", "name": "A. Outtagarts"}, {"authorId": "1397038647",
      "name": "Y. Ghamri-Doudane"}]}, {"paperId": "07fb252e4fcb7c878c333ed729ef8dff5db42f8e",
      "externalIds": {"DBLP": "conf/dasc/BarlettaCSC22", "ArXiv": "2205.14188", "DOI":
      "10.1109/DASC/PiCom/CBDCom/Cy55231.2022.9927896", "CorpusId": 249192020}, "corpusId":
      249192020, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/07fb252e4fcb7c878c333ed729ef8dff5db42f8e",
      "title": "Introducing k4.0s: a Model for Mixed-Criticality Container Orchestration
      in Industry 4.0", "abstract": "Time predictable edge cloud is seen as the answer
      for many arising needs in Industry 4.0 environments, since it is able to provide
      flexible, modular, and reconfigurable services with low latency and reduced
      costs. Orchestration systems are becoming the core component of clouds since
      they take decisions on the placement and lifecycle of software components. Current
      solutions start introducing real-time containers support for time predictability;
      however, these approaches lack of determinism as well as support for workloads
      requiring multiple levels of assurance/criticality.In this paper, we present
      k4.0s, an orchestration model for real-time and mixed-criticality environments,
      including timeliness, criticality and network requirements. The model leverages
      new abstractions for node and jobs, e.g., node assurance, and requires novel
      monitoring strategies. We sketch an implementation of the proposal based on
      Kubernetes, and present an experimentation motivating the need for node assurance
      levels and adequate monitoring.", "venue": "2022 IEEE Intl Conf on Dependable,
      Autonomic and Secure Computing, Intl Conf on Pervasive Intelligence and Computing,
      Intl Conf on Cloud and Big Data Computing, Intl Conf on Cyber Science and Technology
      Congress (DASC/PiCom/CBDCom/CyberSciTech)", "year": 2022, "referenceCount":
      39, "citationCount": 5, "influentialCitationCount": 1, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/2205.14188", "status": "GREEN"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2022-05-27", "journal": {"name": "2022
      IEEE Intl Conf on Dependable, Autonomic and Secure Computing, Intl Conf on Pervasive
      Intelligence and Computing, Intl Conf on Cloud and Big Data Computing, Intl
      Conf on Cyber Science and Technology Congress (DASC/PiCom/CBDCom/CyberSciTech)",
      "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Barletta2022IntroducingKA,\n
      author = {Marco Barletta and M. Cinque and L. Simone and Raffaele Della Corte},\n
      booktitle = {2022 IEEE Intl Conf on Dependable, Autonomic and Secure Computing,
      Intl Conf on Pervasive Intelligence and Computing, Intl Conf on Cloud and Big
      Data Computing, Intl Conf on Cyber Science and Technology Congress (DASC/PiCom/CBDCom/CyberSciTech)},\n
      journal = {2022 IEEE Intl Conf on Dependable, Autonomic and Secure Computing,
      Intl Conf on Pervasive Intelligence and Computing, Intl Conf on Cloud and Big
      Data Computing, Intl Conf on Cyber Science and Technology Congress (DASC/PiCom/CBDCom/CyberSciTech)},\n
      pages = {1-6},\n title = {Introducing k4.0s: a Model for Mixed-Criticality Container
      Orchestration in Industry 4.0},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "119242209", "name": "Marco Barletta"}, {"authorId": "2697779", "name": "M.
      Cinque"}, {"authorId": "2276038", "name": "L. Simone"}, {"authorId": "2561679",
      "name": "Raffaele Della Corte"}]}, {"paperId": "083ee590bddca284cf1adc145cd946cd650c9f30",
      "externalIds": {"DBLP": "conf/middleware/KaminskiTBLJ19", "MAG": "2987502299",
      "DOI": "10.1145/3366615.3368352", "CorpusId": 207951414}, "corpusId": 207951414,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/083ee590bddca284cf1adc145cd946cd650c9f30",
      "title": "A framework for black-box SLO tuning of multi-tenant applications
      in Kubernetes", "abstract": "Resource management concepts of container orchestration
      platforms such as Kubernetes can be used to achieve multi-tenancy with quality
      of service differentiation between tenants. However, to support cost-effective
      enforcement of Service Level Objectives (SLOs) about response time or throughput,
      an automated resource optimization approach is needed for mapping custom SLOs
      of different tenants to cost-efficient resource allocation policies. We propose
      a versatile tool for cost-effective SLO tuning, named k8-resource-optimizer,
      that relies on black-box performance tuning algorithms. We illustrate and validate
      the tool for optimizing different resource configuration properties of a simple
      job processing application. Our experiments showed that k8-resource-optimizer
      can find near-optimal configurations for different multi-tenant deployment settings
      and different types of resource parameters. However an open research challenge
      is that, when the number of parameters increases, the total tuning cost may
      also increase beyond what is acceptable for contemporary cloud-native applications.
      We shortly discuss three possible complementary solutions to tackle this challenge.",
      "venue": "WOC@Middleware", "year": 2019, "referenceCount": 26, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://lirias.kuleuven.be/bitstream/123456789/664327/2/3366615.3368352.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book"], "publicationDate": "2019-12-09", "journal": {"name": "Proceedings of
      the 5th International Workshop on Container Technologies and Container Clouds"},
      "citationStyles": {"bibtex": "@Article{Kaminski2019AFF,\n author = {M. Kaminski
      and E. Truyen and Emad Heydari Beni and B. Lagaisse and W. Joosen},\n booktitle
      = {WOC@Middleware},\n journal = {Proceedings of the 5th International Workshop
      on Container Technologies and Container Clouds},\n title = {A framework for
      black-box SLO tuning of multi-tenant applications in Kubernetes},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "2059468539", "name": "M. Kaminski"}, {"authorId":
      "1743981", "name": "E. Truyen"}, {"authorId": "2995854", "name": "Emad Heydari
      Beni"}, {"authorId": "1796744", "name": "B. Lagaisse"}, {"authorId": "1752104",
      "name": "W. Joosen"}]}, {"paperId": "087e4f8c9241af8de14666430305681ff4087414",
      "externalIds": {"DBLP": "conf/ieeesensors/HiroiKFS23", "DOI": "10.1109/SENSORS56945.2023.10325055",
      "CorpusId": 265499887}, "corpusId": 265499887, "publicationVenue": {"id": "3dbf084c-ef47-4b74-9919-047b40704538",
      "name": "Italian National Conference on Sensors", "type": "conference", "alternate_names":
      ["SENSORS", "IEEE Sens", "Ital National Conf Sens", "IEEE Sensors", "Sensors"],
      "issn": "1424-8220", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/087e4f8c9241af8de14666430305681ff4087414",
      "title": "An Orchestrator Framework for IoT-Based Disaster Prevention Simulation",
      "abstract": "Human casualties from flooding are caused by various factors, such
      as damage caused by flood water, delays in evacuation due to road flooding or
      communication network failures, or accidents during evacuation. However, conventional
      simulations (e.g., river flooding, road flooding, and communication failures)
      are developed as proprietary systems, and it is difficult to use them to estimate
      and predict phenomena or casualties related to flood damage. This paper proposes
      an orchestrator framework for IoT-based disaster prevention simulation, which
      simulates urban flooding, numbers of affected people, and network failures in
      an integrated manner. We develop an orchestration scheme that coordinates several
      independent simulators into one simulation to observe mutually related phenomena
      (e.g., evacuation behavior in a flood simulation). Our orchestration scheme
      deploys the simulators, data exchange system, and virtual clock system on a
      Kubernetes cluster and controls the synchronization and execution order of these
      simulators. We describe our orchestration scheme architecture, automatic determination
      of the execution order, and detection of misconfigurations for the continuous
      operation of multiple simulators.", "venue": "Italian National Conference on
      Sensors", "year": 2023, "referenceCount": 28, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Environmental Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-29", "journal": {"name": "2023 IEEE SENSORS", "pages": "01-04"}, "citationStyles":
      {"bibtex": "@Article{Hiroi2023AnOF,\n author = {Kei Hiroi and Akihito Kohiga
      and Sho Fukaya and Yoichi Shinoda},\n booktitle = {Italian National Conference
      on Sensors},\n journal = {2023 IEEE SENSORS},\n pages = {01-04},\n title = {An
      Orchestrator Framework for IoT-Based Disaster Prevention Simulation},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2268689260", "name": "Kei Hiroi"},
      {"authorId": "48241095", "name": "Akihito Kohiga"}, {"authorId": "2268688955",
      "name": "Sho Fukaya"}, {"authorId": "2268687027", "name": "Yoichi Shinoda"}]},
      {"paperId": "08956ec422a7425c914f11645670b9fc7fa7f6e9", "externalIds": {"DOI":
      "10.33039/ami.2023.08.002", "CorpusId": 260748837}, "corpusId": 260748837, "publicationVenue":
      {"id": "804deed9-f19e-434a-8d72-9e0771e3c040", "name": "Annales Mathematicae
      et Informaticae", "alternate_names": ["Ann Math Informaticae"], "issn": "1216-6014",
      "url": "http://ami.ektf.hu/", "alternate_urls": ["http://epa.oszk.hu/html/vgi/boritolapuj.phtml?id=00946"]},
      "url": "https://www.semanticscholar.org/paper/08956ec422a7425c914f11645670b9fc7fa7f6e9",
      "title": "Evaluation of scalability in the Fission serverless framework", "abstract":
      ". The efficient code execution often requires concurrency, so many programming
      languages, libraries and framework aim at parallelism. Based on the granularity
      and abstraction level, many approaches of concurrency are available. However,
      concurrency carries difficulties but modern ways try to make it more convenient.
      A rather new solution is cloud computing which enhances the concurrency in a
      way that standalone virtual machines utilize the shared hardware. Con-tainerization
      takes advantage of lightweight virtual machines called containers because they
      use a shared kernel of the operating system. Conteiner orchestration (e.g. Kubernetes)
      enables containerization among multiple hosts. Serverless programming supports
      container orchestration for individual function so every trigerred function
      may run in a different container which is inside a cluster of hosts. In this
      paper, we briefly present the modern cloud computing ways of concurrency. This
      subtle distributed approach requires a comprehensive evaluation. We take advantage
      of the open source Fission serverless framework and implement some distributed
      algorithms in this realm using the Python programming language. For a deeper
      comprehension, we measure and evaluate the scalability of Fission framework
      and the entire system. We execute the distributed algorithms with different
      sizes of input and we fine-tune the configuration of the Fission framework.",
      "venue": "Annales Mathematicae et Informaticae", "year": 2023, "referenceCount":
      17, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "http://publikacio.uni-eszterhazy.hu/7700/1/AMI_online_1460.pdf",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "Annales Mathematicae et Informaticae"}, "citationStyles": {"bibtex":
      "@Article{Fony\u00f3di2023EvaluationOS,\n author = {Bal\u00e1zs Fony\u00f3di
      and Norbert Pataki and \u00c1d\u00e1m R\u00e9v\u00e9sz},\n booktitle = {Annales
      Mathematicae et Informaticae},\n journal = {Annales Mathematicae et Informaticae},\n
      title = {Evaluation of scalability in the Fission serverless framework},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2230913932", "name": "Bal\u00e1zs
      Fony\u00f3di"}, {"authorId": "2627956", "name": "Norbert Pataki"}, {"authorId":
      "2230878773", "name": "\u00c1d\u00e1m R\u00e9v\u00e9sz"}]}, {"paperId": "08a5cc3b7192ecd3aa26f33d0af71454fb288a2f",
      "externalIds": {"DBLP": "conf/ic2e/HsiehL23", "DOI": "10.1109/IC2E59103.2023.00023",
      "CorpusId": 265055706}, "corpusId": 265055706, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/08a5cc3b7192ecd3aa26f33d0af71454fb288a2f",
      "title": "Voda: A GPU Scheduling Platform for Elastic Deep Learning in Kubernetes
      Clusters", "abstract": "Nowadays, machine learning has become an indispensable
      service for cloud providers. Elastic training, a novel training paradigm that
      dynamically adjusts resource allocation for a group of training jobs, has gained
      popularity due to its ability to effectively utilize accelerators, which are
      essential for training a massive number of deep learning models. Despite the
      existence of numerous scheduling algorithms for elastic training, most lack
      an easy-to-use yet efficient platform to execute them. In this paper, we present
      Voda, a GPU scheduling platform for elastic deep learning. In contrast to prior
      approaches that employ parameter servers for elastic training, Voda is designed
      for AllReduce-style communication, which proves to be more effective, albeit
      more complex to adjust. Voda, built on top of Kubernetes, consists of a set
      of loosely coupled components that collect runtime information, dynamically
      alter the resource allocation, and optimize job placement based on communication
      costs among underlying GPUs. We implement and compare four scheduling algorithms
      for elastic training, including three existing methods and one newly proposed,
      on Voda, with different workloads, job distributions, and arrival patterns.
      Experimental results demonstrate that no single algorithm dominates all performance
      metrics, such as average job completion time, running time, or makespan. However,
      certain algorithms outperform others under specific workloads and job distributions.
      Additionally, our experiments highlight the significance of job placement in
      GPU clusters, and our proposed method effectively optimizes communication costs
      among different workers of a job.", "venue": "2023 IEEE International Conference
      on Cloud Engineering (IC2E)", "year": 2023, "referenceCount": 50, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2023-09-25", "journal":
      {"name": "2023 IEEE International Conference on Cloud Engineering (IC2E)", "pages":
      "131-140"}, "citationStyles": {"bibtex": "@Article{Hsieh2023VodaAG,\n author
      = {Tsung-Tso Hsieh and Che-Rung Lee},\n booktitle = {2023 IEEE International
      Conference on Cloud Engineering (IC2E)},\n journal = {2023 IEEE International
      Conference on Cloud Engineering (IC2E)},\n pages = {131-140},\n title = {Voda:
      A GPU Scheduling Platform for Elastic Deep Learning in Kubernetes Clusters},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2265677634", "name": "Tsung-Tso
      Hsieh"}, {"authorId": "2265726064", "name": "Che-Rung Lee"}]}, {"paperId": "08a7a6f8f21d3e58ca6d565c449d95287a9cc5ee",
      "externalIds": {"DOI": "10.1007/978-1-4842-7460-6_5", "CorpusId": 245224645},
      "corpusId": 245224645, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/08a7a6f8f21d3e58ca6d565c449d95287a9cc5ee",
      "title": "Docker/Kubernetes Primer", "abstract": null, "venue": "Spring Boot
      Fundamentals Part 2", "year": 2021, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "Spring Boot Fundamentals Part 2"}, "citationStyles":
      {"bibtex": "@Article{Guti\u00e9rrez2021DockerKubernetesP,\n author = {Felipe
      Guti\u00e9rrez},\n booktitle = {Spring Boot Fundamentals Part 2},\n journal
      = {Spring Boot Fundamentals Part 2},\n title = {Docker/Kubernetes Primer},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "122948690", "name": "Felipe
      Guti\u00e9rrez"}]}, {"paperId": "08b04e794b75c66cf2b2d27378210e7a1404cb68",
      "externalIds": {"MAG": "3027324206", "DOI": "10.1007/978-3-030-48513-9_6", "CorpusId":
      219440597}, "corpusId": 219440597, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/08b04e794b75c66cf2b2d27378210e7a1404cb68",
      "title": "Distributed Cloud Monitoring Platform Based on Log In-Sight", "abstract":
      null, "venue": "", "year": 2019, "referenceCount": 13, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2019-12-04", "journal": {"name": "", "pages": "76-88",
      "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Haihong2019DistributedCM,\n
      author = {E. Haihong and Yuanxing Chen and Meina Song and Meijie Sun},\n pages
      = {76-88},\n title = {Distributed Cloud Monitoring Platform Based on Log In-Sight},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "2347748", "name": "E. Haihong"},
      {"authorId": "1605976398", "name": "Yuanxing Chen"}, {"authorId": "1701530",
      "name": "Meina Song"}, {"authorId": "114126063", "name": "Meijie Sun"}]}, {"paperId":
      "08df7a2dfe120ab1fefcdcbb63e9a46670753966", "externalIds": {"DBLP": "conf/nfvsdn/MullerBBSPK19",
      "MAG": "2994683433", "DOI": "10.1109/NFV-SDN47374.2019.9040133", "CorpusId":
      213026359}, "corpusId": 213026359, "publicationVenue": {"id": "265e5461-e186-46e6-b95b-6767e39326db",
      "name": "Conference on Network Function Virtualization and Software Defined
      Network", "type": "conference", "alternate_names": ["NFV-SDN", "Conf Netw Funct
      Virtualiz Softw Defin Netw"]}, "url": "https://www.semanticscholar.org/paper/08df7a2dfe120ab1fefcdcbb63e9a46670753966",
      "title": "Putting NFV into Reality: Physical Smart Manufacturing Testbed", "abstract":
      "5G and network function virtualization (NFV) have the potential to make factory
      networks more flexible and scalable. For this purpose, we defined use cases
      in previous work and demonstrated them using emulation-based prototype deployments.
      In this paper, we extend our previous work and deploy our developed vertical-specific
      network services and cloud-native virtualized network functions (VNFs) in a
      physical NFV testbed that is located on the shop floor to analyze the potential
      of NFV in real-life environments. We use the 5GTANGO service platform to deploy
      them on Kubernetes. Both are running on top of OpenStack.", "venue": "Conference
      on Network Function Virtualization and Software Defined Network", "year": 2019,
      "referenceCount": 21, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://zenodo.org/records/3707800/files/Pre-Print%20-%20Putting%20NFV%20into%20Reality%20Physical%20Smart%20Manufacturing%20Testbed.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2019-11-01", "journal":
      {"name": "2019 IEEE Conference on Network Function Virtualization and Software
      Defined Networks (NFV-SDN)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{M\u00fcller2019PuttingNI,\n
      author = {M. M\u00fcller and D. Behnke and Patrick-Benjamin B\u00f6k and Stefan
      Schneider and Manuel Peuster and H. Karl},\n booktitle = {Conference on Network
      Function Virtualization and Software Defined Network},\n journal = {2019 IEEE
      Conference on Network Function Virtualization and Software Defined Networks
      (NFV-SDN)},\n pages = {1-6},\n title = {Putting NFV into Reality: Physical Smart
      Manufacturing Testbed},\n year = {2019}\n}\n"}, "authors": [{"authorId": "144247824",
      "name": "M. M\u00fcller"}, {"authorId": "151497110", "name": "D. Behnke"}, {"authorId":
      "2033737", "name": "Patrick-Benjamin B\u00f6k"}, {"authorId": "49438578", "name":
      "Stefan Schneider"}, {"authorId": "2090443", "name": "Manuel Peuster"}, {"authorId":
      "144794042", "name": "H. Karl"}]}, {"paperId": "08dfedc7e027adbb4bdddf22940307049823fd8f",
      "externalIds": {"CorpusId": 267411608}, "corpusId": 267411608, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/08dfedc7e027adbb4bdddf22940307049823fd8f",
      "title": "An Edge-based Architecture for Phasor Measurements in Smart Grids",
      "abstract": "\u2014This paper investigates the application of Kuber-netes and
      Edge computing technologies to operate IT services in the context of power systems
      and smart grids. Traditional services for grid monitoring such as Phasor Measurement
      Units (PMUs) and Phasor Data Concentrators (PDCs) require a centralized architecture
      and a rigid networking infrastructure in order to properly function, which today
      is only achieved at the High Voltage (HV) transmission level. Furthermore, manual
      intervention is often the only option for PMUs/PDCs maintenance. In this work,
      the traditional PMU/PDC services were deployed as docker-containers in a decentralized
      Kubernetes cluster, which can represent any kind of geographically dispersed
      TCP/IP network. By leveraging remote orchestration, several key benefits are
      achieved: (1) no manual reconfiguration of the PMU-PDC communications upon network
      reconfiguration, (2) automatic PMU traffic redirection in case of PDC service
      redeployment in a different location, and (3) reduced data-loss upon PDC failure
      and enhanced overall system resiliency due to minimized ICT services down-time.",
      "venue": "", "year": null, "referenceCount": 19, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Misc{None,\n author = {Fulvio Risso},\n
      title = {An Edge-based Architecture for Phasor Measurements in Smart Grids}\n}\n"},
      "authors": [{"authorId": "2278270385", "name": "Fulvio Risso"}]}, {"paperId":
      "08e20b94912eee24682195b351fa9eb3ca2ba499", "externalIds": {"DBLP": "journals/jcm/RafiqMS20",
      "MAG": "3013108856", "DOI": "10.12720/jcm.15.3.237-244", "CorpusId": 211525786},
      "corpusId": 211525786, "publicationVenue": {"id": "8596ea9e-5117-444d-bf32-8fbda78c000f",
      "name": "Journal of Communications", "type": "journal", "alternate_names": ["J
      Commun", "Jurnal Communicate", "Journal of Communication", "Journal on Communications"],
      "issn": "1796-2021", "alternate_issns": ["0976-691X", "0021-9916", "2477-1376",
      "2791-3201", "1000-436X"], "url": "http://www.academypublisher.com/jcm/", "alternate_urls":
      ["http://www.academypublisher.com/jcm/index.html", "http://ow.ly/A3Ol1", "http://www.krepublishers.com/02-Journals/JC/JC-00-0-000-000-2010-Web/JC-00-0-000-000-2010-1-Cover.htm",
      "http://www.jocm.us/", "http://ejournal.jayabaya.ac.id/index.php/communicate",
      "http://onlinelibrary.wiley.com/journal/10.1111/(ISSN)1460-2466"]}, "url": "https://www.semanticscholar.org/paper/08e20b94912eee24682195b351fa9eb3ca2ba499",
      "title": "Intent-Based Slicing between Containers in SDN Overlay Network", "abstract":
      "Container-based service orchestration is getting famous increasingly because
      of its ability to be deployed quickly and it is cheaper as well as more reliable
      when compared to virtual machines. Leveraging the container characteristic,
      deployment of 5G modules as a group of containers on different nodes is an excellent
      solution to construct a 5g system. In a 5G system, network slicing plays a vital
      role to isolate the on-demand services and the SDN based overlay network consisting
      of containers provides the platform which manages to slice the network using
      intent-based networking. As the number of containers in a deployment increases
      on hosts across the overlay network with the passage of time in the 5G network,
      therefore it is necessary to manage them with the tool in a straight way with
      high-level abstraction. In this paper, we present the deployment of an overlay
      network which consists of Kubernetes nodes and Open vSwitch. In this paper,
      we also present the intent-based slicing system using Software Defined Network
      controller and an Intent-Based Networking (IBN) Manager among the containers
      across the Kubernetes pods in an overlay network. \uf020", "venue": "Journal
      of Communications", "year": 2020, "referenceCount": 23, "citationCount": 15,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "J. Commun.",
      "pages": "237-244", "volume": "15"}, "citationStyles": {"bibtex": "@Article{Rafiq2020IntentBasedSB,\n
      author = {Adeel Rafiq and A. Mehmood and Wang-Cheol Song},\n booktitle = {Journal
      of Communications},\n journal = {J. Commun.},\n pages = {237-244},\n title =
      {Intent-Based Slicing between Containers in SDN Overlay Network},\n volume =
      {15},\n year = {2020}\n}\n"}, "authors": [{"authorId": "47393245", "name": "Adeel
      Rafiq"}, {"authorId": "145491710", "name": "A. Mehmood"}, {"authorId": "2151893",
      "name": "Wang-Cheol Song"}]}, {"paperId": "0904ccfa815445f143df508e7da83e4f07cf3cd5",
      "externalIds": {"ArXiv": "2105.00542", "DBLP": "conf/closer/DavidB21", "DOI":
      "10.5220/0010397900340044", "CorpusId": 233482002}, "corpusId": 233482002, "publicationVenue":
      {"id": "229ff272-1128-48a4-94eb-2ea4041eadff", "name": "International Conference
      on Cloud Computing and Services Science", "type": "conference", "alternate_names":
      ["CLOSER", "Int Conf Cloud Comput Serv Sci"], "url": "http://closer.scitevents.org/"},
      "url": "https://www.semanticscholar.org/paper/0904ccfa815445f143df508e7da83e4f07cf3cd5",
      "title": "Kubernetes Autoscaling: YoYo Attack Vulnerability and Mitigation",
      "abstract": "In recent years, we have witnessed a new kind of DDoS attack, the
      burst attack(Chai, 2013; Dahan, 2018), where the attacker launches periodic
      bursts of traffic overload on online targets. Recent work presents a new kind
      of Burst attack, the YoYo attack (Bremler-Barr et al., 2017) that operates against
      the auto-scaling mechanism of VMs in the cloud. The periodic bursts of traffic
      loads cause the auto-scaling mechanism to oscillate between scale-up and scale-down
      phases. The auto-scaling mechanism translates the flat DDoS attacks into Economic
      Denial of Sustainability attacks (EDoS), where the victim suffers from economic
      damage accrued by paying for extra resources required to process the traffic
      generated by the attacker. However, it was shown that YoYo attack also causes
      significant performance degradation since it takes time to scale-up VMs. In
      this research, we analyze the resilience of Kubernetes auto-scaling against
      YoYo attacks. As containerized cloud applications using Kubernetes gain popularity
      and replace VM-based architecture in recent years. We present experimental results
      on Google Cloud Platform, showing that even though the scale-up time of containers
      is much lower than VM, Kubernetes is still vulnerable to the YoYo attack since
      VMs are still involved. Finally, we evaluate ML models that can accurately detect
      YoYo attack on a Kubernetes cluster.", "venue": "International Conference on
      Cloud Computing and Services Science", "year": 2021, "referenceCount": 24, "citationCount":
      6, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2021-05-02", "journal": {"name": "ArXiv",
      "volume": "abs/2105.00542"}, "citationStyles": {"bibtex": "@Article{David2021KubernetesAY,\n
      author = {Ronen Ben David and A. Barr},\n booktitle = {International Conference
      on Cloud Computing and Services Science},\n journal = {ArXiv},\n title = {Kubernetes
      Autoscaling: YoYo Attack Vulnerability and Mitigation},\n volume = {abs/2105.00542},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2087062803", "name": "Ronen
      Ben David"}, {"authorId": "2087065836", "name": "A. Barr"}]}, {"paperId": "090a9686b12ada78112e8c3f5865859d9d3373d6",
      "externalIds": {"DOI": "10.1145/3640823", "CorpusId": 266985304}, "corpusId":
      266985304, "publicationVenue": {"id": "1a5858d9-edfe-4a1b-ae39-60020748678f",
      "name": "ACM Transactions on Architecture and Code Optimization (TACO)", "type":
      "journal", "alternate_names": ["ACM Transactions on Architecture and Code Optimization",
      "ACM Trans Archit Code Optim", "ACM Trans Archit Code Optim (TACO"], "issn":
      "1544-3566", "url": "http://www.acm.org/taco", "alternate_urls": ["http://portal.acm.org/taco/",
      "https://taco.acm.org/"]}, "url": "https://www.semanticscholar.org/paper/090a9686b12ada78112e8c3f5865859d9d3373d6",
      "title": "Cost-aware service placement and scheduling in the Edge-Cloud Continuum",
      "abstract": "The edge to data center computing continuum is the aggregation
      of computing resources located anywhere between the network edge (e.g., close
      to 5G antennas), and servers in traditional data centers. Kubernetes is the
      de facto standard for the orchestration of services in data center environments,
      where it is very efficient. It, however, fails to give the same performance
      when including edge resources. At the edge, resources are more limited, and
      networking conditions are changing over time. In this paper, we present a methodology
      that lowers the costs of running applications in the edge-to-cloud computing
      continuum. This methodology can adapt to changing environments, e.g., moving
      end-users. We are also monitoring some Key Performance Indicators of the applications
      to ensure that cost optimizations do not negatively impact their Quality of
      Service. In addition, to ensure that performances are optimal even when users
      are moving, we introduce a background process that periodically checks if a
      better location is available for the service and, if so, moves the service.
      To demonstrate the performance of our scheduling approach, we evaluate it using
      a vehicle cooperative perception use case, a representative 5G application.
      With this use case, we can demonstrate that our scheduling approach can robustly
      lower the cost in different scenarios, while other approaches that are already
      available fail in either being adaptive to changing environments or will have
      poor cost-effectiveness in some scenarios.", "venue": "ACM Transactions on Architecture
      and Code Optimization (TACO)", "year": 2024, "referenceCount": 18, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3640823", "status": "GOLD"}, "fieldsOfStudy":
      null, "s2FieldsOfStudy": [{"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2024-01-16", "journal": {"name": "ACM
      Transactions on Architecture and Code Optimization"}, "citationStyles": {"bibtex":
      "@Article{Rac2024CostawareSP,\n author = {Samuel Rac and M. Brorsson},\n booktitle
      = {ACM Transactions on Architecture and Code Optimization (TACO)},\n journal
      = {ACM Transactions on Architecture and Code Optimization},\n title = {Cost-aware
      service placement and scheduling in the Edge-Cloud Continuum},\n year = {2024}\n}\n"},
      "authors": [{"authorId": "2140033910", "name": "Samuel Rac"}, {"authorId": "2244001652",
      "name": "M. Brorsson"}]}, {"paperId": "09297a8398d015bd1b2137a1eac9371eae956b87",
      "externalIds": {"MAG": "2991796043", "CorpusId": 213664411}, "corpusId": 213664411,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/09297a8398d015bd1b2137a1eac9371eae956b87",
      "title": "The DevOps 2.4 Toolkit", "abstract": "An exploration of continuous
      deployment to a Kubernetes cluster, using a wide range of Kubernetes platforms
      with instructions on how to develop a pipeline on a few of the most commonly
      used CI/CD platforms.\nKey Features\nThe fifth book of DevOps expert Viktor
      Farcic''s bestselling DevOps Toolkit series, with a discussion of the difference
      between continuous delivery vs. continuous deployment, and which is best for
      the user \n\nGuides readers through the continuous deployment process using
      Jenkins in a Kubernetes cluster\n\nProvides an overview of the best practices
      for building, testing, and deploying applications through fully automated pipelines.\nBook
      Description\nBuilding on The DevOps 2.3 Toolkit: Kubernetes, Viktor Farcic brings
      his latest exploration of the Docker technology as he records his journey to
      continuously deploying applications with Jenkins into a Kubernetes cluster.\n\n\nThe
      DevOps 2.4 Toolkit: Continuously Deploying Applications with Jenkins to a Kubernetes
      Cluster is the latest book in Viktor Farcic''s series that helps you build a
      full DevOps Toolkit. This book guides readers through the process of building,
      testing, and deploying applications through fully automated pipelines.\n\n\nWithin
      this book, Viktor will cover a wide-range of emerging topics, including an exploration
      of continuous delivery and deployment in Kubernetes using Jenkins. It also shows
      readers how to perform continuous integration inside these clusters, and discusses
      the distribution of Kubernetes applications, as well as installing and setting
      up Jenkins.\n\n\nWork with Viktor and dive into the creation of self-adaptive
      and self-healing systems within Docker.\nWhat you will learn\nGain an understanding
      of continuous deployment\n\nLearn how to build, test, and deploy applications
      into Kubernetes\n\nExecute continuous integration inside containers\nWho this
      book is for\nReaders with an intermediate level understanding of Kubernetes
      and hands-on experience.", "venue": "", "year": 2019, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate": "2019-11-28",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Farcic2019TheD2,\n
      author = {Viktor Farcic},\n title = {The DevOps 2.4 Toolkit},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "70451877", "name": "Viktor Farcic"}]}, {"paperId":
      "09333ff1fefdfdc52adbe7446b4e4152182f1012", "externalIds": {"DBLP": "conf/cnsm/MatsuoI21",
      "DOI": "10.23919/CNSM52442.2021.9615544", "CorpusId": 244855726}, "corpusId":
      244855726, "publicationVenue": {"id": "7a0ab88e-224a-475b-9ea6-e66a6b3448c8",
      "name": "Conference on Network and Service Management", "type": "conference",
      "alternate_names": ["Conf Netw Serv Manag", "CNSM"], "url": "http://www.cnsm-conf.org/"},
      "url": "https://www.semanticscholar.org/paper/09333ff1fefdfdc52adbe7446b4e4152182f1012",
      "title": "Performance Analysis of Anomaly Detection Methods for Application
      System on Kubernetes with Auto-scaling and Self-healing", "abstract": "Kubernetes
      (K8s) is promising software for application systems since it makes application
      systems more flexible and robust by auto-scaling, which automatically scales
      up the application system resources when the application system is overloaded,
      and self-healing, which automatically recovers the application system from a
      failure. However, auto-scaling and self-healing make system operators'' tasks
      complex. First, there is a delay, which is the time difference between executing
      auto-scaling or self-healing and recovering degraded application performance
      metrics such as response time. Second, the delay depends on types of abnormalities
      (i.e., overloads and failures). Moreover, the auto-scaling and self-healing
      cannot always recover the abnormality. Therefore, system operators need to understand
      the degree of abnormality (i.e., how much the application performance is degraded
      and how long the delay is). Although many anomaly detection methods have been
      developed, they have not considered auto-scaling or self-healing when the abnormality
      occurs. In this paper, we analyze the performance of anomaly detection methods
      with auto-scaling and self-healing in K8s by implementing anomaly detection
      methods, and deploying a web application system on K8s. Specifically, first,
      we verified that there is a delay that depends on types of abnormality by injecting
      anomalies into the web application system. Then, we evaluated the anomaly detection
      accuracy of each method by using the data collected from the web application.
      Finally, a clustering approach is used for anomaly scores, which are the outputs
      of these methods, to investigate whether anomaly detection methods can provide
      the degree of abnormality. The evaluations show that our analysis provides useful
      information for operators to manage the K8s with auto-scaling and self-healing.",
      "venue": "Conference on Network and Service Management", "year": 2021, "referenceCount":
      22, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2021-10-25", "journal": {"name": "2021 17th
      International Conference on Network and Service Management (CNSM)", "pages":
      "464-472"}, "citationStyles": {"bibtex": "@Article{Matsuo2021PerformanceAO,\n
      author = {Yoichi Matsuo and D. Ikegami},\n booktitle = {Conference on Network
      and Service Management},\n journal = {2021 17th International Conference on
      Network and Service Management (CNSM)},\n pages = {464-472},\n title = {Performance
      Analysis of Anomaly Detection Methods for Application System on Kubernetes with
      Auto-scaling and Self-healing},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2051654567", "name": "Yoichi Matsuo"}, {"authorId": "28126267", "name": "D.
      Ikegami"}]}, {"paperId": "09687c1d019680bc9f2dda15db8f9fc6860d6979", "externalIds":
      {"DBLP": "conf/esocc/GhirardiniSFP18", "DOI": "10.1007/978-3-030-63161-1_1",
      "CorpusId": 228085084}, "corpusId": 228085084, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/09687c1d019680bc9f2dda15db8f9fc6860d6979",
      "title": "Model-Driven Simulation for Performance Engineering of Kubernetes-Style
      Cloud Cluster Architectures", "abstract": null, "venue": "ESOCC Workshops",
      "year": 2018, "referenceCount": 16, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"pages": "7-20"}, "citationStyles": {"bibtex": "@Article{Ghirardini2018ModelDrivenSF,\n
      author = {Federico Ghirardini and Areeg Samir and Ilenia Fronza and C. Pahl},\n
      booktitle = {ESOCC Workshops},\n pages = {7-20},\n title = {Model-Driven Simulation
      for Performance Engineering of Kubernetes-Style Cloud Cluster Architectures},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "2034187283", "name": "Federico
      Ghirardini"}, {"authorId": "2552537", "name": "Areeg Samir"}, {"authorId": "2335178",
      "name": "Ilenia Fronza"}, {"authorId": "8516149", "name": "C. Pahl"}]}, {"paperId":
      "0969426723de1b408086ec4be0e970366627e670", "externalIds": {"DBLP": "conf/edcc/BozokiKPSK21",
      "DOI": "10.1007/978-3-030-86507-8_11", "CorpusId": 238222694}, "corpusId": 238222694,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0969426723de1b408086ec4be0e970366627e670",
      "title": "The Impact of Rare Container Restarts on Uninterrupted Kubernetes
      Operations", "abstract": null, "venue": "EDCC Workshops", "year": 2021, "referenceCount":
      5, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Business",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "109-119"}, "citationStyles": {"bibtex": "@Article{Boz\u00f3ki2021TheIO,\n
      author = {Szil\u00e1rd Boz\u00f3ki and I. Kocsis and A. Pataricza and P\u00e9ter
      Suskovics and Benedek Kov\u00e1cs},\n booktitle = {EDCC Workshops},\n pages
      = {109-119},\n title = {The Impact of Rare Container Restarts on Uninterrupted
      Kubernetes Operations},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2855896",
      "name": "Szil\u00e1rd Boz\u00f3ki"}, {"authorId": "21804998", "name": "I. Kocsis"},
      {"authorId": "1730071", "name": "A. Pataricza"}, {"authorId": "1423712275",
      "name": "P\u00e9ter Suskovics"}, {"authorId": "19266472", "name": "Benedek Kov\u00e1cs"}]},
      {"paperId": "099674e479156d16882c81ed67140db1f0c02fec", "externalIds": {"MAG":
      "2956448201", "DBLP": "journals/jcloudc/PaakkonenHA19", "DOI": "10.1186/s13677-019-0132-0",
      "CorpusId": 195847619}, "corpusId": 195847619, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/099674e479156d16882c81ed67140db1f0c02fec",
      "title": "Online architecture for predicting live video transcoding resources",
      "abstract": null, "venue": "Journal of Cloud Computing", "year": 2019, "referenceCount":
      35, "citationCount": 11, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://journalofcloudcomputing.springeropen.com/track/pdf/10.1186/s13677-019-0132-0",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2019-12-01", "journal": {"name": "Journal of Cloud Computing",
      "pages": "1-24", "volume": "8"}, "citationStyles": {"bibtex": "@Article{P\u00e4\u00e4kk\u00f6nen2019OnlineAF,\n
      author = {P. P\u00e4\u00e4kk\u00f6nen and A. Heikkinen and T. Aihkisalo},\n
      booktitle = {Journal of Cloud Computing},\n journal = {Journal of Cloud Computing},\n
      pages = {1-24},\n title = {Online architecture for predicting live video transcoding
      resources},\n volume = {8},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2302268", "name": "P. P\u00e4\u00e4kk\u00f6nen"}, {"authorId": "34139743",
      "name": "A. Heikkinen"}, {"authorId": "1690569", "name": "T. Aihkisalo"}]},
      {"paperId": "09adb20a56c65dc46c6ab42d1c3b220cb954093b", "externalIds": {"DOI":
      "10.1109/ISMODE56940.2022.10180973", "CorpusId": 259978081}, "corpusId": 259978081,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/09adb20a56c65dc46c6ab42d1c3b220cb954093b",
      "title": "Docker and Kubernetes Pipeline for DevOps Software Defect Prediction
      with MLOps Approach", "abstract": "Software defects are common when it comes
      to software development. However, in reality, this is very detrimental for companies
      and organizations that are developing software. Prediction of software defects
      in the early stages of development can be a solution to this problem. Of course,
      the method used needs to be considered when developing a model for predicting
      software defects. The software continues to experience development, so the prediction
      model must always be updated so that it can adapt to existing conditions. This
      study proposes the MLOps approach, which combines development and operation
      processes to develop a software defect prediction model. We will create a prediction
      model and then create a Docker and Kubernetes pipeline to automate the entire
      software defect prediction process so that it can speed up the development process
      and have good performance. We are comparing the performance evaluation results
      of the proposed method with the traditional method, which is run manually by
      Docker. The results showed that the entire source dataset had a fairly good
      accuracy rate of 76%-83% and a good recall rate of 79%-94%. The precision and
      recall values were also very good. Apart from that, it also produces a good
      Fl-score value of 84%-90%. And the development time until the model\u2019s release
      is shorter: the average time is 7:02 minutes. Performance monitoring on the
      built-in web server is also easy to do and shows very good results. The web
      server can receive up to 156. $6/$sec requests in all models based on the dataset
      used, with the highest error rate at 45.03%. The use of the Docker and Kubernetes
      pipelines with the MLOps approach has been proven to have good performance,
      and the development of software defect models can be sped up.", "venue": "2022
      2nd International Seminar on Machine Learning, Optimization, and Data Science
      (ISMODE)", "year": 2022, "referenceCount": 24, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2022-12-22", "journal": {"name": "2022 2nd International
      Seminar on Machine Learning, Optimization, and Data Science (ISMODE)", "pages":
      "248-253"}, "citationStyles": {"bibtex": "@Article{Bahaweres2022DockerAK,\n
      author = {Rizal Broer Bahaweres and Aldi Zulfikar and I. Hermadi and A. Suroso
      and Y. Arkeman},\n booktitle = {2022 2nd International Seminar on Machine Learning,
      Optimization, and Data Science (ISMODE)},\n journal = {2022 2nd International
      Seminar on Machine Learning, Optimization, and Data Science (ISMODE)},\n pages
      = {248-253},\n title = {Docker and Kubernetes Pipeline for DevOps Software Defect
      Prediction with MLOps Approach},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "9123178", "name": "Rizal Broer Bahaweres"}, {"authorId": "2193848581", "name":
      "Aldi Zulfikar"}, {"authorId": "2141788191", "name": "I. Hermadi"}, {"authorId":
      "9349049", "name": "A. Suroso"}, {"authorId": "9366129", "name": "Y. Arkeman"}]},
      {"paperId": "09bc670eebe5d41038e2025e51f901f69719466a", "externalIds": {"DBLP":
      "journals/tcc/DingWJ23", "DOI": "10.1109/TCC.2022.3161900", "CorpusId": 247686844},
      "corpusId": 247686844, "publicationVenue": {"id": "7fca7065-fa6f-490b-923e-3ffc07857f1c",
      "name": "IEEE Transactions on Cloud Computing", "type": "journal", "alternate_names":
      ["IEEE Trans Cloud Comput"], "issn": "2168-7161", "url": "https://www.computer.org/web/tcc",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6245519"]},
      "url": "https://www.semanticscholar.org/paper/09bc670eebe5d41038e2025e51f901f69719466a",
      "title": "Kubernetes-Oriented Microservice Placement With Dynamic Resource Allocation",
      "abstract": "Microservices and Kubernetes are widely used in the development
      and operations of cloud-native applications. By providing automated placement
      and scaling, Kubernetes has become the main tool for managing microservices.
      However, existing work and Kubernetes fail to consider the dynamic competition
      and availability of microservices as well as the problem of shared dependency
      libraries among multiple microservice instances. To this end, this article proposes
      an integer nonlinear microservice placement model for Kubernetes with the goal
      of cost minimization. Specifically, we calculate the number of instances based
      on microservice availability and construct a model in which the total resource
      demand of multiple microservice instances exceeds the appropriate proportion
      of node resources when dynamic resource competition exists and the size of the
      shared dependency library is less than the node storage capacity. Finally, this
      article solves the microservice placement model using an improved genetic algorithm.
      The experimental results demonstrate that higher throughput is obtained with
      the same costs and that the same throughput is obtained with lower costs.",
      "venue": "IEEE Transactions on Cloud Computing", "year": 2023, "referenceCount":
      56, "citationCount": 11, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-04-01", "journal": {"name": "IEEE Transactions on Cloud
      Computing", "pages": "1777-1793", "volume": "11"}, "citationStyles": {"bibtex":
      "@Article{Ding2023KubernetesOrientedMP,\n author = {Zhijun Ding and Song Wang
      and Changjun Jiang},\n booktitle = {IEEE Transactions on Cloud Computing},\n
      journal = {IEEE Transactions on Cloud Computing},\n pages = {1777-1793},\n title
      = {Kubernetes-Oriented Microservice Placement With Dynamic Resource Allocation},\n
      volume = {11},\n year = {2023}\n}\n"}, "authors": [{"authorId": "34368858",
      "name": "Zhijun Ding"}, {"authorId": "2117075837", "name": "Song Wang"}, {"authorId":
      "145181317", "name": "Changjun Jiang"}]}, {"paperId": "09cd4175f6fd0f2d4e60b77d01a5d013ad6e345a",
      "externalIds": {"DBLP": "conf/etfa/GualpaCAGG23", "DOI": "10.1109/ETFA54631.2023.10275443",
      "CorpusId": 264041119}, "corpusId": 264041119, "publicationVenue": {"id": "22466e99-8720-4629-9169-4469e385e4d8",
      "name": "IEEE International Conference on Emerging Technologies and Factory
      Automation", "type": "conference", "alternate_names": ["Emerg Technol Fact Autom",
      "IEEE Int Conf Emerg Technol Fact Autom", "ETFA", "Emerging Technologies and
      Factory Automation"], "url": "http://www.wikicfp.com/cfp/program?id=937"}, "url":
      "https://www.semanticscholar.org/paper/09cd4175f6fd0f2d4e60b77d01a5d013ad6e345a",
      "title": "Smart I4.0-Based Irrigation System for Optimization in Water Management:
      A case study", "abstract": "A Smart city utilizes Information and Communication
      Technologies (ICT) to tackle the challenges brought about by urbanization, by
      promoting and implementing sustainable development practices. One of the biggest
      concerns globally is water management, and the current project aims to create
      an intelligent irrigation system for parks that operates using an Asset Administration
      Shell (AAS) architecture focus on the Industry 4.0 (I4.0) model. The system
      uses network orchestration of servers to coordinate and sequence existing processes.
      By regulating water consumption based on soil and weather conditions, as well
      as plant requirements, the system aims to become an intelligent irrigation management
      system. Real-time monitoring and control of all sensor data ensure efficient
      use of water. The platform comprises a low-cost microcontroller, which automatically
      or manually monitors, controls, and supervises irrigation status. The microcontroller
      collects data on humidity, environmental parameters, and soil temperature, which
      are then stored in a database and displayed on a website. The system is decomposed
      into containers using the Docker Host application and managed by Kubernetes,
      which is the container orchestrator.", "venue": "IEEE International Conference
      on Emerging Technologies and Factory Automation", "year": 2023, "referenceCount":
      16, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2023-09-12",
      "journal": {"name": "2023 IEEE 28th International Conference on Emerging Technologies
      and Factory Automation (ETFA)", "pages": "1-8"}, "citationStyles": {"bibtex":
      "@Article{Gualpa2023SmartII,\n author = {Thal\u00eda Gualpa and Gustavo Caiza
      and Paulina Ayala and Carlos A. Garcia and Marcelo V. Garcia},\n booktitle =
      {IEEE International Conference on Emerging Technologies and Factory Automation},\n
      journal = {2023 IEEE 28th International Conference on Emerging Technologies
      and Factory Automation (ETFA)},\n pages = {1-8},\n title = {Smart I4.0-Based
      Irrigation System for Optimization in Water Management: A case study},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2257977059", "name": "Thal\u00eda
      Gualpa"}, {"authorId": "51298010", "name": "Gustavo Caiza"}, {"authorId": "145158870",
      "name": "Paulina Ayala"}, {"authorId": "153377634", "name": "Carlos A. Garcia"},
      {"authorId": "2258306329", "name": "Marcelo V. Garcia"}]}, {"paperId": "09fb7586e17ef3ae49de61d50d33734b75e1febc",
      "externalIds": {"MAG": "2987710564", "DBLP": "conf/middleware/GhoshNK19", "DOI":
      "10.1145/3366615.3368354", "CorpusId": 204956896}, "corpusId": 204956896, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/09fb7586e17ef3ae49de61d50d33734b75e1febc",
      "title": "Container Orchestration for Dispersed Computing", "abstract": "In
      the era of Internet of Things, there is an increasing demand for networked computing
      to support the requirements of time-constrained, compute-intensive distributed
      applications. We present a container orchestration architecture for dispersed
      computing, and its implementation in an open source software called Jupiter.
      The system automates the distribution of computational tasks for complex computational
      applications described as an Directed Acyclic Graph (DAG) to efficiently distribute
      the tasks among a set of networked compute nodes and orchestrates the execution
      of the DAG thereafter. This Kubernetes based container-orchestration system
      supports both centralized and decentralized scheduling algorithms for optimally
      mapping the tasks based on information from a range of profilers: network profilers,
      resource profilers, and execution time profilers.", "venue": "WOC@Middleware",
      "year": 2019, "referenceCount": 14, "citationCount": 12, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3366615.3368354",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2019-12-09",
      "journal": {"name": "Proceedings of the 5th International Workshop on Container
      Technologies and Container Clouds"}, "citationStyles": {"bibtex": "@Article{Ghosh2019ContainerOF,\n
      author = {Pradipta Ghosh and Quynh Nguyen and B. Krishnamachari},\n booktitle
      = {WOC@Middleware},\n journal = {Proceedings of the 5th International Workshop
      on Container Technologies and Container Clouds},\n title = {Container Orchestration
      for Dispersed Computing},\n year = {2019}\n}\n"}, "authors": [{"authorId": "49934897",
      "name": "Pradipta Ghosh"}, {"authorId": "145628959", "name": "Quynh Nguyen"},
      {"authorId": "1701475", "name": "B. Krishnamachari"}]}, {"paperId": "0a03ff141669dcc95f6c11c24d05810d3ec0c165",
      "externalIds": {"DBLP": "conf/ccnc/SekineKKKN21", "DOI": "10.1109/CCNC49032.2021.9369538",
      "CorpusId": 232267119}, "corpusId": 232267119, "publicationVenue": {"id": "7cd7bf33-3c9a-4b3f-8b1a-177673c6ca73",
      "name": "Consumer Communications and Networking Conference", "type": "conference",
      "alternate_names": ["CCNC", "Consum Commun Netw Conf"], "url": "http://ieee-ccnc.org/"},
      "url": "https://www.semanticscholar.org/paper/0a03ff141669dcc95f6c11c24d05810d3ec0c165",
      "title": "IoT-centric Service Function ChainingOrchestration and its Performance
      Validation", "abstract": "In order to simplify deployment and management of
      IoT services, Network Function Virtualization (NFV) and Service Function Chaining
      (SFC) are promising solutions, and much researchers have conducted these topics.
      To enhance the reliability of former research efforts, in this paper, we propose
      an orchestration framework for IoT-centric SFC by using Docker and Kubernetes.
      The framework enables an automatic IoT service deployment by satisfying service
      requirements and computing and network resource constraints. In such deployment,
      we apply a Virtual Network Function (VNF)/Service Function (SF) placement problem
      to achieve efficient utilization of the resources. We set an objective function
      as minimizing both numbers of SF instances and communications and build a mathematical
      model based on Integer Linear Programming (ILP). To validate it, we implement
      a model for the framework and evaluate the performances by carrying out a numerical
      evaluation and a real experiment. From the evaluation results, we confirm that
      the proposed approach can reduce the number of SF placements and the number
      of communications among SF instances.", "venue": "Consumer Communications and
      Networking Conference", "year": 2021, "referenceCount": 12, "citationCount":
      5, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Environmental Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2021-01-09", "journal": {"name": "2021 IEEE
      18th Annual Consumer Communications & Networking Conference (CCNC)", "pages":
      "1-4"}, "citationStyles": {"bibtex": "@Article{Sekine2021IoTcentricSF,\n author
      = {Hibiki Sekine and Kenji Kanai and J. Katto and H. Kanemitsu and H. Nakazato},\n
      booktitle = {Consumer Communications and Networking Conference},\n journal =
      {2021 IEEE 18th Annual Consumer Communications & Networking Conference (CCNC)},\n
      pages = {1-4},\n title = {IoT-centric Service Function ChainingOrchestration
      and its Performance Validation},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "151028502", "name": "Hibiki Sekine"}, {"authorId": "145758871", "name": "Kenji
      Kanai"}, {"authorId": "1788294", "name": "J. Katto"}, {"authorId": "20842314",
      "name": "H. Kanemitsu"}, {"authorId": "1846048", "name": "H. Nakazato"}]}, {"paperId":
      "0a0a6dd77fee6b174b8cb267222ad9433ecdd1c3", "externalIds": {"DBLP": "conf/sgiot/FathoniYHCH21",
      "DOI": "10.1007/978-3-031-20398-5_4", "CorpusId": 255750439}, "corpusId": 255750439,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0a0a6dd77fee6b174b8cb267222ad9433ecdd1c3",
      "title": "Aquaculture Monitoring Systems Based on Lightweight Kubernetes and
      Rancher", "abstract": null, "venue": "SGIoT", "year": 2021, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"},
      {"category": "Agricultural and Food Sciences", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"pages": "38-45"},
      "citationStyles": {"bibtex": "@Article{Fathoni2021AquacultureMS,\n author =
      {H. Fathoni and Chao-Tung Yang and Chin-Yin Huang and Chien-Yi Chen and T\u00ed-Feng
      Hsieh},\n booktitle = {SGIoT},\n pages = {38-45},\n title = {Aquaculture Monitoring
      Systems Based on Lightweight Kubernetes and Rancher},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "145606513", "name": "H. Fathoni"}, {"authorId": "2155847922",
      "name": "Chao-Tung Yang"}, {"authorId": "40311574", "name": "Chin-Yin Huang"},
      {"authorId": "2109636831", "name": "Chien-Yi Chen"}, {"authorId": "2200195500",
      "name": "T\u00ed-Feng Hsieh"}]}, {"paperId": "0a289fd7b14345822b1acda6d82750b15d59663e",
      "externalIds": {"MAG": "2561955909", "DBLP": "conf/osdi/ArnautovTGKMPLM16",
      "CorpusId": 18302848}, "corpusId": 18302848, "publicationVenue": {"id": "86c43745-31d9-4c1a-b33f-ce3aa0042dbb",
      "name": "USENIX Symposium on Operating Systems Design and Implementation", "type":
      "conference", "alternate_names": ["Oper Syst Des Implement", "Operating Systems
      Design and Implementation", "OSDI", "USENIX Symp Oper Syst Des Implement"]},
      "url": "https://www.semanticscholar.org/paper/0a289fd7b14345822b1acda6d82750b15d59663e",
      "title": "SCONE: Secure Linux Containers with Intel SGX", "abstract": "In multi-tenant
      environments, Linux containers managed by Docker or Kubernetes have a lower
      resource footprint, faster startup times, and higher I/O performance compared
      to virtual machines (VMs) on hypervisors. Yet their weaker isolation guarantees,
      enforced through software kernel mechanisms, make it easier for attackers to
      compromise the confidentiality and integrity of application data within containers.
      \n \nWe describe SCONE, a secure container mechanism for Docker that uses the
      SGX trusted execution support of Intel CPUs to protect container processes from
      outside attacks. The design of SCONE leads to (i) a small trusted computing
      base (TCB) and (ii) a low performance overhead: SCONE offers a secure C standard
      library interface that transparently encrypts/decrypts I/O data; to reduce the
      performance impact of thread synchronization and system calls within SGX enclaves,
      SCONE supports user-level threading and asynchronous system calls. Our evaluation
      shows that it protects unmodified applications with SGX, achieving 0.6\u00d7-1.2\u00d7
      of native throughput.", "venue": "USENIX Symposium on Operating Systems Design
      and Implementation", "year": 2016, "referenceCount": 53, "citationCount": 734,
      "influentialCitationCount": 117, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2016-11-02", "journal":
      {"pages": "689-703"}, "citationStyles": {"bibtex": "@Article{Arnautov2016SCONESL,\n
      author = {Sergei Arnautov and Bohdan Trach and Franz Gregor and Thomas Knauth
      and Andr\u00e9 Martin and Christian Priebe and Joshua Lind and D. Muthukumaran
      and Dan O''Keeffe and Mark Stillwell and David Goltzsche and D. Eyers and R.
      Kapitza and P. Pietzuch and C. Fetzer},\n booktitle = {USENIX Symposium on Operating
      Systems Design and Implementation},\n pages = {689-703},\n title = {SCONE: Secure
      Linux Containers with Intel SGX},\n year = {2016}\n}\n"}, "authors": [{"authorId":
      "1873477", "name": "Sergei Arnautov"}, {"authorId": "48445182", "name": "Bohdan
      Trach"}, {"authorId": "49241403", "name": "Franz Gregor"}, {"authorId": "1761131",
      "name": "Thomas Knauth"}, {"authorId": "145803219", "name": "Andr\u00e9 Martin"},
      {"authorId": "47602714", "name": "Christian Priebe"}, {"authorId": "47579054",
      "name": "Joshua Lind"}, {"authorId": "2213059", "name": "D. Muthukumaran"},
      {"authorId": "1402937609", "name": "Dan O''Keeffe"}, {"authorId": "145221956",
      "name": "Mark Stillwell"}, {"authorId": "7243998", "name": "David Goltzsche"},
      {"authorId": "1784358", "name": "D. Eyers"}, {"authorId": "1740458", "name":
      "R. Kapitza"}, {"authorId": "1809586", "name": "P. Pietzuch"}, {"authorId":
      "145494211", "name": "C. Fetzer"}]}, {"paperId": "0a34b331c80948f64bfa53a98dc25ac43850e419",
      "externalIds": {"MAG": "2938172605", "DBLP": "conf/wicon/KristianiYWHK18", "DOI":
      "10.1007/978-3-030-06158-6_21", "CorpusId": 58535132}, "corpusId": 58535132,
      "publicationVenue": {"id": "0b0b7c85-c67b-4e7f-accf-87da91772efd", "name": "International
      Wireless Internet Conference", "type": "conference", "alternate_names": ["Int
      Wirel Internet Conf", "WICON"], "url": "http://www.wicon.org/"}, "url": "https://www.semanticscholar.org/paper/0a34b331c80948f64bfa53a98dc25ac43850e419",
      "title": "Container-Based Virtualization for Real-Time Data Streaming Processing
      on the Edge Computing Architecture", "abstract": null, "venue": "International
      Wireless Internet Conference", "year": 2018, "referenceCount": 10, "citationCount":
      7, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Environmental Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2018-10-15", "journal": {"pages": "203-211"}, "citationStyles":
      {"bibtex": "@Article{Kristiani2018ContainerBasedVF,\n author = {Endah Kristiani
      and Chao-Tung Yang and Yuan-Ting Wang and Chin-Yin Huang and Po-Cheng Ko},\n
      booktitle = {International Wireless Internet Conference},\n pages = {203-211},\n
      title = {Container-Based Virtualization for Real-Time Data Streaming Processing
      on the Edge Computing Architecture},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "51107359", "name": "Endah Kristiani"}, {"authorId": "144373463", "name": "Chao-Tung
      Yang"}, {"authorId": "13045527", "name": "Yuan-Ting Wang"}, {"authorId": "40311574",
      "name": "Chin-Yin Huang"}, {"authorId": "67006883", "name": "Po-Cheng Ko"}]},
      {"paperId": "0a4c3b72c074a7e94adfb84f56cc9c3ba9982f15", "externalIds": {"CorpusId":
      201044178}, "corpusId": 201044178, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0a4c3b72c074a7e94adfb84f56cc9c3ba9982f15",
      "title": "Anthropisation et mutations paysage\u0300res a\u0300 la transition
      Pale\u0301olithique/Ne\u0301olithique Anthropization and landscape changes during
      the Late Paleolithic/Neolithic transition", "abstract": "This paper explores
      the dynamics leading to the establishment of a relatively prosperous Roman settlement
      on the islet of Kouphonisi in Crete. The settlement was clearly comparatively
      wealthy, judging from its range of public buildings (including a bathhouse,
      theatre, aqueducts and cistern complexes) and the opulent decor of its private
      residences. What conditions generated such favourable economic circumstances
      for the inhabitants of this tiny arid islet lying in the Libyan Sea three miles
      off the southeastern tip of Crete? The location of the islet, which today seems
      remote and far-removed, is appraised within the context of its seasonal sea
      currents and favourable winds which facilitated its navigational connectivity
      with Roman markets operating in the wider Mediterranean. Already in the Hellenistic
      period, the islet\u2019s strategic importance was keenly recognised by the competitive
      cities of eastern Crete who vied for its control: however, these serendipitous
      circumstances, and the site\u2019s sustainability, were short-lived. The settlement\u2019s
      economic boom (born of its strategic position along the wider sailing routes
      of the Mediterranean) ended abruptly and permanently in the late 4th century
      AD. Finally, the paper examines the possible nature of the drastic forces which
      may have been responsible for the settlement\u2019s abandonment, thereby signalling
      the beginning of a process of desertification which persists today. Introduction:
      The identification of Kouphonisi as Ancient Leuke Kouphonisi is a small island
      with an area of 5.25 km2 located in southeastern Crete (Figure 1), ca. 5 km
      off the modern cape of Goudouras (Figure 2). It is the largest of a small cluster
      of islands comprising the islets of Makroulo, Strongli, Trachila and Marmara.
      These islets are separated from the mainland by the narrow and sometimes dangerous
      strait, the Dhiavlo Koupho. Presently arid and deserted, it is difficult to
      imagine the bustling activity on the island in antiquity, when it grew from
      a Hellenistic foundation to a relatively wealthy Roman town (Spratt, 1865; Bosanquet,
      1939-1940; Sanders, 1982; Papadakis, 1983 and 1985). The island has long been
      associated with ancient Leuke, the island frequently mentioned in the Hellenistic
      inscriptions of Crete 1Institute for Mediterranean Studies, Foundation for Research
      and Technology Hellas, Rethymnon, Crete, Greece, nadia.coutsinas@gmail.com 2UMR
      5140, CNRS, Lattes, archeomax22@aol.fr 3School of Archaeology, University College
      Dublin, amanda.kelly@ucd.ie G\u00e9oarch\u00e9ologie des \u00eeles de M\u00e9diterran\u00e9e
      334 Coutsinas et al. its lands, as well as the island of Leuke to which they
      considered having ancient rights through its prior possession by Praisos (IC
      III, iv, 9, 127)1. We are aware, however, that Leuke was then controlled by
      Itanos, since one of the garrisons pledged by Ptolemy II Philadelphos to Itanos
      had been founded on the 1. The famous arbitration inscription preserves a (fragmentary)
      letter sent by Hierapytna to Itanos concerning a certain ship, mention of which
      alludes to the existence of a trade route off the island\u2019s coastline. production
      was an important industry on Kouphonisi (Bosanquet et al., 1902-1903; Bosanquet,
      1939-1940; Papadakis, 1983). Moreover, Stalai is mentioned in connection with
      Leuke in the 2nd century BC arbitration of Magnesia on the Meander in the conflict
      between Hierapytna and Itanos (IC III, iv, 9). In the middle of the 2nd century
      BC, Praisos was conquered by Hierapytna, shortly after which a conflict broke
      out between Hierapytna and its new neighbour, Itanos (Ager, 1996; Guizzi, 2001).
      The Hierapytnians wished to control the sanctuary of Zeus Diktaios and Figure
      1: Map of the Eastern Mediterranean (after http://www.histgeo.ac-aix-marseille.fr/,
      N. Coutsinas). Figure 2: Map of Crete with sites mentioned in the text (N. Coutsinas).
      Kouphonisi (Greece): a briefly vibrant Roman harbourage between Crete and Africa
      335 of Thera, modern Santorini) decided to send a colony to Libya, as the Pythia
      had instructed (the foundation of Cyrene is traditionally dated to 631 BC).
      Unsure of their route, they sought out a guide in Crete, eventually locating
      one at Itanos \u2013 the purple fisherman Korobios. Korobios claimed that he
      had already been to Platea, an island off the Libyan coast, when his boat was
      blown off course by violent winds, probably the meltemi that blow all summer
      in a north-northwesterly to south-southeasterly direction. Another famous biblical
      passage informs us of sailing conditions in the 1st century AD during the autumn
      and winter months. Saint Paul\u2019s journey from Caesarea Maritima (following
      his arrest in this city \u2013 see Figure 1 for location) to Rome (where he
      was to be tried) was famously related by his travelling companion, Luke the
      Evangelist (Acts of the Apostles, 27, 1-44; 28, 1-13 \u2013 for a detailed description
      of the journey see Pomey, 1997; Figure 1). At the beginning of September AD  60
      they embarked on a ship then docked at Caesarea Maritima. The vessel had journeyed
      there from Adramyttium, in Mysia, and was embarking on its return journey to
      Asia Minor. After a stopover the next day in Sidon, the ship sailed along the
      coasts of Pamphylia and Cilicia where it was sheltered from adverse winds by
      the landmass of Cyprus. On landing at Myra, in Lycia, they embarked on another
      vessel, an Alexandrian ship sailing for Italy. From Myra they made slow and
      difficult progress towards Knidos in Caria, from where they were forced, by
      adverse winds, to travel along the sheltered coastline of Crete, passing Cape
      Salmone (Samonium). They arrived at Kaloi Limenes (Fair Havens; Figures 1 and
      2), near Lasaia, on the south coast of Crete with considerable difficulty, probably
      by the end of September AD 60 (the text records that the day of the fast was
      over, which is a reference to the Jewish Day of Atonement, or Yom Kippur, which
      takes place after the autumn equinox). The kubernetes (the captain) and the
      naucleros (the representative of the shipowner) had to decide if they would
      winter there or if they would find a more favourable location. Sailing was usually
      avoided in winter, for fear of storms and because cloud cover obscured the stars
      in high seas. The British naval captain, Thomas Spratt, who famously completed
      a detailed study of Crete as part of his broader surveys in the Mediterranean,
      cautioned when outlining sailing directions for Crete that Kaloi Limenes \u201cIs
      ... not recommended as an anchorage to winter in\u201d and notes that \u201cthere
      are no good ports ... on the south coast of Candia\u201d (Spratt, 1861 and 1865).
      Nonetheless, the crew of Paul\u2019s vessel decided to proceed to Phoenix, a
      harbour situated further west at modern Loutro Sfakion. According to Spratt,
      it was \u201cthe only bay on the south coast where a island (IC III, iv, 9,
      99-100; Spyridakis, 1970)1. After much deliberation, the court of Magnesia on
      the Meander eventually ruled, in 112 BC, in favour of Itanos. The importance
      of Kouphonisi in this dispute can only be fully appreciated through a study
      of its significance along sailing routes connecting Africa to Greece or Rome.
      Crete A Stepping Stone between Africa and Greece", "venue": "", "year": null,
      "referenceCount": 21, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "History", "source": "s2-fos-model"}, {"category": "Geography", "source": "s2-fos-model"}],
      "publicationTypes": ["Review"], "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Misc{None,\n author = {M. Ghilardi and F. Leandri and J. Bloemendal
      and L. Lespez and Lespez Laurent and Fachard Sylvian},\n title = {Anthropisation
      et mutations paysage\u0300res a\u0300 la transition Pale\u0301olithique/Ne\u0301olithique
      Anthropization and landscape changes during the Late Paleolithic/Neolithic transition}\n}\n"},
      "authors": [{"authorId": "103472944", "name": "M. Ghilardi"}, {"authorId": "2049851265",
      "name": "F. Leandri"}, {"authorId": "97575385", "name": "J. Bloemendal"}, {"authorId":
      "2049762171", "name": "L. Lespez"}, {"authorId": "2070923794", "name": "Lespez
      Laurent"}, {"authorId": "2083884320", "name": "Fachard Sylvian"}]}, {"paperId":
      "0a605602a49d2d3a97676f0dfcdbaac503584f36", "externalIds": {"DBLP": "journals/tnsm/GoshiSHHPK23",
      "DOI": "10.1109/TNSM.2022.3230206", "CorpusId": 254913492}, "corpusId": 254913492,
      "publicationVenue": {"id": "a00fde74-d8df-4613-b825-0fff9f531d3f", "name": "IEEE
      Transactions on Network and Service Management", "type": "journal", "alternate_names":
      ["IEEE Trans Netw Serv Manag"], "issn": "1932-4537", "url": "http://ejournals.ebsco.com/direct.asp?JournalID=714200",
      "alternate_urls": ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=4275028",
      "http://ieeexplore.ieee.org/servlet/opac?punumber=4275028"]}, "url": "https://www.semanticscholar.org/paper/0a605602a49d2d3a97676f0dfcdbaac503584f36",
      "title": "PP5GS\u2014An Efficient Procedure-Based and Stateless Architecture
      for Next-Generation Core Networks", "abstract": "The introduction of the Service-Based
      Architecture (SBA) for the 5G Core Networks has drastically changed the way
      these networks are designed and operated. Aiming for higher flexibility and
      agility, the adoption of SBA is the first step towards cloud-native deployments
      of 5G Core. However, the high degree of functional decomposition in SBA has
      implications in terms of increased inter-NF signaling traffic during the execution
      of control plane procedures, as well as an increased complexity in orchestrating
      a system with tight inter-NF dependencies. In this work, we introduce PP5GS
      as a stateless 5G Core architecture that implements a procedure-based functional
      decomposition of the 5G Core NFs. We develop Per-Procedure NFs for four different
      control plane procedures and perform extensive evaluations in a private cloud
      environment orchestrated with Kubernetes. The results show that PP5GS requires
      up to 34% and 55% less computing resources compared to the baseline stateful
      and stateless systems, respectively, while generating at least 40% less signaling
      traffic. Moreover, complex control plane procedures can complete up to 50% faster.
      Lastly, the results show that PP5GS is a more feasible architecture in leveraging
      edge-offloading of 5G Core NFs.", "venue": "IEEE Transactions on Network and
      Service Management", "year": 2023, "referenceCount": 43, "citationCount": 4,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://mediatum.ub.tum.de/doc/1695118/document.pdf", "status": "GREEN"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-09-01", "journal": {"name": "IEEE Transactions on Network
      and Service Management", "pages": "3318-3333", "volume": "20"}, "citationStyles":
      {"bibtex": "@Article{Goshi2023PP5GSAnEP,\n author = {Endri Goshi and Raffael
      Stahl and Hasanin Harkous and Mu He and R. Pries and W. Kellerer},\n booktitle
      = {IEEE Transactions on Network and Service Management},\n journal = {IEEE Transactions
      on Network and Service Management},\n pages = {3318-3333},\n title = {PP5GS\u2014An
      Efficient Procedure-Based and Stateless Architecture for Next-Generation Core
      Networks},\n volume = {20},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "119011268", "name": "Endri Goshi"}, {"authorId": "2197626709", "name": "Raffael
      Stahl"}, {"authorId": "2817073", "name": "Hasanin Harkous"}, {"authorId": "152299928",
      "name": "Mu He"}, {"authorId": "2327539", "name": "R. Pries"}, {"authorId":
      "9358170", "name": "W. Kellerer"}]}, {"paperId": "0a7134ee08417b906772da3f3d8ad8800e5351db",
      "externalIds": {"DBLP": "journals/grid/GuerreroLJ18", "ArXiv": "2401.12698",
      "MAG": "2767988112", "DOI": "10.1007/s10723-017-9419-x", "CorpusId": 207148223},
      "corpusId": 207148223, "publicationVenue": {"id": "993eb4fa-4cb7-4aed-980e-20e5298efad0",
      "name": "Journal of Grid Computing", "type": "journal", "alternate_names": ["J
      Grid Comput"], "issn": "1570-7873", "url": "https://www.springer.com/journal/10723",
      "alternate_urls": ["https://link.springer.com/journal/10723", "http://www.springer.com/journal/10723"]},
      "url": "https://www.semanticscholar.org/paper/0a7134ee08417b906772da3f3d8ad8800e5351db",
      "title": "Genetic Algorithm for Multi-Objective Optimization of Container Allocation
      in Cloud Architecture", "abstract": null, "venue": "Journal of Grid Computing",
      "year": 2017, "referenceCount": 61, "citationCount": 144, "influentialCitationCount":
      10, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2017-11-06", "journal": {"name": "Journal of Grid Computing", "pages": "113
      - 135", "volume": "16"}, "citationStyles": {"bibtex": "@Article{Guerrero2017GeneticAF,\n
      author = {Carlos Guerrero and I. Lera and C. Juiz},\n booktitle = {Journal of
      Grid Computing},\n journal = {Journal of Grid Computing},\n pages = {113 - 135},\n
      title = {Genetic Algorithm for Multi-Objective Optimization of Container Allocation
      in Cloud Architecture},\n volume = {16},\n year = {2017}\n}\n"}, "authors":
      [{"authorId": "145524924", "name": "Carlos Guerrero"}, {"authorId": "1704222",
      "name": "I. Lera"}, {"authorId": "1779773", "name": "C. Juiz"}]}, {"paperId":
      "0a83b0fd0cd8435b76ec4af4607cd2f779a4935b", "externalIds": {"DBLP": "conf/noms/ZhuKO22",
      "DOI": "10.1109/NOMS54207.2022.9789866", "CorpusId": 249550686}, "corpusId":
      249550686, "publicationVenue": {"id": "042bc893-3752-44f7-9e77-c59ce54b1b11",
      "name": "IEEE/IFIP Network Operations and Management Symposium", "type": "conference",
      "alternate_names": ["Network Operations and Management Symposium", "NOMS", "IEEE/IFIP
      Netw Oper Manag Symp", "Netw Oper Manag Symp"], "url": "http://www.comsoc.org/"},
      "url": "https://www.semanticscholar.org/paper/0a83b0fd0cd8435b76ec4af4607cd2f779a4935b",
      "title": "Implementation of Real-time Function Deployment with Resource Migration
      in Kubernetes", "abstract": "Prompt function deployment and management is a
      key role in network function virtualization to improve the continuity and reliability
      of network services. Kubernetes is a system to deploy and manage functions automatically.
      Existing tools in Kubernetes do not provide automatic function deployment and
      management in a real-time and optimal manner. It does not provide a resource
      type to manage the migratable resource, either. This paper designs and implements
      a two-layer controller structure in Kubernetes to achieve the function deployment
      in a limited computation time with considering resource migration for allocation
      optimality. A controller in the lower layer manages the Pods for an intermediate
      allocation with a model or a heuristic algorithm to respond to requests promptly.
      A controller in the upper layer manages instances by optimizing resource allocations
      with considering resource migration; it maintains the Pods by keeping the current
      state (intermediate allocation) consistent with the desired state (optimal allocation).
      Our demonstration validates that the controller automatically manages the resources
      promptly and correctly.", "venue": "IEEE/IFIP Network Operations and Management
      Symposium", "year": 2022, "referenceCount": 10, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2022-04-25", "journal": {"name": "NOMS
      2022-2022 IEEE/IFIP Network Operations and Management Symposium", "pages": "1-3"},
      "citationStyles": {"bibtex": "@Article{Zhu2022ImplementationOR,\n author = {Mengfei
      Zhu and R. Kang and E. Oki},\n booktitle = {IEEE/IFIP Network Operations and
      Management Symposium},\n journal = {NOMS 2022-2022 IEEE/IFIP Network Operations
      and Management Symposium},\n pages = {1-3},\n title = {Implementation of Real-time
      Function Deployment with Resource Migration in Kubernetes},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2116503162", "name": "Mengfei Zhu"}, {"authorId":
      "1638071782", "name": "R. Kang"}, {"authorId": "46530992", "name": "E. Oki"}]},
      {"paperId": "0a9874be134477bc3efb36b37a81dee1af57e086", "externalIds": {"DBLP":
      "conf/icsa/KoziolekHENR23", "DOI": "10.1109/ICSA-C57050.2023.00020", "CorpusId":
      258319118}, "corpusId": 258319118, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0a9874be134477bc3efb36b37a81dee1af57e086",
      "title": "TOSCA for Microservice Deployment in Distributed Control Systems:
      Experiences and Lessons Learned", "abstract": "The OASIS TOSCA language provides
      means for specifying the deployment of microservices to cloud-platforms in a
      vendor-neutral way. Designed in a independent of any application domain, it
      needs to be tailored to the distributed control systems (DCS), which for example
      manage the automation in chemical refineries, renewables production, and mining
      applications. There is still a lack of experience reports applying OASIS TOSCA
      in real-world settings, therefore the benefits and drawbacks of using this technology
      are still not well understood. In this context, we designed a simple DCS consisting
      of several microservices modelled in TOSCA and implemented an according TOSCA
      orchestrator. We executed a case study deploying the microservices to an on-premise
      and a cloud-based Kubernetes environment. While TOSCA provides a sophisticated
      object-oriented language, we found a few specification gaps, challenges when
      creating portable service templates, and challenges for synchronizing TOSCA
      orchestrators with DCS engineering tools as well as container orchestrators.
      The adoption of TOSCA in the process automation domain thus requires more work
      on the specification and tools and remains a mid-term goal.", "venue": "2023
      IEEE 20th International Conference on Software Architecture Companion (ICSA-C)",
      "year": 2023, "referenceCount": 25, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2023-03-01", "journal": {"name": "2023 IEEE 20th International Conference on
      Software Architecture Companion (ICSA-C)", "pages": "11-21"}, "citationStyles":
      {"bibtex": "@Article{Koziolek2023TOSCAFM,\n author = {Heiko Koziolek and Rhaban
      Hark and Nafise Eskandani and Phuoc Sang Nguyen and Pablo Rodriguez},\n booktitle
      = {2023 IEEE 20th International Conference on Software Architecture Companion
      (ICSA-C)},\n journal = {2023 IEEE 20th International Conference on Software
      Architecture Companion (ICSA-C)},\n pages = {11-21},\n title = {TOSCA for Microservice
      Deployment in Distributed Control Systems: Experiences and Lessons Learned},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2566995", "name": "Heiko Koziolek"},
      {"authorId": "1776025", "name": "Rhaban Hark"}, {"authorId": "1397375971", "name":
      "Nafise Eskandani"}, {"authorId": "2215309990", "name": "Phuoc Sang Nguyen"},
      {"authorId": "2170959457", "name": "Pablo Rodriguez"}]}, {"paperId": "0aa1742c1fac79bbe68bdd7f8f0c6d19f7f45609",
      "externalIds": {"DBLP": "conf/percom/OgawaKNKKN19", "MAG": "2951342026", "DOI":
      "10.1109/PERCOMW.2019.8730806", "CorpusId": 174820590}, "corpusId": 174820590,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0aa1742c1fac79bbe68bdd7f8f0c6d19f7f45609",
      "title": "IoT Device Virtualization for Efficient Resource Utilization in Smart
      City IoT Platform", "abstract": "To develop and interoperate smart city applications
      efficiently, smart city IoT platforms require efficient handling of various
      types of sensor devices, networking and computing resources, and different domain
      applications. To address this fact, in this paper, we introduce an IoT device
      virtualization that enables efficient utilization of computing resources. The
      proposal applies a micro-service sharing and dynamic resource scaling. In the
      performance validations, we implement an early prototype using Docker, Kubernetes,
      and Apache Kafka. Through the preliminary experiment, we confirm that the proposal
      can improve the application processing time by appropriately sharing and scaling
      micro services.", "venue": "2019 IEEE International Conference on Pervasive
      Computing and Communications Workshops (PerCom Workshops)", "year": 2019, "referenceCount":
      11, "citationCount": 22, "influentialCitationCount": 2, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2019-03-01", "journal":
      {"name": "2019 IEEE International Conference on Pervasive Computing and Communications
      Workshops (PerCom Workshops)", "pages": "419-422"}, "citationStyles": {"bibtex":
      "@Article{Ogawa2019IoTDV,\n author = {Keigo Ogawa and Kenji Kanai and Kenichi
      Nakamura and H. Kanemitsu and J. Katto and H. Nakazato},\n booktitle = {2019
      IEEE International Conference on Pervasive Computing and Communications Workshops
      (PerCom Workshops)},\n journal = {2019 IEEE International Conference on Pervasive
      Computing and Communications Workshops (PerCom Workshops)},\n pages = {419-422},\n
      title = {IoT Device Virtualization for Efficient Resource Utilization in Smart
      City IoT Platform},\n year = {2019}\n}\n"}, "authors": [{"authorId": "32599995",
      "name": "Keigo Ogawa"}, {"authorId": "145758871", "name": "Kenji Kanai"}, {"authorId":
      "2110884894", "name": "Kenichi Nakamura"}, {"authorId": "20842314", "name":
      "H. Kanemitsu"}, {"authorId": "1788294", "name": "J. Katto"}, {"authorId": "1846048",
      "name": "H. Nakazato"}]}, {"paperId": "0ab610adbfe348ef0f71eeeb4eea4c14506133cc",
      "externalIds": {"DBLP": "conf/icpads/HanZPCT21", "DOI": "10.1109/ICPADS53394.2021.00080",
      "CorpusId": 248518061}, "corpusId": 248518061, "publicationVenue": {"id": "d2e111a6-dd60-474c-ae8a-2b5773cca07d",
      "name": "International Conference on Parallel and Distributed Systems", "type":
      "conference", "alternate_names": ["Int Conf Parallel Distrib Syst", "ICPADS"],
      "url": "http://www.wikicfp.com/cfp/program?id=1443"}, "url": "https://www.semanticscholar.org/paper/0ab610adbfe348ef0f71eeeb4eea4c14506133cc",
      "title": "Online Scheduling Unbiased Distributed Learning over Wireless Edge
      Networks", "abstract": "To realize high quality smart IoT services, such as
      intelligent video surveillance in Auto Driving and Smart City, tremendous amount
      of distributed machine learning jobs train unbiased models in wireless edge
      networks, adopting the parameter server (PS) architecture. Due to the large
      datasets collected geo-distributedly, the training of unbiased distributed learning
      (UDL) brings high response latency and bandwidth consumption. In this paper,
      we propose an online scheduling algorithm, Okita, to minimize both the latency
      cost and bandwidth cost in UDL. Okita schedules UDL jobs at each time slot to
      jointly decide the execution time window, the amount of training data, the number
      and the location of concurrent workers and PSs in each site. To evaluate the
      practical performance of Okita, we implement a testbed based on Kubernetes.
      Extensive experiments and simulations show that Okita can reduce up to 60% of
      total cost, compared with the state-of-the-art schedulers in cloud systems.",
      "venue": "International Conference on Parallel and Distributed Systems", "year":
      2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2021-12-01", "journal": {"name": "2021 IEEE 27th International
      Conference on Parallel and Distributed Systems (ICPADS)", "pages": "599-606"},
      "citationStyles": {"bibtex": "@Article{Han2021OnlineSU,\n author = {Ziyi Han
      and Ruiting Zhou and Jinlong Pang and Yue Cao and Haisheng Tan},\n booktitle
      = {International Conference on Parallel and Distributed Systems},\n journal
      = {2021 IEEE 27th International Conference on Parallel and Distributed Systems
      (ICPADS)},\n pages = {599-606},\n title = {Online Scheduling Unbiased Distributed
      Learning over Wireless Edge Networks},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2217912753", "name": "Ziyi Han"}, {"authorId": "2369646", "name": "Ruiting
      Zhou"}, {"authorId": "2147388860", "name": "Jinlong Pang"}, {"authorId": "1696087",
      "name": "Yue Cao"}, {"authorId": "2606216", "name": "Haisheng Tan"}]}, {"paperId":
      "0ad36e53d66cb22dc75ed95c4da786631be155ba", "externalIds": {"DOI": "10.47992/ijcsbe.2581.6942.0263",
      "CorpusId": 258562566}, "corpusId": 258562566, "publicationVenue": {"id": "8bf31576-0836-4238-9141-bc1fd437f5fc",
      "name": "International journal of case studies in business, IT, and education",
      "type": "journal", "alternate_names": ["Int j case stud bus IT educ"], "issn":
      "2581-6942", "url": "https://srinivaspublication.com/ijcsbe/"}, "url": "https://www.semanticscholar.org/paper/0ad36e53d66cb22dc75ed95c4da786631be155ba",
      "title": "Secret Management in Managed Kubernetes Services", "abstract": "Purpose:
      Security and Privacy risks are increasing in the industry. Managed Kubernetes
      services help organizations to deploy micro service in the cloud. Securing the
      Secrets used by micro service applications in the cloud is a crucial topic.
      This paper studies how managed Kubernetes service industry secures the application
      Secrets in the cloud.\nDesign/Methodology/Approach: This study includes various
      Kubernetes service providers in the industry. The documentation available in
      the provider website and the published whitepapers are used to understand the
      Secret management technology.\nFindings/Result: Software applications and their
      data are protected in managed cloud services using Secret keys. Across service
      providers, there is a trend and a common approach in managing the Secrets. External
      or remote services integration is an improvement area for the providers. Operators
      have the responsibility of protecting Secrets and ensuring it does not leak
      out.\nOriginality/Value: This paper studies the efforts of different vendors
      to protect the micro service Secrets. This ensures that the organization''s
      critical assets are protected as per regulations and do not lead to financial
      losses. Cloud misconfiguration is one of the most common mistakes leading to
      security attacks, the knowledge of vendor''s features helps to configure the
      cloud services securely.\nPaper Type: Case study", "venue": "International journal
      of case studies in business, IT, and education", "year": 2023, "referenceCount":
      14, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://supublication.com/index.php/ijcsbe/article/download/21/18/35",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-04-29", "journal": {"name": "International Journal
      of Case Studies in Business, IT, and Education"}, "citationStyles": {"bibtex":
      "@Article{Pai2023SecretMI,\n author = {Santosh Pai and Dr. R. Srinivasa Rao
      Kunte},\n booktitle = {International journal of case studies in business, IT,
      and education},\n journal = {International Journal of Case Studies in Business,
      IT, and Education},\n title = {Secret Management in Managed Kubernetes Services},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "33674088", "name": "Santosh
      Pai"}, {"authorId": "2081976038", "name": "Dr. R. Srinivasa Rao Kunte"}]}, {"paperId":
      "0ad3863062dbe5119c71b448164c5f842f9c7c8b", "externalIds": {"DBLP": "conf/zeus/BohmW21",
      "CorpusId": 235076468}, "corpusId": 235076468, "publicationVenue": {"id": "092c2f16-d244-4d5d-a932-0a02e4afa4d2",
      "name": "Central-European Workshop on Services and their Composition", "type":
      "conference", "alternate_names": ["ZEUS", "Central-european Workshop Serv their
      Compos"], "url": "http://www.iaas.uni-stuttgart.de/zeus/"}, "url": "https://www.semanticscholar.org/paper/0ad3863062dbe5119c71b448164c5f842f9c7c8b",
      "title": "Profiling Lightweight Container Platforms: MicroK8s and K3s in Comparison
      to Kubernetes", "abstract": "Kubernetes (K8s) is nowadays the first choice for
      managing containerized deployments that rely on high\u2013availability, scalability,
      and fault tolerance. To enable the usage of container orchestration in resource\u2013constrained
      environments, lightweight distributions emerged. The platforms MicroK8s (mK8s)
      and K3s, which are analyzed in this paper, claim to provide an easy deployment
      of K8s in a simplified form and way. In terms of resource utilization and deployment
      time of a K8s cluster, the lightweight platforms promise savings compared to
      K8s. We analyzed lightweight K8s distributions in a quantitative way by performing
      an experiment that monitors the utilization and time consumption compared to
      a native K8s cluster lifecycle. This involves starting, stopping, and adding
      nodes as well as creating, running, and deleting deployments. We show that not
      all platforms exhibit a quantitative advantage over K8s. K3s caused a similar
      resource consumption but had some performance advantages for starting new nodes
      and adding nodes to the cluster. The platform MicroK8s has shown a higher resource
      utilization and time consumption for all steps in our modeled lifecycle simulation.",
      "venue": "Central-European Workshop on Services and their Composition", "year":
      2021, "referenceCount": 9, "citationCount": 29, "influentialCitationCount":
      6, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"pages": "65-73"},
      "citationStyles": {"bibtex": "@Article{B\u00f6hm2021ProfilingLC,\n author =
      {Sebastian B\u00f6hm and G. Wirtz},\n booktitle = {Central-European Workshop
      on Services and their Composition},\n pages = {65-73},\n title = {Profiling
      Lightweight Container Platforms: MicroK8s and K3s in Comparison to Kubernetes},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "38469762", "name": "Sebastian
      B\u00f6hm"}, {"authorId": "145889900", "name": "G. Wirtz"}]}, {"paperId": "0ae29dd9bce8e3315fd17422ce88f6a2c49a53bd",
      "externalIds": {"MAG": "3198429363", "DOI": "10.36548/jaicn.2021.3.004", "CorpusId":
      239626177}, "corpusId": 239626177, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0ae29dd9bce8e3315fd17422ce88f6a2c49a53bd",
      "title": "Blockchain-Enabled Federated Learning on Kubernetes for Air Quality
      Prediction Applications", "abstract": "The biggest realization of the Machine
      Learning (ML) in societal applications, including air quality prediction, has
      been the inclusion of novel learning techniques with the focus on solving privacy
      and scalability issues which capture the inventiveness of tens of thousands
      of data scientists. Transferring learning models across multi-regions or locations
      has been a considerable challenge as sufficient technologies were not adopted
      in the recent past. This paper proposes a Blockchain- enabled Federated Learning
      Air Quality Prediction (BFL-AQP) framework on Kubernetes cluster which transfers
      the learning model parameters of ML algorithms across distributed cluster nodes
      and predicts the air quality parameters of different locations. Experiments
      were carried out to explore the frame- work and transfer learning models of
      air quality prediction parameters. Besides, the performance aspects of increasing
      the Kubernetes cluster nodes of blockchains in the federated learning environment
      were studied; the time taken to establish seven blockchain organizations on
      top of the Kubernetes cluster while investigating into the federated learning
      algorithms namely Federated Random Forests (FRF) and Federated Linear Regression
      (FLR) for air quality predictions, were revealed in the paper.", "venue": "September
      2021", "year": 2021, "referenceCount": 25, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-08-30", "journal": {"name":
      "September 2021"}, "citationStyles": {"bibtex": "@Article{Benedict2021BlockchainEnabledFL,\n
      author = {S. Benedict and Deepumon Saji and Rajesh P Sukumaran and M. Bhagyalakshmi},\n
      booktitle = {September 2021},\n journal = {September 2021},\n title = {Blockchain-Enabled
      Federated Learning on Kubernetes for Air Quality Prediction Applications},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2041143", "name": "S. Benedict"},
      {"authorId": "2134962444", "name": "Deepumon Saji"}, {"authorId": "2146733800",
      "name": "Rajesh P Sukumaran"}, {"authorId": "2150144235", "name": "M. Bhagyalakshmi"}]},
      {"paperId": "0aed0692288e5b84a622b7318d72efdc12408bd1", "externalIds": {"DOI":
      "10.32604/iasc.2023.039565", "CorpusId": 259709852}, "corpusId": 259709852,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0aed0692288e5b84a622b7318d72efdc12408bd1",
      "title": "Container Instrumentation and Enforcement System for Runtime Security
      of Kubernetes Platform with eBPF", "abstract": null, "venue": "Intelligent Automation
      &amp; Soft Computing", "year": 2023, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "Intelligent Automation &amp; Soft Computing"}, "citationStyles": {"bibtex":
      "@Article{Gwak2023ContainerIA,\n author = {Songi Gwak and Thien-Phuc Doan and
      Souhwan Jung},\n booktitle = {Intelligent Automation &amp; Soft Computing},\n
      journal = {Intelligent Automation &amp; Soft Computing},\n title = {Container
      Instrumentation and Enforcement System for Runtime Security of Kubernetes Platform
      with eBPF},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2128543536", "name":
      "Songi Gwak"}, {"authorId": "2016771665", "name": "Thien-Phuc Doan"}, {"authorId":
      "3327024", "name": "Souhwan Jung"}]}, {"paperId": "0b0c8e16a4e78d8a2780219844dec15cc8443886",
      "externalIds": {"DBLP": "conf/systor/ZeiligBARLB19", "MAG": "2945653082", "DOI":
      "10.1145/3319647.3325850", "CorpusId": 167209803}, "corpusId": 167209803, "publicationVenue":
      {"id": "8f0f5460-2391-4d75-ae39-d9b233b91e0a", "name": "Annual Haifa Experimental
      Systems Conference", "type": "conference", "alternate_names": ["Haifa Experimental
      Systems Conference", "SYSTOR", "ACM Int Conf Syst Storage", "Annu Haifa Exp
      Syst Conf", "ACM International Conference on Systems and Storage", "Haifa Exp
      Syst Conf"]}, "url": "https://www.semanticscholar.org/paper/0b0c8e16a4e78d8a2780219844dec15cc8443886",
      "title": "Noisy neighbor detection using skydive", "abstract": "Cloud computing
      technology enables uniform access to shared pools of configurable system resources
      and higher-level services, rapidly provisioned with minimal management effort.
      Cloud computing relies on sharing the resources to achieve coherence and economies
      of scale, through virtualizion. Cloud network, in particular, is virtualized
      through multiple logical constructs and SW layers, making cloud connectivity
      complex to configure, debug, and visualize. In this work, we show how to detect
      cloud network operational issues through monitoring and analytics, using and
      enhancing open source network analyzer, Skydive [2]. In particular, we focus
      on Noisy Neighbor Effect, a situation in which a common resource is monopolized
      by a noisy tenant, resulting in performance degradation experienced by other
      tenants. Skydive is an open-source network topology and protocol analyzer, capable
      of discovering and visualizing cloud network topology across its multiple layers,
      as well as capturing network traffic at programmable granularity, injecting
      network traffic, and more. Typical Skydive setup consists of multiple Skydive
      agents installed on various network components and one or more Skydive analyzers
      deployed on any compute resource in the cloud. Skydive agents discover and report
      the information to a Skydive analyzer, that stores it over time so it can be
      consumed via Web UI, command line tools, and REST API, for visualization, exploration,
      and analytics. In our work we used Skydive to investigate and detect the Noisy
      Neighbor Effect in Kubernetes (k8s) network. Our setup consisted of a commercial
      cloud platform, IBM Cloud Private (ICP) [1], running an HTTP server and two
      HTTP clients constantly sending requests to the server, all 3 are containerized
      Python applications as shown in Figure 1. We have installed Skydive agents on
      all the k8s worker nodes. To achieve our goal of detecting anomalous client
      behavior and creating a visual indication of such anomaly in Skydive UI, we
      have enhanced Skydive capabilities and contributed our enhancements back to
      the project by extending the Python REST client library to support traffic injections,
      and fixing existing bugs in the Skydive system. We used those enhancements to
      measure Round Trip Time (RTT) between nodes in the cloud network, detect anomalies
      in RTT measurements and indicate them in Skydive UI, such as the green indication
      in Figure 1. In this work, we have made the first step towards automatic detection
      of Noisy Neighbor with Skydive, using simple threshold based approach, in an
      experimental setup. This work can be extended in a multiple ways - support more
      generic and realistic multi-tenant setup; employ deeper analyses, e.g. ML and
      DL, also on historical data; explore additional anomalous cases, beyond the
      Noisy Neighbor Effect.", "venue": "Annual Haifa Experimental Systems Conference",
      "year": 2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book"],
      "publicationDate": "2019-05-22", "journal": {"name": "Proceedings of the 12th
      ACM International Conference on Systems and Storage"}, "citationStyles": {"bibtex":
      "@Article{Zeilig2019NoisyND,\n author = {Ofir Zeilig and Noa Bratman and I.
      Ashkenazi and E. Raichstein and A. Levin and K. Barabash},\n booktitle = {Annual
      Haifa Experimental Systems Conference},\n journal = {Proceedings of the 12th
      ACM International Conference on Systems and Storage},\n title = {Noisy neighbor
      detection using skydive},\n year = {2019}\n}\n"}, "authors": [{"authorId": "121635805",
      "name": "Ofir Zeilig"}, {"authorId": "121360032", "name": "Noa Bratman"}, {"authorId":
      "122861756", "name": "I. Ashkenazi"}, {"authorId": "3204126", "name": "E. Raichstein"},
      {"authorId": "47251770", "name": "A. Levin"}, {"authorId": "3037313", "name":
      "K. Barabash"}]}, {"paperId": "0b6810a43abf817162a8a0afe869d53769fd06f6", "externalIds":
      {"MAG": "2958135690", "DBLP": "conf/intcompsymp/ZhengY18", "DOI": "10.1007/978-981-13-9190-3_35",
      "CorpusId": 197537986}, "corpusId": 197537986, "publicationVenue": {"id": "914d4734-285a-4cd8-bba1-eec0db26a512",
      "name": "International Conference on Supercomputing", "type": "conference",
      "alternate_names": ["International Conference Computer, Communication and Computational
      Sciences", "ICS", "INFORMS Comput Soc", "Int Conf Supercomput", "INFORMS Computing
      Society", "Int Conf Comput Commun Comput Sci"], "url": "http://portal.acm.org/proceedings/ics/"},
      "url": "https://www.semanticscholar.org/paper/0b6810a43abf817162a8a0afe869d53769fd06f6",
      "title": "Auto-scaling in Kubernetes-Based Fog Computing Platform", "abstract":
      null, "venue": "International Conference on Supercomputing", "year": 2018, "referenceCount":
      12, "citationCount": 12, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2018-12-20", "journal":
      {"pages": "338-345"}, "citationStyles": {"bibtex": "@Article{Zheng2018AutoscalingIK,\n
      author = {Wei-Sheng Zheng and Li-Hsing Yen},\n booktitle = {International Conference
      on Supercomputing},\n pages = {338-345},\n title = {Auto-scaling in Kubernetes-Based
      Fog Computing Platform},\n year = {2018}\n}\n"}, "authors": [{"authorId": "49802272",
      "name": "Wei-Sheng Zheng"}, {"authorId": "145316970", "name": "Li-Hsing Yen"}]},
      {"paperId": "0b86a6c9accd79d372eb91dd1aba2baa308ac0f7", "externalIds": {"MAG":
      "3027101961", "DBLP": "conf/closer/GoethalsVT20", "DOI": "10.5220/0009517401610170",
      "CorpusId": 219328560}, "corpusId": 219328560, "publicationVenue": {"id": "229ff272-1128-48a4-94eb-2ea4041eadff",
      "name": "International Conference on Cloud Computing and Services Science",
      "type": "conference", "alternate_names": ["CLOSER", "Int Conf Cloud Comput Serv
      Sci"], "url": "http://closer.scitevents.org/"}, "url": "https://www.semanticscholar.org/paper/0b86a6c9accd79d372eb91dd1aba2baa308ac0f7",
      "title": "Adaptive Fog Service Placement for Real-time Topology Changes in Kubernetes
      Clusters", "abstract": ": Recent trends have caused a shift from services deployed
      solely in monolithic data centers in the cloud to services deployed in the fog
      (e.g. roadside units for smart highways, support services for IoT devices).
      Si-multaneously, the variety and number of IoT devices has grown rapidly, along
      with their reliance on cloud services. Additionally, many of these devices are
      now themselves capable of running containers, allowing them to execute some
      services previously deployed in the fog. The combination of IoT devices and
      fog computing has many advantages in terms of ef\ufb01ciency and user experience,
      but the scale, volatile topology and heterogeneous network conditions of the
      fog and the edge also present problems for service deployment scheduling. Cloud
      service scheduling often takes a wide array of parameters into account to calculate
      optimal solutions. However, the algorithms used are not generally capable of
      handling the scale and volatility of the fog. This paper presents a scheduling
      algorithm, named \u201cSwirly\u201d, for large scale fog and edge networks,
      which is capable of adapting to changes in network conditions and connected
      devices. The algorithm details are presented and implemented as a service using
      the Kubernetes API. This implementation is validated and benchmarked, showing
      that a single threaded Swirly service is easily capable of managing service
      meshes for at least 300.000 devices in soft real-time.", "venue": "International
      Conference on Cloud Computing and Services Science", "year": 2020, "referenceCount":
      19, "citationCount": 6, "influentialCitationCount": 1, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"pages": "161-170"},
      "citationStyles": {"bibtex": "@Article{Goethals2020AdaptiveFS,\n author = {Tom
      Goethals and B. Volckaert and F. Turck},\n booktitle = {International Conference
      on Cloud Computing and Services Science},\n pages = {161-170},\n title = {Adaptive
      Fog Service Placement for Real-time Topology Changes in Kubernetes Clusters},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "52223901", "name": "Tom Goethals"},
      {"authorId": "1803683", "name": "B. Volckaert"}, {"authorId": "1715957", "name":
      "F. Turck"}]}, {"paperId": "0b9569b1df0245ab4a4b2785ebe98b2ded2ce9da", "externalIds":
      {"DBLP": "journals/jisa/SampaioRBR19", "MAG": "2923436068", "DOI": "10.1186/s13174-019-0104-0",
      "CorpusId": 73725184}, "corpusId": 73725184, "publicationVenue": {"id": "42af0896-7bcc-4002-8d09-63fd18f13f53",
      "name": "Journal of Internet Services and Applications", "type": "journal",
      "alternate_names": ["J Internet Serv Appl"], "issn": "1867-4828", "url": "http://www.jisajournal.com/",
      "alternate_urls": ["http://www.springer.com/computer/communication+networks/journal/13174",
      "http://link.springer.com/journal/volumesAndIssues/13174"]}, "url": "https://www.semanticscholar.org/paper/0b9569b1df0245ab4a4b2785ebe98b2ded2ce9da",
      "title": "Improving microservice-based applications with runtime placement adaptation",
      "abstract": null, "venue": "Journal of Internet Services and Applications",
      "year": 2019, "referenceCount": 50, "citationCount": 49, "influentialCitationCount":
      4, "isOpenAccess": true, "openAccessPdf": {"url": "https://jisajournal.springeropen.com/track/pdf/10.1186/s13174-019-0104-0",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Review"], "publicationDate": "2019-02-26",
      "journal": {"name": "Journal of Internet Services and Applications", "pages":
      "1-30", "volume": "10"}, "citationStyles": {"bibtex": "@Article{Sampaio2019ImprovingMA,\n
      author = {Adalberto R. Sampaio and J. Rubin and Ivan Beschastnikh and N. Rosa},\n
      booktitle = {Journal of Internet Services and Applications},\n journal = {Journal
      of Internet Services and Applications},\n pages = {1-30},\n title = {Improving
      microservice-based applications with runtime placement adaptation},\n volume
      = {10},\n year = {2019}\n}\n"}, "authors": [{"authorId": "144376181", "name":
      "Adalberto R. Sampaio"}, {"authorId": "40575065", "name": "J. Rubin"}, {"authorId":
      "2637596", "name": "Ivan Beschastnikh"}, {"authorId": "1765003", "name": "N.
      Rosa"}]}, {"paperId": "0bbcedbdb0dcb4f6d28c6eaf4c66cc654dd0d2ed", "externalIds":
      {"MAG": "3096411172", "DBLP": "conf/supercomputer/TzenetopoulosMX20", "DOI":
      "10.1007/978-3-030-59851-8_21", "CorpusId": 224808639}, "corpusId": 224808639,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0bbcedbdb0dcb4f6d28c6eaf4c66cc654dd0d2ed",
      "title": "Interference-Aware Orchestration in Kubernetes", "abstract": null,
      "venue": "ISC Workshops", "year": 2020, "referenceCount": 14, "citationCount":
      11, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"pages": "321-330"},
      "citationStyles": {"bibtex": "@Article{Tzenetopoulos2020InterferenceAwareOI,\n
      author = {Achilleas Tzenetopoulos and Dimosthenis Masouros and S. Xydis and
      D. Soudris},\n booktitle = {ISC Workshops},\n pages = {321-330},\n title = {Interference-Aware
      Orchestration in Kubernetes},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "2003073966", "name": "Achilleas Tzenetopoulos"}, {"authorId": "21075634", "name":
      "Dimosthenis Masouros"}, {"authorId": "1702282", "name": "S. Xydis"}, {"authorId":
      "144189794", "name": "D. Soudris"}]}, {"paperId": "0bd9e0ab083e78b6513b5f40381dd4b2a53aed02",
      "externalIds": {"DOI": "10.1088/1742-6596/2438/1/012030", "CorpusId": 256897701},
      "corpusId": 256897701, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0bd9e0ab083e78b6513b5f40381dd4b2a53aed02",
      "title": "Distributed file systems performance tests on Kubernetes/Docker clusters",
      "abstract": "Modern data centers need distributed file systems to provide user
      applications with access to data stored on a large number of nodes. The ability
      to mount a distributed file system and leverage its native application programming
      interfaces in a Docker container, combined with the advanced orchestration features
      provided by Kubernetes, can improve flexibility in installing, monitoring and
      recovering data management and transfer services. At INFN-CNAF some distributed
      file systems (i.e. IBM Spectrum Scale, CephFS and Lustre-ZFS) deployment tests
      with Kubernetes and Docker have been conducted recently with positive results.
      The purpose of this paper is to show the throughput scores of the previously
      mentioned file systems when their servers are containerized and run on bare
      metal machines using a container orchestration framework. This is a preliminary
      study: for the time being, only sequential read/write tests have been considered.",
      "venue": "Journal of Physics: Conference Series", "year": 2023, "referenceCount":
      1, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://iopscience.iop.org/article/10.1088/1742-6596/2438/1/012030/pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Physics"], "s2FieldsOfStudy": [{"category":
      "Physics", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2023-02-01", "journal": {"name": "Journal
      of Physics: Conference Series", "volume": "2438"}, "citationStyles": {"bibtex":
      "@Conference{Fornari2023DistributedFS,\n author = {Federico Fornari and A. Cavalli
      and D. Cesini and A. Falabella and E. Fattibene and L. Morganti and A. Prosperini
      and V. Sapunenko},\n booktitle = {Journal of Physics: Conference Series},\n
      journal = {Journal of Physics: Conference Series},\n title = {Distributed file
      systems performance tests on Kubernetes/Docker clusters},\n volume = {2438},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2058387319", "name": "Federico
      Fornari"}, {"authorId": "152753179", "name": "A. Cavalli"}, {"authorId": "2641540",
      "name": "D. Cesini"}, {"authorId": "5482670", "name": "A. Falabella"}, {"authorId":
      "3274392", "name": "E. Fattibene"}, {"authorId": "3383078", "name": "L. Morganti"},
      {"authorId": "49486213", "name": "A. Prosperini"}, {"authorId": "2865271", "name":
      "V. Sapunenko"}]}, {"paperId": "0bf7ce84db6b97232ad9a26a8d332a9cae3da470", "externalIds":
      {"DOI": "10.21203/rs.3.rs-785341/v1", "CorpusId": 239117118}, "corpusId": 239117118,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0bf7ce84db6b97232ad9a26a8d332a9cae3da470",
      "title": "Crane Cloud: A Resilient Multi-Cloud Service Layer for Resource Constrained
      Settings", "abstract": "\n Whereas the main cloud providers have set up cloud
      services on stable infrastructure, developers and users situated in low-resource
      settings access cloud services and platforms using low-end computing devices
      that often connect to the Internet via slow mobile connections. These settings
      require custom software abstraction layers that consider such bandwidth constraints
      and intermittent connections as a rule rather than the exception. In this paper,
      we identify key challenges for developing for and accessing cloud services in
      resource constrained settings, namely, (1) Frequent Internet partitions and
      bandwidth constraints, (2) Data jurisdiction restrictions, (3) Vendor lock-in,
      and (4) Poor quality of service. To address these challenges, we propose a set
      of design considerations and properties for a resilient multi-cloud service
      layer, that includes: (1) Containerisation and orchestration of applications,
      (2) Service scheduling and replication, (3) Portability and multi-cloud migration,
      (4) Resilience to network partitions and bandwidth constraints, (5) Automated
      service discovery and load balancing, (6) Localised image registry, and (7)
      Support for platform monitoring and management. We present a prototype validation
      case study, Crane Cloud, an open source multi-cloud service abstraction layer
      built on-top of Kubernetes that is designed with inherent support for resilience
      to network partitions, microservice orchestration (deployment, scaling and management
      of containerized applications)a localized image registry, support for migration
      of services between private and public clouds to avoid vendor lock-in issues
      and platform monitoring. We evaluate the performance and user experience of
      Crane Cloud by implementing and deploying a computational and bandwidth intensive
      machine learning system shows lower response time compared when hosted on other
      public clouds.", "venue": "", "year": 2021, "referenceCount": 62, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-09-13", "journal": null,
      "citationStyles": {"bibtex": "@Inproceedings{Bainomugisha2021CraneCA,\n author
      = {Engineer Bainomugisha and Alex Mwotil},\n title = {Crane Cloud: A Resilient
      Multi-Cloud Service Layer for Resource Constrained Settings},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2942980", "name": "Engineer Bainomugisha"}, {"authorId":
      "2284217", "name": "Alex Mwotil"}]}, {"paperId": "0c2dece5b92601c16d4547982cbc125f10cecd10",
      "externalIds": {"MAG": "3006504841", "DBLP": "journals/computers/ChindanondaPG20",
      "DOI": "10.3390/computers9010012", "CorpusId": 213907806}, "corpusId": 213907806,
      "publicationVenue": {"id": "38e26272-f1d7-470a-a99f-0b5884c9df6e", "name": "De
      Computis", "alternate_names": ["Comput"], "issn": "1886-1881", "url": "https://dialnet.unirioja.es/servlet/revista?clave_revista=6205&tipo_busqueda=CODIGO",
      "alternate_urls": ["http://decomputis.org/ojs/", "https://ideas.repec.org/s/dec/articl.html",
      "http://www.decomputis.org/"]}, "url": "https://www.semanticscholar.org/paper/0c2dece5b92601c16d4547982cbc125f10cecd10",
      "title": "Self-Adaptive Data Processing to Improve SLOs for Dynamic IoT Workloads",
      "abstract": "Internet of Things (IoT) covers scenarios of cyber\u2013physical
      interaction of smart devices with humans and the environment and, such as applications
      in smart city, smart manufacturing, predictive maintenance, and smart home.
      Traditional scenarios are quite static in the sense that the amount of supported
      end nodes, as well as the frequency and volume of observations transmitted,
      does not change much over time. The paper addresses the challenge of adapting
      the capacity of the data processing part of IoT pipeline in response to dynamic
      workloads for centralized IoT scenarios where the quality of user experience
      matters, e.g., interactivity and media streaming as well as the predictive maintenance
      for multiple moving vehicles, centralized analytics for wearable devices and
      smartphones. The self-adaptation mechanism for data processing IoT infrastructure
      deployed in the cloud is horizontal autoscaling. In this paper we propose augmentations
      to the computation schemes of data processing component\u2019s desired replicas
      count from the previous work; these augmentations aim to repurpose original
      sets of metrics to tackle the task of SLO violations minimization for dynamic
      workloads instead of minimizing the cost of deployment in terms of instance
      seconds. The cornerstone proposed augmentation that underpins all the other
      ones is the adaptation of the desired replicas computation scheme to each scaling
      direction (scale-in and scale-out) separately. All the proposed augmentations
      were implemented in the standalone self-adaptive agent acting alongside Kubernetes\u2019
      HPA such that limitations of timely acquisition of the monitoring data for scaling
      are mitigated. Evaluation and comparison with the previous work show improvement
      in service level achieved, e.g., latency SLO violations were reduced from 2.87%
      to 1.70% in case of the forecasted message queue length-based replicas count
      computation used both for scale-in and scale-out, but at the same time higher
      cost of the scaled data processor deployment is observed.", "venue": "De Computis",
      "year": 2020, "referenceCount": 23, "citationCount": 5, "influentialCitationCount":
      2, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/2073-431X/9/1/12/pdf?version=1581665380",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2020-02-14", "journal": {"name": "Comput.",
      "pages": "12", "volume": "9"}, "citationStyles": {"bibtex": "@Article{Chindanonda2020SelfAdaptiveDP,\n
      author = {Peeranut Chindanonda and Vladimir Podolskiy and M. Gerndt},\n booktitle
      = {De Computis},\n journal = {Comput.},\n pages = {12},\n title = {Self-Adaptive
      Data Processing to Improve SLOs for Dynamic IoT Workloads},\n volume = {9},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "151501011", "name": "Peeranut
      Chindanonda"}, {"authorId": "39309392", "name": "Vladimir Podolskiy"}, {"authorId":
      "3240465", "name": "M. Gerndt"}]}, {"paperId": "0c3c15374bfb1801cbcf5e2d3f1705c7fbc5d036",
      "externalIds": {"DBLP": "conf/drcn/KangZHSO21", "DOI": "10.1109/DRCN51631.2021.9477366",
      "CorpusId": 235965953}, "corpusId": 235965953, "publicationVenue": {"id": "8562fda3-aff2-4814-afe8-640547715626",
      "name": "International Workshop on the Design of Reliable Communication Networks",
      "type": "conference", "alternate_names": ["Des Reliab Commun Netw", "Int Workshop
      Des Reliab Commun Netw", "DRCN", "Design of Reliable Communication Networks"],
      "url": "https://ieeexplore.ieee.org/xpl/conhome.jsp?punumber=1002110"}, "url":
      "https://www.semanticscholar.org/paper/0c3c15374bfb1801cbcf5e2d3f1705c7fbc5d036",
      "title": "Design of Scheduler Plugins for Reliable Function Allocation in Kubernetes",
      "abstract": "The reliability of virtual network can be increased by allocating
      virtual network functions (VNF) to suitable locations. The VNF placement problems
      are formulated as optimization models with different objectives. The models
      are solved by optimization software and heuristic algorithms. The allocation
      results obtained by the models are used to allocate the VNFs to nodes. Since
      different users have different objectives, it is necessary to allocate different
      groups of VNFs by using different models. Existing tools did not provide a method
      to connect multiple optimization models with Kubernetes. We implement function
      scheduler plugins cooperating with multiple reliable function allocation models
      in Kubernetes, which is a system for automating deployment, scaling, and management
      of containerized applications. Demonstration validates that the plugins allocate
      functions by using the allocation results obtained by the model automatically
      and run service functions correctly.", "venue": "International Workshop on the
      Design of Reliable Communication Networks", "year": 2021, "referenceCount":
      5, "citationCount": 6, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2021-04-19", "journal": {"name": "2021 17th
      International Conference on the Design of Reliable Communication Networks (DRCN)",
      "pages": "1-3"}, "citationStyles": {"bibtex": "@Article{Kang2021DesignOS,\n
      author = {Rui Kang and Mengfei Zhu and Fujun He and Takehiro Sato and E. Oki},\n
      booktitle = {International Workshop on the Design of Reliable Communication
      Networks},\n journal = {2021 17th International Conference on the Design of
      Reliable Communication Networks (DRCN)},\n pages = {1-3},\n title = {Design
      of Scheduler Plugins for Reliable Function Allocation in Kubernetes},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "31737264", "name": "Rui Kang"}, {"authorId":
      "2116503162", "name": "Mengfei Zhu"}, {"authorId": "38935226", "name": "Fujun
      He"}, {"authorId": "2110904655", "name": "Takehiro Sato"}, {"authorId": "46530992",
      "name": "E. Oki"}]}, {"paperId": "0c3ce30196835d3730e759c9da36561432b9aa60",
      "externalIds": {"DBLP": "conf/systor/VernikKCY23", "DOI": "10.1145/3579370.3594764",
      "CorpusId": 259223603}, "corpusId": 259223603, "publicationVenue": {"id": "8f0f5460-2391-4d75-ae39-d9b233b91e0a",
      "name": "Annual Haifa Experimental Systems Conference", "type": "conference",
      "alternate_names": ["Haifa Experimental Systems Conference", "SYSTOR", "ACM
      Int Conf Syst Storage", "Annu Haifa Exp Syst Conf", "ACM International Conference
      on Systems and Storage", "Haifa Exp Syst Conf"]}, "url": "https://www.semanticscholar.org/paper/0c3ce30196835d3730e759c9da36561432b9aa60",
      "title": "When SkyPilot meets Kubernetes", "abstract": "The Sky vision[3] aims
      to open a new era in cloud computing. Sky abstracts clouds and dynamically use
      multiple clouds to optimize workload execution. This enable users to focus on
      their business logic, rather than interact with multiple clouds, and manually
      optimize performance and costs.", "venue": "Annual Haifa Experimental Systems
      Conference", "year": 2023, "referenceCount": 1, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2023-06-05", "journal": {"name":
      "Proceedings of the 16th ACM International Conference on Systems and Storage"},
      "citationStyles": {"bibtex": "@Article{Vernik2023WhenSM,\n author = {G. Vernik
      and Ronen I. Kat and O. Cohen and Zongheng Yang},\n booktitle = {Annual Haifa
      Experimental Systems Conference},\n journal = {Proceedings of the 16th ACM International
      Conference on Systems and Storage},\n title = {When SkyPilot meets Kubernetes},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "3304411", "name": "G. Vernik"},
      {"authorId": "2850301", "name": "Ronen I. Kat"}, {"authorId": "2220400048",
      "name": "O. Cohen"}, {"authorId": "2109479107", "name": "Zongheng Yang"}]},
      {"paperId": "0c3cfb96f23a4f1fdd1e7dbfc24e31d84b8f1bad", "externalIds": {"MAG":
      "3096882187", "DBLP": "conf/sbcars/AraujoEGT20", "DOI": "10.1145/3425269.3425270",
      "CorpusId": 226199830}, "corpusId": 226199830, "publicationVenue": {"id": "4fe027c5-8d9c-4223-9646-9770f250d907",
      "name": "Brazilian Symposium on Software Components, Architectures and Reuse",
      "type": "conference", "alternate_names": ["SBCARS", "Braz Symp Softw Compon
      Archit Reuse"]}, "url": "https://www.semanticscholar.org/paper/0c3cfb96f23a4f1fdd1e7dbfc24e31d84b8f1bad",
      "title": "Applying a Multi-platform Architectural Conformance Solution in a
      Real-world Microservice-based System", "abstract": "Microservice architectures
      are composed of a set of independent microservices that execute well-defined
      functionalities, allowing each one to be developed in different programming
      languages and data management technologies. The problem, however, is that such
      heterogeneity implies in a harder verification process of communication among
      microservices and the architectural designs of each microservice. Although the
      state-of-the-art provides several architectural conformance solutions, none
      formally restricts communications (e.g., over HTTP) between different systems.
      Even stable and industrial solutions---such as Kubernetes, Terraform, and Docker
      Compose---provide basic mechanisms to restrict communications between microservices.
      Thereupon, this paper proposes and evaluates a multi-platform architectural
      conformance solution for the microservice architecture. For this purpose, (i)
      we specify an architectural constraint language, called DCL+---adapted from
      the DCL (Dependency Constraint Language) language; (ii) we propose a multi-platform
      process that restricts the communication between the microservices and also
      verifies the architectural projects of each one of them; (iii) we develop DCL+check,
      a tool that implements the proposed solution; (iv) we apply our process in a
      medium-size real-world application composed of eleven microservices, developed
      in two different languages (JavaScript and Java). As result, we found 16 communication
      and 171 structural design violations. The communication violations occurred
      in general due to the lack of knowledge of the developers about the restrictions
      of communication among the modules of the orchestrator system and other microservices,
      as well as the evolution of two microservices.", "venue": "Brazilian Symposium
      on Software Components, Architectures and Reuse", "year": 2020, "referenceCount":
      24, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2020-10-19",
      "journal": {"name": "Proceedings of the 14th Brazilian Symposium on Software
      Components, Architectures, and Reuse"}, "citationStyles": {"bibtex": "@Book{Araujo2020ApplyingAM,\n
      author = {Elena A. Araujo and \u00c1lvaro M. Esp\u00edndola and V. Garcia and
      Ricardo Terra},\n booktitle = {Brazilian Symposium on Software Components, Architectures
      and Reuse},\n journal = {Proceedings of the 14th Brazilian Symposium on Software
      Components, Architectures, and Reuse},\n title = {Applying a Multi-platform
      Architectural Conformance Solution in a Real-world Microservice-based System},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "2007455273", "name": "Elena
      A. Araujo"}, {"authorId": "2061086693", "name": "\u00c1lvaro M. Esp\u00edndola"},
      {"authorId": "1755263", "name": "V. Garcia"}, {"authorId": "145575818", "name":
      "Ricardo Terra"}]}, {"paperId": "0c4273e9cce83a7dbcdd49daee68e2d2731d77ab",
      "externalIds": {"MAG": "3112659525", "DOI": "10.1007/978-981-33-4102-9_126",
      "CorpusId": 230525668}, "corpusId": 230525668, "publicationVenue": {"id": "9f142d12-860c-4df5-a17f-905e6d46dcb8",
      "name": "Lecture Notes in Electrical Engineering", "alternate_names": ["Lect
      Note Electr Eng"], "issn": "1876-1100", "url": "http://www.springer.com/engineering/signals/book/978-3-540-79040-2"},
      "url": "https://www.semanticscholar.org/paper/0c4273e9cce83a7dbcdd49daee68e2d2731d77ab",
      "title": "Kubernetes Realizes the Cloud & Network Cooperation Based on Hardware
      SDN Controller", "abstract": null, "venue": "Lecture Notes in Electrical Engineering",
      "year": 2020, "referenceCount": 10, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2020-12-17",
      "journal": {"name": "Lecture Notes in Electrical Engineering"}, "citationStyles":
      {"bibtex": "@Article{Kang2020KubernetesRT,\n author = {Nan Kang and X. Xing
      and Benzhong Wang and XueSong Zhang and Hong Jiang},\n booktitle = {Lecture
      Notes in Electrical Engineering},\n journal = {Lecture Notes in Electrical Engineering},\n
      title = {Kubernetes Realizes the Cloud & Network Cooperation Based on Hardware
      SDN Controller},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2052131850",
      "name": "Nan Kang"}, {"authorId": "2055644688", "name": "X. Xing"}, {"authorId":
      "2115280862", "name": "Benzhong Wang"}, {"authorId": "2107997266", "name": "XueSong
      Zhang"}, {"authorId": "2158160836", "name": "Hong Jiang"}]}, {"paperId": "0c6aa4817f22cc0f74f243bf05e4099c684e43dd",
      "externalIds": {"DOI": "10.1109/CSCI58124.2022.00237", "CorpusId": 261127608},
      "corpusId": 261127608, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0c6aa4817f22cc0f74f243bf05e4099c684e43dd",
      "title": "Container-Based VoIP Failover Design on Kubernetes Overlay Networks",
      "abstract": "This paper studied how to utilize a popular container scheduling
      orchestrator - Kubernetes (K8s) - in today''s cloud computing scenario to support
      the Voice over IP (VoIP) applications. In VoIP, two major protocols - Session
      Initiation Protocol (SIP) and Real-time Transport Protocol (RTP) - usually require
      network traffic to obey the following pattern: the packets from both end devices
      must be directed to the same server during a call. However, in a K8s network
      environment, the automatic LoadBalancer mechanism only ensures that traffic
      is directed to a healthy Pod but does not consider the need for both sides of
      the session to be handled by the same server. Therefore, after VoIP is introduced
      into the container, some subtle design must be proposed to integrate SIP and
      RTP into the existing K8s network architecture to handle two-way communication
      and failover so that the above problem can be properly addressed. In this paper,
      we use the K8s Label selector, K8s leader-election, and a few open-source software
      to solve the problem of failover, and measure the pressure of failover on K8s
      and the underlying operating system.", "venue": "2022 International Conference
      on Computational Science and Computational Intelligence (CSCI)", "year": 2022,
      "referenceCount": 11, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-12-01",
      "journal": {"name": "2022 International Conference on Computational Science
      and Computational Intelligence (CSCI)", "pages": "1317-1322"}, "citationStyles":
      {"bibtex": "@Conference{Jhuang2022ContainerBasedVF,\n author = {Cai-Sian Jhuang
      and Quincy Wu},\n booktitle = {2022 International Conference on Computational
      Science and Computational Intelligence (CSCI)},\n journal = {2022 International
      Conference on Computational Science and Computational Intelligence (CSCI)},\n
      pages = {1317-1322},\n title = {Container-Based VoIP Failover Design on Kubernetes
      Overlay Networks},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2233500612",
      "name": "Cai-Sian Jhuang"}, {"authorId": "2987263", "name": "Quincy Wu"}]},
      {"paperId": "0c6fa8fe0e4123e53008f5f046f1acf3d7d90008", "externalIds": {"DBLP":
      "journals/fgcs/MampageKB23", "DOI": "10.2139/ssrn.4237113", "CorpusId": 260496562},
      "corpusId": 260496562, "publicationVenue": {"id": "e3e1f91c-fe26-4f67-8d15-f7acd8abdf42",
      "name": "Future generations computer systems", "type": "journal", "alternate_names":
      ["Future gener comput syst", "Future Generation Computer Systems", "Future Gener
      Comput Syst"], "issn": "0167-739X", "url": "http://www.elsevier.com/wps/find/journaleditorialboard.cws_home/505611/editorialboard",
      "alternate_urls": ["https://www.journals.elsevier.com/future-generation-computer-systems",
      "http://www.sciencedirect.com/science/journal/0167739X"]}, "url": "https://www.semanticscholar.org/paper/0c6fa8fe0e4123e53008f5f046f1acf3d7d90008",
      "title": "Deep reinforcement learning for application scheduling in resource-constrained,
      multi-tenant serverless computing environments", "abstract": "Serverless computing
      has sparked a massive interest in both the cloud service providers and their
      clientele in recent years. This model entails the shift of the entire matter
      of resource management of user applications to the service provider. In serverless
      systems, the provider is highly motivated to attain cost efficient usage of
      their infrastructure, given the granular billing modules involved. However,
      due to the dynamic and multi-tenant nature of the serverless workloads and systems,
      achieving efficient resource management while maintaining function performance
      is a challenging task. Rapid changes in demand levels for applications cause
      variations in actual resource usage patterns of function instances. This leads
      to performance variations in co-located functions which compete for similar
      resources, due to resource contentions. Most existing serverless scheduling
      works offer heuristic techniques for function scheduling, which are unable to
      capture the true dynamism in these systems caused by multi-tenancy and varying
      user request patterns. Further, they rarely consider the often contradicting
      dual objectives of achieving provider resource efficiency along with application
      performance. In this article, we propose a novel technique incorporating Deep
      Reinforcement Learning (DRL) to overcome the aforementioned challenges for function
      scheduling in a highly dynamic serverless computing environment with heterogeneous
      computing resources. We train and evaluate our model in a practical setting
      incorporating Kubeless, an open-source serverless framework, deployed on a 23-node
      Kubernetes cluster setup. Extensive experiments done on this testbed environment
      show promising results with improvements of up to 24% and 34% in terms of application
      response time and resource usage cost respectively, compared to baseline techniques.",
      "venue": "Future generations computer systems", "year": 2023, "referenceCount":
      42, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-02-01", "journal":
      {"name": "Future Gener. Comput. Syst.", "pages": "277-292", "volume": "143"},
      "citationStyles": {"bibtex": "@Article{Mampage2023DeepRL,\n author = {Anupama
      Mampage and S. Karunasekera and R. Buyya},\n booktitle = {Future generations
      computer systems},\n journal = {Future Gener. Comput. Syst.},\n pages = {277-292},\n
      title = {Deep reinforcement learning for application scheduling in resource-constrained,
      multi-tenant serverless computing environments},\n volume = {143},\n year =
      {2023}\n}\n"}, "authors": [{"authorId": "2079083419", "name": "Anupama Mampage"},
      {"authorId": "2476111", "name": "S. Karunasekera"}, {"authorId": "1709598",
      "name": "R. Buyya"}]}, {"paperId": "0c9267431a3eff2544a3a9562f149bea851b1be1",
      "externalIds": {"MAG": "2994979700", "DOI": "10.3390/proceedings2019030038",
      "CorpusId": 212876977}, "corpusId": 212876977, "publicationVenue": {"id": "efad5e01-e2cf-44e8-9cfa-c5d9634707fc",
      "name": "Proceedings", "issn": "2198-7432", "alternate_issns": ["0377-2969"],
      "url": "http://paspk.org/Proceedings-of-PAS-39"}, "url": "https://www.semanticscholar.org/paper/0c9267431a3eff2544a3a9562f149bea851b1be1",
      "title": "Applicability of Remote Sensing Workflow in Kubernetes-Managed On-premise
      Cluster Environment", "abstract": "The acquisition, storage, and processing
      of huge amounts of data and their fast analysis to generate information is not
      a new approach, but it becomes challenging through smart decision-making on
      the choice of hardware and software improvements. In the specific cases of environment
      protection, nature conservation, and precision farming, where fast and accurate
      reactions are required, drone technologies with imaging sensors are of interest
      in many research groups. However, post-processing of the images acquired by
      drone-based sensors such as the generation of orthomosaics from aerial images
      and superimposing the orthomosaics on a global map to identify the exact locations
      of the interested area is computationally intensive and sometimes takes hours
      or even days to achieve desired results. Initial tests have shown that photogrammetry
      software takes less time to generate an orthomosaic by running them on a workstation
      with higher CPU, RAM and GPU configurations. Tasks like setting up the application
      environment with dependencies, making this setup portable and manage installed
      services can be challenging, especially for small-and-medium-sized enterprises
      that have limited resources in exploring different architectures. To enhance
      the competitiveness of the small and medium-sized enterprises and research institutions,
      the accessibility of the proposed solution includes the integration of open-source
      tools and frameworks such as Kubernetes (version v1.13.4, available online:
      https://kubernetes.io/) and OpenDroneMap (version 0.3, available online: https://github.com/OpenDroneMap/ODM)
      enabling a reference architecture that is as vendor-neutral as possible. Current
      work is based on an on-premise cluster computing approach for fast and efficient
      photogrammetry process using open source software such as OpenDroneMap combined
      with light-weight containerization techniques such as Docker (version 17.12.1,
      available online: https://www.docker.io/), orchestrated by Kubernetes. The services
      provided by OpenDroneMap enable microservice-based architecture. These container-based
      services can be administered easily by a container orchestrator like Kubernetes.
      After setting up the servers with core OpenDroneMap services on our container-based
      cluster with Kubernetes as the orchestrator engine, the plan is to use the advantages
      of Kubernetes'' powerful management capabilities to help maximize resource efficiency
      as the basis for creating Service Level Agreements to provide a cloud service.",
      "venue": "Proceedings", "year": 2019, "referenceCount": 0, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.mdpi.com/2504-3900/30/1/38/pdf?version=1577172298", "status": "HYBRID"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2019-12-24", "journal": {"name": "Proceedings"}, "citationStyles":
      {"bibtex": "@Article{Vithlani2019ApplicabilityOR,\n author = {Hemang Narendra
      Vithlani and Dogotari Marcel and B. Melville and M. Pr\u00fcm and Olee Hoi Ying
      Lam and R. Becker and Frank Zimmer},\n booktitle = {Proceedings},\n journal
      = {Proceedings},\n title = {Applicability of Remote Sensing Workflow in Kubernetes-Managed
      On-premise Cluster Environment},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "1572523194", "name": "Hemang Narendra Vithlani"}, {"authorId": "2201561575",
      "name": "Dogotari Marcel"}, {"authorId": "47997179", "name": "B. Melville"},
      {"authorId": "72125967", "name": "M. Pr\u00fcm"}, {"authorId": "30772740", "name":
      "Olee Hoi Ying Lam"}, {"authorId": "2054683725", "name": "R. Becker"}, {"authorId":
      "144084779", "name": "Frank Zimmer"}]}, {"paperId": "0c952828a781d9255604dde1d71b50a07d266f3f",
      "externalIds": {"MAG": "139239183", "CorpusId": 59879022}, "corpusId": 59879022,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0c952828a781d9255604dde1d71b50a07d266f3f",
      "title": "A Guide to Programming in Turbo Pascal Version 4.0-6.0", "abstract":
      "The best ebooks about A Guide To Programming In Turbo Pascal Version 4 0 6
      0 that you can get for free here by download this A Guide To Programming In
      Turbo Pascal Version 4 0 6 0 and save to your desktop. This ebooks is under
      topic such as a guide to programming in turbo pascal version 4 0 6 0 a guide
      to programming in turbo pascal version 4 0 6 0 understanding pascal turbo version
      cagavs understanding pascal turbo version bagabl turbo pascal 4 0 5 0 an introduction
      to the art and the gnu pascal manual turbo pascal precisely bagabl turbo pascal
      55 oop guide embarcadero website data structures using turbo pascal versions
      4 0 5 0 and 6 0 turbo pascal version 3 0 reference manual pixmax epson color
      management guide pdf jinxt delphi 6: object pascal language guide product documentation
      start programming using object pascal code mercedes g 230 repair manual mcsas
      forex made simple a beginner apos s guide to foreign accessories manual for
      toyota sienna bocart a history of german literature bkidd zune 30gb user manual
      asdafd pascal_tutorial pdf tutorials for kubernetes, spring vw golf variant
      service and repair manual niiha 4eat transmission manual atsg subaru bkidd answers
      to everfi banking pslife crucible movie viewing guide answer key cxliv topic:
      from algorithms to pascal programs a guide to iseki tractor service manual free
      floxii turbo pascal 7 0 4th edition andrewkirbyvet the case of the desperate
      duck uvpong science revolution and discontinuity aersat world history document
      based activities stabuy physics a general introduction nrcgas biozone ra 1 answers
      mbsfit the mother of god thefl mercedes benz car service charge ukarma free
      pascal language reference guide webfeup ruth childrens bible story craft jinxt
      systematics biology 17 2 review answer key dixsie oregon v wille qawise unisex
      knit hat with cables laneez kyra davis the stranger qawise", "venue": "", "year":
      1991, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Review"], "publicationDate": "1991-06-01", "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Presley1991AGT,\n author =
      {B. Presley and T. Corica and William Freitas},\n title = {A Guide to Programming
      in Turbo Pascal Version 4.0-6.0},\n year = {1991}\n}\n"}, "authors": [{"authorId":
      "52553587", "name": "B. Presley"}, {"authorId": "39568962", "name": "T. Corica"},
      {"authorId": "69494385", "name": "William Freitas"}]}, {"paperId": "0cdffdecac8120911ebceca8ebb4f19df05cd9ec",
      "externalIds": {"MAG": "2843537722", "DBLP": "conf/xsede/SarajlicCMFL18", "DOI":
      "10.1145/3219104.3229249", "CorpusId": 195348301}, "corpusId": 195348301, "publicationVenue":
      {"id": "b85446b1-9eb7-4d6d-bfde-e2b0c6b2cfb6", "name": "Practice and Experience
      in Advanced Research Computing", "type": "conference", "alternate_names": ["PEARC",
      "Pract Exp Adv Res Comput"], "url": "https://www.pearc.org/"}, "url": "https://www.semanticscholar.org/paper/0cdffdecac8120911ebceca8ebb4f19df05cd9ec",
      "title": "Scaling JupyterHub Using Kubernetes on Jetstream Cloud: Platform as
      a Service for Research and Educational Initiatives in the Atmospheric Sciences",
      "abstract": "Unidata, an NSF funded project that started in 1983, is a diverse
      community of education and research institutions with the common goal of sharing
      geoscience data and the tools to access and visualize that data. Unidata provides
      weather observations and other data, software tools, and support to enhance
      Earth-system education and research, and continuously examines ways of adapting
      their workflows for new technologies to maximize the reach of their education
      and research efforts. In support of Unidata objectives to host workshops for
      atmospheric data analysis using JupyterHub, we explore a cloud computing approach
      leveraging Kubernetes coupled with JupyterHub that when combined will provide
      a solution for researchers and students to pull data from Unidata and burst
      onto Jetstream cloud by requesting resources dynamically via easy to use JupyterHub.
      More specifically, on Jetstream, Kubernetes is used for automating deployment
      and scaling of domain specific containerized applications, and JupyterHub is
      used for spawning multiple hubs within the same Kubernetes cluster instance
      that will be used for supporting classroom settings. JupyterHub''s modular kernel
      feature will support dynamic needs of classroom application requirements. The
      proposed approach will serve as an end-to-end solution for researchers to execute
      their workflows, with JupyterHub serving as a powerful tool for user training
      and next-generation workforce development in atmospheric sciences.", "venue":
      "Practice and Experience in Advanced Research Computing", "year": 2018, "referenceCount":
      15, "citationCount": 6, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Education", "source": "s2-fos-model"}], "publicationTypes":
      ["Book", "JournalArticle"], "publicationDate": "2018-07-22", "journal": {"name":
      "Proceedings of the Practice and Experience on Advanced Research Computing"},
      "citationStyles": {"bibtex": "@Book{Sarajlic2018ScalingJU,\n author = {Semir
      Sarajlic and J. Chastang and S. Marru and Jeremy Fischer and Mike Lowe},\n booktitle
      = {Practice and Experience in Advanced Research Computing},\n journal = {Proceedings
      of the Practice and Experience on Advanced Research Computing},\n title = {Scaling
      JupyterHub Using Kubernetes on Jetstream Cloud: Platform as a Service for Research
      and Educational Initiatives in the Atmospheric Sciences},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "3452093", "name": "Semir Sarajlic"}, {"authorId":
      "3609763", "name": "J. Chastang"}, {"authorId": "2328965", "name": "S. Marru"},
      {"authorId": "145658252", "name": "Jeremy Fischer"}, {"authorId": "48463482",
      "name": "Mike Lowe"}]}, {"paperId": "0ce130d90e8e67b45fa9fe018ad2cee687b13a71",
      "externalIds": {"DOI": "10.1109/COSITE52651.2021.9649597", "CorpusId": 245446663},
      "corpusId": 245446663, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0ce130d90e8e67b45fa9fe018ad2cee687b13a71",
      "title": "An-SPf: as an Alternative Architecture of no Single Point Failure
      of Scalable Transcoding System Based on Kubernetes", "abstract": "The transcoding
      process is a complex signal conversion and also a CPU-bound process. A conventional
      software transcoding process requires a machine with a high CPU core count to
      achieve a fast transcoding process. That process has a limit because of the
      vertical scaling limitation on a single machine. In the previous research proposed,
      Morph System can improve this process by utilizing horizontal scaling using
      cloud computing architecture, but its system has a flaw which is a single point
      of failure. So, this is very important to explore how to achieve a faster transcoding
      process while also providing no single point failure to the system. In this
      work, we proposed a no single point failure of the transcoding system. The proposed
      system is built on top of the Kubernetes platform. To compare the performance
      of the proposed system we used a single node virtual machine (VM) and Morph
      System. We find that the proposed system provides 1,6 faster than a single VM,
      but about 0,6 times slower than the Morph system. The system is also able to
      provide no single point failure under the proposed testing scenario and maintain
      up to 99,99% of success rate.", "venue": "2021 International Conference on Computer
      System, Information Technology, and Electrical Engineering (COSITE)", "year":
      2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2021-10-20", "journal": {"name": "2021 International Conference on Computer
      System, Information Technology, and Electrical Engineering (COSITE)", "pages":
      "18-23"}, "citationStyles": {"bibtex": "@Conference{Windasari2021AnSPfAA,\n
      author = {I. P. Windasari and Luqman Setyo Nugroho and A. F. Rochim and Risma
      Septiana},\n booktitle = {2021 International Conference on Computer System,
      Information Technology, and Electrical Engineering (COSITE)},\n journal = {2021
      International Conference on Computer System, Information Technology, and Electrical
      Engineering (COSITE)},\n pages = {18-23},\n title = {An-SPf: as an Alternative
      Architecture of no Single Point Failure of Scalable Transcoding System Based
      on Kubernetes},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2085980500",
      "name": "I. P. Windasari"}, {"authorId": "2147018508", "name": "Luqman Setyo
      Nugroho"}, {"authorId": "97479662", "name": "A. F. Rochim"}, {"authorId": "145891511",
      "name": "Risma Septiana"}]}, {"paperId": "0cef2e3503e4ef7dd3887572d0ded50dbeab591d",
      "externalIds": {"DBLP": "conf/icsoc/LebesbyeMTY21", "DOI": "10.1007/978-3-030-91431-8_14",
      "CorpusId": 244387035}, "corpusId": 244387035, "publicationVenue": {"id": "05173752-2c8b-4d3e-b2d5-81e27c400524",
      "name": "International Conference on Service Oriented Computing", "type": "conference",
      "alternate_names": ["ICSOC", "Int Conf Serv Oriented Comput"], "url": "http://www.icsoc.org/"},
      "url": "https://www.semanticscholar.org/paper/0cef2e3503e4ef7dd3887572d0ded50dbeab591d",
      "title": "Boreas - A Service Scheduler for Optimal Kubernetes Deployment", "abstract":
      null, "venue": "International Conference on Service Oriented Computing", "year":
      2021, "referenceCount": 15, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.duo.uio.no/bitstream/10852/90263/1/boreas.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null,
      "journal": {"pages": "221-237"}, "citationStyles": {"bibtex": "@Article{Lebesbye2021BoreasA,\n
      author = {Torgeir Lebesbye and J. Mauro and Gianluca Turin and Ingrid Chieh
      Yu},\n booktitle = {International Conference on Service Oriented Computing},\n
      pages = {221-237},\n title = {Boreas - A Service Scheduler for Optimal Kubernetes
      Deployment},\n year = {2021}\n}\n"}, "authors": [{"authorId": "1922698", "name":
      "Torgeir Lebesbye"}, {"authorId": "1786679", "name": "J. Mauro"}, {"authorId":
      "51924027", "name": "Gianluca Turin"}, {"authorId": "2512136", "name": "Ingrid
      Chieh Yu"}]}, {"paperId": "0cf0f8188025da80c4cc0abc8798c051b61946c9", "externalIds":
      {"DBLP": "conf/ithings/ChenL19", "MAG": "2981470713", "DOI": "10.1109/iThings/GreenCom/CPSCom/SmartData.2019.00188",
      "CorpusId": 204821608}, "corpusId": 204821608, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/0cf0f8188025da80c4cc0abc8798c051b61946c9",
      "title": "Scalable IoT/M2M Platforms Based on Kubernetes-Enabled NFV MANO Architecture",
      "abstract": "The Internet of Things (IoT) brings a huge impact to our daily
      life in recent years. It is anticipated that tens of millions of IoT/M2M (Machine
      to Machine) devices will be connected to the IoT/M2M platforms hosted in the
      cloud. In this research, we realize scalable IoT/M2M systems in the OpenStack
      cloud based on Kubernetes-enabled NFV (Network Function Virtualization) MANO
      (Management ANd Orchestration) architecture. Our research leverages NFV MANO
      supported by OpenStack Tacker to achieve the scalability of IoT/M2M platforms.
      The scaling functionalities are based on Kubernetes in which CNF (Container-based
      Network Functions) will be scaled out/in. In addition, a Master Node and a Load
      Balancer Node are designed for scalability supervision and for fair traffic
      distribution, respectively, among virtualized IoT/M2M servers in the cloud.
      We compare our proposed system with those NFV platforms without Kubernetes and
      validate that our proposed system achieves better scalability by reducing the
      overall scaling time and computational cost of a group of IoT/M2M servers.",
      "venue": "2019 International Conference on Internet of Things (iThings) and
      IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical
      and Social Computing (CPSCom) and IEEE Smart Data (SmartData)", "year": 2019,
      "referenceCount": 0, "citationCount": 7, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2019-07-01", "journal":
      {"name": "2019 International Conference on Internet of Things (iThings) and
      IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical
      and Social Computing (CPSCom) and IEEE Smart Data (SmartData)", "pages": "1106-1111"},
      "citationStyles": {"bibtex": "@Article{Chen2019ScalableIP,\n author = {Hung-li
      Chen and F. Lin},\n booktitle = {2019 International Conference on Internet of
      Things (iThings) and IEEE Green Computing and Communications (GreenCom) and
      IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData)},\n
      journal = {2019 International Conference on Internet of Things (iThings) and
      IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical
      and Social Computing (CPSCom) and IEEE Smart Data (SmartData)},\n pages = {1106-1111},\n
      title = {Scalable IoT/M2M Platforms Based on Kubernetes-Enabled NFV MANO Architecture},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "2108262046", "name": "Hung-li
      Chen"}, {"authorId": "145068511", "name": "F. Lin"}]}, {"paperId": "0cf9c8abd29773ca9c0e168660fc136811c3c072",
      "externalIds": {"DBLP": "conf/sbes/AlvesP21", "DOI": "10.1145/3474624.3474631",
      "CorpusId": 238359000}, "corpusId": 238359000, "publicationVenue": {"id": "24d0f36f-58ab-4957-adaa-50ca6e4a969e",
      "name": "Brazilian Symposium on Software Engineering", "type": "conference",
      "alternate_names": ["SBES", "Braz Symp Softw Eng"]}, "url": "https://www.semanticscholar.org/paper/0cf9c8abd29773ca9c0e168660fc136811c3c072",
      "title": "Identifying Logging Practices in Open Source Python Containerized
      Application Projects", "abstract": "Despite the popularity of microservice architectures
      using container based virtualization, there are not many studies that describe
      how logging practices are being employed in this scenario. In this empirical
      study, we cloned 10,918 of the most stargazed GitHub Python repositories with
      a Docker/Kubernetes associated file. We were able to find 1,166 Python projects
      that used containers. A custom parser identified and saved log statements from
      Python source code. We discovered that certain licenses tend to have a higher
      log density; over 99% of projects use the built-in Python logging library; the
      repository age does not affect its log statements/LLOC ratio; logging verbosity
      levels debug and info are used almost twice as much as warning and error. We
      hope our study provides the community with useful data about this topic, possibly
      contributing to the improvement of techniques that stimulate its applications.",
      "venue": "Brazilian Symposium on Software Engineering", "year": 2021, "referenceCount":
      21, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2021-09-27", "journal": {"name": "Proceedings of the XXXV
      Brazilian Symposium on Software Engineering"}, "citationStyles": {"bibtex":
      "@Book{Alves2021IdentifyingLP,\n author = {M. Alves and H. Paula},\n booktitle
      = {Brazilian Symposium on Software Engineering},\n journal = {Proceedings of
      the XXXV Brazilian Symposium on Software Engineering},\n title = {Identifying
      Logging Practices in Open Source Python Containerized Application Projects},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "1709840", "name": "M. Alves"},
      {"authorId": "134073602", "name": "H. Paula"}]}, {"paperId": "0d17a563183ae8f28a8379ebaea51ef05afd41f9",
      "externalIds": {"MAG": "2992530655", "DOI": "10.3390/electronics8121489", "CorpusId":
      209354946}, "corpusId": 209354946, "publicationVenue": {"id": "ccd8e532-73c6-414f-bc91-271bbb2933e2",
      "name": "Electronics", "type": "journal", "issn": "1450-5843", "alternate_issns":
      ["2079-9292", "0883-4989"], "url": "http://www.electronics.etfbl.net/", "alternate_urls":
      ["http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-247562", "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-247562",
      "https://www.mdpi.com/journal/electronics"]}, "url": "https://www.semanticscholar.org/paper/0d17a563183ae8f28a8379ebaea51ef05afd41f9",
      "title": "Elastic Computing in the Fog on Internet of Things to Improve the
      Performance of Low Cost Nodes", "abstract": "The Internet of Things (IoT) is
      a network widely used with the purpose of connecting almost everything, everywhere
      to the Internet. To cope with this goal, low cost nodes are being used; otherwise,
      it would be very expensive to expand so fast. These networks are set up with
      small distributed devices (nodes) that have a power supply, processing unit,
      memory, sensors, and wireless communications. In the market, we can find different
      alternatives for these devices, such as small board computers (SBCs), e.g.,
      Raspberry Pi (RPi)), with different features. Usually these devices run a coarse
      version of a Linux operating system. Nevertheless, there are many scenarios
      that require enhanced computational power that these nodes alone are unable
      to provide. In this context, we need to introduce a kind of collaboration among
      the devices to overcome their constraints. We based our solution in a combination
      of clustering techniques (building a mesh network using their wireless capabilities);
      at the same time we try to orchestrate the resources in order to improve their
      processing capabilities in an elastic computing fashion. This paradigm is called
      fog computing on IoT. We propose in this paper the use of cloud computing technologies,
      such as Linux containers, based on Docker, and a container orchestration platform
      (COP) to run on the top of a cluster of these nodes, but adapted to the fog
      computing paradigm. Notice that these technologies are open source and developed
      for Linux operating system. As an example, in our results we show an IoT application
      for soundscape monitoring as a proof of concept that it will allow us to compare
      different alternatives in its design and implementation; in particular, with
      regard to the COP selection, between Docker Swarm and Kubernetes. We conclude
      that using and combining these techniques, we can improve the overall computation
      capabilities of these IoT nodes within a fog computing paradigm.", "venue":
      "Electronics", "year": 2019, "referenceCount": 26, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/2079-9292/8/12/1489/pdf?version=1576562597",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2019-12-06", "journal": {"name": "Electronics"}, "citationStyles":
      {"bibtex": "@Article{Fayos-Jordan2019ElasticCI,\n author = {R. Fayos-Jordan
      and Santiago Felici-Castell and Jaume Segura-Garc\u00eda and Adolfo Pastor-Aparicio
      and Jesus Lopez-Ballester},\n booktitle = {Electronics},\n journal = {Electronics},\n
      title = {Elastic Computing in the Fog on Internet of Things to Improve the Performance
      of Low Cost Nodes},\n year = {2019}\n}\n"}, "authors": [{"authorId": "1584809050",
      "name": "R. Fayos-Jordan"}, {"authorId": "1404925128", "name": "Santiago Felici-Castell"},
      {"authorId": "1404925129", "name": "Jaume Segura-Garc\u00eda"}, {"authorId":
      "1405482165", "name": "Adolfo Pastor-Aparicio"}, {"authorId": "1405482169",
      "name": "Jesus Lopez-Ballester"}]}, {"paperId": "0d1c5894ae9d6aeec336df10b350778c6fe02f11",
      "externalIds": {"DBLP": "conf/ccs/NewmanMT22", "DOI": "10.1145/3548606.3560596",
      "CorpusId": 253371237}, "corpusId": 253371237, "publicationVenue": {"id": "73f7fe95-b68b-468f-b7ba-3013ca879e50",
      "name": "Conference on Computer and Communications Security", "type": "conference",
      "alternate_names": ["Int Workshop Cogn Cell Syst", "CCS", "Comput Commun Secur",
      "CcS", "International Symposium on Community-centric Systems", "International
      Workshop on Cognitive Cellular Systems", "Conf Comput Commun Secur", "Comb Comput
      Sci", "Int Symp Community-centric Syst", "Combinatorics and Computer Science",
      "Circuits, Signals, and Systems", "Computer and Communications Security", "Circuit
      Signal Syst"], "url": "https://dl.acm.org/conference/ccs"}, "url": "https://www.semanticscholar.org/paper/0d1c5894ae9d6aeec336df10b350778c6fe02f11",
      "title": "Sigstore: Software Signing for Everybody", "abstract": "Software supply
      chain compromises are on the rise. From the effects of XCodeGhost to SolarWinds,
      hackers have identified that targeting weak points in the supply chain allows
      them to compromise high-value targets such as U.S. government agencies and corporate
      targets such as Google and Microsoft. Software signing, a promising mitigation
      for many of these attacks, has seen limited adoption in open-source and enterprise
      ecosystems. In this paper, we propose Sigstore, a system to provide widespread
      software signing capabilities. To do so, we designed the system to provide baseline
      artifact signing capabilities that minimize the adoption barrier for developers.
      To this end, Sigstore leverages three distinct mechanisms: First, it uses a
      protocol similar to ACME to authenticate developers through OIDC, tying signatures
      to existing and widely-used identities. Second, it enables developers to use
      ephemeral keys to sign their artifacts, reducing the inconvenience and risk
      of key management. Finally, Sigstore enables user authentication by means of
      artifact and identity logs, bringing transparency to software signatures. Sigstore
      is quickly becoming a critical piece of Internet infrastructure with more than
      2.2M signatures over critical software such as Kubernetes and Distroless.",
      "venue": "Conference on Computer and Communications Security", "year": 2022,
      "referenceCount": 69, "citationCount": 15, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3548606.3560596",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book", "Conference"], "publicationDate": "2022-11-07", "journal": {"name":
      "Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications
      Security"}, "citationStyles": {"bibtex": "@Article{Newman2022SigstoreSS,\n author
      = {Zachary Newman and J. Meyers and Santiago Torres-Arias},\n booktitle = {Conference
      on Computer and Communications Security},\n journal = {Proceedings of the 2022
      ACM SIGSAC Conference on Computer and Communications Security},\n title = {Sigstore:
      Software Signing for Everybody},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2071586622", "name": "Zachary Newman"}, {"authorId": "34739010", "name": "J.
      Meyers"}, {"authorId": "2261287820", "name": "Santiago Torres-Arias"}]}, {"paperId":
      "0d49942b748705f64ec97694af649c3f3f01a46f", "externalIds": {"DBLP": "conf/infocom/SommaACRM20",
      "MAG": "3048060861", "DOI": "10.1109/INFOCOMWKSHPS50562.2020.9162876", "CorpusId":
      218569715}, "corpusId": 218569715, "publicationVenue": {"id": "be267cb9-6411-4126-8b64-4847025171ee",
      "name": "Conference on Computer Communications Workshops", "type": "conference",
      "alternate_names": ["INFOCOM WKSHPS", "Conf Comput Commun Work"]}, "url": "https://www.semanticscholar.org/paper/0d49942b748705f64ec97694af649c3f3f01a46f",
      "title": "When Less is More: Core-Restricted Container Provisioning for Serverless
      Computing", "abstract": "Cloud applications are exposed to workloads whose intensity
      can change unpredictably over time. Hence, the ability to quickly scale the
      amount of computing resources provisioned to applications is essential to minimize
      costs while providing reliable services. In this context, containers are deemed
      to be a promising technology to enable fast elasticity in resource allocation
      schemes. In this paper, we propose and experimentally test an efficient container-based
      cloud computing provisioning system. First, we address the container deployment
      problem and discuss how to manage container provisioning and scaling. Second,
      we devise a resource management mechanism leveraging on both admission control
      and auto-scaling techniques. We propose to drive auto-scaling decisions through
      a Q-Learning algorithm, which is agnostic to the specific computing environment,
      and proceeds based only on the load of the physical processors assigned to a
      container. We evaluate our solution in two experimental setups, and show that
      it yields significant advantages when compared to popular container managers
      such as Kubernetes.", "venue": "Conference on Computer Communications Workshops",
      "year": 2020, "referenceCount": 29, "citationCount": 8, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "https://iris.unitn.it/bitstream/11572/289784/1/c100_2020_INFOCOM_WKSHP_NI_somma_ayimba_When_Less_is_More.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2020-07-01",
      "journal": {"name": "IEEE INFOCOM 2020 - IEEE Conference on Computer Communications
      Workshops (INFOCOM WKSHPS)", "pages": "1153-1159"}, "citationStyles": {"bibtex":
      "@Article{Somma2020WhenLI,\n author = {Gaetano Somma and Constantine Ayimba
      and P. Casari and S. Romano and V. Mancuso},\n booktitle = {Conference on Computer
      Communications Workshops},\n journal = {IEEE INFOCOM 2020 - IEEE Conference
      on Computer Communications Workshops (INFOCOM WKSHPS)},\n pages = {1153-1159},\n
      title = {When Less is More: Core-Restricted Container Provisioning for Serverless
      Computing},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2675433", "name":
      "Gaetano Somma"}, {"authorId": "101283063", "name": "Constantine Ayimba"}, {"authorId":
      "40573898", "name": "P. Casari"}, {"authorId": "145860974", "name": "S. Romano"},
      {"authorId": "145736060", "name": "V. Mancuso"}]}, {"paperId": "0d5c97d025a2e211ebe458c5b44e70779dd29017",
      "externalIds": {"MAG": "2982555929", "DBLP": "conf/icnp/LinkSGKRC19", "DOI":
      "10.1109/ICNP.2019.8888116", "CorpusId": 207756914}, "corpusId": 207756914,
      "publicationVenue": {"id": "1df1928c-d75e-4d86-89bc-5a1be8a503d3", "name": "IEEE
      International Conference on Network Protocols", "type": "conference", "alternate_names":
      ["ICNP", "International Conference on Network Protocols", "Int Conf Netw Protoc",
      "IEEE Int Conf Netw Protoc"], "url": "http://www.ieee-icnp.org/"}, "url": "https://www.semanticscholar.org/paper/0d5c97d025a2e211ebe458c5b44e70779dd29017",
      "title": "Container Orchestration by Kubernetes for RDMA Networking", "abstract":
      "With the widespread usage of containerized virtualization in data centers and
      clouds, it is important to enabling high-throughput and zero-copy data transfer
      between those containers. Remote Direct Memory Access (RDMA) allows bypassing
      the kernel for packet processing by offloading it to specific RDMA-enabled NICs.
      The existing solutions enabling RDMA with containers are either based on custom
      container orchestrators (e.g., FreeFlow) or lack the ability for the control
      plane to manage the underlying RDMA traffic (e.g., Kubernetes RDMA plug-in via
      SR-IOV). The work in this paper builds off of previous work in Kubernetes to
      make an architecture that allows control over bandwidth requirements of RDMA
      within a Kubernetes cluster.", "venue": "IEEE International Conference on Network
      Protocols", "year": 2019, "referenceCount": 4, "citationCount": 7, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2019-10-01", "journal": {"name": "2019 IEEE 27th International
      Conference on Network Protocols (ICNP)", "pages": "1-2"}, "citationStyles":
      {"bibtex": "@Article{Link2019ContainerOB,\n author = {Coleman Link and Jesse
      Sarran and Garegin Grigoryan and Minseok Kwon and M. M. Rafique and Warren R.
      Carithers},\n booktitle = {IEEE International Conference on Network Protocols},\n
      journal = {2019 IEEE 27th International Conference on Network Protocols (ICNP)},\n
      pages = {1-2},\n title = {Container Orchestration by Kubernetes for RDMA Networking},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "1393196361", "name": "Coleman
      Link"}, {"authorId": "1397297112", "name": "Jesse Sarran"}, {"authorId": "4874757",
      "name": "Garegin Grigoryan"}, {"authorId": "1895536", "name": "Minseok Kwon"},
      {"authorId": "144343120", "name": "M. M. Rafique"}, {"authorId": "1405274335",
      "name": "Warren R. Carithers"}]}, {"paperId": "0d622e1ad1588601816a90760b690a1a2f8ae508",
      "externalIds": {"DBLP": "conf/eurosys/ZilicMAB22", "DOI": "10.1145/3517206.3526266",
      "CorpusId": 247617583}, "corpusId": 247617583, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/0d622e1ad1588601816a90760b690a1a2f8ae508",
      "title": "Edge offloading for microservice architectures", "abstract": "Edge
      offloading is widely used to support the execution of near real-time mobile
      applications. However, offloading on edge infrastructures can suffer from failures
      due to the absence of supporting systems and environmental factors. We propose
      a fault-tolerant offloading method modeled as a Markov Decision Process (MDP)
      based on predictions performed through Support Vector Regression (SVR). SVR
      is used to estimate offloading service availability, which is used by MDP for
      offloading decisions. Our approach is implemented in a real-world test-bed and
      compared with the default Kubernetes scheduler augmented with hybrid fault-tolerance.",
      "venue": "EdgeSys@EuroSys", "year": 2022, "referenceCount": 30, "citationCount":
      4, "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3517206.3526266", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book"], "publicationDate": "2022-04-05", "journal": {"name": "Proceedings of
      the 5th International Workshop on Edge Systems, Analytics and Networking"},
      "citationStyles": {"bibtex": "@Article{Zilic2022EdgeOF,\n author = {Josip Zilic
      and Vincenzo De Maio and Atakan Aral and Ivona Brandi\u0107},\n booktitle =
      {EdgeSys@EuroSys},\n journal = {Proceedings of the 5th International Workshop
      on Edge Systems, Analytics and Networking},\n title = {Edge offloading for microservice
      architectures},\n year = {2022}\n}\n"}, "authors": [{"authorId": "1434555700",
      "name": "Josip Zilic"}, {"authorId": "39340098", "name": "Vincenzo De Maio"},
      {"authorId": "2070246773", "name": "Atakan Aral"}, {"authorId": "1783686", "name":
      "Ivona Brandi\u0107"}]}, {"paperId": "0d7fbdb1df825aa215b8f2edb8672ef8c62d5c9f",
      "externalIds": {"MAG": "3047921439", "DOI": "10.11959/J.ISSN.1000-436X.2019172",
      "CorpusId": 227489251}, "corpusId": 227489251, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/0d7fbdb1df825aa215b8f2edb8672ef8c62d5c9f",
      "title": "Cloud resource prediction model based on triple exponential smoothing
      method and temporal convolutional network", "abstract": "The container cloud
      represented by Docker and Kubernetes has the advantages of less additional resource
      overhead and shorter start-up and destruction time.However there are still resource
      management issues such as over-supply and under-supply.In order to allow the
      Kubernetes cluster to respond \u201cin advance\u201d to the resource usage of
      the applications deployed on it,and then to schedule and allocate resources
      in a timely,accurate and dynamic manner based on the predicted value,a cloud
      resource prediction model based on triple exponential smoothing method and temporal
      convolutional network was proposed,based on historical data to predict future
      demand for resources.To find the optimal combination of parameters,the parameters
      were optimized using TPOT thought.Experiments on the CPU and memory of the Google
      dataset show that the model has better prediction performance than other models.",
      "venue": "", "year": 2019, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2019-08-31",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Xie2019CloudRP,\n
      author = {X. Xie and Zhenzheng Zhang and Jianwei Wang and Xiaochun Cheng},\n
      title = {Cloud resource prediction model based on triple exponential smoothing
      method and temporal convolutional network},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "97595432", "name": "X. Xie"}, {"authorId": "2144388537", "name":
      "Zhenzheng Zhang"}, {"authorId": "2110238139", "name": "Jianwei Wang"}, {"authorId":
      "2149477378", "name": "Xiaochun Cheng"}]}, {"paperId": "0da1f9ee16ac33162200b03c366a8baee2a96629",
      "externalIds": {"MAG": "3111789719", "DOI": "10.2172/1734709", "CorpusId": 230572273},
      "corpusId": 230572273, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0da1f9ee16ac33162200b03c366a8baee2a96629",
      "title": "How We Ran 500k Containers For Science With Kubernetes", "abstract":
      null, "venue": "", "year": 2020, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://permalink.lanl.gov/object/tr?what=info:lanl-repo/lareport/LA-UR-20-30078",
      "status": "GREEN"}, "fieldsOfStudy": ["Engineering"], "s2FieldsOfStudy": [{"category":
      "Engineering", "source": "external"}, {"category": "Environmental Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2020-12-08", "journal": {"name":
      "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Wernicke2020HowWR,\n
      author = {James Wernicke},\n title = {How We Ran 500k Containers For Science
      With Kubernetes},\n year = {2020}\n}\n"}, "authors": [{"authorId": "3363111",
      "name": "James Wernicke"}]}, {"paperId": "0da8032d557e274646f1e03620f08a0f3c0d9d52",
      "externalIds": {"DBLP": "conf/icc/RamosVSHSE21", "DOI": "10.1109/ICC42927.2021.9500259",
      "CorpusId": 236940069}, "corpusId": 236940069, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/0da8032d557e274646f1e03620f08a0f3c0d9d52",
      "title": "A Machine Learning Model for Detection of Docker-based APP Overbooking
      on Kubernetes", "abstract": "Resource allocation overbooking is an approach
      used by cloud providers that allocates more virtual resources than available
      on physical hardware, which may imply service quality degradation. Docker in
      cloud computing environments is being increasingly used due to their fast provisioning
      and deployment, while the impact of overbooking of resources allocation due
      to multi-tenancy remains overlooked. This paper proposes a machine learning
      model to detect overbooking in Kubernetes environments within the docker container.
      The proposed model continuously monitors distributed container OS usage and
      application performance metrics. The collected metrics are used as input to
      a machine learning model that identifies multi-tenancy interference incurring
      in application performance degradation. Experiments performed on a Kubernetes
      cluster with a Docker-based Big Data processing application showed that our
      proposed model could detect resource overbooking with up to 98% accuracy. This
      implies an overbooking on a resource of up to 1.2 in the client\u2019s domain.",
      "venue": "ICC 2021 - IEEE International Conference on Communications", "year":
      2021, "referenceCount": 19, "citationCount": 13, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2021-06-01", "journal":
      {"name": "ICC 2021 - IEEE International Conference on Communications", "pages":
      "1-6"}, "citationStyles": {"bibtex": "@Article{Ramos2021AML,\n author = {F.
      Ramos and E. Viegas and A. Santin and Pedro Horchulhack and R. Santos and Allan
      Espindola},\n booktitle = {ICC 2021 - IEEE International Conference on Communications},\n
      journal = {ICC 2021 - IEEE International Conference on Communications},\n pages
      = {1-6},\n title = {A Machine Learning Model for Detection of Docker-based APP
      Overbooking on Kubernetes},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "153279362", "name": "F. Ramos"}, {"authorId": "1577690364", "name": "E. Viegas"},
      {"authorId": "34673723", "name": "A. Santin"}, {"authorId": "2122859243", "name":
      "Pedro Horchulhack"}, {"authorId": "1602351775", "name": "R. Santos"}, {"authorId":
      "2122859193", "name": "Allan Espindola"}]}, {"paperId": "0de0f6b91a09acaf037d608f4e2a9a8a40f09a6b",
      "externalIds": {"MAG": "3191755047", "DOI": "10.1007/978-1-4842-7192-6_5", "CorpusId":
      238868426}, "corpusId": 238868426, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0de0f6b91a09acaf037d608f4e2a9a8a40f09a6b",
      "title": "Interacting with Your Kubernetes Cluster", "abstract": null, "venue":
      "SQL Server on Kubernetes", "year": 2021, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Physics"], "s2FieldsOfStudy": [{"category": "Physics", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "SQL Server on Kubernetes"},
      "citationStyles": {"bibtex": "@Article{Nocentino2021InteractingWY,\n author
      = {Anthony E. Nocentino and Benjamin Weissman},\n booktitle = {SQL Server on
      Kubernetes},\n journal = {SQL Server on Kubernetes},\n title = {Interacting
      with Your Kubernetes Cluster},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2047576954", "name": "Anthony E. Nocentino"}, {"authorId": "145400508", "name":
      "Benjamin Weissman"}]}, {"paperId": "0dfec959c3a965e8417f294ceb8cdc804de48ba2",
      "externalIds": {"DOI": "10.32722/multinetics.v9i1.5556", "CorpusId": 261162352},
      "corpusId": 261162352, "publicationVenue": {"id": "409575b9-245e-4984-8376-b0ca5f933cbd",
      "name": "MULTINETICS", "type": "journal", "issn": "2443-2245", "alternate_issns":
      ["2443-2334"]}, "url": "https://www.semanticscholar.org/paper/0dfec959c3a965e8417f294ceb8cdc804de48ba2",
      "title": "IMPLEMENTASI DAN ANALISIS MIGRASI DATA LMS PADA KLASTER KUBERNETES
      ANTAR-PUBLIC CLOUD MENGGUNAKAN BACKUP DAN RESTORE", "abstract": "Moodle menjadi
      salah satu media untuk learning management system yang banyak digunakan saat
      ini dikarenakan pembelajaran non-tatap muka yang tidak dapat dihindari. Traffic
      pengguna yang fluktuatif membuat moodle cocok untuk ditempatkan ke sebuah public
      cloud. Dengan public cloud, resource yang digunakan menjadi lebih mudah untuk
      dieskalasi terutama apabila dipadukan dengan container orchestrator seperti
      kubernetes. Namun, ada kalanya diperlukan migrasi data pada cluster kubernetes
      dari suatu public cloud menuju ke public cloud lain dengan tujuan untuk memitigasi
      terjadinya disaster pada suatu region di public cloud. Aplikasi moodle bisa
      saja di-route ke region yang berbeda, tetapi hal tersebut akan menyebabkan latency
      yang tinggi. Permasalahan tersebut dapat diatasi dengan memigrasi cluster kubernetes
      pada Google Cloud menuju ke region yang sama di Microsoft Azure sebagai public
      cloud alternatif. \nTugas akhir ini akan membahas mengenai migrasi suatu kubernetes
      cluster beserta data persistent volume antar public cloud dari Google Cloud
      Platform menuju ke Microsoft Azure dan sebaliknya dengan menggunakan metode
      backup dan restore. Velero digunakan sebagai tool backup dan restore, lalu ditambahkan
      plugin restic agar velero juga dapat melakukan backup dan restore persistent
      volume yang terdapat diluar cluster Kubernetes. \n\u00a0Hasil pengujian didapat
      bahwa velero dengan plugin restic dapat melakukan backup dan restore persistent
      volume diluar cluster. Semakin besar size data, maka akan memerlukan waktu backup,
      restore, dan migration time yang akan lebih lama. Waktu backup dan restore pada
      setiap size incremental sebesar kurang lebih 500 MB akan menambah waktu backup
      dan restore kurang lebih sebanyak 10 detik. Sedangkan dalam sisi utilitas Jumlah
      CPU usage pada saat restore memakan lebih banyak resource dibandingkan dengan
      saat backup. Pada saat backup maksimum spike CPU adalah sebesar 3.5% pada size
      data 3 GB di kedua klaster public cloud. Sedangkan pada saat restore maksimum
      spike CPU adalah sebesar 5% pada size data 3 GB.", "venue": "MULTINETICS", "year":
      2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": true, "openAccessPdf": {"url": "https://jurnal.pnj.ac.id/index.php/multinetics/article/download/5556/2995",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-07-28", "journal": {"name": "MULTINETICS"},
      "citationStyles": {"bibtex": "@Article{Ranunegoro2023IMPLEMENTASIDA,\n author
      = {Adimas Fachri Ranunegoro and Favian Dewanta and B. Aditya},\n booktitle =
      {MULTINETICS},\n journal = {MULTINETICS},\n title = {IMPLEMENTASI DAN ANALISIS
      MIGRASI DATA LMS PADA KLASTER KUBERNETES ANTAR-PUBLIC CLOUD MENGGUNAKAN BACKUP
      DAN RESTORE},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2233688424",
      "name": "Adimas Fachri Ranunegoro"}, {"authorId": "2083491675", "name": "Favian
      Dewanta"}, {"authorId": "87136323", "name": "B. Aditya"}]}, {"paperId": "0e328b0c201b590f5db64db0da5f3070d363e4f7",
      "externalIds": {"DBLP": "conf/ccnc/BouridahFAB21", "DOI": "10.1109/CCNC49032.2021.9369583",
      "CorpusId": 232267030}, "corpusId": 232267030, "publicationVenue": {"id": "7cd7bf33-3c9a-4b3f-8b1a-177673c6ca73",
      "name": "Consumer Communications and Networking Conference", "type": "conference",
      "alternate_names": ["CCNC", "Consum Commun Netw Conf"], "url": "http://ieee-ccnc.org/"},
      "url": "https://www.semanticscholar.org/paper/0e328b0c201b590f5db64db0da5f3070d363e4f7",
      "title": "Optimized Scalable SFC Traffic Steering Scheme for Cloud Native based
      Applications", "abstract": "Network Function Virtualization (NFV) has already
      proven its efficiency to deploy networking services in large-scale. Recent advances
      of cloud-native applications may bring new advantage by deploying and implementing
      Virtual Network Function (VNFs) as cloud-native Containers rather than virtual
      machines. Beside remarkable advantages such as lower overhead and faster running,
      microservices (cloud-native containers) intend to save costs while increasing
      the service agility. To this end, in this paper we extend consolidated state-of-the-art
      tools and technologies developed in two domains cloud-native applications and
      Network Function Virtualization (NFV). The proposed framework chains services
      provisioned across Kubernetes and Contiv/VPP domains and using containers. Our
      orchestration framework chain services across distributed CNFs. Furthermore,
      we propose K -TS scheme to load balance the traffic over services replicas.
      K -TS is based on Ketama Consistent hashing algorithm. Experimental simulations
      show very good results for both the service chaining framework in term of QoS
      satisfaction such as: packet error rate, throughput satisfaction and jitter.",
      "venue": "Consumer Communications and Networking Conference", "year": 2021,
      "referenceCount": 37, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2021-01-09",
      "journal": {"name": "2021 IEEE 18th Annual Consumer Communications & Networking
      Conference (CCNC)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Bouridah2021OptimizedSS,\n
      author = {Adel Bouridah and Ilhem Fajjari and Nadjib Aitsaadi and H. Belhadef},\n
      booktitle = {Consumer Communications and Networking Conference},\n journal =
      {2021 IEEE 18th Annual Consumer Communications & Networking Conference (CCNC)},\n
      pages = {1-6},\n title = {Optimized Scalable SFC Traffic Steering Scheme for
      Cloud Native based Applications},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2992502", "name": "Adel Bouridah"}, {"authorId": "2636124", "name": "Ilhem
      Fajjari"}, {"authorId": "2482762", "name": "Nadjib Aitsaadi"}, {"authorId":
      "3084536", "name": "H. Belhadef"}]}, {"paperId": "0e4754b12bcc6f3a3d314d98206d10da364c85ec",
      "externalIds": {"MAG": "2972344741", "CorpusId": 203172413}, "corpusId": 203172413,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0e4754b12bcc6f3a3d314d98206d10da364c85ec",
      "title": "Analisis Model Arsitektur Microservice Pada Sistem Informasi Kuliah
      Kerja Nyata UMM", "abstract": "The development of the University of Muhammadiyah
      Malang campus was accompanied by changes in several business processes at the
      managerial level. This change in business processes makes the real work information
      system must be able to adapt to these changes. These changes not only have an
      impact on the management side of the program code but also on the system architecture
      that is used so that developers are important to consider several alternative
      types of other information system architectures so that information system management
      can be more adaptive to requirement changes. Microservice architecture is an
      alternative architecture that is able to adapt to changing needs in a measurable
      and flexible manner. In this study, the microsevice was identified using the
      method of Domain Driven Design in the Information System of the Real Work College
      of the University of Muhammadiyah Malang resulting in 13 Service. The microservice
      architecture is built through 3 stages, namely Deployment, Continuous Integration
      and Continuos Delivery. Deployment is the stage of coding a computer program
      using the nodejs programming language and express framework. Continuous Integration
      consists of combining the program module module into a repository while the
      type of repository used is Github and for build image automation docker hub
      is used. Continuous delivery consists of deployment to the local node using
      Kubernetes and tested using several test scenarios with reference to scalability,
      independence, and functionality tests", "venue": "", "year": 2019, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2019-08-19", "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex":
      "@Inproceedings{Supriyanto2019AnalisisMA,\n author = {Muhammad Ibadurrahman
      Arrasyid Supriyanto},\n title = {Analisis Model Arsitektur Microservice Pada
      Sistem Informasi Kuliah Kerja Nyata UMM},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "2098874840", "name": "Muhammad Ibadurrahman Arrasyid Supriyanto"}]},
      {"paperId": "0e62a96ab7dde175bde21bf4940c9bf3731c196b", "externalIds": {"MAG":
      "2982790324", "DBLP": "conf/middleware/KavianiKM19", "DOI": "10.1145/3366623.3368135",
      "CorpusId": 208157777}, "corpusId": 208157777, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/0e62a96ab7dde175bde21bf4940c9bf3731c196b",
      "title": "Towards Serverless as Commodity: a case of Knative", "abstract": "Serverless
      computing promises to evolve cloud computing architecture from VMs and containers-as-a-service
      (CaaS) to function-as-a-service (FaaS). This takes away complexities of managing
      and scaling underlying infrastructure and can result in simpler code, cheaper
      realization of services, and higher availability. Nonetheless, one of the primary
      drawbacks customers face when making decision to move their software to a serverless
      platform is the potential for getting locked-in with a particular provider.
      This used to be a concern with Platform-as-a-Service (PaaS) offerings too. However
      with Kubernetes emerging as the industry standard PaaS layer, PaaS is closer
      to becoming commodity with the Kubernetes API as its common interface. The question
      is if a similar unification for the API interface layer and runtime contracts
      can be achieved for serverless. If achieved, this would free up serverless users
      from their fears of platform lock-in. Our goal in this paper is to extract a
      minimal common denominator model of execution that can move us closer to a unified
      serverless platform. As contributors to Knative [13] with in-depth understanding
      of its internal design, we use Knative as the baseline for this comparison and
      contrast its API interface and runtime contracts against other prominent serverless
      platforms to identify commonalities and differences. Influenced by the work
      in Knative, we also discuss challenges as well as the necessary evolution we
      expect to see as serverless platforms themselves reach commodity status.", "venue":
      "WOSC@Middleware", "year": 2019, "referenceCount": 10, "citationCount": 19,
      "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Business", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2019-12-09", "journal": {"name": "Proceedings of the 5th
      International Workshop on Serverless Computing"}, "citationStyles": {"bibtex":
      "@Book{Kaviani2019TowardsSA,\n author = {N. Kaviani and D. Kalinin and E. M.
      Maximilien},\n booktitle = {WOSC@Middleware},\n journal = {Proceedings of the
      5th International Workshop on Serverless Computing},\n title = {Towards Serverless
      as Commodity: a case of Knative},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "3177447", "name": "N. Kaviani"}, {"authorId": "52448762", "name": "D. Kalinin"},
      {"authorId": "1741059", "name": "E. M. Maximilien"}]}, {"paperId": "0e7c1249f099df978789ee237e7d57a655240ae3",
      "externalIds": {"DBLP": "conf/cloud/BhasiGTMKD21", "DOI": "10.1145/3472883.3486992",
      "CorpusId": 239890114}, "corpusId": 239890114, "publicationVenue": {"id": "d13e941e-4cac-4f1d-bdca-77d927e31f1b",
      "name": "ACM Symposium on Cloud Computing", "type": "conference", "alternate_names":
      ["System-on-Chip Conference", "ACM Symp Cloud Comput", "Syst Conf", "Symp Cloud
      Comput", "Annual IEEE International System-on-Chip Conference", "Symposium on
      Cloud Computing", "Annu IEEE Int Syst Conf", "SoCC"], "url": "http://www.ieee-socc.org/"},
      "url": "https://www.semanticscholar.org/paper/0e7c1249f099df978789ee237e7d57a655240ae3",
      "title": "Kraken: Adaptive Container Provisioning for Deploying Dynamic DAGs
      in Serverless Platforms", "abstract": "The growing popularity of microservices
      has led to the proliferation of online cloud service-based applications, which
      are typically modelled as Directed Acyclic Graphs (DAGs) comprising of tens
      to hundreds of microservices. The vast majority of these applications are user-facing,
      and hence, have stringent SLO requirements. Serverless functions, having short
      resource provisioning times and instant scalability, are suitable candidates
      for developing such latency-critical applications. However, existing serverless
      providers are unaware of the workflow characteristics of application DAGs, leading
      to container over-provisioning in many cases. This is further exacerbated in
      the case of dynamic DAGs, where the function chain for an application is not
      known a priori. Motivated by these observations, we propose Kraken, a workflow-aware
      resource management framework that minimizes the number of containers provisioned
      for an application DAG while ensuring SLO-compliance. We design and implement
      Kraken on OpenFaaS and evaluate it on a multi-node Kubernetes-managed cluster.
      Our extensive experimental evaluation using DeathStarbench workload suite and
      real-world traces demonstrates that Kraken spawns up to 76% fewer containers,
      thereby improving container utilization and saving cluster-wide energy by up
      to 4x and 48%, respectively, when compared to state-of-the art schedulers employed
      in serverless platforms.", "venue": "ACM Symposium on Cloud Computing", "year":
      2021, "referenceCount": 40, "citationCount": 39, "influentialCitationCount":
      2, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3472883.3486992",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2021-11-01",
      "journal": {"name": "Proceedings of the ACM Symposium on Cloud Computing"},
      "citationStyles": {"bibtex": "@Article{Bhasi2021KrakenAC,\n author = {Vivek
      M. Bhasi and J. Gunasekaran and P. Thinakaran and Cyan Subhra Mishra and M.
      Kandemir and C. Das},\n booktitle = {ACM Symposium on Cloud Computing},\n journal
      = {Proceedings of the ACM Symposium on Cloud Computing},\n title = {Kraken:
      Adaptive Container Provisioning for Deploying Dynamic DAGs in Serverless Platforms},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2135093161", "name": "Vivek
      M. Bhasi"}, {"authorId": "47882166", "name": "J. Gunasekaran"}, {"authorId":
      "2950806", "name": "P. Thinakaran"}, {"authorId": "97824395", "name": "Cyan
      Subhra Mishra"}, {"authorId": "145879376", "name": "M. Kandemir"}, {"authorId":
      "8948708", "name": "C. Das"}]}, {"paperId": "0e923590d1fcb785e66dcd0c9f25205cc0a32f66",
      "externalIds": {"DBLP": "conf/sbac-pad/PulcinelliPB23", "DOI": "10.1109/SBAC-PADW60351.2023.00028",
      "CorpusId": 265055158}, "corpusId": 265055158, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/0e923590d1fcb785e66dcd0c9f25205cc0a32f66",
      "title": "Conceptual and Comparative Analysis of Application Metrics in Microservices",
      "abstract": "Cloud computing represents an extensively implemented paradigm
      for provisioning distributed services, offering a significant degree of scalability
      for global applications. Nonetheless, when confronted with the necessity to
      scale, the system encounters monitoring challenges, as it must contend with
      an increased volume of requests while simultaneously accommodating fluctuating
      demands across various geographic regions. Aside from that, detecting errors
      in such a model becomes increasingly difficult, because of the many abstraction
      layers and interconnected microservices a cloud solution has. In that context,
      metrics can be used to identify errors and monitor the system''s state. The
      substantial diversity in the types of services and the metrics themselves introduces
      a formidable complexity to the analysis of an entire cluster. Therefore, it
      is important to identify the essential metrics in microservices that can be
      used to recognize issues or bottlenecks. In pursuit of this objective, a cloud-based
      solution was implemented within an Amazon Web Services Kubernetes cluster to
      emulate the functionality of an online retail store and an automated testing
      framework was made to inject errors in different parts of this application while
      its metrics were obtained. In that way, it was possible to identify the effects
      that errors have on the metrics of components in the system, rendering the monitoring
      of the cluster a more direct process and reducing the amount of data to be analyzed
      in order to identify the presence of errors in a cloud environment.", "venue":
      "2023 International Symposium on Computer Architecture and High Performance
      Computing Workshops (SBAC-PADW)", "year": 2023, "referenceCount": 11, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-10-17", "journal": {"name": "2023
      International Symposium on Computer Architecture and High Performance Computing
      Workshops (SBAC-PADW)", "pages": "123-130"}, "citationStyles": {"bibtex": "@Article{Pulcinelli2023ConceptualAC,\n
      author = {Lucas Eduardo Gulka Pulcinelli and Diego Frazatto Pedroso and S. Bruschi},\n
      booktitle = {2023 International Symposium on Computer Architecture and High
      Performance Computing Workshops (SBAC-PADW)},\n journal = {2023 International
      Symposium on Computer Architecture and High Performance Computing Workshops
      (SBAC-PADW)},\n pages = {123-130},\n title = {Conceptual and Comparative Analysis
      of Application Metrics in Microservices},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2265676990", "name": "Lucas Eduardo Gulka Pulcinelli"}, {"authorId":
      "2265674482", "name": "Diego Frazatto Pedroso"}, {"authorId": "35246004", "name":
      "S. Bruschi"}]}, {"paperId": "0e9d3436bc26425c084f2c95bfe6fb8f25a1b095", "externalIds":
      {"DOI": "10.1109/RASSE54974.2022.9989814", "CorpusId": 254930805}, "corpusId":
      254930805, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0e9d3436bc26425c084f2c95bfe6fb8f25a1b095",
      "title": "Performance Comparison of Containerized HBase Clusters on Kubernetes",
      "abstract": "The demand for large-volume database storage has become an essential
      issue with the rising trend of big data. Since the NoSQL database performs better
      than SQL databases when handling extensive data, many developers choose the
      NoSQL database as their first choice. Among all the NoSQL databases, HBase has
      become a popular choice due to its flexibility and high efficiency in the big
      data processing field. HBase is a column-oriented NoSQL database. It uses HDFS
      storage and is suitable for integrating with Hadoop ecosystem applications.
      However, deploying an HBase cluster on bare metal or virtual machines could
      be pretty complicated and time-consuming. The container technology can make
      HBase installation more convenient. Nevertheless, containerized HBase can be
      deployed in different ways. Deploying the HBase cluster in a proper approach
      can achieve higher performance. In this research, we propose two approaches,
      namely the Container-dedicated approach and the Container-shared approach, to
      containerize HBase on Kubernetes. Two benchmark tools are used to compare their
      performance under different workloads. According to experiment results, the
      Container-dedicated approach is suitable for writeheavy and read/write balanced
      applications. The container-shared approach shows a better performance in read-heavy
      applications. The test result will give future developers a reference when designing
      a containerized HBase cluster.", "venue": "2022 IEEE International Conference
      on Recent Advances in Systems Science and Engineering (RASSE)", "year": 2022,
      "referenceCount": 11, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-11-07",
      "journal": {"name": "2022 IEEE International Conference on Recent Advances in
      Systems Science and Engineering (RASSE)", "pages": "1-7"}, "citationStyles":
      {"bibtex": "@Conference{Lo2022PerformanceCO,\n author = {Ta-Chun Lo and Chun-Ying
      Tao and Jyh-Biau Chang and C. Shieh},\n booktitle = {2022 IEEE International
      Conference on Recent Advances in Systems Science and Engineering (RASSE)},\n
      journal = {2022 IEEE International Conference on Recent Advances in Systems
      Science and Engineering (RASSE)},\n pages = {1-7},\n title = {Performance Comparison
      of Containerized HBase Clusters on Kubernetes},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "47269882", "name": "Ta-Chun Lo"}, {"authorId": "2197597102",
      "name": "Chun-Ying Tao"}, {"authorId": "1715436", "name": "Jyh-Biau Chang"},
      {"authorId": "145728789", "name": "C. Shieh"}]}, {"paperId": "0e9db926b3c153fe4b07ca223b2b0af15be4ede5",
      "externalIds": {"DBLP": "journals/corr/abs-2210-03936", "ArXiv": "2210.03936",
      "DOI": "10.48550/arXiv.2210.03936", "CorpusId": 252780615}, "corpusId": 252780615,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/0e9db926b3c153fe4b07ca223b2b0af15be4ede5",
      "title": "Cloud Native Robotic Applications with GPU Sharing on Kubernetes",
      "abstract": "In this paper we discuss our experience in teaching the Robotic
      Applications Programming course at ZHAW combining the use of a Kubernetes (k8s)
      cluster and real, heterogeneous, robotic hardware. We discuss the main advantages
      of our solutions in terms of seamless simulation-to-real experience for students
      and the main shortcomings we encountered with networking and sharing GPUs to
      support deep learning workloads. We describe the current and foreseen alternatives
      to avoid these drawbacks in future course editions and propose a more cloud-native
      approach to deploying multiple robotics applications on a k8s cluster.", "venue":
      "arXiv.org", "year": 2022, "referenceCount": 14, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2210.03936",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-10-08", "journal":
      {"name": "ArXiv", "volume": "abs/2210.03936"}, "citationStyles": {"bibtex":
      "@Article{Carughi2022CloudNR,\n author = {G. T. Carughi and L. Militano and
      Se\u00e1n Murphy and Remo Maurer and M. Straub},\n booktitle = {arXiv.org},\n
      journal = {ArXiv},\n title = {Cloud Native Robotic Applications with GPU Sharing
      on Kubernetes},\n volume = {abs/2210.03936},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2719144", "name": "G. T. Carughi"}, {"authorId": "2159198", "name":
      "L. Militano"}, {"authorId": "2113981628", "name": "Se\u00e1n Murphy"}, {"authorId":
      "2187298850", "name": "Remo Maurer"}, {"authorId": "47480924", "name": "M. Straub"}]},
      {"paperId": "0eb3573f6639f8f9b89fda59c25445cfabc448bd", "externalIds": {"DBLP":
      "conf/bigdataconf/RandallL22", "DOI": "10.1109/BigData55660.2022.10020871",
      "CorpusId": 256315499}, "corpusId": 256315499, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/0eb3573f6639f8f9b89fda59c25445cfabc448bd",
      "title": "Predicting Deduplication Performance: An Analytical Model and Empirical
      Evaluation", "abstract": "Deduplication is a technique to find and eliminate
      redundant blocks of data for efficient data backups, efficient versioning, reduced
      data transfers, and reduced data-storage overheads. For large datasets, especially
      with incremental updates over time (e.g., instrumentation data) and subsetting
      (e.g., for auxiliary experiments), deduplication makes data management faster
      and more efficient. The primary parameter of deduplication systems is the expected
      chunk size, and while many existing systems use accepted default values (e.g.,
      4 KB or 8 KB chunks), our experiments find that these values are suboptimal
      for finding duplicate data. Suboptimal deduplication and data management makes
      it harder for researchers to manipulate, share, and experiment with large datasets.We
      present the design, implementation, and an empirical validation of our analytical
      model that predicts the performance of deduplication parameters (i.e., ability
      to find duplicate data) on any given dataset. The empirical evaluation includes
      workloads based on source code (i.e., Linux kernel, Kubernetes, TensorFlow),
      an open-research dataset (i.e., CORD-19), and Wikipedia. Our experiments show
      that our model finds deduplication parameters that reduce the storage requirements
      by up to an additional 30.72% compared to a commonly used baseline. Our model
      is up to 19.8x faster than scanning, and the resulting deduplicated datasets
      are all within 5.14% of the deduped sizes found via the scan-based search.",
      "venue": "2022 IEEE International Conference on Big Data (Big Data)", "year":
      2022, "referenceCount": 26, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-12-17", "journal":
      {"name": "2022 IEEE International Conference on Big Data (Big Data)", "pages":
      "319-328"}, "citationStyles": {"bibtex": "@Article{Randall2022PredictingDP,\n
      author = {Owen Randall and P. Lu},\n booktitle = {2022 IEEE International Conference
      on Big Data (Big Data)},\n journal = {2022 IEEE International Conference on
      Big Data (Big Data)},\n pages = {319-328},\n title = {Predicting Deduplication
      Performance: An Analytical Model and Empirical Evaluation},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "108271287", "name": "Owen Randall"}, {"authorId":
      "2093016", "name": "P. Lu"}]}, {"paperId": "0eb37b110765a1fc7d01cb7cacca320a2b318c68",
      "externalIds": {"DOI": "10.1088/1742-6596/2264/1/012023", "CorpusId": 248550673},
      "corpusId": 248550673, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0eb37b110765a1fc7d01cb7cacca320a2b318c68",
      "title": "Research and Implementation of Containerization for Virtual Instrumentation
      Measurement", "abstract": "The instrumentation measurement system has fruitful
      achievements in various fields with cloud computing technology. However, the
      instrumentation cloud needs more PaaS (Platform-as-a-Service) capabilities to
      improve development and IT operations efficiency by expanding distributed measurement
      systems. In recent years, container and cloud-native technology growth have
      brought developing chances for instrumentation cloud. We propose a novel container
      and instrumentation communication architecture to apply container technology
      to virtual instrumentation. Firstly, we analyze the critical technologies of
      Container-Instrumentation communication architecture and give the solution of
      its implementation. Secondly, we develop and deploy the web backend and frontend
      to visualize measurement data with Kubernetes. Finally, completing the IV sweep
      measurement on the web demonstrates the feasibility of building the measurement
      system in a cloud-native way. So, the container-instrumentation architecture
      provides practical significance for constructing measurement systems and improving
      the instrumentation cloud capabilities with cloud-native architecture in the
      future.", "venue": "Journal of Physics: Conference Series", "year": 2022, "referenceCount":
      13, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Physics"], "s2FieldsOfStudy": [{"category":
      "Physics", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2022-04-01", "journal": {"name": "Journal
      of Physics: Conference Series", "volume": "2264"}, "citationStyles": {"bibtex":
      "@Conference{Guo2022ResearchAI,\n author = {Wang Guo},\n booktitle = {Journal
      of Physics: Conference Series},\n journal = {Journal of Physics: Conference
      Series},\n title = {Research and Implementation of Containerization for Virtual
      Instrumentation Measurement},\n volume = {2264},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2164310722", "name": "Wang Guo"}]}, {"paperId": "0ecff903d12bc367e2fc7a54f7ceb119b2e5e0e2",
      "externalIds": {"DOI": "10.52953/fplr8631", "CorpusId": 259582595}, "corpusId":
      259582595, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0ecff903d12bc367e2fc7a54f7ceb119b2e5e0e2",
      "title": "A Kubernetes dataset for misuse detection", "abstract": "Container
      security involves a broad spectrum of concerns, including the security of the
      operating system, auditing the supply chain and the application security of
      the running containers. This wide attack surface will also include the security
      of the container orchestration system and its components once a container orchestration
      system is introduced to manage the fleet of containers in an environment. In
      order to advance the research in this field, prior work should be comparable
      and reproducible. However, we identified a research gap for this aspect; publicly
      available datasets for container security is sparse and reproducibility of the
      research output so far is arduous. In this study, we share a dataset consisting
      of network flows, collected from a Kubernetes cluster. Furthermore, we performed
      a preliminary analysis on the data as a sanity check to evaluate its quality.
      By sharing this dataset publicly, we hope to help further studies and establish
      benchmarks in the field of container networking security.", "venue": "ITU Journal
      on Future and Evolving Technologies", "year": 2023, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.itu.int/dms_pub/itu-s/opb/jnl/S-JNL-VOL4.ISSUE2-2023-A26-PDF-E.pdf",
      "status": "CLOSED"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-06-23", "journal": {"name": "ITU Journal on Future
      and Evolving Technologies"}, "citationStyles": {"bibtex": "@Article{Sever2023AKD,\n
      author = {Yigit Sever and Adnan Harun Dogan},\n booktitle = {ITU Journal on
      Future and Evolving Technologies},\n journal = {ITU Journal on Future and Evolving
      Technologies},\n title = {A Kubernetes dataset for misuse detection},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2222161984", "name": "Yigit Sever"},
      {"authorId": "2222159285", "name": "Adnan Harun Dogan"}]}, {"paperId": "0ed285ffebb00d0085f1507ae40039c0d6f1da13",
      "externalIds": {"MAG": "2992348421", "DOI": "10.1007/978-1-4842-5458-5_1", "CorpusId":
      214351320}, "corpusId": 214351320, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0ed285ffebb00d0085f1507ae40039c0d6f1da13",
      "title": "Quick Tour of Kubernetes", "abstract": null, "venue": "", "year":
      2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Engineering"],
      "s2FieldsOfStudy": [{"category": "Engineering", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "", "pages": "1-45", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Sharma2019QuickTO,\n author = {Rahul Sharma and Avinash
      Singh},\n pages = {1-45},\n title = {Quick Tour of Kubernetes},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "39598262", "name": "Rahul Sharma"}, {"authorId": "2109437664",
      "name": "Avinash Singh"}]}, {"paperId": "0ee4400667dd76475e677fc07752cd6e165bf0c8",
      "externalIds": {"DOI": "10.1109/CloudContinuum54760.2021.00002", "CorpusId":
      247230821}, "corpusId": 247230821, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0ee4400667dd76475e677fc07752cd6e165bf0c8",
      "title": "The Rise of Kubernetes", "abstract": "Kubernetes has exploded since
      our last Community of Practice column, and the role of its vibrant community
      is a big part of why it continues to grow.", "venue": "2021 Cloud Continuum",
      "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2021-11-01", "journal": {"name": "2021 Cloud Continuum",
      "pages": "1-5"}, "citationStyles": {"bibtex": "@Article{Miyachi2021TheRO,\n
      author = {Christine Miyachi},\n booktitle = {2021 Cloud Continuum},\n journal
      = {2021 Cloud Continuum},\n pages = {1-5},\n title = {The Rise of Kubernetes},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2995847", "name": "Christine
      Miyachi"}]}, {"paperId": "0f25b2189b6153228069e66c361218158792566c", "externalIds":
      {"DBLP": "journals/jips/JungHL21", "DOI": "10.3745/JIPS.01.0083", "CorpusId":
      246017727}, "corpusId": 246017727, "publicationVenue": {"id": "09b0b51d-d7ec-4963-bdb1-cab388c49830",
      "name": "Journal of Information Processing Systems", "type": "journal", "alternate_names":
      ["J Inf Process Syst"], "issn": "1976-913X", "url": "http://jips-k.org/q.jips?cp=ab"},
      "url": "https://www.semanticscholar.org/paper/0f25b2189b6153228069e66c361218158792566c",
      "title": "Anomaly Detection of Facilities and Non-disruptiveOperation of Smart
      Factory Using Kubernetes", "abstract": null, "venue": "Journal of Information
      Processing Systems", "year": 2021, "referenceCount": 0, "citationCount": 2,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "J. Inf. Process.
      Syst.", "pages": "1071-1082", "volume": "17"}, "citationStyles": {"bibtex":
      "@Article{Jung2021AnomalyDO,\n author = {Guik Jung and Hyunsoo Ha and Sangjun
      Lee},\n booktitle = {Journal of Information Processing Systems},\n journal =
      {J. Inf. Process. Syst.},\n pages = {1071-1082},\n title = {Anomaly Detection
      of Facilities and Non-disruptiveOperation of Smart Factory Using Kubernetes},\n
      volume = {17},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2146980790",
      "name": "Guik Jung"}, {"authorId": "49371541", "name": "Hyunsoo Ha"}, {"authorId":
      "2144540405", "name": "Sangjun Lee"}]}, {"paperId": "0f38f2aed037958e3da394eb75897f95c771e26b",
      "externalIds": {"DOI": "10.1109/AUTEEE56487.2022.9994566", "CorpusId": 255403743},
      "corpusId": 255403743, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0f38f2aed037958e3da394eb75897f95c771e26b",
      "title": "Research and Application of Task Scheduling and Resource Management
      Technology in Electric Power Artificial Intelligence Platform", "abstract":
      "Starting from the actual business needs of power grid production, operation,
      and management, extract common key technologies of artificial intelligence,
      build an electric power artificial intelligence platform, provide sample labeling
      and management, model training, and model reasoning for business personnel,
      model developers, and application developers, and support power inspection,
      scheduling, safety supervision, marketing and other businesses through online
      service invocation. This paper studies the core issues of task scheduling and
      resource management of the electric power artificial intelligence platform.
      To begin with, it introduces its capabilities and overall architecture and analyzes
      its service objects, task types and processing processes. Then container technology
      and Kubernetes are employed to achieve resource-elastic management for multiple
      heterogeneous resources; a task scheduling method is put forward based on load
      balancing; last but not least, the functional components, deployment and application
      of the artificial intelligence platform are presented. By building the basic
      support capabilities of electric power artificial intelligence, reducing the
      threshold of artificial intelligence model training, gathering high-quality
      samples and high-quality models, unified model services are provided for business
      applications, thus accelerating the implementation of artificial intelligence
      applications and promoting the digital transformation and intelligent upgrade
      of the power grid.", "venue": "2022 IEEE 5th International Conference on Automation,
      Electronics and Electrical Engineering (AUTEEE)", "year": 2022, "referenceCount":
      15, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-11-18",
      "journal": {"name": "2022 IEEE 5th International Conference on Automation, Electronics
      and Electrical Engineering (AUTEEE)", "pages": "945-951"}, "citationStyles":
      {"bibtex": "@Conference{Gao2022ResearchAA,\n author = {Bo Gao and Xuwei Xia
      and Zhixiang Ji and Shuang Zhang and Zhenhua Yan and Yongliang Li},\n booktitle
      = {2022 IEEE 5th International Conference on Automation, Electronics and Electrical
      Engineering (AUTEEE)},\n journal = {2022 IEEE 5th International Conference on
      Automation, Electronics and Electrical Engineering (AUTEEE)},\n pages = {945-951},\n
      title = {Research and Application of Task Scheduling and Resource Management
      Technology in Electric Power Artificial Intelligence Platform},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2067893104", "name": "Bo Gao"}, {"authorId": "10763389",
      "name": "Xuwei Xia"}, {"authorId": "2099823452", "name": "Zhixiang Ji"}, {"authorId":
      "2155802441", "name": "Shuang Zhang"}, {"authorId": "2152531907", "name": "Zhenhua
      Yan"}, {"authorId": "2110436889", "name": "Yongliang Li"}]}, {"paperId": "0f3c2d41648bc063c625d21e544ecf61d68cd711",
      "externalIds": {"MAG": "3038084037", "DOI": "10.15514/ISPRAS-2020-32(2)-8",
      "CorpusId": 225660376}, "corpusId": 225660376, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/0f3c2d41648bc063c625d21e544ecf61d68cd711",
      "title": "\u041f\u043e\u0434\u0445\u043e\u0434 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438
      \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430 \u0434\u0438\u0441\u043a\u043e\u0432\u044b\u0445
      \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u044b
      \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432
      Kubernetes", "abstract": "Today, a laborious and non-trivial task is to automate
      monitoring of hard drives in a cluster infrastructure using the Kubernetes container
      management system. The paper discusses existing approaches to monitoring hard
      drives in the Kubernetes container orchestration system and provides a comparative
      analysis of them. Based on the presented analysis, a conclusion is drawn on
      the need to improve and automate approaches. The paper proposes an approach
      to automating the collection of metrics from hard drives by implementing the
      Kubernetes \u201coperator\u201d for a tool with which you can effectively obtain
      information about the state of hard drives in the system. As results, the temporal
      characteristics of collecting information about disks using existing approaches
      and the proposed approach are given. Numerical results and graphs showing the
      gain of the proposed approach are presented", "venue": "", "year": 2020, "referenceCount":
      0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2020-06-15", "journal": {"name":
      "", "pages": "99-106", "volume": "32"}, "citationStyles": {"bibtex": "@Inproceedings{\u0428\u0435\u043c\u044f\u043a\u0438\u043d\u0441\u043a\u0430\u044f2020\u041f\u043e\u0434\u0445\u043e\u0434\u0410\u041c,\n
      author = {\u0410\u043d\u0430\u0441\u0442\u0430\u0441\u0438\u044f \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u043d\u0430
      \u0428\u0435\u043c\u044f\u043a\u0438\u043d\u0441\u043a\u0430\u044f and \u0418\u0433\u043e\u0440\u044c
      \u0412\u0430\u043b\u0435\u0440\u044c\u0435\u0432\u0438\u0447 \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432},\n
      pages = {99-106},\n title = {\u041f\u043e\u0434\u0445\u043e\u0434 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u0438
      \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430 \u0434\u0438\u0441\u043a\u043e\u0432\u044b\u0445
      \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u044b
      \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432
      Kubernetes},\n volume = {32},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "2006288672", "name": "\u0410\u043d\u0430\u0441\u0442\u0430\u0441\u0438\u044f
      \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u043d\u0430 \u0428\u0435\u043c\u044f\u043a\u0438\u043d\u0441\u043a\u0430\u044f"},
      {"authorId": "69928250", "name": "\u0418\u0433\u043e\u0440\u044c \u0412\u0430\u043b\u0435\u0440\u044c\u0435\u0432\u0438\u0447
      \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432"}]}, {"paperId": "0f4ac27e56efd714e3425bd9784eb76c7cd8c2a9",
      "externalIds": {"MAG": "2904271194", "DOI": "10.1145/3290480.3290507", "CorpusId":
      54464848}, "corpusId": 54464848, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0f4ac27e56efd714e3425bd9784eb76c7cd8c2a9",
      "title": "Research on Kubernetes'' Resource Scheduling Scheme", "abstract":
      "Currently, Google''s open source container orchestration tool Kubernetes (K8s
      for short) has become the standard of fact for deploying containerized applications
      on a large scale in private, public, and hybrid cloud environments. By studying
      the scheduling-module of K8s source code, this paper finds that when selecting
      node for Pod, the module only considers the current optimal node, regardless
      of the use of resource costs. In order to solve this problem, this paper firstly
      realizes the model extraction of its scheduling module, and designs and implements
      the simulation experiment for the model for the first time. Secondly, a large
      number of papers on cloud computing resource scheduling are read. In this paper,
      the K8s scheduling model is improved by combining ant colony algorithm and particle
      swarm optimization algorithm. Finally, it is scored, and the node with the smallest
      objective function is selected to deploy the Pod. This paper draws on the resource
      scheduling model of CloudSim tool and implements resource scheduling of K8s
      using Java language. The experimental results show that the proposed algorithm
      is better than the original scheduling algorithm, which reduces the total resource
      cost and the maximum load of the node, and makes the task assignment more balanced.",
      "venue": "", "year": 2018, "referenceCount": 9, "citationCount": 29, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Book"], "publicationDate": "2018-11-02", "journal": {"name": "Proceedings
      of the 8th International Conference on Communication and Network Security"},
      "citationStyles": {"bibtex": "@Book{Wei-guo2018ResearchOK,\n author = {Zhang
      Wei-guo and Ma Xi-lin and Zhang Jin-zhong},\n journal = {Proceedings of the
      8th International Conference on Communication and Network Security},\n title
      = {Research on Kubernetes'' Resource Scheduling Scheme},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "7487478", "name": "Zhang Wei-guo"}, {"authorId": "2094034359",
      "name": "Ma Xi-lin"}, {"authorId": "2091132127", "name": "Zhang Jin-zhong"}]},
      {"paperId": "0f63a3ad9c0851b9806fec3c48751babc2797e84", "externalIds": {"DBLP":
      "conf/osdi/0013LGGAGSX22", "CorpusId": 249525906}, "corpusId": 249525906, "publicationVenue":
      {"id": "86c43745-31d9-4c1a-b33f-ce3aa0042dbb", "name": "USENIX Symposium on
      Operating Systems Design and Implementation", "type": "conference", "alternate_names":
      ["Oper Syst Des Implement", "Operating Systems Design and Implementation", "OSDI",
      "USENIX Symp Oper Syst Des Implement"]}, "url": "https://www.semanticscholar.org/paper/0f63a3ad9c0851b9806fec3c48751babc2797e84",
      "title": "Automatic Reliability Testing For Cluster Management Controllers",
      "abstract": "Modern cluster managers like Borg, Omega and Kubernetes rely on
      the state-reconciliation principle to be highly resilient and extensible. In
      these systems, all cluster-management logic is embedded in a loosely coupled
      collection of microservices called controllers . Each controller independently
      observes the current cluster state and issues corrective actions to converge
      the cluster to a desired state. However, the complex distributed nature of the
      overall system makes it hard to build reliable and correct controllers \u2013
      we \ufb01nd that controllers face myriad reliability issues that lead to severe
      consequences like data loss, security vulnerabilities, and resource leaks. We
      present Sieve, the \ufb01rst automatic reliability-testing tool for cluster-management
      controllers. Sieve drives controllers to their potentially buggy corners by
      systematically and extensively perturbing the controller\u2019s view of the
      current cluster state in ways it is expected to tolerate. It then compares the
      cluster state\u2019s evolution with and without perturbations to detect safety
      and liveness issues. Sieve\u2019s design is powered by a fundamental opportunity
      in state-reconciliation systems \u2013 these systems are based on state-centric
      interfaces between the controllers and the cluster state; such interfaces are
      highly transparent and thereby enable fully-automated reliability testing. To
      date, Sieve has ef\ufb01ciently found 46 serious safety and liveness bugs (35
      con\ufb01rmed and 22 \ufb01xed) in ten popular controllers with a low false-positive
      rate of 3.5%.", "venue": "USENIX Symposium on Operating Systems Design and Implementation",
      "year": 2022, "referenceCount": 67, "citationCount": 8, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": null, "journal": {"pages": "143-159"}, "citationStyles":
      {"bibtex": "@Article{Sun2022AutomaticRT,\n author = {Xudong Sun and Wenqing
      Luo and Jiawei Tyler Gu and Aishwarya Ganesan and Ramnatthan Alagappan and Michael
      Gasch and Lalith Suresh and Tianyin Xu},\n booktitle = {USENIX Symposium on
      Operating Systems Design and Implementation},\n pages = {143-159},\n title =
      {Automatic Reliability Testing For Cluster Management Controllers},\n year =
      {2022}\n}\n"}, "authors": [{"authorId": null, "name": "Xudong Sun"}, {"authorId":
      null, "name": "Wenqing Luo"}, {"authorId": "2256468895", "name": "Jiawei Tyler
      Gu"}, {"authorId": "49846982", "name": "Aishwarya Ganesan"}, {"authorId": "31817919",
      "name": "Ramnatthan Alagappan"}, {"authorId": "2037726405", "name": "Michael
      Gasch"}, {"authorId": "2285058537", "name": "Lalith Suresh"}, {"authorId": null,
      "name": "Tianyin Xu"}]}, {"paperId": "1010f17b995c4bb57ed7c16314964b9efa25d451",
      "externalIds": {"MAG": "3034323629", "ArXiv": "1912.11144", "DOI": "10.1002/wics.1515",
      "CorpusId": 209460941}, "corpusId": 209460941, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/1010f17b995c4bb57ed7c16314964b9efa25d451",
      "title": "Parallel computing with R: A brief review", "abstract": "Parallel
      computing has established itself as another standard method for applied research
      and data analysis. The R system, being internally constrained to mostly singly\u2010threaded
      operations, can nevertheless be used along with different parallel computing
      approaches. This brief review covers OpenMP and Intel TBB at the CPU\u2010 and
      compiler level, moves to process\u2010parallel approaches before discussing
      message\u2010passing parallelism and big data technologies for parallel processing
      such as Spark, Docker and Kubernetes before concluding with a focus on the future
      package integrating many of these approaches.", "venue": "WIREs Computational
      Statistics", "year": 2019, "referenceCount": 50, "citationCount": 9, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/1912.11144",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["Review"], "publicationDate": "2019-12-23", "journal": {"name": "Wiley Interdisciplinary
      Reviews: Computational Statistics", "volume": "13"}, "citationStyles": {"bibtex":
      "@Article{Eddelbuettel2019ParallelCW,\n author = {Dirk Eddelbuettel},\n booktitle
      = {WIREs Computational Statistics},\n journal = {Wiley Interdisciplinary Reviews:
      Computational Statistics},\n title = {Parallel computing with R: A brief review},\n
      volume = {13},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2027325", "name":
      "Dirk Eddelbuettel"}]}, {"paperId": "101ac6b928911872e130e32f8d9e3bbfed598031",
      "externalIds": {"CorpusId": 259923512}, "corpusId": 259923512, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/101ac6b928911872e130e32f8d9e3bbfed598031",
      "title": "Continuous Integration and Continuous Delivery of addictologic web
      application", "abstract": "Providing stable application with fast response to
      users\u2019 requirements is a key element in today\u2019s competitive world.
      Frequent deployment and high uptime are extremely valuable. In this diploma
      thesis, we focus on the upgrade of the server part infrastructure of smoke cessation
      web application to reach better stability and efficiency. Firstly we discuss
      the topic of containerization and virtual machines. Afterward, we dive into
      the concept of orchestration platforms, and we provide a wide comparison of
      the currently two most popular orchestration platforms Kubernetes and Docker
      Swarm. Additionally, we introduce UI interfaces for easier manipulation with
      these tools. We implement a Docker Swarm into our current infrastructure, and
      on top of it, we use Portainer UI. Furthermore, we discuss the topic of continuous
      integration and continuous delivery pipeline. Then, we design a fully automated
      GitLab CI/CD pipeline, so the deployment process can be performed without any
      human interaction. In the end, we present a solution for the performance monitoring
      of containers and the rest of the infrastructure.", "venue": "", "year": 2021,
      "referenceCount": 26, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Medicine", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{\u010cikelov\u00e12021ContinuousIA,\n
      author = {Jana \u010cikelov\u00e1},\n title = {Continuous Integration and Continuous
      Delivery of addictologic web application},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2223545028", "name": "Jana \u010cikelov\u00e1"}]}, {"paperId":
      "1033ec56d0295d45a95e97d45fd5274860fd81b9", "externalIds": {"DBLP": "conf/eurosys/ChazapisPGKB21",
      "DOI": "10.1145/3439839.3458735", "CorpusId": 233384669}, "corpusId": 233384669,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1033ec56d0295d45a95e97d45fd5274860fd81b9",
      "title": "A unified storage layer for supporting distributed workflows in kubernetes",
      "abstract": "The distributed computing landscape has been undergoing radical
      changes: High-Performance Computing (HPC) applications are moving to the Cloud,
      as a way of simplifying development, deployment, and migration across computing
      systems. Meanwhile, cloud applications are becoming increasingly complex and
      computationally intensive, with the advent of High-Performance Data Analytics
      (HPDA) pipelines --- highly distributed workflows dealing with enormous and
      diverse datasets, heavily relying on virtualization and containers, that would
      benefit from technologies used in \"traditional\" HPC. The foreseeable convergence,
      demands new abstractions to cope with the increased heterogeneity, so that differing
      workload classes can coexist seamlessly on the same infrastructure. In this
      paper, we propose a Unified Storage Layer (USL), to enable cloud-native applications
      to transparently access a wide spectrum of storage solutions, ranging from high-performance
      filesystems to cloud-based object stores and key-value databases. Allowing software
      to exploit the best out of the storage services available with no need for manual
      intervention from users or programmers, simplifies development and execution
      of workflows, and boosts overall productivity. This work has been motivated
      by the requirements of real-world, industry-driven applications running on Kubernetes,
      the industry standard for cloud infrastructure orchestration.", "venue": "CHEOPS@EuroSys",
      "year": 2021, "referenceCount": 19, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book"],
      "publicationDate": "2021-04-26", "journal": {"name": "Proceedings of the Workshop
      on Challenges and Opportunities of Efficient and Performant Storage Systems"},
      "citationStyles": {"bibtex": "@Article{Chazapis2021AUS,\n author = {A. Chazapis
      and Christian Pinto and Yiannis Gkoufas and C. Kozanitis and A. Bilas},\n booktitle
      = {CHEOPS@EuroSys},\n journal = {Proceedings of the Workshop on Challenges and
      Opportunities of Efficient and Performant Storage Systems},\n title = {A unified
      storage layer for supporting distributed workflows in kubernetes},\n year =
      {2021}\n}\n"}, "authors": [{"authorId": "2563159", "name": "A. Chazapis"}, {"authorId":
      "143771320", "name": "Christian Pinto"}, {"authorId": "2695362", "name": "Yiannis
      Gkoufas"}, {"authorId": "3221688", "name": "C. Kozanitis"}, {"authorId": "1805177",
      "name": "A. Bilas"}]}, {"paperId": "10420e32aa2d8d9c9648418c2db4e50126881333",
      "externalIds": {"DBLP": "conf/sigcomm/Iordache-SicaKK23", "DOI": "10.1145/3607504.3609292",
      "CorpusId": 261124819}, "corpusId": 261124819, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/10420e32aa2d8d9c9648418c2db4e50126881333",
      "title": "Seamless Hardware-Accelerated Kubernetes Networking", "abstract":
      "Kubernetes has quickly become the industry-standard Service management and
      orchestration framework. However, Kubernetes networking has traditionally been
      achieved by software implementations of CNI (Container Networking Interface)
      plugins with performance limitations. This paper puts forward the integration
      of hardware networking appliances for enhancing Kubernetes performance in Data
      Center environments by utilising the Hardware Accelerated Kubernetes (HAcK)
      architecture. The proposed architecture is applied to the implementation of
      the HAcK LoadBalancer which leverages industry-grade network appliances for
      creating unified application and infrastructure management mechanisms. Performance
      of the system is evaluated in real data centre scenarios.", "venue": "FIRA@SIGCOMM",
      "year": 2023, "referenceCount": 29, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2023-09-10", "journal": {"name": "Proceedings of the 2nd
      ACM SIGCOMM Workshop on Future of Internet Routing & Addressing"}, "citationStyles":
      {"bibtex": "@Book{Iordache-Sica2023SeamlessHK,\n author = {Mircea M. Iordache-Sica
      and Tula Kraiser and O. Komolafe},\n booktitle = {FIRA@SIGCOMM},\n journal =
      {Proceedings of the 2nd ACM SIGCOMM Workshop on Future of Internet Routing &
      Addressing},\n title = {Seamless Hardware-Accelerated Kubernetes Networking},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2111325625", "name": "Mircea
      M. Iordache-Sica"}, {"authorId": "2233477589", "name": "Tula Kraiser"}, {"authorId":
      "35208944", "name": "O. Komolafe"}]}, {"paperId": "1068af159c8acd4c735fac8b1d58e9e3fbb07d48",
      "externalIds": {"ArXiv": "2211.07032", "DBLP": "journals/corr/abs-2211-07032",
      "DOI": "10.48550/arXiv.2211.07032", "CorpusId": 253510531}, "corpusId": 253510531,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/1068af159c8acd4c735fac8b1d58e9e3fbb07d48",
      "title": "Benefits, Challenges, and Research Topics: A Multi-vocal Literature
      Review of Kubernetes", "abstract": "Context: Kubernetes is an open source software
      that helps in automated deployment of software and orchestration of containers.
      With Kubernetes, IT organizations, such as IBM, Pinterest, and Spotify have
      experienced an increase in release frequency. As the adoption of Kubernetes
      increases amongst IT organizations, understanding the challenges of using Kubernetes
      becomes a necessity so that the software engineering community is well-equipped
      to support practitioners who use Kubernetes. Objective: The goal of this paper
      is to inform practitioners and researchers on benefits and challenges of Kubernetes
      usage by conducting a multi-vocal literature review of Kubernetes. Methodology:
      We conduct a multi-vocal literature review (MLR) where we use 321 Kubernetes-related
      Internet artifacts to identify benefits and challenges perceived by practitioners.
      In our MLR, we also analyze 105 peerreviewed publications to identify the research
      topics addressed by the research community. Findings: We find 8 benefits that
      include service level objective (SLO)-based scalability and self-healing containers.
      Our identified 15 challenges related to Kubernetes include unavailability of
      diagnostics and security tools and attack surface reduction. We observe researchers
      to address 14 research topics related to Kubernetes, which includes efficient
      resource utiShazibul Islam Shamim Department of Computer Science, Tennessee
      Tech University, Cookeville, TN, USA E-mail: mshamim42@tntech.edu Jonathan Alexander
      Gibson 2 Shazibul Islam Shamim et al. Department of Computer Science, Tennessee
      Tech University, Cookeville, TN, USA E-mail: jagibson44@tntech.edu Patrick Morrison
      IBM, Research Triangle Park, NC, USA E-mail: pjmorris@us.ibm.com Akond Rahman
      Department of Computer Science, Tennessee Tech University, Cookeville, TN, USA
      E-mail: arahman@tntech.edu lization. We also identify 9 challenges that are
      under-explored in research publications, which include cultural change, hardware
      compatibility, learning curve, maintenance, and testing. Conclusion: Our MLR
      shows that while certain topics, such as efficient resource utilization, are
      well-investigated by the research community, other topics for which practitioners
      face challenges, such as learning curve, maintenance, and testing remain under-explored.
      Furthermore, we observe a nuanced perspective of practitioners for Kubernetes,
      which has implications for practitioners as well as for researchers.", "venue":
      "arXiv.org", "year": 2022, "referenceCount": 89, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2211.07032",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Review"], "publicationDate": "2022-11-13", "journal": {"name": "ArXiv", "volume":
      "abs/2211.07032"}, "citationStyles": {"bibtex": "@Article{Shamim2022BenefitsCA,\n
      author = {Shazibul Islam Shamim and Jonathan Alexander Gibson and P. Morrison
      and A. Rahman},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {Benefits,
      Challenges, and Research Topics: A Multi-vocal Literature Review of Kubernetes},\n
      volume = {abs/2211.07032},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2036391299", "name": "Shazibul Islam Shamim"}, {"authorId": "2190755662", "name":
      "Jonathan Alexander Gibson"}, {"authorId": "2739437", "name": "P. Morrison"},
      {"authorId": "39864830", "name": "A. Rahman"}]}, {"paperId": "10b68117653c21152b9f1cf72a44560b6eb961f5",
      "externalIds": {"MAG": "2967475013", "DOI": "10.5507/RO.2019.003", "CorpusId":
      230785390}, "corpusId": 230785390, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/10b68117653c21152b9f1cf72a44560b6eb961f5",
      "title": "\u00c0 propos de la productivit\u00e9 lexicale actuelle du formant
      \u00ab cyber \u00bb", "abstract": "EnglishCyber is a neologism based on cybernetics,
      a term popularized by the American mathematician Norbert Wiener in the 1940s.
      Wiener derived it from the Greek word kubern\u0113t\u0113s, which refers to
      a pilot or steersman. From that, a slew of words came into existence to describe
      everything from people''s names to types of crime. This article describes the
      productivity that cyber has recently achieved in the French language. The corpus
      that is examined is formed from French dictionaries, lists of neologisms from
      the French review La Banque des mots, and from the Neoveille Platform. The search
      results for compounds starting with cyber are obtained by means of automatic
      detection, manual validation, and linguistic description. The study is also
      based on the comparable web corpus Aranea. In this paper the notion of a fracto-lexeme
      is used for the word-forming element cyber. Two of the earliest compound words
      starting with cyber that came into common usage are cyberspace and cyberpunk,
      but many other words became particularly popular in the 1990s. The majority
      of the words that appear after cyber are people''s names; 432 of them were found
      in the corpus. The study showed that cyber is part of a few thousand compound
      words, and can be attached to almost anything to make it sound futuristic or
      technical. This fracto-lexeme is, therefore, firmly rooted in the French language,
      but some prefer the short \"e-\" or \"online\". francaisCyber est un neologisme
      base sur la cybernetique, terme popularise par le mathematicien americain Norbert
      Wiener dans les annees 1940. Wiener l''a derive du grec kubern\u0113t\u0113s
      qui fait reference a un pilote de navire. Et depuis lors, beaucoup de mots sont
      crees pour decrire entre autres tout ce qui a trait a des appellations de personnes.
      Cet article decrit la productivite actuelle de cyber en francais. Le corpus
      examine est constitue de fracto-composes retenus dans des dictionnaires francais
      et dans les listes de neologismes repertories par la revue La Banque des mots
      et par la plate-forme Neoveille. Les resultats des creations avec cyber sont
      obtenus a partir de la detection automatique, de la validation manuelle et de
      la description linguistique. L''etude est egalement basee sur la recherche dans
      le corpus Aranea. Dans cet article, on utilise pour designer l''element cyber
      la notion de fracto-lexeme. Cyberespace et cyberpunk sont les deux premiers
      mots composes avec cyber qui sont devenus d''usage courant, mais de nombreux
      autres mots se sont popularises dans les annees 1990. La majorite des mots qui
      apparaissent apres cyber sont des appellations de personnes, il y en a 432 dans
      le corpus recueilli. L''etude montre que cyber fait partie de quelques centaines
      de mots composes. Il peut etre rattache a presque tout mot pour former un mot
      compose ayant une signification technique. Ce fracto-lexeme est donc fermement
      ancre en francais, mais certains locuteurs privilegient \u00ab e- \u00bb ou
      \u00ab en ligne \u00bb a la place de cyber.", "venue": "", "year": 2019, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "http://romanica.upol.cz/doi/10.5507/ro.2019.003.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Art"], "s2FieldsOfStudy": [{"category":
      "Art", "source": "external"}], "publicationTypes": ["Review"], "publicationDate":
      "2019-06-30", "journal": {"name": "", "pages": "37-51", "volume": "31"}, "citationStyles":
      {"bibtex": "@Inproceedings{Kol\u00e1\u0159\u00edkov\u00e12019\u00c0PD,\n author
      = {Dagmar Kol\u00e1\u0159\u00edkov\u00e1},\n pages = {37-51},\n title = {\u00c0
      propos de la productivit\u00e9 lexicale actuelle du formant \u00ab cyber \u00bb},\n
      volume = {31},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2081958967",
      "name": "Dagmar Kol\u00e1\u0159\u00edkov\u00e1"}]}, {"paperId": "10b7c67db0e031db545ba5598ec344c1a63c394d",
      "externalIds": {"MAG": "2756165701", "DOI": "10.1007/978-3-662-49275-8_63",
      "CorpusId": 64688223}, "corpusId": 64688223, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/10b7c67db0e031db545ba5598ec344c1a63c394d",
      "title": "The Cloud Native Stack: Building Cloud Applications as Google Does",
      "abstract": null, "venue": "", "year": 2018, "referenceCount": 6, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "pages": "711-723", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Adersberger2018TheCN,\n author
      = {Josef Adersberger and Johannes Siedersleben},\n pages = {711-723},\n title
      = {The Cloud Native Stack: Building Cloud Applications as Google Does},\n year
      = {2018}\n}\n"}, "authors": [{"authorId": "1771962", "name": "Josef Adersberger"},
      {"authorId": "1783580", "name": "Johannes Siedersleben"}]}, {"paperId": "10c621ca4da8895f4765d5f19e49e67622323ca4",
      "externalIds": {"MAG": "2920979585", "DBLP": "conf/aina/Christodoulopoulos19",
      "DOI": "10.1007/978-3-030-15032-7_83", "CorpusId": 85541944}, "corpusId": 85541944,
      "publicationVenue": {"id": "7180f721-a356-48cc-b6cd-dd3ab90a3566", "name": "International
      Conference on Advanced Information Networking and Applications", "type": "conference",
      "alternate_names": ["aina", "Int Conf Adv Inf Netw Appl"], "url": "http://www.aina-conference.org/"},
      "url": "https://www.semanticscholar.org/paper/10c621ca4da8895f4765d5f19e49e67622323ca4",
      "title": "Commodore: Fail Safe Container Scheduling in Kubernetes", "abstract":
      null, "venue": "International Conference on Advanced Information Networking
      and Applications", "year": 2019, "referenceCount": 4, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2019-03-15", "journal": {"pages": "988-999"}, "citationStyles": {"bibtex":
      "@Article{Christodoulopoulos2019CommodoreFS,\n author = {Christos E. Christodoulopoulos
      and E. Petrakis},\n booktitle = {International Conference on Advanced Information
      Networking and Applications},\n pages = {988-999},\n title = {Commodore: Fail
      Safe Container Scheduling in Kubernetes},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "2890978", "name": "Christos E. Christodoulopoulos"}, {"authorId":
      "1729390", "name": "E. Petrakis"}]}, {"paperId": "10d3c4a47b6fd6b7e847a7e864510fc7fa7d87c1",
      "externalIds": {"MAG": "3189627614", "DOI": "10.1007/978-1-4842-7192-6_7", "CorpusId":
      238881316}, "corpusId": 238881316, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/10d3c4a47b6fd6b7e847a7e864510fc7fa7d87c1",
      "title": "Deploying SQL Server on Kubernetes", "abstract": null, "venue": "SQL
      Server on Kubernetes", "year": 2021, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "SQL Server on Kubernetes"},
      "citationStyles": {"bibtex": "@Article{Nocentino2021DeployingSS,\n author =
      {Anthony E. Nocentino and Benjamin Weissman},\n booktitle = {SQL Server on Kubernetes},\n
      journal = {SQL Server on Kubernetes},\n title = {Deploying SQL Server on Kubernetes},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2047576954", "name": "Anthony
      E. Nocentino"}, {"authorId": "145400508", "name": "Benjamin Weissman"}]}, {"paperId":
      "10ee5f75fd5644ed16b7c07e825c65870903ebe8", "externalIds": {"DOI": "10.31854/1813-324x-2023-9-3-68-73",
      "CorpusId": 260009943}, "corpusId": 260009943, "publicationVenue": {"id": "e45e3644-f8fc-4fdb-9004-9323da4b1ba8",
      "name": "Proceedings of Telecommunication Universities", "alternate_names":
      ["Proc Telecommun Univ"], "issn": "1813-324X"}, "url": "https://www.semanticscholar.org/paper/10ee5f75fd5644ed16b7c07e825c65870903ebe8",
      "title": "Development of an Accessibility Testing System for the Virtual Machine
      Deployment Service in the Cloud", "abstract": "This paper presents a developed
      system for testing the accessibility of the virtual machine deployment service
      in the cloud. The methods used for monitoring cloud systems based on open-source
      solutions such as Kubernetes, Prometheus, and Selenium are discussed. The key
      stages of the system design are described, including requirements gathering
      and analysis, architecture, and implementation features. This system allows
      for the prevention of potential issues before they arise, as well as increasing
      IT service reliability. Integration with open-source systems helps to reduce
      the cost of system development and operation and speeds up implementation time.
      Additionally, this system can be quickly adapted and customized to meet specific
      needs. To analyze the feasibility of building the system, production statistics
      of virtual machine reservations were collected using the Prometheus monitoring
      system.", "venue": "Proceedings of Telecommunication Universities", "year":
      2023, "referenceCount": 5, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": true, "openAccessPdf": {"url": "https://tuzs.sut.ru/jour/article/download/480/455",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-11", "journal":
      {"name": "Proceedings of Telecommunication Universities"}, "citationStyles":
      {"bibtex": "@Article{Marchenko2023DevelopmentOA,\n author = {A. Marchenko and
      D. Shchemelinin},\n booktitle = {Proceedings of Telecommunication Universities},\n
      journal = {Proceedings of Telecommunication Universities},\n title = {Development
      of an Accessibility Testing System for the Virtual Machine Deployment Service
      in the Cloud},\n year = {2023}\n}\n"}, "authors": [{"authorId": "144649203",
      "name": "A. Marchenko"}, {"authorId": "2291439", "name": "D. Shchemelinin"}]},
      {"paperId": "1118478223806cd665c0e5f01328b6a3f81a1cf7", "externalIds": {"DOI":
      "10.20535/1560-8956.42.2023.278925", "CorpusId": 258826808}, "corpusId": 258826808,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1118478223806cd665c0e5f01328b6a3f81a1cf7",
      "title": "\u041f\u0440\u043e\u0430\u043a\u0442\u0438\u0432\u043d\u0435 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u0435
      \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0443\u0432\u0430\u043d\u043d\u044f
      \u0432\u0432\u0435\u0440\u0445 \u0434\u043b\u044f Kuberneters", "abstract":
      "\u0421\u0443\u0447\u0430\u0441\u043d\u0456 \u0432\u0438\u043a\u043b\u0438\u043a\u0438
      \u0432 \u043c\u0456\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0456\u0441\u043d\u0456\u0439
      \u0430\u0440\u0445\u0456\u0442\u0435\u043a\u0442\u0443\u0440\u0456 \u0432\u0438\u043c\u0430\u0433\u0430\u044e\u0442\u044c
      \u0430\u0432\u0442\u043e-\u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0443\u0432\u0430\u043d\u043d\u044f.
      \u042f\u043a \u043f\u0440\u0438\u043a\u043b\u0430\u0434 \u043c\u043e\u0436\u043d\u0430
      \u0440\u043e\u0437\u0433\u043b\u044f\u043d\u0443\u0442\u0438 \u00ab\u0427\u043e\u0440\u043d\u0443
      \u043f\u2019\u044f\u0442\u043d\u0438\u0446\u044e\u00bb, \u043a\u043e\u043b\u0438
      \u043d\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f \u043d\u0430
      \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0437\u043d\u0430\u0447\u043d\u043e
      \u0437\u0440\u043e\u0441\u0442\u0430\u0454 \u0456, \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e,
      \u0434\u043b\u044f \u0457\u0457 \u043e\u0431\u0441\u043b\u0443\u0433\u043e\u0432\u0443\u0432\u0430\u043d\u043d\u044f
      \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0456 \u0434\u043e\u0434\u0430\u0442\u043a\u043e\u0432\u0456\u043e\u0431\u0447\u0438\u0441\u043b\u044e\u0432\u0430\u043b\u044c\u043d\u0456
      \u043c\u043e\u0436\u043b\u0438\u0432\u043e\u0441\u0442\u0456. \u0420\u043e\u0437\u0433\u043e\u0440\u0442\u0430\u043d\u043d\u044f
      \u043d\u043e\u0432\u043e\u0433\u043e \u0435\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430
      \u043f\u0456\u0434 \u0447\u0430\u0441 \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0443\u0432\u0430\u043d\u043d\u044f
      \u043c\u043e\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0438 \u0434\u0435\u044f\u043a\u0438\u0439
      \u0447\u0430\u0441 \u0456 \u0437\u043c\u0443\u0441\u0438\u0442\u0438 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430
      \u0447\u0435\u043a\u0430\u0442\u0438 \u043a\u0440\u0430\u0449\u043e\u0457 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0456
      \u0441\u0438\u0441\u0442\u0435\u043c\u0438, \u0434\u043e\u043a\u0438 \u043d\u043e\u0432\u0438\u0439
      \u0435\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043d\u0435 \u0437\u0430\u043f\u0440\u0430\u0446\u044e\u0454.
      \u0422\u043e\u043c\u0443 \u0437\u0430\u0445\u043e\u0434\u0438 \u043f\u043e \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0443\u0432\u0430\u043d\u043d\u044e
      \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u043e\u0447\u0438\u043d\u0430\u0442\u0438\u0441\u044f
      \u044f\u043a\u043e\u043c\u043e\u0433\u0430 \u0440\u0430\u043d\u0456\u0448\u0435.
      \u0404\u0434\u0438\u043d\u0435 \u0440\u0456\u0448\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f\u0433\u0430\u0454
      \u0432 \u0442\u043e\u043c\u0443, \u0449\u043e\u0431 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438\u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0443\u0432\u0430\u043d\u043d\u044f
      \u0442\u0430 \u043f\u043e\u0447\u0430\u0442\u0438 \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0443\u0432\u0430\u043d\u043d\u044f
      \u0440\u0430\u043d\u0456\u0448\u0435, \u043c\u0430\u044e\u0447\u0438 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0443\u0432\u0430\u043d\u043d\u044f
      \u043c\u0430\u0439\u0431\u0443\u0442\u043d\u044c\u043e\u0433\u043e \u0442\u0440\u0435\u043d\u0434\u0443
      \u043d\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f.\u0423
      \u0446\u0456\u0439 \u0441\u0442\u0430\u0442\u0442\u0456 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u0435
      \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0443\u0432\u0430\u043d\u043d\u044f
      \u0437\u043e\u0441\u0435\u0440\u0435\u0434\u0436\u0435\u043d\u043e \u043d\u0430
      Kubernetes, \u043e\u0441\u043a\u0456\u043b\u044c\u043a\u0438 Kubernetes \u0434\u0435-\u0444\u0430\u043a\u0442\u043e
      \u0454 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043e\u043c \u0434\u043b\u044f
      \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u043e\u0432\u0446\u0456 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0456\u0432.
      \u0410\u0432\u0442\u043e\u0440\u0438 \u043f\u0440\u043e\u043f\u043e\u043d\u0443\u044e\u0442\u044c
      \u0440\u0456\u0448\u0435\u043d\u043d\u044f, \u043d\u0430\u0434\u0430\u044e\u0447\u0438
      git-\u043f\u043e\u0441\u0438\u043b\u0430\u043d\u043d\u044f \u043d\u0430 \u043a\u043e\u0434.
      \u0420\u0456\u0448\u0435\u043d\u043d\u044f \u0440\u0435\u0430\u043b\u0456\u0437\u043e\u0432\u0430\u043d\u043e
      \u044f\u043a Java-\u0437\u0430\u0441\u0442\u043e\u0441\u0443\u043d\u043e\u043a,
      \u044f\u043a\u0438\u0439 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454
      \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u0438\u0445 \u0447\u0430\u0441\u043e\u0432\u0438\u0445
      \u0440\u044f\u0434\u0456\u0432 (\u0443 \u0446\u044c\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443
      InfluxDB) \u0434\u043b\u044f \u0440\u043e\u0437\u0443\u043c\u0456\u043d\u043d\u044f
      \u043d\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f \u043d\u0430
      \u043c\u0456\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0456\u0441. \u0420\u0456\u0448\u0435\u043d\u043d\u044f
      \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454 \u0434\u0432\u0456
      \u043c\u043e\u0434\u0435\u043b\u0456 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0443\u0432\u0430\u043d\u043d\u044f
      \u2013 \u0435\u043a\u0441\u043f\u043e\u043d\u0435\u043d\u0446\u0456\u0439\u043d\u0435
      \u0437\u0433\u043b\u0430\u0434\u0436\u0443\u0432\u0430\u043d\u043d\u044f (ES)
      \u0456 \u043f\u043e\u0434\u0432\u0456\u0439\u043d\u0435 \u0435\u043a\u0441\u043f\u043e\u043d\u0435\u043d\u0446\u0456\u0430\u043b\u044c\u043d\u0435
      \u0437\u0433\u043b\u0430\u0434\u0436\u0443\u0432\u0430\u043d\u043d\u044f (DES).
      \u0414\u0432\u0456 \u043c\u043e\u0434\u0435\u043b\u0456 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u044e\u0442\u044c\u0441\u044f
      \u0434\u043b\u044f \u043f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f
      \u043e\u0434\u043d\u0430 \u0437 \u043e\u0434\u043d\u043e\u044e.\u041f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0456
      \u0432\u0438\u043f\u0440\u043e\u0431\u0443\u0432\u0430\u043d\u043d\u044f \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0456,
      \u0440\u043e\u0437\u0433\u043b\u044f\u043d\u0443\u0442\u043e \u0434\u0432\u0430
      \u043e\u0441\u043d\u043e\u0432\u043d\u0438\u0445 \u0432\u0430\u0440\u0456\u0430\u043d\u0442\u0438
      \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u2013
      \u0432\u0438\u043f\u0430\u0434\u043e\u043a \u043f\u043e\u0432\u0456\u043b\u044c\u043d\u043e\u0433\u043e
      \u0437\u0440\u043e\u0441\u0442\u0430\u043d\u043d\u044f \u043d\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f
      \u0442\u0430 \u0432\u0438\u043f\u0430\u0434\u043e\u043a \u0448\u0432\u0438\u0434\u043a\u043e\u0433\u043e
      \u0437\u0440\u043e\u0441\u0442\u0430\u043d\u043d\u044f \u043d\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f.
      \u041d\u0430 \u043e\u0441\u043d\u043e\u0432\u0456 \u0435\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0456\u0432
      \u0432\u0438\u044f\u0432\u043b\u0435\u043d\u043e, \u0449\u043e \u0443 \u0432\u0441\u0456\u0445
      \u0432\u0438\u043f\u0430\u0434\u043a\u0430\u0445 \u043f\u0440\u043e\u0430\u043a\u0442\u0438\u0432\u043d\u0435
      \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0443\u0432\u0430\u043d\u043d\u044f
      \u043f\u0440\u0430\u0446\u044e\u0454 \u043a\u0440\u0430\u0449\u0435, \u043d\u0456\u0436
      \u0440\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u0435. \u041a\u043e\u0440\u0438\u0441\u043d\u0456\u0441\u0442\u044c
      \u043f\u0440\u043e\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u043f\u0456\u0434\u0445\u043e\u0434\u0443
      \u0431\u0456\u043b\u044c\u0448\u043f\u043e\u043c\u0456\u0442\u043d\u0430 \u0443
      \u0432\u0438\u043f\u0430\u0434\u043a\u0443 \u0448\u0432\u0438\u0434\u043a\u043e\u0433\u043e
      \u0437\u0440\u043e\u0441\u0442\u0430\u043d\u043d\u044f \u043d\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f.
      \u042f\u043a\u0449\u043e \u043f\u043e\u0440\u0456\u0432\u043d\u044e\u0432\u0430\u0442\u0438
      ES \u0456 DES \u043c\u0456\u0436 \u0441\u043e\u0431\u043e\u044e, \u0442\u043e
      \u0432 \u043e\u0431\u043e\u0445 \u0432\u0438\u043f\u0430\u0434\u043a\u0430\u0445
      DES \u043f\u043e\u043a\u0430\u0437\u0430\u0432 \u043a\u0440\u0430\u0449\u0456
      \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438. \u041c\u0430\u0439\u0431\u0443\u0442\u043d\u0454
      \u0432\u0434\u043e\u0441\u043a\u043e\u043d\u0430\u043b\u0435\u043d\u043d\u044f
      \u0440\u0456\u0448\u0435\u043d\u043d\u044f \u043c\u043e\u0436\u0435 \u043f\u043e\u043b\u044f\u0433\u0430\u0442\u0438
      \u0443 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u0456 \u0440\u0456\u0448\u0435\u043d\u043d\u044f
      \u044f\u043a \u0440\u043e\u0437\u0448\u0438\u0440\u0435\u043d\u043d\u044f \u0435\u043a\u043e\u0441\u0438\u0441\u0442\u0435\u043c\u0438
      Kubernetes \u0434\u043b\u044f \u043b\u0435\u0433\u043a\u043e\u0433\u043e \u043f\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044f
      \u0434\u043e \u0456\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438
      Kubernetes. \u0422\u0430\u043a\u043e\u0436 \u043e\u0434\u043d\u0438\u043c \u0456\u0437
      \u043f\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u044c \u043c\u043e\u0436\u0435
      \u0431\u0443\u0442\u0438 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u043a\u0430
      Prometheus \u044f\u043a \u0431\u0430\u0437\u0438 \u0434\u0430\u043d\u0438\u0445
      \u0447\u0430\u0441\u043e\u0432\u0438\u0445 \u0440\u044f\u0434\u0456\u0432. \n\u0411\u0456\u0431\u043b.
      20, \u0456\u043b. 3, \u0442\u0430\u0431\u043b. 2", "venue": "\u0410\u0434\u0430\u043f\u0442\u0438\u0432\u043d\u0456
      \u0441\u0438\u0441\u0442\u0435\u043c\u0438 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e\u0433\u043e
      \u0443\u043f\u0440\u0430\u0432\u043b\u0456\u043d\u043d\u044f", "year": 2023,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "http://asac.kpi.ua/article/download/278925/273575",
      "status": "CLOSED"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-05-01", "journal": {"name": "\u0410\u0434\u0430\u043f\u0442\u0438\u0432\u043d\u0456
      \u0441\u0438\u0441\u0442\u0435\u043c\u0438 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e\u0433\u043e
      \u0443\u043f\u0440\u0430\u0432\u043b\u0456\u043d\u043d\u044f"}, "citationStyles":
      {"bibtex": "@Article{\u0413\u0443\u0442\u043c\u0430\u043d2023\u041f\u0440\u043e\u0430\u043a\u0442\u0438\u0432\u043d\u0435\u0410\u041c,\n
      author = {\u0414. \u0413\u0443\u0442\u043c\u0430\u043d and O. \u0421\u0438\u0440\u043e\u0442\u0430},\n
      booktitle = {\u0410\u0434\u0430\u043f\u0442\u0438\u0432\u043d\u0456 \u0441\u0438\u0441\u0442\u0435\u043c\u0438
      \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e\u0433\u043e
      \u0443\u043f\u0440\u0430\u0432\u043b\u0456\u043d\u043d\u044f},\n journal = {\u0410\u0434\u0430\u043f\u0442\u0438\u0432\u043d\u0456
      \u0441\u0438\u0441\u0442\u0435\u043c\u0438 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e\u0433\u043e
      \u0443\u043f\u0440\u0430\u0432\u043b\u0456\u043d\u043d\u044f},\n title = {\u041f\u0440\u043e\u0430\u043a\u0442\u0438\u0432\u043d\u0435
      \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u0435 \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0443\u0432\u0430\u043d\u043d\u044f
      \u0432\u0432\u0435\u0440\u0445 \u0434\u043b\u044f Kuberneters},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2218471661", "name": "\u0414. \u0413\u0443\u0442\u043c\u0430\u043d"},
      {"authorId": "2218205543", "name": "O. \u0421\u0438\u0440\u043e\u0442\u0430"}]},
      {"paperId": "114300118e8d4c1d685c254a05a9476b7abec81a", "externalIds": {"DBLP":
      "conf/ttc/Garcia-Dominguez23a", "CorpusId": 260309787}, "corpusId": 260309787,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/114300118e8d4c1d685c254a05a9476b7abec81a",
      "title": "Asymmetric and Directed Bidirectional Transformation for Container
      Orchestrations", "abstract": "In many DevOps scenarios, tools operate from declarative
      models of intended system configuration (e.g. Ansible/Puppet/Chef descriptions
      of infrastructure-as-code, or Kubernetes and Docker Compose descriptions of
      orchestrations of containers). DevOps-oriented domain-specific modeling notations
      will typically only cover a subset of all the capabilities in these configuration
      formats: this means users will need to manually edit the configuration files
      generated from the higher-level models. In many editing sessions, users will
      also touch upon parts that came from the high-level model, and will want that
      high-level model to be updated accordingly. Likewise, a user may want to introduce
      a change through the high-level model and not lose the YAML customisations that
      are unrelated to the high-level model. These requirements imply a need for a
      bidirectional transformation (\u201cbx\u201d) which is asymmetric (the configuration
      file contains all the information in the high-level model and more), and directed
      (changes are only applied to one side at a time). This case proposes revisiting
      the current state of bx tools for asymmetric and directed transformations, and
      complements the prior Families to Persons case from TTC 2017, which focused
      on a symmetrical and directed transformation. The case will reuse the Benchmarx
      framework from the TTC 2017 case.", "venue": "Agile MDE/MeSS/TTC@STAF", "year":
      2023, "referenceCount": 9, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Article{Garc\u00eda-Dom\u00ednguez2023AsymmetricAD,\n author =
      {A. Garc\u00eda-Dom\u00ednguez},\n booktitle = {Agile MDE/MeSS/TTC@STAF},\n
      title = {Asymmetric and Directed Bidirectional Transformation for Container
      Orchestrations},\n year = {2023}\n}\n"}, "authors": [{"authorId": "1401632277",
      "name": "A. Garc\u00eda-Dom\u00ednguez"}]}, {"paperId": "114c825a8b475649e80bf1732b8886a45167637f",
      "externalIds": {"DOI": "10.1109/DASA53625.2021.9682354", "CorpusId": 246291619},
      "corpusId": 246291619, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/114c825a8b475649e80bf1732b8886a45167637f",
      "title": "Containerised real-time architecture for safe urban navigation", "abstract":
      "From 1995 until 2007, the industry has focused more on developing tools and
      systems that entertains people and less focused on improving their life''s safety.
      Focusing on luxurious entertainment has left several areas exposed to danger.
      It is until lately, where urban city has encouraged many programs for safer
      cities, specially to reduce road accidents. According to the WHO, 1,35 million
      people die annually as a result of traffic accidents and more are injured. Road
      accidents, was and still one of the concerns of all urban cities. In order to
      improve pedestrians'' walkability, it is important to identify a suitable route
      for walking. The goal of this study is to provide a containerized real-time
      system for safe pedestrian navigation. The system provides various service such
      as geolocation, real-time navigation and safe routing. In order to use our system''s
      resources more efficiently and improve our system''s scalability, we used docker
      as container and Kubernetes as orchestrator. To manage users'' locations, Kafka
      to handle stream messaging and for routing we used Valhala. The main advantage
      over the proposed solutions lies in the robustness and the high availability
      of our system. We aim to provide a system that will help save lives and decrease
      pedestrian accidents.", "venue": "2021 International Conference on Decision
      Aid Sciences and Application (DASA)", "year": 2021, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Engineering", "source":
      "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2021-12-07", "journal":
      {"name": "2021 International Conference on Decision Aid Sciences and Application
      (DASA)", "pages": "938-941"}, "citationStyles": {"bibtex": "@Conference{Bella2021ContainerisedRA,\n
      author = {Kaoutar Bella and A. Boulmakoul},\n booktitle = {2021 International
      Conference on Decision Aid Sciences and Application (DASA)},\n journal = {2021
      International Conference on Decision Aid Sciences and Application (DASA)},\n
      pages = {938-941},\n title = {Containerised real-time architecture for safe
      urban navigation},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2130934668",
      "name": "Kaoutar Bella"}, {"authorId": "1727831", "name": "A. Boulmakoul"}]},
      {"paperId": "11c5a541b08a215484e2a3da55ebc1a361fb3c62", "externalIds": {"DBLP":
      "conf/samos/TzenetopoulosMX21", "DOI": "10.1007/978-3-031-04580-6_8", "CorpusId":
      246009104}, "corpusId": 246009104, "publicationVenue": {"id": "6ba93f5f-3944-4e86-9942-ddd29146c7d4",
      "name": "International Conference / Workshop on Embedded Computer Systems: Architectures,
      Modeling and Simulation", "type": "conference", "alternate_names": ["Int Conf  Workshop
      Embed Comput Syst Archit Model Simul", "SAMOS"]}, "url": "https://www.semanticscholar.org/paper/11c5a541b08a215484e2a3da55ebc1a361fb3c62",
      "title": "Interference-Aware Workload Placement for Improving Latency Distribution
      of Converged HPC/Big Data Cloud Infrastructures", "abstract": null, "venue":
      "International Conference / Workshop on Embedded Computer Systems: Architectures,
      Modeling and Simulation", "year": 2021, "referenceCount": 29, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"pages": "108-123"},
      "citationStyles": {"bibtex": "@Article{Tzenetopoulos2021InterferenceAwareWP,\n
      author = {Achilleas Tzenetopoulos and Dimosthenis Masouros and S. Xydis and
      D. Soudris},\n booktitle = {International Conference / Workshop on Embedded
      Computer Systems: Architectures, Modeling and Simulation},\n pages = {108-123},\n
      title = {Interference-Aware Workload Placement for Improving Latency Distribution
      of Converged HPC/Big Data Cloud Infrastructures},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2003073966", "name": "Achilleas Tzenetopoulos"}, {"authorId":
      "21075634", "name": "Dimosthenis Masouros"}, {"authorId": "1702282", "name":
      "S. Xydis"}, {"authorId": "144189794", "name": "D. Soudris"}]}, {"paperId":
      "11c7cd7a2ecb40cea0b443142ebb3ac845fe57c1", "externalIds": {"DOI": "10.1117/12.2642849",
      "CorpusId": 251166421}, "corpusId": 251166421, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/11c7cd7a2ecb40cea0b443142ebb3ac845fe57c1",
      "title": "KubeRM: a distributed rule-based security management system in cloud
      native environment", "abstract": "Recently, Microservice orchestration has attracted
      a great deal of attention in IT community. As a breaking technique to redefine
      our cloud, Microservice orchestration service, such as Kubernetes [1], As development
      teams have rapidly embraced the technique, the importance of securing the orchestration
      service has become the focal point. Hence, security practitioners are facing
      great challenges from the new eco-system. In this paper, we propose a distributed
      security management system, KubeRM, for cloud native environment. One of the
      greatest challenges we are facing is how to effectively and efficiently synchronize
      security detecting abilities across all machines in our large Kubernetes cluster.
      Hence, instead of implementing a centralized management system, our proposal
      focuses on designing a distributed security management system, which achieves
      seconds level security enforcement across all machines. In further, we also
      demonstrate our prototype system, KubeRM, which can effectively enforce not
      only the exploits detection on vulnerable K8s servers but also detect abnormal
      network traffic against the orchestrator. It leverages a rules-based detection
      strategies to profile all orchestrator behaviors.", "venue": "International
      Conference on Cloud Computing, Internet of Things, and Computer Applications",
      "year": 2022, "referenceCount": 13, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Engineering"],
      "s2FieldsOfStudy": [{"category": "Engineering", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-07-28",
      "journal": {"pages": "123030J - 123030J-9", "volume": "12303"}, "citationStyles":
      {"bibtex": "@Conference{Wang2022KubeRMAD,\n author = {Heng Wang and Ge-tong
      Zhang and D. Wang and Jin Deng},\n booktitle = {International Conference on
      Cloud Computing, Internet of Things, and Computer Applications},\n pages = {123030J
      - 123030J-9},\n title = {KubeRM: a distributed rule-based security management
      system in cloud native environment},\n volume = {12303},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "120241560", "name": "Heng Wang"}, {"authorId": "2143853761",
      "name": "Ge-tong Zhang"}, {"authorId": "46349206", "name": "D. Wang"}, {"authorId":
      "2153627968", "name": "Jin Deng"}]}, {"paperId": "1219c3f0c766648c4d22094bdf2f748ac0559965",
      "externalIds": {"PubMedCentral": "10346137", "DBLP": "journals/sensors/LiLZ23",
      "DOI": "10.3390/s23135939", "CorpusId": 259632204, "PubMed": "37447786"}, "corpusId":
      259632204, "publicationVenue": {"id": "3dbf084c-ef47-4b74-9919-047b40704538",
      "name": "Italian National Conference on Sensors", "type": "conference", "alternate_names":
      ["SENSORS", "IEEE Sens", "Ital National Conf Sens", "IEEE Sensors", "Sensors"],
      "issn": "1424-8220", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/1219c3f0c766648c4d22094bdf2f748ac0559965",
      "title": "Research on Lightweight Microservice Composition Technology in Cloud-Edge
      Device Scenarios", "abstract": "In recent years, cloud-native technology has
      become popular among Internet companies. Microservice architecture solves the
      complexity problem for multiple service methods by decomposing a single application
      so that each service can be independently developed, independently deployed,
      and independently expanded. At the same time, domestic industrial Internet construction
      is still in its infancy, and small and medium-sized enterprises still face many
      problems in the process of digital transformation, such as difficult resource
      integration, complex control equipment workflow, slow development and deployment
      process, and shortage of operation and maintenance personnel. The existing traditional
      workflow architecture is mainly aimed at the cloud scenario, which consumes
      a lot of resources and cannot be used in resource-limited scenarios at the edge.
      Moreover, traditional workflow is not efficient enough to transfer data and
      often needs to rely on various storage mechanisms. In this article, a lightweight
      and efficient workflow architecture is proposed to optimize the defects of these
      traditional workflows by combining cloud-edge scene. By orchestrating a lightweight
      workflow engine with a Kubernetes Operator, the architecture can significantly
      reduce workflow execution time and unify data flow between cloud microservices
      and edge devices.", "venue": "Italian National Conference on Sensors", "year":
      2023, "referenceCount": 24, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/1424-8220/23/13/5939/pdf?version=1687845777",
      "status": "GOLD"}, "fieldsOfStudy": ["Medicine", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Medicine", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-06-26", "journal": {"name": "Sensors
      (Basel, Switzerland)", "volume": "23"}, "citationStyles": {"bibtex": "@Article{Li2023ResearchOL,\n
      author = {Hanqi Li and Xianhui Liu and Weidong Zhao},\n booktitle = {Italian
      National Conference on Sensors},\n journal = {Sensors (Basel, Switzerland)},\n
      title = {Research on Lightweight Microservice Composition Technology in Cloud-Edge
      Device Scenarios},\n volume = {23},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2222733504", "name": "Hanqi Li"}, {"authorId": "8016263", "name": "Xianhui
      Liu"}, {"authorId": "2150609976", "name": "Weidong Zhao"}]}, {"paperId": "121f559bd3e31de0d01a03561f3f633cc4c30d87",
      "externalIds": {"DBLP": "journals/iotj/KaurGKAA20", "MAG": "2971627722", "DOI":
      "10.1109/JIOT.2019.2939534", "CorpusId": 202765604}, "corpusId": 202765604,
      "publicationVenue": {"id": "228761ec-c40a-479b-8309-9dcbe9851bcd", "name": "IEEE
      Internet of Things Journal", "type": "journal", "alternate_names": ["IEEE Internet
      Thing J"], "issn": "2327-4662", "url": "https://www.ieee.org/membership-catalog/productdetail/showProductDetailPage.html?product=PER288-ELE",
      "alternate_urls": ["https://ieeexplore.ieee.org/servlet/opac?punumber=6488907",
      "https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=6488907", "http://ieee-iotj.org/#"]},
      "url": "https://www.semanticscholar.org/paper/121f559bd3e31de0d01a03561f3f633cc4c30d87",
      "title": "KEIDS: Kubernetes-Based Energy and Interference Driven Scheduler for
      Industrial IoT in Edge-Cloud Ecosystem", "abstract": "With the rapid explosion
      of Industrial Internet of Things (IIoT), the need for real-time data processing
      with enhanced flexibility and scalability has increased manifold. However, the
      newly evolved containerization technology offers lucrative advantages in comparison
      to the conventional virtual machines. However, management of these light-weight
      containers is a tedious task, but Google Kubernetes offers a consolidated container
      management and scheduling for successful execution of various lightweight containers.
      Nevertheless, the existing Kubernetes solutions fall short in efficiently handling
      the \u201cinterference\u201d and \u201cenergy minimization\u201d challenges
      in IIoT set-up. Hence, in this article, we present a competent controller, named
      Kubernetes-based energy and interference driven scheduler (KEIDS), for container
      management on edge-cloud nodes taking into account the emission of carbon footprints,
      interference, and energy consumption. The problem of task scheduling has been
      formulated using integer linear programming based on multiobjective optimization
      problem. In detail, KEIDS minimizes the energy utilization of edge-cloud nodes
      in IIoT for optimal green energy utilization. Henceforth, the applications are
      scheduled on the available nodes in less time with minimum interference from
      other applications, which in turn guarantees an optimal performance to the end-users.
      An extensive evaluation of the proposed KEIDS scheduler in comparison to the
      existing state-of-the-art schemes indicates its superior performance on real-time
      data acquired from Google compute cluster.", "venue": "IEEE Internet of Things
      Journal", "year": 2020, "referenceCount": 36, "citationCount": 82, "influentialCitationCount":
      11, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-05-01", "journal":
      {"name": "IEEE Internet of Things Journal", "pages": "4228-4237", "volume":
      "7"}, "citationStyles": {"bibtex": "@Article{Kaur2020KEIDSKE,\n author = {K.
      Kaur and S. Garg and Georges Kaddoum and Syed Hassan Ahmed and Mohammed Atiquzzaman},\n
      booktitle = {IEEE Internet of Things Journal},\n journal = {IEEE Internet of
      Things Journal},\n pages = {4228-4237},\n title = {KEIDS: Kubernetes-Based Energy
      and Interference Driven Scheduler for Industrial IoT in Edge-Cloud Ecosystem},\n
      volume = {7},\n year = {2020}\n}\n"}, "authors": [{"authorId": "46555602", "name":
      "K. Kaur"}, {"authorId": "144529280", "name": "S. Garg"}, {"authorId": "2379122",
      "name": "Georges Kaddoum"}, {"authorId": "143960803", "name": "Syed Hassan Ahmed"},
      {"authorId": "69997866", "name": "Mohammed Atiquzzaman"}]}, {"paperId": "1221c3525ccf39f4df1f5cb57a3c421dbab4e0b7",
      "externalIds": {"DOI": "10.1007/978-1-4842-9026-2", "CorpusId": 255122789},
      "corpusId": 255122789, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1221c3525ccf39f4df1f5cb57a3c421dbab4e0b7",
      "title": "Kubernetes Programming with Go", "abstract": null, "venue": "", "year":
      2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Inproceedings{Martin2023KubernetesPW,\n author = {Philippe Martin},\n title
      = {Kubernetes Programming with Go},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "31242076", "name": "Philippe Martin"}]}, {"paperId": "12a8c471e23d0b5a5c7f5e6716f962c926b6bf24",
      "externalIds": {"DBLP": "journals/jr/YinLCC21", "MAG": "3131074989", "DOI":
      "10.1155/2021/6656912", "CorpusId": 233924388}, "corpusId": 233924388, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/12a8c471e23d0b5a5c7f5e6716f962c926b6bf24",
      "title": "A Delivery Robot Cloud Platform Based on Microservice", "abstract":
      "Delivery robots face the problem of storage and computational stress when performing
      immediate tasks, exceeding the limits of on-board computing power. Based on
      cloud computing, robots can offload intensive tasks to the cloud and acquire
      massive data resources. With its distributed cluster architecture, the platform
      can help offload computing and improve the computing power of the control center,
      which can be considered the external \u201cbrain\u201d of the robot. Although
      it expands the capabilities of the robot, cloud service deployment remains complex
      because most current cloud robot applications are based on monolithic architectures.
      Some scholars have proposed developing robot applications through the microservice
      development paradigm, but there is currently no unified microservice-based robot
      cloud platform. This paper proposes a delivery robot cloud platform based on
      microservice, providing dedicated services for autonomous driving of delivery
      robot. The microservice architecture is adopted to split the monomer robot application
      into multiple services and then implement automatic orchestration and deployment
      of services on the cloud platform based on components such as Kubernetes, Docker,
      and Jenkins. This enables containerized CI/CD (continuous integration, continuous
      deployment, and continuous delivery) for the cloud platform service, and the
      whole process can be visualized, repeatable, and traceable. The platform is
      prebuilt with development tools, and robot application developers can use these
      tools to develop in the cloud, without the need for any customization in the
      background, to achieve the rapid deployment and launch of robot cloud service.
      Through the cloud migration of traditional robot applications and the development
      of new APPs, the platform service capabilities are continuously improved. This
      paper verifies the feasibility of the platform architecture through the delivery
      scene experiment.", "venue": "J. Robotics", "year": 2021, "referenceCount":
      16, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://downloads.hindawi.com/journals/jr/2021/6656912.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-02-18", "journal":
      {"name": "J. Robotics", "pages": "6656912:1-6656912:10", "volume": "2021"},
      "citationStyles": {"bibtex": "@Article{Yin2021ADR,\n author = {Zuozhong Yin
      and Jihong Liu and Bin Chen and Chuanjun Chen},\n booktitle = {J. Robotics},\n
      journal = {J. Robotics},\n pages = {6656912:1-6656912:10},\n title = {A Delivery
      Robot Cloud Platform Based on Microservice},\n volume = {2021},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "51288256", "name": "Zuozhong Yin"}, {"authorId": "120809840",
      "name": "Jihong Liu"}, {"authorId": "50461900", "name": "Bin Chen"}, {"authorId":
      "2109151192", "name": "Chuanjun Chen"}]}, {"paperId": "12aacf568fc103fcbe9d0f3bfc0af4e4be530a26",
      "externalIds": {"DOI": "10.1117/12.3009420", "CorpusId": 263909852}, "corpusId":
      263909852, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/12aacf568fc103fcbe9d0f3bfc0af4e4be530a26",
      "title": "Research on cloud native batch scheduler technology", "abstract":
      "This paper reviews the evolution of IT system architecture and highlights that
      container technology based on cloud computing is an inevitable trend in the
      future of IT technology. And big data and artificial intelligence are also closely
      related to container technology. For instance, the architecture for computing-storage
      separation and the distributed training of large models are uninterruptedly
      dependent upon container technology. Numerous container-based applications require
      robust management tool suites. Although Kubernetes is a well-known tool for
      container orchestration, its native scheduling is not tailored towards offline
      workloads, like big data and artificial intelligence. In this context, this
      paper first examines the principles of Kubernetes native scheduler and identifies
      the challenges encountered when dealing with batch tasks, then presents the
      concept, the workflow, and integration methods of batch schedulers, and finally
      summarizes its significant features and several open-source frameworks. Ultimately,
      enterprises\u2019 IT infrastructure is continuously moving towards cloud and
      containerization. Comprehensive scheduling architectures that support both online
      and offline tasks are crucial, as they significantly impact the enterprise\u2019s
      overall IT scalability, efficiency, and business outcomes. Therefore, this area
      has garnered the industry\u2019s attention.", "venue": "Conference on Computer
      Science and Communication Technology", "year": 2023, "referenceCount": 12, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Engineering"], "s2FieldsOfStudy": [{"category": "Engineering",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference", "Review"], "publicationDate": "2023-10-11", "journal": {"pages":
      "129181A - 129181A-8", "volume": "12918"}, "citationStyles": {"bibtex": "@Conference{Wang2023ResearchOC,\n
      author = {Xuemin Wang and Yang Han},\n booktitle = {Conference on Computer Science
      and Communication Technology},\n pages = {129181A - 129181A-8},\n title = {Research
      on cloud native batch scheduler technology},\n volume = {12918},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2257370967", "name": "Xuemin Wang"}, {"authorId":
      "2198613494", "name": "Yang Han"}]}, {"paperId": "12b0ad8f25f9cfaafd6a47f30e829a86b31bf0b3",
      "externalIds": {"DOI": "10.3390/app112411745", "CorpusId": 245167791}, "corpusId":
      245167791, "publicationVenue": {"id": "136edf8d-0f88-4c2c-830f-461c6a9b842e",
      "name": "Applied Sciences", "type": "journal", "alternate_names": ["Appl Sci"],
      "issn": "2076-3417", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-217814",
      "alternate_urls": ["http://www.mathem.pub.ro/apps/", "https://www.mdpi.com/journal/applsci",
      "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-217814"]}, "url":
      "https://www.semanticscholar.org/paper/12b0ad8f25f9cfaafd6a47f30e829a86b31bf0b3",
      "title": "Towards Continuous Deployment for Blockchain", "abstract": "Ensuring
      a production-ready state of the application under development is the immanent
      feature of the continuous delivery approach. In a blockchain network, nodes
      communicate, storing data in a decentralized manner. Each node executes the
      same business application but operates in a distinct execution environment.
      The literature lacks research, focusing on continuous practices for blockchain
      and distributed ledger technology. In particular, such works with support for
      both software development disciplines of design and deployment. Artifacts from
      considered disciplines have been placed in the 1 + 5 architectural views model.
      The approach aims to ensure the continuous deployment of containerized blockchain
      distributed applications. The solution has been divided into two independent
      components: Delivery and deployment. They interact through Git distributed version
      control. Dedicated GitHub repositories should store the business application
      and deployment configurations for nodes. The delivery component has to ensure
      the deployment package in the actual version of the business application with
      the node-specific up-to-date version of deployment configuration files. The
      deployment component is responsible for providing running distributed applications
      in containers for all blockchain nodes. The approach uses Jenkins and Kubernetes
      frameworks. For the sake of verification, preliminary tests have been conducted
      for the Electricity Consumption and Supply Management blockchain-based system
      for prosumers of renewable energy.", "venue": "Applied Sciences", "year": 2021,
      "referenceCount": 18, "citationCount": 13, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://www.mdpi.com/2076-3417/11/24/11745/pdf?version=1639142719",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-12-10", "journal": {"name":
      "Applied Sciences"}, "citationStyles": {"bibtex": "@Article{G\u00f3rski2021TowardsCD,\n
      author = {T. G\u00f3rski},\n booktitle = {Applied Sciences},\n journal = {Applied
      Sciences},\n title = {Towards Continuous Deployment for Blockchain},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "47317592", "name": "T. G\u00f3rski"}]},
      {"paperId": "12b27afa693f5bbb215bcc32a417ddd3210e27b8", "externalIds": {"DOI":
      "10.1109/ICDSNS58469.2023.10245408", "CorpusId": 262131874}, "corpusId": 262131874,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/12b27afa693f5bbb215bcc32a417ddd3210e27b8",
      "title": "Cost Effective Generic Machine Learning Operation: A Case Study",
      "abstract": "In this research, we have proposed a mechanism to implement a typical
      Mops pipeline for small scale organization who cannot afford the operational
      expenditures to bring the pipeline at Cloudera, Horton works platform or cloud
      premises like AWS, GCP or Azure. This paper gives a very detailed understanding
      of operationalization of a typical ML pipelines to adhere all the elements and
      artifacts without even using any Docker, Kubernetes or even any API generating
      platforms like Flask or FastAPI. Using the combination of a simple Python/R
      along with SQL and Shell scripts we can manage the entire workflow at on premises
      with a very low-cost approach. From some angle this mechanism would not be comparable
      with the architectures like market ready MLOps platforms like Azure Devops,
      MLflow, Kubeflow, Apache Airflow, Databricks with Data factory or Sagemaker
      Studio workflow but from conceptual point of view, suffice almost 90% of the
      requirements with efficient manner. We have also done a latest review related
      to MLOps in recent past and also listed out the several research gaps that can
      be solved in future research.", "venue": "2023 International Conference on Data
      Science and Network Security (ICDSNS)", "year": 2023, "referenceCount": 33,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference", "Review"], "publicationDate":
      "2023-07-28", "journal": {"name": "2023 International Conference on Data Science
      and Network Security (ICDSNS)", "pages": "1-6"}, "citationStyles": {"bibtex":
      "@Conference{Jain2023CostEG,\n author = {Samridhi Jain and Puneet Kumar},\n
      booktitle = {2023 International Conference on Data Science and Network Security
      (ICDSNS)},\n journal = {2023 International Conference on Data Science and Network
      Security (ICDSNS)},\n pages = {1-6},\n title = {Cost Effective Generic Machine
      Learning Operation: A Case Study},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2244130712", "name": "Samridhi Jain"}, {"authorId": "2244121481", "name": "Puneet
      Kumar"}]}, {"paperId": "12e2eb3044f41e5387022834bf9b0f51d57d8f09", "externalIds":
      {"MAG": "2903186528", "CorpusId": 208995414}, "corpusId": 208995414, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/12e2eb3044f41e5387022834bf9b0f51d57d8f09",
      "title": "Comprehensive Container-Based Service Monitoring with Kubernetes and
      Istio", "abstract": null, "venue": "", "year": 2018, "referenceCount": 0, "citationCount":
      7, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Moyer2018ComprehensiveCS,\n author = {Fred Moyer},\n
      title = {Comprehensive Container-Based Service Monitoring with Kubernetes and
      Istio},\n year = {2018}\n}\n"}, "authors": [{"authorId": "70213763", "name":
      "Fred Moyer"}]}, {"paperId": "12e79427348c574bb0b60e82d716734a766f2269", "externalIds":
      {"MAG": "3196231079", "CorpusId": 238266401}, "corpusId": 238266401, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/12e79427348c574bb0b60e82d716734a766f2269",
      "title": "DRACeo: A smart simulator to deploy energy saving methods in a services/microservices
      based network", "abstract": "Nowadays, there are many architectures for microservices
      deployment through the network (e.g. Docker-Kubernetes, Kalimucho, etc.) which
      aim at the creation of modular applications in the most ef\ufb01cient way. On
      the other hand, energy saving is an issue that concerns both sus-tainability
      and business global economy. For this reason, many researchers work to identify
      deployment solutions in order to save energy without decreasing functional QoS.
      In this work, we present DRACeo : a simulator to deploy and schedule microservices
      and their dependencies on various devices with software and hardware heterogeneity.
      DRACeo is able to apply various scheduling heuristics algorithms, including
      various philosophic management : centralized vs non-centralized in order to
      save energy without losing applications QoS. The simulator acts on moving, duplicating,
      starting/stopping microservices and devices. In addition, it performs important
      operations such as resource status monitoring, calculation of energy saved and
      current consumption (at device and network level). We have experimented some
      ideas based on our previous work (called Kaligreen) to demonstrate the effectiveness
      of DRACeo.", "venue": "", "year": 2020, "referenceCount": 18, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Environmental Science", "source": "s2-fos-model"}], "publicationTypes": null,
      "publicationDate": "2020-06-08", "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Valera2020DRACeoAS,\n author = {H. H. \u00c1. Valera
      and Marc Dalmau and P. Roose and Christina Herzog and J. Larracoechea},\n title
      = {DRACeo: A smart simulator to deploy energy saving methods in a services/microservices
      based network},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2080429192",
      "name": "H. H. \u00c1. Valera"}, {"authorId": "145427790", "name": "Marc Dalmau"},
      {"authorId": "145017910", "name": "P. Roose"}, {"authorId": "34411558", "name":
      "Christina Herzog"}, {"authorId": "2047938278", "name": "J. Larracoechea"}]},
      {"paperId": "132b3c21e6c33497e02157a2008332bf096f750c", "externalIds": {"DBLP":
      "journals/concurrency/UyarGKWWGPAAF22", "DOI": "10.1002/cpe.6502", "CorpusId":
      221338914}, "corpusId": 221338914, "publicationVenue": {"id": "312ca99c-9149-490d-813e-c60d5e949f65",
      "name": "Concurrency and Computation", "type": "journal", "alternate_names":
      ["Concurr Comput Pract Exp", "Concurrency and Computation: Practice and Experience",
      "Concurr Comput"], "issn": "1532-0626", "url": "http://www3.interscience.wiley.com/cgi-bin/jhome/77004395?CRETRY=1&SRETRY=0",
      "alternate_urls": ["http://www3.interscience.wiley.com/cgi-bin/jtoc?ID=77004395",
      "http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)1532-0634"]}, "url": "https://www.semanticscholar.org/paper/132b3c21e6c33497e02157a2008332bf096f750c",
      "title": "Twister2 Cross\u2010platform resource scheduler for big data", "abstract":
      "Twister2 is an open\u2010source big data hosting environment designed to process
      both batch and streaming data at scale. Twister2 runs jobs in both high\u2010performance
      computing (HPC) and big data clusters. It provides a cross\u2010platform resource
      scheduler to run jobs in diverse environments. Twister2 is designed with a layered
      architecture to support various clusters and big data problems. In this paper,
      we present the cross\u2010platform resource scheduler of Twister2. We identify
      required services and explain implementation details. We present job startup
      delays for single jobs and multiple concurrent jobs in Kubernetes and OpenMPI
      clusters. We compare job startup delays for Twister2 and Spark at a Kubernetes
      cluster. In addition, we compare the performance of terasort algorithm on Kubernetes
      and bare metal clusters at AWS cloud.", "venue": "Concurrency and Computation",
      "year": 2021, "referenceCount": 41, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://rss.onlinelibrary.wiley.com/doi/am-pdf/10.1002/cpe.6502",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-07-27", "journal":
      {"name": "Concurrency and Computation: Practice and Experience", "volume": "34"},
      "citationStyles": {"bibtex": "@Article{Uyar2021Twister2CR,\n author = {A. Uyar
      and Gurhan Gunduz and Supun Kamburugamuve and P. Wickramasinghe and Chathura
      Widanage and K. Govindarajan and Niranda Perera and V. Abeykoon and Selahattin
      Akkas and G. Fox},\n booktitle = {Concurrency and Computation},\n journal =
      {Concurrency and Computation: Practice and Experience},\n title = {Twister2
      Cross\u2010platform resource scheduler for big data},\n volume = {34},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "145452703", "name": "A. Uyar"}, {"authorId":
      "2540236", "name": "Gurhan Gunduz"}, {"authorId": "3122947", "name": "Supun
      Kamburugamuve"}, {"authorId": "4747885", "name": "P. Wickramasinghe"}, {"authorId":
      "146448984", "name": "Chathura Widanage"}, {"authorId": "2721835", "name": "K.
      Govindarajan"}, {"authorId": "147698290", "name": "Niranda Perera"}, {"authorId":
      "51227181", "name": "V. Abeykoon"}, {"authorId": "71057554", "name": "Selahattin
      Akkas"}, {"authorId": "145943292", "name": "G. Fox"}]}, {"paperId": "1363c5bb131890c2376d52b82e622f0595e36306",
      "externalIds": {"DOI": "10.35940/ijrte.b3938.079220", "CorpusId": 241032869},
      "corpusId": 241032869, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1363c5bb131890c2376d52b82e622f0595e36306",
      "title": "Load Balancing using Docker and Kubernetes: A Comparative Study",
      "abstract": "Still in its early years, containers are increasingly\nbeing used
      in production environments. Containers offer a\nstreamlined approach, easy deployment,
      and secure method of\nimplementing infrastructure requirements also provide
      a\nmuch-improved alternative to virtual machines. A load balancer is\nrequired
      to distribute traffic across clusters. And now, with\nmultiple container environments
      becoming widespread, load\nbalancers are becoming a necessity to distribute
      traffic and reduce\nserver load. Different load balancing algorithms provide
      a\nsolution to this with varying efficiency. This paper presents a study\non
      the latest methods which are being implemented to perform\neffective load balancing
      on containers. Docker Swarm and\nKubernetes are the most widely used systems
      for deploying and\nmanaging a cluster of containers in an environment. The paper\nfurther
      demonstrates how Docker Swarm and Kubernetes can be\nused to minimize load traffic
      through load balancing techniques.\nWe have introduced load balancing and different
      algorithms.\nAlso, we have shown the implementations of load balancing\nalgorithms
      in Docker and Kubernetes and finally compared the\nresults. The paper finally
      concludes why Kubernetes is often\npreferred over Docker Swarm for load balancing.",
      "venue": "Regular", "year": 2020, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2020-07-30", "journal": {"name": "Regular"}, "citationStyles":
      {"bibtex": "@Article{None,\n booktitle = {Regular},\n journal = {Regular},\n
      title = {Load Balancing using Docker and Kubernetes: A Comparative Study},\n
      year = {2020}\n}\n"}, "authors": []}, {"paperId": "137d50a6f9f043c84931dedb47568a2c939b1f1c",
      "externalIds": {"DBLP": "journals/symmetry/HeidariP22", "DOI": "10.3390/sym14091818",
      "CorpusId": 252225541}, "corpusId": 252225541, "publicationVenue": {"id": "1620da87-4387-4b9a-9bf4-22fdf74d4dc3",
      "name": "Symmetry", "type": "journal", "issn": "2073-8994", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-172134",
      "alternate_urls": ["https://www.mdpi.com/journal/symmetry", "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-172134"]},
      "url": "https://www.semanticscholar.org/paper/137d50a6f9f043c84931dedb47568a2c939b1f1c",
      "title": "Multipurpose Cloud-Based Compiler Based on Microservice Architecture
      and Container Orchestration", "abstract": "Compilation often takes a long time,
      especially for large projects or when identifying better optimization options.
      Currently, compilers are mainly installed on local machines and used as standalone
      software. Despite the availability of several online compilers, they do not
      offer an efficient all-in-one package for private account management, command
      line interface (CLI), code advisors, and optimization techniques. Today, the
      widespread usage of Software as a Service (SaaS) is ever-growing, and compilers
      are not an exception. In this paper, we describe a symmetric approach to compilation
      and how to compile code on distributed systems. Although some improvements in
      cloud compilers have been made, it is possible to harness the potential of the
      most-modern technologies and architecture patterns toward designing efficient,
      in-cloud compilers. In this paper, we propose an architecture design of a cloud-based
      compiler that is fully compatible with orchestration technologies, such as Kubernetes,
      providing a higher level of scalability, reliability, security, and maintainability.
      Microservice architecture alongside containerization and orchestration technologies
      assist us in making a scalable system that provides a high level of availability.
      We propose this architecture so that the system can handle a higher workload
      as it receives a large number of compilation requests per second. Distributed
      compilation is a prominent benefit of this approach, as each phase of the compilation
      can be executed in a separate server, which supplies a kind of workload mitigation
      to the whole system. In other words, we propose a new perspective for an intelligent
      way of advisor, error detection, and optimization of compilers. We also propose
      an implementation example of the developed architecture. Finally, we analyze
      the results from an experimental implementation, proving that we can compile
      code from more than 100k requests concurrently on a cloud cluster with one master
      node and three worker nodes.", "venue": "Symmetry", "year": 2022, "referenceCount":
      8, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/2073-8994/14/9/1818/pdf?version=1662101167",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-09-02", "journal":
      {"name": "Symmetry", "pages": "1818", "volume": "14"}, "citationStyles": {"bibtex":
      "@Article{Heidari2022MultipurposeCC,\n author = {Sayed Moeid Heidari and A.
      Paznikov},\n booktitle = {Symmetry},\n journal = {Symmetry},\n pages = {1818},\n
      title = {Multipurpose Cloud-Based Compiler Based on Microservice Architecture
      and Container Orchestration},\n volume = {14},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2184784004", "name": "Sayed Moeid Heidari"}, {"authorId": "2980433",
      "name": "A. Paznikov"}]}, {"paperId": "138e1ee977a7528fd68344c79f02d111c7d0dbc9",
      "externalIds": {"DOI": "10.26756/th.2022.474", "CorpusId": 253196986}, "corpusId":
      253196986, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/138e1ee977a7528fd68344c79f02d111c7d0dbc9",
      "title": "On-Demand Client Deployment And Selection In Federated Learning. (c2022)",
      "abstract": "Traditional machine learning models are used to train their models
      on centralized data sets. Lately, data privacy becomes a real aspect to take
      into consideration while collecting data. For that, Federated learning plays
      nowadays a great role in addressing privacy and technology together by maintaining
      the ability to learn over decentralized data sets. The training is limited to
      the user devices only while sharing the locally computed parameter with the
      server that aggregates those updated weights to optimize a global model. This
      scenario is repeated multiple rounds for better results and convergence. Most
      of the literature proposed client selection methods to converge faster and increase
      accuracy. However, none of them has targeted the ability to deploy and select
      clients on the fly wherever and whenever needed. In fact, some devices are not
      available to serve as clients in the federated learning due to the highly dynamic
      environments and/or do not have the capabilities to accomplish this task. In
      this paper, we address the aforementioned limitations by introducing an on-demand
      client deployment in federated learning offering more volume and heterogeneity
      of data in the learning process. We make use of containerization technology
      such as Docker to build efficient environments using IoT and mobile devices
      serving as volunteering devices, and Kubernetes utility called Kubeadm to monitor
      the devices. The performed experiments illustrate the relevance of the proposed
      approach and the efficiency of the on-the-fly deployment of clients whenever
      and wherever needed.", "venue": "", "year": null, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Misc{None,\n author = {Mario
      Chahoud},\n title = {On-Demand Client Deployment And Selection In Federated
      Learning. (c2022)}\n}\n"}, "authors": [{"authorId": "2189189690", "name": "Mario
      Chahoud"}]}, {"paperId": "13974391093d366df5f75b6bb26b6246fcfb39c2", "externalIds":
      {"ArXiv": "2311.09929", "DBLP": "journals/corr/abs-2311-09929", "DOI": "10.48550/arXiv.2311.09929",
      "CorpusId": 265220815}, "corpusId": 265220815, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/13974391093d366df5f75b6bb26b6246fcfb39c2",
      "title": "Mutating etcd Towards Edge Suitability", "abstract": "In the edge
      environment servers are no longer being co-located away from clients, instead
      they are being co-located with clients away from other servers, focusing on
      reliable and performant operation. Orchestration platforms, such as Kubernetes,
      are a key system being transitioned to the edge but they remain unsuited to
      the environment, stemming primarily from their critical key-value stores. In
      this work we derive requirements from the edge environment showing that, fundamentally,
      the design of distributed key-value datastores, such as etcd, is unsuited to
      meet them. Using these requirements, we explore the design space for distributed
      key-value datastores and implement two successive mutations of etcd for different
      points: mergeable-etcd and dismerge, trading linearizability for causal consistency
      based on CRDTs. mergeable-etcd retains the linear revision history but encounters
      inherent shortcomings, whilst dismerge embraces the causal model. Both stores
      are local-first, maintaining reliable performance under network partitions and
      variability, drastically surpassing etcd''s performance, whilst maintaining
      competitive performance in reliable settings.", "venue": "arXiv.org", "year":
      2023, "referenceCount": 31, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-11-16", "journal": {"name": "ArXiv", "volume": "abs/2311.09929"}, "citationStyles":
      {"bibtex": "@Article{Jeffery2023MutatingET,\n author = {Andrew Jeffery and Heidi
      Howard and Richard Mortier},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n
      title = {Mutating etcd Towards Edge Suitability},\n volume = {abs/2311.09929},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2259916555", "name": "Andrew
      Jeffery"}, {"authorId": "2259916523", "name": "Heidi Howard"}, {"authorId":
      "2266838990", "name": "Richard Mortier"}]}, {"paperId": "13bf0875160ab2f71d38245b4932846c131cff05",
      "externalIds": {"DOI": "10.1109/ICNISC57059.2022.00104", "CorpusId": 257082720},
      "corpusId": 257082720, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/13bf0875160ab2f71d38245b4932846c131cff05",
      "title": "The Differences and Advantages between Cloud Services and Traditional
      Services", "abstract": "In recent years, cloud services in the Internet field
      has been a hot topic, after several years of explosive technology development
      and several years of market precipitation, the cloud platform finally achieved
      universal unification in 2017, and Kubernetes (often referred to as k8s), an
      open source container cluster management system from Google Cloud Platform,
      has become the de facto standard in the industry. Google, Amazon, IBM, Microsoft,
      Alibaba, Tencent, Huawei and a series of well-known Internet manufacturers at
      home and abroad have built their own cloud services and cloud platforms. This
      article discusses the differences and advantages of cloud services compared
      with traditional services.", "venue": "2022 8th Annual International Conference
      on Network and Information Systems for Computers (ICNISC)", "year": 2022, "referenceCount":
      7, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Business", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-09-01",
      "journal": {"name": "2022 8th Annual International Conference on Network and
      Information Systems for Computers (ICNISC)", "pages": "497-499"}, "citationStyles":
      {"bibtex": "@Conference{Chang2022TheDA,\n author = {Hui Chang},\n booktitle
      = {2022 8th Annual International Conference on Network and Information Systems
      for Computers (ICNISC)},\n journal = {2022 8th Annual International Conference
      on Network and Information Systems for Computers (ICNISC)},\n pages = {497-499},\n
      title = {The Differences and Advantages between Cloud Services and Traditional
      Services},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2209430373", "name":
      "Hui Chang"}]}, {"paperId": "13caee91c0d6e3a817f447372e75331c90836b09", "externalIds":
      {"CorpusId": 261226510}, "corpusId": 261226510, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/13caee91c0d6e3a817f447372e75331c90836b09",
      "title": "Enhancing Security in Communication Applications Deployed on Kubernetes:
      Best Practices and Service Mesh Analysis", "abstract": null, "venue": "", "year":
      2023, "referenceCount": 24, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Karakas2023EnhancingSI,\n
      author = {Buket Karakas},\n title = {Enhancing Security in Communication Applications
      Deployed on Kubernetes: Best Practices and Service Mesh Analysis},\n year =
      {2023}\n}\n"}, "authors": [{"authorId": "2006702888", "name": "Buket Karakas"}]},
      {"paperId": "13cf1f03bae891051a1d7ab2b855f6747ee1e3e5", "externalIds": {"CorpusId":
      236784317}, "corpusId": 236784317, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/13cf1f03bae891051a1d7ab2b855f6747ee1e3e5",
      "title": "Service Function Chaining Orchestration and its evaluations in real
      environment", "abstract": "In this paper, we propose Service Function Chaining
      Orchestration which enables to improve utilization of computing and network
      resources. To realize this, IoT service is represented by a service function
      chaining manner and Service Function Chaining Controller (also known as ThingVisor
      Factory Controller) will suppress deployment and instantiation of service functions
      by sharing (or aggregation) of IoT service function chaining requests. We construct
      edge computing environment by using Kubernetes in Waseda University, deploy
      Service Function Chaining Controller in the cloud and evaluate performance of
      the proposal in the environment.", "venue": "", "year": 2020, "referenceCount":
      22, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Inproceedings{Kanai2020ServiceFC,\n author = {Kenji Kanai and Hibiki
      Sekine and H. Nakazato and Hirohide Kanemitsu and J. Katto},\n title = {Service
      Function Chaining Orchestration and its evaluations in real environment},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "145758871", "name": "Kenji Kanai"},
      {"authorId": "151028502", "name": "Hibiki Sekine"}, {"authorId": "1846048",
      "name": "H. Nakazato"}, {"authorId": "2122393339", "name": "Hirohide Kanemitsu"},
      {"authorId": "1788294", "name": "J. Katto"}]}, {"paperId": "13df7c2387430bcf32a23a7de57aa9a28ab12661",
      "externalIds": {"DOI": "10.1109/IET-ICETA56553.2022.9971554", "CorpusId": 254458762},
      "corpusId": 254458762, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/13df7c2387430bcf32a23a7de57aa9a28ab12661",
      "title": "Research on Kubeflow Distributed Machine Learning", "abstract": "As
      the accuracy of machine learning improves, the depth of the model will become
      deeper and the amount of input data will become larger and larger, and calculation
      will be too large to complete with one computer. Also, multiple computers are
      required for gaining more speed. To achieve distributed machine learning, Kubeflow
      and Kubernetes can be better managed through a graphical interface. This research
      used a cluster and the Docker virtual containers, With Jupyter Notebook to do
      distributed training with TensorFlow, this study compare the impact of the difference
      in the computing speeds of the devices on the overall computing time while maintaining
      the same accuracy and analyze what speed can be achieved with different devices
      working together.", "venue": "2022 IET International Conference on Engineering
      Technologies and Applications (IET-ICETA)", "year": 2022, "referenceCount":
      7, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["Conference"],
      "publicationDate": "2022-10-14", "journal": {"name": "2022 IET International
      Conference on Engineering Technologies and Applications (IET-ICETA)", "pages":
      "1-2"}, "citationStyles": {"bibtex": "@Conference{Wong2022ResearchOK,\n author
      = {Winggun Wong and Wei-Chin Lin and Yu-Bin Chen},\n booktitle = {2022 IET International
      Conference on Engineering Technologies and Applications (IET-ICETA)},\n journal
      = {2022 IET International Conference on Engineering Technologies and Applications
      (IET-ICETA)},\n pages = {1-2},\n title = {Research on Kubeflow Distributed Machine
      Learning},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2093343174", "name":
      "Winggun Wong"}, {"authorId": "143755862", "name": "Wei-Chin Lin"}, {"authorId":
      "2195295785", "name": "Yu-Bin Chen"}]}, {"paperId": "13e867a37fa03143e343c05ec756779b492f97f8",
      "externalIds": {"ArXiv": "2112.10127", "DBLP": "journals/corr/abs-2112-10127",
      "DOI": "10.1145/3492323.3495588", "CorpusId": 245334917}, "corpusId": 245334917,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/13e867a37fa03143e343c05ec756779b492f97f8",
      "title": "Proactive autoscaling for edge computing systems with kubernetes",
      "abstract": "With the emergence of the Internet of Things and 5G technologies,
      the edge computing paradigm is playing increasingly important roles with better
      availability, latency-control and performance. However, existing autoscaling
      tools for edge computing applications do not utilize heterogeneous resources
      of edge systems efficiently, leaving scope for performance improvement. In this
      work, we propose a Proactive Pod Autoscaler (PPA) for edge computing applications
      on Kubernetes. The proposed PPA is able to forecast workloads in advance with
      multiple user-defined/customized metrics and to scale edge computing applications
      up and down correspondingly. The PPA is optimized and evaluated on an example
      CPU-intensive edge computing application further. It can be concluded that the
      proposed PPA outperforms the default pod autoscaler of Kubernetes on both efficiency
      of resource utilization and application performance. The article also highlights
      future possible improvements on the proposed PPA.", "venue": "UCC Companion",
      "year": 2021, "referenceCount": 28, "citationCount": 9, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3492323.3495588",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2021-12-06",
      "journal": {"name": "Proceedings of the 14th IEEE/ACM International Conference
      on Utility and Cloud Computing Companion"}, "citationStyles": {"bibtex": "@Article{Ju2021ProactiveAF,\n
      author = {Li Ju and Prabhmanmeet Singh and S. Toor},\n booktitle = {UCC Companion},\n
      journal = {Proceedings of the 14th IEEE/ACM International Conference on Utility
      and Cloud Computing Companion},\n title = {Proactive autoscaling for edge computing
      systems with kubernetes},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2170078394",
      "name": "Li Ju"}, {"authorId": "2157403218", "name": "Prabhmanmeet Singh"},
      {"authorId": "3280633", "name": "S. Toor"}]}, {"paperId": "140442d7c978f6e6117920a97c2106968071f66f",
      "externalIds": {"DBLP": "conf/iscc/BedhiefKABN23", "DOI": "10.1109/ISCC58397.2023.10218160",
      "CorpusId": 261313428}, "corpusId": 261313428, "publicationVenue": {"id": "159aed30-148b-4b50-99a4-372b0af958d9",
      "name": "International Symposium on Computers and Communications", "type": "conference",
      "alternate_names": ["ISCC", "Int Symp Comput Commun"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1000156/all-proceedings"},
      "url": "https://www.semanticscholar.org/paper/140442d7c978f6e6117920a97c2106968071f66f",
      "title": "Auto-Scalable Software Defined Networking Control Plane for Internet
      of Things", "abstract": "The Internet of Things (IoT) connects billions of heterogenous
      things via the Internet. Therefore, the IoT network requires many network control
      methods for dynamic and efficient management. The Software Defined Networking
      (SDN) paradigm decouples the control plane from the data plane enabling programmability
      and centralized control and management of the network. Thus, it provides efficient
      and reliable IoT network management. However, the dynamicity, variability, and
      scalability of the IoT network topology are still a challenge despite the proposal
      of the distributed SDN controller as a solution for scalability. More precisely,
      the distributed controller reveals the distributed states management problem
      and it is ineffective in the automatization of the highly dynamic and variable
      IoT network. In this paper, we propose an auto-scalable distributed SDN control
      plane to manage and control the IoT network. The proposed distributed controller
      is deployed using Kubernetes. The test results validate the feasibility of our
      new approach.", "venue": "International Symposium on Computers and Communications",
      "year": 2023, "referenceCount": 12, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-09", "journal":
      {"name": "2023 IEEE Symposium on Computers and Communications (ISCC)", "pages":
      "868-871"}, "citationStyles": {"bibtex": "@Article{Bedhief2023AutoScalableSD,\n
      author = {Intidhar Bedhief and Meriem Kassar and T. Aguili and Rania Boughanmi
      and Oumaima Nijaoui},\n booktitle = {International Symposium on Computers and
      Communications},\n journal = {2023 IEEE Symposium on Computers and Communications
      (ISCC)},\n pages = {868-871},\n title = {Auto-Scalable Software Defined Networking
      Control Plane for Internet of Things},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "9730965", "name": "Intidhar Bedhief"}, {"authorId": "3265520", "name": "Meriem
      Kassar"}, {"authorId": "2744132", "name": "T. Aguili"}, {"authorId": "2235610917",
      "name": "Rania Boughanmi"}, {"authorId": "2235605594", "name": "Oumaima Nijaoui"}]},
      {"paperId": "140c6d6c51ca85e0b09708dc7b61dc626337d421", "externalIds": {"MAG":
      "3034058276", "DOI": "10.1088/1755-1315/502/1/012003", "CorpusId": 225915455},
      "corpusId": 225915455, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/140c6d6c51ca85e0b09708dc7b61dc626337d421",
      "title": "Research on Integrated Deployment Method of Digital Earth Thematic
      Application Model", "abstract": "Nowadays, the digital earth not only relates
      to the technologies of surveying and mapping geography, but also includes the
      analysis and cross-application of various scientific data related to geographic
      information. It requires a computing environment and management for the corresponding
      thematic application models which supports the online analysis on the digital
      earth. So we proposed an integrated deployment method for digital earth thematic
      application models based on container cloud, which provides a flexible and scalable
      information integration and analysis architecture for digital earth. Firstly,
      a Docker image building module is designed to facilitate the user to quickly
      build the application model into a image. Then the Docker technology is used
      to implement the containerization of the application model to provide a stable
      running environment for the application model. Finally, the Kubernetes is used
      to dynamically manage the cluster resources to realize rapid expansion of computing
      resources. In addition, the HDFS is deployed, and the image files and various
      scientific data respectively store with Hbase and Apache file systems. It can
      ensure the read and write speed of the application model and the related data
      and log files. It also used zabbix framework to manage the monitoring index
      of the container cloud cluster to ensure the execution effect of the application
      model. Through the tests of typical application model, it is verified that the
      method can integrated deploy and apply the cross-domain, hetero-architecture,
      multi-version and multi-class application models on the digital earth.", "venue":
      "IOP Conference Series: Earth and Environment", "year": 2020, "referenceCount":
      7, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Physics"], "s2FieldsOfStudy": [{"category":
      "Physics", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference", "Review"], "publicationDate": "2020-05-01",
      "journal": {"name": "IOP Conference Series: Earth and Environmental Science",
      "volume": "502"}, "citationStyles": {"bibtex": "@Conference{Dan-pu2020ResearchOI,\n
      author = {Zhao Dan-pu and Tai Xianqing and Mao Zhijie},\n booktitle = {IOP Conference
      Series: Earth and Environment},\n journal = {IOP Conference Series: Earth and
      Environmental Science},\n title = {Research on Integrated Deployment Method
      of Digital Earth Thematic Application Model},\n volume = {502},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2096573090", "name": "Zhao Dan-pu"}, {"authorId":
      "52485988", "name": "Tai Xianqing"}, {"authorId": "2095655465", "name": "Mao
      Zhijie"}]}, {"paperId": "141f4828fd36991ee830201a4f39fa202a6b59e2", "externalIds":
      {"DBLP": "conf/xsede/RodenbeckU23", "DOI": "10.1145/3569951.3604397", "CorpusId":
      261661536}, "corpusId": 261661536, "publicationVenue": {"id": "b85446b1-9eb7-4d6d-bfde-e2b0c6b2cfb6",
      "name": "Practice and Experience in Advanced Research Computing", "type": "conference",
      "alternate_names": ["PEARC", "Pract Exp Adv Res Comput"], "url": "https://www.pearc.org/"},
      "url": "https://www.semanticscholar.org/paper/141f4828fd36991ee830201a4f39fa202a6b59e2",
      "title": "TicketHub: Enabling Actionable Analysis of Support Requests With NLP",
      "abstract": "This paper presents TicketHub, an application that uses modern
      Natural Language Processing (NLP) techniques to provide a dynamic, temporal,
      and holistic view of High-Performance Computing (HPC) support requests (tickets).
      While the project was originally developed to derive insights into tickets submitted
      to Purdue''s Rosen Center for Advanced Computing (RCAC), the architecture was
      designed to easily integrate with additional ticket sources and platforms. This
      project extends, and automates, previous ticket analysis efforts by utilizing
      modern semantic and unsupervised NLP techniques to better understand the context
      of messages, while remaining robust with respect to shifting ticket topics over
      time. In addition to general statistics and metrics, capabilities include reindexing
      ticket data to provide a semantic search feature and temporally clustering ticket
      data to understand message topics over time. The application also includes an
      ML-informed pre-processing pipeline to improve downstream accuracy. All these
      capabilities have been packaged into a web application with automatic data ingestion
      and interactive metrics. The application has been containerized and deployed
      on Purdue''s composable cluster, Geddes, using Kubernetes. Overall, the application
      seeks to be an all-in-one resource for analyzing ticket content and trends,
      and initial analyses have demonstrated the utility of this resource to aid future
      user support work by identifying common issues experienced by users, finding
      opportunities for targeted training sessions, and helping staff find previous
      resolutions to similar issues to increase the efficiency of ticket responses.",
      "venue": "Practice and Experience in Advanced Research Computing", "year": 2023,
      "referenceCount": 24, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3569951.3604397",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book"], "publicationDate": "2023-07-23", "journal": {"name": "Practice and
      Experience in Advanced Research Computing"}, "citationStyles": {"bibtex": "@Article{Rodenbeck2023TicketHubEA,\n
      author = {Sarah Rodenbeck and Yoon Suk Uhr},\n booktitle = {Practice and Experience
      in Advanced Research Computing},\n journal = {Practice and Experience in Advanced
      Research Computing},\n title = {TicketHub: Enabling Actionable Analysis of Support
      Requests With NLP},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2238634684",
      "name": "Sarah Rodenbeck"}, {"authorId": "2238631541", "name": "Yoon Suk Uhr"}]},
      {"paperId": "14353c56e5a55a919fcad86b22ec0dc357171dbb", "externalIds": {"MAG":
      "2782910051", "DBLP": "conf/globecom/ChangYYLJ17", "DOI": "10.1109/GLOCOM.2017.8254046",
      "CorpusId": 20040104}, "corpusId": 20040104, "publicationVenue": {"id": "b189dec0-41d0-4cea-a906-7c5186895904",
      "name": "Global Communications Conference", "type": "conference", "alternate_names":
      ["GLOBECOM", "Glob Commun Conf"], "url": "http://www.ieee-globecom.org/"}, "url":
      "https://www.semanticscholar.org/paper/14353c56e5a55a919fcad86b22ec0dc357171dbb",
      "title": "A Kubernetes-Based Monitoring Platform for Dynamic Cloud Resource
      Provisioning", "abstract": "Recently, more and more network operators have deployed
      cloud environment to implement network operations centers that monitor the status
      of their large-scale mobile or wireline networks. Typically, the cloud environment
      adopts container-based virtualization that uses Docker for container packaging
      with Kubernetes for multihost Docker container management. In such a container-based
      environment, it is important that the Kubernetes can dynamically monitor the
      resource requirements and/or usage of the running applications, and then adjust
      the resource provisioned to the managed containers accordingly. Currently, Kubernetes
      provides a naive dynamic resource-provisioning mechanism which only considers
      CPU utilization and thus is not effective. This paper aims at developing a generic
      platform to facilitate dynamic resource-provisioning based on Kubernetes. Our
      platform contains the following three features. First, our platform includes
      a comprehensive monitoring mechanism that integrates and provides the relatively
      complete system resource utilization and application QoS metrics to the resource-provisioning
      algorithm to make the better provisioning strategy. Second, our platform modularizes
      the operation of dynamic resource- provisioning operation so that the users
      can easily deploy a newly designed algorithm to replace an existing one in our
      platform. Third, the dynamic resource-provisioning operation in our platform
      is implemented as a control loop which can consequently be applied to all the
      running application following a user-defined time interval without other manual
      configuration.", "venue": "Global Communications Conference", "year": 2017,
      "referenceCount": 1, "citationCount": 67, "influentialCitationCount": 3, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2017-12-01",
      "journal": {"name": "GLOBECOM 2017 - 2017 IEEE Global Communications Conference",
      "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Chang2017AKM,\n author
      = {Chia-Chen Chang and Shun-Ren Yang and En-Hau Yeh and P. Lin and Jeu-Yih Jeng},\n
      booktitle = {Global Communications Conference},\n journal = {GLOBECOM 2017 -
      2017 IEEE Global Communications Conference},\n pages = {1-6},\n title = {A Kubernetes-Based
      Monitoring Platform for Dynamic Cloud Resource Provisioning},\n year = {2017}\n}\n"},
      "authors": [{"authorId": "2109694010", "name": "Chia-Chen Chang"}, {"authorId":
      "144138861", "name": "Shun-Ren Yang"}, {"authorId": "3458436", "name": "En-Hau
      Yeh"}, {"authorId": "2530493", "name": "P. Lin"}, {"authorId": "39174231", "name":
      "Jeu-Yih Jeng"}]}, {"paperId": "1450288a72d3767e0b9502976b9622cb50dcef70", "externalIds":
      {"CorpusId": 221793328}, "corpusId": 221793328, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/1450288a72d3767e0b9502976b9622cb50dcef70",
      "title": "Soil classification based on Sentinel-2 Products using HorusApp application",
      "abstract": "Soil classification maps (i.e. pedological maps) describe soil
      characteristics based on observable features in the field such as color or texture,
      and on the distribution of the different horizons (i.e. layers) within the soil.
      Such maps are the result of a soil survey consisting in measuring soil characteristics
      in a very limited number of geographical locations and using them to classify
      soil in that particular area. HorusApp supports the development of pedological
      maps by combining field studies and measurements with Sentinel-2 data. HorusApp
      integrates ESA\u2019s SNAP software tool used to process remotely the sensing
      data. Soil classification can be performed at different levels (class, type
      and subtype) based on machine learning techniques. HorusApp consists of several
      modules: Measurement Points Editor, Soil Classification System, Map Generator
      and Map Evaluator. Measurement Points Editor allows the editing of the set of
      measurement points used for calibration of the Soil Classification System. The
      user specifies a point by selecting a position on the map and a set of attributes
      such as latitude/longitude, soil class, soil type, soil subtype is automatically
      computed. Soil Classification System performs soil classification using satellite
      data extracted from the measurement points based on machine learning techniques.
      Map Generator infers the soil type for each location in the map. Map Evaluator
      evaluates the quality of the generated pedological map. The evaluation is done
      according to a metric that compares two pedological maps. HorusApp uses the
      HORUS platform which enables specialists to scale the processing over a cloud
      infrastructure running Kubernetes and Docker containers. The development of
      the HORUS platform and application have been supported and funded by the Romanian
      Space Agency (ROSA). Several case studies were conducted in the Transylvanian
      plain using Sentinel-2 images from the ESA repository and existing pedological
      maps provided by University of Agricultural Sciences and Veterinary Medicine
      ClujNapoca (USAMV).", "venue": "", "year": 2019, "referenceCount": 1, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Environmental Science",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["Review"], "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Inproceedings{B\u00e2cu2019SoilCB,\n author = {V. B\u00e2cu and
      T. Stefanut and C. Nandra and T. Rusu},\n title = {Soil classification based
      on Sentinel-2 Products using HorusApp application},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "1709837", "name": "V. B\u00e2cu"}, {"authorId": "1724270",
      "name": "T. Stefanut"}, {"authorId": "47682693", "name": "C. Nandra"}, {"authorId":
      "6058296", "name": "T. Rusu"}]}, {"paperId": "14608fad5078d4f3e458857008288cb48cf1b3ea",
      "externalIds": {"DOI": "10.1007/978-1-4842-5611-4", "CorpusId": 221744530},
      "corpusId": 221744530, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/14608fad5078d4f3e458857008288cb48cf1b3ea",
      "title": "Advanced Platform Development with Kubernetes: Enabling Data Management,
      the Internet of Things, Blockchain, and Machine Learning", "abstract": null,
      "venue": "", "year": 2020, "referenceCount": 13, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Book"], "publicationDate":
      null, "journal": {"name": "Advanced Platform Development with Kubernetes"},
      "citationStyles": {"bibtex": "@Book{Johnston2020AdvancedPD,\n author = {Craig
      Johnston},\n journal = {Advanced Platform Development with Kubernetes},\n title
      = {Advanced Platform Development with Kubernetes: Enabling Data Management,
      the Internet of Things, Blockchain, and Machine Learning},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2067498591", "name": "Craig Johnston"}]}, {"paperId":
      "146d185c1f2094d67b7fd367516516aeccea7619", "externalIds": {"DBLP": "journals/access/PhucPK22",
      "DOI": "10.1109/ACCESS.2022.3150867", "CorpusId": 246771065}, "corpusId": 246771065,
      "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26", "name": "IEEE
      Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/146d185c1f2094d67b7fd367516516aeccea7619",
      "title": "Traffic-Aware Horizontal Pod Autoscaler in Kubernetes-Based Edge Computing
      Infrastructure", "abstract": "Container-based Internet of Things (IoT) applications
      in an edge computing environment require autoscaling to dynamically adapt to
      fluctuations in IoT device requests. Although Kubernetes\u2019 horizontal pod
      autoscaler provides the resource autoscaling feature by monitoring the resource
      status of nodes and then making pod adjustments if necessary, it evenly allocates
      pods to worker nodes without considering the imbalance of resource demand between
      nodes in an edge computing environment. This paper proposes the traffic-aware
      horizontal pod autoscaler (THPA), which operates on top of Kubernetes to enable
      real-time traffic-aware resource autoscaling for IoT applications in an edge
      computing environment. THPA performs upscaling and downscaling actions based
      on network traffic information from nodes to improve the quality of IoT services
      in the edge computing infrastructure. Experimental results show that Kubernetes
      with THPA improves the average response time and throughput of IoT applications
      by approximately 150% compared to Kubernetes with the horizontal pod autoscaler.
      This indicates that it is important to provide proper resource scaling according
      to the network traffic distribution to maximize IoT applications performance
      in an edge computing environment.", "venue": "IEEE Access", "year": 2022, "referenceCount":
      32, "citationCount": 21, "influentialCitationCount": 1, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/6287639/9668973/09709810.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "IEEE Access",
      "pages": "18966-18977", "volume": "10"}, "citationStyles": {"bibtex": "@Article{Phuc2022TrafficAwareHP,\n
      author = {Le Hoang Phuc and Linh-An Phan and Taehong Kim},\n booktitle = {IEEE
      Access},\n journal = {IEEE Access},\n pages = {18966-18977},\n title = {Traffic-Aware
      Horizontal Pod Autoscaler in Kubernetes-Based Edge Computing Infrastructure},\n
      volume = {10},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2154156888",
      "name": "Le Hoang Phuc"}, {"authorId": "151095859", "name": "Linh-An Phan"},
      {"authorId": "2338970", "name": "Taehong Kim"}]}, {"paperId": "1492ddb4cd1110f82ee9cf10b0439f39f1f0f573",
      "externalIds": {"MAG": "3046486047", "DBLP": "conf/lanman/QiKR20", "DOI": "10.1109/LANMAN49260.2020.9153266",
      "CorpusId": 220938953}, "corpusId": 220938953, "publicationVenue": {"id": "4539abfb-20e2-438c-a6d0-61dd915da9df",
      "name": "IEEE Workshop on Local and Metropolitan Area Networks", "type": "conference",
      "alternate_names": ["Workshop Local Metrop Area Netw", "Workshop on Local and
      Metropolitan Area Networks", "IEEE Workshop Local  Metrop Area Netw", "LANMAN",
      "IEEE Workshop on Local & Metropolitan Area Networks", "IEEE Workshop Local
      Metrop Area Netw"], "issn": "1944-0375", "alternate_issns": ["1944-0367"], "url":
      "https://ieeexplore.ieee.org/Xplore/home.jsp", "alternate_urls": ["http://www.ieee-lanman.org/"]},
      "url": "https://www.semanticscholar.org/paper/1492ddb4cd1110f82ee9cf10b0439f39f1f0f573",
      "title": "Understanding Container Network Interface Plugins: Design Considerations
      and Performance", "abstract": "Kubernetes, an open-source container orchestration
      platform, has been widely adopted by cloud service providers (CSPs) for its
      advantages in simplifying container deployment, scalability and scheduling.
      Networking is one of the central components of Kubernetes, providing connectivity
      between different pods (group of containers) both within the same host and across
      hosts. To bootstrap Kubernetes networking, the Container Network Interface (CNI)
      provides a unified interface for the interaction between container runtimes.
      There are several CNI implementations, available as open-source \u2018CNI plugins\u2019.
      While they differ in functionality and performance, it is a challenge for a
      cloud provider to differentiate and choose the appropriate plugin for their
      environment. In this paper, we compare the various open source CNI plugins available
      from the community, qualitatively and through detailed quantitative measurements.
      With our experimental evaluation, we analyze the overheads and bottlenecks for
      each CNI plugin, as a result of the network model it implements, interaction
      with the host network protocol stack and the network policies implemented in
      iptables rules. The choice of the CNI plugin may also be based on whether intra-host
      or inter-host communication dominates.", "venue": "IEEE Workshop on Local and
      Metropolitan Area Networks", "year": 2020, "referenceCount": 13, "citationCount":
      8, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2020-07-01", "journal": {"name": "2020
      IEEE International Symposium on Local and Metropolitan Area Networks (LANMAN",
      "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Qi2020UnderstandingCN,\n
      author = {Shixiong Qi and Sameer G. Kulkarni and K. Ramakrishnan},\n booktitle
      = {IEEE Workshop on Local and Metropolitan Area Networks},\n journal = {2020
      IEEE International Symposium on Local and Metropolitan Area Networks (LANMAN},\n
      pages = {1-6},\n title = {Understanding Container Network Interface Plugins:
      Design Considerations and Performance},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "1853586631", "name": "Shixiong Qi"}, {"authorId": "153673738", "name": "Sameer
      G. Kulkarni"}, {"authorId": "145922660", "name": "K. Ramakrishnan"}]}, {"paperId":
      "14c479691783802b76bf9ed8f42aef53b6f6afb7", "externalIds": {"MAG": "2766473414",
      "CorpusId": 196043912}, "corpusId": 196043912, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/14c479691783802b76bf9ed8f42aef53b6f6afb7",
      "title": "Na\u010drtovanje skalabilnih storitev za platforme v oblaku", "abstract":
      "V magistrskem delu so predstavljeni vzorci, tehnike in principi nacrtovanja
      skalabilnih informacijskih storitev za platforme v oblaku. Obravnavani so trije
      trenutno vodilni ponudniki infrastrukture in platform v oblaku: Amazon Web Services,
      Microsoft Azure in Google Cloud Platform. Storitev, ki je v omenjene oblake
      dostavljena v vsebniku platforme Docker, je implementirana v ogrodju Spring
      Boot, predstavljeni pa so se vzpostavitev podatkovnega vira, konfiguracija storitve
      Amazon EC2 Container Service v Amazonovem oblaku ter vzpostavitev platforme
      Kubernetes v Microsoftovem in Googlovem oblaku. Izvedeni obremenitveni test
      prikazuje delovanje mehanizma samodejnega skaliranja, ki s tehniko horizontalnega
      skaliranja upravlja zmogljivost v oblak dostavljene storitve.", "venue": "",
      "year": 2017, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Political
      Science"], "s2FieldsOfStudy": [{"category": "Political Science", "source": "external"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Jako\u0161a2017Na\u010drtovanjeSS,\n
      author = {Denis Jako\u0161a},\n title = {Na\u010drtovanje skalabilnih storitev
      za platforme v oblaku},\n year = {2017}\n}\n"}, "authors": [{"authorId": "3207977",
      "name": "Denis Jako\u0161a"}]}, {"paperId": "14d639104c6cb68bc5772b3aa77b23fcda84e352",
      "externalIds": {"DBLP": "conf/hipeac/FerikoglouMTXS21", "DOI": "10.4230/OASIcs.PARMA-DITAM.2021.4",
      "CorpusId": 232106408}, "corpusId": 232106408, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/14d639104c6cb68bc5772b3aa77b23fcda84e352",
      "title": "Resource Aware GPU Scheduling in Kubernetes Infrastructure", "abstract":
      "Nowadays, there is an ever-increasing number of artificial intelligence inference
      workloads pushed and executed on the cloud. To effectively serve and manage
      the computational demands, data center operators have provisioned their infrastructures
      with accelerators. Specifically for GPUs, support for efficient management lacks,
      as state-of-the-art schedulers and orchestrators, threat GPUs only as typical
      compute resources ignoring their unique characteristics and application properties.
      This phenomenon combined with the GPU over-provisioning problem leads to severe
      resource under-utilization. Even though prior work has addressed this problem
      by colocating applications into a single accelerator device, its resource agnostic
      nature does not manage to face the resource under-utilization and quality of
      service violations especially for latency critical applications. In this paper,
      we design a resource aware GPU scheduling framework, able to efficiently colocate
      applications on the same GPU accelerator card. We integrate our solution with
      Kubernetes, one of the most widely used cloud orchestration frameworks. We show
      that our scheduler can achieve 58.8% lower end-to-end job execution time 99%-ile,
      while delivering 52.5% higher GPU memory usage, 105.9% higher GPU utilization
      percentage on average and 44.4% lower energy consumption on average, compared
      to the state-of-the-art schedulers, for a variety of ML representative workloads.
      2012 ACM Subject Classification Computing methodologies; Computer systems organization
      \u2192 Cloud computing; Computer systems organization \u2192 Heterogeneous (hybrid)
      systems; Hardware \u2192 Emerging architectures", "venue": "PARMA-DITAM@HiPEAC",
      "year": 2021, "referenceCount": 32, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"pages": "4:1-4:12"}, "citationStyles": {"bibtex": "@Article{Ferikoglou2021ResourceAG,\n
      author = {Aggelos Ferikoglou and Dimosthenis Masouros and Achilleas Tzenetopoulos
      and S. Xydis and D. Soudris},\n booktitle = {PARMA-DITAM@HiPEAC},\n pages =
      {4:1-4:12},\n title = {Resource Aware GPU Scheduling in Kubernetes Infrastructure},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2051874079", "name": "Aggelos
      Ferikoglou"}, {"authorId": "21075634", "name": "Dimosthenis Masouros"}, {"authorId":
      "2003073966", "name": "Achilleas Tzenetopoulos"}, {"authorId": "1702282", "name":
      "S. Xydis"}, {"authorId": "144189794", "name": "D. Soudris"}]}, {"paperId":
      "14dc9b6dae94b847a99fd1ad47b808fa3ca76ccd", "externalIds": {"MAG": "3016048417",
      "DOI": "10.24138/jcomss.v16i1.1027", "CorpusId": 216119260}, "corpusId": 216119260,
      "publicationVenue": {"id": "9802250b-ea09-494d-8cd9-c67b11cbd6c4", "name": "Journal
      of Communications Software and Systems", "type": "journal", "alternate_names":
      ["J Commun Softw Syst", "J commun softw syst", "Journal of communications software
      and systems"], "issn": "1845-6421", "url": "http://jcomss.fesb.unist.hr/"},
      "url": "https://www.semanticscholar.org/paper/14dc9b6dae94b847a99fd1ad47b808fa3ca76ccd",
      "title": "Context-Aware Kubernetes Scheduler for Edge-native Applications on
      5G", "abstract": "This paper is an extension of work originally presented in
      SoftCOM 2019 [1]. The novelty of this work reside in its focused improvement
      of our scheduling algorithm towards its usage on a real 5G infrastructure. Industrial
      IoT applications are often designed to run in a distributed way on the devices
      and controller computers with strict service requirements for the nodes and
      the links between them. 5G, especially in concomitance with Edge Computing,
      will provide the desired level of connectivity for these setups and it will
      permit to host application run-time components in edge clouds. However, allocation
      of the edge cloud resources for Industrial IoT (IIoT) applications, is still
      commonly solved by rudimentary scheduling techniques (i.e. simple strategies
      based on CPU usage and device readiness, employing very few dynamic information).
      Orchestrators inherited from the cloud computing, like Kubernetes, are not satisfying
      to the requirements of the aforementioned applications and are not optimized
      for the diversity of devices which are often also limited in capacity. This
      design is especially slow in reacting to the environmental changes. In such
      circumstances, in order to provide a proper solution using these tools, we propose
      to take the physical, operational and network parameters (thus the full context
      of the IIoT application) into consideration, along with the software states
      and orchestrate the applications dynamically.", "venue": "Journal of Communications
      Software and Systems", "year": 2020, "referenceCount": 48, "citationCount":
      15, "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://jcoms.fesb.unist.hr/pdfs/v16n1_1027_reale.pdf", "status": "GOLD"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Environmental Science", "source": "s2-fos-model"}], "publicationTypes": null,
      "publicationDate": "2020-03-30", "journal": {"name": "Journal of communications
      software and systems"}, "citationStyles": {"bibtex": "@Article{Ogbuachi2020ContextAwareKS,\n
      author = {M. Ogbuachi and A. Reale and P\u00e9ter Suskovics and Benedek Kov\u00e1cs},\n
      booktitle = {Journal of Communications Software and Systems},\n journal = {Journal
      of communications software and systems},\n title = {Context-Aware Kubernetes
      Scheduler for Edge-native Applications on 5G},\n year = {2020}\n}\n"}, "authors":
      [{"authorId": "1431725673", "name": "M. Ogbuachi"}, {"authorId": "4254425",
      "name": "A. Reale"}, {"authorId": "1423712275", "name": "P\u00e9ter Suskovics"},
      {"authorId": "19266472", "name": "Benedek Kov\u00e1cs"}]}, {"paperId": "14e8d551f7a5761987a2b8760936e610b94b348b",
      "externalIds": {"DBLP": "conf/staf/AhmadvandPBE18", "MAG": "2903418746", "DOI":
      "10.1007/978-3-030-04771-9_43", "CorpusId": 54453311}, "corpusId": 54453311,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/14e8d551f7a5761987a2b8760936e610b94b348b",
      "title": "Integrity Protection Against Insiders in Microservice-Based Infrastructures:
      From Threats to a Security Framework", "abstract": null, "venue": "STAF Workshops",
      "year": 2018, "referenceCount": 27, "citationCount": 9, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Law", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2018-06-25", "journal": {"pages": "573-588"},
      "citationStyles": {"bibtex": "@Article{Ahmadvand2018IntegrityPA,\n author =
      {Mohsen Ahmadvand and A. Pretschner and K. Ball and D. Eyring},\n booktitle
      = {STAF Workshops},\n pages = {573-588},\n title = {Integrity Protection Against
      Insiders in Microservice-Based Infrastructures: From Threats to a Security Framework},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "1874491", "name": "Mohsen Ahmadvand"},
      {"authorId": "144658639", "name": "A. Pretschner"}, {"authorId": "143806974",
      "name": "K. Ball"}, {"authorId": "71903404", "name": "D. Eyring"}]}, {"paperId":
      "14fac91372ef743a5e62129018e95dea61a676c1", "externalIds": {"MAG": "2908371865",
      "DBLP": "conf/soca/SebastioGGM18", "DOI": "10.1109/SOCA.2018.00011", "CorpusId":
      57377841}, "corpusId": 57377841, "publicationVenue": {"id": "70ad7990-ecc7-4d62-9a54-b1fac46b4570",
      "name": "IEEE International Conference on Service-Oriented Computing and Applications",
      "type": "conference", "alternate_names": ["SOCA", "IEEE Int Conf Serv Comput
      Appl"]}, "url": "https://www.semanticscholar.org/paper/14fac91372ef743a5e62129018e95dea61a676c1",
      "title": "ContAv: A Tool to Assess Availability of Container-Based Systems",
      "abstract": "The momentum gained by the microservice-oriented architecture is
      fostering the diffusion of operating system containers. Existing studies mainly
      focus on the performance of containerized services to demonstrate their low
      resource footprints. However, availability analysis of densely deployed container-based
      solutions is less visited due to difficulties in collecting failure artifacts.
      This is especially true when the containers are combined with virtual machines
      to achieve a higher security level. Inspired by Google''s Kubernetes architecture,
      in this paper, we propose ContAv, an open-source distributed statistical model
      checker to assess availability of systems built on containers and virtual machines.
      The availability analysis is based on novel state-space and non-state-space
      models designed by us and that are automatically built and customized by the
      tool. By means of a graphical interface, ContAv allows domain experts to easily
      parameterize the system, to compare different configurations and to perform
      sensitivity analysis. Moreover, through a simple Java API, system architects
      can design and characterize the system behavior with a failure response and
      migration service.", "venue": "IEEE International Conference on Service-Oriented
      Computing and Applications", "year": 2018, "referenceCount": 30, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://hal.inria.fr/hal-01954455/file/ContAv_soca_180906_submitted.pdf", "status":
      "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2018-11-01",
      "journal": {"name": "2018 IEEE 11th Conference on Service-Oriented Computing
      and Applications (SOCA)", "pages": "25-32"}, "citationStyles": {"bibtex": "@Article{Sebastio2018ContAvAT,\n
      author = {Stefano Sebastio and R. Ghosh and Avantika Gupta and Tridib Mukherjee},\n
      booktitle = {IEEE International Conference on Service-Oriented Computing and
      Applications},\n journal = {2018 IEEE 11th Conference on Service-Oriented Computing
      and Applications (SOCA)},\n pages = {25-32},\n title = {ContAv: A Tool to Assess
      Availability of Container-Based Systems},\n year = {2018}\n}\n"}, "authors":
      [{"authorId": "2291658", "name": "Stefano Sebastio"}, {"authorId": "145634631",
      "name": "R. Ghosh"}, {"authorId": "2110600585", "name": "Avantika Gupta"}, {"authorId":
      "2057462055", "name": "Tridib Mukherjee"}]}, {"paperId": "152b78ba2ee78ad1307549d7b867f035ffb3214e",
      "externalIds": {"PubMedCentral": "8138321", "DBLP": "journals/fdata/SimkoHLLMMRSG21",
      "DOI": "10.3389/fdata.2021.661501", "CorpusId": 233874442, "PubMed": "34027400"},
      "corpusId": 233874442, "publicationVenue": {"id": "165fa1b5-e07f-4b6e-9203-04493f6a7c5c",
      "name": "Frontiers in Big Data", "alternate_names": ["Front Big Data"], "issn":
      "2624-909X", "url": "https://www.frontiersin.org/journals/big-data"}, "url":
      "https://www.semanticscholar.org/paper/152b78ba2ee78ad1307549d7b867f035ffb3214e",
      "title": "Scalable Declarative HEP Analysis Workflows for Containerised Compute
      Clouds", "abstract": "We describe a novel approach for experimental High-Energy
      Physics (HEP) data analyses that is centred around the declarative rather than
      imperative paradigm when describing analysis computational tasks. The analysis
      process can be structured in the form of a Directed Acyclic Graph (DAG), where
      each graph vertex represents a unit of computation with its inputs and outputs,
      and the graph edges describe the interconnection of various computational steps.
      We have developed REANA, a platform for reproducible data analyses, that supports
      several such DAG workflow specifications. The REANA platform parses the analysis
      workflow and dispatches its computational steps to various supported computing
      backends (Kubernetes, HTCondor, Slurm). The focus on declarative rather than
      imperative programming enables researchers to concentrate on the problem domain
      at hand without having to think about implementation details such as scalable
      job orchestration. The declarative programming approach is further exemplified
      by a multi-level job cascading paradigm that was implemented in the Yadage workflow
      specification language. We present two recent LHC particle physics analyses,
      ATLAS searches for dark matter and CMS jet energy correction pipelines, where
      the declarative approach was successfully applied. We argue that the declarative
      approach to data analyses, combined with recent advancements in container technology,
      facilitates the portability of computational data analyses to various compute
      backends, enhancing the reproducibility and the knowledge preservation behind
      particle physics data analyses.", "venue": "Frontiers in Big Data", "year":
      2021, "referenceCount": 37, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.frontiersin.org/articles/10.3389/fdata.2021.661501/pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Medicine", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Medicine", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Physics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2021-05-07", "journal": {"name": "Frontiers in Big Data",
      "volume": "4"}, "citationStyles": {"bibtex": "@Article{Simko2021ScalableDH,\n
      author = {T. Simko and L. Heinrich and C. Lange and A. Lintuluoto and D. MacDonell
      and A. Mecionis and D. Rodr\u00edguez and Parth Shandilya and Marco Vidal Garc\u00eda},\n
      booktitle = {Frontiers in Big Data},\n journal = {Frontiers in Big Data},\n
      title = {Scalable Declarative HEP Analysis Workflows for Containerised Compute
      Clouds},\n volume = {4},\n year = {2021}\n}\n"}, "authors": [{"authorId": "71856618",
      "name": "T. Simko"}, {"authorId": "24060472", "name": "L. Heinrich"}, {"authorId":
      "48042603", "name": "C. Lange"}, {"authorId": "2260264539", "name": "A. Lintuluoto"},
      {"authorId": "16873818", "name": "D. MacDonell"}, {"authorId": "81240181", "name":
      "A. Mecionis"}, {"authorId": "2064654476", "name": "D. Rodr\u00edguez"}, {"authorId":
      "2088916186", "name": "Parth Shandilya"}, {"authorId": "2110636784", "name":
      "Marco Vidal Garc\u00eda"}]}, {"paperId": "1549d46a739885bb6f0b9563a7cbbfbe2502cf70",
      "externalIds": {"MAG": "2503397372", "DOI": "10.1007/978-1-4842-1907-2_13",
      "CorpusId": 63627556}, "corpusId": 63627556, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/1549d46a739885bb6f0b9563a7cbbfbe2502cf70",
      "title": "Creating a Multi-Container Pod", "abstract": null, "venue": "", "year":
      2016, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "pages": "375-397", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Vohra2016CreatingAM,\n author = {Deepak Vohra},\n
      pages = {375-397},\n title = {Creating a Multi-Container Pod},\n year = {2016}\n}\n"},
      "authors": [{"authorId": "3026624", "name": "Deepak Vohra"}]}, {"paperId": "154b72b89b5289cb99b383e9200217a84f03e50b",
      "externalIds": {"DBLP": "conf/globecom/GringsSCCPB22", "DOI": "10.1109/GLOBECOM48099.2022.10000663",
      "CorpusId": 255599102}, "corpusId": 255599102, "publicationVenue": {"id": "b189dec0-41d0-4cea-a906-7c5186895904",
      "name": "Global Communications Conference", "type": "conference", "alternate_names":
      ["GLOBECOM", "Glob Commun Conf"], "url": "http://www.ieee-globecom.org/"}, "url":
      "https://www.semanticscholar.org/paper/154b72b89b5289cb99b383e9200217a84f03e50b",
      "title": "Full dynamic orchestration in 5G core network slicing over a cloud-native
      platform", "abstract": "Technological advances in the fifth-generation (5G)
      mobile networks are based on native cloud computing platforms, and Kubernetes
      (K8S) has emerged as a relevant orchestration system in this context. However,
      these platforms were not designed to support 5G services natively. To illustrate,
      Kubernetes is designed to be agnostic to the services that it orchestrates and
      cannot dynamically reconfigure the 5G core according to existing network resources,
      i.e., it provides a partial dynamic orchestration to perform network slicing.
      This paper proposes a solution integrated with K8S to allow full dynamic orchestration
      of network slicing at runtime, including online adjustments in the 5G core.
      This integration is accomplished through a K8S-integrated controller for the
      control plane. The controller adjusts the 5G core and adapts the virtualized
      infrastructure. The results show a reconfiguration based on full dynamic orchestration
      without interruption of the services provided, reducing by close to 50% the
      full reconfiguration requests number by network slices.", "venue": "Global Communications
      Conference", "year": 2022, "referenceCount": 15, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-12-04", "journal": {"name": "GLOBECOM 2022 - 2022 IEEE
      Global Communications Conference", "pages": "2885-2890"}, "citationStyles":
      {"bibtex": "@Article{Grings2022FullDO,\n author = {Felipe Hauschild Grings and
      Lucas Baleeiro Dominato Silveira and K. Cardoso and S. Correa and L. R. Prade
      and C. Both},\n booktitle = {Global Communications Conference},\n journal =
      {GLOBECOM 2022 - 2022 IEEE Global Communications Conference},\n pages = {2885-2890},\n
      title = {Full dynamic orchestration in 5G core network slicing over a cloud-native
      platform},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2187097063", "name":
      "Felipe Hauschild Grings"}, {"authorId": "2199957186", "name": "Lucas Baleeiro
      Dominato Silveira"}, {"authorId": "3215994", "name": "K. Cardoso"}, {"authorId":
      "143970316", "name": "S. Correa"}, {"authorId": "36290771", "name": "L. R. Prade"},
      {"authorId": "1986311", "name": "C. Both"}]}, {"paperId": "1578834819291ca9297e43ee3f9574eed6551135",
      "externalIds": {"MAG": "3048146353", "DOI": "10.30534/ijeter/2020/124872020",
      "CorpusId": 225473710}, "corpusId": 225473710, "publicationVenue": {"id": "4f14a4a7-3575-44ad-85d6-b7a7d0be4ac3",
      "name": "International Journal of Emerging Trends in Engineering Research",
      "type": "journal", "alternate_names": ["Int J Emerg Trends Eng Res"], "issn":
      "2347-3983", "url": "http://www.warse.org/ijetr.html"}, "url": "https://www.semanticscholar.org/paper/1578834819291ca9297e43ee3f9574eed6551135",
      "title": "Designing and Evaluating Representational State Transfer Architecture
      for School Management Information System", "abstract": "Technology is rapidly
      evolving to became main component in education process. Nowadays, schools are
      relying on Management Information System (MIS) to handle operations. In this
      paper we propose to design SMIS architecture capable of serve multiple schools
      by using Representational State Transfer (REST) as architectural style. Case
      study, REST constraint and Service Oriented Architecture (SOA) design pattern
      is being used to design the architecture. From the design process, multitenant
      architecture is chosen. Kubernetes is chosen as deployment orchestration to
      make architecture scalable. Then we examine and evaluate engineering trade-off
      and risks in architectures design decision by using Architecture Trade-off Analysis
      Method (ATAM). The evaluation is based on scenarios and each scenario related
      to several software quality attributes. At the end, the architecture implementation
      is improved overtime based on the evaluation result.", "venue": "International
      Journal of Emerging Trends in Engineering Research", "year": 2020, "referenceCount":
      29, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://doi.org/10.30534/ijeter/2020/124872020", "status":
      "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Education", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2020-07-25", "journal": {"name":
      "International Journal of Emerging Trends in Engineering Research"}, "citationStyles":
      {"bibtex": "@Article{Kusuma2020DesigningAE,\n author = {David Alfa Sunarna Gede
      Putra Kusuma},\n booktitle = {International Journal of Emerging Trends in Engineering
      Research},\n journal = {International Journal of Emerging Trends in Engineering
      Research},\n title = {Designing and Evaluating Representational State Transfer
      Architecture for School Management Information System},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2169741569", "name": "David Alfa Sunarna Gede Putra
      Kusuma"}]}, {"paperId": "15aca9b6bea263c8f8b16a5986b2759ce62a1cc0", "externalIds":
      {"CorpusId": 262053253}, "corpusId": 262053253, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/15aca9b6bea263c8f8b16a5986b2759ce62a1cc0",
      "title": "Secrets Management in a Multi-Cloud Kubernetes Environment", "abstract":
      null, "venue": "", "year": 2021, "referenceCount": 25, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Inproceedings{Koivunen2021SecretsMI,\n author = {Lauri Koivunen and Tuomas
      M\u00e4kil\u00e4},\n title = {Secrets Management in a Multi-Cloud Kubernetes
      Environment},\n year = {2021}\n}\n"}, "authors": [{"authorId": "7475654", "name":
      "Lauri Koivunen"}, {"authorId": "2423772", "name": "Tuomas M\u00e4kil\u00e4"}]},
      {"paperId": "15c81986d5dfd49aa01e506cea849294b3b49f85", "externalIds": {"MAG":
      "2561921542", "DOI": "10.1007/978-1-4842-2415-1_2", "CorpusId": 64226787}, "corpusId":
      64226787, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/15c81986d5dfd49aa01e506cea849294b3b49f85",
      "title": "Setting Up Tools for Production", "abstract": null, "venue": "", "year":
      2016, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "pages": "21-25", "volume": ""}, "citationStyles": {"bibtex":
      "@Inproceedings{Acu\u00f1a2016SettingUT,\n author = {Pablo Acu\u00f1a},\n pages
      = {21-25},\n title = {Setting Up Tools for Production},\n year = {2016}\n}\n"},
      "authors": [{"authorId": "2073407284", "name": "Pablo Acu\u00f1a"}]}, {"paperId":
      "1650ec257ac4664b8aa9d2b0d73a11aadf459132", "externalIds": {"DBLP": "conf/conext/ParkCLH21",
      "DOI": "10.1145/3485983.3494866", "CorpusId": 244841439}, "corpusId": 244841439,
      "publicationVenue": {"id": "5552b3d9-73b0-435f-8515-a135f23fcbba", "name": "Conference
      on Emerging Network Experiment and Technology", "type": "conference", "alternate_names":
      ["Conf Emerg Netw Exp Technol", "CoNEXT"], "url": "http://www.wikicfp.com/cfp/program?id=555"},
      "url": "https://www.semanticscholar.org/paper/1650ec257ac4664b8aa9d2b0d73a11aadf459132",
      "title": "GRAF: a graph neural network based proactive resource allocation framework
      for SLO-oriented microservices", "abstract": "Microservice is an architectural
      style that has been widely adopted in various latency-sensitive applications.
      Similar to the monolith, autoscaling has attracted the attention of operators
      for managing resource utilization of microservices. However, it is still challenging
      to optimize resources in terms of latency service-level-objective (SLO) without
      human intervention. In this paper, we present GRAF, a graph neural network-based
      proactive resource allocation framework for minimizing total CPU resources while
      satisfying latency SLO. GRAF leverages front-end workload, distributed tracing
      data, and machine learning approaches to (a) observe/estimate impact of traffic
      change (b) find optimal resource combinations (c) make proactive resource allocation.
      Experiments using various open-source benchmarks demonstrate that GRAF successfully
      targets latency SLO while saving up to 19% of total CPU resources compared to
      the fine-tuned autoscaler. Moreover, GRAF handles traffic surge with 36% fewer
      resources while achieving up to 2.6x faster tail latency convergence compared
      to the Kubernetes autoscaler.", "venue": "Conference on Emerging Network Experiment
      and Technology", "year": 2021, "referenceCount": 54, "citationCount": 28, "influentialCitationCount":
      3, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book", "Conference"], "publicationDate": "2021-12-02", "journal":
      {"name": "Proceedings of the 17th International Conference on emerging Networking
      EXperiments and Technologies"}, "citationStyles": {"bibtex": "@Article{Park2021GRAFAG,\n
      author = {Jinwoo Park and Byungkwon Choi and Chunghan Lee and Dongsu Han},\n
      booktitle = {Conference on Emerging Network Experiment and Technology},\n journal
      = {Proceedings of the 17th International Conference on emerging Networking EXperiments
      and Technologies},\n title = {GRAF: a graph neural network based proactive resource
      allocation framework for SLO-oriented microservices},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2109121755", "name": "Jinwoo Park"}, {"authorId":
      "7168033", "name": "Byungkwon Choi"}, {"authorId": "2726254", "name": "Chunghan
      Lee"}, {"authorId": "1729324", "name": "Dongsu Han"}]}, {"paperId": "165ca305606c4500a1f6ecbb3ec9111938897acf",
      "externalIds": {"MAG": "3134179196", "DOI": "10.31782/IJCRR.2021.13507", "CorpusId":
      233267621}, "corpusId": 233267621, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/165ca305606c4500a1f6ecbb3ec9111938897acf",
      "title": "Analysis of Kubernetes for Distributed Healthcare System Development
      using COVID-19 Healthcare App", "abstract": "Introduction: Distributed computing
      is a field of computer science which deals with the study of distributed systems
      A system which has communication and coordination with each of its nodes and
      which interacts with each other to achieve a common target which is to effectively
      compute the computation These capabilities are conducive to implementing a systematic
      and efficient COVID-19 tracking application which can be accessed and worked
      on by numerous entities Objective: To provide information about a client-server
      architecture which is a platform for managing and maintaining container-ized
      workloads and services that forms a base for automation Methods: A Kubernetes
      cluster IS created with a calico pod network along with the main drivers of
      Kubelet, Kubeadm and Kubectl Secure Shell (SSH) protocol is used for secured
      shell and data management and authentication between the client and server Results:
      We have performed and distributed our tasks in such a way to show the developers
      that multiple tasks can be performed at the same time using Kubernetes orchestration
      platform and used to parallelize multiple tasks This increases the efficiency
      of the machine and the performance of the system becomes much faster Conclusion:
      A system which has communication and coordination with each of its nodes and
      which interacts with each other to achieve a common target which is to effectively
      compute the computation One such application which helps in the distribution
      of tasks and helps do the computation is Kubernetes It is based on a client-server
      architecture which is a platform for managing and maintaining containerized
      workloads and services that forms a base for automation \u00a9 IJCRR", "venue":
      "", "year": 2021, "referenceCount": 16, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Medicine",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "International journal of current research and review",
      "pages": "96-102", "volume": "13"}, "citationStyles": {"bibtex": "@Article{Prassanna2021AnalysisOK,\n
      author = {J. Prassanna and S. Mohanty and P. S. Jinturkar and P. Pandey},\n
      journal = {International journal of current research and review},\n pages =
      {96-102},\n title = {Analysis of Kubernetes for Distributed Healthcare System
      Development using COVID-19 Healthcare App},\n volume = {13},\n year = {2021}\n}\n"},
      "authors": [{"authorId": null, "name": "J. Prassanna"}, {"authorId": "2112427429",
      "name": "S. Mohanty"}, {"authorId": null, "name": "P. S. Jinturkar"}, {"authorId":
      "2113935034", "name": "P. Pandey"}]}, {"paperId": "16680c2eb7682b679aa6bbd291d2a79ac511335e",
      "externalIds": {"DBLP": "journals/tvt/SlamnikKrijestoracYYHLM24", "DOI": "10.1109/TVT.2023.3304172",
      "CorpusId": 260825859}, "corpusId": 260825859, "publicationVenue": {"id": "983b0731-eddf-4f05-9c9b-81059a9f9c51",
      "name": "IEEE Transactions on Vehicular Technology", "type": "journal", "alternate_names":
      ["IEEE Trans Veh Technol"], "issn": "0018-9545", "url": "http://ieeexplore.ieee.org/servlet/opac?punumber=25",
      "alternate_urls": ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=25"]},
      "url": "https://www.semanticscholar.org/paper/16680c2eb7682b679aa6bbd291d2a79ac511335e",
      "title": "Edge-Aware Cloud-Native Service for Enhancing Back Situation Awareness
      in 5G-Based Vehicular Systems", "abstract": "In the public safety sector, 5G
      offers immense opportunities for enhancing mission-critical services by provisioning
      virtualized service functions at the network edge, which enables achieving high
      reliability and low-latency. One of these mission-critical services is Back
      Situation Awareness (BSA) that supports Emergency Vehicles (EmVs) by increasing
      awareness about them on the roads. In this article, we introduce an on-demand
      BSA application service, which has been developed for multi-domain Multi-Access
      Edge Computing (MEC) systems, enabling early notification for vehicles on the
      Estimated Time of Arrival (ETA) of an approaching EmV. The state-of-the-art
      approaches inform civilian vehicles about EmVs only when they are in a close
      proximity (up to 300 m). However, in some situations (e.g., in congested areas),
      this may not be enough for the civilian vehicles to safely and timely maneuver
      out of the lane of an EmV. Our approach is, to the best of our knowledge, a
      unique way to significantly extend this awareness by creating an orchestrated
      5G-based MEC deployment of BSA application service on optimally selected edges,
      thereby stretching over multiple edge domains and even countries. While consuming
      the real-time location, speed, and heading of an EmV, such application service
      affords the drivers with sufficient time to create a clear corridor, allowing
      the EmV to pass through unhindered in a safe manner thereby increasing the mission
      success. The detailed design and the performance analysis of the BSA application
      service that has been created following modern cloud-native principles based
      on Docker and Kubernetes, is presented in terms of the impact of emergency scale
      on the MEC system resources and service response time. Moreover, we also introduce
      a metric called panic indicator, which depicts how the proposed BSA service
      can potentially help in enabling drivers to calmly maneuver out of the path
      of an EmV, thereby increasing road safety.", "venue": "IEEE Transactions on
      Vehicular Technology", "year": 2024, "referenceCount": 45, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2024-01-01", "journal": {"name": "IEEE Transactions on Vehicular
      Technology", "pages": "660-677", "volume": "73"}, "citationStyles": {"bibtex":
      "@Article{Slamnik-Krije\u0161torac2024EdgeAwareCS,\n author = {Nina Slamnik-Krije\u0161torac
      and F. Z. Yousaf and Girma M. Yilma and Rreze Halili and M. Liebsch and J. M\u00e1rquez-Barja},\n
      booktitle = {IEEE Transactions on Vehicular Technology},\n journal = {IEEE Transactions
      on Vehicular Technology},\n pages = {660-677},\n title = {Edge-Aware Cloud-Native
      Service for Enhancing Back Situation Awareness in 5G-Based Vehicular Systems},\n
      volume = {73},\n year = {2024}\n}\n"}, "authors": [{"authorId": "1418053219",
      "name": "Nina Slamnik-Krije\u0161torac"}, {"authorId": "3051110", "name": "F.
      Z. Yousaf"}, {"authorId": "117439155", "name": "Girma M. Yilma"}, {"authorId":
      "2685622", "name": "Rreze Halili"}, {"authorId": "35110389", "name": "M. Liebsch"},
      {"authorId": "1404349274", "name": "J. M\u00e1rquez-Barja"}]}, {"paperId": "16789b00c6c1beb7a08cc8efa0f07129397fa3a2",
      "externalIds": {"DBLP": "conf/acsos/KhaleqR21", "DOI": "10.1109/ACSOS-C52956.2021.00025",
      "CorpusId": 244405414}, "corpusId": 244405414, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/16789b00c6c1beb7a08cc8efa0f07129397fa3a2",
      "title": "Development of QoS-aware agents with reinforcement learning for autoscaling
      of microservices on the cloud", "abstract": "Microservices play an essential
      role in cloud application scalability. When demand increases on a microservice-based
      application, the microservices need to be scaled to sustain the demand without
      degrading the application performance. At the same time, cloud platforms need
      to maintain Quality of Service (QoS) for deployed cloud applications. Current
      microservices autoscaling technologies such as Kubernetes Horizontal Pod Autoscaler
      (HPA) require identifying specific scaling metrics in addition to very good
      knowledge of the application resource usage. Those technologies do not provide
      a built-in auto scaling based on QoS constraints. In this work, we present an
      intelligent micro services auto scaling module using Reinforcement Learning
      (RL) agents. The RL agents are trained and validated on microservices for disaster
      management real time systems with response time as QoS constraint. Our RL agents
      deployed on Google cloud can identify the scaling metrics, provide microservices
      auto scaling, and enhance the response time compared to the default Kubernetes
      intelligently and autonomously. The RL agents serve as an extendible plug-in
      module to Kubernetes HP A for auto scaling micro services in the cloud while
      adhering to QoS constraints autonomously. The intelligent module is flexible
      to accommodate other types of QoS and provides a cost-effective solution to
      cloud applications auto scaling in areas of limited resources.", "venue": "2021
      IEEE International Conference on Autonomic Computing and Self-Organizing Systems
      Companion (ACSOS-C)", "year": 2021, "referenceCount": 0, "citationCount": 5,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2021-09-01", "journal":
      {"name": "2021 IEEE International Conference on Autonomic Computing and Self-Organizing
      Systems Companion (ACSOS-C)", "pages": "13-19"}, "citationStyles": {"bibtex":
      "@Article{Khaleq2021DevelopmentOQ,\n author = {Abeer Abdel Khaleq and Ilkyeun
      Ra},\n booktitle = {2021 IEEE International Conference on Autonomic Computing
      and Self-Organizing Systems Companion (ACSOS-C)},\n journal = {2021 IEEE International
      Conference on Autonomic Computing and Self-Organizing Systems Companion (ACSOS-C)},\n
      pages = {13-19},\n title = {Development of QoS-aware agents with reinforcement
      learning for autoscaling of microservices on the cloud},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "66652996", "name": "Abeer Abdel Khaleq"}, {"authorId":
      "1940102", "name": "Ilkyeun Ra"}]}, {"paperId": "167a07fc5eadab4cd31e8f16948761224a15cd3d",
      "externalIds": {"MAG": "2972015190", "DOI": "10.1007/978-1-4842-4985-7_10",
      "CorpusId": 202770456}, "corpusId": 202770456, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/167a07fc5eadab4cd31e8f16948761224a15cd3d",
      "title": "Advanced Network Operations", "abstract": null, "venue": "Architecting
      and Operating OpenShift Clusters", "year": 2019, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "Architecting and Operating
      OpenShift Clusters"}, "citationStyles": {"bibtex": "@Article{Caban2019AdvancedNO,\n
      author = {William Caban},\n booktitle = {Architecting and Operating OpenShift
      Clusters},\n journal = {Architecting and Operating OpenShift Clusters},\n title
      = {Advanced Network Operations},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "153689643", "name": "William Caban"}]}, {"paperId": "167d6c1f6f54a06982f14fd6277b2862afc495fb",
      "externalIds": {"DOI": "10.23919/cisti54924.2022.9820108", "CorpusId": 250564965},
      "corpusId": 250564965, "publicationVenue": {"id": "b63861a6-ab0a-47a4-9f6c-accf03b5a180",
      "name": "Iberian Conference on Information Systems and Technologies", "type":
      "conference", "alternate_names": ["CISTI", "Iber Conf Inf Syst Technol"]}, "url":
      "https://www.semanticscholar.org/paper/167d6c1f6f54a06982f14fd6277b2862afc495fb",
      "title": "Continuous Deployment in IoT Edge Computing : A GitOps implementation",
      "abstract": "Edge computing (EC) is a recent computing paradigm in the IoT domain
      for performing calculations and processing at the edge of the network, closer
      to the user instead of moving all data to the cloud. In this way, EC practitioners
      aim to replicate the benefits of cloud computing but closer to the source of
      the data, reducing the latency imposed by the distance between the cloud and
      the end devices, the network overhead, and the security and privacy risk that
      this offloading entails. But not only that. EC practitioners also aim to replicate
      best practices used on cloud-native development and operation. In this regard,
      GitOps is one of the main trends in the DevOps ecosystem for Continuous Deployment
      (CD) that promotes infrastructure automation in highly distributed applications,
      accelerating value delivery while avoiding error-prone manual processes. Till
      now, GitOps has been mainly related to Kubernetes\u2014a widely used container
      orchestration platform to run distributed applications resiliently. In this
      regard, more and more IoT EC solutions are implementing container orchestration
      solutions like Kubernetes, thus, it is worthwhile identifying the benefits that
      GitOps adoption could leverage at the Edge and how possible challenges and drawbacks
      could be addressed. This paper presents a proof of concept based on tools included
      in the Cloud Native Computing Foundation (CNCF) landscape to check the feasibility
      of applying GtiOps in IoT EC solutions. Several drawbacks were detected mainly
      due to the used tooling, such as lack of automatic provisioning of physical
      infrastructure, tight coupled to Kubernetes descriptors for declaring workloads,
      and limitations on the edge devices that can be supported.", "venue": "Iberian
      Conference on Information Systems and Technologies", "year": 2022, "referenceCount":
      7, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2022-06-22", "journal":
      {"name": "2022 17th Iberian Conference on Information Systems and Technologies
      (CISTI)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Conference{L\u00f3pez-Viana2022ContinuousDI,\n
      author = {Ram\u00f3n L\u00f3pez-Viana and Jessica D\u00edaz and Jorge E. P\u00e9rez},\n
      booktitle = {Iberian Conference on Information Systems and Technologies},\n
      journal = {2022 17th Iberian Conference on Information Systems and Technologies
      (CISTI)},\n pages = {1-6},\n title = {Continuous Deployment in IoT Edge Computing
      : A GitOps implementation},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "1994566109", "name": "Ram\u00f3n L\u00f3pez-Viana"}, {"authorId": "145486516",
      "name": "Jessica D\u00edaz"}, {"authorId": "2115333235", "name": "Jorge E. P\u00e9rez"}]},
      {"paperId": "16afd96b464e2e59a7fcb5284c2bdb9390fbdd86", "externalIds": {"DBLP":
      "conf/icaip/LiYW018", "MAG": "2897688389", "DOI": "10.1145/3239576.3239605",
      "CorpusId": 53505964}, "corpusId": 53505964, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/16afd96b464e2e59a7fcb5284c2bdb9390fbdd86",
      "title": "Building a Cloud-Ready Program: A highly scalable Implementation based
      on Kubernetes", "abstract": "Build system, which can convert source codes into
      applications, is essential for the development of software. The general build
      systems that relying on single physical or cloud host to run bring problems
      such as system security, resource shortage, overload, and low availability in
      the face of massive build requests. After modularizing and streamlining the
      steps during a build process, this paper proposes a system that introduces container
      technology and then builds a large-scale, real-time, and huge-concurrency supported
      build system based on Kubernetes[1]. The system provides a highly scalable and
      feature-stable cloud architecture that supports huge concurrency with lower
      resource consumption. Also, the system controls programs'' behaviors very well
      to avoid potential security and resource issues and shows excellent performance
      in concurrency, scalability, security, and load balance even when handling a
      large number of build tasks.", "venue": "ICAIP ''18", "year": 2018, "referenceCount":
      11, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2018-06-16", "journal":
      {"pages": "159-164"}, "citationStyles": {"bibtex": "@Article{Li2018BuildingAC,\n
      author = {Qiankun Li and Gang Yin and Tao Wang and Yue Yu},\n booktitle = {ICAIP
      ''18},\n pages = {159-164},\n title = {Building a Cloud-Ready Program: A highly
      scalable Implementation based on Kubernetes},\n year = {2018}\n}\n"}, "authors":
      [{"authorId": "2108108146", "name": "Qiankun Li"}, {"authorId": "143634613",
      "name": "Gang Yin"}, {"authorId": "39082503", "name": "Tao Wang"}, {"authorId":
      "47111832", "name": "Yue Yu"}]}, {"paperId": "16bb9ab2221ddf8f8f89d73d3ea4a4dc5cdf4156",
      "externalIds": {"DBLP": "journals/access/LeeN23a", "DOI": "10.1109/ACCESS.2023.3310281",
      "CorpusId": 261414015}, "corpusId": 261414015, "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26",
      "name": "IEEE Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/16bb9ab2221ddf8f8f89d73d3ea4a4dc5cdf4156",
      "title": "Kunerva: Automated Network Policy Discovery Framework for Containers",
      "abstract": "Containerization has gained significant popularity in cloud-native
      applications, offering lightweight and portable capabilities, with container
      orchestration platforms such as Kubernetes, simplifying deployment and management.
      However, the presence of human errors, especially misconfigurations, continues
      to pose substantial security risks to containers. One specific challenge lies
      in generating effective network security policies, given the intricate nature
      of label-based container management and the dynamic characteristics of container
      deployments. This paper introduces KUNERVA, an innovative and automated solution
      specifically designed to tackle the critical security challenge in container
      environments. KUNERVA focuses on policy discovery utilizing network logs to
      generate a minimum set of network security policies to achieve maximum network
      traffic coverage while ensuring the security isolation between containers. To
      enhance the reliability of the generated policies, KUNERVA seamlessly integrates
      with a policy enforcement system, Gatekeeper, for accurate policy verification.
      Consequently, KUNERVA ensures the discovery of an efficient and effective network
      policy set, blocking the enforcement of malicious network policies.", "venue":
      "IEEE Access", "year": 2023, "referenceCount": 63, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/6287639/6514899/10234410.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "IEEE Access", "pages": "95616-95631", "volume": "11"}, "citationStyles":
      {"bibtex": "@Article{Lee2023KunervaAN,\n author = {Seungsoo Lee and Jae-Cheul
      Nam},\n booktitle = {IEEE Access},\n journal = {IEEE Access},\n pages = {95616-95631},\n
      title = {Kunerva: Automated Network Policy Discovery Framework for Containers},\n
      volume = {11},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2108115865",
      "name": "Seungsoo Lee"}, {"authorId": "153316835", "name": "Jae-Cheul Nam"}]},
      {"paperId": "16c9bd2e22f7b4862d5c5497cd0b1998c1c06923", "externalIds": {"DOI":
      "10.2172/1897884", "CorpusId": 253986146}, "corpusId": 253986146, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/16c9bd2e22f7b4862d5c5497cd0b1998c1c06923",
      "title": "Kubernetes for HPC Administration (Slides).", "abstract": null, "venue":
      "Proposed for presentation at the SC21 held November 13-19, 2021 in St. Louis,
      MO US", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2021-11-01", "journal": {"name": "Proposed for presentation
      at the SC21 held November 13-19, 2021 in St. Louis, MO US"}, "citationStyles":
      {"bibtex": "@Article{Knight2021KubernetesFH,\n author = {Amber Knight},\n booktitle
      = {Proposed for presentation at the SC21 held November 13-19, 2021 in St. Louis,
      MO US},\n journal = {Proposed for presentation at the SC21 held November 13-19,
      2021 in St. Louis, MO US},\n title = {Kubernetes for HPC Administration (Slides).},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "144474358", "name": "Amber Knight"}]},
      {"paperId": "16d291213350a0e34d8eea2f6c163d386edf6a7d", "externalIds": {"MAG":
      "3011632910", "DOI": "10.1088/1755-1315/440/3/032147", "CorpusId": 215877088},
      "corpusId": 215877088, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/16d291213350a0e34d8eea2f6c163d386edf6a7d",
      "title": "Research on Micro Service Architecture of Power Information System
      Based on Docker Container", "abstract": "With the development of energy internet,
      the complexity of power information system is increasing day by day, and the
      ecosphere of cooperation and sharing among different industries is gradually
      formed. Based on Docker container technology and Kubernetes container layout
      technology, this paper studies the design principle and top-level architecture
      of power information system micro-service platform, and proposes the implementation
      scheme of service discovery, message communication and load balancing in power
      information system micro-service. Finally, the performance of the system is
      verified by simulation experiments.", "venue": "IOP Conference Series: Earth
      and Environment", "year": 2020, "referenceCount": 23, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Physics",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Physics", "source": "external"},
      {"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2020-03-19", "journal": {"name": "IOP Conference
      Series: Earth and Environmental Science", "volume": "440"}, "citationStyles":
      {"bibtex": "@Conference{Qian2020ResearchOM,\n author = {Lin Qian and Haiyang
      Chen and Jun Yu and Guangxin Zhu and Jiyang Zhu and C. Ren and Zhu Mei and Hengmao
      Pang and Mingjie Xu and Lin Wang},\n booktitle = {IOP Conference Series: Earth
      and Environment},\n journal = {IOP Conference Series: Earth and Environmental
      Science},\n title = {Research on Micro Service Architecture of Power Information
      System Based on Docker Container},\n volume = {440},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "10793135", "name": "Lin Qian"}, {"authorId": "2118439564",
      "name": "Haiyang Chen"}, {"authorId": "11305716", "name": "Jun Yu"}, {"authorId":
      "47412655", "name": "Guangxin Zhu"}, {"authorId": "2108673924", "name": "Jiyang
      Zhu"}, {"authorId": "2064255530", "name": "C. Ren"}, {"authorId": "49508809",
      "name": "Zhu Mei"}, {"authorId": "40048801", "name": "Hengmao Pang"}, {"authorId":
      "49235623", "name": "Mingjie Xu"}, {"authorId": "2144735465", "name": "Lin Wang"}]},
      {"paperId": "16dd16d56a84f6f040f5b747359fa2c43d8aa50c", "externalIds": {"DBLP":
      "conf/icssa/KimK20", "DOI": "10.1109/ICSSA51305.2020.00016", "CorpusId": 237000379},
      "corpusId": 237000379, "publicationVenue": {"id": "114a6c53-641d-4023-b71b-2391c71a3686",
      "name": "International Conference on Software Security and Assurance", "type":
      "conference", "alternate_names": ["ICSSA", "Int Conf Softw Secur Assur"]}, "url":
      "https://www.semanticscholar.org/paper/16dd16d56a84f6f040f5b747359fa2c43d8aa50c",
      "title": "Blockchain-based Service Performance Evaluation Method Using Native
      Cloud Environment", "abstract": "This study presents a performance evaluation
      system that helps Blockchain-based service planners make decisions. This system
      is offered as Docker and Kubernetes for portability and flexibility.", "venue":
      "International Conference on Software Security and Assurance", "year": 2020,
      "referenceCount": 0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2020-10-01",
      "journal": {"name": "2020 International Conference on Software Security and
      Assurance (ICSSA)", "pages": "52-52"}, "citationStyles": {"bibtex": "@Article{Kim2020BlockchainbasedSP,\n
      author = {TaeYoung Kim and Hyung-Jong Kim},\n booktitle = {International Conference
      on Software Security and Assurance},\n journal = {2020 International Conference
      on Software Security and Assurance (ICSSA)},\n pages = {52-52},\n title = {Blockchain-based
      Service Performance Evaluation Method Using Native Cloud Environment},\n year
      = {2020}\n}\n"}, "authors": [{"authorId": "2260288155", "name": "TaeYoung Kim"},
      {"authorId": "2260282768", "name": "Hyung-Jong Kim"}]}, {"paperId": "16f5fe4fb3c831cbc2858efc3eedbb3901b37cdc",
      "externalIds": {"MAG": "2943480896", "DBLP": "conf/sac/TruyenLLJ19", "DOI":
      "10.1145/3297280.3297536", "CorpusId": 142503728}, "corpusId": 142503728, "publicationVenue":
      {"id": "d80d58be-58fc-4181-a397-5ac6fd976a47", "name": "ACM Symposium on Applied
      Computing", "type": "conference", "alternate_names": ["Sel Area Cryptogr", "Int
      Conf Sel area Cryptogr", "International Conference on Selected areas in Cryptography",
      "ACM Symp Appl Comput", "Selected Areas in Cryptography", "Symposium on Applied
      Computing", "SAC", "Symp Appl Comput"], "url": "https://www.acm.org/publications",
      "alternate_urls": ["http://sacworkshop.org/"]}, "url": "https://www.semanticscholar.org/paper/16f5fe4fb3c831cbc2858efc3eedbb3901b37cdc",
      "title": "Performance overhead of container orchestration frameworks for management
      of multi-tenant database deployments", "abstract": "The most preferred approach
      in the literature on service-level objectives for multi-tenant databases is
      to group tenants according to their SLA class in separate database processes
      and find optimal co-placement of tenants across a cluster of nodes. To implement
      performance isolation between co-located database processes, request scheduling
      is preferred over hypervisor-based virtualization that introduces a significant
      performance overhead. A relevant question is whether the more light-weight container
      technology such as Docker is a viable alternative for running high-end performance
      database workloads. Moreover, the recent uprise and industry adoption of container
      orchestration (CO) frameworks for the purpose of automated placement of cloud-based
      applications raises the question what is the additional performance overhead
      of CO frameworks in this context. In this paper, we evaluate the performance
      overhead introduced by Docker engine and two representative CO frameworks, Docker
      Swarm and Kubernetes, when running and managing a CPU-bound Cassandra workload
      in OpenStack. Firstly, we have found that Docker engine deployments that run
      in host mode exhibit negligible performance overhead in comparison to native
      OpenStack deployments. Secondly, we have found that virtual IP networking introduces
      a substantial overhead in Docker Swarm and Kubernetes due to virtual network
      bridges when compared to Docker engine deployments. This demands for service
      networking approaches that run in true host mode but offer support for network
      isolation between containers. Thirdly, volume plugins for persistent storage
      have a large impact on the overall resource model of a database workload; more
      specifically, we show that a CPU-bound Cassandra workload changes into an I/O-bound
      workload in both Docker Swarm and Kubernetes because their local volume plugins
      introduce a disk I/O performance bottleneck that does not appear in Docker engine
      deployments. These findings imply that solved placement decisions for native
      or Docker engine deployments cannot be reused for Docker Swarm and Kubernetes.",
      "venue": "ACM Symposium on Applied Computing", "year": 2019, "referenceCount":
      25, "citationCount": 13, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://lirias.kuleuven.be/bitstream/123456789/636437/2/sac2019-1798.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2019-04-08", "journal": {"name": "Proceedings of the 34th
      ACM/SIGAPP Symposium on Applied Computing"}, "citationStyles": {"bibtex": "@Book{Truyen2019PerformanceOO,\n
      author = {E. Truyen and Dimitri Van Landuyt and B. Lagaisse and W. Joosen},\n
      booktitle = {ACM Symposium on Applied Computing},\n journal = {Proceedings of
      the 34th ACM/SIGAPP Symposium on Applied Computing},\n title = {Performance
      overhead of container orchestration frameworks for management of multi-tenant
      database deployments},\n year = {2019}\n}\n"}, "authors": [{"authorId": "1743981",
      "name": "E. Truyen"}, {"authorId": "2211794", "name": "Dimitri Van Landuyt"},
      {"authorId": "1796744", "name": "B. Lagaisse"}, {"authorId": "1752104", "name":
      "W. Joosen"}]}, {"paperId": "17100d0ae66d5371f62484a08aca6e6a24a83174", "externalIds":
      {"DBLP": "conf/icce-tw/LuY23", "DOI": "10.1109/ICCE-Taiwan58799.2023.10226805",
      "CorpusId": 261435428}, "corpusId": 261435428, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/17100d0ae66d5371f62484a08aca6e6a24a83174",
      "title": "An Efficient Light-Weight Federated Learning Framework Implemented
      on Kubernetes and Docker", "abstract": "Federated learning is a new machine
      learning paradigm that trains an algorithm across multiple edge devices without
      sharing data. However, traditional deployment of federated learning encounters
      difficulties for efficient environment setup, resource allocation and maintenance.
      To resolve this, in this study rebuilt the federated learning algorithm into
      a containerized software structure based on Kubernetes and Docker. This framework
      significantly reduced the construction time and improves the efficiency of resource
      utilization. Moreover, we proposed removing gradient computation of some fully
      connected layers in the backward pass to shorten the training time. Compared
      with the classic federated learning algorithm FedAvg initiated by Google, the
      proposed lightweight federated learning algorithm could reduce the overall training
      time by 50% or more for large batch size and heavier local training without
      sacrificing accuracy.", "venue": "2023 International Conference on Consumer
      Electronics - Taiwan (ICCE-Taiwan)", "year": 2023, "referenceCount": 6, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2023-07-17", "journal": {"name": "2023 International Conference on Consumer
      Electronics - Taiwan (ICCE-Taiwan)", "pages": "685-686"}, "citationStyles":
      {"bibtex": "@Article{Lu2023AnEL,\n author = {Rou-Hoa Lu and Shih-Hsuan Yang},\n
      booktitle = {2023 International Conference on Consumer Electronics - Taiwan
      (ICCE-Taiwan)},\n journal = {2023 International Conference on Consumer Electronics
      - Taiwan (ICCE-Taiwan)},\n pages = {685-686},\n title = {An Efficient Light-Weight
      Federated Learning Framework Implemented on Kubernetes and Docker},\n year =
      {2023}\n}\n"}, "authors": [{"authorId": "2236929447", "name": "Rou-Hoa Lu"},
      {"authorId": "2156924220", "name": "Shih-Hsuan Yang"}]}, {"paperId": "1796b3b0a4310a4fb784290fee7c427ada7081c6",
      "externalIds": {"DBLP": "conf/icebe/XuCYMW17", "MAG": "2769838334", "DOI": "10.1109/ICEBE.2017.52",
      "CorpusId": 1078279}, "corpusId": 1078279, "publicationVenue": {"id": "2e7913cf-49f3-4c19-9a51-68860c6d73f9",
      "name": "IEEE International Conference on e-Business Engineering", "type": "conference",
      "alternate_names": ["IEEE Int Conf bus Eng", "Int Conf bus Eng", "International
      Conference on e-Business Engineering", "ICEBE"], "url": "http://www.wikicfp.com/cfp/program?id=1344"},
      "url": "https://www.semanticscholar.org/paper/1796b3b0a4310a4fb784290fee7c427ada7081c6",
      "title": "LogDC: Problem Diagnosis for Declartively-Deployed Cloud Applications
      with Log", "abstract": "Recently, as the evolution of application''s development
      and management paradigms, the deployment declaration becomes a standard interface
      connecting application developers and Cloud platforms. Kuberenetes is such a
      system for automating deployment, scaling, and management of micro-service based
      applications. However, managing and operating such a cloud benefit with additional
      complexities from the declarative deployment. This paper proposes a log model
      based problem diagnosis tool for declaratively-deployed cloud applications with
      the full lifecycle Kubernetes logs. With the runtime logs and deployment declarations,
      we can pinpoint the root causes in terms of abnormal declarative items and log
      entries. The advantage of this approach is that we provide a precise log model
      of a normal deployment to help diagnose problems. The experimental results show
      that our approach can find out the anomalies of some real-world Kubernetes problems,
      some of which have been confirmed as bugs. Within the given fault types, our
      approach can pinpoint the root causes at 91% in Precision and at 92% in Recall.",
      "venue": "IEEE International Conference on e-Business Engineering", "year":
      2017, "referenceCount": 13, "citationCount": 18, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2017-11-01", "journal":
      {"name": "2017 IEEE 14th International Conference on e-Business Engineering
      (ICEBE)", "pages": "282-287"}, "citationStyles": {"bibtex": "@Article{Xu2017LogDCPD,\n
      author = {Jingmin Xu and Pengfei Chen and L. Yang and F. Meng and Ping Wang},\n
      booktitle = {IEEE International Conference on e-Business Engineering},\n journal
      = {2017 IEEE 14th International Conference on e-Business Engineering (ICEBE)},\n
      pages = {282-287},\n title = {LogDC: Problem Diagnosis for Declartively-Deployed
      Cloud Applications with Log},\n year = {2017}\n}\n"}, "authors": [{"authorId":
      "2498924", "name": "Jingmin Xu"}, {"authorId": "49490237", "name": "Pengfei
      Chen"}, {"authorId": "144890162", "name": "L. Yang"}, {"authorId": "32265711",
      "name": "F. Meng"}, {"authorId": "2152207313", "name": "Ping Wang"}]}, {"paperId":
      "17a878e0b47d059f483f055e2a54f5c2cb83e96a", "externalIds": {"DOI": "10.23919/AEIT56783.2022.9951842",
      "CorpusId": 253804947}, "corpusId": 253804947, "publicationVenue": {"id": "e32cab02-4d88-4945-8420-be6395e5ed81",
      "name": "AEIT International Annual Conference", "type": "conference", "alternate_names":
      ["AEITIAC", "AEIT Int Annu Conf"]}, "url": "https://www.semanticscholar.org/paper/17a878e0b47d059f483f055e2a54f5c2cb83e96a",
      "title": "An Edge-based Architecture for Phasor Measurements in Smart Grids",
      "abstract": "This paper investigates the application of Kubernetes and Edge
      computing technologies to operate IT services in the context of power systems
      and smart grids. Traditional services for grid monitoring such as Phasor Measurement
      Units (PMUs) and Phasor Data Concentrators (PDCs) require a centralized architecture
      and a rigid networking infrastructure in order to properly function, which today
      is only achieved at the High Voltage (HV) transmission level. Furthermore, manual
      intervention is often the only option for PMUs/PDCs maintenance. In this work,
      the traditional PMU/PDC services were deployed as docker-containers in a decentralized
      Kubernetes cluster, which can represent any kind of geographically dispersed
      TCP/IP network. By leveraging remote orchestration, several key benefits are
      achieved: (1) no manual reconfiguration of the PMU-PDC communications upon network
      reconfiguration, (2) automatic PMU traffic redirection in case of PDC service
      redeployment in a different location, and (3) reduced data-loss upon PDC failure
      and enhanced overall system resiliency due to minimized ICT services down-time.",
      "venue": "AEIT International Annual Conference", "year": 2022, "referenceCount":
      19, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2022-10-03", "journal":
      {"name": "2022 AEIT International Annual Conference (AEIT)", "pages": "1-6"},
      "citationStyles": {"bibtex": "@Conference{Galantino2022AnEA,\n author = {S.
      Galantino and Fulvio Risso and Andrea Cazzaniga and F. Garrone and R. Terruggia
      and R. Lazzari},\n booktitle = {AEIT International Annual Conference},\n journal
      = {2022 AEIT International Annual Conference (AEIT)},\n pages = {1-6},\n title
      = {An Edge-based Architecture for Phasor Measurements in Smart Grids},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "51512758", "name": "S. Galantino"},
      {"authorId": "2240973101", "name": "Fulvio Risso"}, {"authorId": "40597893",
      "name": "Andrea Cazzaniga"}, {"authorId": "1734202", "name": "F. Garrone"},
      {"authorId": "2235812", "name": "R. Terruggia"}, {"authorId": "145314499", "name":
      "R. Lazzari"}]}, {"paperId": "17c2aad67820073451ee7f8d4f46c1baaf8a5002", "externalIds":
      {"ArXiv": "2311.18659", "DBLP": "journals/corr/abs-2311-18659", "DOI": "10.48550/arXiv.2311.18659",
      "CorpusId": 265506538}, "corpusId": 265506538, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/17c2aad67820073451ee7f8d4f46c1baaf8a5002",
      "title": "Comparison of Autoscaling Frameworks for Containerised Machine-Learning-Applications
      in a Local and Cloud Environment", "abstract": "When deploying machine learning
      (ML) applications, the automated allocation of computing resources-commonly
      referred to as autoscaling-is crucial for maintaining a consistent inference
      time under fluctuating workloads. The objective is to maximize the Quality of
      Service metrics, emphasizing performance and availability, while minimizing
      resource costs. In this paper, we compare scalable deployment techniques across
      three levels of scaling: at the application level (TorchServe, RayServe) and
      the container level (K3s) in a local environment (production server), as well
      as at the container and machine levels in a cloud environment (Amazon Web Services
      Elastic Container Service and Elastic Kubernetes Service). The comparison is
      conducted through the study of mean and standard deviation of inference time
      in a multi-client scenario, along with upscaling response times. Based on this
      analysis, we propose a deployment strategy for both local and cloud-based environments.",
      "venue": "arXiv.org", "year": 2023, "referenceCount": 23, "citationCount": 1,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-11-30", "journal": {"name": "ArXiv", "volume": "abs/2311.18659"}, "citationStyles":
      {"bibtex": "@Article{Schroeder2023ComparisonOA,\n author = {Christian Schroeder
      and Rene Boehm and Alexander Lampe},\n booktitle = {arXiv.org},\n journal =
      {ArXiv},\n title = {Comparison of Autoscaling Frameworks for Containerised Machine-Learning-Applications
      in a Local and Cloud Environment},\n volume = {abs/2311.18659},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2268757987", "name": "Christian Schroeder"}, {"authorId":
      "2268759704", "name": "Rene Boehm"}, {"authorId": "2268761285", "name": "Alexander
      Lampe"}]}, {"paperId": "180b8f7e7dd8613e8bc49eba1a08a67f1b4fba55", "externalIds":
      {"DBLP": "conf/sac/BeniTLJD21", "DOI": "10.1145/3412841.3441887", "CorpusId":
      233354088}, "corpusId": 233354088, "publicationVenue": {"id": "d80d58be-58fc-4181-a397-5ac6fd976a47",
      "name": "ACM Symposium on Applied Computing", "type": "conference", "alternate_names":
      ["Sel Area Cryptogr", "Int Conf Sel area Cryptogr", "International Conference
      on Selected areas in Cryptography", "ACM Symp Appl Comput", "Selected Areas
      in Cryptography", "Symposium on Applied Computing", "SAC", "Symp Appl Comput"],
      "url": "https://www.acm.org/publications", "alternate_urls": ["http://sacworkshop.org/"]},
      "url": "https://www.semanticscholar.org/paper/180b8f7e7dd8613e8bc49eba1a08a67f1b4fba55",
      "title": "Reducing cold starts during elastic scaling of containers in kubernetes",
      "abstract": "Automatic scaling of containers is an important feature to handle
      fluctuating workloads. However, the delay caused by the time to bootstrap a
      container has an impact on applications with deadline-based Service-Level Objectives
      (SLOs). This delay is called the cold start problem. Many techniques have already
      been proposed to tackle this problem but not all techniques have been integrated
      and evaluated in Kubernetes, the de-facto standard in container orchestration.
      This paper combines and evaluates three techniques in the context of Kubernetes:
      (i) pre-creation of network containers, (ii) using container images that enable
      sharing of linked libraries in memory and (iii) extending the declarative configuration
      management approach of Kubernetes with imperative configuration for creating
      multiple application containers in parallel. A prototype of the approach is
      implemented and tested on a Java-based Spring Boot application where the cold
      start problem occurs due to various library dependencies. Our findings illustrate
      that the use of containers that allow for library sharing already has a large,
      positive impact when starting up a single container. The pre-creation of network
      containers in combination with imperative configuration enables the application
      to meet deadline-driven SLOs without a non-deterministic delay that appears
      in Kubernetes when multiple containers are created in parallel. We conclude
      that the use of container images that allow for library sharing is a must for
      all applications that require fast container start-ups in Kubernetes. Pre-creation
      of network containers when combined with imperative configuration also has a
      positive impact on SLO compliance during elastic scaling of containers.", "venue":
      "ACM Symposium on Applied Computing", "year": 2021, "referenceCount": 23, "citationCount":
      8, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book"], "publicationDate":
      "2021-03-22", "journal": {"name": "Proceedings of the 36th Annual ACM Symposium
      on Applied Computing"}, "citationStyles": {"bibtex": "@Article{Beni2021ReducingCS,\n
      author = {Emad Heydari Beni and E. Truyen and B. Lagaisse and W. Joosen and
      Jordy Dieltjens},\n booktitle = {ACM Symposium on Applied Computing},\n journal
      = {Proceedings of the 36th Annual ACM Symposium on Applied Computing},\n title
      = {Reducing cold starts during elastic scaling of containers in kubernetes},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2995854", "name": "Emad Heydari
      Beni"}, {"authorId": "1743981", "name": "E. Truyen"}, {"authorId": "1796744",
      "name": "B. Lagaisse"}, {"authorId": "1752104", "name": "W. Joosen"}, {"authorId":
      "2080429415", "name": "Jordy Dieltjens"}]}, {"paperId": "181d88f130a82822886a1878b1d306f76561b2a5",
      "externalIds": {"MAG": "3092676293", "CorpusId": 226607834}, "corpusId": 226607834,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/181d88f130a82822886a1878b1d306f76561b2a5",
      "title": "{SPOK} - Managing ML/Big Data Spark Workloads at scale on Kubernetes",
      "abstract": null, "venue": "", "year": 2020, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Janardhana2020SPOKM,\n author = {N. Janardhana and
      M. Arov},\n title = {{SPOK} - Managing ML/Big Data Spark Workloads at scale
      on Kubernetes},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2016593703",
      "name": "N. Janardhana"}, {"authorId": "5653752", "name": "M. Arov"}]}, {"paperId":
      "1836dd42d2da9a3cf19d40b02ca0b1ec121f455e", "externalIds": {"DBLP": "journals/sensors/SantosWVT19",
      "MAG": "2945879101", "PubMedCentral": "6567354", "DOI": "10.3390/s19102238",
      "CorpusId": 155100897, "PubMed": "31091838"}, "corpusId": 155100897, "publicationVenue":
      {"id": "3dbf084c-ef47-4b74-9919-047b40704538", "name": "Italian National Conference
      on Sensors", "type": "conference", "alternate_names": ["SENSORS", "IEEE Sens",
      "Ital National Conf Sens", "IEEE Sensors", "Sensors"], "issn": "1424-8220",
      "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/1836dd42d2da9a3cf19d40b02ca0b1ec121f455e",
      "title": "Resource Provisioning in Fog Computing: From Theory to Practice \u2020",
      "abstract": "The Internet-of-Things (IoT) and Smart Cities continue to expand
      at enormous rates. Centralized Cloud architectures cannot sustain the requirements
      imposed by IoT services. Enormous traffic demands and low latency constraints
      are among the strictest requirements, making cloud solutions impractical. As
      an answer, Fog Computing has been introduced to tackle this trend. However,
      only theoretical foundations have been established and the acceptance of its
      concepts is still in its early stages. Intelligent allocation decisions would
      provide proper resource provisioning in Fog environments. In this article, a
      Fog architecture based on Kubernetes, an open source container orchestration
      platform, is proposed to solve this challenge. Additionally, a network-aware
      scheduling approach for container-based applications in Smart City deployments
      has been implemented as an extension to the default scheduling mechanism available
      in Kubernetes. Last but not least, an optimization formulation for the IoT service
      problem has been validated as a container-based application in Kubernetes showing
      the full applicability of theoretical approaches in practical service deployments.
      Evaluations have been performed to compare the proposed approaches with the
      Kubernetes standard scheduling feature. Results show that the proposed approaches
      achieve reductions of 70% in terms of network latency when compared to the default
      scheduling mechanism.", "venue": "Italian National Conference on Sensors", "year":
      2019, "referenceCount": 40, "citationCount": 51, "influentialCitationCount":
      2, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/1424-8220/19/10/2238/pdf?version=1557846062",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science", "Medicine"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Medicine",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2019-05-01", "journal": {"name": "Sensors (Basel, Switzerland)",
      "volume": "19"}, "citationStyles": {"bibtex": "@Article{Santos2019ResourcePI,\n
      author = {Jos\u00e9 Santos and T. Wauters and B. Volckaert and F. Turck},\n
      booktitle = {Italian National Conference on Sensors},\n journal = {Sensors (Basel,
      Switzerland)},\n title = {Resource Provisioning in Fog Computing: From Theory
      to Practice \u2020},\n volume = {19},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2115681922", "name": "Jos\u00e9 Santos"}, {"authorId": "145115855", "name":
      "T. Wauters"}, {"authorId": "1803683", "name": "B. Volckaert"}, {"authorId":
      "1715957", "name": "F. Turck"}]}, {"paperId": "183c2f43d68194e43d2232942beb36562aef6904",
      "externalIds": {"DBLP": "conf/icuimc/FanWST23", "DOI": "10.1109/IMCOM56909.2023.10035614",
      "CorpusId": 256668543}, "corpusId": 256668543, "publicationVenue": {"id": "bfdaa902-daba-44e2-9de0-df4e61fe2f80",
      "name": "International Conference on Ubiquitous Information Management and Communication",
      "type": "conference", "alternate_names": ["ICUIMC", "IMCOM", "Int Conf Ubiquitous
      Inf Manag Commun"], "url": "http://www.wikicfp.com/cfp/program?id=1499"}, "url":
      "https://www.semanticscholar.org/paper/183c2f43d68194e43d2232942beb36562aef6904",
      "title": "Software-Defined Networking Integrated with Cloud Native and Proxy
      Mechanism: Detection and Mitigation System for TCP SYN Flooding Attack", "abstract":
      "SDN is a new network architecture that still faces traditional network attacks.
      Among the attacks, Distributed-Denial-of-Service is one of the most severe attacks,
      especially the TCP SYN Flooding attack, which has a more significant impact.
      This paper is mainly to mitigate the impact of the SYN Flood attack and will
      combine Kubernetes and design a unique component: SDN Controller Manager, which
      exists in K8s as a microservices. The proxy mechanism is used to resist the
      SYN Flooding attack, and the K8s feature is further utilized. If the SDN Controller
      Manager is attacked and the service is terminated abnormally, K8s will automatically
      create a new SDN Controller Manager component to continue to provide services.",
      "venue": "International Conference on Ubiquitous Information Management and
      Communication", "year": 2023, "referenceCount": 11, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2023-01-03", "journal": {"name": "2023 17th International
      Conference on Ubiquitous Information Management and Communication (IMCOM)",
      "pages": "1-8"}, "citationStyles": {"bibtex": "@Article{Fan2023SoftwareDefinedNI,\n
      author = {Chun-I Fan and Jun-Huei Wang and Cheng-Han Shie and Yu-Lung Tsai},\n
      booktitle = {International Conference on Ubiquitous Information Management and
      Communication},\n journal = {2023 17th International Conference on Ubiquitous
      Information Management and Communication (IMCOM)},\n pages = {1-8},\n title
      = {Software-Defined Networking Integrated with Cloud Native and Proxy Mechanism:
      Detection and Mitigation System for TCP SYN Flooding Attack},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2204876102", "name": "Chun-I Fan"}, {"authorId": "2204864314",
      "name": "Jun-Huei Wang"}, {"authorId": "2125738766", "name": "Cheng-Han Shie"},
      {"authorId": "2147250562", "name": "Yu-Lung Tsai"}]}, {"paperId": "185ec1ed5397b63e698c087dfd450e8768db1b39",
      "externalIds": {"DBLP": "conf/hpsr/TanLDW22", "DOI": "10.1109/hpsr54439.2022.9831237",
      "CorpusId": 251001426}, "corpusId": 251001426, "publicationVenue": {"id": "9440cc3d-d905-402e-a274-8e60da64789f",
      "name": "International Conference on High Performance Switching and Routing",
      "type": "conference", "alternate_names": ["High Performance Switching and Routing",
      "Int Conf High Perform Switch Routing", "HPSR", "High Perform Switch Routing"],
      "url": "http://www.ieee-hpsr.org/"}, "url": "https://www.semanticscholar.org/paper/185ec1ed5397b63e698c087dfd450e8768db1b39",
      "title": "Dynamic Task Division and Allocation in Mobile Edge Computing Systems:
      A Latency Oriented Approach via Deep Q-Learning Network", "abstract": "With
      the rapid development of Internet of Things (IoTs), various sensors are deployed
      to collect different physical information. Smart surveillance is one of applications
      by analyzing the real-time video generated by camera sensors. However, due to
      the limited computing capability of camera sensors, running video analysis models
      (e.g., AlexNet and YOLO3) on camera sensors directly consumes a lot of computing
      time. In addition, transferring video to the remote cloud suffers a long-distance
      transmission latency. Fortunately, edge computing has been considered as a promising
      solution for enabling computation-intensive yet latency-sensitive applications
      at resource-constrained devices. Thanks to edge computing, camera sensors can
      upload video to different edge servers employed at the edge of networks for
      processing. Moreover, the lightweight Kubernetes for edge computing, i.e., K3s,
      enable a fine-grained task division and parallel computing. In this paper, we
      consider a heterogeneous edge cooperative video analysis, i.e., face recognition,
      with the objective of minimizing the processing latency. Specifically, we use
      a Deep Q-Learning network (DQN) to dynamically adjust the size of pieces video
      allocated to different edge servers connected via wireless networks. In addition,
      to improve the resource utilization of edge servers and reduce the processing
      latency, each edge server further divides the received video into multiple segments
      that are processed by different containers in parallel. To validate the effectiveness
      of our scheme, we implement a small-scale prototype system and conduct numerous
      experiments. Experimental results show that our proposed algorithm outperforms
      the other four schedule schemes by testing on the tasks of face recognition
      and pose recognition.", "venue": "International Conference on High Performance
      Switching and Routing", "year": 2022, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-06-06", "journal":
      {"name": "2022 IEEE 23rd International Conference on High Performance Switching
      and Routing (HPSR)", "pages": "252-259"}, "citationStyles": {"bibtex": "@Article{Tan2022DynamicTD,\n
      author = {Pengcheng Tan and Yang Li and Minghui Dai and Yuan Wu},\n booktitle
      = {International Conference on High Performance Switching and Routing},\n journal
      = {2022 IEEE 23rd International Conference on High Performance Switching and
      Routing (HPSR)},\n pages = {252-259},\n title = {Dynamic Task Division and Allocation
      in Mobile Edge Computing Systems: A Latency Oriented Approach via Deep Q-Learning
      Network},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2055535785", "name":
      "Pengcheng Tan"}, {"authorId": "2154898504", "name": "Yang Li"}, {"authorId":
      "51064894", "name": "Minghui Dai"}, {"authorId": "2160043582", "name": "Yuan
      Wu"}]}, {"paperId": "1862bc36210c9a56a6561dabbce2be999e313f12", "externalIds":
      {"DBLP": "conf/hpsr/BarrachinaMunozZBVRM23", "DOI": "10.1109/HPSR57248.2023.10147920",
      "CorpusId": 259158425}, "corpusId": 259158425, "publicationVenue": {"id": "9440cc3d-d905-402e-a274-8e60da64789f",
      "name": "International Conference on High Performance Switching and Routing",
      "type": "conference", "alternate_names": ["High Performance Switching and Routing",
      "Int Conf High Perform Switch Routing", "HPSR", "High Perform Switch Routing"],
      "url": "http://www.ieee-hpsr.org/"}, "url": "https://www.semanticscholar.org/paper/1862bc36210c9a56a6561dabbce2be999e313f12",
      "title": "Cloud Native Federated Learning for Streaming: An Experimental Demonstrator",
      "abstract": "This paper demonstrates an implementation of Federated Learning
      (FL) for streaming applications using cloud-native technology. Compared to a
      centralized management, by adopting a decentralized approach, the FL method
      improves convergence time, reduces communication overhead, and increases network
      energy efficiency. The cloud-native FL architecture presented comprises three
      sites, each with its own Kubernetes (K8s) cluster. The edge sites run FL Analytical
      Engines (AEs)/clients for local training and updates, and the central site runs
      the aggregation server for FL training. Some other relevant workloads deployed
      at the clusters are the video streaming server, the orchestrator, and monitoring
      components. As for the RAN, we showcase a multi-gNB setup from which we obtain
      monitoring data via custom sampling functions. Following the description of
      the testbed infrastructure and setup, this demonstration presents the real-time
      visualization of network parameters during FL training, and the enhancement
      of video streaming through proactive Central Processing Unit (CPU) scaling,
      made possible by the resource forecasting.", "venue": "International Conference
      on High Performance Switching and Routing", "year": 2023, "referenceCount":
      4, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2023-06-05", "journal": {"name": "2023 IEEE
      24th International Conference on High Performance Switching and Routing (HPSR)",
      "pages": "1-3"}, "citationStyles": {"bibtex": "@Article{Barrachina-Mu\u00f1oz2023CloudNF,\n
      author = {Sergio Barrachina-Mu\u00f1oz and E. Zeydan and Luis Blanco and L.
      Vettori and Farhad Rezazadeh and J. Mangues-Bafalluy},\n booktitle = {International
      Conference on High Performance Switching and Routing},\n journal = {2023 IEEE
      24th International Conference on High Performance Switching and Routing (HPSR)},\n
      pages = {1-3},\n title = {Cloud Native Federated Learning for Streaming: An
      Experimental Demonstrator},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "1388334557", "name": "Sergio Barrachina-Mu\u00f1oz"}, {"authorId": "2989469",
      "name": "E. Zeydan"}, {"authorId": "2057737576", "name": "Luis Blanco"}, {"authorId":
      "50019093", "name": "L. Vettori"}, {"authorId": "70991944", "name": "Farhad
      Rezazadeh"}, {"authorId": "1399280641", "name": "J. Mangues-Bafalluy"}]}, {"paperId":
      "18a720c86ed6e166c26f7d39490bfd11b93ea3ec", "externalIds": {"MAG": "2892022253",
      "DBLP": "conf/IEEEcloud/VayghanSTK18", "DOI": "10.1109/CLOUD.2018.00148", "CorpusId":
      52195774}, "corpusId": 52195774, "publicationVenue": {"id": "406d9f60-417a-4dc5-a6b7-1fe4689a4ff7",
      "name": "IEEE International Conference on Cloud Computing", "type": "conference",
      "alternate_names": ["Int Conf Cloud Comput [services Soc", "CLOUD", "International
      Conference on Cloud Computing [Services Society]", "IEEE Int Conf Cloud Comput"]},
      "url": "https://www.semanticscholar.org/paper/18a720c86ed6e166c26f7d39490bfd11b93ea3ec",
      "title": "Deploying Microservice Based Applications with Kubernetes: Experiments
      and Lessons Learned", "abstract": "Microservices represent a new architectural
      style where small and loosely coupled modules can be developed and deployed
      independently to compose an application. This architectural style brings various
      benefits such as maintainability and flexibility in scaling and aims at decreasing
      downtime in case of failure or upgrade. One of the enablers is Kubernetes, an
      open source platform that provides mechanisms for deploying, maintaining, and
      scaling containerized applications across a cluster of hosts. Moreover, Kubernetes
      enables healing through failure recovery actions to improve the availability
      of applications. As our ultimate goal is to devise architectures to enable high
      availability (HA) with Kubernetes for microservice based applications, in this
      paper we examine the availability achievable through Kubernetes under its default
      configuration. We have conducted a set of experiments which show that the service
      outage can be significantly higher than expected.", "venue": "IEEE International
      Conference on Cloud Computing", "year": 2018, "referenceCount": 7, "citationCount":
      74, "influentialCitationCount": 3, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2018-07-01", "journal":
      {"name": "2018 IEEE 11th International Conference on Cloud Computing (CLOUD)",
      "pages": "970-973"}, "citationStyles": {"bibtex": "@Article{Vayghan2018DeployingMB,\n
      author = {Leila Abdollahi Vayghan and M. Saied and M. Toeroe and F. Khendek},\n
      booktitle = {IEEE International Conference on Cloud Computing},\n journal =
      {2018 IEEE 11th International Conference on Cloud Computing (CLOUD)},\n pages
      = {970-973},\n title = {Deploying Microservice Based Applications with Kubernetes:
      Experiments and Lessons Learned},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "51292383", "name": "Leila Abdollahi Vayghan"}, {"authorId": "39014194", "name":
      "M. Saied"}, {"authorId": "1761847", "name": "M. Toeroe"}, {"authorId": "1707039",
      "name": "F. Khendek"}]}, {"paperId": "18c36ea30f0ad08df97b60ac6c7de50eeb17dc4b",
      "externalIds": {"DOI": "10.1109/AERO50100.2021.9438200", "CorpusId": 235383460},
      "corpusId": 235383460, "publicationVenue": {"id": "5f087f3f-d96b-4da6-8049-604ac2349c44",
      "name": "IEEE Aerospace Conference", "type": "conference", "alternate_names":
      ["AeroConf", "IEEE Aerosp Conf"]}, "url": "https://www.semanticscholar.org/paper/18c36ea30f0ad08df97b60ac6c7de50eeb17dc4b",
      "title": "CELL Ultracomputing Platform for Metabolic and Cardiovascular Health
      Monitoring using Wearables", "abstract": "Current processing systems are limited
      in their ability to provide holistic view of personalized health from wrist
      wearables and smart clothing, embedded with a mix of low and high fidelity -
      optical, MEMS, RF and other electronic biosensors. The mathematics of combining
      data from disparate sensors with asynchronous arrival events, episodic and continuous
      sampling, and varying performance due to confounders and physiological variability
      injects unique challenges in building predictive models and providing actionable,
      engaging information over long duration to the users. As wearables become more
      sophisticated, with new analytics added on a regular basis, the information
      processing challenge becomes harder. Our ultra-scalable CELL analytical platform
      is inspired by the scale of cellular networks found in nature - distributed
      information pathways and triggers in living organisms and creatures. CELL is
      a virtual machine implementing the data-flow architecture where \u201cthe network
      is the computer\u201d. It integrates the communication and processing resources
      into a coherent model where computing is generally distributed between the wearable,
      smart phone and cloud. The paper will describe our CELL architecture in detail
      and discuss departures from traditional and emerging processing containers (such
      as Confluent, Kubernetes etc.) applied to analyzing health data from wearables.
      Our implementation and results using the CELL will be presented from multi-sensor
      devices with metabolic, cardiovascular and impedance biosensor examples for
      wellness and clinically relevant metrics; including implications for scalability
      and real-time fused analytics that combine data from multiple sensors.", "venue":
      "IEEE Aerospace Conference", "year": 2021, "referenceCount": 6, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Medicine", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2021-03-06", "journal": {"name": "2021 IEEE
      Aerospace Conference (50100)", "pages": "1-13"}, "citationStyles": {"bibtex":
      "@Conference{M\u00e2ndutianu2021CELLUP,\n author = {D. M\u00e2ndutianu and S.
      Gulati and T. Ruchti and John S. Hopple and V. Daggumati and Bill van Antwerp},\n
      booktitle = {IEEE Aerospace Conference},\n journal = {2021 IEEE Aerospace Conference
      (50100)},\n pages = {1-13},\n title = {CELL Ultracomputing Platform for Metabolic
      and Cardiovascular Health Monitoring using Wearables},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "52113301", "name": "D. M\u00e2ndutianu"}, {"authorId":
      "32612966", "name": "S. Gulati"}, {"authorId": "2074133709", "name": "T. Ruchti"},
      {"authorId": "2857532", "name": "John S. Hopple"}, {"authorId": "93652961",
      "name": "V. Daggumati"}, {"authorId": "15491869", "name": "Bill van Antwerp"}]},
      {"paperId": "18cc95e2455312bbdb0e32d363575874ac9ee580", "externalIds": {"PubMedCentral":
      "8144464", "DBLP": "journals/fdata/MosciattiLB21", "DOI": "10.3389/fdata.2021.673163",
      "CorpusId": 234349858, "PubMed": "34046587"}, "corpusId": 234349858, "publicationVenue":
      {"id": "165fa1b5-e07f-4b6e-9203-04493f6a7c5c", "name": "Frontiers in Big Data",
      "alternate_names": ["Front Big Data"], "issn": "2624-909X", "url": "https://www.frontiersin.org/journals/big-data"},
      "url": "https://www.semanticscholar.org/paper/18cc95e2455312bbdb0e32d363575874ac9ee580",
      "title": "Increasing the Execution Speed of Containerized Analysis Workflows
      Using an Image Snapshotter in Combination With CVMFS", "abstract": "The past
      years have shown a revolution in the way scientific workloads are being executed
      thanks to the wide adoption of software containers. These containers run largely
      isolated from the host system, ensuring that the development and execution environments
      are the same everywhere. This enables full reproducibility of the workloads
      and therefore also the associated scientific analyses performed. However, as
      the research software used becomes increasingly complex, the software images
      grow easily to sizes of multiple gigabytes. Downloading the full image onto
      every single compute node on which the containers are executed becomes unpractical.
      In this paper, we describe a novel way of distributing software images on the
      Kubernetes platform, with which the container can start before the entire image
      contents become available locally (so-called \u201clazy pulling\u201d). Each
      file required for the execution is fetched individually and subsequently cached
      on-demand using the CernVM file system (CVMFS), enabling the execution of very
      large software images on potentially thousands of Kubernetes nodes with very
      little overhead. We present several performance benchmarks making use of typical
      high-energy physics analysis workloads.", "venue": "Frontiers in Big Data",
      "year": 2021, "referenceCount": 21, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Medicine",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Medicine", "source":
      "external"}, {"category": "Computer Science", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2021-05-11", "journal": {"name": "Frontiers in Big Data",
      "volume": "4"}, "citationStyles": {"bibtex": "@Article{Mosciatti2021IncreasingTE,\n
      author = {Simone Mosciatti and C. Lange and J. Blomer},\n booktitle = {Frontiers
      in Big Data},\n journal = {Frontiers in Big Data},\n title = {Increasing the
      Execution Speed of Containerized Analysis Workflows Using an Image Snapshotter
      in Combination With CVMFS},\n volume = {4},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "1393287169", "name": "Simone Mosciatti"}, {"authorId": "1663902561",
      "name": "C. Lange"}, {"authorId": "2458191", "name": "J. Blomer"}]}, {"paperId":
      "18d376e1a20fecc1ba86bf4edd52b9680ebfd336", "externalIds": {"MAG": "2981049877",
      "DOI": "10.1007/978-1-4842-5419-6_8", "CorpusId": 208112298}, "corpusId": 208112298,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/18d376e1a20fecc1ba86bf4edd52b9680ebfd336",
      "title": "SQL Server on Kubernetes", "abstract": null, "venue": "SQL Server
      2019 Revealed", "year": 2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "SQL Server 2019 Revealed"},
      "citationStyles": {"bibtex": "@Article{Ward2019SQLSO,\n author = {B. Ward},\n
      booktitle = {SQL Server 2019 Revealed},\n journal = {SQL Server 2019 Revealed},\n
      title = {SQL Server on Kubernetes},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "145702954", "name": "B. Ward"}]}, {"paperId": "18db2412e0865e2d7d8b40b9a9f123983965b037",
      "externalIds": {"DOI": "10.47577/technium.v5i.8048", "CorpusId": 256021755},
      "corpusId": 256021755, "publicationVenue": {"id": "d5a68c1a-7a3a-441d-a67b-a0fa3d5fad5b",
      "name": "Technium", "alternate_names": ["Technium"], "issn": "2668-778X", "url":
      "https://techniumscience.com/index.php/technium/index"}, "url": "https://www.semanticscholar.org/paper/18db2412e0865e2d7d8b40b9a9f123983965b037",
      "title": "GamaBox-One: A Proposed Architecture for Cloud-based Big Data Management
      Platform for Multipurpose Computation using Hybrid Architecture", "abstract":
      "The architecture of the data center is the main key for producing a highly
      functional demand big data management platform for multipurpose uses. Nowadays
      various technologies have come to provide construction of that purpose, providing
      several use cases for big data analytics and processing. In this paper, we want
      to explore possibilities of architecture that had to be built in answer to the
      multipurpose data center, such as analytical research, scientific simulation,
      machine learning, deep data learning, and data orchestration. We discover how
      Hadoop and its element supporter can be used alongside cloud orchestrators such
      as Terraform or Occopus and container orchestrators such as Kubernetes or Docker
      Swarm. We also provide possible supporting components that can handle the different
      jobs in High-Performance Computing and how the system can be secured. Our proposed
      approach in this research has developed the architecture for cloud-based big
      data management for multipurpose computation.\n", "venue": "Technium", "year":
      2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-01-12",
      "journal": {"name": "Technium: Romanian Journal of Applied Sciences and Technology"},
      "citationStyles": {"bibtex": "@Article{Riasetiawan2023GamaBoxOneAP,\n author
      = {M. Riasetiawan and A. Ashari and T. K. Priyambodo and Yohannes Suyanto and
      B. Prastowo and Abdul Rouf and Idham Ananta Timur and T. W. Widodo and I. G.
      Mujiyatna and Bagaskoro Saputro},\n booktitle = {Technium},\n journal = {Technium:
      Romanian Journal of Applied Sciences and Technology},\n title = {GamaBox-One:
      A Proposed Architecture for Cloud-based Big Data Management Platform for Multipurpose
      Computation using Hybrid Architecture},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "9353229", "name": "M. Riasetiawan"}, {"authorId": "145205567", "name": "A.
      Ashari"}, {"authorId": "30893535", "name": "T. K. Priyambodo"}, {"authorId":
      "2202833858", "name": "Yohannes Suyanto"}, {"authorId": "47837562", "name":
      "B. Prastowo"}, {"authorId": "2202876502", "name": "Abdul Rouf"}, {"authorId":
      "2007114628", "name": "Idham Ananta Timur"}, {"authorId": "2069164938", "name":
      "T. W. Widodo"}, {"authorId": "2119361439", "name": "I. G. Mujiyatna"}, {"authorId":
      "2202863408", "name": "Bagaskoro Saputro"}]}, {"paperId": "18e100550886ccde8ba0f45c8d513246d7ffaca5",
      "externalIds": {"DBLP": "journals/spe/SantosESK23", "DOI": "10.1002/spe.3154",
      "CorpusId": 252761586}, "corpusId": 252761586, "publicationVenue": {"id": "3da56ce6-4a70-402c-a8b0-7dd39a3273d3",
      "name": "Software, Practice & Experience", "type": "journal", "alternate_names":
      ["Softw  Pract Exp", "Softw Pract  Exp", "Software - Practice and Experience"],
      "issn": "0038-0644", "url": "http://www3.interscience.wiley.com/cgi-bin/jhome/1752",
      "alternate_urls": ["http://www.interscience.wiley.com/jpages/0038-0644/", "https://onlinelibrary.wiley.com/journal/1097024X"]},
      "url": "https://www.semanticscholar.org/paper/18e100550886ccde8ba0f45c8d513246d7ffaca5",
      "title": "SPIDER: An availability\u2010aware framework for the service function
      chain placement in distributed scenarios", "abstract": "The network function
      virtualization (NFV) paradigm replaces hardware\u2010dependent network functions
      by virtual network functions (VNFs) that can be deployed in commodity hardware,
      including legacy servers. Consequently, the use of NFV is expected to reduce
      operating and capital expenses, as well as improve service deployment operation
      and management flexibility. For many use cases, the VNFs must be visited and
      invoked following a specific order of execution in order to compose a complete
      network service, named service function chain (SFC). Nonetheless, despite the
      benefits from NFV and SFC virtualization technologies, their introduction must
      not harm network performance and service availability. On the one hand, redundancy
      is seen by network service planners as a mechanism well established to combat
      availability issues. At same time, there is a goal to optimize resource utilization
      in order to reduce operational expenditure. In this article, we share our experience
      in the design use of a framework, named SPIDER, focused on SFC placement that
      considers the network infrastructure condition and the required SFC availability
      to define the placement strategy. The SPIDER monitors the status of infrastructure
      nodes and links and defines which servers the VNFs should be placed on and the
      number of redundant replicas needed. We present a proof\u2010of\u2010concept
      of SPIDER using Kubernetes to launch the VNFs as containers. We also use Kubernetes
      to forward the traffic between the VNFs, composing the service chain. We perform
      experiments to evaluate the runtime of SPIDER and the SFC delay under different
      network conditions.", "venue": "Software, Practice & Experience", "year": 2022,
      "referenceCount": 41, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-10-05", "journal":
      {"name": "Software: Practice and Experience", "pages": "413 - 437", "volume":
      "53"}, "citationStyles": {"bibtex": "@Article{Santos2022SPIDERAA,\n author =
      {Guto Leoni Santos and P. Endo and D. Sadok and J. Kelner},\n booktitle = {Software,
      Practice & Experience},\n journal = {Software: Practice and Experience},\n pages
      = {413 - 437},\n title = {SPIDER: An availability\u2010aware framework for the
      service function chain placement in distributed scenarios},\n volume = {53},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "24302859", "name": "Guto Leoni
      Santos"}, {"authorId": "1704130", "name": "P. Endo"}, {"authorId": "7286889",
      "name": "D. Sadok"}, {"authorId": "1745273", "name": "J. Kelner"}]}, {"paperId":
      "18e85d1b3c6d8cb98bc48b1b0d8d43d641f2bea9", "externalIds": {"DBLP": "conf/sose/TownendCBYSS019",
      "MAG": "2943978006", "DOI": "10.1109/SOSE.2019.00030", "CorpusId": 146118907},
      "corpusId": 146118907, "publicationVenue": {"id": "a59db0cb-8287-4db4-9378-0eb4c692f830",
      "name": "International Symposium on Service Oriented Software Engineering",
      "type": "conference", "alternate_names": ["IEEE International Conference on
      System of Systems Engineering", "Int Symp Serv Oriented Softw Eng", "International
      Conference on System of Systems Engineering", "SoSE", "Service Oriented Software
      Engineering", "Serv Oriented Softw Eng", "Int Conf Syst Syst Eng", "IEEE Int
      Conf Syst Syst Eng", "SOSE"]}, "url": "https://www.semanticscholar.org/paper/18e85d1b3c6d8cb98bc48b1b0d8d43d641f2bea9",
      "title": "Invited Paper: Improving Data Center Efficiency Through Holistic Scheduling
      In Kubernetes", "abstract": "Data centers are the infrastructure that underpins
      modern distributed service-oriented systems. They are complex systems-of-systems,
      with many interacting elements, that consume vast amounts of power. Demand for
      such facilities is growing rapidly, leading to significant global environmental
      impact. The data center industry has conducted much research into efficiency
      improvements, but this has mostly been at the physical infrastructure level.
      Research into software-based solutions for improving efficiency is greatly needed.
      However, most current research does not take a holistic view of the data center
      that considers virtual and physical infrastructures as well as business process.
      This is crucial if a solution is to be applied in a realistic setting. This
      paper describes the complex, system-of-systems nature of data centers, and discusses
      the service models used in the industry. We describe a holistic scheduling system
      that replaces the default scheduler in the Kubernetes container system, taking
      into account both software and hardware models. We discuss the initial results
      of deploying this scheme in a real data center, where power consumption reductions
      of 10-20% were observed. We show that by introducing hardware modelling into
      a software-based solution, an intelligent scheduler can make significant improvements
      in data center efficiency. We conclude by looking at some of the future work
      that needs to be performed in this area.", "venue": "International Symposium
      on Service Oriented Software Engineering", "year": 2019, "referenceCount": 15,
      "citationCount": 30, "influentialCitationCount": 3, "isOpenAccess": true, "openAccessPdf":
      {"url": "https://eprints.whiterose.ac.uk/166899/3/32-sose19-Vision-Final5.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2019-04-01",
      "journal": {"name": "2019 IEEE International Conference on Service-Oriented
      System Engineering (SOSE)", "pages": "156-15610"}, "citationStyles": {"bibtex":
      "@Article{Townend2019InvitedPI,\n author = {P. Townend and S. J. Clement and
      D. Burdett and Renyu Yang and J. Shaw and Brad Slater and Jie Xu},\n booktitle
      = {International Symposium on Service Oriented Software Engineering},\n journal
      = {2019 IEEE International Conference on Service-Oriented System Engineering
      (SOSE)},\n pages = {156-15610},\n title = {Invited Paper: Improving Data Center
      Efficiency Through Holistic Scheduling In Kubernetes},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "1698524", "name": "P. Townend"}, {"authorId": "145601011",
      "name": "S. J. Clement"}, {"authorId": "31283797", "name": "D. Burdett"}, {"authorId":
      "1894612", "name": "Renyu Yang"}, {"authorId": "144758248", "name": "J. Shaw"},
      {"authorId": "113585819", "name": "Brad Slater"}, {"authorId": "50874581", "name":
      "Jie Xu"}]}, {"paperId": "192e9b9249ec6352f95e880298894dedd50873d0", "externalIds":
      {"DBLP": "conf/icin/LiscanoSAKAPC21", "DOI": "10.1109/ICIN51074.2021.9385534",
      "CorpusId": 233136563}, "corpusId": 233136563, "publicationVenue": {"id": "5e07a437-469d-4072-9d25-ea2d144e1601",
      "name": "Conference on Innovation in Clouds, Internet and Networks", "type":
      "conference", "alternate_names": ["ICIN", "Conf Innov Cloud Internet Netw"]},
      "url": "https://www.semanticscholar.org/paper/192e9b9249ec6352f95e880298894dedd50873d0",
      "title": "Supporting SIP Port Mapping and RTP Affinity Constraints in Container
      Orchestration Environments", "abstract": "The use of container-oriented orchestration
      platforms such as Kubernetes, is becoming more popular due to their ability
      to hide from developers the deployment details of the application and the capability
      of these platforms to support autoscaling and failure recovery. Most container
      orchestration environments have focused on supporting the HTTP protocol and
      are challenging to use in protocols such as SIP and RTP. When SIP/RTP services
      are deployed in the Kubernetes environment, failures related to port mapping
      and affinity occur. These failures are reflected as packets sent to the non-existent
      ports in either the overlay or underlay network in Kubernetes. This paper details
      these failures and presents solutions for resolving the SIP/RTP port mapping
      and the RTP affinity constraint failures. The SIP/RTP port mapping failure is
      solved by correctly mapping the internal SIP/RTP ports to those exposed externally
      by Kubernetes while the RTP affinity constraint solution leverages the concept
      of the creation of unique endpoints and labels for each RTP service port opened
      for a SIP call. The paper also offers some insight into the challenges faced
      in replicating the SIP constraint affinity failure. These solutions have been
      implemented in a Kubernetes aware SIP Proxy (SIP-K8S-Proxy) that supports port
      mapping and managing of the RTP affinity as well. The overhead associated with
      implementing this solution has been computed to be about 2 seconds in the establishment
      of a SIP call.", "venue": "Conference on Innovation in Clouds, Internet and
      Networks", "year": 2021, "referenceCount": 20, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2021-03-01", "journal":
      {"name": "2021 24th Conference on Innovation in Clouds, Internet and Networks
      and Workshops (ICIN)", "pages": "13-19"}, "citationStyles": {"bibtex": "@Article{Liscano2021SupportingSP,\n
      author = {R. Liscano and Samridhi and Akramul Azim and Nahid Hasan Khan and
      A. Abedin and Brian Pulito and Yee-Kang Chang},\n booktitle = {Conference on
      Innovation in Clouds, Internet and Networks},\n journal = {2021 24th Conference
      on Innovation in Clouds, Internet and Networks and Workshops (ICIN)},\n pages
      = {13-19},\n title = {Supporting SIP Port Mapping and RTP Affinity Constraints
      in Container Orchestration Environments},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "1681715", "name": "R. Liscano"}, {"authorId": "70590522", "name":
      "Samridhi"}, {"authorId": "2452210", "name": "Akramul Azim"}, {"authorId": "2066901060",
      "name": "Nahid Hasan Khan"}, {"authorId": "2042718218", "name": "A. Abedin"},
      {"authorId": "2042722952", "name": "Brian Pulito"}, {"authorId": "71638085",
      "name": "Yee-Kang Chang"}]}, {"paperId": "1963447ce4a5f2e96d91fee4fcf8706d6cc9654f",
      "externalIds": {"DBLP": "journals/access/TranVK22", "DOI": "10.1109/ACCESS.2022.3209257",
      "CorpusId": 252549304}, "corpusId": 252549304, "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26",
      "name": "IEEE Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/1963447ce4a5f2e96d91fee4fcf8706d6cc9654f",
      "title": "Proactive Stateful Fault-Tolerant System for Kubernetes Containerized
      Services", "abstract": "Recently, the development of Kubernetes (K8s) containerization
      platform has enabled cloud-based, lightweight, highly scalable, and agile services
      in both general and telco use-cases. Ensuring high availability, reliable and
      continuous containerized services is a major requirement of service providers
      to provide fault-tolerance, transparent service experiences to end-users. To
      satisfy this requirement, fault prediction and proactive stateful service recovery
      features must be applied in cloud systems. Prior proactive failure recovery
      approaches mostly focused on either improving fault prediction performance based
      on different machine learning time series forecasting techniques or optimizing
      recovery service placement after fault prediction. However, a mechanism that
      enables stateful containerized service migration from the predicted faulty node
      to the healthy destination node has not been studied. Service migration in previous
      proactive works is only simulated or performed by virtual machine (VM) migration
      techniques. In this paper, we propose a proactive stateful fault-tolerant system
      for K8s containerized services that pipelines a Bidirectional Long Short-Term
      Memory (Bi-LSTM) fault prediction framework and a novel K8s stateful service
      migration mechanism for service recovery. Experimental results show how the
      Bi-LSTM model improved prediction performance against other time-series forecasting
      models used prior proactive works. We then combined the Bi-LSTM fault prediction
      framework with both the default K8s and our stateful migration mechanisms. The
      comparison between these two proactive systems proves our system efficiency
      in terms of reducing Quality of Service (QoS) violation percentage and service
      recovery time.", "venue": "IEEE Access", "year": 2022, "referenceCount": 32,
      "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "IEEE Access", "pages": "102181-102194", "volume": "10"}, "citationStyles":
      {"bibtex": "@Article{Tran2022ProactiveSF,\n author = {Minh-Ngoc Tran and Xuan
      Tuong Vu and Younghan Kim},\n booktitle = {IEEE Access},\n journal = {IEEE Access},\n
      pages = {102181-102194},\n title = {Proactive Stateful Fault-Tolerant System
      for Kubernetes Containerized Services},\n volume = {10},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "1557385933", "name": "Minh-Ngoc Tran"}, {"authorId":
      "2066278848", "name": "Xuan Tuong Vu"}, {"authorId": "2084264", "name": "Younghan
      Kim"}]}, {"paperId": "1969cf39be068d0d62009d5550223790cadc4426", "externalIds":
      {"DBLP": "conf/icccn/TamiruPTE21", "DOI": "10.1109/ICCCN52240.2021.9522318",
      "CorpusId": 237376686}, "corpusId": 237376686, "publicationVenue": {"id": "55899451-b8ad-4bdb-9db0-eba418d791f7",
      "name": "International Conference on Computer Communications and Networks",
      "type": "conference", "alternate_names": ["Int Conf Comput Commun Netw", "ICCCN"],
      "url": "http://www.wikicfp.com/cfp/program?id=1303"}, "url": "https://www.semanticscholar.org/paper/1969cf39be068d0d62009d5550223790cadc4426",
      "title": "mck8s: An orchestration platform for geo-distributed multi-cluster
      environments", "abstract": "Following the adoption of cloud computing, the proliferation
      of cloud data centers in multiple regions, and the emergence of computing paradigms
      such as fog computing, there is a need for integrated and efficient management
      of geo-distributed clusters. Geo-distributed deployments suffer from resource
      fragmentation, as the resources in certain locations are over-allocated while
      others are under-utilized. Orchestration platforms such as Kubernetes and Kubernetes
      Federation offer the conceptual models and building blocks that can be used
      to build integrated solutions that address the resource fragmentation challenge.
      In this work, we propose mck8s \u2013 an orchestration platform for multi-cluster
      applications on multiple geo-distributed Kubernetes clusters. It offers controllers
      that automatically place, scale, and burst multi-cluster applications across
      multiple geo-distributed Kubernetes clusters. mck8s allocates the requested
      resources to all incoming applications while making efficient use of resources.
      We designed mck8s to be easy to use by development and operation teams by adopting
      Kubernetes\u2019 design principles and manifest files. We evaluated mck8s in
      a geo-distributed experimental testbed in Grid\u20195000. Our results show that
      mck8s balances the resource allocation across multiple clusters and reduces
      the fraction of pending pods to 6% as opposed to 65% in the case of Kubernetes
      Federation for the same workload.", "venue": "International Conference on Computer
      Communications and Networks", "year": 2021, "referenceCount": 25, "citationCount":
      16, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://hal.inria.fr/hal-03205743/file/main.pdf", "status": "GREEN"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Environmental Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2021-07-01", "journal": {"name": "2021 International Conference
      on Computer Communications and Networks (ICCCN)", "pages": "1-10"}, "citationStyles":
      {"bibtex": "@Article{Tamiru2021mck8sAO,\n author = {Mulugeta Ayalew Tamiru and
      G. Pierre and Johan Tordsson and E. Elmroth},\n booktitle = {International Conference
      on Computer Communications and Networks},\n journal = {2021 International Conference
      on Computer Communications and Networks (ICCCN)},\n pages = {1-10},\n title
      = {mck8s: An orchestration platform for geo-distributed multi-cluster environments},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "151139369", "name": "Mulugeta
      Ayalew Tamiru"}, {"authorId": "145074982", "name": "G. Pierre"}, {"authorId":
      "2548512", "name": "Johan Tordsson"}, {"authorId": "1685517", "name": "E. Elmroth"}]},
      {"paperId": "19887996f55a26a4f4dbd0e2d524160220b58c38", "externalIds": {"DBLP":
      "conf/icimtech/QausarSGA23", "DOI": "10.1109/ICIMTech59029.2023.10277948", "CorpusId":
      264292461}, "corpusId": 264292461, "publicationVenue": {"id": "4802a885-b293-4af7-b45f-fabb2d74652a",
      "name": "International Conference on Information Management and Technology",
      "type": "conference", "alternate_names": ["ICIMTech", "Int Conf Inf Manag Technol"],
      "url": "https://ieeexplore.ieee.org/xpl/conhome/1817505/all-proceedings"}, "url":
      "https://www.semanticscholar.org/paper/19887996f55a26a4f4dbd0e2d524160220b58c38",
      "title": "Software Metrics for Container-Based Applications: Systematic Literature
      Review", "abstract": "Containerization has become a popular approach in application
      development in applications development and deployment, many benefits we can
      get such as improved scalability, portability, and resource efficiency. Container-based
      applications, utilizing technologies like Docker and Kubernetes, have transformed
      the packaging, deployment, and management of software from the desktop environment
      to the cloud platform. In this context, software metrics approach plays a good
      role in evaluating the characteristics and performance of container-based applications,
      ensuring that developers and operators are on the same page. This article explores
      the importance of software metrics in optimizing the software lifecycle of container-based
      applications, addressing the unique challenges they present, and highlighting
      the potential benefits of leveraging metrics to improve performance and efficiency.
      Our finding Performance Metrics and Availability Metrics is the most metrics
      that the most measure by applications owner, relevant studies and industry practices,
      this study aims to provide insights and recommendations to effectively measure
      and optimize region-based software systems.", "venue": "International Conference
      on Information Management and Technology", "year": 2023, "referenceCount": 25,
      "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference",
      "Review"], "publicationDate": "2023-08-24", "journal": {"name": "2023 International
      Conference on Information Management and Technology (ICIMTech)", "pages": "125-130"},
      "citationStyles": {"bibtex": "@Article{Qausar2023SoftwareMF,\n author = {Muhammad
      Juan Al Qausar and Haryono Soeparno and F. Gaol and Yulyani Arifin},\n booktitle
      = {International Conference on Information Management and Technology},\n journal
      = {2023 International Conference on Information Management and Technology (ICIMTech)},\n
      pages = {125-130},\n title = {Software Metrics for Container-Based Applications:
      Systematic Literature Review},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2261752246", "name": "Muhammad Juan Al Qausar"}, {"authorId": "2085415998",
      "name": "Haryono Soeparno"}, {"authorId": "1794392", "name": "F. Gaol"}, {"authorId":
      "116879422", "name": "Yulyani Arifin"}]}, {"paperId": "1995dfc0619534ace5109d4eb9d2867e91fe5479",
      "externalIds": {"DBLP": "conf/srds/SchmidtREF23", "DOI": "10.1109/SRDS60354.2023.00022",
      "CorpusId": 266695468}, "corpusId": 266695468, "publicationVenue": {"id": "a5003fc4-eef0-4a12-be46-7516f12c4554",
      "name": "IEEE International Symposium on Reliable Distributed Systems", "type":
      "conference", "alternate_names": ["Symposium on Reliable Distributed Systems",
      "IEEE Int Symp Reliab Distrib Syst", "SRDS", "Symp Reliab Distrib Syst"], "url":
      "https://en.wikipedia.org/wiki/International_Symposium_on_Reliable_Distributed_Systems"},
      "url": "https://www.semanticscholar.org/paper/1995dfc0619534ace5109d4eb9d2867e91fe5479",
      "title": "Transparent Fault Tolerance for Stateful Applications in Kubernetes
      with Checkpoint/Restore", "abstract": "This paper presents a solution providing
      fault tolerance for stateful containerized applications that is transparent,
      i.e., the application does not require to structure or manage its state in any
      particular fashion. In the case of faults, such as node crashes or node isolation,
      the application resumes execution on another node. The solution relies on a
      Kubernetes operator and a tool to periodically checkpoint containers and restore
      from the latest checkpoints in case of a node failure. Experimental evaluations
      reveal the trade-offs between over-head due to checkpointing, i.e., CPU load,
      memory, network bandwidth, reduced availability, and the performance during
      recovery, i.e., outage time, state quality. Compared to a non-transparent solution,
      the transparent solution yields similar downtimes and state quality at an increased
      overhead.", "venue": "IEEE International Symposium on Reliable Distributed Systems",
      "year": 2023, "referenceCount": 42, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-09-25", "journal": {"name": "2023 42nd International Symposium on Reliable
      Distributed Systems (SRDS)", "pages": "129-139"}, "citationStyles": {"bibtex":
      "@Article{Schmidt2023TransparentFT,\n author = {Henri Schmidt and Zeineb Rejiba
      and Raphael Eidenbenz and Klaus-Tycho F\u00f6rster},\n booktitle = {IEEE International
      Symposium on Reliable Distributed Systems},\n journal = {2023 42nd International
      Symposium on Reliable Distributed Systems (SRDS)},\n pages = {129-139},\n title
      = {Transparent Fault Tolerance for Stateful Applications in Kubernetes with
      Checkpoint/Restore},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2277258981",
      "name": "Henri Schmidt"}, {"authorId": "3363541", "name": "Zeineb Rejiba"},
      {"authorId": "2277274747", "name": "Raphael Eidenbenz"}, {"authorId": "2217633318",
      "name": "Klaus-Tycho F\u00f6rster"}]}, {"paperId": "19e72935e7fc36bdc52116cb9db51722ba997abf",
      "externalIds": {"MAG": "2884123196", "DOI": "10.3139/9783446456020.003", "CorpusId":
      188573618}, "corpusId": 188573618, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/19e72935e7fc36bdc52116cb9db51722ba997abf",
      "title": "Pods: Container in Kubernetes ausf\u00fchren", "abstract": null, "venue":
      "Kubernetes in Action", "year": 2018, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Art", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2018-07-09", "journal": {"name":
      "Kubernetes in Action"}, "citationStyles": {"bibtex": "@Article{Luk\u0161a2018PodsCI,\n
      author = {Marko Luk\u0161a},\n booktitle = {Kubernetes in Action},\n journal
      = {Kubernetes in Action},\n title = {Pods: Container in Kubernetes ausf\u00fchren},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "79519972", "name": "Marko Luk\u0161a"}]},
      {"paperId": "19fa9e33a2a2b5e46c97c3f21771a3885b897771", "externalIds": {"DBLP":
      "conf/eurosys/SalmaniGSRMDJS23", "ArXiv": "2304.10892", "DOI": "10.1145/3578356.3592578",
      "CorpusId": 258291564}, "corpusId": 258291564, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/19fa9e33a2a2b5e46c97c3f21771a3885b897771",
      "title": "Reconciling High Accuracy, Cost-Efficiency, and Low Latency of Inference
      Serving Systems", "abstract": "The use of machine learning (ML) inference for
      various applications is growing drastically. ML inference services engage with
      users directly, requiring fast and accurate responses. Moreover, these services
      face dynamic workloads of requests, imposing changes in their computing resources.
      Failing to right-size computing resources results in either latency service
      level objectives (SLOs) violations or wasted computing resources. Adapting to
      dynamic workloads considering all the pillars of accuracy, latency, and resource
      cost is challenging. In response to these challenges, we propose InfAdapter,
      which proactively selects a set of ML model variants with their resource allocations
      to meet latency SLO while maximizing an objective function composed of accuracy
      and cost. InfAdapter decreases SLO violation and costs up to 65% and 33%, respectively,
      compared to a popular industry autoscaler (Kubernetes Vertical Pod Autoscaler).",
      "venue": "EuroMLSys@EuroSys", "year": 2023, "referenceCount": 34, "citationCount":
      5, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://qmro.qmul.ac.uk/xmlui/bitstream/123456789/85868/2/Doyle%20Reconciling%20High%20Accuracy%202023%20Accepted.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science", "Engineering"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2023-04-21",
      "journal": {"name": "Proceedings of the 3rd Workshop on Machine Learning and
      Systems"}, "citationStyles": {"bibtex": "@Article{Salmani2023ReconcilingHA,\n
      author = {Mehran Salmani and Saeid Ghafouri and Alireza Sanaee and Kamran Razavi
      and M. Muhlhauser and Joseph Doyle and Pooyan Jamshidi and Mohsen Sharif Iran
      University of Science and Technology and Queen Mary University London and Technical
      University of Darmstadt and U. O. N. Carolina},\n booktitle = {EuroMLSys@EuroSys},\n
      journal = {Proceedings of the 3rd Workshop on Machine Learning and Systems},\n
      title = {Reconciling High Accuracy, Cost-Efficiency, and Low Latency of Inference
      Serving Systems},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2215167252",
      "name": "Mehran Salmani"}, {"authorId": "148049087", "name": "Saeid Ghafouri"},
      {"authorId": "2112676773", "name": "Alireza Sanaee"}, {"authorId": "2034016831",
      "name": "Kamran Razavi"}, {"authorId": "3566290", "name": "M. Muhlhauser"},
      {"authorId": "145662461", "name": "Joseph Doyle"}, {"authorId": "31948108",
      "name": "Pooyan Jamshidi"}, {"authorId": "2215168327", "name": "Mohsen Sharif
      Iran University of Science"}, {"authorId": "2133449242", "name": "Technology"},
      {"authorId": "7151103", "name": "Queen Mary University London"}, {"authorId":
      "1432737542", "name": "Technical University of Darmstadt"}, {"authorId": "73196202",
      "name": "U. O. N. Carolina"}]}, {"paperId": "1a3a7c6d9f3fe171b0ea8c4cccbc8aa6ea8d0db3",
      "externalIds": {"MAG": "3173403313", "DOI": "10.1007/978-1-4842-6998-5_3", "CorpusId":
      237991785}, "corpusId": 237991785, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1a3a7c6d9f3fe171b0ea8c4cccbc8aa6ea8d0db3",
      "title": "Getting Up to Speed with Kubernetes", "abstract": null, "venue": "Introducing
      Distributed Application Runtime (Dapr)", "year": 2021, "referenceCount": 0,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "Introducing
      Distributed Application Runtime (Dapr)"}, "citationStyles": {"bibtex": "@Article{Gatev2021GettingUT,\n
      author = {Radoslav Gatev},\n booktitle = {Introducing Distributed Application
      Runtime (Dapr)},\n journal = {Introducing Distributed Application Runtime (Dapr)},\n
      title = {Getting Up to Speed with Kubernetes},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2115173130", "name": "Radoslav Gatev"}]}, {"paperId": "1a3d98fc548ca580a77f786b8608ca7be1a74167",
      "externalIds": {"DOI": "10.1007/978-1-4842-5519-3_3", "CorpusId": 242556409},
      "corpusId": 242556409, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1a3d98fc548ca580a77f786b8608ca7be1a74167",
      "title": "Inside Kubernetes", "abstract": null, "venue": "Introducing Azure
      Kubernetes Service", "year": 2019, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Business", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2019-12-10", "journal": {"name":
      "Introducing Azure Kubernetes Service"}, "citationStyles": {"bibtex": "@Article{Buchanan2019InsideK,\n
      author = {Steve Buchanan and Janaka Rangama and Ned Bellavance},\n booktitle
      = {Introducing Azure Kubernetes Service},\n journal = {Introducing Azure Kubernetes
      Service},\n title = {Inside Kubernetes},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "14244223", "name": "Steve Buchanan"}, {"authorId": "66925155",
      "name": "Janaka Rangama"}, {"authorId": "1453137264", "name": "Ned Bellavance"}]},
      {"paperId": "1a4233ed6dd8705ada348813febd0e15daa334a1", "externalIds": {"DOI":
      "10.3390/app12178411", "CorpusId": 251821019}, "corpusId": 251821019, "publicationVenue":
      {"id": "136edf8d-0f88-4c2c-830f-461c6a9b842e", "name": "Applied Sciences", "type":
      "journal", "alternate_names": ["Appl Sci"], "issn": "2076-3417", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-217814",
      "alternate_urls": ["http://www.mathem.pub.ro/apps/", "https://www.mdpi.com/journal/applsci",
      "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-217814"]}, "url":
      "https://www.semanticscholar.org/paper/1a4233ed6dd8705ada348813febd0e15daa334a1",
      "title": "A System for Sustainable Usage of Computing Resources Leveraging Deep
      Learning Predictions", "abstract": "In this paper, we present the benefit of
      using deep learning time-series analysis techniques in order to reduce computing
      resource usage, with the final goal of having greener and more sustainable data
      centers. Modern enterprises and agile ways-of-working have led to a complete
      revolution of the way that software engineers develop and deploy software, with
      the proliferation of container-based technology, such as Kubernetes and Docker.
      Modern systems tend to use up a large amount of resources, even when idle, and
      intelligent scaling is one of the methods that could be used to prevent waste.
      We have developed a system for predicting and influencing computer resource
      usage based on historical data of real production software systems at CERN,
      allowing us to scale down the number of machines or containers running a certain
      service during periods that have been identified as idle. The system leverages
      recurring neural network models in order to accurately predict the future usage
      of a software system given its past activity. Using the data obtained from conducting
      several experiments with the forecasted data, we present the potential reductions
      on the carbon footprint of these computing services, from the perspective of
      CPU usage. The results show significant improvements to the computing power
      usage of the service (60% to 80%) as opposed to just keeping machines running
      or using simple heuristics that do not look too far into the past.", "venue":
      "Applied Sciences", "year": 2022, "referenceCount": 25, "citationCount": 1,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.mdpi.com/2076-3417/12/17/8411/pdf?version=1661342168", "status":
      "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2022-08-23", "journal": {"name":
      "Applied Sciences"}, "citationStyles": {"bibtex": "@Article{Cioca2022ASF,\n
      author = {M. Cioca and Ioan Cristian Schuszter},\n booktitle = {Applied Sciences},\n
      journal = {Applied Sciences},\n title = {A System for Sustainable Usage of Computing
      Resources Leveraging Deep Learning Predictions},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2648246", "name": "M. Cioca"}, {"authorId": "51886462", "name":
      "Ioan Cristian Schuszter"}]}, {"paperId": "1a6d3c07fd33f1478ed89b0e63b0dd1824bd8a12",
      "externalIds": {"DBLP": "conf/eScience/MaciulaitisSBHH19", "MAG": "3011377832",
      "DOI": "10.1109/eScience.2019.00091", "CorpusId": 204922213}, "corpusId": 204922213,
      "publicationVenue": {"id": "7ec19773-02ec-4b44-bd9d-338e6da82040", "name": "eScience",
      "type": "journal", "alternate_names": ["IEEE International Conference on eScience",
      "IEEE Int Conf escience"], "issn": "2667-1417", "url": "https://www.keaipublishing.com/en/journals/escience/"},
      "url": "https://www.semanticscholar.org/paper/1a6d3c07fd33f1478ed89b0e63b0dd1824bd8a12",
      "title": "Support for HTCondor high-Throughput Computing Workflows in the REANA
      Reusable Analysis Platform", "abstract": "REANA is a reusable and reproducible
      data analysis platform allowing researchers to structure their analysis pipelines
      and run them on remote containerised compute clouds. REANA supports several
      different workflows systems (CWL, Serial, Yadage) and uses Kubernetes'' job
      execution backend. We have designed an abstract job execution component that
      extends the REANA platform job execution capabilities to support multiple compute
      backends. We have tested the abstract job execution component with HTCondor
      and verified the scalability of the designed solution. The results show that
      the REANA platform would be able to support hybrid scientific workflows where
      different parts of the analysis pipelines can be executed on multiple computing
      backends.", "venue": "eScience", "year": 2019, "referenceCount": 7, "citationCount":
      8, "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": {"url":
      "http://cds.cern.ch/record/2695179/files/Poster-2019-942.pdf", "status": "GREEN"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2019-09-01", "journal":
      {"name": "2019 15th International Conference on eScience (eScience)", "pages":
      "630-631"}, "citationStyles": {"bibtex": "@Article{Maciulaitis2019SupportFH,\n
      author = {Rokas Maciulaitis and T. Simko and P. Brenner and Scott S. Hampton
      and M. Hildreth and K. H. Anampa and Irena Johnson and Cody Kankel and Jan Okraska
      and D. Rodr\u00edguez},\n booktitle = {eScience},\n journal = {2019 15th International
      Conference on eScience (eScience)},\n pages = {630-631},\n title = {Support
      for HTCondor high-Throughput Computing Workflows in the REANA Reusable Analysis
      Platform},\n year = {2019}\n}\n"}, "authors": [{"authorId": "71464519", "name":
      "Rokas Maciulaitis"}, {"authorId": "71856618", "name": "T. Simko"}, {"authorId":
      "7924527", "name": "P. Brenner"}, {"authorId": "17034283", "name": "Scott S.
      Hampton"}, {"authorId": "69857300", "name": "M. Hildreth"}, {"authorId": "93253825",
      "name": "K. H. Anampa"}, {"authorId": "2060080702", "name": "Irena Johnson"},
      {"authorId": "19293982", "name": "Cody Kankel"}, {"authorId": "1413510642",
      "name": "Jan Okraska"}, {"authorId": "2064654476", "name": "D. Rodr\u00edguez"}]},
      {"paperId": "1a725e6ebbcc4548c3f1ce16dc45157bb5034daa", "externalIds": {"DBLP":
      "conf/middleware/0038PW019", "MAG": "2989868947", "DOI": "10.1145/3361525.3361534",
      "CorpusId": 208277853}, "corpusId": 208277853, "publicationVenue": {"id": "911e7332-8ea8-4e9d-bc20-5572a2523f92",
      "name": "International Middleware Conference", "type": "conference", "alternate_names":
      ["Middleware", "ACM/IFIP/USENIX int conf Middlew", "ACM/IFIP/USENIX international
      conference on Middleware", "Int Middlew Conf"], "url": "https://dl.acm.org/conference/middleware/proceedings"},
      "url": "https://www.semanticscholar.org/paper/1a725e6ebbcc4548c3f1ce16dc45157bb5034daa",
      "title": "OS-Augmented Oversubscription of Opportunistic Memory with a User-Assisted
      OOM Killer", "abstract": "Exploiting opportunistic memory by oversubscription
      is an appealing approach to improving cluster utilization and throughput. In
      this paper, we find the efficacy of memory oversubscription depends on whether
      or not the oversubscribed tasks can be killed by an OutOf Memory (OOM) killer
      in a timely manner to avoid significant memory thrashing upon memory pressure.
      However, current approaches in modern cluster schedulers are actually unable
      to unleash the power of opportunistic memory because their user space OOM killers
      are unable to timely deliver a task killing signal to terminate the oversubscribed
      tasks. Our experiments observe that a user space OOM killer fails to do that
      because of lacking the memory pressure knowledge from OS while the kernel space
      Linux OOM killer is too conservative to relieve memory pressure. In this paper,
      we design a user-assisted OOM killer (namely UA killer) in kernel space, an
      OS augmentation for accurate thrashing detection and agile task killing. To
      identify a thrashing task, UA killer features a novel mechanism, constraint
      thrashing. Upon UA killer, we develop Charon, a cluster scheduler for oversubscription
      of opportunistic memory in an on-demand manner. We implement Charon upon Mercury,
      a state-of-the-art opportunistic cluster scheduler. Extensive experiments with
      a Google trace in a 26-node cluster show that Charon can: (1) achieve agile
      task killing, (2) improve the best-effort job throughput by 3.5X over Mercury
      while prioritizing the production jobs, and (3) improve the 90th job completion
      time of production jobs over Kubernetes opportunistic scheduler by 62%.", "venue":
      "International Middleware Conference", "year": 2019, "referenceCount": 41, "citationCount":
      8, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3361525.3361534", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Book", "JournalArticle"], "publicationDate": "2019-12-09", "journal": {"name":
      "Proceedings of the 20th International Middleware Conference"}, "citationStyles":
      {"bibtex": "@Book{Chen2019OSAugmentedOO,\n author = {Wei Chen and Aidi Pi and
      Shaoqi Wang and Xiaobo Zhou},\n booktitle = {International Middleware Conference},\n
      journal = {Proceedings of the 20th International Middleware Conference},\n title
      = {OS-Augmented Oversubscription of Opportunistic Memory with a User-Assisted
      OOM Killer},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2283009", "name":
      "Wei Chen"}, {"authorId": "40377061", "name": "Aidi Pi"}, {"authorId": "1891284",
      "name": "Shaoqi Wang"}, {"authorId": "46224002", "name": "Xiaobo Zhou"}]}, {"paperId":
      "1a9d109ba292c2d9759977816d29d6d735e19040", "externalIds": {"DBLP": "journals/corr/abs-2309-09822",
      "ArXiv": "2309.09822", "DOI": "10.48550/arXiv.2309.09822", "CorpusId": 262045702},
      "corpusId": 262045702, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/1a9d109ba292c2d9759977816d29d6d735e19040",
      "title": "Is the Computing Continuum Already Here?", "abstract": "The computing
      continuum, a novel paradigm that extends beyond the current silos of cloud and
      edge computing, can enable the seamless and dynamic deployment of applications
      across diverse infrastructures. By utilizing the cloud-native features and scalability
      of Kubernetes, this concept promotes deployment transparency, communication
      transparency, and resource availability transparency. Key features of this paradigm
      include intent-driven policies, a decentralized architecture, multi-ownership,
      and a fluid topology. Integral to the computing continuum are the building blocks
      of dynamic discovery and peering, hierarchical resource continuum, resource
      and service reflection, network continuum, and storage and data continuum. The
      implementation of these principles allows organizations to foster an efficient,
      dynamic, and seamless computing environment, thereby facilitating the deployment
      of complex distributed applications across varying infrastructures.", "venue":
      "arXiv.org", "year": 2023, "referenceCount": 14, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2309.09822",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-09-18", "journal":
      {"name": "ArXiv", "volume": "abs/2309.09822"}, "citationStyles": {"bibtex":
      "@Article{Marino2023IsTC,\n author = {Jacopo Marino and Fulvio Risso},\n booktitle
      = {arXiv.org},\n journal = {ArXiv},\n title = {Is the Computing Continuum Already
      Here?},\n volume = {abs/2309.09822},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2243193006", "name": "Jacopo Marino"}, {"authorId": "2240973101", "name": "Fulvio
      Risso"}]}, {"paperId": "1ab230ddfed5ec22b0458379e2b727f852899c41", "externalIds":
      {"CorpusId": 253222775}, "corpusId": 253222775, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/1ab230ddfed5ec22b0458379e2b727f852899c41",
      "title": "Managing Deployed Containerized Web Application on AWS Using EKS on
      AWS Fargate", "abstract": ": One of the most critical concepts in the information
      technology world is cloud computing, and many organizations and companies have
      moved toward using it recently. These organizations need to perform updates
      on scalable containerized applications without affecting their availability
      and providing the best experience to their customers. Amazon Web Services (AWS)
      is one of the popular cloud computing platforms, and it offers many on-demand
      services to individuals, companies, and organizations. Another concept involved
      in this project is containerized application, and it has many benefits including,
      consistency, cost-effective and scalability. This project aims to demonstrate
      through the use of Amazon Elastic Kubernetes Service (Amazon EKS) on AWS Fargate
      how organizations can build, deploy and manage containerized web applications
      in a manner that is uncomplicated, reliable, and scalable. The Rolling update
      deployment strategy was performed, and Kubernetes Horizontal Pod Autoscaler
      (HAP) was used to automatically scale the number of pods based on CPU utilization
      in this project. The outcome of this project is to accomplish zero-downtime
      when performing a rolling update deployment.", "venue": "", "year": 2021, "referenceCount":
      24, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{Algarni2021ManagingDC,\n
      author = {Abdullah M. Algarni},\n title = {Managing Deployed Containerized Web
      Application on AWS Using EKS on AWS Fargate},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2072112315", "name": "Abdullah M. Algarni"}]}, {"paperId": "1acf177d16e18cab1caa5f8e71aa225669bc6cf8",
      "externalIds": {"DOI": "10.1109/JCC59055.2023.00013", "CorpusId": 261434451},
      "corpusId": 261434451, "publicationVenue": {"id": "28aa8a6f-d172-4e36-bd3a-aa9e6fc32a9c",
      "name": "Fall Joint Computer Conference", "type": "conference", "alternate_names":
      ["Fall joint computer conference", "Fall jt comput conf", "Fall Jt Comput Conf",
      "FJCC", "JCC"]}, "url": "https://www.semanticscholar.org/paper/1acf177d16e18cab1caa5f8e71aa225669bc6cf8",
      "title": "Fault Tolerance of Stateful Microservices for Industrial Edge Scenarios",
      "abstract": "Due to the ubiquitous increase of Industrial Internet of Things(IIoT)
      devices, there is a tendency to move some of the microservices-based applications
      from Cloud to Edge. However, edge devices are prone to node failures because
      of weak reliability, resulting in the loss of stateful microservices computing
      state, which may involve fault tolerance of stateful microservices. Moreover,
      the method of traditional mechanisms for microservices fault tolerance could
      not meet the real-time requirement. Within this context, based on stateful microservices
      characteristics, we propose a novel fault tolerant mechanism for IIoT Edge,
      which mainly consists of causal logging and distributed checkpoint algorithm.
      This fault recovery mechanism utilizes causal logging to record the nondeterministic
      events of microservices, and completes the state recovery of microservices by
      loading checkpoint and replaying log records, which achieves exactly-once guarantees
      for distributed microservices. In addition, a set of experiments was performed
      to evaluate the proposed mechanism by integration with Kubernetes. The results
      show that the proposed mechanism has less impact on service performance compared
      with other methods.", "venue": "Fall Joint Computer Conference", "year": 2023,
      "referenceCount": 17, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2023-07-01",
      "journal": {"name": "2023 IEEE International Conference on Joint Cloud Computing
      (JCC)", "pages": "50-56"}, "citationStyles": {"bibtex": "@Conference{Jia2023FaultTO,\n
      author = {Yuke Jia and Tiejun Wang and Tianbo Qiu and Xiaohan Zhang and Rui
      Wang and Tianyu Wo},\n booktitle = {Fall Joint Computer Conference},\n journal
      = {2023 IEEE International Conference on Joint Cloud Computing (JCC)},\n pages
      = {50-56},\n title = {Fault Tolerance of Stateful Microservices for Industrial
      Edge Scenarios},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2237065964",
      "name": "Yuke Jia"}, {"authorId": "2186267988", "name": "Tiejun Wang"}, {"authorId":
      "2236935060", "name": "Tianbo Qiu"}, {"authorId": "2237111808", "name": "Xiaohan
      Zhang"}, {"authorId": "2152682196", "name": "Rui Wang"}, {"authorId": "2592610",
      "name": "Tianyu Wo"}]}, {"paperId": "1b0ad568a1c5bee2ca500b09d8c8c106b88b2af6",
      "externalIds": {"DBLP": "conf/middleware/WongZZK19", "MAG": "2990444211", "DOI":
      "10.1145/3366614.3368101", "CorpusId": 208157538}, "corpusId": 208157538, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/1b0ad568a1c5bee2ca500b09d8c8c106b88b2af6",
      "title": "Container deployment strategy for edge networking", "abstract": "Edge
      computing paradigm has been proposed to support latency-sensitive applications
      such as Augmented Reality (AR)/ Virtual Reality(VR) and online gaming, by placing
      computing resources close to where they are most demanded, at the edge of the
      network. Many solutions have proposed to deploy virtual resources as close as
      possible to the consumers using virtual machines and containers. However, the
      most popular container orchestration tools, e.g., Docker Swarm and Kubernetes,
      do not take into account the locality aspect during deployment, resulting in
      poor location choices at the edge of the network. In this paper, we propose
      an edge deployment strategy to tackle the lack of locality awareness of the
      container orchestrator. In this strategy, the orchestrator collects information
      about latency and the real-time resource consumption from the current container
      deployments, providing a bird''s-eye view of the most demanded locations and
      the best places for deployment to cover the largest number of clients. We evaluated
      the proposed model using 16 AWS regions across the globe and compared to the
      standard deployment strategies. The experimental results show our edge strategy
      reduces the average latency between serving container to the clients by up to
      4 times compared to the standard deployment algorithms.", "venue": "MECC@Middleware",
      "year": 2019, "referenceCount": 14, "citationCount": 11, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "https://helda.helsinki.fi/bitstream/10138/340347/1/bricklayer.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2019-12-09",
      "journal": {"name": "Proceedings of the 4th Workshop on Middleware for Edge
      Clouds & Cloudlets"}, "citationStyles": {"bibtex": "@Article{Wong2019ContainerDS,\n
      author = {Walter Wong and Aleksandr Zavodovski and Pengyuan Zhou and J. Kangasharju},\n
      booktitle = {MECC@Middleware},\n journal = {Proceedings of the 4th Workshop
      on Middleware for Edge Clouds & Cloudlets},\n title = {Container deployment
      strategy for edge networking},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "40147073", "name": "Walter Wong"}, {"authorId": "41034277", "name": "Aleksandr
      Zavodovski"}, {"authorId": "72050450", "name": "Pengyuan Zhou"}, {"authorId":
      "1750871", "name": "J. Kangasharju"}]}, {"paperId": "1b13712e54a98e1c709f12596507ee1e4e2107ae",
      "externalIds": {"DBLP": "conf/eucnc/ToniniNTGWM23", "DOI": "10.1109/EuCNC/6GSummit58263.2023.10188268",
      "CorpusId": 260172680}, "corpusId": 260172680, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/1b13712e54a98e1c709f12596507ee1e4e2107ae",
      "title": "A Service-Aware Autoscaling Strategy for Container Orchestration Platforms
      with Soft Resource Isolation", "abstract": "Container orchestration platforms
      like Kubernetes (K8s) allow easy deployment and management of cloud native services.
      When deploying their services, service providers need to specify a proper amount
      of resources to K8s, so that the desired Quality of Service (QoS) to their users
      can be maintained. To cope with the varying traffic demand coming from users,
      they can rely on the K8s Horizontal Pod Autoscaling (HPA) mechanism. To ensure
      that enough resources are available when needed, the standard HPA mechanism
      relies on resource overprovisioning. In this way, the required QoS is achieved
      most of (or all) the time but at the expense of additional resources that are
      allocated (and charged for), while they may stay idle for significant periods
      of time. A way to reduce overprovisioning is provided by the soft resource isolation
      of K8s, which allows services to compensate for a temporary lack of resources
      with shared resources, i.e., idle resources of the machines where services are
      running. However, during traffic spikes, these idle resources may not be enough
      to serve the whole demand, degrading the QoS. The HPA, which is not aware of
      how much demand could not be served, is not always able to correctly estimate
      the required additional resources, further degrading the QoS. To overcome this,
      service providers need to leverage overprovisioning, limiting the use of shared
      resources. In this paper, we propose a novel mechanism for autoscaling resources
      in K8s that relies on service-related data to avoid the additional degradation
      introduced by the HPA. The proposed strategy also offers a way to tune overprovisioning
      and shared resources. Simulation results show that our approach can reduce idle
      resources by up to 60% compared with the HPA mechanism.", "venue": "2023 Joint
      European Conference on Networks and Communications & 6G Summit (EuCNC/6G Summit)",
      "year": 2023, "referenceCount": 12, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2023-06-06", "journal": {"name": "2023 Joint European Conference
      on Networks and Communications & 6G Summit (EuCNC/6G Summit)", "pages": "454-459"},
      "citationStyles": {"bibtex": "@Article{Tonini2023ASA,\n author = {F. Tonini
      and Carlos Natalino and D. Temesgene and Z. Ghebretensae and L. Wosinska and
      P. Monti},\n booktitle = {2023 Joint European Conference on Networks and Communications
      & 6G Summit (EuCNC/6G Summit)},\n journal = {2023 Joint European Conference
      on Networks and Communications & 6G Summit (EuCNC/6G Summit)},\n pages = {454-459},\n
      title = {A Service-Aware Autoscaling Strategy for Container Orchestration Platforms
      with Soft Resource Isolation},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "3380706", "name": "F. Tonini"}, {"authorId": "48306584", "name": "Carlos Natalino"},
      {"authorId": "144531666", "name": "D. Temesgene"}, {"authorId": "2581508", "name":
      "Z. Ghebretensae"}, {"authorId": "1781828", "name": "L. Wosinska"}, {"authorId":
      "1763240", "name": "P. Monti"}]}, {"paperId": "1b1c0bb378cfa50155e2c6cf0452bd5427b11e39",
      "externalIds": {"MAG": "2995306477", "DBLP": "conf/csit/YakovynaUB19", "DOI":
      "10.1109/STC-CSIT.2019.8929863", "CorpusId": 209335588}, "corpusId": 209335588,
      "publicationVenue": {"id": "1268cf6f-971e-46d2-aaef-1621574eacf6", "name": "International
      Conference on Computer Science and Information Technologies", "type": "conference",
      "alternate_names": ["IEEE Int Conf Comput Sci Inf Technol", "International Conference
      on Computer Science and Information Technology", "ICCSIT", "IEEE International
      Conference on Computer Science and Information Technology", "CSIT", "Int Conf
      Comput Sci Inf Technol"], "url": "https://csit.ieee.org.ua/"}, "url": "https://www.semanticscholar.org/paper/1b1c0bb378cfa50155e2c6cf0452bd5427b11e39",
      "title": "Software Failures Forecasting by Holt - Winters, ARIMA and NNAR Methods",
      "abstract": "This paper describes the results of software failures prediction
      using regression (Auto-Regressive Integrated Moving Average, ARIMA), smoothing
      (Holt - Winters) and neural networks (Neural Network Auto-Regressive, NNAR)
      models. GitHub service was used as a data source, and the failures time-series
      of the Kubernetes project was chosen for this study. Both cumulative and noncumulative,
      7- and 14-days'' time series were used. The best forecasting accuracy was reached
      using the NNAR method for noncumulative 14-days'' time-series.", "venue": "International
      Conference on Computer Science and Information Technologies", "year": 2019,
      "referenceCount": 23, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2019-09-01", "journal": {"name": "2019 IEEE
      14th International Conference on Computer Sciences and Information Technologies
      (CSIT)", "pages": "151-155", "volume": "2"}, "citationStyles": {"bibtex": "@Article{Yakovyna2019SoftwareFF,\n
      author = {V. Yakovyna and B. Uhrynovskyi and Oleksandr Bachkai},\n booktitle
      = {International Conference on Computer Science and Information Technologies},\n
      journal = {2019 IEEE 14th International Conference on Computer Sciences and
      Information Technologies (CSIT)},\n pages = {151-155},\n title = {Software Failures
      Forecasting by Holt - Winters, ARIMA and NNAR Methods},\n volume = {2},\n year
      = {2019}\n}\n"}, "authors": [{"authorId": "2938325", "name": "V. Yakovyna"},
      {"authorId": "2047390038", "name": "B. Uhrynovskyi"}, {"authorId": "81453657",
      "name": "Oleksandr Bachkai"}]}, {"paperId": "1b2a20ae92a5cda6e2fe57dad27ce4e85d6c777e",
      "externalIds": {"DBLP": "journals/access/NguyenDR21", "DOI": "10.1109/ACCESS.2021.3135315",
      "CorpusId": 245178575}, "corpusId": 245178575, "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26",
      "name": "IEEE Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/1b2a20ae92a5cda6e2fe57dad27ce4e85d6c777e",
      "title": "Scaling UPF Instances in 5G/6G Core with Deep Reinforcement Learning",
      "abstract": "In the 5G core and the upcoming 6G core, the User Plane Function
      (UPF) is responsible for the transportation of data from and to subscribers
      in Protocol Data Unit (PDU) sessions. The UPF is generally implemented in software
      and packed into either a virtual machine or container that can be launched as
      a UPF instance with a specific resource requirement in a cluster. To save resource
      consumption needed for UPF instances, the number of initiated UPF instances
      should depend on the number of PDU sessions required by customers, which is
      often controlled by a scaling algorithm. In this paper, we investigate the application
      of Deep Reinforcement Learning (DRL) for scaling UPF instances that are packed
      in the containers of the Kubernetes container-orchestration framework. We propose
      an approach with the formulation of a threshold-based reward function and adapt
      the proximal policy optimization (PPO) algorithm. Also, we apply a support vector
      machine (SVM) classifier to cope with a problem when the agent suggests an unwanted
      action due to the stochastic policy. Extensive numerical results show that our
      approach outperforms Kubernetes\u2019s built-in Horizontal Pod Autoscaler (HPA).
      DRL could save 2.7\u20133.8% of the average number of Pods, while SVM could
      achieve 0.7\u20134.5% saving compared to HPA.", "venue": "IEEE Access", "year":
      2021, "referenceCount": 46, "citationCount": 9, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/6287639/6514899/09648317.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "IEEE Access", "pages": "1-1", "volume": "PP"}, "citationStyles": {"bibtex":
      "@Article{Nguyen2021ScalingUI,\n author = {Hai T. Nguyen and T. V. Do and C.
      Rotter},\n booktitle = {IEEE Access},\n journal = {IEEE Access},\n pages = {1-1},\n
      title = {Scaling UPF Instances in 5G/6G Core with Deep Reinforcement Learning},\n
      volume = {PP},\n year = {2021}\n}\n"}, "authors": [{"authorId": "50343147",
      "name": "Hai T. Nguyen"}, {"authorId": "1748685", "name": "T. V. Do"}, {"authorId":
      "1862846", "name": "C. Rotter"}]}, {"paperId": "1b5abedbb9224c9a5db9b8d74533c1cec20886b4",
      "externalIds": {"DBLP": "journals/algorithms/DeckerKK22", "DOI": "10.3390/a15070234",
      "CorpusId": 250257544}, "corpusId": 250257544, "publicationVenue": {"id": "e95c8d18-09be-464f-a3cf-5b2637f0eff6",
      "name": "Algorithms", "type": "journal", "issn": "1999-4893", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-150910",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-150910",
      "http://www.mdpi.com/journal/algorithms", "http://www.mdpi.com/journal/algorithms/"]},
      "url": "https://www.semanticscholar.org/paper/1b5abedbb9224c9a5db9b8d74533c1cec20886b4",
      "title": "Performance Evaluation of Open-Source Serverless Platforms for Kubernetes",
      "abstract": "Serverless computing has grown massively in popularity over the
      last few years, and has provided developers with a way to deploy function-sized
      code units without having to take care of the actual servers or deal with logging,
      monitoring, and scaling of their code. High-performance computing (HPC) clusters
      can profit from improved serverless resource sharing capabilities compared to
      reservation-based systems such as Slurm. However, before running self-hosted
      serverless platforms in HPC becomes a viable option, serverless platforms must
      be able to deliver a decent level of performance. Other researchers have already
      pointed out that there is a distinct lack of studies in the area of comparative
      benchmarks on serverless platforms, especially for open-source self-hosted platforms.
      This study takes a step towards filling this gap by systematically benchmarking
      two promising self-hosted Kubernetes-based serverless platforms in comparison.
      While the resulting benchmarks signal potential, they demonstrate that many
      opportunities for performance improvements in serverless computing are being
      left on the table.", "venue": "Algorithms", "year": 2022, "referenceCount":
      18, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/1999-4893/15/7/234/pdf?version=1657104195",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-07-02", "journal":
      {"name": "Algorithms", "pages": "234", "volume": "15"}, "citationStyles": {"bibtex":
      "@Article{Decker2022PerformanceEO,\n author = {Jonathan Decker and P. Kasprzak
      and J. Kunkel},\n booktitle = {Algorithms},\n journal = {Algorithms},\n pages
      = {234},\n title = {Performance Evaluation of Open-Source Serverless Platforms
      for Kubernetes},\n volume = {15},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "143801067", "name": "Jonathan Decker"}, {"authorId": "2069726067", "name":
      "P. Kasprzak"}, {"authorId": "1682255", "name": "J. Kunkel"}]}, {"paperId":
      "1b72c8df0f37d4c301e893c9b511960b9eb57ffb", "externalIds": {"MAG": "2985027001",
      "DBLP": "conf/edge/ChenHC19", "DOI": "10.1145/3318216.3363375", "CorpusId":
      203587400}, "corpusId": 203587400, "publicationVenue": {"id": "c60f6e64-434b-4c82-931d-faefcb362d4c",
      "name": "IFIP International Information Security Conference", "type": "conference",
      "alternate_names": ["Symp Edge Comput", "Symposium on Edge Computing", "Inf
      Secur", "Information Security", "IFIP Int Inf Secur Conf", "SEC"], "url": "http://www.tc11.uni-frankfurt.de/",
      "alternate_urls": ["https://acm-ieee-sec.org"]}, "url": "https://www.semanticscholar.org/paper/1b72c8df0f37d4c301e893c9b511960b9eb57ffb",
      "title": "Informer: irregular traffic detection for containerized microservices
      RPC in the real world", "abstract": "Containerized microservices have been widely
      deployed in industry. Meanwhile, security issues also arise. Many security enhancement
      mechanisms for containerized microservices require predefined rules and policies.
      However, it is challenging when it comes to thousands of microservices and a
      massive amount of real-time unstructured data. Hence, automatic policy generation
      becomes indispensable. In this paper, we focus on the automatic solution for
      the security problem: irregular traffic detection for RPCs. We propose Informer,
      which is a two-phase machine learning framework to track the traffic of each
      RPC and report anomalous points automatically. Firstly, we identify RPC chain
      patterns by density-based clustering techniques and build a graph for each critical
      pattern. Next, we solve the irregular RPC traffic detection problem as a prediction
      problem for time-series of attributed graphs by leveraging spatial-temporal
      graph convolution networks. Since the framework builds multiple models and makes
      individual predictions for each RPC chain pattern, it can be efficiently updated
      upon legitimate changes in any of the graphs. In evaluations, we applied Informer
      to a dataset containing more than 7 billion lines of raw RPC logs sampled from
      an large Kubernetes system for two weeks. We provide two case studies of detected
      real-world threats. As a result, our framework found fine-grained RPC chain
      patterns and accurately captured the anomalies in a dynamic and complicated
      microservice production scenario, which demonstrates the effectiveness of Informer.",
      "venue": "IFIP International Information Security Conference", "year": 2019,
      "referenceCount": 23, "citationCount": 12, "influentialCitationCount": 3, "isOpenAccess":
      true, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2019-11-07", "journal": {"name": "Proceedings of the 4th
      ACM/IEEE Symposium on Edge Computing"}, "citationStyles": {"bibtex": "@Book{Chen2019InformerIT,\n
      author = {Jiyu Chen and Heqing Huang and Hao Chen},\n booktitle = {IFIP International
      Information Security Conference},\n journal = {Proceedings of the 4th ACM/IEEE
      Symposium on Edge Computing},\n title = {Informer: irregular traffic detection
      for containerized microservices RPC in the real world},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "67313577", "name": "Jiyu Chen"}, {"authorId": "2146258472",
      "name": "Heqing Huang"}, {"authorId": "2149051171", "name": "Hao Chen"}]}, {"paperId":
      "1b733fddb370e38f89e17dddefb015c61fa2459d", "externalIds": {"DBLP": "conf/nsdi/KarthikeyanNSZB23",
      "CorpusId": 253525863}, "corpusId": 253525863, "publicationVenue": {"id": "38e1b942-a62d-4d74-8e5d-677db6ed425f",
      "name": "Symposium on Networked Systems Design and Implementation", "type":
      "conference", "alternate_names": ["NSDI", "Symp Networked Syst Des Implement",
      "Networked Systems Design and Implementation", "Networked Syst Des Implement"]},
      "url": "https://www.semanticscholar.org/paper/1b733fddb370e38f89e17dddefb015c61fa2459d",
      "title": "SelfTune: Tuning Cluster Managers", "abstract": "Large-scale cloud
      providers rely on cluster managers for container allocation and load balancing
      (e.g., Kubernetes), VM provisioning (e.g., Protean), and other management tasks.
      These cluster managers use algorithms or heuristics whose behavior depends upon
      multiple configuration parameters Currently, operators manually set these parameters
      using a combination of domain knowledge and limited testing. In very large-scale
      and dynamic environments, these manually-set parameters may lead to sub-optimal
      cluster states, adversely affecting important metrics such as latency and throughput.
      In this paper we describe SelfTune , a framework that automatically tunes such
      parameters in deployment. SelfTune piggybacks on the iterative nature of cluster
      managers which, through multiple iterations, drives a cluster to a desired state.
      Using a simple interface, developers integrate SelfTune into the cluster manager
      code, which then uses a principled reinforcement learning algorithm to tune
      important parameters over time. We have deployed SelfTune on tens of thousands
      of machines that run a large-scale background task scheduler at Microsoft. SelfTune
      has improved throughput by as much as 20% in this deployment 9 by continuously
      tuning a key configuration parameter that determines the number of jobs concurrently
      accessing CPU and disk on every machine. We also evaluate SelfTune with two
      Azure FaaS workloads, the Kubernetes Vertical Pod Autoscaler, and the DeathStar
      microservice benchmark. In all cases, SelfTune significantly improves cluster
      performance.", "venue": "Symposium on Networked Systems Design and Implementation",
      "year": 2023, "referenceCount": 54, "citationCount": 7, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": null, "journal": {"pages":
      "1097-1114"}, "citationStyles": {"bibtex": "@Article{Karthikeyan2023SelfTuneTC,\n
      author = {Ajaykrishna Karthikeyan and Nagarajan Natarajan and Gagan Somashekar
      and Lei Zhao and Ranjita Bhagwan and Rodrigo Fonseca and Tatiana Racheva and
      Y. Bansal},\n booktitle = {Symposium on Networked Systems Design and Implementation},\n
      pages = {1097-1114},\n title = {SelfTune: Tuning Cluster Managers},\n year =
      {2023}\n}\n"}, "authors": [{"authorId": "1814418467", "name": "Ajaykrishna Karthikeyan"},
      {"authorId": "145328735", "name": "Nagarajan Natarajan"}, {"authorId": "1454029001",
      "name": "Gagan Somashekar"}, {"authorId": "2111488803", "name": "Lei Zhao"},
      {"authorId": "2252388", "name": "Ranjita Bhagwan"}, {"authorId": "2058660494",
      "name": "Rodrigo Fonseca"}, {"authorId": "2190833000", "name": "Tatiana Racheva"},
      {"authorId": "2067170657", "name": "Y. Bansal"}]}, {"paperId": "1ba602451b0998954d02aa928a4458bed79357aa",
      "externalIds": {"MAG": "2996048242", "CorpusId": 213284240}, "corpusId": 213284240,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1ba602451b0998954d02aa928a4458bed79357aa",
      "title": "Hands-On Software Architecture with C# 8 and .NET Core 3", "abstract":
      "Design scalable and high-performance enterprise applications using the latest
      features of C# 8 and .NET Core 3\nKey Features\nBecome a software architect
      capable of creating modular apps for specific business needs\n\nDesign high-performance
      software systems using the latest features of C# 8 and .NET Core 3\n\nSolve
      scalability problems in web apps using enterprise architectural patterns\nBook
      Description\nSoftware architecture is the practice of implementing structures
      and systems that streamline the software development process and improve the
      quality of an app. With this software architecture book, you''ll follow a hands-on
      approach to learning various architectural methods that will help you develop
      and deliver high-quality products.\n\nYou''ll begin by understanding how to
      transform user requirements into architectural needs and exploring the differences
      between functional and non-functional requirements. Next, you''ll explore how
      to carefully choose a cloud solution for your infrastructure, along with covering
      dos and don''ts that will help you manage your app in a cloud-based environment.
      Later chapters will cover techniques and processes such as DevOps, microservices,
      and continuous integration, along with providing insights into implementing
      them using Microsoft technologies such as ASP.NET Core, the Entity Framework,
      Cosmos DB, and Azure DevOps. You will also learn about testing frameworks and
      automation tools that will help you through the development process. Finally,
      you''ll discover design patterns and various software approaches that will allow
      you to solve common problems faced during development.\n\nBy the end of this
      book, you''ll be able to develop and deliver highly scalable enterprise-ready
      apps that meet customers'' business needs.\nWhat you will learn\nOvercome real-world
      architectural challenges and solve design consideration issues\n\nApply architectural
      approaches like Layered Architecture, service-oriented architecture (SOA), and
      microservices\n\nLearn to use tools like containers, Docker, and Kubernetes
      to manage microservices\n\nGet up to speed with Azure Cosmos DB for delivering
      multi-continental solutions\n\nLearn how to program and maintain Azure Functions
      using C#\n\nUnderstand when to use test-driven development (TDD) as an approach
      for software development\n\nWrite automated functional test cases for your projects\nWho
      this book is for\nThis book is for engineers and senior developers aspiring
      to become architects or looking to build enterprise applications with the .NET
      Stack. Experience with C# and .NET is required to understand this book.", "venue":
      "", "year": 2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Baptista2019HandsOnSA,\n author = {G. Baptista and
      F. Abbruzzese},\n title = {Hands-On Software Architecture with C# 8 and .NET
      Core 3},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2058905852", "name":
      "G. Baptista"}, {"authorId": "48295675", "name": "F. Abbruzzese"}]}, {"paperId":
      "1ba8bc294268d7f16b44d85aa9b9e49c9a69552d", "externalIds": {"DBLP": "journals/jcloudc/ZhouGPZZNPMH21",
      "DOI": "10.1186/s13677-021-00231-z", "CorpusId": 231992516}, "corpusId": 231992516,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1ba8bc294268d7f16b44d85aa9b9e49c9a69552d",
      "title": "Container orchestration on HPC systems through Kubernetes", "abstract":
      null, "venue": "Journal of Cloud Computing", "year": 2021, "referenceCount":
      69, "citationCount": 22, "influentialCitationCount": 1, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://journalofcloudcomputing.springeropen.com/track/pdf/10.1186/s13677-021-00231-z",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-02-22", "journal":
      {"name": "Journal of Cloud Computing", "volume": "10"}, "citationStyles": {"bibtex":
      "@Article{Zhou2021ContainerOO,\n author = {Naweiluo Zhou and Yiannis Georgiou
      and M. Pospieszny and Li Zhong and Huan Zhou and Christoph Niethammer and B.
      Pejak and Oskar Marko and Dennis Hoppe},\n booktitle = {Journal of Cloud Computing},\n
      journal = {Journal of Cloud Computing},\n title = {Container orchestration on
      HPC systems through Kubernetes},\n volume = {10},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "30917917", "name": "Naweiluo Zhou"}, {"authorId": "3262245",
      "name": "Yiannis Georgiou"}, {"authorId": "2803713", "name": "M. Pospieszny"},
      {"authorId": "1752782049", "name": "Li Zhong"}, {"authorId": "2146382377", "name":
      "Huan Zhou"}, {"authorId": "2504379", "name": "Christoph Niethammer"}, {"authorId":
      "146292591", "name": "B. Pejak"}, {"authorId": "2099491812", "name": "Oskar
      Marko"}, {"authorId": "30717536", "name": "Dennis Hoppe"}]}, {"paperId": "1bd31208395dbf552f664f57b69ccec1055d76c4",
      "externalIds": {"MAG": "2936258890", "DOI": "10.3390/jmse7040110", "CorpusId":
      146363117}, "corpusId": 146363117, "publicationVenue": {"id": "fff3549c-df24-4aef-accb-a33ae442a828",
      "name": "Journal of Marine Science and Engineering", "type": "journal", "alternate_names":
      ["J Mar Sci Eng"], "issn": "2077-1312", "url": "https://www.mdpi.com/journal/jmse"},
      "url": "https://www.semanticscholar.org/paper/1bd31208395dbf552f664f57b69ccec1055d76c4",
      "title": "Analysis and Visualization of Coastal Ocean Model Data in the Cloud",
      "abstract": "The traditional flow of coastal ocean model data is from High-Performance
      Computing (HPC) centers to the local desktop, or to a file server where just
      the needed data can be extracted via services such as OPeNDAP. Analysis and
      visualization are then conducted using local hardware and software. This requires
      moving large amounts of data across the internet as well as acquiring and maintaining
      local hardware, software, and support personnel. Further, as data sets increase
      in size, the traditional workflow may not be scalable. Alternatively, recent
      advances make it possible to move data from HPC to the Cloud and perform interactive,
      scalable, data-proximate analysis and visualization, with simply a web browser
      user interface. We use the framework advanced by the NSF-funded Pangeo project,
      a free, open-source Python system which provides multi-user login via JupyterHub
      and parallel analysis via Dask, both running in Docker containers orchestrated
      by Kubernetes. Data are stored in the Zarr format, a Cloud-friendly n-dimensional
      array format that allows performant extraction of data by anyone without relying
      on data services like OPeNDAP. Interactive visual exploration of data on complex,
      large model grids is made possible by new tools in the Python PyViz ecosystem,
      which can render maps at screen resolution, dynamically updating on pan and
      zoom operations. Two examples are given: (1) Calculating the maximum water level
      at each grid cell from a 53-GB, 720-time-step, 9-million-node triangular mesh
      ADCIRC simulation of Hurricane Ike; (2) Creating a dashboard for visualizing
      data from a curvilinear orthogonal COAWST/ROMS forecast model.", "venue": "Journal
      of Marine Science and Engineering", "year": 2019, "referenceCount": 20, "citationCount":
      10, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.mdpi.com/2077-1312/7/4/110/pdf?version=1555658141", "status": "GOLD"},
      "fieldsOfStudy": ["Geology"], "s2FieldsOfStudy": [{"category": "Geology", "source":
      "external"}, {"category": "Environmental Science", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2019-04-19",
      "journal": {"name": "Journal of Marine Science and Engineering"}, "citationStyles":
      {"bibtex": "@Article{Signell2019AnalysisAV,\n author = {R. Signell and Dharhas
      Pothina},\n booktitle = {Journal of Marine Science and Engineering},\n journal
      = {Journal of Marine Science and Engineering},\n title = {Analysis and Visualization
      of Coastal Ocean Model Data in the Cloud},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "2585185", "name": "R. Signell"}, {"authorId": "70100752", "name":
      "Dharhas Pothina"}]}, {"paperId": "1c1a150f789e738394a891fbcd172081599b5a48",
      "externalIds": {"DBLP": "journals/jcnc/Nsafoa-YeboahTY22", "DOI": "10.1155/2022/5037702",
      "CorpusId": 251361411}, "corpusId": 251361411, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/1c1a150f789e738394a891fbcd172081599b5a48",
      "title": "Software-Defined Networks for Optical Networks Using Flexible Orchestration:
      Advances, Challenges, and Opportunities", "abstract": "Optical networks offer
      a wide range of benefits to the telecommunication sector worldwide with their
      provision of higher bandwidth, which leads to faster data speed, longer transmission
      distance, and improved latency. Currently, the complexity associated with advancements
      in optical networks poses problems to network flexibility, reliability, and
      quality of service. Over the years, many reviews and proposals have been implemented
      by several literature studies to provide solutions for optical networks using
      software-defined networks and network service orchestrators. This study reviews
      the significant challenges in current optical network applications, the various
      solutions rendered by software-defined networks, and network service orchestration,
      impediments, and gaps in these software-defined networks. This study will go
      a step further to look into the various improvements and implementations of
      software-defined networks tailored to solve specific optical network problems.
      This study further proposes a flexible orchestration architecture for software-defined
      networks for solving flexibility and scalability problems in optical networks.
      This proposal uses an open network system (ONOS) SDN controller, leveraging
      on dockerisation and Kubernetes clusterisation and orchestration. This solution
      presents a more flexible, reliable, customable, and higher quality of service,
      which is an improvement upon current solutions in the literature.", "venue":
      "J. Comput. Networks Commun.", "year": 2022, "referenceCount": 137, "citationCount":
      7, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://downloads.hindawi.com/journals/jcnc/2022/5037702.pdf", "status": "GOLD"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Review"], "publicationDate": "2022-08-04", "journal": {"name":
      "J. Comput. Networks Commun.", "pages": "5037702:1-5037702:40", "volume": "2022"},
      "citationStyles": {"bibtex": "@Article{Nsafoa-Yeboah2022SoftwareDefinedNF,\n
      author = {Kenneth Nsafoa-Yeboah and E. T. Tchao and Bright Yeboah-Akowuah and
      Benjamin Kommey and A. S. Agbemenu and Eliel Keelson and Mohammad Monirujjaman
      Khan},\n booktitle = {J. Comput. Networks Commun.},\n journal = {J. Comput.
      Networks Commun.},\n pages = {5037702:1-5037702:40},\n title = {Software-Defined
      Networks for Optical Networks Using Flexible Orchestration: Advances, Challenges,
      and Opportunities},\n volume = {2022},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2180604794", "name": "Kenneth Nsafoa-Yeboah"}, {"authorId": "2416233", "name":
      "E. T. Tchao"}, {"authorId": "1403755219", "name": "Bright Yeboah-Akowuah"},
      {"authorId": "2122216274", "name": "Benjamin Kommey"}, {"authorId": "80637633",
      "name": "A. S. Agbemenu"}, {"authorId": "52160235", "name": "Eliel Keelson"},
      {"authorId": "2198482792", "name": "Mohammad Monirujjaman Khan"}]}, {"paperId":
      "1c360e40995f1b7fb6132bb580c1e87b9c244206", "externalIds": {"DBLP": "conf/models/AlfonsoGCC21",
      "DOI": "10.1109/MODELS-C53483.2021.00122", "CorpusId": 245513078}, "corpusId":
      245513078, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1c360e40995f1b7fb6132bb580c1e87b9c244206",
      "title": "Modeling self-adaptative IoT architectures", "abstract": "An Internet
      of Things (IoT) architecture describes a network of (physical) objects exchanging
      data over the Internet. In complex IoT deployments, as those typical of Industry
      4.0 systems, this architecture comprises four different layers: device, edge,
      fog, and cloud. Moreover, the composition and computation tasks assigned to
      each layer may dynamically evolve due to environmental changes.As such, modeling
      IoT architectures is a complex process that must cover as well the specification
      of self-adaptation rules to ensure the optimized execution of the IoT system.
      To facilitate this task, we propose a new IoT Domain-Specific Language (DSL)
      covering both the static and dynamic aspects of an IoT deployment. The definition
      of the DSL, its projectional-based editor and a first prototype of a Kubernetes
      manifest generator are available as open source software.", "venue": "2021 ACM/IEEE
      International Conference on Model Driven Engineering Languages and Systems Companion
      (MODELS-C)", "year": 2021, "referenceCount": 26, "citationCount": 6, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2021-10-01",
      "journal": {"name": "2021 ACM/IEEE International Conference on Model Driven
      Engineering Languages and Systems Companion (MODELS-C)", "pages": "761-766"},
      "citationStyles": {"bibtex": "@Article{Alfonso2021ModelingSI,\n author = {Iv\u00e1n
      Alfonso and Kelly Garc\u00e9s and Harold E. Castro and Jordi Cabot},\n booktitle
      = {2021 ACM/IEEE International Conference on Model Driven Engineering Languages
      and Systems Companion (MODELS-C)},\n journal = {2021 ACM/IEEE International
      Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)},\n
      pages = {761-766},\n title = {Modeling self-adaptative IoT architectures},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "1657993164", "name": "Iv\u00e1n
      Alfonso"}, {"authorId": "144105666", "name": "Kelly Garc\u00e9s"}, {"authorId":
      "1753697", "name": "Harold E. Castro"}, {"authorId": "144220398", "name": "Jordi
      Cabot"}]}, {"paperId": "1c7025d805a44b6d64049358e5b6f0aa4b99a837", "externalIds":
      {"DOI": "10.1109/ICCE-Asia53811.2021.9642004", "CorpusId": 245146472}, "corpusId":
      245146472, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1c7025d805a44b6d64049358e5b6f0aa4b99a837",
      "title": "Cloud-based ATC Platform Architecture Design Using Kubernetes", "abstract":
      "The current study discusses using Kubernetes to design an AI-based shared traffic
      data cloud platform and how to use it. The existing ATC platform provided VM-based
      services using KVM, but the new method constructs Kubernetes on VM and provides
      services through the Container. It allows users to access both the VM-based
      services and the Container-based services and administrators to manage resources
      more efficiently.", "venue": "2021 IEEE International Conference on Consumer
      Electronics-Asia (ICCE-Asia)", "year": 2021, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2021-11-01", "journal":
      {"name": "2021 IEEE International Conference on Consumer Electronics-Asia (ICCE-Asia)",
      "pages": "1-2"}, "citationStyles": {"bibtex": "@Conference{Choi2021CloudbasedAP,\n
      author = {J. Choi and S. Kim},\n booktitle = {2021 IEEE International Conference
      on Consumer Electronics-Asia (ICCE-Asia)},\n journal = {2021 IEEE International
      Conference on Consumer Electronics-Asia (ICCE-Asia)},\n pages = {1-2},\n title
      = {Cloud-based ATC Platform Architecture Design Using Kubernetes},\n year =
      {2021}\n}\n"}, "authors": [{"authorId": "14673263", "name": "J. Choi"}, {"authorId":
      "2155491641", "name": "S. Kim"}]}, {"paperId": "1c9a6680dd6d179cd8f36d1daa39c93d33d7fb2a",
      "externalIds": {"DBLP": "conf/rivf/LeTrungLN22", "DOI": "10.1109/RIVF55975.2022.10013821",
      "CorpusId": 255996807}, "corpusId": 255996807, "publicationVenue": {"id": "4bb92bad-912d-41ad-8249-a81483c297c6",
      "name": "Conference on Research, Innovation and Vision for the Future in Computing
      & Communication Technologies", "type": "conference", "alternate_names": ["Rencontres
      en Informatique Vietnam-France", "RIVF", "Conf Res Innov Vis Future Comput  Commun
      Technol", "Rencontres Inform Vietnam"]}, "url": "https://www.semanticscholar.org/paper/1c9a6680dd6d179cd8f36d1daa39c93d33d7fb2a",
      "title": "A Lightweight Smart Camera Solution for Covid-19", "abstract": "With
      the growth of IoT devices and edge computing technologies, a challenge is to
      deal with the network capacity and response latency in real-time applications.
      Such an approach to the solutions is to deploy the Artificial Intelligence (AI)
      and Internet of Thing (IoT) applications, namely AIoT and Internet of Things
      (IoT) applications at the edge. In this paper, we introduce a smart AIoT solution
      to support the control of covid-19 epidemic with two main features: social distance
      application to control social distance violators in different areas and facemask
      detection to identify violators who didn''t wear a mask. The proposed design
      architecture comprises three layers: the first one is the Centralized Cloud,
      which implements the backend, a web server connects to a secure database. The
      web dashboard helps the administrators manage the streams of surveillance cameras,
      visualize the number of social distance violators in different areas, and show
      recorded facemask violators in table for convenient; the second layer is the
      Edge, social distance and facemask services are packaged into Docker container
      and deployed in a lightweight Kubernetes (K3s) cluster which have GPU. The Cluster
      should be deployed on both Jetson Nano and Raspberry Pi 3 devices. This design
      intends to increase high availability, scalability, self-healing, resource utilization,
      stability, and automation deployment for the edge services; and the final layer
      - the End Devices, which includes multiple cameras connected directly to the
      AI services at Edge. These cameras help us collect and send data to the edge
      servers for analyzing purpose. The results show that the proposed system works
      correctly, edge services run at an acceptable framerate.", "venue": "Conference
      on Research, Innovation and Vision for the Future in Computing & Communication
      Technologies", "year": 2022, "referenceCount": 22, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Medicine",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-12-20", "journal":
      {"name": "2022 RIVF International Conference on Computing and Communication
      Technologies (RIVF)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Le-Trung2022ALS,\n
      author = {Quan Le-Trung and Thong Le-Minh and Huy Vo-Bao Nguyen},\n booktitle
      = {Conference on Research, Innovation and Vision for the Future in Computing
      & Communication Technologies},\n journal = {2022 RIVF International Conference
      on Computing and Communication Technologies (RIVF)},\n pages = {1-6},\n title
      = {A Lightweight Smart Camera Solution for Covid-19},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "1403334727", "name": "Quan Le-Trung"}, {"authorId":
      "2202019488", "name": "Thong Le-Minh"}, {"authorId": "2201875966", "name": "Huy
      Vo-Bao Nguyen"}]}, {"paperId": "1ceb1942910a3a67f2b2401dffde062c16fa4c3c", "externalIds":
      {"DOI": "10.1002/spe.3284", "CorpusId": 263192655}, "corpusId": 263192655, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/1ceb1942910a3a67f2b2401dffde062c16fa4c3c",
      "title": "DRS: A deep reinforcement learning enhanced Kubernetes scheduler for
      microservice\u2010based system", "abstract": "Recently, Kubernetes is widely
      used to manage and schedule the resources of microservices in cloud\u2010native
      distributed applications, as the most famous container orchestration framework.
      However, Kubernetes preferentially schedules microservices to nodes with rich
      and balanced CPU and memory resources on a single node. The native scheduler
      of Kubernetes, called Kube\u2010scheduler, may cause resource fragmentation
      and decrease resource utilization. In this paper, we propose a deep reinforcement
      learning enhanced Kubernetes scheduler named DRS. We initially frame the Kubernetes
      scheduling problem as a Markov decision process with intricately designed state,
      action, and reward structures in an effort to increase resource usage and decrease
      load imbalance. Then, we design and implement DRS\u00a0mointor to perceive six
      parameters concerning resource utilization and create a thorough picture of
      all available resources globally. Finally, DRS\u00a0can automatically learn
      the scheduling policy through interaction with the Kubernetes cluster, without
      relying on expert knowledge about workload and cluster status. We implement
      a prototype of DRS\u00a0in a Kubernetes cluster with five nodes and evaluate
      its performance. Experimental results highlight that DRS\u00a0overcomes the
      shortcomings of Kube\u2010scheduler and achieves the expected scheduling target
      with three workloads. With only 3.27% CPU overhead and 0.648% communication
      delay, DRS\u00a0outperforms Kube\u2010scheduler by 27.29% in terms of resource
      utilization and reduces load imbalance by 2.90 times on average.", "venue":
      "Software: Practice and Experience", "year": 2023, "referenceCount": 38, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-25", "journal": {"name": "Software: Practice and Experience"}, "citationStyles":
      {"bibtex": "@Article{Jian2023DRSAD,\n author = {Zhaolong Jian and Xueshuo Xie
      and Yaozheng Fang and Yibing Jiang and Tao Li and Ye Lu},\n booktitle = {Software:
      Practice and Experience},\n journal = {Software: Practice and Experience},\n
      title = {DRS: A deep reinforcement learning enhanced Kubernetes scheduler for
      microservice\u2010based system},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2041827266", "name": "Zhaolong Jian"}, {"authorId": "150345022", "name": "Xueshuo
      Xie"}, {"authorId": "2008740288", "name": "Yaozheng Fang"}, {"authorId": "2249607252",
      "name": "Yibing Jiang"}, {"authorId": "50289773", "name": "Tao Li"}, {"authorId":
      "2115686269", "name": "Ye Lu"}]}, {"paperId": "1cf0868f196e847440a3a353f3e9fe7512a7cbab",
      "externalIds": {"DOI": "10.25286/repa.v8i2.2184", "CorpusId": 261788813}, "corpusId":
      261788813, "publicationVenue": {"id": "37a24501-8b05-419c-be31-3a7b857e5959",
      "name": "Revista de Engenharia e Pesquisa Aplicada", "alternate_names": ["Rev
      Eng Pesqui Apl"], "issn": "2525-4251", "url": "http://revistas.poli.br/index.php/repa/index"},
      "url": "https://www.semanticscholar.org/paper/1cf0868f196e847440a3a353f3e9fe7512a7cbab",
      "title": "Padroniza\u00e7\u00e3o de Implanta\u00e7\u00e3o de Sistema Eletr\u00f4nico
      de Informa\u00e7\u00f5es e Gest\u00e3o de Documentos (sei) Em Paas Kubernetes
      P\u00fablicas e Privadas", "abstract": "Esse artigo visa apresentar o projeto
      SEI-Kubernetes que modifica o paradigma arquitetural monol\u00edtico em sistema
      do governo, que apesar de ser um sistema est\u00e1vel e funcional, possui desafios
      diretamente ligados a arquitetura atual. A ado\u00e7\u00e3o de microsservi\u00e7os
      para o Projeto SEI-Kubernetes constitui um excelente avan\u00e7o na melhoria
      da configura\u00e7\u00e3o e instala\u00e7\u00e3o de sistemas de mesmo tipo,
      al\u00e9m de otimizar os recursos computacionais existentes. O estudo apresentado
      demonstra que os tempos para configura\u00e7\u00e3o e instala\u00e7\u00e3o do
      ambiente podem ser reduzidos consideravelmente. Vale destacar que \u00e9 poss\u00edvel
      empregar esse conceito amplamente em diversos centros de processamento de dados
      do Governo Brasileiro, que faz uso da mesma tecnologia de gest\u00e3o de processos
      e arquivamento eletr\u00f4nico de documentos. Esta nova abordagem na arquitetura
      do sistema SEI se beneficia de computa\u00e7\u00e3o nas nuvens privadas, o que
      possibilita uma maior utiliza\u00e7\u00e3o dos servi\u00e7os existentes.", "venue":
      "Revista de Engenharia e Pesquisa Aplicada", "year": 2023, "referenceCount":
      15, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "http://revistas.poli.br/index.php/repa/article/download/2184/873",
      "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-05-31", "journal": {"name": "Revista
      de Engenharia e Pesquisa Aplicada"}, "citationStyles": {"bibtex": "@Article{Lima2023Padroniza\u00e7\u00e3oDI,\n
      author = {Carlos Lima and Igor Lima and Marcelo Lima and G. Callou},\n booktitle
      = {Revista de Engenharia e Pesquisa Aplicada},\n journal = {Revista de Engenharia
      e Pesquisa Aplicada},\n title = {Padroniza\u00e7\u00e3o de Implanta\u00e7\u00e3o
      de Sistema Eletr\u00f4nico de Informa\u00e7\u00f5es e Gest\u00e3o de Documentos
      (sei) Em Paas Kubernetes P\u00fablicas e Privadas},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "145141465", "name": "Carlos Lima"}, {"authorId": "2208540542",
      "name": "Igor Lima"}, {"authorId": "95806507", "name": "Marcelo Lima"}, {"authorId":
      "32045092", "name": "G. Callou"}]}, {"paperId": "1cf0c8c57b6268b440812f29cc2f28f0117d47ec",
      "externalIds": {"DBLP": "journals/computing/MohammedFR23", "MAG": "3190810079",
      "DOI": "10.1007/s00607-021-00985-z", "CorpusId": 238295451}, "corpusId": 238295451,
      "publicationVenue": {"id": "48433268-b689-457a-8e57-36895fd4f04e", "name": "Computing",
      "type": "journal", "issn": "0010-485X", "url": "https://link.springer.com/journal/607"},
      "url": "https://www.semanticscholar.org/paper/1cf0c8c57b6268b440812f29cc2f28f0117d47ec",
      "title": "Special issue on \u2018\u2018artificial intelligence in cloud computing\u2019\u2019",
      "abstract": null, "venue": "Computing", "year": 2021, "referenceCount": 2, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://link.springer.com/content/pdf/10.1007/s00607-021-00985-z.pdf", "status":
      "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-08-09", "journal": {"name": "Computing", "pages": "507-511", "volume":
      "105"}, "citationStyles": {"bibtex": "@Article{Mohammed2021SpecialIO,\n author
      = {Sabah Mohammed and W. Fang and C. Ramos},\n booktitle = {Computing},\n journal
      = {Computing},\n pages = {507-511},\n title = {Special issue on \u2018\u2018artificial
      intelligence in cloud computing\u2019\u2019},\n volume = {105},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2143399405", "name": "Sabah Mohammed"}, {"authorId":
      "145359074", "name": "W. Fang"}, {"authorId": "2066065752", "name": "C. Ramos"}]},
      {"paperId": "1cff7191396d71e1be1925192f6982e23cdba60a", "externalIds": {"MAG":
      "3098349439", "ArXiv": "2002.01699", "DBLP": "journals/spe/BogoSNB20", "DOI":
      "10.1002/spe.2848", "CorpusId": 211031992}, "corpusId": 211031992, "publicationVenue":
      {"id": "3da56ce6-4a70-402c-a8b0-7dd39a3273d3", "name": "Software, Practice &
      Experience", "type": "journal", "alternate_names": ["Softw  Pract Exp", "Softw
      Pract  Exp", "Software - Practice and Experience"], "issn": "0038-0644", "url":
      "http://www3.interscience.wiley.com/cgi-bin/jhome/1752", "alternate_urls": ["http://www.interscience.wiley.com/jpages/0038-0644/",
      "https://onlinelibrary.wiley.com/journal/1097024X"]}, "url": "https://www.semanticscholar.org/paper/1cff7191396d71e1be1925192f6982e23cdba60a",
      "title": "Component\u2010aware orchestration of cloud\u2010based enterprise
      applications, from TOSCA to Docker and Kubernetes", "abstract": "Enterprise
      IT is currently facing the challenge of coordinating the management of complex,
      multicomponent applications across heterogeneous cloud platforms. Containers
      and container orchestrators provide a valuable solution to deploy multicomponent
      applications over cloud platforms, by coupling the lifecycle of each application
      component to that of its hosting container. We hereby propose a solution for
      going beyond such a coupling, based on the OASIS standard TOSCA and on Docker.
      We indeed propose a novel approach for deploying multicomponent applications
      on top of existing container orchestrators, which enables managing each component
      independently from the container used to run it. We also present prototype tools
      that implement our approach, and we show how we effectively exploited them to
      carry out a concrete case study.", "venue": "Software, Practice & Experience",
      "year": 2020, "referenceCount": 67, "citationCount": 15, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://arxiv.org/pdf/2002.01699",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-02-05", "journal":
      {"name": "Software: Practice and Experience", "pages": "1793 - 1821", "volume":
      "50"}, "citationStyles": {"bibtex": "@Article{Bogo2020ComponentawareOO,\n author
      = {Matteo Bogo and J. Soldani and Davide Neri and Antonio Brogi},\n booktitle
      = {Software, Practice & Experience},\n journal = {Software: Practice and Experience},\n
      pages = {1793 - 1821},\n title = {Component\u2010aware orchestration of cloud\u2010based
      enterprise applications, from TOSCA to Docker and Kubernetes},\n volume = {50},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "1491449284", "name": "Matteo
      Bogo"}, {"authorId": "2265546", "name": "J. Soldani"}, {"authorId": "49332476",
      "name": "Davide Neri"}, {"authorId": "1787701", "name": "Antonio Brogi"}]},
      {"paperId": "1d1109d661f051e1480f4beab74c4c5667f95c91", "externalIds": {"DOI":
      "10.1109/ISESD53023.2021.9501536", "CorpusId": 237000546}, "corpusId": 237000546,
      "publicationVenue": {"id": "5798ea82-7067-4aaf-95a4-336c1131e9f9", "name": "International
      Symposium on Electronic System Design", "type": "conference", "alternate_names":
      ["ISESD", "Int Symp Electron Smart Device", "Int Symp Electron Syst Des", "International
      Symposium Electronics and Smart Devices"]}, "url": "https://www.semanticscholar.org/paper/1d1109d661f051e1480f4beab74c4c5667f95c91",
      "title": "Real-time Monitoring System For Sudden Cardiac Death Based On Container
      Orchestration and Binary Serialization", "abstract": "Sudden Cardiac Death (SCD)
      is happening because the heart stops pumping the blood to the brain, lungs,
      et cetera, which will cause death within an hour. With this high risk and low
      survivability rate, real-time Internet of Things (IoT) monitoring systems have
      become a solution to tackle this problem. The system needs to be accessible
      at any time and condition by multiple users who bring up the needs of the availability
      and scalability of the system. Some research had been conducted on IoT monitoring
      system but still the result of availability and scalability not acceptable for
      a real-life scenario. The purpose of this research is to propose an architecture
      for a real-time IoT monitoring system for sudden cardiac death by using Kubernetes
      as the container orchestration and ProtocolBuffers as the Binary Serialization.
      The result shows us applying Kubernetes and ProtocolBuffers gives a good result
      with 100% successfully stored data and 50.5s end-to-end Execution time for 50000
      requests which reflect a high availability and fast system.", "venue": "International
      Symposium on Electronic System Design", "year": 2021, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Medicine", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2021-06-29", "journal": {"name": "2021 International Symposium on Electronics
      and Smart Devices (ISESD)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Surantha2021RealtimeMS,\n
      author = {N. Surantha and Wincent and Sani Muhamad Isa},\n booktitle = {International
      Symposium on Electronic System Design},\n journal = {2021 International Symposium
      on Electronics and Smart Devices (ISESD)},\n pages = {1-6},\n title = {Real-time
      Monitoring System For Sudden Cardiac Death Based On Container Orchestration
      and Binary Serialization},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2510146", "name": "N. Surantha"}, {"authorId": "2123090302", "name": "Wincent"},
      {"authorId": "1491120989", "name": "Sani Muhamad Isa"}]}, {"paperId": "1d31eee9acd4ea6f611b0b1300f409637cc8ce7a",
      "externalIds": {"ArXiv": "2306.14178", "DBLP": "journals/corr/abs-2306-14178",
      "DOI": "10.48550/arXiv.2306.14178", "CorpusId": 259251873}, "corpusId": 259251873,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/1d31eee9acd4ea6f611b0b1300f409637cc8ce7a",
      "title": "A Framework for dynamically meeting performance objectives on a service
      mesh", "abstract": "We present a framework for achieving end-to-end management
      objectives for multiple services that concurrently execute on a service mesh.
      We apply reinforcement learning (RL) techniques to train an agent that periodically
      performs control actions to reallocate resources. We develop and evaluate the
      framework using a laboratory testbed where we run information and computing
      services on a service mesh, supported by the Istio and Kubernetes platforms.
      We investigate different management objectives that include end-to-end delay
      bounds on service requests, throughput objectives, cost-related objectives,
      and service differentiation. We compute the control policies on a simulator
      rather than on the testbed, which speeds up the training time by orders of magnitude
      for the scenarios we study. Our proposed framework is novel in that it advocates
      a top-down approach whereby the management objectives are defined first and
      then mapped onto the available control actions. It allows us to execute several
      types of control actions simultaneously. By first learning the system model
      and the operating region from testbed traces, we can train the agent for different
      management objectives in parallel.", "venue": "arXiv.org", "year": 2023, "referenceCount":
      59, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "http://arxiv.org/pdf/2306.14178", "status": "CLOSED"},
      "fieldsOfStudy": ["Computer Science", "Engineering"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Engineering", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-06-25", "journal": {"name": "ArXiv",
      "volume": "abs/2306.14178"}, "citationStyles": {"bibtex": "@Article{Samani2023AFF,\n
      author = {Forough Shahab Samani and R. Stadler},\n booktitle = {arXiv.org},\n
      journal = {ArXiv},\n title = {A Framework for dynamically meeting performance
      objectives on a service mesh},\n volume = {abs/2306.14178},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "52398355", "name": "Forough Shahab Samani"}, {"authorId":
      "145376180", "name": "R. Stadler"}]}, {"paperId": "1d47b03b7889249592c8f009c049da9de4f63ba8",
      "externalIds": {"DOI": "10.31891/2307-5732-2022-313-5-260-264", "CorpusId":
      257014844}, "corpusId": 257014844, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1d47b03b7889249592c8f009c049da9de4f63ba8",
      "title": "IMPROVING THE EFFICIENCY OF AUTOMATION THE SCALING OF MICROSERVICES
      IN THE KUBERNETES CONTAINERIZED APPLICATION MANAGEMENT SYSTEM", "abstract":
      "Automatic container scaling in Kubernetes plays an important role in handling
      incoming requests from web application users. This article analyzes the stages
      of container scaling, their initialization and subsequent software launch. In
      order to achieve low latency of user requests in the case of dynamic load, the
      analysis of the process of automatic scaling of containers and the factors that
      will affect the scaling process was carried out. Having a full understanding
      of the processes and mechanisms by which scaling takes place, it became possible
      to develop a method and strategy for cleaning obstacles that slow down the autoscaling
      process itself and at the same time preserve the necessary properties of the
      existing scaling. Acceleration of scaling of containers, which will directly
      affect the speed of web services, becomes possible precisely because of the
      elimination of the delay in automatic scaling of containers. The work considered
      scaling optimization using not only container pre-creation networks, but also
      the use of container images, which enable the sharing of linked libraries in
      memory and the extension of Kubernetes\u2019 declarative configuration management
      approach for parallel creation of multiple container instances. Based on the
      obtained research results, a method for optimizing the automatic scaling of
      containerized applications by eliminating the delay during a cold start has
      been developed. This latency manifests itself in the case of microservice autoscaling,
      where Kubernetes is expected to scale containers horizontally by creating additional
      replicas to the required number to handle the required traffic from the outside.
      The delay caused by the autoscaler affects the processing time of the user\u2019s
      web service requests.", "venue": "Herald of Khmelnytskyi National University.
      Technical sciences", "year": 2022, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2022-10-27", "journal": {"name":
      "Herald of Khmelnytskyi National University. Technical sciences"}, "citationStyles":
      {"bibtex": "@Article{Mayevskij2022IMPROVINGTE,\n author = {Yaroslav Mayevskij
      and N. Pravorska},\n booktitle = {Herald of Khmelnytskyi National University.
      Technical sciences},\n journal = {Herald of Khmelnytskyi National University.
      Technical sciences},\n title = {IMPROVING THE EFFICIENCY OF AUTOMATION THE SCALING
      OF MICROSERVICES IN THE KUBERNETES CONTAINERIZED APPLICATION MANAGEMENT SYSTEM},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2208550684", "name": "Yaroslav
      Mayevskij"}, {"authorId": "2137419261", "name": "N. Pravorska"}]}, {"paperId":
      "1d537c82d3382bd63f79bebb6ee1cfdf885d42a0", "externalIds": {"MAG": "2980520905",
      "CorpusId": 208098023}, "corpusId": 208098023, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/1d537c82d3382bd63f79bebb6ee1cfdf885d42a0",
      "title": "GitOps, an Elegant Tool for Hybrid Cloud Kubernetes", "abstract":
      null, "venue": "", "year": 2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Cook2019GitOpsAE,\n
      author = {Ryan Cook},\n title = {GitOps, an Elegant Tool for Hybrid Cloud Kubernetes},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "2068896200", "name": "Ryan Cook"}]},
      {"paperId": "1d5e1abc21f979b1053fb66fd03d44d9c785f6a9", "externalIds": {"MAG":
      "2997591953", "DBLP": "conf/iwesep/MatsumotoHMAMK19", "DOI": "10.1109/IWESEP49350.2019.00015",
      "CorpusId": 209696447}, "corpusId": 209696447, "publicationVenue": {"id": "0fd2e056-58cc-4ac4-b707-b90ad89a32b3",
      "name": "International Workshop on Empirical Software Engineering in Practice",
      "type": "conference", "alternate_names": ["IWESEP", "Int Workshop Empir Softw
      Eng Pract"]}, "url": "https://www.semanticscholar.org/paper/1d5e1abc21f979b1053fb66fd03d44d9c785f6a9",
      "title": "GenProg Meets Cluster Computing", "abstract": "GenProg is an automated
      program repair tool that leverages genetic algorithm. In the repairing process
      of GenProg, a larger number of mutated programs are generated, built, and tested.
      If none of mutated programs passes all the test cases, GenProg redos the loop
      of generation, build and test. The build and test occupy over 90% of GenProg''s
      execution. In this paper, we introduce our cluster-based GenProg, which builds
      and tests in parallel with many computers. We have implemented the cluster-based
      GenProg with Kubernetes environment and applied it to real bugs in Defects4J
      dataset. As a result, we confirmed that the time required for program repair
      is reduced according to the number of computers in the cluster.", "venue": "International
      Workshop on Empirical Software Engineering in Practice", "year": 2019, "referenceCount":
      11, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2019-12-01", "journal": {"name": "2019 10th International
      Workshop on Empirical Software Engineering in Practice (IWESEP)", "pages": "37-375"},
      "citationStyles": {"bibtex": "@Article{Matsumoto2019GenProgMC,\n author = {Junnosuke
      Matsumoto and Yoshiki Higo and Hiroyuki Matsuo and Ryo Arima and S. Matsumoto
      and S. Kusumoto},\n booktitle = {International Workshop on Empirical Software
      Engineering in Practice},\n journal = {2019 10th International Workshop on Empirical
      Software Engineering in Practice (IWESEP)},\n pages = {37-375},\n title = {GenProg
      Meets Cluster Computing},\n year = {2019}\n}\n"}, "authors": [{"authorId": "46528688",
      "name": "Junnosuke Matsumoto"}, {"authorId": "2271908", "name": "Yoshiki Higo"},
      {"authorId": "2068544652", "name": "Hiroyuki Matsuo"}, {"authorId": "5898288",
      "name": "Ryo Arima"}, {"authorId": "1774171", "name": "S. Matsumoto"}, {"authorId":
      "49220716", "name": "S. Kusumoto"}]}, {"paperId": "1d6f8b721a2f45c3aecd5385046416ff37b819f9",
      "externalIds": {"DBLP": "conf/wcnc/QiZLJS23", "DOI": "10.1109/WCNC55385.2023.10119013",
      "CorpusId": 258641247}, "corpusId": 258641247, "publicationVenue": {"id": "27235614-bd3e-4d6b-be38-5ede18f4e209",
      "name": "IEEE Wireless Communications and Networking Conference", "type": "conference",
      "alternate_names": ["IEEE Wirel Commun Netw Conf", "WCNC", "Wireless Communications
      and Networking Conference", "Wirel Commun Netw Conf"], "url": "http://www.ieee-wcnc.org/"},
      "url": "https://www.semanticscholar.org/paper/1d6f8b721a2f45c3aecd5385046416ff37b819f9",
      "title": "Edge-edge Collaboration Based Micro-service Deployment in Edge Computing
      Networks", "abstract": "With the sixth generation (6G) proposal, collaboration
      at the edge of the Internet of Things (IoT) has been widely studied to coordinate
      limited edge resources. Kubernetes has emerged as a promising solution for flexible
      and efficient resource scheduling. However, the default scheduler of Kubernetes
      only allocates pods separately according to the resource utilization condition
      of the cluster, which ignores the effect of the correlation between micro-services
      on latency. Under this circumstance, we propose a micro-service deployment strategy
      based on edgeedge collaboration, which takes the correlation between micro-services
      into account and models it as Service Function Chain (SFC), aiming to reduce
      the delay and balance the utilization rate in the edge cluster. Furthermore,
      we propose a model-free Distributed Deep Reinforcement Learning Deployment (DDRLD)
      algorithm to solve the multi-objective optimization problem. The master node
      trains the Q network and updates the parameters to the other nodes in the cluster,
      where each node can determine the deploying decision separately. Simulation
      results show that the proposed scheduling strategy can reduce user delay while
      ensuring the balance of the utilization rate.", "venue": "IEEE Wireless Communications
      and Networking Conference", "year": 2023, "referenceCount": 19, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2023-03-01", "journal":
      {"name": "2023 IEEE Wireless Communications and Networking Conference (WCNC)",
      "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Qi2023EdgeedgeCB,\n
      author = {Junjie Qi and Heli Zhang and Xi Li and Hong Ji and Xun Shao},\n booktitle
      = {IEEE Wireless Communications and Networking Conference},\n journal = {2023
      IEEE Wireless Communications and Networking Conference (WCNC)},\n pages = {1-6},\n
      title = {Edge-edge Collaboration Based Micro-service Deployment in Edge Computing
      Networks},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2217032509", "name":
      "Junjie Qi"}, {"authorId": "2505473", "name": "Heli Zhang"}, {"authorId": "40286484",
      "name": "Xi Li"}, {"authorId": "46366695", "name": "Hong Ji"}, {"authorId":
      "2056133132", "name": "Xun Shao"}]}, {"paperId": "1d7b3f25e18273abd56cec780f07de878a21c453",
      "externalIds": {"DBLP": "conf/cnsm/MancaBPZSDFGSSTC23", "DOI": "10.23919/CNSM59352.2023.10327842",
      "CorpusId": 265500412}, "corpusId": 265500412, "publicationVenue": {"id": "7a0ab88e-224a-475b-9ea6-e66a6b3448c8",
      "name": "Conference on Network and Service Management", "type": "conference",
      "alternate_names": ["Conf Netw Serv Manag", "CNSM"], "url": "http://www.cnsm-conf.org/"},
      "url": "https://www.semanticscholar.org/paper/1d7b3f25e18273abd56cec780f07de878a21c453",
      "title": "Characterization of Microservice Response Time in Kubernetes: A Mixture
      Density Network Approach", "abstract": "The use of microservice-based applications
      is becoming more prominent also in the telecommunication field. The current
      5G core network, for instance, is already built around the concept of a \u201cService
      Based Architecture\u201d, and it is foreseeable that 6G will push even further
      this concept to enable more flexible and pervasive deployments. However, the
      increasing complexity of future networks calls for sophisticated platforms that
      could help network providers with their deployments design. In this framework,
      a central research trend is the development of digital twins of the physical
      infrastructures. These digital representations should closely mimic the behavior
      of the managed system, allowing the operators to test new configurations, analyze
      what-if scenarios, or train their reinforcement learning algorithms in safe
      environments. Considering that Kubernetes is becoming the de-facto standard
      platform for container orchestration and microservice-based application lifecycle
      management, the implementation of a Kubernetes digital twin requires an accurate
      characterization of the microservice response time, possibly leveraging suitable
      Machine Learning techniques trained with measurement data collected in the field.
      In this paper we introduce a new methodology, based on Mixture Density Networks,
      to accurately estimate the statistical distribution of the response time of
      microservice-based applications. We show the improvement in performance with
      respect to simulation-based inference procedures proposed in literature.", "venue":
      "Conference on Network and Service Management", "year": 2023, "referenceCount":
      23, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2023-10-30",
      "journal": {"name": "2023 19th International Conference on Network and Service
      Management (CNSM)", "pages": "1-9"}, "citationStyles": {"bibtex": "@Article{Manca2023CharacterizationOM,\n
      author = {Lorenzo Manca and D. Borsatti and Filippo Poltronieri and Mattia Zaccarini
      and Domenico Scotece and G. Davoli and Luca Foschini and G. Grabarnik and L.
      Shwartz and C. Stefanelli and M. Tortonesi and W. Cerroni},\n booktitle = {Conference
      on Network and Service Management},\n journal = {2023 19th International Conference
      on Network and Service Management (CNSM)},\n pages = {1-9},\n title = {Characterization
      of Microservice Response Time in Kubernetes: A Mixture Density Network Approach},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2268690814", "name": "Lorenzo
      Manca"}, {"authorId": "117434322", "name": "D. Borsatti"}, {"authorId": "51025749",
      "name": "Filippo Poltronieri"}, {"authorId": "2202590658", "name": "Mattia Zaccarini"},
      {"authorId": "29924476", "name": "Domenico Scotece"}, {"authorId": "30432635",
      "name": "G. Davoli"}, {"authorId": "2268694245", "name": "Luca Foschini"}, {"authorId":
      "29935018", "name": "G. Grabarnik"}, {"authorId": "1828069", "name": "L. Shwartz"},
      {"authorId": "1754846", "name": "C. Stefanelli"}, {"authorId": "2797581", "name":
      "M. Tortonesi"}, {"authorId": "1756511", "name": "W. Cerroni"}]}, {"paperId":
      "1d8052ba1d1d5ea44a29f44d65add88f059ea66b", "externalIds": {"DBLP": "conf/bigdataconf/ParkLOKWN22",
      "DOI": "10.1109/BigData55660.2022.10020539", "CorpusId": 256320388}, "corpusId":
      256320388, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1d8052ba1d1d5ea44a29f44d65add88f059ea66b",
      "title": "Real-time Multi-granular Analytics Framework for HIT Systems", "abstract":
      "Streaming analytics is the process of ingesting and digesting live data from
      multiple data sources. In the healthcare domain, as the importance of extracting
      immediate insights while data are streaming into the system grows, the focus
      is shifting from batch processing to streaming analytics. With data increasing
      dramatically at high speeds, many informatics designs have been proposed to
      adapt healthcare domain into this new environment. In our previous work, we
      introduced a prototype of health informatics technology (HIT) framework that
      aims to address challenges in adopting state-of-the-art technologies to enable
      advanced healthcare analytic tasks in new streaming environments. We recently
      made major updates to the framework so that anomaly from multiple streaming
      data sources at different granularity levels can be detected in near real-time.
      In this paper, we detail the implementation and deployment of the framework
      in Kubernetes clusters and report its performances when tested on electronic
      health record (EHR) data of Veterans Affairs.", "venue": "2022 IEEE International
      Conference on Big Data (Big Data)", "year": 2022, "referenceCount": 13, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Medicine", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-12-17", "journal":
      {"name": "2022 IEEE International Conference on Big Data (Big Data)", "pages":
      "3441-3446"}, "citationStyles": {"bibtex": "@Article{Park2022RealtimeMA,\n author
      = {Byung H. Park and Sangkeun Lee and \u00d6zg\u00fcr \u00d6zmen and Mohit Kumar
      and M. Ward and J. Nebeker},\n booktitle = {2022 IEEE International Conference
      on Big Data (Big Data)},\n journal = {2022 IEEE International Conference on
      Big Data (Big Data)},\n pages = {3441-3446},\n title = {Real-time Multi-granular
      Analytics Framework for HIT Systems},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2108015203", "name": "Byung H. Park"}, {"authorId": "2154280348", "name": "Sangkeun
      Lee"}, {"authorId": "2391323", "name": "\u00d6zg\u00fcr \u00d6zmen"}, {"authorId":
      "2156273018", "name": "Mohit Kumar"}, {"authorId": "39874698", "name": "M. Ward"},
      {"authorId": "145946916", "name": "J. Nebeker"}]}, {"paperId": "1d8c41b8b4ebe08f397cc791a2db943dc11bd531",
      "externalIds": {"DBLP": "conf/middleware/FariaM021", "DOI": "10.1145/3493649.3493653",
      "CorpusId": 244663670}, "corpusId": 244663670, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/1d8c41b8b4ebe08f397cc791a2db943dc11bd531",
      "title": "Pods-as-Volumes: Effortlessly Integrating Storage Systems and Middleware
      into Kubernetes", "abstract": "We present Pods-as-Volumes (PaV), a Kubernetes
      plugin that simplifies the implementation of storage volume provisioners by
      allowing all logic underlying the lifecycle and behavior of volumes to be specified
      as pod templates, which are then instantiated as needed to create, delete, and
      expose volumes to applications. PaV reduces the effort required to integrate
      storage systems into Kubernetes and enables the straightforward creation of
      storage middleware components, improving modularity and Kubernetes'' ability
      to manage storage stacks.", "venue": "WOC@Middleware", "year": 2021, "referenceCount":
      5, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "http://repositorio.inesctec.pt/bitstreams/2830ae86-9a1b-46b5-bb34-9d2c4f9799cf/download",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2021-12-06",
      "journal": {"name": "Proceedings of the Seventh International Workshop on Container
      Technologies and Container Clouds"}, "citationStyles": {"bibtex": "@Article{Faria2021PodsasVolumesEI,\n
      author = {Alberto Faria and Ricardo Macedo and J. Paulo},\n booktitle = {WOC@Middleware},\n
      journal = {Proceedings of the Seventh International Workshop on Container Technologies
      and Container Clouds},\n title = {Pods-as-Volumes: Effortlessly Integrating
      Storage Systems and Middleware into Kubernetes},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2061169303", "name": "Alberto Faria"}, {"authorId": "2073947633",
      "name": "Ricardo Macedo"}, {"authorId": "145026668", "name": "J. Paulo"}]},
      {"paperId": "1dbf4c933b5bd9b7b1b605603a709194db911fda", "externalIds": {"MAG":
      "2896317989", "DBLP": "conf/icac/ArnaboldiBS18", "DOI": "10.1109/ICAC.2018.00017",
      "CorpusId": 53023694}, "corpusId": 53023694, "publicationVenue": {"id": "28a83bf1-b6e5-416f-8c5a-fdc53e54f3a1",
      "name": "International Conference on Automation and Computing", "type": "conference",
      "alternate_names": ["IEEE International Conference on Autonomic Computing",
      "IEEE Int Conf Auton Comput", "Int Conf Autom Comput", "ICAC", "International
      Conference on Autonomic Computing", "Int Conf Auton Comput"], "url": "http://www.wikicfp.com/cfp/program?id=1269",
      "alternate_urls": ["https://acsos.github.io/"]}, "url": "https://www.semanticscholar.org/paper/1dbf4c933b5bd9b7b1b605603a709194db911fda",
      "title": "HyPPO: Hybrid Performance-Aware Power-Capping Orchestrator", "abstract":
      "Energy proportionality is the key in order to reduce the Total Cost of Ownership
      (TCO) of data-centers and on-premise systems, yet is difficult to achieve in
      practice due to workloads heterogeneity. Critical services require all the servers
      to remain up regardless the current traffic intensity in order to scale up quickly
      if needed. Furthermore, a minimum number of resources remain reserved to such
      services in order to guarantee the Service Level Agreement (SLA) in case of
      a sudden increase of requests. This situation makes most of the existing power
      management techniques ineffective at reducing power consumption, especially
      in under-utilized computing systems. In this paper we propose Hybrid Performance-aware
      Power-capping Orchestrator (HyPPO), a distributed Observe Decide Act (ODA) control
      loop able to introduce energy proportionality in a distributed and containerized
      infrastructure. HyPPO leverages Kubernetes resource requests (e.g. milli-cpus
      consumption) in order to dynamically adjust node power consumption, while respecting
      the SLA defined by the containerized application owners. The first experiments
      conducted in our laboratory shows that we are able to reduce power consumption
      of 25% on average, depending on the kind of workload. Furthermore, the defined
      SLA is violated 2.5% of the time on average.", "venue": "International Conference
      on Automation and Computing", "year": 2018, "referenceCount": 19, "citationCount":
      6, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2018-09-01", "journal":
      {"name": "2018 IEEE International Conference on Autonomic Computing (ICAC)",
      "pages": "71-80"}, "citationStyles": {"bibtex": "@Article{Arnaboldi2018HyPPOHP,\n
      author = {M. Arnaboldi and Rolando Brondolin and M. Santambrogio},\n booktitle
      = {International Conference on Automation and Computing},\n journal = {2018
      IEEE International Conference on Autonomic Computing (ICAC)},\n pages = {71-80},\n
      title = {HyPPO: Hybrid Performance-Aware Power-Capping Orchestrator},\n year
      = {2018}\n}\n"}, "authors": [{"authorId": "21305012", "name": "M. Arnaboldi"},
      {"authorId": "20958390", "name": "Rolando Brondolin"}, {"authorId": "1695345",
      "name": "M. Santambrogio"}]}, {"paperId": "1dbfba473ae968d8eb27a1756a3dfdb3f55cad4e",
      "externalIds": {"MAG": "2615121850", "DOI": "10.18419/OPUS-9066", "CorpusId":
      67078723}, "corpusId": 67078723, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1dbfba473ae968d8eb27a1756a3dfdb3f55cad4e",
      "title": "Performance anomaly detection in microservice architectures under
      continuous change", "abstract": "The idea of DevOps and agile approaches like
      Continuous Integration (CI) and microservice architectures are bocoming more
      and more popular as the demand for flexible and scalable solutions is increasing.
      By raising the degree of automation and distribution new challenges in terms
      of application performance monitoring arise because microservices are possibly
      short-lived and may be replaced within seconds. The fact that microservices
      are added and removed on a regular basis brings new requirements in the way
      anomaly detection is conducted as these changes could also be the cause for
      anomalies. This work proposes to take information about such events into account
      to improve the anomaly detection quality. Additionally, a meta model for microservice
      environments and supplemental tooling was developed that can be used to generate
      actual microservice environments from an instance of such a meta model. The
      generation tool also comprises the means to instrument the generated microservices
      with Kieker to collect monitoring data and generate supplemental files to be
      able to create Docker images and Kubernetes configuration files which allow
      to run the microservices on a Kubernetes cluster. In the evaluation such a generated
      microservice environment is run in a lab experiment with delay injections. The
      obtained data were then used to evaluate a customized version of the RanCorr
      approach which was modified to fit in the microservice context and a newly developed
      basic approach named Event-aware Anomaly Revisor (EAR) that takes event information
      into account when conducting anomaly detection. The evaluation results showed,
      that the customized RanCorr approach could not satisfy the expectations in terms
      of improvement of the anomaly detection results while the EAR approach could
      slightly improve the anomaly detection quality.", "venue": "", "year": 2017,
      "referenceCount": 33, "citationCount": 12, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Dullmann2017PerformanceAD,\n
      author = {Thomas F. Dullmann},\n title = {Performance anomaly detection in microservice
      architectures under continuous change},\n year = {2017}\n}\n"}, "authors": [{"authorId":
      "1414009225", "name": "Thomas F. Dullmann"}]}, {"paperId": "1e18f2a491268f405bb2d251d0a52e954dfe73ef",
      "externalIds": {"DOI": "10.17513/srts.1408", "CorpusId": 255919913}, "corpusId":
      255919913, "publicationVenue": {"id": "17141f3d-1f2a-430b-9e5c-b072e7802994",
      "name": "\u041d\u0430\u0443\u0447\u043d\u043e\u0435 \u043e\u0431\u043e\u0437\u0440\u0435\u043d\u0438\u0435
      \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043d\u0430\u0443\u043a\u0438
      (Scientific Review Technical Sciences)", "alternate_names": ["\u041d\u0430\u0443\u0447\u043d\u043e\u0435
      \u043e\u0431\u043e\u0437\u0440\u0435\u043d\u0438\u0435 \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435
      \u043d\u0430\u0443\u043a\u0438 (scientific Rev Tech Sci"], "issn": "2500-0799"},
      "url": "https://www.semanticscholar.org/paper/1e18f2a491268f405bb2d251d0a52e954dfe73ef",
      "title": "THE MAIN INDICATORS OF AVAILABILITY IN KUBERNETES AND WAYS TO ENSURE
      IT", "abstract": null, "venue": "\u041d\u0430\u0443\u0447\u043d\u043e\u0435
      \u043e\u0431\u043e\u0437\u0440\u0435\u043d\u0438\u0435 \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435
      \u043d\u0430\u0443\u043a\u0438 (Scientific Review Technical Sciences)", "year":
      2022, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": true, "openAccessPdf": {"url": "https://s.science-engineering.ru/pdf/2022/5/1408.pdf",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "\u041d\u0430\u0443\u0447\u043d\u043e\u0435
      \u043e\u0431\u043e\u0437\u0440\u0435\u043d\u0438\u0435. \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435
      \u043d\u0430\u0443\u043a\u0438 (Scientific Review. Technical Sciences)"}, "citationStyles":
      {"bibtex": "@Article{Lipatova2022THEMI,\n author = {S.E. Lipatova and Y. Belov},\n
      booktitle = {\u041d\u0430\u0443\u0447\u043d\u043e\u0435 \u043e\u0431\u043e\u0437\u0440\u0435\u043d\u0438\u0435
      \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043d\u0430\u0443\u043a\u0438
      (Scientific Review Technical Sciences)},\n journal = {\u041d\u0430\u0443\u0447\u043d\u043e\u0435
      \u043e\u0431\u043e\u0437\u0440\u0435\u043d\u0438\u0435. \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435
      \u043d\u0430\u0443\u043a\u0438 (Scientific Review. Technical Sciences)},\n title
      = {THE MAIN INDICATORS OF AVAILABILITY IN KUBERNETES AND WAYS TO ENSURE IT},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2201238339", "name": "S.E. Lipatova"},
      {"authorId": "2096407700", "name": "Y. Belov"}]}, {"paperId": "1e5d5094d61ec8b638e8fc6b2f78373a77dba1e7",
      "externalIds": {"MAG": "2983865772", "DBLP": "conf/middleware/VerreydtBTLJ19",
      "DOI": "10.1145/3366615.3368357", "CorpusId": 207940040}, "corpusId": 207940040,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1e5d5094d61ec8b638e8fc6b2f78373a77dba1e7",
      "title": "Leveraging Kubernetes for adaptive and cost-efficient resource management",
      "abstract": "Software providers face the challenge of minimizing the amount
      of resources used while still meeting their customer''s requirements. Several
      frameworks to manage resources and applications in a distributed environment
      are available, but their development is still ongoing and the state of the art
      is rapidly evolving, making it a challenge to use such frameworks and their
      features effectively in practice. The goal of this paper is to research how
      applications can be enhanced with adaptive performance management by relying
      on the capabilities of Kubernetes, a popular framework for container orchestration.
      In particular, horizontal as well as vertical scaling concepts of Kubernetes
      may prove useful to support adaptive resource allocation. Moreover, concepts
      for oversubscription as a way to simulate vertical scaling without having to
      reschedule applications, are evaluated. Through a series of experiments involving
      multiple applications and workloads, the effects of different configurations
      and combinations of horizontal and vertical scaling in Kubernetes are explored.
      Both the resource utilization of the nodes and the applications'' performance
      are taken into account. In brief, the resource management concepts of Kubernetes
      allow to simulate vertical scaling without a negative effect on performance.
      The effectiveness of the default horizontal autoscaler, however, depends on
      the type of application and the user workload at hand.", "venue": "WOC@Middleware",
      "year": 2019, "referenceCount": 13, "citationCount": 5, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2019-12-09", "journal": {"name":
      "Proceedings of the 5th International Workshop on Container Technologies and
      Container Clouds"}, "citationStyles": {"bibtex": "@Article{Verreydt2019LeveragingKF,\n
      author = {Stef Verreydt and Emad Heydari Beni and E. Truyen and B. Lagaisse
      and W. Joosen},\n booktitle = {WOC@Middleware},\n journal = {Proceedings of
      the 5th International Workshop on Container Technologies and Container Clouds},\n
      title = {Leveraging Kubernetes for adaptive and cost-efficient resource management},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "1404233186", "name": "Stef Verreydt"},
      {"authorId": "2995854", "name": "Emad Heydari Beni"}, {"authorId": "1743981",
      "name": "E. Truyen"}, {"authorId": "1796744", "name": "B. Lagaisse"}, {"authorId":
      "1752104", "name": "W. Joosen"}]}, {"paperId": "1e6a1fb948e5aef5185b60dd3a9b328c6046423f",
      "externalIds": {"DBLP": "conf/pimrc/DionLBSB21", "DOI": "10.1109/PIMRC50174.2021.9569523",
      "CorpusId": 240004493}, "corpusId": 240004493, "publicationVenue": {"id": "c6ced65d-fcf7-4e5f-bedd-01360247ebbe",
      "name": "IEEE International Symposium on Personal, Indoor and Mobile Radio Communications",
      "type": "conference", "alternate_names": ["Pers Indoor Mob Radio Commun", "Personal,
      Indoor and Mobile Radio Communications", "IEEE Int Symp Pers Indoor Mob Radio
      Commun", "PIMRC"], "url": "http://www.ieee-pimrc.org/"}, "url": "https://www.semanticscholar.org/paper/1e6a1fb948e5aef5185b60dd3a9b328c6046423f",
      "title": "Cloud Native Hardware Accelerated 5G virtualized Radio Access Network",
      "abstract": "Cloud Radio Access Network consists in deporting and pooling radio
      processing on shared servers for a better use of computing resources, more agile
      operations, and thus optimizing costs and energy performance. Some of these
      processes at the radio physical layer are highly demanding in terms of computing
      power, which implies high energy consumption. Our approach enables the automatic
      activation of hardware programmable acceleration resources that are better suited
      to these processes in terms of performance and energy efficiency. Low-Density
      Parity-Check Forward Error Correction functions standardized in 5th Generation
      of Mobile Networks are offloaded on these hardware acceleration resources. Kubernetes-based
      orchestration is made compatible with the use of a edge computing accelerated
      heterogeneous infrastructure (CPU, GPU, FPGA) that can be distributed at the
      edge of the operator\u2019s network to deploy the RAN Distributed Unit. We assess
      the proof-of-concept implementation of our approach and evaluate cost in data
      offloading and energy consumption. This prefigures a full cloud orchestration
      for 5G access, such as recommended in the O-RAN consortium.", "venue": "IEEE
      International Symposium on Personal, Indoor and Mobile Radio Communications",
      "year": 2021, "referenceCount": 0, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-09-13", "journal": {"name": "2021 IEEE 32nd Annual International Symposium
      on Personal, Indoor and Mobile Radio Communications (PIMRC)", "pages": "1061-1066"},
      "citationStyles": {"bibtex": "@Article{Dion2021CloudNH,\n author = {J. Dion
      and Julien Lallet and Laurent Beaulieu and Patrick Savelli and P. Bertin},\n
      booktitle = {IEEE International Symposium on Personal, Indoor and Mobile Radio
      Communications},\n journal = {2021 IEEE 32nd Annual International Symposium
      on Personal, Indoor and Mobile Radio Communications (PIMRC)},\n pages = {1061-1066},\n
      title = {Cloud Native Hardware Accelerated 5G virtualized Radio Access Network},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "145083067", "name": "J. Dion"},
      {"authorId": "2964753", "name": "Julien Lallet"}, {"authorId": "46949459", "name":
      "Laurent Beaulieu"}, {"authorId": "108074279", "name": "Patrick Savelli"}, {"authorId":
      "40621697", "name": "P. Bertin"}]}, {"paperId": "1eaef1b01c2ddeb00e3635e0ea1e17b6816c9c3d",
      "externalIds": {"MAG": "3049500022", "CorpusId": 226040872}, "corpusId": 226040872,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1eaef1b01c2ddeb00e3635e0ea1e17b6816c9c3d",
      "title": "Dyninka: a framework for distributed FaaS dataflow", "abstract": "The
      challenges of the Internet of Things(IoT) require applications to deal with
      large amount of data streaming from small devices into processing, storing and
      analytical systems. Such one-way datastream can be modelled into a directed
      graph where vertices are processing units, and edges are data flow con- nections
      between them. Modern applications are often written as micro-services, where
      each service focuses on one functional con- cern and exposes one or several
      APIs over the network, typically using HTTP, web sockets and messaging systems.
      Services are loosely-coupled and make communications over the network to operate.
      An appli- cation is then a composition of micro-services interacting with each
      other. One of the main benefits of this architecture is that services can be
      scaled independently to accommodate fluctuating workloads, and they can be reused
      by other services. More recently, the function-as-a-service and serverless paradigms
      have emerged, where a function is a minimal service unit with very strict functional
      boundaries, and where developers do not want to be involved with the operational
      concerns regarding running code. We present Dyninka, a framework for creating
      distributed dataflow applications based on Kotlin and Kubernetes. Our framework
      allows the generation of distributed systems using a language approach, providing
      dynamic service placement, service mobility, and contextual adaptation of the
      application to its environment. This allows fine control over the evolution
      of stream-based applications and also add the environment as a dynamic factor
      of the development process where one component of the dataflow may need to be
      redeployed on another node to increase performance. Specific service requirements
      are described by using intelligent placement specification constructs. Dataflows
      are formed by chaining functions, resulting in linking generated services together.
      Prototyping is made quick and interactive by making developers write functions
      in their IDE, test them locally and Dyninka ex- poses them as micro-services
      in a distributed configuration. Code modification updates micro-services and
      changes the workflow without having to redeploy the whole application. Communication
      between services is abstracted, so such boilerplates are removed from the codebase.
      \n \nExperimentation was undertaken to compare our framework on a concrete IoT
      application example, with a handcrafted distributed application and OpenFaaS
      platform to compare performance and resilience of the distributed application,
      readability as well as the size of the codebase. \n \nThis framework is a first
      step for the design of new IoT frameworks and languages helping to write context-aware
      distributed applications. It is an ongoing project and future work will focus
      on bringing built-in languages constructs specific to dynamic distributed systems.
      Common orthogonal functionalities like connectors, data producers, logging and
      security layers can be reduced to language constructs. Future versions aim also
      to support Apache Mesos and other orchestration technologies.", "venue": "",
      "year": 2020, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2020-03-17", "journal": {"name":
      "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Fortier2020DyninkaAF,\n
      author = {Patrik Fortier and Julien Ponge and Fr\u00e9d\u00e9ric Le Mou\u00ebl},\n
      title = {Dyninka: a framework for distributed FaaS dataflow},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2007343567", "name": "Patrik Fortier"}, {"authorId":
      "2551101", "name": "Julien Ponge"}, {"authorId": "2745590", "name": "Fr\u00e9d\u00e9ric
      Le Mou\u00ebl"}]}, {"paperId": "1ece17b973f0a46e3ffa707efd9e07b68d8db106", "externalIds":
      {"DBLP": "conf/mobiwac/LeiterGB21", "DOI": "10.1145/3479241.3486684", "CorpusId":
      244411930}, "corpusId": 244411930, "publicationVenue": {"id": "7cadc9ef-5d1a-43cd-8d47-e8dbedf15484",
      "name": "ACM International Workshop on Mobility Management and Wireless Access",
      "type": "conference", "alternate_names": ["ACM Int Workshop Mobil Manag Wirel
      Access", "MOBIWAC", "Mobility Management and Wireless Access", "Mobil Manag
      Wirel Access"]}, "url": "https://www.semanticscholar.org/paper/1ece17b973f0a46e3ffa707efd9e07b68d8db106",
      "title": "An Evolution of Proxy Mobile IPv6 to the Cloud", "abstract": "Network
      Function Virtualization (NFV) and Software Defined Networks (SDN) do not leave
      any legacy network services untouched. This work will present how Proxy Mobile
      IPv6 (PMIPv6) can evolve to the cloud. Our approach is to introduce this evolution
      within a step-by-step architecture guideline while keeping standards compatibility.
      We also show how PMIPv6 can fit into a central cloud - edge cloud environment
      on the top of Kubernetes and Openstack under a unified orchestration umbrella.
      The proper integration of PMIPv6 into this new environment does not just enforce
      acquiring new capabilities, e.g., scaling PMIPv6 elements; it also can ensure
      closed-loop orchestration where PMIPv6 can be controlled continuously by the
      actual network needs.", "venue": "ACM International Workshop on Mobility Management
      and Wireless Access", "year": 2021, "referenceCount": 31, "citationCount": 3,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3479241.3486684", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book"], "publicationDate": "2021-11-22", "journal": {"name": "Proceedings of
      the 19th ACM International Symposium on Mobility Management and Wireless Access"},
      "citationStyles": {"bibtex": "@Article{Leiter2021AnEO,\n author = {\u00c1kos
      Leiter and N\u00e1ndor Galambosi and L. Bokor},\n booktitle = {ACM International
      Workshop on Mobility Management and Wireless Access},\n journal = {Proceedings
      of the 19th ACM International Symposium on Mobility Management and Wireless
      Access},\n title = {An Evolution of Proxy Mobile IPv6 to the Cloud},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "51899499", "name": "\u00c1kos Leiter"},
      {"authorId": "8696426", "name": "N\u00e1ndor Galambosi"}, {"authorId": "1709324",
      "name": "L. Bokor"}]}, {"paperId": "1ee5d338465041e1926a66631294fd533fd6c4ae",
      "externalIds": {"MAG": "2898533133", "DOI": "10.1063/1.5064948", "CorpusId":
      69574504}, "corpusId": 69574504, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1ee5d338465041e1926a66631294fd533fd6c4ae",
      "title": "Elastic high-performance computing platform for real-time data analysis",
      "abstract": "Using the power of high-performance computing together with the
      flexibility of loosely coupled event-driven software architectures provides
      alot of benefits, especially when it comes to processing real-time data. This
      paper outlines the architecture of a general-purpose platform leveraging event-driven
      microservices architecture in combination with Event Sourcing and powerful High-Performance
      Computing core. The platform is aimed to software applications that process
      and analyze huge amount of data in a real-time or near-real-time fashion from
      a variety of sources, having as requirement downtime-less upgrade and scaling
      capabilities. The first-class citizens of this platform are applications in
      the domains of IoT, trading, meteorology and traffic control. The reference
      implementation of this platform used as a foundation for this research consists
      of two main components, the hardware based on Intel Xeon Phi Knights Corner
      family and Kubernetes as main container orchestration solution leveraging both
      Xeon processors and coprocessors for maximum performance. On the application
      level, the platform uses Apache Kafka as Event Sourcing mechanism that allows
      treating the applications as state machines, providing capability to perform
      \u201cstep back in time\u201d or \u201cmulti-window event processing.\u201d
      We present the architecture of the platform and initial experiments that demonstrate
      the feasibility of our approach.Using the power of high-performance computing
      together with the flexibility of loosely coupled event-driven software architectures
      provides alot of benefits, especially when it comes to processing real-time
      data. This paper outlines the architecture of a general-purpose platform leveraging
      event-driven microservices architecture in combination with Event Sourcing and
      powerful High-Performance Computing core. The platform is aimed to software
      applications that process and analyze huge amount of data in a real-time or
      near-real-time fashion from a variety of sources, having as requirement downtime-less
      upgrade and scaling capabilities. The first-class citizens of this platform
      are applications in the domains of IoT, trading, meteorology and traffic control.
      The reference implementation of this platform used as a foundation for this
      research consists of two main components, the hardware based on Intel Xeon Phi
      Knights Corner family and Kubernetes as main container orchestration solution
      leveraging both Xeon ...", "venue": "", "year": 2018, "referenceCount": 3, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2018-10-25", "journal": {"name": "", "pages": "110005",
      "volume": "2025"}, "citationStyles": {"bibtex": "@Inproceedings{Simchev2018ElasticHC,\n
      author = {T. Simchev},\n pages = {110005},\n title = {Elastic high-performance
      computing platform for real-time data analysis},\n volume = {2025},\n year =
      {2018}\n}\n"}, "authors": [{"authorId": "81615953", "name": "T. Simchev"}]},
      {"paperId": "1ef2f0a984b3903dee26e090de09215c98628ad6", "externalIds": {"DBLP":
      "conf/iccomm/UngureanuV22", "DOI": "10.1109/comm54429.2022.9817268", "CorpusId":
      250541470}, "corpusId": 250541470, "publicationVenue": {"id": "e129ba4e-afc8-4202-b0e1-1b8b40af0151",
      "name": "International Conference on Communications", "type": "conference",
      "alternate_names": ["COMM", "Int Conf Commun"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1800074/all-proceedings"},
      "url": "https://www.semanticscholar.org/paper/1ef2f0a984b3903dee26e090de09215c98628ad6",
      "title": "Leveraging the cloud-native approach for the design of 5G NextGen
      Core Functions", "abstract": "Due to the ever-growing market needs and extension
      to different industries, the design of the 5G Next Generation (5G NextGen) Core
      is on the verge to evolve towards a service-based architecture. Therefore, this
      paper presents a novel approach to run the 5G NextGen Core Functions as Cloud-Native
      applications that can be easily scaled on demand to match the constraints of
      different verticals. In our setup, we employ the Open5GS open-source tool that
      runs in containers orchestrated by Kubernetes while we simulate consequent PDU
      session establishment requests using the UERANSIM emulator. Hence, we deploy
      a service mesh solution that reveals real-time inter-service communication in
      terms of traffic distribution, requests duration and throughput among all 5G
      core services.", "venue": "International Conference on Communications", "year":
      2022, "referenceCount": 5, "citationCount": 2, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-06-16", "journal": {"name": "2022 14th International
      Conference on Communications (COMM)", "pages": "1-7"}, "citationStyles": {"bibtex":
      "@Article{Ungureanu2022LeveragingTC,\n author = {O. Ungureanu and C. Vladeanu},\n
      booktitle = {International Conference on Communications},\n journal = {2022
      14th International Conference on Communications (COMM)},\n pages = {1-7},\n
      title = {Leveraging the cloud-native approach for the design of 5G NextGen Core
      Functions},\n year = {2022}\n}\n"}, "authors": [{"authorId": "1393636932", "name":
      "O. Ungureanu"}, {"authorId": "1803825", "name": "C. Vladeanu"}]}, {"paperId":
      "1f421560adf676b11064f22bc53078f3610f1392", "externalIds": {"ArXiv": "2103.00490",
      "DBLP": "journals/corr/abs-2103-00490", "CorpusId": 232076040}, "corpusId":
      232076040, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/1f421560adf676b11064f22bc53078f3610f1392",
      "title": "Dataset Lifecycle Framework and its applications in Bioinformatics",
      "abstract": "Bioinformatics pipelines depend on shared POSIX filesystems for
      its input, output and intermediate data storage. Containerization makes it more
      difficult for the workloads to access the shared file systems. In our previous
      study, we were able to run both ML and non-ML pipelines on Kubeflow successfully.
      However, the storage solutions were complex and less optimal. This is because
      there are no established resource types to represent the concept of data source
      on Kubernetes. More and more applications are running on Kubernetes for batch
      processing. End users are burdened with configuring and optimising the data
      access, which is what we have experienced before. In this article, we are introducing
      a new concept of Dataset and its corresponding resource as a native Kubernetes
      object. We have leveraged the Dataset Lifecycle Framework which takes care of
      all the low-level details about data access in Kubernetes pods. Its pluggable
      architecture is designed for the development of caching, scheduling and governance
      plugins. Together, they manage the entire lifecycle of the custom resource Dataset.
      We use Dataset Lifecycle Framework to serve data from object stores to both
      ML and non-ML pipelines running on Kubeflow. With DLF, we make training data
      fed into ML models directly without being downloaded to the local disks, which
      makes the input scalable. We have enhanced the durability of training metadata
      by storing it into a dataset, which also simplifies the set up of the Tensorboard,
      separated from the notebook server. For the non-ML pipeline, we have simplified
      the 1000 Genome Project pipeline with datasets injected into the pipeline dynamically.
      In addition, our preliminary results indicate that the pluggable caching mechanism
      can improve the performance significantly.", "venue": "arXiv.org", "year": 2021,
      "referenceCount": 14, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Biology", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-02-24", "journal":
      {"name": "ArXiv", "volume": "abs/2103.00490"}, "citationStyles": {"bibtex":
      "@Article{Gkoufas2021DatasetLF,\n author = {Yiannis Gkoufas and D. Yuan},\n
      booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {Dataset Lifecycle Framework
      and its applications in Bioinformatics},\n volume = {abs/2103.00490},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "2695362", "name": "Yiannis Gkoufas"},
      {"authorId": "2000028107", "name": "D. Yuan"}]}, {"paperId": "1f57494cfb8ca775aa2d8e4c8a145e2b035b69ca",
      "externalIds": {"DBLP": "conf/eurosys/SedghpourKT21", "DOI": "10.1145/3447851.3458740",
      "CorpusId": 233384370}, "corpusId": 233384370, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/1f57494cfb8ca775aa2d8e4c8a145e2b035b69ca",
      "title": "Service mesh circuit breaker: From panic button to performance management
      tool", "abstract": "Site Reliability Engineers are at the center of two tensions:
      On one hand, they need to respond to alerts within a short time, to restore
      a non-functional system. On the other hand, short response times is disruptive
      to everyday life and lead to alert fatigue. To alleviate this tension, many
      resource management mechanisms are proposed handle overload and mitigate the
      faults. One recent such mechanism is circuit breaking in service meshes. Circuit
      breaking rejects incoming requests to protect latency at the expense of availability
      (successfully answered requests), but in many scenarios achieve neither due
      to the difficulty of knowing when to trigger circuit breaking in highly dynamic
      microservice environments. We propose an adaptive circuit breaking mechanism,
      implemented through an adaptive controller, that not only avoids overload and
      mitigate failure, but keeps the tail response time below a given threshold while
      maximizing service throughput. Our proposed controller is experimentally compared
      with a static circuit breaker across a wide set of overload scenarios in a testbed
      based on Istio and Kubernetes. The results show that our controller maintains
      tail response time below the given threshold 98% of the time (including cold
      starts) on average with an availability of 70% with 29% of requests circuit
      broken. This compares favorably to a static circuit breaker configuration, which
      features a 63% availability, 30% circuit broken requests, and more than 5% of
      requests timing out.", "venue": "HAOC@EuroSys", "year": 2021, "referenceCount":
      38, "citationCount": 11, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "http://umu.diva-portal.org/smash/get/diva2:1547603/FULLTEXT01",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book"],
      "publicationDate": "2021-04-26", "journal": {"name": "Proceedings of the 1st
      Workshop on High Availability and Observability of Cloud Systems"}, "citationStyles":
      {"bibtex": "@Article{Sedghpour2021ServiceMC,\n author = {Mohammad Reza Saleh
      Sedghpour and C. Klein and Johan Tordsson},\n booktitle = {HAOC@EuroSys},\n
      journal = {Proceedings of the 1st Workshop on High Availability and Observability
      of Cloud Systems},\n title = {Service mesh circuit breaker: From panic button
      to performance management tool},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "1509126020", "name": "Mohammad Reza Saleh Sedghpour"}, {"authorId": "2748720",
      "name": "C. Klein"}, {"authorId": "2548512", "name": "Johan Tordsson"}]}, {"paperId":
      "1f5bd8081f6255da869eebe26e822d1ed4b4202e", "externalIds": {"MAG": "2728744153",
      "DBLP": "conf/ficloud/CoullonPP17", "DOI": "10.1109/FiCloud.2017.51", "CorpusId":
      12962208}, "corpusId": 12962208, "publicationVenue": {"id": "d2423c06-c1fe-458d-bf8a-cc24aefe3f59",
      "name": "International Conference on Future Internet of Things and Cloud", "type":
      "conference", "alternate_names": ["FiCloud", "Int Conf Future Internet Thing
      Cloud"]}, "url": "https://www.semanticscholar.org/paper/1f5bd8081f6255da869eebe26e822d1ed4b4202e",
      "title": "Production Deployment Tools for IaaSes: An Overall Model and Survey",
      "abstract": "Emerging applications for the Internet of Things (IoT) are complex
      programs which are composed of multiple modules (or services). For scalability,
      reliability and performance, modular applications are distributed on infrastructures
      that support utility computing (e.g., Cloud, Fog). In order to simply operate
      such infrastructures, an Infrastructure-as-a-Service (IaaS) manager is required.
      OpenStack is the de-facto open-source solution to address the IaaS level of
      the Cloud paradigm. However, OpenStack is itself a large modular application
      composed of more than 150 modules that make it hard to deploy manually. To fully
      understand how IaaSes are deployed today, we propose in this paper an overall
      model of the application deployment process which describes each step with their
      interactions. This model then serves as the basis to analyse five different
      deployment tools used to deploy OpenStack in production: Kolla, Enos, Juju,
      Kubernetes, and TripleO. Finally, a comparison is provided and the results are
      discussed to extend this analysis.", "venue": "International Conference on Future
      Internet of Things and Cloud", "year": 2017, "referenceCount": 22, "citationCount":
      11, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://hal.inria.fr/hal-01532489/file/main.pdf", "status": "GREEN"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Environmental Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference",
      "Review"], "publicationDate": "2017-08-21", "journal": {"name": "2017 IEEE 5th
      International Conference on Future Internet of Things and Cloud (FiCloud)",
      "pages": "183-190"}, "citationStyles": {"bibtex": "@Article{Coullon2017ProductionDT,\n
      author = {H\u00e9l\u00e8ne Coullon and Christian P\u00e9rez and Dimitri Pertin},\n
      booktitle = {International Conference on Future Internet of Things and Cloud},\n
      journal = {2017 IEEE 5th International Conference on Future Internet of Things
      and Cloud (FiCloud)},\n pages = {183-190},\n title = {Production Deployment
      Tools for IaaSes: An Overall Model and Survey},\n year = {2017}\n}\n"}, "authors":
      [{"authorId": "1802900", "name": "H\u00e9l\u00e8ne Coullon"}, {"authorId": "144225032",
      "name": "Christian P\u00e9rez"}, {"authorId": "3023568", "name": "Dimitri Pertin"}]},
      {"paperId": "1f826e1ceee5606318b24b5719103c6636280eae", "externalIds": {"DOI":
      "10.36227/techrxiv.13146548.v1", "CorpusId": 260440584}, "corpusId": 260440584,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1f826e1ceee5606318b24b5719103c6636280eae",
      "title": "Resource Management Schemes for Cloud-Native Platforms with Computing
      Containers of Docker and Kubernetes", "abstract": "We use built-in Tensorflow
      and Pytorch dataset for our experiments.", "venue": "", "year": 2020, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/2010.10350", "status": "GREEN"},
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2020-11-05", "journal": null,
      "citationStyles": {"bibtex": "@Inproceedings{Mao2020ResourceMS,\n author = {Y.
      Mao},\n title = {Resource Management Schemes for Cloud-Native Platforms with
      Computing Containers of Docker and Kubernetes},\n year = {2020}\n}\n"}, "authors":
      [{"authorId": "120449186", "name": "Y. Mao"}]}, {"paperId": "1facb62304b1f07f034e5b2bacadf2e2c7fa60ba",
      "externalIds": {"DBLP": "journals/ijismd/ChangCCL22", "DOI": "10.4018/ijismd.306636",
      "CorpusId": 252456704}, "corpusId": 252456704, "publicationVenue": {"id": "33fc525c-964a-4144-9c27-eea9d882412b",
      "name": "International Journal of Information System Modeling and Design", "type":
      "journal", "alternate_names": ["Int J Inf Syst Model Des"], "issn": "1947-8186",
      "url": "https://www.igi-global.com/journal/international-journal-information-system-modeling/1157"},
      "url": "https://www.semanticscholar.org/paper/1facb62304b1f07f034e5b2bacadf2e2c7fa60ba",
      "title": "Deep Learning Model for Dynamic Hand Gesture Recognition for Natural
      Human-Machine Interface on End Devices", "abstract": "As end devices have become
      ubiquitous in daily life, the use of natural human-machine interfaces has become
      an important topic. Many researchers have proposed the frameworks to improve
      the performance of dynamic hand gesture recognition. Some CNN models are widely
      used to increase the accuracy of dynamic hand gesture recognition. However,
      most CNN models are not suitable for end devices. This is because image frames
      are captured continuously and result in lower hand gesture recognition accuracy.
      In addition, the trained models need to be efficiently deployed on end devices.
      To solve the problems, the study proposes a dynamic hand gesture recognition
      framework on end devices. The authors provide a method (i.e., ModelOps) to deploy
      the trained model on end devices, by building an edge computing architecture
      using Kubernetes. The research provides developers with a real-time gesture
      recognition component. The experimental results show that the framework is suitable
      on end devices.", "venue": "International Journal of Information System Modeling
      and Design", "year": 2022, "referenceCount": 28, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2022-06-22", "journal": {"name": "Int. J. Inf. Syst. Model. Des.", "pages":
      "1-23", "volume": "13"}, "citationStyles": {"bibtex": "@Article{Chang2022DeepLM,\n
      author = {Tsui-Ping Chang and Hung-Ming Chen and Shih-Ying Chen and Wei-Cheng
      Lin},\n booktitle = {International Journal of Information System Modeling and
      Design},\n journal = {Int. J. Inf. Syst. Model. Des.},\n pages = {1-23},\n title
      = {Deep Learning Model for Dynamic Hand Gesture Recognition for Natural Human-Machine
      Interface on End Devices},\n volume = {13},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "1700052", "name": "Tsui-Ping Chang"}, {"authorId": "153924294",
      "name": "Hung-Ming Chen"}, {"authorId": "2763647", "name": "Shih-Ying Chen"},
      {"authorId": "2113563235", "name": "Wei-Cheng Lin"}]}, {"paperId": "1fd2b68c9f93a6eae65d772f419ba73438fe3f83",
      "externalIds": {"DBLP": "conf/iscc/BorsattiCFGPSSSTZ23", "DOI": "10.1109/ISCC58397.2023.10217853",
      "CorpusId": 261313991}, "corpusId": 261313991, "publicationVenue": {"id": "159aed30-148b-4b50-99a4-372b0af958d9",
      "name": "International Symposium on Computers and Communications", "type": "conference",
      "alternate_names": ["ISCC", "Int Symp Comput Commun"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1000156/all-proceedings"},
      "url": "https://www.semanticscholar.org/paper/1fd2b68c9f93a6eae65d772f419ba73438fe3f83",
      "title": "Modeling Digital Twins of Kubernetes-Based Applications", "abstract":
      "Kubernetes provides several functions that can help service providers to deal
      with the management of complex container-based applications. However, most of
      these functions need a time-consuming and costly customization process to address
      service-specific requirements. The adoption of Digital Twin (DT) solutions can
      ease the configuration process by enabling the evaluation of multiple configurations
      and custom policies by means of simulation-based what-if scenario analysis.
      To facilitate this process, this paper proposes KubeTwin, a framework to enable
      the definition and evaluation of DTs of Kubernetes applications. Specifically,
      this work presents an innovative simulation-based inference approach to define
      accurate DT models for a Kubernetes environment. We experimentally validate
      the proposed solution by implementing a DT model of an image recognition application
      that we tested under different conditions to verify the accuracy of the DT model.
      The soundness of these results demonstrates the validity of the KubeTwin approach
      and calls for further investigation.", "venue": "International Symposium on
      Computers and Communications", "year": 2023, "referenceCount": 17, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-07-09", "journal": {"name": "2023 IEEE Symposium on Computers and Communications
      (ISCC)", "pages": "219-224"}, "citationStyles": {"bibtex": "@Article{Borsatti2023ModelingDT,\n
      author = {D. Borsatti and W. Cerroni and L. Foschini and G. Grabarnik and Filippo
      Poltronieri and Domenico Scotece and L. Shwartz and C. Stefanelli and M. Tortonesi
      and Mattia Zaccarini},\n booktitle = {International Symposium on Computers and
      Communications},\n journal = {2023 IEEE Symposium on Computers and Communications
      (ISCC)},\n pages = {219-224},\n title = {Modeling Digital Twins of Kubernetes-Based
      Applications},\n year = {2023}\n}\n"}, "authors": [{"authorId": "117434322",
      "name": "D. Borsatti"}, {"authorId": "1756511", "name": "W. Cerroni"}, {"authorId":
      "1748978", "name": "L. Foschini"}, {"authorId": "29935018", "name": "G. Grabarnik"},
      {"authorId": "51025749", "name": "Filippo Poltronieri"}, {"authorId": "29924476",
      "name": "Domenico Scotece"}, {"authorId": "1828069", "name": "L. Shwartz"},
      {"authorId": "1754846", "name": "C. Stefanelli"}, {"authorId": "2797581", "name":
      "M. Tortonesi"}, {"authorId": "2202590658", "name": "Mattia Zaccarini"}]}, {"paperId":
      "2088db0bdb03993d4f9e1e98e5e996f2ea6edaf7", "externalIds": {"DBLP": "conf/hicss/WattsBSB21",
      "MAG": "3126998840", "DOI": "10.24251/HICSS.2021.836", "CorpusId": 232414270},
      "corpusId": 232414270, "publicationVenue": {"id": "d8ec66ab-0083-4a4d-bf44-ce85d2daad69",
      "name": "Hawaii International Conference on System Sciences", "type": "conference",
      "alternate_names": ["HICSS", "Hawaii Int Conf Syst Sci"], "url": "http://www.hicss.hawaii.edu/"},
      "url": "https://www.semanticscholar.org/paper/2088db0bdb03993d4f9e1e98e5e996f2ea6edaf7",
      "title": "Insight from a Containerized Kubernetes Workload Introspection", "abstract":
      "Developments in virtual containers, especially in the cloud infrastructure,
      have led to diversification of jobs that containers are used to support, particularly
      in the big data and machine learning spaces. The diversification has been powered
      by the adoption of orchestration systems that marshal fleets of containers to
      accomplish complex programming tasks. The additional components in the vertical
      technology stack, plus the continued horizontal scaling have led to questions
      regarding how to forensically analyze complicated technology stacks. This paper
      proposed a solution through the use of introspection. An exploratory case study
      has been conducted on a bare-metal cloud that utilizes Kubernetes, the introspection
      tool Prometheus, and Apache Spark. The contribution of this research is two-fold.
      First, it provides empirical support that introspection tools can acquire forensically
      viable data from different levels of a technology stack. Second, it provides
      the ground work for comparisons between different virtual container platforms.",
      "venue": "Hawaii International Conference on System Sciences", "year": 2021,
      "referenceCount": 47, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "http://scholarspace.manoa.hawaii.edu/bitstream/10125/71457/1/0680.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": null, "journal": {"pages": "1-10"}, "citationStyles": {"bibtex":
      "@Article{Watts2021InsightFA,\n author = {Thomas Watts and Ryan Benton and Jordan
      Shropshire and David M. Bourrie},\n booktitle = {Hawaii International Conference
      on System Sciences},\n pages = {1-10},\n title = {Insight from a Containerized
      Kubernetes Workload Introspection},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2057169563", "name": "Thomas Watts"}, {"authorId": "39402961", "name": "Ryan
      Benton"}, {"authorId": "2007998", "name": "Jordan Shropshire"}, {"authorId":
      "2093279", "name": "David M. Bourrie"}]}, {"paperId": "208d14cbb3e18cb653dee97bd9063b9d8ee29daf",
      "externalIds": {"MAG": "3100412629", "DOI": "10.1051/epjconf/202024505030",
      "CorpusId": 229222325}, "corpusId": 229222325, "publicationVenue": {"id": "f2cc63fa-90cb-413d-92ce-003d5244a1e8",
      "name": "EPJ Web of Conferences", "type": "journal", "alternate_names": ["EPJ
      Web Conf", "Epj Web of Conferences", "Epj Web Conf"], "issn": "2100-014X", "url":
      "https://web.archive.org/web/*/https:/www.epj-conferences.org/component/issues/",
      "alternate_urls": ["https://www.epj-conferences.org/", "https://web.archive.org/web/20161128151311/http:/www.epj-conferences.org:80/",
      "https://www.epj-conferences.org/component/issues/"]}, "url": "https://www.semanticscholar.org/paper/208d14cbb3e18cb653dee97bd9063b9d8ee29daf",
      "title": "Optimizing Provisioning of LCG Software Stacks with Kubernetes", "abstract":
      "The building, testing and deployment of coherent large software stacks is very
      challenging, in particular when they consist of the diverse set of packages
      required by the LHC*** experiments, the CERN Beams department and data analysis
      services such as SWAN. These software stacks comprise a large number of packages
      (Monte Carlo generators, machine learning tools, Python modules, HEP**** specific
      software), all available for several compilers, operating systems and hardware
      architectures. Along with several releases per year, development builds are
      provided each night to allow for quick updates and testing of development versions
      of packages such as ROOT, Geant4, etc. It also provides the possibility to test
      new compilers and new configurations.\nTimely provisioning of these development
      and release stacks requires a large amount of computing resources. A dedicated
      infrastructure, based on the Jenkins continuous integration system, has been
      developed to this purpose. Resources are taken from the CERN OpenStack cloud;
      Puppet configurations are used to control the environment on virtual machines,
      which are either used directly as resource nodes or as hosts for Docker containers.
      Containers are used more and more to optimize the usage of our resources and
      ensure a consistent build environment while providing quick access to new Linux
      flavours and specific configurations.\nIn order to add build resources on demand
      more easily, we investigated the integration of a CERN provided Kubernetes cluster
      into the existing infrastructure. In this contribution we present the status
      of this prototype, focusing on the new challenges faced, such as the integration
      of these ephemeral build nodes into CERN\u2019s IT infrastructure, job priority
      control, and debugging of job failures.", "venue": "EPJ Web of Conferences",
      "year": 2020, "referenceCount": 22, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      null, "journal": {"name": "EPJ Web of Conferences"}, "citationStyles": {"bibtex":
      "@Conference{Bachmann2020OptimizingPO,\n author = {R. Bachmann and G. Ganis
      and Dmitri Konstantinov and I. Razumov and Johannes Martin Heinz},\n booktitle
      = {EPJ Web of Conferences},\n journal = {EPJ Web of Conferences},\n title =
      {Optimizing Provisioning of LCG Software Stacks with Kubernetes},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "31665995", "name": "R. Bachmann"}, {"authorId": "49016086",
      "name": "G. Ganis"}, {"authorId": "2243381676", "name": "Dmitri Konstantinov"},
      {"authorId": "1659377600", "name": "I. Razumov"}, {"authorId": "2061072454",
      "name": "Johannes Martin Heinz"}]}, {"paperId": "209dbdbbb804a8f8a238d99f871949692d3d0e3e",
      "externalIds": {"DBLP": "conf/igarss/McVicarAGTPM23", "DOI": "10.1109/IGARSS52108.2023.10283095",
      "CorpusId": 264356121}, "corpusId": 264356121, "publicationVenue": {"id": "a47b9394-c5c7-4bc8-b8fc-b08f96954278",
      "name": "IEEE International Geoscience and Remote Sensing Symposium", "type":
      "conference", "alternate_names": ["Int Geosci Remote Sens Symp", "IGARSS", "International
      Geoscience and Remote Sensing Symposium", "IEEE Int Geosci Remote Sens Symp"],
      "url": "https://ieeexplore.ieee.org/xpl/conhome/1000307/all-proceedings"}, "url":
      "https://www.semanticscholar.org/paper/209dbdbbb804a8f8a238d99f871949692d3d0e3e",
      "title": "Smartflow: Enabling Scalable Spatiotemporal Geospatial Research",
      "abstract": "BlackSky introduces Smartflow, a cloud-based framework enabling
      scalable spatiotemporal geospatial research built on open-source tools and technologies.
      Using STAC-compliant catalogs as a common input, heterogeneous geospatial data
      can be processed into standardized datacubes for analysis and model training.
      Model experimentation is managed using a combination of tools, including ClearML,
      Tensorboard, and Apache Superset. Underpinning Smartflow is Kubernetes, which
      orchestrates the provisioning and execution of workflows to support both horizontal
      and vertical scalability. This combination of features makes Smartflow well-suited
      for geospatial model development and analysis over large geographic areas, time
      scales, and expansive image archives.We also present a novel neural architecture,
      built using Smartflow, to monitor large geographic areas for heavy construction.
      Qualitative results based on data from the IARPA Space-based Machine Automated
      Recognition Technique (SMART) program1 are presented that show the model is
      capable of detecting heavy construction throughout all major phases of development.",
      "venue": "IEEE International Geoscience and Remote Sensing Symposium", "year":
      2023, "referenceCount": 15, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Geography",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-16", "journal":
      {"name": "IGARSS 2023 - 2023 IEEE International Geoscience and Remote Sensing
      Symposium", "pages": "1193-1196"}, "citationStyles": {"bibtex": "@Article{McVicar2023SmartflowES,\n
      author = {David McVicar and Brian Avant and Adrian Gould and Diego Torrejon
      and Charles Della Porta and Ryan Mukherjee},\n booktitle = {IEEE International
      Geoscience and Remote Sensing Symposium},\n journal = {IGARSS 2023 - 2023 IEEE
      International Geoscience and Remote Sensing Symposium},\n pages = {1193-1196},\n
      title = {Smartflow: Enabling Scalable Spatiotemporal Geospatial Research},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2186385849", "name": "David
      McVicar"}, {"authorId": "2260713316", "name": "Brian Avant"}, {"authorId": "2186389096",
      "name": "Adrian Gould"}, {"authorId": "2260708204", "name": "Diego Torrejon"},
      {"authorId": "2260713501", "name": "Charles Della Porta"}, {"authorId": "2260664046",
      "name": "Ryan Mukherjee"}]}, {"paperId": "20d1943dee73ed45803c32c6f45d6478052edd48",
      "externalIds": {"MAG": "3024299643", "CorpusId": 220278312}, "corpusId": 220278312,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/20d1943dee73ed45803c32c6f45d6478052edd48",
      "title": "Building Containerized Environmental Models Using Continuous Integration
      with Jenkins and Kubernetes", "abstract": "Environmental models typically consume
      vast amounts of computing resources. To effectively serve a growing community
      of physical, social and natural scientists, these models must be able to scale
      dynamically and horizontally to meet the demand. Models also require a vast
      array of software libraries, runtimes, compilers, and configurations specific
      to a particular application. Maintaining arrays of physical servers, each configured
      for one specific application, is expensive and inefficient to build and maintain.
      With the advent of software containers, model developers can isolate an application
      and all of its software dependencies from the physical server. Kubernetes, a
      container orchestration tool built by Google, has made it possible to dynamically
      deploy these containers seamlessly across a cluster of machines. We introduce
      key concepts and tools for building distributed modeling systems with containers
      using Kubernetes, managed with a continuous integration pipeline built in Jenkins.
      We then build and deploy a suite of comprehensive flow analysis (CFA) models
      as microservices. Finally, we test the service responsiveness, throughput, and
      average execution time of various containerized configurations of CFA models
      against deployment on virtual and bare-metal machines. Keywords\u200b: \u200bDocker;
      Kubernetes; Jenkins; Continuous Integration; Distributed Systems", "venue":
      "", "year": 2018, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Environmental Science", "source": "s2-fos-model"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Traff2018BuildingCE,\n
      author = {Kyle Traff and Tyler Wible and Lucas Yaege and O. David and J. Carlson
      and M. Arabi},\n title = {Building Containerized Environmental Models Using
      Continuous Integration with Jenkins and Kubernetes},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "1783694188", "name": "Kyle Traff"}, {"authorId": "30888258",
      "name": "Tyler Wible"}, {"authorId": "72234362", "name": "Lucas Yaege"}, {"authorId":
      "145217894", "name": "O. David"}, {"authorId": "2537713", "name": "J. Carlson"},
      {"authorId": "144443753", "name": "M. Arabi"}]}, {"paperId": "20d8edcbb31ea8bee452778af107b78de8d7632a",
      "externalIds": {"DOI": "10.24867/14be08gajic", "CorpusId": 239444618}, "corpusId":
      239444618, "publicationVenue": {"id": "fd9dee7b-c7fd-4193-b07c-1a54b1fd702c",
      "name": "Zbornik radova Fakulteta tehni\u010dkih nauka u Novom Sadu", "type":
      "journal", "alternate_names": ["Zb rad Fak teh nauka u Novom Sadu"], "issn":
      "0350-428X"}, "url": "https://www.semanticscholar.org/paper/20d8edcbb31ea8bee452778af107b78de8d7632a",
      "title": "RAZVOJ Kubernetes KLASTERA ZA RAD SA Docker KONTEJNERIMA", "abstract":
      "Zadatak rada predstavlja razvoj Kubernetes klastera za rad sa Docker kontejnerima
      na Raspberry Pi ra\u010dunarima. Za demonstraciju rada samog klastera, bi\u0107e
      podignut Nginx veb server kao i load balancer radi pristupanja sadr\u017eaju
      Nginx veb servera. Projekat \u0107e biti realizovan uzupotrebom Docker-a, Kubernetes-a,
      Nginx kao i load balancer-a. Re\u0161enje \u0107e biti predstavljeno uz pomo\u0107
      curl komande iz Raspberry Pi komandne linije kao i iz dva razli\u010dita veb
      pretra\u017eiva\u010da.", "venue": "Zbornik radova Fakulteta tehni\u010dkih
      nauka u Novom Sadu", "year": 2021, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes": null, "publicationDate":
      "2021-09-06", "journal": {"name": "Zbornik radova Fakulteta tehni\u010dkih nauka
      u Novom Sadu"}, "citationStyles": {"bibtex": "@Article{Gaji\u01072021RAZVOJKK,\n
      author = {Nikola Gaji\u0107},\n booktitle = {Zbornik radova Fakulteta tehni\u010dkih
      nauka u Novom Sadu},\n journal = {Zbornik radova Fakulteta tehni\u010dkih nauka
      u Novom Sadu},\n title = {RAZVOJ Kubernetes KLASTERA ZA RAD SA Docker KONTEJNERIMA},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "147667551", "name": "Nikola
      Gaji\u0107"}]}, {"paperId": "20f278b010211ba3cdbed9f68242fb814838b4c3", "externalIds":
      {"MAG": "2581969325", "DOI": "10.1007/978-1-4842-2598-1_1", "CorpusId": 63124914},
      "corpusId": 63124914, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/20f278b010211ba3cdbed9f68242fb814838b4c3",
      "title": "Kubernetes on AWS", "abstract": null, "venue": "", "year": 2017, "referenceCount":
      0, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "3-22", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Vohra2017KubernetesOA,\n
      author = {Deepak Vohra},\n pages = {3-22},\n title = {Kubernetes on AWS},\n
      year = {2017}\n}\n"}, "authors": [{"authorId": "3026624", "name": "Deepak Vohra"}]},
      {"paperId": "20f484f5ebc57a704db00e726798b4579d905a8b", "externalIds": {"DBLP":
      "conf/globecom/DimolitsasSDP22", "DOI": "10.1109/GLOBECOM48099.2022.10001214",
      "CorpusId": 255597157}, "corpusId": 255597157, "publicationVenue": {"id": "b189dec0-41d0-4cea-a906-7c5186895904",
      "name": "Global Communications Conference", "type": "conference", "alternate_names":
      ["GLOBECOM", "Glob Commun Conf"], "url": "http://www.ieee-globecom.org/"}, "url":
      "https://www.semanticscholar.org/paper/20f484f5ebc57a704db00e726798b4579d905a8b",
      "title": "AHP4HPA: An AHP-based Autoscaling Framework for Kubernetes Clusters
      at the Network Edge", "abstract": "Autoscaling resources in a power-efficient
      way is essential to enable Green Computing resource management solutions. The
      development of dynamic resource provisioning techniques could lead to the minimization
      of power consumption and simultaneously guarantee high quality of service (QoS)
      inline with the workload demand. In this work, we introduce AHP4HPA, an autoscaling
      framework for Kubernetes Clusters, which is aligned with the Kubernetes architecture
      and state-of-the-art practices. We define resource profiles, namely a mapping
      between the QoS and the computing resources, to maximize the performance. Furthermore,
      Analytic Hierarchy Process (AHP) is exploited to dictate the scaling decision
      of the resources under various Key Performance Indicators (KPIs) toward power
      optimization of the allocated resources. To guarantee maximum performance of
      the deployed image classification application, an ARIMA model is dedicated to
      providing predictions regarding the incoming workload traffic. The framework
      is evaluated against a realistic dataset in a small-scale testbed. Numerical
      results indicate at least a 9% reduction of the average energy consumption when
      compared to other state of the art techniques.", "venue": "Global Communications
      Conference", "year": 2022, "referenceCount": 8, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://zenodo.org/records/7766901/files/2022Globecom.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-12-04", "journal":
      {"name": "GLOBECOM 2022 - 2022 IEEE Global Communications Conference", "pages":
      "2566-2571"}, "citationStyles": {"bibtex": "@Article{Dimolitsas2022AHP4HPAAA,\n
      author = {Ioannis Dimolitsas and Dimitrios Spatharakis and Dimitrios Dechouniotis
      and S. Papavassiliou},\n booktitle = {Global Communications Conference},\n journal
      = {GLOBECOM 2022 - 2022 IEEE Global Communications Conference},\n pages = {2566-2571},\n
      title = {AHP4HPA: An AHP-based Autoscaling Framework for Kubernetes Clusters
      at the Network Edge},\n year = {2022}\n}\n"}, "authors": [{"authorId": "1411234556",
      "name": "Ioannis Dimolitsas"}, {"authorId": "73769210", "name": "Dimitrios Spatharakis"},
      {"authorId": "1890827", "name": "Dimitrios Dechouniotis"}, {"authorId": "1699526",
      "name": "S. Papavassiliou"}]}, {"paperId": "20fa51935357755170e4bbdabad8a98d59ada045",
      "externalIds": {"DBLP": "conf/scfa/BittarWAHSLW22", "DOI": "10.1007/978-3-031-10419-0_8",
      "CorpusId": 250267331}, "corpusId": 250267331, "publicationVenue": {"id": "d04ec0de-0c03-4ca6-82dc-0e0274e6486f",
      "name": "Asian Conference on Supercomputing Frontiers", "type": "conference",
      "alternate_names": ["SCFA", "Asian Conf Supercomput Front"]}, "url": "https://www.semanticscholar.org/paper/20fa51935357755170e4bbdabad8a98d59ada045",
      "title": "Service Function Chaining Design & Implementation Using Network Service
      Mesh in Kubernetes", "abstract": null, "venue": "Asian Conference on Supercomputing
      Frontiers", "year": 2022, "referenceCount": 0, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://link.springer.com/content/pdf/10.1007/978-3-031-10419-0_8.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "121-140"}, "citationStyles": {"bibtex": "@Article{Bittar2022ServiceFC,\n
      author = {Abdullah Bittar and Ziqiang Wang and Amir Aghasharif and Changcheng
      Huang and Gauravdeep Shami and M. Lyonnais and Rodney G. Wilson},\n booktitle
      = {Asian Conference on Supercomputing Frontiers},\n pages = {121-140},\n title
      = {Service Function Chaining Design & Implementation Using Network Service Mesh
      in Kubernetes},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2174746081",
      "name": "Abdullah Bittar"}, {"authorId": "2117427968", "name": "Ziqiang Wang"},
      {"authorId": "9410651", "name": "Amir Aghasharif"}, {"authorId": "1740408",
      "name": "Changcheng Huang"}, {"authorId": "1491623786", "name": "Gauravdeep
      Shami"}, {"authorId": "1491622048", "name": "M. Lyonnais"}, {"authorId": "2109033103",
      "name": "Rodney G. Wilson"}]}, {"paperId": "20fd64a01122e61f6c0120d25d6b332b64269168",
      "externalIds": {"DOI": "10.1007/978-1-4842-7833-8", "CorpusId": 245595932},
      "corpusId": 245595932, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/20fd64a01122e61f6c0120d25d6b332b64269168",
      "title": "Pro Microservices in .NET 6: With Examples Using ASP.NET Core 6, MassTransit,
      and Kubernetes", "abstract": null, "venue": "", "year": 2022, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://link.springer.com/content/pdf/bfm:978-1-4842-7833-8/1?pdf=chapter%20toc",
      "status": "GREEN"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["Book"],
      "publicationDate": null, "journal": {"name": "Pro Microservices in .NET 6"},
      "citationStyles": {"bibtex": "@Book{Whitesell2022ProMI,\n author = {Sean Whitesell
      and Robert Richardson and Matthew D. Groves},\n journal = {Pro Microservices
      in .NET 6},\n title = {Pro Microservices in .NET 6: With Examples Using ASP.NET
      Core 6, MassTransit, and Kubernetes},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2148557704", "name": "Sean Whitesell"}, {"authorId": "2053790123", "name":
      "Robert Richardson"}, {"authorId": "2148556004", "name": "Matthew D. Groves"}]},
      {"paperId": "213c2626f032cb770a656808a92e8a71ec553150", "externalIds": {"CorpusId":
      232128379}, "corpusId": 232128379, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/213c2626f032cb770a656808a92e8a71ec553150",
      "title": "Deploying a scalable API management platform in an enterprise Kubernetes-based
      environment", "abstract": null, "venue": "", "year": 2020, "referenceCount":
      10, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{Torino2020DeployingAS,\n
      author = {P. Torino and Ignazio Di Natali},\n title = {Deploying a scalable
      API management platform in an enterprise Kubernetes-based environment},\n year
      = {2020}\n}\n"}, "authors": [{"authorId": "143867562", "name": "P. Torino"},
      {"authorId": "2085822689", "name": "Ignazio Di Natali"}]}, {"paperId": "21482eab678a6077007fb931ab111dfe1cc451bb",
      "externalIds": {"DBLP": "conf/icsa/DesLauriersKK22", "DOI": "10.1109/ICSA-C54293.2022.00051",
      "CorpusId": 249048475}, "corpusId": 249048475, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/21482eab678a6077007fb931ab111dfe1cc451bb",
      "title": "Abstractions of Abstractions: Metadata to Infrastructure-as-Code",
      "abstract": "To support cloud newcomers and empower them with the full suite
      of benefits afforded by the DevOps toolkit, we propose a solution for generating
      infrastructure-as-code from metadata. Key-value pairs will describe the containers,
      volumes, configurations and virtual machines that make up a complex microservices
      architecture. This metadata will be first compiled down to an intermediate template
      based on the OASIS TOSCA Specification. There, it will be processed by a deployment
      and execution engine called MiCADO, which will further compile relevant sections
      of the template into the respective infrastructure-as-code for tools like Kubernetes,
      Terraform and Ansible. An implementation of the solution is currently being
      developed for a European project investigating Manufacturing-as-a-Service and
      Digital Twins, with the hopes of providing an approachable interface for users
      who are new to the unfamiliar environment of the cloud.", "venue": "2022 IEEE
      19th International Conference on Software Architecture Companion (ICSA-C)",
      "year": 2022, "referenceCount": 6, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://westminsterresearch.westminster.ac.uk/download/d8fd8d1ca6c75555a632b17b33c9eeabfb3582656b36849471bb392ff197ac92/125148/FIST2022-v2.1.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-03-01",
      "journal": {"name": "2022 IEEE 19th International Conference on Software Architecture
      Companion (ICSA-C)", "pages": "230-232"}, "citationStyles": {"bibtex": "@Article{Deslauriers2022AbstractionsOA,\n
      author = {J. Deslauriers and J. Kov\u00e1cs and T. Kiss},\n booktitle = {2022
      IEEE 19th International Conference on Software Architecture Companion (ICSA-C)},\n
      journal = {2022 IEEE 19th International Conference on Software Architecture
      Companion (ICSA-C)},\n pages = {230-232},\n title = {Abstractions of Abstractions:
      Metadata to Infrastructure-as-Code},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "147053789", "name": "J. Deslauriers"}, {"authorId": "11815194", "name": "J.
      Kov\u00e1cs"}, {"authorId": "153477513", "name": "T. Kiss"}]}, {"paperId": "21498cbe439c12158549e8543281a0afc706c87d",
      "externalIds": {"DOI": "10.1109/mspec.2021.9606504", "CorpusId": 243922215},
      "corpusId": 243922215, "publicationVenue": {"id": "25f60968-952b-484e-be36-50366f5e1d81",
      "name": "IEEE spectrum", "type": "journal", "alternate_names": ["IEEE spectr",
      "IEEE Spectr", "IEEE Spectrum"], "issn": "0018-9235", "url": "http://ieeexplore.ieee.org/servlet/opac?punumber=6",
      "alternate_urls": ["http://spectrum.ieee.org/", "https://spectrum.ieee.org/"]},
      "url": "https://www.semanticscholar.org/paper/21498cbe439c12158549e8543281a0afc706c87d",
      "title": "Home Clustering Made Easier: Learn Docker and Kubernetes with the
      Turing Pi", "abstract": "Once upon a time, if you wanted to install a piece
      of software, you just stuck an executable file on your hard drive somewhere
      and went on your merry way. But as computers became more complex, so did installation
      procedures, which led to problems like \u201cdependency hell,\u201d as different
      applications dueled over conflicting system configurations.", "venue": "IEEE
      spectrum", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2021-11-01", "journal": {"name": "IEEE Spectrum",
      "pages": "16-18", "volume": "58"}, "citationStyles": {"bibtex": "@Article{Cass2021HomeCM,\n
      author = {S. Cass},\n booktitle = {IEEE spectrum},\n journal = {IEEE Spectrum},\n
      pages = {16-18},\n title = {Home Clustering Made Easier: Learn Docker and Kubernetes
      with the Turing Pi},\n volume = {58},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "143782075", "name": "S. Cass"}]}, {"paperId": "216f8f37d34095c666b14f888dc8427f8e9dce8a",
      "externalIds": {"DOI": "10.1109/WCNPS53648.2021.9626292", "CorpusId": 244852652},
      "corpusId": 244852652, "publicationVenue": {"id": "dae6f045-1ca3-4f14-b1a6-63b7affa75cf",
      "name": "Workshop Communication Networks and Power Systems", "type": "conference",
      "alternate_names": ["WCNPS", "Workshop Commun Netw Power Syst"]}, "url": "https://www.semanticscholar.org/paper/216f8f37d34095c666b14f888dc8427f8e9dce8a",
      "title": "A Collaborative Weightless Neural Network", "abstract": "In the last
      few years, the demand for cloud-based high-performance systems has gone hand
      in hand with the field of Machine Learning (ML), as most deep learning models
      are increasingly requiring more powerful machines to efficiently handle soaring
      amounts of data on a daily basis. Although this seems like a good distributed
      solution, it actually leads to centralizing training and inference in commercially
      available data centers. Thus, this work presents a collaborative architecture
      that uses Weightless Neural Networks (WNNs) to enable concurrent training/inference
      in modern container-based cloud systems, such as Kubernetes and Docker Swarm.
      A WNN is a class of Artificial Neural Networks (ANNs) that uses a set of Random
      Access Memories (RAMs) to map training and classification information. Performance
      results show that our collaborative architecture can efficiently learn and classify
      well-know datasets in about 2 times faster than traditional architectures, while
      also being able to scale to many concurrent clients.", "venue": "Workshop Communication
      Networks and Power Systems", "year": 2021, "referenceCount": 0, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-11-18", "journal": {"name":
      "2021 Workshop on Communication Networks and Power Systems (WCNPS)", "pages":
      "1-5"}, "citationStyles": {"bibtex": "@Article{Silva2021ACW,\n author = {Iago
      P. da Silva and Jorge G. dos Santos and A. S. Nery},\n booktitle = {Workshop
      Communication Networks and Power Systems},\n journal = {2021 Workshop on Communication
      Networks and Power Systems (WCNPS)},\n pages = {1-5},\n title = {A Collaborative
      Weightless Neural Network},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2143003227", "name": "Iago P. da Silva"}, {"authorId": "2142983355", "name":
      "Jorge G. dos Santos"}, {"authorId": "2993938", "name": "A. S. Nery"}]}, {"paperId":
      "21a29121baaf7051efafe64dd7236ee4b37250dd", "externalIds": {"ArXiv": "2112.14845",
      "CorpusId": 251402448}, "corpusId": 251402448, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/21a29121baaf7051efafe64dd7236ee4b37250dd",
      "title": "Collective Autoscaling for Cloud Microservices", "abstract": "As cloud
      applications shift from monoliths to loosely coupled microservices, application
      developers must decide how many compute resources (e.g., number of replicated
      containers) to assign to each microservice within an application. This decision
      affects both (1) the dollar cost to the application developer and (2) the end-to-end
      latency perceived by the application user. Today, individual microservices are
      autoscaled independently by adding VMs whenever per-microservice CPU or memory
      utilization crosses a configurable threshold. However, an application user\u2019s
      end-to-end latency consists of time spent on multiple microservices and each
      microservice might need a different number of VMs to achieve an overall end-to-end
      latency. We present COLA, an autoscaler for microservice-based applications,
      which collectively allocates VMs to microservices with a global goal of minimizing
      dollar cost while keep-ing end-to-end application latency under a given target.
      Using 5 open-source applications, we compared COLA to several utilization and
      machine learning based autoscalers. We evaluate COLA across different compute
      settings on Google Kubernetes Engine (GKE) in which users manage compute resources,
      GKE standard, and a new mode of operation in which the cloud provider manages
      compute infrastructure, GKE Autopilot. COLA meets a desired median or tail latency
      target on 53 of 63 workloads where it provides a cost reduction of 19.3%, on
      average, over the next cheapest autoscaler. COLA is the most cost effective
      autoscaling policy for 48 of these 53 workloads. The cost savings from managing
      a cluster with COLA result in COLA paying for its training cost in a few days.
      On smaller applications, for which we can exhaustively search microservice configurations,
      we find that COLA is optimal for 90% of cases and near optimal otherwise.",
      "venue": "", "year": 2021, "referenceCount": 62, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Engineering"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Engineering", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2021-12-01",
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Sachidananda2021CollectiveAF,\n
      author = {Vighnesh Sachidananda and Anirudh Sivaraman},\n title = {Collective
      Autoscaling for Cloud Microservices},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2106768483", "name": "Vighnesh Sachidananda"}, {"authorId": "39118448", "name":
      "Anirudh Sivaraman"}]}, {"paperId": "21be7bdae1c35f531960471ff299c53d375acd0a",
      "externalIds": {"DBLP": "conf/ictc/RenLL22", "DOI": "10.1109/ICTC55196.2022.9952673",
      "CorpusId": 253882038}, "corpusId": 253882038, "publicationVenue": {"id": "9aa57e01-2dc2-4422-93b7-2b628326f78c",
      "name": "Information and Communication Technology Convergence", "type": "conference",
      "alternate_names": ["International Conference on Information and Communication
      Technology Convergence", "Inf Commun Technol Converg", "Int Conf Inf Commun
      Technol Converg", "ICTC"]}, "url": "https://www.semanticscholar.org/paper/21be7bdae1c35f531960471ff299c53d375acd0a",
      "title": "Blockchain-Based Trusted Container Orchestration for Edge Computing",
      "abstract": "In recent years, IoT elements are growing exponentially. The massive
      amount of data generated by these devices poses a daunting challenge for sensors
      and devices of limited capability and resources. Edge computing is considered
      as a promising solution to provide efficient data processing by bringing the
      computation capability closer to the network edge. However, edge computing vision
      faces several challenges in terms of security and application orchestration.
      This paper proposes a trusted containerized application orchestration framework
      by leveraging blockchain technology. The proposed approach is based on the Ethereum
      blockchain and Kubernetes container platforms to integrate access control and
      application orchestration in an edge networking environment. We evaluate the
      proposed approach through a proof-of-concept prototype implementation along
      with trusted orchestration operations. The result of our simulation study shows
      the effectiveness of the proposed approach.", "venue": "Information and Communication
      Technology Convergence", "year": 2022, "referenceCount": 14, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-10-19", "journal":
      {"name": "2022 13th International Conference on Information and Communication
      Technology Convergence (ICTC)", "pages": "88-92"}, "citationStyles": {"bibtex":
      "@Article{Ren2022BlockchainBasedTC,\n author = {Shuyang Ren and Choonhwa Lee
      and Zohaib Latif},\n booktitle = {Information and Communication Technology Convergence},\n
      journal = {2022 13th International Conference on Information and Communication
      Technology Convergence (ICTC)},\n pages = {88-92},\n title = {Blockchain-Based
      Trusted Container Orchestration for Edge Computing},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "6999155", "name": "Shuyang Ren"}, {"authorId": "92671954",
      "name": "Choonhwa Lee"}, {"authorId": "50874423", "name": "Zohaib Latif"}]},
      {"paperId": "21c85aeafda19c83ad78eac7abc796f7080f6403", "externalIds": {"CorpusId":
      259362246}, "corpusId": 259362246, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/21c85aeafda19c83ad78eac7abc796f7080f6403",
      "title": "An Approach for Energy-E\ufb00icient, Fault Tolerant FaaS Platforms",
      "abstract": "Recent years have seen the emergence of serverless computing and,
      in particular, the \u201cFunction as a Service\u201d (FaaS) paradigm, which
      lets users run arbitrary functions without being concerned about operational
      issues. This paper describes several research questions about how to design
      better Function-as-a-Service platforms in term of performance, fault tolerance
      and energy consumption. I have started tackling these open questions, starting
      with an evaluation of Kubernetes-native FaaS frameworks.", "venue": "", "year":
      2023, "referenceCount": 18, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Inproceedings{Bouizem2023AnAF,\n author = {Yasmina Bouizem},\n
      title = {An Approach for Energy-E\ufb00icient, Fault Tolerant FaaS Platforms},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "119175575", "name": "Yasmina
      Bouizem"}]}, {"paperId": "21c8972cec84e144b515aa0d6af13e0498cf6fa9", "externalIds":
      {"DOI": "10.3390/electronics13020285", "CorpusId": 266886502}, "corpusId": 266886502,
      "publicationVenue": {"id": "ccd8e532-73c6-414f-bc91-271bbb2933e2", "name": "Electronics",
      "type": "journal", "issn": "1450-5843", "alternate_issns": ["2079-9292", "0883-4989"],
      "url": "http://www.electronics.etfbl.net/", "alternate_urls": ["http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-247562",
      "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-247562", "https://www.mdpi.com/journal/electronics"]},
      "url": "https://www.semanticscholar.org/paper/21c8972cec84e144b515aa0d6af13e0498cf6fa9",
      "title": "A Time Series-Based Approach to Elastic Kubernetes Scaling", "abstract":
      "With the increasing popularity of cloud-native architectures and containerized
      applications, Kubernetes has become a critical platform for managing these applications.
      However, Kubernetes still faces challenges when it comes to resource management.
      Specifically, the platform cannot achieve timely scaling of the resources of
      applications when their workloads fluctuate, leading to insufficient resource
      allocation and potential service disruptions. To address this challenge, this
      study proposes a predictive auto-scaling Kubernetes Operator based on time series
      forecasting algorithms, aiming to dynamically adjust the number of running instances
      in the cluster to optimize resource management. In this study, the Holt\u2013Winter
      forecasting method and the Gated Recurrent Unit (GRU) neural network, two robust
      time series forecasting algorithms, are employed and dynamically managed. To
      evaluate the effectiveness, we collected workload metrics from a deployed RESTful
      HTTP application, implemented predictive auto-scaling, and assessed the differences
      in service quality before and after the implementation. The experimental results
      demonstrate that the predictive auto-scaling component can accurately predict
      the future trend of the metrics and intelligently scale resources based on the
      prediction results, with a Mean Squared Error (MSE) of 0.00166. Compared to
      the deployment using a single algorithm, the cold start time is reduced by 1
      h and 41 min, and the fluctuation in service quality is reduced by 83.3%. This
      process effectively enhances the quality of service and offers a novel solution
      for resource management in Kubernetes clusters.", "venue": "Electronics", "year":
      2024, "referenceCount": 25, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/2079-9292/13/2/285/pdf?version=1704708410",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2024-01-08", "journal":
      {"name": "Electronics"}, "citationStyles": {"bibtex": "@Article{Yuan2024ATS,\n
      author = {Haibin Yuan and Shengchen Liao},\n booktitle = {Electronics},\n journal
      = {Electronics},\n title = {A Time Series-Based Approach to Elastic Kubernetes
      Scaling},\n year = {2024}\n}\n"}, "authors": [{"authorId": "2257435348", "name":
      "Haibin Yuan"}, {"authorId": "2278696468", "name": "Shengchen Liao"}]}, {"paperId":
      "21d7c5c2479379ca98afbd7adbd79b8465c3468d", "externalIds": {"DBLP": "conf/closer/JindalG20",
      "PubMedCentral": "7982688", "DOI": "10.1007/978-3-030-72369-9_8", "CorpusId":
      232322025}, "corpusId": 232322025, "publicationVenue": {"id": "229ff272-1128-48a4-94eb-2ea4041eadff",
      "name": "International Conference on Cloud Computing and Services Science",
      "type": "conference", "alternate_names": ["CLOSER", "Int Conf Cloud Comput Serv
      Sci"], "url": "http://closer.scitevents.org/"}, "url": "https://www.semanticscholar.org/paper/21d7c5c2479379ca98afbd7adbd79b8465c3468d",
      "title": "From DevOps to NoOps: Is It Worth It?", "abstract": null, "venue":
      "International Conference on Cloud Computing and Services Science", "year":
      2021, "referenceCount": 42, "citationCount": 5, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2021-03-23", "journal": {"name": "Cloud
      Computing and Services Science", "pages": "178 - 202", "volume": "1399"}, "citationStyles":
      {"bibtex": "@Article{Jindal2021FromDT,\n author = {Anshul Jindal and M. Gerndt},\n
      booktitle = {International Conference on Cloud Computing and Services Science},\n
      journal = {Cloud Computing and Services Science},\n pages = {178 - 202},\n title
      = {From DevOps to NoOps: Is It Worth It?},\n volume = {1399},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "38833592", "name": "Anshul Jindal"}, {"authorId":
      "3240465", "name": "M. Gerndt"}]}, {"paperId": "221cc6738536ca20827cbc434f7bdd98432825ce",
      "externalIds": {"MAG": "2967721335", "CorpusId": 201902205}, "corpusId": 201902205,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/221cc6738536ca20827cbc434f7bdd98432825ce",
      "title": "HIGH AVAILABILITY FOR CLUSTER OF STATEFUL SERVICES BEHIND LOAD BALANCER
      IN PRIVATE/PUBLIC CLOUD", "abstract": "Techniques are described herein for using
      stateful availability to maintain a session when auto-scaling a stateful service
      instance cluster or when a service instance fails. This has many advantages
      over current approaches in which public cloud and Kubernetes deployments can
      only provide stateless availability due to a number of limitations when load
      balancing a cluster of service instances. DETAILED DESCRIPTION The industry
      lacks support for high availability when traffic is load-balanced to a cluster
      of stateful service instances (e.g., firewall (FW)) in a public cloud. Existing
      solutions are not stateful, and as such sessions are lost when auto-scaling
      or when the service instance fails. This is a generic issue that is prevalent
      in the public cloud but also in any use case when a load balancer changes the
      destination Internet Protocol (IP) address and/or port number. For example,
      the Kubernetes environment also has this issue because the service label can
      cause the destination IP address and port to change to a serving container instance.
      A flow entering a public cloud application is typically destined to a Virtual
      IP (VIP) address that is owned by an edge Load Balancer (LB). The LB changes
      the destination IP (DIP) address to a service instance IP address (e.g., FW
      IP address). This affects the 5tuple flow header and pins the flow to a particular
      service instance. When a service instance fails, the flow can theoretically
      be redirected by an LB to another service instance. However, the 5-tuple flow
      header is no longer generic, and the receiving service instance needs to determine
      the original flow to retrieve its state. 2 Leung et al.: HIGH AVAILABILITY FOR
      CLUSTER OF STATEFUL SERVICES BEHIND LOAD BA Published by Technical Disclosure
      Commons, 2019 2 5828 Flows can be identified in the flow tuple either as the
      DIP address set to the VIP address or the DIP address set to the FW IP address.
      The VIP address is a virtual IP address that is shared among the service instances.
      The FW IP address is the IP address of a service instance. It would be preferable
      for the DIP address to be set to the FW IP address as seen on the wire and expected
      by the user. Internally, the FW IP address is remapped to the VIP address. But
      only the FW IP address is exposed and the VIP address is hidden for internal
      operation. Solutions are described herein for establishing a consistent way
      for any service instance to identify a flow for the purposes of retrieving its
      flow state to handle the flow statefully. A first solution is to rewrite the
      DIP address to the VIP address when the packet is received on an external network
      interface of a service instance. A second solution is to maintain a VIP address
      based flow tuple (key) to FW IP address (value) mapping to recover the original
      flow tuple. Figure 1 below illustrates the first solution. Here, the flow is
      identified based on the tuple with a common VIP address in place of the DIP
      address. The actual DIP address (FW IP address) is stored in the flow state.
      As represented by the green box, flows received on any service (e.g., FW) instance
      are mapped to a common tuple by changing the DIP address to the VIP address.
      \u201cOld\u201d indicates a new flow created from recovered flow states. \u201cNew\u201d
      indicates a new flow created from scratch (received flow). 3 Defensive Publications
      Series, Art. 2273 [2019] https://www.tdcommons.org/dpubs_series/2273", "venue":
      "", "year": 2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Leung2019HIGHAF,\n
      author = {K. Leung and Louis Zhijun Liu and J. Felix and A. Ossipov and M. Mahmoud},\n
      title = {HIGH AVAILABILITY FOR CLUSTER OF STATEFUL SERVICES BEHIND LOAD BALANCER
      IN PRIVATE/PUBLIC CLOUD},\n year = {2019}\n}\n"}, "authors": [{"authorId": "145805827",
      "name": "K. Leung"}, {"authorId": "1391189796", "name": "Louis Zhijun Liu"},
      {"authorId": "120813500", "name": "J. Felix"}, {"authorId": "52059113", "name":
      "A. Ossipov"}, {"authorId": "2042383880", "name": "M. Mahmoud"}]}, {"paperId":
      "222845b1e871eb8387f2bbb4700cce30d52fc73e", "externalIds": {"DOI": "10.1007/s10586-018-02890-1",
      "CorpusId": 254378136}, "corpusId": 254378136, "publicationVenue": {"id": "f1d0ef3d-4e90-41e9-b454-f589a933654f",
      "name": "Cluster Computing", "type": "journal", "alternate_names": ["Clust Comput"],
      "issn": "1386-7857", "url": "https://www.springer.com/computer/communication+networks/journal/10586",
      "alternate_urls": ["https://link.springer.com/journal/10586", "http://www.springer.com/computer/communication+networks/journal/10586"]},
      "url": "https://www.semanticscholar.org/paper/222845b1e871eb8387f2bbb4700cce30d52fc73e",
      "title": "A study on performance measures for auto-scaling CPU-intensive containerized
      applications", "abstract": null, "venue": "Cluster Computing", "year": 2019,
      "referenceCount": 0, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://link.springer.com/content/pdf/10.1007/s10586-018-02890-1.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2019-01-05", "journal": {"name": "Cluster Computing", "pages": "995 - 1006",
      "volume": "22"}, "citationStyles": {"bibtex": "@Article{Casalicchio2019ASO,\n
      author = {E. Casalicchio},\n booktitle = {Cluster Computing},\n journal = {Cluster
      Computing},\n pages = {995 - 1006},\n title = {A study on performance measures
      for auto-scaling CPU-intensive containerized applications},\n volume = {22},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "1721675", "name": "E. Casalicchio"}]},
      {"paperId": "222f467c3f2bd7bbb1b5d789ffc18a935d788ced", "externalIds": {"DOI":
      "10.3139/9783446456020.018", "CorpusId": 240389329}, "corpusId": 240389329,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/222f467c3f2bd7bbb1b5d789ffc18a935d788ced",
      "title": "Kubernetes erweitern", "abstract": null, "venue": "Kubernetes in Action",
      "year": 2018, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [], "publicationTypes": null, "publicationDate": "2018-07-09", "journal": {"name":
      "Kubernetes in Action"}, "citationStyles": {"bibtex": "@Article{Luk\u0161a2018KubernetesE,\n
      author = {Marko Luk\u0161a},\n booktitle = {Kubernetes in Action},\n journal
      = {Kubernetes in Action},\n title = {Kubernetes erweitern},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "2136279281", "name": "Marko Luk\u0161a"}]}, {"paperId":
      "226da60d76995528df370c50c6a580dbd06e01f5", "externalIds": {"DBLP": "conf/cnsm/McNamaraFF19",
      "MAG": "3009436979", "DOI": "10.23919/CNSM46954.2019.9012667", "CorpusId": 207811569},
      "corpusId": 207811569, "publicationVenue": {"id": "7a0ab88e-224a-475b-9ea6-e66a6b3448c8",
      "name": "Conference on Network and Service Management", "type": "conference",
      "alternate_names": ["Conf Netw Serv Manag", "CNSM"], "url": "http://www.cnsm-conf.org/"},
      "url": "https://www.semanticscholar.org/paper/226da60d76995528df370c50c6a580dbd06e01f5",
      "title": "A Hybrid Machine Learning/Policy Approach to Optimise Video Path Selection",
      "abstract": "Services such as interactive video and real time gaming are ubiquitous
      on modern networks. The approaching realisation of 5G as well as the virtualisation
      and scalability of network functions made possible by technologies such as NFV
      and Kubernetes pushes the frontiers of what applications can do and how they
      can be deployed. However, managing such intangible services is a real challenge
      for network management systems. Adaptive Policy is an approach that can be applied
      to govern such services in an intent-based manner.In this work, we are exploring
      if the manner in which such services are deployed, virtualized, and scaled can
      be guided using real time context aware decision making. We are investigating
      how to apply Adaptive Policy to the problem of optimizing interactive video
      streaming delivery in a virtualized environment. We utilise components of our
      previously established test bed framework and implement a single layer neural
      network through Adaptive Policy, in which weights assigned to network metrics
      are continuously adjusted through supervised test cycles, resulting in weights
      in proportion to their associated impact on our video stream quality. We present
      the initial test results from our Perceptron inspired policy-based approach
      to video quality optimisation through weighted network resource evaluation.",
      "venue": "Conference on Network and Service Management", "year": 2019, "referenceCount":
      7, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2019-10-01",
      "journal": {"name": "2019 15th International Conference on Network and Service
      Management (CNSM)", "pages": "1-5"}, "citationStyles": {"bibtex": "@Article{McNamara2019AHM,\n
      author = {Joseph McNamara and Liam Fallon and Enda Fallon},\n booktitle = {Conference
      on Network and Service Management},\n journal = {2019 15th International Conference
      on Network and Service Management (CNSM)},\n pages = {1-5},\n title = {A Hybrid
      Machine Learning/Policy Approach to Optimise Video Path Selection},\n year =
      {2019}\n}\n"}, "authors": [{"authorId": "1573267986", "name": "Joseph McNamara"},
      {"authorId": "25611299", "name": "Liam Fallon"}, {"authorId": "144789260", "name":
      "Enda Fallon"}]}, {"paperId": "22732f216ea6de60d4fb71d3550f1eba78036a8a", "externalIds":
      {"DOI": "10.1007/s42514-020-00025-w", "CorpusId": 257162393}, "corpusId": 257162393,
      "publicationVenue": {"id": "24061e5a-667f-47e0-8af6-00edcfe20c88", "name": "CCF
      Transactions on High Performance Computing", "type": "journal", "alternate_names":
      ["CCF Trans High Perform Comput"], "issn": "2524-4922", "url": "https://link.springer.com/journal/volumesAndIssues/42514"},
      "url": "https://www.semanticscholar.org/paper/22732f216ea6de60d4fb71d3550f1eba78036a8a",
      "title": "Improving the efficiency of HPC data movement on container-based virtual
      cluster", "abstract": null, "venue": "CCF Transactions on High Performance Computing",
      "year": 2020, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2020-03-01",
      "journal": {"name": "CCF Transactions on High Performance Computing", "pages":
      "67 - 80", "volume": "2"}, "citationStyles": {"bibtex": "@Article{Huang2020ImprovingTE,\n
      author = {Dan Huang and Yutong Lu},\n booktitle = {CCF Transactions on High
      Performance Computing},\n journal = {CCF Transactions on High Performance Computing},\n
      pages = {67 - 80},\n title = {Improving the efficiency of HPC data movement
      on container-based virtual cluster},\n volume = {2},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2110406484", "name": "Dan Huang"}, {"authorId": "35150586",
      "name": "Yutong Lu"}]}, {"paperId": "2274681395e2f6699079131c3247d7e6a03ef5d3",
      "externalIds": {"DBLP": "journals/tpds/KarnKHSE21", "MAG": "3092118421", "DOI":
      "10.1109/TPDS.2020.3029088", "CorpusId": 226230974}, "corpusId": 226230974,
      "publicationVenue": {"id": "7c9d091e-015e-4e5d-a11f-9bc369fcf414", "name": "IEEE
      Transactions on Parallel and Distributed Systems", "type": "journal", "alternate_names":
      ["IEEE Trans Parallel Distrib Syst"], "issn": "1045-9219", "url": "http://www.computer.org/tpds",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=71"]},
      "url": "https://www.semanticscholar.org/paper/2274681395e2f6699079131c3247d7e6a03ef5d3",
      "title": "Cryptomining Detection in Container Clouds Using System Calls and
      Explainable Machine Learning", "abstract": "The use of containers in cloud computing
      has been steadily increasing. With the emergence of Kubernetes, the management
      of applications inside containers (or pods) is simplified. Kubernetes allows
      automated actions like self-healing, scaling, rolling back, and updates for
      the application management. At the same time, security threats have also evolved
      with attacks on pods to perform malicious actions. Out of several recent malware
      types, cryptomining has emerged as one of the most serious threats with its
      hijacking of server resources for cryptocurrency mining. During application
      deployment and execution in the pod, a cryptomining process, started by a hidden
      malware executable can be run in the background, and a method to detect malicious
      cryptomining software running inside Kubernetes pods is needed. One feasible
      strategy is to use machine learning (ML) to identify and classify pods based
      on whether or not they contain a running process of cryptomining. In addition
      to such detection, the system administrator will need an explanation as to the
      reason(s) of the ML''s classification outcome. The explanation will justify
      and support disruptive administrative decisions such as pod removal or its restart
      with a new image. In this article, we describe the design and implementation
      of an ML-based detection system of anomalous pods in a Kubernetes cluster by
      monitoring Linux-kernel system calls (syscalls). Several types of cryptominers
      images are used as containers within an anomalous pod, and several ML models
      are built to detect such pods in the presence of numerous healthy cloud workloads.
      Explainability is provided using SHAP, LIME, and a novel auto-encoding-based
      scheme for LSTM models. Seven evaluation metrics are used to compare and contrast
      the explainable models of the proposed ML cryptomining detection engine.", "venue":
      "IEEE Transactions on Parallel and Distributed Systems", "year": 2021, "referenceCount":
      59, "citationCount": 31, "influentialCitationCount": 2, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/71/9218224/09215018.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2021-03-01", "journal": {"name": "IEEE Transactions on Parallel
      and Distributed Systems", "pages": "674-691", "volume": "32"}, "citationStyles":
      {"bibtex": "@Article{Karn2021CryptominingDI,\n author = {R. Karn and P. Kudva
      and Hai Huang and Sahil Suneja and I. Elfadel},\n booktitle = {IEEE Transactions
      on Parallel and Distributed Systems},\n journal = {IEEE Transactions on Parallel
      and Distributed Systems},\n pages = {674-691},\n title = {Cryptomining Detection
      in Container Clouds Using System Calls and Explainable Machine Learning},\n
      volume = {32},\n year = {2021}\n}\n"}, "authors": [{"authorId": "1831379", "name":
      "R. Karn"}, {"authorId": "145822807", "name": "P. Kudva"}, {"authorId": "2146284642",
      "name": "Hai Huang"}, {"authorId": "40005837", "name": "Sahil Suneja"}, {"authorId":
      "144961113", "name": "I. Elfadel"}]}, {"paperId": "2276c170867ba966dba67c87b521f913c57c5134",
      "externalIds": {"DOI": "10.1109/PDGC56933.2022.10053342", "CorpusId": 257260776},
      "corpusId": 257260776, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2276c170867ba966dba67c87b521f913c57c5134",
      "title": "Reproducible High Performance Computing without Redundancy with Nix",
      "abstract": "High performance computing (HPC) clusters are typically managed
      in a restrictive manner; the large user base makes cluster administrators unwilling
      to allow privilege escalation. Here we discuss existing methods of package management,
      including those which have been developed with scalability in mind, and enumerate
      the drawbacks and advantages of each management methodology. We contrast the
      paradigms of containerization via docker, virtualization via KVM, pod-infrastructures
      via Kubernetes, and specialized HPC packaging systems via Spack and identify
      key areas of neglect. We demonstrate how functional programming due to reliance
      on immutable states has been leveraged for deterministic package management
      via the nix-language expressions. We show its associated ecosystem is a prime
      candidate for HPC package management. We further develop guidelines and identify
      bottlenecks in the existing structure and present the methodology by which the
      nix ecosystem should be developed further as an optimal tool for HPC package
      management. We assert that the caveats of the nix ecosystem can easily mitigated
      by considerations relevant only to HPC systems, without compromising on functional
      methodology and features of the nix-language. We show that benefits of adoption
      in terms of generating reproducible derivations in a secure manner allow for
      workflows to be scaled across heterogeneous clusters. In particular, from the
      implementation hurdles faced during the compilation and running of the d-SEAMS
      scientific software engine, distributed as a nix-derivation on an HPC cluster,
      we identify communication protocols for working with SLURM and TORQUE user resource
      allocation queues. These protocols are heuristically defined and described in
      terms of the reference implementation required for queue-efficient nix builds.",
      "venue": "2022 Seventh International Conference on Parallel, Distributed and
      Grid Computing (PDGC)", "year": 2022, "referenceCount": 28, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2022-11-25", "journal":
      {"name": "2022 Seventh International Conference on Parallel, Distributed and
      Grid Computing (PDGC)", "pages": "238-242"}, "citationStyles": {"bibtex": "@Conference{Goswami2022ReproducibleHP,\n
      author = {Rohit Goswami and Ruhila S. and Amrita Goswami and Sonaly Goswami
      and D. Goswami},\n booktitle = {2022 Seventh International Conference on Parallel,
      Distributed and Grid Computing (PDGC)},\n journal = {2022 Seventh International
      Conference on Parallel, Distributed and Grid Computing (PDGC)},\n pages = {238-242},\n
      title = {Reproducible High Performance Computing without Redundancy with Nix},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "49394470", "name": "Rohit Goswami"},
      {"authorId": "2210247400", "name": "Ruhila S."}, {"authorId": "1492120298",
      "name": "Amrita Goswami"}, {"authorId": "148051616", "name": "Sonaly Goswami"},
      {"authorId": "144290841", "name": "D. Goswami"}]}, {"paperId": "227c8b0ec905c3d221e0b5936d2d849ef29a4d29",
      "externalIds": {"MAG": "2885288689", "DBLP": "conf/hotcloud/NadgowdaSI18", "CorpusId":
      51876318}, "corpusId": 51876318, "publicationVenue": {"id": "42ad1c65-dc2f-448c-bbbf-483b016441b3",
      "name": "USENIX Workshop on Hot Topics in Cloud Computing", "type": "conference",
      "alternate_names": ["USENIX conference on Hot Topics in Cloud Ccomputing", "USENIX
      Workshop Hot Top Cloud Comput", "HotCloud", "USENIX conf Hot Top Cloud Ccomputing"]},
      "url": "https://www.semanticscholar.org/paper/227c8b0ec905c3d221e0b5936d2d849ef29a4d29",
      "title": "RECap: Run-Escape Capsule for On-demand Managed Service Delivery in
      the Cloud", "abstract": "Application runtimes are undergoing a fundamental transformation
      in the cloud, from general-purpose operating systems (OSes) in virtual machines
      (VMs) to lightweight, minimal OSes in microcontainers. On one hand, such transformation
      is helping reduce application footprint in the cloud to increase agility, density
      and to minimize attack surface. On the other hand it makes it challenging to
      implement system and application management tasks. Inspired from the on-demand
      Function as a Service (FaaS) model in serverless computing, in RECap we are
      designing a cloud-native solution to deliver systems and application management
      tasks through specially-managed Capsule containers. Capsule containers are dynamically
      attached to the running containers for the duration of their implemented function
      and are safely removed from application context afterwards. More generally,
      RECap framework allows us to design disaggregated on-demand managed service
      delivery for containers in the cloud. In this paper, we describe the motivation
      and the emerging opportunity for RECap in the cloud. We discuss its core design
      principles, performance, security and manageability trade-offs. We present current
      design of RECap for the Kubernetes platform.", "venue": "USENIX Workshop on
      Hot Topics in Cloud Computing", "year": 2018, "referenceCount": 12, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Business", "Computer Science"], "s2FieldsOfStudy": [{"category":
      "Business", "source": "external"}, {"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Article{Nadgowda2018RECapRC,\n author = {S. Nadgowda and Sahil
      Suneja and C. Isci},\n booktitle = {USENIX Workshop on Hot Topics in Cloud Computing},\n
      title = {RECap: Run-Escape Capsule for On-demand Managed Service Delivery in
      the Cloud},\n year = {2018}\n}\n"}, "authors": [{"authorId": "2718536", "name":
      "S. Nadgowda"}, {"authorId": "40005837", "name": "Sahil Suneja"}, {"authorId":
      "1765914", "name": "C. Isci"}]}, {"paperId": "227dc697316139eb8b5d66ec2c5cda096a54b190",
      "externalIds": {"MAG": "2900756925", "CorpusId": 209789968}, "corpusId": 209789968,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/227dc697316139eb8b5d66ec2c5cda096a54b190",
      "title": "Building Shopify''s PaaS on Kubernetes", "abstract": null, "venue":
      "", "year": 2018, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Engineering"],
      "s2FieldsOfStudy": [{"category": "Engineering", "source": "external"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Thukral2018BuildingSP,\n author = {K. Thukral},\n
      title = {Building Shopify''s PaaS on Kubernetes},\n year = {2018}\n}\n"}, "authors":
      [{"authorId": "1475761048", "name": "K. Thukral"}]}, {"paperId": "229acbae9b75e2c9cfabb35e3fcda6f4f7ab2be2",
      "externalIds": {"DBLP": "conf/cibse/RochaS023", "DOI": "10.5753/cibse.2023.24693",
      "CorpusId": 259298455}, "corpusId": 259298455, "publicationVenue": {"id": "7f2b4480-0c5c-4de9-a49f-c31c9ff50331",
      "name": "Conferencia Iberoamericana de Software Engineering", "type": "conference",
      "alternate_names": ["CIbSE", "Conf Iberoam Softw Eng"], "url": "http://cibseconference.org/"},
      "url": "https://www.semanticscholar.org/paper/229acbae9b75e2c9cfabb35e3fcda6f4f7ab2be2",
      "title": "Patterns in Microservices-based Development: A Grey Literature Review",
      "abstract": "Microservices emerged due to the massive adoption of cloud computing
      and the need to integrate legacy systems. However, there still needs to be a
      greater understanding of adopting a microservice-based architectural style.
      Besides, there is a need for guidelines to operationalize those microservices.
      We conducted a grey literature review to identify commonly used architectural
      patterns and how they are implemented following design patterns. We present
      two key contributions. Firstly, we identified four architectural patterns and
      23 design patterns. Secondly, we identified a catalog of tools for implementing
      the main patterns adopted when using the microservices style. The Proxy and
      the SAGA patterns are the most used in communicating and linking data for services.
      Additionally, tools such as Kubernetes, Docker, and Amazon WS are the most used
      for implementing microservices and deploying them into containers.", "venue":
      "Conferencia Iberoamericana de Software Engineering", "year": 2023, "referenceCount":
      21, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://sol.sbc.org.br/index.php/cibse/article/download/24693/24514",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Review"], "publicationDate": "2023-04-24",
      "journal": {"pages": "61-76"}, "citationStyles": {"bibtex": "@Article{Rocha2023PatternsIM,\n
      author = {F. G. Rocha and M. S. Soares and Guillermo Rodr\u00edguez},\n booktitle
      = {Conferencia Iberoamericana de Software Engineering},\n pages = {61-76},\n
      title = {Patterns in Microservices-based Development: A Grey Literature Review},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "152685143", "name": "F. G. Rocha"},
      {"authorId": "87647039", "name": "M. S. Soares"}, {"authorId": "2142528517",
      "name": "Guillermo Rodr\u00edguez"}]}, {"paperId": "22dbe1b332a851f259efadd508a7b5a8ff0fc679",
      "externalIds": {"DOI": "10.1109/IEEECloudSummit52029.2021.00014", "CorpusId":
      245540916}, "corpusId": 245540916, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/22dbe1b332a851f259efadd508a7b5a8ff0fc679",
      "title": "Managing Big Data Stream Pipelines Using Graphical Service Mesh Tools",
      "abstract": "Current big data frameworks like Apache Flink and Spark enable
      efficient processing of large-scale streaming data in a distributed setup. For
      the management of such data pipelines and the computing resources, we propose
      a combination of a graphical tool for pipeline management, Apache StreamPipes,
      and container management tools like Kubernetes. For evaluation, we implemented
      a use case with data preprocessing, vehicle power consumption, and driving behavior
      services in StreamPipes. We discuss the capabilities of StreamPipes in managing
      and executing complex stream processing pipelines and also evaluate the possible
      integration of container and service mesh tools (i.e., Istio) with StreamPipes.
      Furthermore, we implemented and evaluated a service management layer in our
      system design to provide extended features. In particular, we evaluated the
      delay when such a complex pipeline is restarted, e.g. for updates or reconfiguration.",
      "venue": "2021 IEEE Cloud Summit (Cloud Summit)", "year": 2021, "referenceCount":
      18, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2021-10-01",
      "journal": {"name": "2021 IEEE Cloud Summit (Cloud Summit)", "pages": "35-40"},
      "citationStyles": {"bibtex": "@Article{Faizan2021ManagingBD,\n author = {M.
      Faizan and C. Prehofer},\n booktitle = {2021 IEEE Cloud Summit (Cloud Summit)},\n
      journal = {2021 IEEE Cloud Summit (Cloud Summit)},\n pages = {35-40},\n title
      = {Managing Big Data Stream Pipelines Using Graphical Service Mesh Tools},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "47343655", "name": "M. Faizan"},
      {"authorId": "1769001", "name": "C. Prehofer"}]}, {"paperId": "23204ae72591535bae78a8aa333fb1f101d4ec3d",
      "externalIds": {"DOI": "10.5753/sbc.7165.8.3", "CorpusId": 243169445}, "corpusId":
      243169445, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/23204ae72591535bae78a8aa333fb1f101d4ec3d",
      "title": "Autenticando aplica\u00e7\u00f5es nativas da nuvem com identidades
      SPIFFE", "abstract": "The purpose of this tutorial is to present how cloud-native
      applications are authenticated with the zero-trust model and the SPIFFE speci\ufb01cation.
      A distributed application is used as study case and its microservices are attested
      to receive SPIFFE identities that allow mutual authentication according to the
      zero-trust principles. To illustrate the advantages of zero-trust model with
      SPIFFE identities in cloud-native computing environments, we leverage both attestation
      mechanisms based in Kubernetes as well as mechanisms based in Intel SGX (using
      the SCONE framework).", "venue": "Minicursos do XXI Simp\u00f3sio Brasileiro
      de Seguran\u00e7a da Informa\u00e7\u00e3o e de Sistemas Computacionais", "year":
      2021, "referenceCount": 21, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Review"], "publicationDate": "2021-10-04", "journal": {"name": "Minicursos
      do XXI Simp\u00f3sio Brasileiro de Seguran\u00e7a da Informa\u00e7\u00e3o e
      de Sistemas Computacionais"}, "citationStyles": {"bibtex": "@Article{Falc\u00e3o2021AutenticandoAN,\n
      author = {E. Falc\u00e3o and Matteus V. S. Silva and Clenimar Souza and Andrey
      Brito},\n booktitle = {Minicursos do XXI Simp\u00f3sio Brasileiro de Seguran\u00e7a
      da Informa\u00e7\u00e3o e de Sistemas Computacionais},\n journal = {Minicursos
      do XXI Simp\u00f3sio Brasileiro de Seguran\u00e7a da Informa\u00e7\u00e3o e
      de Sistemas Computacionais},\n title = {Autenticando aplica\u00e7\u00f5es nativas
      da nuvem com identidades SPIFFE},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2059498824", "name": "E. Falc\u00e3o"}, {"authorId": "113562139", "name": "Matteus
      V. S. Silva"}, {"authorId": "2140579154", "name": "Clenimar Souza"}, {"authorId":
      "133570403", "name": "Andrey Brito"}]}, {"paperId": "233c37a8d8f213adc2a770f432eca38a8615d2b2",
      "externalIds": {"DOI": "10.52436/1.jutif.2023.4.4.1289", "CorpusId": 261487127},
      "corpusId": 261487127, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/233c37a8d8f213adc2a770f432eca38a8615d2b2",
      "title": "IMPLEMENTATION OF CONTAINER ORCHESTRATOR MANAGEMENT IN LEARNING MANAGEMENT
      SYSTEM", "abstract": "The pandemic that started in 2019 made technology even
      more important. Accelerating digital adaptation and transformation in the education
      sector, namely the Learning Management System (LMS) is very helpful in the teaching
      and learning process. Various LMS platforms are widely used and developed by
      various agencies. Pradita University is also developing an LMS which is made
      with the node.js programming language and the next.js framework which can be
      accessed on the pradita.digital site. The choice of using the wrong technology
      can cause the problematic LMS that is used to become slow and heavy, to the
      point where it cannot be accessed. The use of technology with the hypervisior
      concept which was previously commonly used has various weaknesses. For this
      reason, the Pradita LMS was developed using container orchestrator technology
      and Rancher Kubernetes as container orchestrator management. By utilizing Rancher
      as a container orchestrator management, it can make it easier to use with a
      user friendly GUI. In this study aims to prove that the use of Rancher in improving
      the quality and performance of LMS Pradita. Among them by identifying system
      efficiency, providing better scalability, increasing the availability of Pradita
      LMS, Rancher is able to manage applications and containers used for Pradita
      LMS, and saving costs used in implementing physical devices. By using the experimental
      method applied in this study, the results of system efficiency testing and scalability
      testing carried out with a load of up to 200 users can run properly and efficiently,
      then the availability test proves that the LMS is still available even when
      there are workers who are not operating, and testing rancher management capabilities
      lead to conclusions Rancher runs optimally and uses resources efficiently in
      accordance with the objectives in this study.", "venue": "Jurnal Teknik Informatika
      (Jutif)", "year": 2023, "referenceCount": 20, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://jutif.if.unsoed.ac.id/index.php/jurnal/article/download/1289/353",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Education", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-08-21", "journal":
      {"name": "Jurnal Teknik Informatika (Jutif)"}, "citationStyles": {"bibtex":
      "@Article{Basit2023IMPLEMENTATIONOC,\n author = {Muhamad Subhi Basit and Arif
      Pratama and Januponsa Dio Firizqi and R. E. Indrajit},\n booktitle = {Jurnal
      Teknik Informatika (Jutif)},\n journal = {Jurnal Teknik Informatika (Jutif)},\n
      title = {IMPLEMENTATION OF CONTAINER ORCHESTRATOR MANAGEMENT IN LEARNING MANAGEMENT
      SYSTEM},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2237341433", "name":
      "Muhamad Subhi Basit"}, {"authorId": "2237212948", "name": "Arif Pratama"},
      {"authorId": "2202437798", "name": "Januponsa Dio Firizqi"}, {"authorId": "119724540",
      "name": "R. E. Indrajit"}]}, {"paperId": "23426d6bd6709639f2d90fa855cbabf8c3452b43",
      "externalIds": {"DBLP": "conf/siu/Ozcevik21", "DOI": "10.1109/SIU53274.2021.9477964",
      "CorpusId": 236187620}, "corpusId": 236187620, "publicationVenue": {"id": "c5f8f5c8-58d0-46aa-bbb5-44ce60315635",
      "name": "Signal Processing and Communications Applications Conference", "type":
      "conference", "alternate_names": ["Signal Process Commun Appl Conf", "SIU"]},
      "url": "https://www.semanticscholar.org/paper/23426d6bd6709639f2d90fa855cbabf8c3452b43",
      "title": "Simplified QMOOD Model Proposal Based on Correlation Analysis in Different
      Client Applications", "abstract": "One of the commonly used models to measure
      the design quality of object-oriented software is the QMOOD model. The model
      works on a simple set of metrics; however, it may not be easy to obtain these
      metrics for different client applications even with the same/similar design.
      The main reason for this is that metric collection tools work differently in
      programming languages and development environments used to develop software
      for different clients. Moreover, metric aggregation tools used in some development
      environments may not be suitable for working with another development environment
      technology. In such cases, a quality metric that can be collected from the source
      code of a client application cannot be obtained for another client application.
      For this reason, it will be useful to simplify the model for some clients in
      order to match the quality assessment made using the QMOOD model with the real
      world. In this context, in this study, 9 versions of the Kubernetes project
      JAVA client have been examined. For these versions, all quality metrics needed
      in the QMOOD model were collected using different metric collection tools and
      the change of design quality attributes was obtained. In the evaluation, it
      was determined that the change in design quality characteristics coincided with
      the real world. From this point of view, the binary cross correlation of design
      properties was calculated. As a consequence, a QMOOD model proposal with 27%
      simplification that can be used in quality measurement for different client
      applications of the Kubernetes project is included.", "venue": "Signal Processing
      and Communications Applications Conference", "year": 2021, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2021-06-09", "journal": {"name": "2021 29th
      Signal Processing and Communications Applications Conference (SIU)", "pages":
      "1-4"}, "citationStyles": {"bibtex": "@Article{\u00d6z\u00e7evik2021SimplifiedQM,\n
      author = {Yusuf \u00d6z\u00e7evik},\n booktitle = {Signal Processing and Communications
      Applications Conference},\n journal = {2021 29th Signal Processing and Communications
      Applications Conference (SIU)},\n pages = {1-4},\n title = {Simplified QMOOD
      Model Proposal Based on Correlation Analysis in Different Client Applications},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2261538698", "name": "Yusuf
      \u00d6z\u00e7evik"}]}, {"paperId": "235803b94ed5e5ba72fa15f519e6974ac2f12a62",
      "externalIds": {"MAG": "2582625470", "DOI": "10.1007/978-1-4842-2598-1_4", "CorpusId":
      168218295}, "corpusId": 168218295, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/235803b94ed5e5ba72fa15f519e6974ac2f12a62",
      "title": "Using Multiple Zones", "abstract": null, "venue": "", "year": 2017,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "91-116", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Vohra2017UsingMZ,\n
      author = {Deepak Vohra},\n pages = {91-116},\n title = {Using Multiple Zones},\n
      year = {2017}\n}\n"}, "authors": [{"authorId": "3026624", "name": "Deepak Vohra"}]},
      {"paperId": "237031d773727eb36ff9153e034d4ac07374d857", "externalIds": {"DOI":
      "10.55248/gengpi.4.523.44101", "CorpusId": 259603451}, "corpusId": 259603451,
      "publicationVenue": {"id": "aac91a2b-c02f-4cf5-a190-411431d25784", "name": "International
      Journal of Research Publication and Reviews", "type": "journal", "alternate_names":
      ["Int J Res Publ Rev"], "issn": "2582-7421"}, "url": "https://www.semanticscholar.org/paper/237031d773727eb36ff9153e034d4ac07374d857",
      "title": "Unleashing the Power of Kubernetes: Embracing Openness and Vendor
      Neutrality for Agile Container Development in an Evolving Landscape", "abstract":
      null, "venue": "International Journal of Research Publication and Reviews",
      "year": 2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Business",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-06-01", "journal":
      {"name": "International Journal of Research Publication and Reviews"}, "citationStyles":
      {"bibtex": "@Article{Valavandan2023UnleashingTP,\n author = {Ramamurthy Valavandan
      and Balakrishnan Gothandapani and Archana Gnanavel and Nithya Ramamurthy and
      Malarvizhi Balakrishnan and Sinthana Gnanavel and Savitha Ramamurthy},\n booktitle
      = {International Journal of Research Publication and Reviews},\n journal = {International
      Journal of Research Publication and Reviews},\n title = {Unleashing the Power
      of Kubernetes: Embracing Openness and Vendor Neutrality for Agile Container
      Development in an Evolving Landscape},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2221504942", "name": "Ramamurthy Valavandan"}, {"authorId": "2221499914", "name":
      "Balakrishnan Gothandapani"}, {"authorId": "2221501275", "name": "Archana Gnanavel"},
      {"authorId": "2221501425", "name": "Nithya Ramamurthy"}, {"authorId": "2221500918",
      "name": "Malarvizhi Balakrishnan"}, {"authorId": "2221494317", "name": "Sinthana
      Gnanavel"}, {"authorId": "2221501034", "name": "Savitha Ramamurthy"}]}, {"paperId":
      "23710c66c3e10cde0de020aee0d88de0464139d3", "externalIds": {"MAG": "3195010578",
      "DOI": "10.1051/epjconf/202125102046", "CorpusId": 238142771}, "corpusId": 238142771,
      "publicationVenue": {"id": "f2cc63fa-90cb-413d-92ce-003d5244a1e8", "name": "EPJ
      Web of Conferences", "type": "journal", "alternate_names": ["EPJ Web Conf",
      "Epj Web of Conferences", "Epj Web Conf"], "issn": "2100-014X", "url": "https://web.archive.org/web/*/https:/www.epj-conferences.org/component/issues/",
      "alternate_urls": ["https://www.epj-conferences.org/", "https://web.archive.org/web/20161128151311/http:/www.epj-conferences.org:80/",
      "https://www.epj-conferences.org/component/issues/"]}, "url": "https://www.semanticscholar.org/paper/23710c66c3e10cde0de020aee0d88de0464139d3",
      "title": "Evolution of the HEPS Jupyter-based remote data analysis System",
      "abstract": "High Energy Photon Source(HEPS) Experiment is expected to produce
      large amount of data and have diverse computing requirements for data analysis.
      Generally, scientists need to spend several days to setup their experimental
      environment, which greatly reduce the scientists\u2019 work efficiency. In response
      to the above problems, we introduce a remote data analysis system for HEPS.
      The system provides users a web-based interactive interface based Jupyter, which
      makes scientists are able to process data analysis anytime and anywhere. Particularly,
      we discuss the system architecture as well as the key points of this system.
      A solution of managing and scheduling heterogeneous computing resources (CPU
      and GPU) is proposed, which adopts Kubernetes to achieve centralized heterogeneous
      resources management and resource expansion on demand. An improved Kubernetes
      resource scheduler is discussed, which dispatches upper applications to nodes
      combining with the computing cluster status. The system can transparently and
      quickly deploy the data analysis environment for users in seconds and reach
      the maximum resource utilization. We also introduce an automated deployment
      solution to improve the work efficiency of developers and help deploy multidisciplinary
      applications faster and automatically. A unified certification is illustrated
      to make sure the security of remote data access and data analysis. Finally,
      we will show the running status of the system.", "venue": "EPJ Web of Conferences",
      "year": 2021, "referenceCount": 10, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.epj-conferences.org/articles/epjconf/pdf/2021/05/epjconf_chep2021_02046.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Physics", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": null, "journal": {"name":
      "EPJ Web of Conferences"}, "citationStyles": {"bibtex": "@Conference{Liu2021EvolutionOT,\n
      author = {Zhibing Liu and Qiulan Huang and H. Tian and Yu Hu and Jingyan Shi
      and R. Du and Hao Hu and Lu Wang and Fazhi Qi},\n booktitle = {EPJ Web of Conferences},\n
      journal = {EPJ Web of Conferences},\n title = {Evolution of the HEPS Jupyter-based
      remote data analysis System},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2109252878", "name": "Zhibing Liu"}, {"authorId": "2511686", "name": "Qiulan
      Huang"}, {"authorId": "95912252", "name": "H. Tian"}, {"authorId": "2109330410",
      "name": "Yu Hu"}, {"authorId": "2559456", "name": "Jingyan Shi"}, {"authorId":
      "50335453", "name": "R. Du"}, {"authorId": "2118877986", "name": "Hao Hu"},
      {"authorId": "2153515220", "name": "Lu Wang"}, {"authorId": "49555660", "name":
      "Fazhi Qi"}]}, {"paperId": "238483f28af8ce8035456e94574f604d2196b76a", "externalIds":
      {"DOI": "10.1109/ICSP54964.2022.9778659", "CorpusId": 249049293}, "corpusId":
      249049293, "publicationVenue": {"id": "63410070-a9b9-46ac-bdec-92b016246795",
      "name": "International Conference on the Software Process", "type": "conference",
      "alternate_names": ["Int Conf Signal Process", "ICSP", "Int Conf Softw Process",
      "International Conference on Signal Processing"], "url": "http://www.ece.utexas.edu/~perry/prof/ispa/index.html"},
      "url": "https://www.semanticscholar.org/paper/238483f28af8ce8035456e94574f604d2196b76a",
      "title": "Research on Spectrum Intelligent Monitoring Application Microservice
      Architecture Based on Docker", "abstract": "The spectrum intelligent monitoring
      technology based on deep learning can reduce the artificial interference factors
      of spectrum monitoring and significantly improve the real-time performance and
      accuracy of spectrum monitoring. However, due to the complex operating environment
      of deep learning algorithms and the variety of deep learning frameworks, the
      deployment and transplantation of spectrum monitoring applications are more
      difficult. This paper proposes a docker-based spectrum intelligent monitoring
      application microservice architecture, which is mainly divided into spectrum
      monitoring resource layer, spectrum monitoring resource service layer and spectrum
      monitoring resource service layer. Docker is used to encapsulate the spectrum
      monitoring algorithm based on deep learning, and Kubernetes is used for unified
      arrangement and deployment, which simplifies the deployment and migration of
      the spectrum monitoring algorithm and improves the efficiency of spectrum monitoring.",
      "venue": "International Conference on the Software Process", "year": 2022, "referenceCount":
      0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-04-15",
      "journal": {"name": "2022 7th International Conference on Intelligent Computing
      and Signal Processing (ICSP)", "pages": "1131-1134"}, "citationStyles": {"bibtex":
      "@Conference{Wang2022ResearchOS,\n author = {Ding Wang and Jianyun Chen and
      Yongbin Zhou and Jinzhao She},\n booktitle = {International Conference on the
      Software Process},\n journal = {2022 7th International Conference on Intelligent
      Computing and Signal Processing (ICSP)},\n pages = {1131-1134},\n title = {Research
      on Spectrum Intelligent Monitoring Application Microservice Architecture Based
      on Docker},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2119265567", "name":
      "Ding Wang"}, {"authorId": "1684529898", "name": "Jianyun Chen"}, {"authorId":
      "2145494022", "name": "Yongbin Zhou"}, {"authorId": "2150710838", "name": "Jinzhao
      She"}]}, {"paperId": "23b1561379624f754f7102f44e4e4a12574f0dc2", "externalIds":
      {"MAG": "2991135041", "DOI": "10.1007/978-1-4842-5491-2", "CorpusId": 208337339},
      "corpusId": 208337339, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/23b1561379624f754f7102f44e4e4a12574f0dc2",
      "title": "Beginning Kubernetes on the Google Cloud Platform: A Guide to Automating
      Application Deployment, Scaling, and Management", "abstract": null, "venue":
      "", "year": 2019, "referenceCount": 0, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Book"], "publicationDate":
      "2019-11-29", "journal": {"name": "Beginning Kubernetes on the Google Cloud
      Platform"}, "citationStyles": {"bibtex": "@Book{Garbarino2019BeginningKO,\n
      author = {Ernesto Garbarino},\n journal = {Beginning Kubernetes on the Google
      Cloud Platform},\n title = {Beginning Kubernetes on the Google Cloud Platform:
      A Guide to Automating Application Deployment, Scaling, and Management},\n year
      = {2019}\n}\n"}, "authors": [{"authorId": "1434772181", "name": "Ernesto Garbarino"}]},
      {"paperId": "23b4ce10b2072e2fc82581e343ec4adce8f83c68", "externalIds": {"DBLP":
      "conf/recsys/BanerjeeBTT21", "DOI": "10.1145/3460231.3474610", "CorpusId": 237494766},
      "corpusId": 237494766, "publicationVenue": {"id": "61275a16-1e0d-479f-ac4e-f295310761f0",
      "name": "ACM Conference on Recommender Systems", "type": "conference", "alternate_names":
      ["Conf Recomm Syst", "RecSys", "ACM Conf Recomm Syst", "Conference on Recommender
      Systems"], "url": "http://recsys.acm.org/"}, "url": "https://www.semanticscholar.org/paper/23b4ce10b2072e2fc82581e343ec4adce8f83c68",
      "title": "Personalizing Peloton: Combining Rankers and Filters To Balance Engagement
      and Business Goals", "abstract": "Peloton is at the forefront of the at-home
      fitness market, with two business pillars: (a) a line of connected fitness equipment,
      and (b) a subscription-based service that offers access to a rich catalog of
      high quality fitness classes. As of May 2021, the total member base for Peloton
      stood at over 5.4 million, who took more than 170 million workouts. Peloton
      classes cover a diversity of instructors, languages, fitness disciplines, durations,
      intensity and muscle groups. On the other side, each user has their own specific
      fitness goals, time available to work out, fitness equipment and level of skill
      or strength. This diversity of content and individuality of user needs creates
      the need for a recommender system capable of personalizing the Peloton experience.
      Most recommendation engines optimize for user lifetime value or time of engagement.
      However, Peloton users have very different usage habits when compared to other
      industry recommendation problems. Users arrive on the platform with a clear
      intent to workout, which allows our recommendation algorithms to not just focus
      on the short-term classic metrics such as click-through-rates and optimizing
      session lengths for exploration. Instead, fitness content recommendations at
      Peloton also help solve longer term problems such as: It helps balance engagement
      and business goals. A classic example of this is the introduction of a new instructor.
      For existing users, who already have developed affinities to certain instructors,
      how can we ensure that enough of them see and try some classes from the new
      instructor so that they can build their own following? It helps guide users
      to explore the vast library of content. Peloton users quickly develop set routines
      with our fitness content, with high repeat plays of the same instructor/duration/class
      type. Recommendations serve as a mechanism to encourage them to try something
      outside this comfort zone, which both increases the breadth of a user''s engagement
      with the platform and leads to a more holistic workout routine. We achieve these
      two goals by utilizing a combination of rankers and filters. Ranking models
      help order the universe of content for each user according to their preferences.
      Filters take a slice of this ordered content to generate a shelf of content
      with a reason for suggesting it. Explainability is heavily linked to business
      goals, while ranking is linked to engagement goals. For instance, ranking and
      filtering can work in tandem to populate a shelf that helps promote a new music
      partnership, e.g. Workouts Featuring The Beatles, where we highlight classes
      that contain music by The Beatles (filter), ordered by the user''s class preferences
      (ranker). With rankers and filters, we empower other teams to curate personalized
      experiences. The creation process is simplified to picking a ranker and a filter
      to create a shelf, and then giving it a title to then have it displayed to users.
      Further, we have context-based models that order the shelves for each user depending
      on both their preferences and context, such as platform and time. For ranking
      our various filters, we take a multi-armed bandit approach, due to the need
      to handle cold starts on users and balance exploration (keep putting new shelves
      in front of the user) with exploitation (keep showing them shelves they already
      interact with). To start with, we implemented a simple Thompson Sampling based
      bandits algorithm, which accumulates rewards (for shelves interacted with) and
      penalties (for shelves ignored), which in turn constantly adapts the shelf ordering
      for a user, making the experience more personalized over time. We are able to
      perform all calculations offline in batch, using Spark, and cache the Thompson
      Sampling parameters in DynamoDB. When a user requests their shelves, a random
      sampling is performed using these parameters to serve up a contextually ordered
      list of shelves. A unique feature of Peloton classes is that they are usually
      aired \u201clive\u201d first, which seeds the class with a set of users. This
      ameliorates the cold start problem for recommending classes, opening us up to
      using collaborative filtering approaches. Also, users typically take one session
      in a given day, and most even just take one class in a given day. This means
      we are able to compute class recommendations for each user offline, cache it
      and serve it up when requested. In the offline world, we use Spark to pre-process
      our user-class interaction data, and then train a deep learning model using
      PyTorch. Our ranking model is a sequential recommender using long-short-term
      memory (LSTMs). From our ranked list of classes, we apply our various filters
      and generate the shelves of recommendations. These are cached in AWS DynamoDB,
      and served up via Kubernetes-driven APIs. Recommending fitness content at Peloton
      has the potential to go beyond simply guiding users to their next class. With
      a holistic overview of both what classes a user is taking and a user''s feedback
      on their performance (explicit or implicit), there is an opportunity to tailor
      workout routines that optimize for long-term metrics such as health, strength
      or flexibility. SPEAKER BIO Shayak Banerjee is currently a Staff Machine Learning
      Engineer on the Personalization team at Peloton, where he works on personalizing
      the Discovery and Browse experiences for users. His contributions relate to
      building out the infrastructure for running data pipelines and tools for balancing
      content production and consumption needs. Prior to Peloton, he worked on connecting
      users to communities at Meetup. Shayak graduated from The University of Texas
      at Austin with a PhD in Electrical & Computer Engineering.", "venue": "ACM Conference
      on Recommender Systems", "year": 2021, "referenceCount": 0, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Business", "source": "s2-fos-model"},
      {"category": "Education", "source": "s2-fos-model"}], "publicationTypes": ["Book",
      "JournalArticle", "Review"], "publicationDate": "2021-09-13", "journal": {"name":
      "Proceedings of the 15th ACM Conference on Recommender Systems"}, "citationStyles":
      {"bibtex": "@Book{Banerjee2021PersonalizingPC,\n author = {Shayak Banerjee and
      Arnab Bhadury and N. Talukder and Santosh Thammana},\n booktitle = {ACM Conference
      on Recommender Systems},\n journal = {Proceedings of the 15th ACM Conference
      on Recommender Systems},\n title = {Personalizing Peloton: Combining Rankers
      and Filters To Balance Engagement and Business Goals},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2537115", "name": "Shayak Banerjee"}, {"authorId":
      "3375500", "name": "Arnab Bhadury"}, {"authorId": "1692757", "name": "N. Talukder"},
      {"authorId": "2126789347", "name": "Santosh Thammana"}]}, {"paperId": "23d342bece9c300be67f54919056c970bf2f53e1",
      "externalIds": {"DBLP": "conf/cogmi/SandhaASS21", "DOI": "10.1109/CogMI52975.2021.00041",
      "CorpusId": 248132262}, "corpusId": 248132262, "publicationVenue": {"id": "4cd48fc0-b1c9-4a7d-9cf5-805613612f5b",
      "name": "International Conference on Cognitive Machine Intelligence", "type":
      "conference", "alternate_names": ["CogMI", "Int Conf Cogn Mach Intell"]}, "url":
      "https://www.semanticscholar.org/paper/23d342bece9c300be67f54919056c970bf2f53e1",
      "title": "Enabling Hyperparameter Tuning of Machine Learning Classifiers in
      Production", "abstract": "Machine learning (ML) classifiers are widely adopted
      in the learning-enabled components of intelligent Cyber-physical Systems (CPS)
      and tools used in designing integrated circuits. Due to the impact of the choice
      of hyperparameters on an ML classifier performance, hyperparameter tuning is
      a crucial step for application success. However, the practical adoption of existing
      hyperparameter tuning frameworks in production is hindered due to several factors
      such as inflexible architecture, limitations of search algorithms, software
      dependencies, or closed source nature. To enable state-of-the-art hyperparameter
      tuning in production, we propose the design of a lightweight library (1) having
      a flexible architecture facilitating usage on arbitrary systems, and (2) providing
      parallel optimization algorithms supporting mixed parameters (continuous, integer,
      and categorical), handling runtime failures, and allowing combined classifier
      selection and hyperparameter tuning (CASH). We present Mango, a black-box optimization
      library, to realize the proposed design. Mango is currently used in production
      at Arm for more than 25 months and is available open-source (https://github.com/ARM-software/mango).
      Our evaluation shows that Mango outperforms other black-box optimization libraries
      in tuning hyperparameters of ML classifiers having mixed param-eter search spaces.
      We discuss two use cases of Mango deployed in production at Arm, highlighting
      its flexible architecture and ease of adoption. The first use case trains ML
      classifiers on the Dask cluster using Mango to find bugs in Arm''s integrated
      circuits designs. As a second use case, we introduce an AutoML framework deployed
      on the Kubernetes cluster using Mango. Finally, we present the third use-case
      of Mango in enabling neural architecture search (NAS) to transfer deep neural
      networks to TinyML platforms (microcontroller class devices) used by CPS/IoT
      applications.", "venue": "International Conference on Cognitive Machine Intelligence",
      "year": 2021, "referenceCount": 0, "citationCount": 7, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2021-12-01", "journal": {"name": "2021 IEEE Third International
      Conference on Cognitive Machine Intelligence (CogMI)", "pages": "262-271"},
      "citationStyles": {"bibtex": "@Article{Sandha2021EnablingHT,\n author = {S.
      Sandha and Mohit Aggarwal and Swapnil Sayan Saha and M. Srivastava},\n booktitle
      = {International Conference on Cognitive Machine Intelligence},\n journal =
      {2021 IEEE Third International Conference on Cognitive Machine Intelligence
      (CogMI)},\n pages = {262-271},\n title = {Enabling Hyperparameter Tuning of
      Machine Learning Classifiers in Production},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2353239", "name": "S. Sandha"}, {"authorId": "2052765337", "name":
      "Mohit Aggarwal"}, {"authorId": "144049820", "name": "Swapnil Sayan Saha"},
      {"authorId": "1702254", "name": "M. Srivastava"}]}, {"paperId": "23f1542d171839d9f03240b7001f173ee539d1bf",
      "externalIds": {"MAG": "2971528130", "DBLP": "conf/icfnds/ThurgoodL19", "DOI":
      "10.1145/3341325.3341995", "CorpusId": 202159651}, "corpusId": 202159651, "publicationVenue":
      {"id": "ff58b787-368a-48e9-a2a1-c03d0f0e2b4d", "name": "International Conference
      on Future Networks and Distributed Systems", "type": "conference", "alternate_names":
      ["ICFNDS", "Int Conf Future Netw Distrib Syst"]}, "url": "https://www.semanticscholar.org/paper/23f1542d171839d9f03240b7001f173ee539d1bf",
      "title": "Cloud Computing With Kubernetes Cluster Elastic Scaling", "abstract":
      "Cloud computing and artificial intelligence (AI) technologies are becoming
      increasingly prevalent in the industry, necessitating the requirement for advanced
      platforms to support their workloads through parallel and distributed architectures.
      Kubernetes provides an ideal platform for hosting various workloads, including
      dynamic workloads based on AI applications that support ubiquitous computing
      devices leveraging parallel and distributed architectures. The rationale is
      that Kubernetes can be used to support backend services running on parallel
      and distributed architectures, hosting ubiquitous cloud computing workloads.
      These applications support smart homes and concerts, providing an environment
      that automatically scales based on demand. While Kubernetes does offer support
      for auto scaling of Pods to support these workloads, automated scaling of the
      cluster itself is not currently offered. In this paper we introduce a Free and
      Open Source Software (FOSS) solution for autoscaling Kubernetes (K8s) worker
      nodes within a cluster to support dynamic workloads. We go on to discuss scalability
      issues and security concerns both on the platform and within the hosted AI applications.",
      "venue": "International Conference on Future Networks and Distributed Systems",
      "year": 2019, "referenceCount": 26, "citationCount": 18, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2019-07-01",
      "journal": {"name": "Proceedings of the 3rd International Conference on Future
      Networks and Distributed Systems"}, "citationStyles": {"bibtex": "@Article{Thurgood2019CloudCW,\n
      author = {Brandon Thurgood and Ruth G. Lennon},\n booktitle = {International
      Conference on Future Networks and Distributed Systems},\n journal = {Proceedings
      of the 3rd International Conference on Future Networks and Distributed Systems},\n
      title = {Cloud Computing With Kubernetes Cluster Elastic Scaling},\n year =
      {2019}\n}\n"}, "authors": [{"authorId": "1396453076", "name": "Brandon Thurgood"},
      {"authorId": "35185011", "name": "Ruth G. Lennon"}]}, {"paperId": "23f786d0c0cb4be77daa6e5eb237e7bdd5604728",
      "externalIds": {"DOI": "10.1109/ITOEC57671.2023.10291326", "CorpusId": 264805750},
      "corpusId": 264805750, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/23f786d0c0cb4be77daa6e5eb237e7bdd5604728",
      "title": "Container monitoring method for Kubernetes", "abstract": "Container
      monitoring is one of the core elements to ensure the normal operation of container
      infrastructure. However, the current container monitoring Angle is relatively
      simple, and there is still a lack of intuitive and effective methods to assist
      operation and maintenance personnel to quickly locate the cause of service container
      anomalies. In this paper, a container three-dimensional monitoring system for
      Kubernetes is designed and implemented. Through the correlation analysis of
      monitoring indicators, the indicators with strong correlation are provided to
      operation and maintenance personnel as the core indicators of three-dimensional
      monitoring, so as to realize the overall monitoring of containers better.",
      "venue": "2023 IEEE 7th Information Technology and Mechatronics Engineering
      Conference (ITOEC)", "year": 2023, "referenceCount": 13, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2023-09-15",
      "journal": {"name": "2023 IEEE 7th Information Technology and Mechatronics Engineering
      Conference (ITOEC)", "pages": "1505-1508", "volume": "7"}, "citationStyles":
      {"bibtex": "@Conference{Cheng2023ContainerMM,\n author = {Xinyun Cheng and Zhe
      Liu and Ming Tang and Zhikang Wang and Yaqiao Li},\n booktitle = {2023 IEEE
      7th Information Technology and Mechatronics Engineering Conference (ITOEC)},\n
      journal = {2023 IEEE 7th Information Technology and Mechatronics Engineering
      Conference (ITOEC)},\n pages = {1505-1508},\n title = {Container monitoring
      method for Kubernetes},\n volume = {7},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "1736540815", "name": "Xinyun Cheng"}, {"authorId": "2221268671", "name": "Zhe
      Liu"}, {"authorId": "2263829143", "name": "Ming Tang"}, {"authorId": "2264310265",
      "name": "Zhikang Wang"}, {"authorId": "2221269017", "name": "Yaqiao Li"}]},
      {"paperId": "243b8187a512201f0b6cc45bf47375bb8249c917", "externalIds": {"MAG":
      "2808484569", "DBLP": "conf/hpdc/HaririK18", "DOI": "10.1145/3217880.3217883",
      "CorpusId": 47020453}, "corpusId": 47020453, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/243b8187a512201f0b6cc45bf47375bb8249c917",
      "title": "Batch and online anomaly detection for scientific applications in
      a Kubernetes environment", "abstract": "We present a cloud based anomaly detection
      service framework that uses a containerized Spark cluster and ancillary user
      interfaces all managed by Kubernetes. The stack of technology put together allows
      for fast, reliable, resilient and easily scalable service for either batch or
      streaming data. At the heart of the service, we utilize an improved version
      of the algorithm Isolation Forest called Extended Isolation Forest for robust
      and efficient anomaly detection. We showcase the design and a normal workflow
      of our infrastructure which is ready to deploy on any Kubernetes cluster without
      extra technical knowledge. With exposed APIs and simple graphical interfaces,
      users can load any data and detect anomalies on the loaded set or on newly presented
      data points using a batch or a streaming mode. With the latter, users can subscribe
      and get notifications on the desired output. Our aim is to develop and apply
      these techniques to use with scientific data. In particular we are interested
      in finding anomalous objects within the overwhelming set of images and catalogs
      produced by current and future astronomical surveys, but that can be easily
      adopted to other fields.", "venue": "ScienceCloud@HPDC", "year": 2018, "referenceCount":
      18, "citationCount": 8, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle", "Review"],
      "publicationDate": "2018-06-11", "journal": {"name": "Proceedings of the 9th
      Workshop on Scientific Cloud Computing"}, "citationStyles": {"bibtex": "@Book{Hariri2018BatchAO,\n
      author = {S. Hariri and M. Kind},\n booktitle = {ScienceCloud@HPDC},\n journal
      = {Proceedings of the 9th Workshop on Scientific Cloud Computing},\n title =
      {Batch and online anomaly detection for scientific applications in a Kubernetes
      environment},\n year = {2018}\n}\n"}, "authors": [{"authorId": "46205834", "name":
      "S. Hariri"}, {"authorId": "102780262", "name": "M. Kind"}]}, {"paperId": "246a2af5c477396f52a7af39e3c6a26049ae3310",
      "externalIds": {"MAG": "2930652247", "DBLP": "conf/asplos/TuLSZ19", "DOI": "10.1145/3297858.3304069",
      "CorpusId": 96426939}, "corpusId": 96426939, "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99",
      "name": "International Conference on Architectural Support for Programming Languages
      and Operating Systems", "type": "conference", "alternate_names": ["ASPLOS",
      "Int Conf Archit Support Program Lang Oper Syst", "Archit Support Program Lang
      Oper Syst", "Architectural Support for Programming Languages and Operating Systems"],
      "url": "http://www.acm.org/sigplan/"}, "url": "https://www.semanticscholar.org/paper/246a2af5c477396f52a7af39e3c6a26049ae3310",
      "title": "Understanding Real-World Concurrency Bugs in Go", "abstract": "Go
      is a statically-typed programming language that aims to provide a simple, efficient,
      and safe way to build multi-threaded software. Since its creation in 2009, Go
      has matured and gained significant adoption in production and open-source software.
      Go advocates for the usage of message passing as the means of inter-thread communication
      and provides several new concurrency mechanisms and libraries to ease multi-threading
      programming. It is important to understand the implication of these new proposals
      and the comparison of message passing and shared memory synchronization in terms
      of program errors, or bugs. Unfortunately, as far as we know, there has been
      no study on Go''s concurrency bugs. In this paper, we perform the first systematic
      study on concurrency bugs in real Go programs. We studied six popular Go software
      including Docker, Kubernetes, and gRPC. We analyzed 171 concurrency bugs in
      total, with more than half of them caused by non-traditional, Go-specific problems.
      Apart from root causes of these bugs, we also studied their fixes, performed
      experiments to reproduce them, and evaluated them with two publicly-available
      Go bug detectors. Overall, our study provides a better understanding on Go''s
      concurrency models and can guide future researchers and practitioners in writing
      better, more reliable Go software and in developing debugging and diagnosis
      tools for Go.", "venue": "International Conference on Architectural Support
      for Programming Languages and Operating Systems", "year": 2019, "referenceCount":
      59, "citationCount": 63, "influentialCitationCount": 7, "isOpenAccess": true,
      "openAccessPdf": {"url": "http://dl.acm.org/ft_gateway.cfm?id=3304069&type=pdf",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book", "Conference"], "publicationDate": "2019-04-04", "journal": {"name":
      "Proceedings of the Twenty-Fourth International Conference on Architectural
      Support for Programming Languages and Operating Systems"}, "citationStyles":
      {"bibtex": "@Article{Tu2019UnderstandingRC,\n author = {Tengfei Tu and Xiaoyu
      Liu and Linhai Song and Yiying Zhang},\n booktitle = {International Conference
      on Architectural Support for Programming Languages and Operating Systems},\n
      journal = {Proceedings of the Twenty-Fourth International Conference on Architectural
      Support for Programming Languages and Operating Systems},\n title = {Understanding
      Real-World Concurrency Bugs in Go},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2137544147", "name": "Tengfei Tu"}, {"authorId": "2111040147", "name": "Xiaoyu
      Liu"}, {"authorId": "2473596", "name": "Linhai Song"}, {"authorId": "2108361757",
      "name": "Yiying Zhang"}]}, {"paperId": "25206a27d99022fb140d40261d39bb410727f87b",
      "externalIds": {"MAG": "3185937159", "DOI": "10.3390/APP11146656", "CorpusId":
      237644882}, "corpusId": 237644882, "publicationVenue": {"id": "136edf8d-0f88-4c2c-830f-461c6a9b842e",
      "name": "Applied Sciences", "type": "journal", "alternate_names": ["Appl Sci"],
      "issn": "2076-3417", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-217814",
      "alternate_urls": ["http://www.mathem.pub.ro/apps/", "https://www.mdpi.com/journal/applsci",
      "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-217814"]}, "url":
      "https://www.semanticscholar.org/paper/25206a27d99022fb140d40261d39bb410727f87b",
      "title": "Enabling Role-Based Orchestration for Cloud Applications", "abstract":
      "With the rapidly growing popularity of cloud services, the cloud computing
      faces critical challenges to orchestrate the deployment and operation of cloud
      applications on heterogenous cloud platforms. Cloud applications are built on
      a platform model that abstracts away underlying platform-specific details, so
      that their orchestration can benefit from the abstract view and flexibility
      of the underlying platform configuration. However, considerable efforts are
      still required to properly manage complicated cloud applications. This paper
      proposes a model-driven approach to cloud application orchestration which promotes
      the concerns of distinct roles for cloud system provisioning and operation.
      By establishing a set of capabilities as modeling constructs, our approach allows
      TOSCA-based application topology itself and its orchestration needs to be specified
      in a way to provide a more targeted support for different needs and concerns
      of application developers and operators. With novel orchestration features like
      application topology description, platform capability modeling, and role-awareness
      for cloud application orchestration, it can significantly reduce the complexity
      of application orchestration in diverse cloud environments. To show the feasibility
      and effectiveness of our proposal for cloud application orchestration, we present
      a proof-of-concept orchestration system implementation and evaluate its deployment
      and orchestration results in a Kubernetes cluster.", "venue": "Applied Sciences",
      "year": 2021, "referenceCount": 17, "citationCount": 3, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/2076-3417/11/14/6656/pdf?version=1626925495",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-07-20", "journal": {"name":
      "Applied Sciences"}, "citationStyles": {"bibtex": "@Article{Wang2021EnablingRO,\n
      author = {Yue Wang and Choonhwa Lee and Shuyang Ren and Eunsam Kim and Sungwook
      Chung},\n booktitle = {Applied Sciences},\n journal = {Applied Sciences},\n
      title = {Enabling Role-Based Orchestration for Cloud Applications},\n year =
      {2021}\n}\n"}, "authors": [{"authorId": "2118461940", "name": "Yue Wang"}, {"authorId":
      "92671954", "name": "Choonhwa Lee"}, {"authorId": "6999155", "name": "Shuyang
      Ren"}, {"authorId": "1704337", "name": "Eunsam Kim"}, {"authorId": "122371551",
      "name": "Sungwook Chung"}]}, {"paperId": "252e16b3bce0c1a5f3b770b7e362241e0ea0cded",
      "externalIds": {"DBLP": "journals/eceasst/SpiekermannK22", "MAG": "3199939984",
      "DOI": "10.14279/TUJ.ECEASST.80.1148", "CorpusId": 240510946}, "corpusId": 240510946,
      "publicationVenue": {"id": "4b83900e-9b80-4980-8aae-1949350dca95", "name": "Electronic
      Communication of The European Association of Software Science and Technology",
      "type": "journal", "alternate_names": ["Electron Commun Eur Assoc Softw Sci
      Technol"]}, "url": "https://www.semanticscholar.org/paper/252e16b3bce0c1a5f3b770b7e362241e0ea0cded",
      "title": "Wiretapping Pods and Nodes - Lawful Interception in Kubernetes", "abstract":
      "Nowadays IT infrastructures have to supply a flexible and dynamic platform
      for the provision of modern applications. Kubernetes is one of the most notable
      environments for the provisioning of small and independently running microservices
      used by modern applications. With Kubernetes, these microservices can be developed,
      deployed, updated and scaled in a continuous process. This flexibility is a
      huge advantage to older and more static environments. But whereas these old
      infrastructures lack in dynamics, necessary digital investigation are easier
      to accomplish. This need is still existing in modern environments, hence this
      paper presents a novel approach for the lawful interception of network packets
      in a Kubernetes cluster. The approach improves the dynamic capture processes
      by monitoring involved devices assigned to a defined application without hampering
      the environment or capturing unwanted network packets. Keywords: Kubernetes,
      network", "venue": "Electronic Communication of The European Association of
      Software Science and Technology", "year": 2021, "referenceCount": 4, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://zenodo.org/record/6059111/files/cfati3.pdf", "status": "GREEN"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2021-09-08", "journal": {"name": "Electron.
      Commun. Eur. Assoc. Softw. Sci. Technol.", "volume": "80"}, "citationStyles":
      {"bibtex": "@Article{Spiekermann2021WiretappingPA,\n author = {Daniel Spiekermann
      and J\u00f6rg Keller},\n booktitle = {Electronic Communication of The European
      Association of Software Science and Technology},\n journal = {Electron. Commun.
      Eur. Assoc. Softw. Sci. Technol.},\n title = {Wiretapping Pods and Nodes - Lawful
      Interception in Kubernetes},\n volume = {80},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2466063", "name": "Daniel Spiekermann"}, {"authorId": "2069290522",
      "name": "J\u00f6rg Keller"}]}, {"paperId": "2554192d40c66c7f24d1ef2f622314f553c06674",
      "externalIds": {"DBLP": "conf/cloud/LiuW0XCC21", "DOI": "10.1145/3472883.3486997",
      "CorpusId": 239890205}, "corpusId": 239890205, "publicationVenue": {"id": "d13e941e-4cac-4f1d-bdca-77d927e31f1b",
      "name": "ACM Symposium on Cloud Computing", "type": "conference", "alternate_names":
      ["System-on-Chip Conference", "ACM Symp Cloud Comput", "Syst Conf", "Symp Cloud
      Comput", "Annual IEEE International System-on-Chip Conference", "Symposium on
      Cloud Computing", "Annu IEEE Int Syst Conf", "SoCC"], "url": "http://www.ieee-socc.org/"},
      "url": "https://www.semanticscholar.org/paper/2554192d40c66c7f24d1ef2f622314f553c06674",
      "title": "Mind the Gap: Broken Promises of CPU Reservations in Containerized
      Multi-tenant Clouds", "abstract": "Containerization is becoming increasingly
      popular, but unfortunately, containers often fail to deliver the anticipated
      performance with the allocated resources. In this paper, we first demonstrate
      the performance variance and degradation are significant (by up to 5x) in a
      multi-tenant environment where containers are co-located. We then investigate
      the root cause of such performance degradation. Contrary to the common belief
      that such degradation is caused by resource contention and interference, we
      find that there is a gap between the amount of CPU a container reserves and
      actually gets. The root cause lies in the design choices of today''s Linux scheduling
      mechanism, which we call Forced Runqueue Sharing and Phantom CPU Time. In fact,
      there are fundamental conflicts between the need to reserve CPU resources and
      Completely Fair Scheduler''s work-conserving nature, and this contradiction
      prevents a container from fully utilizing its requested CPU resources. As a
      proof-of-concept, we implement a new resource configuration mechanism atop the
      widely used Kubernetes and Linux to demonstrate its potential benefits and shed
      light on future scheduler redesign. Our proof-of-concept, compared to the existing
      scheduler, improves the performance of both batch and interactive containerized
      apps by up to 5.6x and 13.7x.", "venue": "ACM Symposium on Cloud Computing",
      "year": 2021, "referenceCount": 43, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3472883.3486997",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book"], "publicationDate": "2021-11-01", "journal": {"name": "Proceedings of
      the ACM Symposium on Cloud Computing"}, "citationStyles": {"bibtex": "@Article{Liu2021MindTG,\n
      author = {Li Liu and Haoliang Wang and An Wang and Mengbai Xiao and Yue Cheng
      and Songqing Chen},\n booktitle = {ACM Symposium on Cloud Computing},\n journal
      = {Proceedings of the ACM Symposium on Cloud Computing},\n title = {Mind the
      Gap: Broken Promises of CPU Reservations in Containerized Multi-tenant Clouds},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2023714830", "name": "Li Liu"},
      {"authorId": "2135587988", "name": "Haoliang Wang"}, {"authorId": "46991128",
      "name": "An Wang"}, {"authorId": "2196356", "name": "Mengbai Xiao"}, {"authorId":
      "47585127", "name": "Yue Cheng"}, {"authorId": "2108194031", "name": "Songqing
      Chen"}]}, {"paperId": "255c11fa2fd4145f2c4e25f83c0f723e0f5eeca1", "externalIds":
      {"DBLP": "conf/ucc/BritoFKPFFRGRPC18", "MAG": "2910880444", "DOI": "10.1186/s13677-019-0141-z",
      "CorpusId": 57764055}, "corpusId": 57764055, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/255c11fa2fd4145f2c4e25f83c0f723e0f5eeca1",
      "title": "Secure end-to-end processing of smart metering data", "abstract":
      null, "venue": "Journal of Cloud Computing", "year": 2018, "referenceCount":
      12, "citationCount": 7, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://journalofcloudcomputing.springeropen.com/track/pdf/10.1186/s13677-019-0141-z",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2018-12-01", "journal": {"name": "Journal
      of Cloud Computing", "volume": "8"}, "citationStyles": {"bibtex": "@Article{Brito2018SecureEP,\n
      author = {Andrey Brito and C. Fetzer and S. K\u00f6psell and Marcelo Pasin and
      P. Felber and K. Fonseca and M. Rosa and Luiz Gomes and R. Riella and Charles
      B. Prado and L. D. C. Carmo and Daniel I. Lucani and M. Sipos and Laszlo Nagy
      and Marcell Feh\u00e9r},\n booktitle = {Journal of Cloud Computing},\n journal
      = {Journal of Cloud Computing},\n title = {Secure end-to-end processing of smart
      metering data},\n volume = {8},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "1765793", "name": "Andrey Brito"}, {"authorId": "145494211", "name": "C. Fetzer"},
      {"authorId": "1700539", "name": "S. K\u00f6psell"}, {"authorId": "1970140",
      "name": "Marcelo Pasin"}, {"authorId": "1743906", "name": "P. Felber"}, {"authorId":
      "2609204", "name": "K. Fonseca"}, {"authorId": "2825240", "name": "M. Rosa"},
      {"authorId": "1443727898", "name": "Luiz Gomes"}, {"authorId": "3934030", "name":
      "R. Riella"}, {"authorId": "3076898", "name": "Charles B. Prado"}, {"authorId":
      "1516179702", "name": "L. D. C. Carmo"}, {"authorId": "66632475", "name": "Daniel
      I. Lucani"}, {"authorId": "1692707", "name": "M. Sipos"}, {"authorId": "2058562237",
      "name": "Laszlo Nagy"}, {"authorId": "2775607", "name": "Marcell Feh\u00e9r"}]},
      {"paperId": "257aefd81da93e0f878d5b00645a5d1076d86e2b", "externalIds": {"DBLP":
      "conf/IEEEcloud/PusztaiMCDNDVX21", "DOI": "10.1109/CLOUD53861.2021.00055", "CorpusId":
      237612960}, "corpusId": 237612960, "publicationVenue": {"id": "406d9f60-417a-4dc5-a6b7-1fe4689a4ff7",
      "name": "IEEE International Conference on Cloud Computing", "type": "conference",
      "alternate_names": ["Int Conf Cloud Comput [services Soc", "CLOUD", "International
      Conference on Cloud Computing [Services Society]", "IEEE Int Conf Cloud Comput"]},
      "url": "https://www.semanticscholar.org/paper/257aefd81da93e0f878d5b00645a5d1076d86e2b",
      "title": "A Novel Middleware for Efficiently Implementing Complex Cloud-Native
      SLOs", "abstract": "Service Level Objectives (SLOs) guide the elasticity of
      cloud applications, e.g., by deciding when and how much the resources provisioned
      to an application should be changed. Evaluating SLOs requires metrics, which
      can be directly measured on the application or system, or, more elaborately,
      be composed from multiple low-level metrics. The implementation of such metrics
      and SLOs, the triggering of elasticity strategies, and allowing configurability
      by the user deploying an application, requires a flexible middleware. In this
      paper, we present a middleware that provides an orchestrator-independent SLO
      controller for periodically evaluating SLOs and triggering elasticity strategies,
      while decoupling SLOs from the elasticity strategies to increase flexibility,
      and provider-independent services for obtaining low-level metrics and composing
      them into higher-level metrics. We evaluate our middleware by implementing a
      motivating use case, featuring a cost efficiency SLO for an application deployed
      on Kubernetes.", "venue": "IEEE International Conference on Cloud Computing",
      "year": 2021, "referenceCount": 27, "citationCount": 20, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2021-09-01", "journal": {"name": "2021 IEEE 14th International
      Conference on Cloud Computing (CLOUD)", "pages": "410-420"}, "citationStyles":
      {"bibtex": "@Article{Pusztai2021ANM,\n author = {Thomas W. Pusztai and Andrea
      Morichetta and Victor Casamayor Pujol and S. Dustdar},\n booktitle = {IEEE International
      Conference on Cloud Computing},\n journal = {2021 IEEE 14th International Conference
      on Cloud Computing (CLOUD)},\n pages = {410-420},\n title = {A Novel Middleware
      for Efficiently Implementing Complex Cloud-Native SLOs},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "1500401563", "name": "Thomas W. Pusztai"}, {"authorId":
      "51129406", "name": "Andrea Morichetta"}, {"authorId": "2127779672", "name":
      "Victor Casamayor Pujol"}, {"authorId": "1691109", "name": "S. Dustdar"}]},
      {"paperId": "257d1d8d3f80301b10485c1291f5b4b316172f83", "externalIds": {"DOI":
      "10.1109/ICPSAsia58343.2023.10294639", "CorpusId": 264976885}, "corpusId": 264976885,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/257d1d8d3f80301b10485c1291f5b4b316172f83",
      "title": "Research of Electromechanical-Electromagnetic Transient Hybrid Simulation
      System Based on Kubernetes", "abstract": "The construction of new power system
      and the Guidelines for power system security and stability in China put forward
      higher requirements for the efficiency of electromechanical electromagnetic
      transient hybrid simulation of large power grids. In order to meet the ever-increasing
      demand for simulation in the future, this paper combines the current development
      direction of cloud services in the computer field, builds a high-performance
      computing platform suitable for the characteristics of hybrid simulation computing
      based on the Internet leading cluster management platform Kubernetes and container
      virtualization technology, and tests it in Power Dispatch and Control Center
      of China Southern Power Grid. Through the actual data test, the accuracy of
      the platform simulation is verified, and the efficiency improvement is basically
      close to the ideal value provided by the hardware computing power. The simulation
      time of 60 cases can be reduced to less than 1 hour, which provides a practical
      computing platform for the simulation analysis of new power system.", "venue":
      "2023 IEEE/IAS Industrial and Commercial Power System Asia (I&CPS Asia)", "year":
      2023, "referenceCount": 9, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2023-07-07", "journal": {"name": "2023 IEEE/IAS Industrial and Commercial Power
      System Asia (I&CPS Asia)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Zhou2023ResearchOE,\n
      author = {Tinghui Zhou and Zhiyuan Sun and Ligang Zhao and Hongyue Zhen},\n
      booktitle = {2023 IEEE/IAS Industrial and Commercial Power System Asia (I&CPS
      Asia)},\n journal = {2023 IEEE/IAS Industrial and Commercial Power System Asia
      (I&CPS Asia)},\n pages = {1-6},\n title = {Research of Electromechanical-Electromagnetic
      Transient Hybrid Simulation System Based on Kubernetes},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "50018300", "name": "Tinghui Zhou"}, {"authorId": "2265070080",
      "name": "Zhiyuan Sun"}, {"authorId": "49608236", "name": "Ligang Zhao"}, {"authorId":
      "35595072", "name": "Hongyue Zhen"}]}, {"paperId": "25901caa014804a96f5e6c1cc648c614ae498df7",
      "externalIds": {"MAG": "2960100327", "CorpusId": 217783581}, "corpusId": 217783581,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/25901caa014804a96f5e6c1cc648c614ae498df7",
      "title": "The content from my #Kubernetes talk is ...", "abstract": "The content
      from my #Kubernetes talk is up on GitHub. Have fun with it and thanks for attending!
      https://github.com/egoexpress/kubernetes-devopscamp #dvocc16", "venue": "",
      "year": 2016, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Art"], "s2FieldsOfStudy":
      [{"category": "Art", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Stierand2016TheCF,\n
      author = {Bj\u00f6rn Stierand},\n title = {The content from my #Kubernetes talk
      is ...},\n year = {2016}\n}\n"}, "authors": [{"authorId": "52641801", "name":
      "Bj\u00f6rn Stierand"}]}, {"paperId": "25a021a77fda612610f638a3a2098f7cc1d8d164",
      "externalIds": {"DBLP": "conf/infocom/WojciechowskiOL21", "DOI": "10.1109/INFOCOM42981.2021.9488670",
      "CorpusId": 236480338}, "corpusId": 236480338, "publicationVenue": {"id": "7f92b1d2-f2b3-454d-adbe-ff02c83fe404",
      "name": "IEEE Conference on Computer Communications", "type": "conference",
      "alternate_names": ["INFOCOM", "IEEE Conf Comput Commun"], "url": "http://www.ieee-infocom.org/"},
      "url": "https://www.semanticscholar.org/paper/25a021a77fda612610f638a3a2098f7cc1d8d164",
      "title": "NetMARKS: Network Metrics-AwaRe Kubernetes Scheduler Powered by Service
      Mesh", "abstract": "Container technology has revolutionized the way software
      is being packaged and run. The telecommunications industry, now challenged with
      the 5G transformation, views containers as the best way to achieve agile infrastructure
      that can serve as a stable base for high throughput and low latency for 5G edge
      applications. These challenges make optimal scheduling of performance-sensitive
      containerized workflows a matter of emerging importance. Meanwhile, the wide
      adoption of Kubernetes across industries has placed it as a de-facto standard
      for container orchestration. Several attempts have been made to improve Kubernetes
      scheduling, but the existing solutions either do not respect current scheduling
      rules or only considered a static infrastructure viewpoint.To address this,
      we propose NetMARKS - a novel approach to Kubernetes pod scheduling that uses
      dynamic network metrics collected with Istio Service Mesh. This solution improves
      Kubernetes scheduling while being fully backward compatible. We validated our
      solution using different workloads and processing layouts. Based on our analysis,
      NetMARKS can reduce application response time up to 37 percent and save up to
      50 percent of inter-node bandwidth in a fully automated manner. This significant
      improvement is crucial to Kubernetes adoption in 5G use cases, especially for
      multi-access edge computing and machine-to-machine communication.", "venue":
      "IEEE Conference on Computer Communications", "year": 2021, "referenceCount":
      32, "citationCount": 33, "influentialCitationCount": 2, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2021-05-10",
      "journal": {"name": "IEEE INFOCOM 2021 - IEEE Conference on Computer Communications",
      "pages": "1-9"}, "citationStyles": {"bibtex": "@Article{Wojciechowski2021NetMARKSNM,\n
      author = {Lukasz Wojciechowski and Krzysztof Opasiak and Jakub Latusek and Maciej
      Wereski and Victor Morales and Taewan Kim and Moonki Hong},\n booktitle = {IEEE
      Conference on Computer Communications},\n journal = {IEEE INFOCOM 2021 - IEEE
      Conference on Computer Communications},\n pages = {1-9},\n title = {NetMARKS:
      Network Metrics-AwaRe Kubernetes Scheduler Powered by Service Mesh},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "102558423", "name": "Lukasz Wojciechowski"},
      {"authorId": "82016628", "name": "Krzysztof Opasiak"}, {"authorId": "1412040047",
      "name": "Jakub Latusek"}, {"authorId": "2121370304", "name": "Maciej Wereski"},
      {"authorId": "2121370302", "name": "Victor Morales"}, {"authorId": "2111182710",
      "name": "Taewan Kim"}, {"authorId": "2069750224", "name": "Moonki Hong"}]},
      {"paperId": "25d9a141bfbc26acd02310c54a4b024abe4d1d43", "externalIds": {"DOI":
      "10.1063/5.0130139", "CorpusId": 257467271}, "corpusId": 257467271, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/25d9a141bfbc26acd02310c54a4b024abe4d1d43",
      "title": "Containerization of Shibboleth IdP as access management single sign-on
      (SSO) service based on integrated Kubernetes cluster with GitLab CI automation",
      "abstract": null, "venue": "VII INTERNATIONAL CONFERENCE \u201cSAFETY PROBLEMS
      OF CIVIL ENGINEERING CRITICAL INFRASTRUCTURES\u201d (SPCECI2021)", "year": 2023,
      "referenceCount": 1, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": null,
      "journal": {"name": "VII INTERNATIONAL CONFERENCE \u201cSAFETY PROBLEMS OF CIVIL
      ENGINEERING CRITICAL INFRASTRUCTURES\u201d (SPCECI2021)"}, "citationStyles":
      {"bibtex": "@Conference{Setiawan2023ContainerizationOS,\n author = {M. A. Setiawan
      and Ikhwan Alfath Nurul Fathony},\n booktitle = {VII INTERNATIONAL CONFERENCE
      \u201cSAFETY PROBLEMS OF CIVIL ENGINEERING CRITICAL INFRASTRUCTURES\u201d (SPCECI2021)},\n
      journal = {VII INTERNATIONAL CONFERENCE \u201cSAFETY PROBLEMS OF CIVIL ENGINEERING
      CRITICAL INFRASTRUCTURES\u201d (SPCECI2021)},\n title = {Containerization of
      Shibboleth IdP as access management single sign-on (SSO) service based on integrated
      Kubernetes cluster with GitLab CI automation},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2548880", "name": "M. A. Setiawan"}, {"authorId": "2204889479",
      "name": "Ikhwan Alfath Nurul Fathony"}]}, {"paperId": "25e13870ad1af1244a07a8754a6818d71b7b2c1e",
      "externalIds": {"DBLP": "conf/noms/SamaniHS23", "DOI": "10.1109/NOMS56928.2023.10154365",
      "CorpusId": 259217868}, "corpusId": 259217868, "publicationVenue": {"id": "042bc893-3752-44f7-9e77-c59ce54b1b11",
      "name": "IEEE/IFIP Network Operations and Management Symposium", "type": "conference",
      "alternate_names": ["Network Operations and Management Symposium", "NOMS", "IEEE/IFIP
      Netw Oper Manag Symp", "Netw Oper Manag Symp"], "url": "http://www.comsoc.org/"},
      "url": "https://www.semanticscholar.org/paper/25e13870ad1af1244a07a8754a6818d71b7b2c1e",
      "title": "Demonstrating a System for Dynamically Meeting Management Objectives
      on a Service Mesh", "abstract": "We demonstrate a management system that lets
      a service provider achieve end-to-end management objectives under varying load
      for applications on a service mesh based on the Istio and Kubernetes platforms.
      The management objectives for the demonstration include end-to-end delay bounds
      on service requests, throughput objectives, and service differentiation. Our
      method for finding effective control policies includes a simulator and a control
      module. The simulator is instantiated with traces from a testbed, and the control
      module trains a reinforcement learning (RL) agent to efficiently learn effective
      control policies on the simulator. The learned policies are then transfered
      to the testbed to perform dynamic control actions based on monitored system
      metrics. We show that the learned policies dynamically meet management objectives
      on the testbed and can be changed on the fly.", "venue": "IEEE/IFIP Network
      Operations and Management Symposium", "year": 2023, "referenceCount": 7, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-05-08", "journal": {"name": "NOMS 2023-2023 IEEE/IFIP Network Operations
      and Management Symposium", "pages": "1-3"}, "citationStyles": {"bibtex": "@Article{Samani2023DemonstratingAS,\n
      author = {Forough Shahab Samani and K. Hammar and R. Stadler},\n booktitle =
      {IEEE/IFIP Network Operations and Management Symposium},\n journal = {NOMS 2023-2023
      IEEE/IFIP Network Operations and Management Symposium},\n pages = {1-3},\n title
      = {Demonstrating a System for Dynamically Meeting Management Objectives on a
      Service Mesh},\n year = {2023}\n}\n"}, "authors": [{"authorId": "52398355",
      "name": "Forough Shahab Samani"}, {"authorId": "143946516", "name": "K. Hammar"},
      {"authorId": "145376180", "name": "R. Stadler"}]}, {"paperId": "25e3deae103e3bf437cd4e1b70ecd775dafbccd5",
      "externalIds": {"CorpusId": 251793242}, "corpusId": 251793242, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/25e3deae103e3bf437cd4e1b70ecd775dafbccd5",
      "title": "A Visual Guide to Calico eBPF Data Plane Validation", "abstract":
      "[1] \"Before you begin...\" https://projectcalico.docs.tigera.io/maintenance/ebpf/enabling-bpf#before-you-begin
      [2] \"Reversing the process\" https://projectcalico.docs.tigera.io/maintenance/ebpf/enabling-bpf#reversing-the-process
      [3] \"Enable eBPF mode\" https://projectcalico.docs.tigera.io/maintenance/ebpf/enabling-bpf#enable-ebpf-mode
      [4] \"Enable the eBPF dataplane\" https://projectcalico.docs.tigera.io/maintenance/ebpf/enabling-bpf
      [5] \"Configure Calico to talk directly to the API server\" https://projectcalico.docs.tigera.io/maintenance/ebpf/enabling-bpf#configure-calico-to-talk-directly-to-the-api-server
      [6] \"Configure kube-proxy\" https://projectcalico.docs.tigera.io/maintenance/ebpf/enabling-bpf#configure-kube-proxy
      Inspired by Daniele Polencic''s great https://learnk8s.io/troubleshooting-deployments
      thank you! The eBPF logo by the eBPF Foundation is licensed under CC-BY-4.0
      I want to validate that the eBPF data plane is suitable, running, and healthy
      in my Kubernetes/Calico cluster", "venue": "", "year": 2022, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "citationStyles": {"bibtex": "@Inproceedings{None,\n
      title = {A Visual Guide to Calico eBPF Data Plane Validation},\n year = {2022}\n}\n"},
      "authors": []}, {"paperId": "25f0390db751f395081c02c024657e02901390f0", "externalIds":
      {"MAG": "3048156085", "DBLP": "conf/hp3c/LiWZ20", "DOI": "10.1145/3407947.3407950",
      "CorpusId": 221013711}, "corpusId": 221013711, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/25f0390db751f395081c02c024657e02901390f0",
      "title": "A Dynamic I/O Sensing Scheduling Scheme in Kubernetes", "abstract":
      "With the rapid development of the Container-as-a-Service (CaaS), Kubernetes
      has become the de facto standard for deploying containerized applications on
      cloud environments. However, the Kubernetes scheduler does not take the disk
      I/O load of nodes into account, which leads two problems: (1) Multiple I/O-intensive
      applications may be dispatched to the same node, which cause I/O bottlenecks.
      (2) Pods are less likely to be scheduled on node with idle I/O and insufficient
      CPU, resulting in the waste of the node''s I/O resource. To address these problems,
      we first propose a dynamic scheduling algorithm named by Balanced-Disk-IO-Priority
      (BDI) to improve the disk I/O balance between the nodes. Moreover, we also propose
      a dynamic scheduling algorithm called Balanced-CPU-Disk-IO-Priority (BCDI) to
      solve the issue of load imbalance of CPU and disk I/O on single node. The experimental
      results show that the BDI algorithm and BCDI algorithm are more effective than
      the Kubernetes default scheduling algorithms.", "venue": "HP3C", "year": 2020,
      "referenceCount": 15, "citationCount": 7, "influentialCitationCount": 2, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2020-06-27", "journal": {"name": "Proceedings of the 2020
      4th International Conference on High Performance Compilation, Computing and
      Communications"}, "citationStyles": {"bibtex": "@Book{Li2020ADI,\n author =
      {Dong Li and Yi Wei and Bing Zeng},\n booktitle = {HP3C},\n journal = {Proceedings
      of the 2020 4th International Conference on High Performance Compilation, Computing
      and Communications},\n title = {A Dynamic I/O Sensing Scheduling Scheme in Kubernetes},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "2108820808", "name": "Dong Li"},
      {"authorId": "2112557634", "name": "Yi Wei"}, {"authorId": "2055941602", "name":
      "Bing Zeng"}]}, {"paperId": "26042d586014dbb48f3460dbc4e9ef6e3ae517d1", "externalIds":
      {"DBLP": "conf/smartnets/SiwachHC22", "DOI": "10.1109/SmartNets55823.2022.9993998",
      "CorpusId": 255418910}, "corpusId": 255418910, "publicationVenue": {"id": "661ae2a4-ae88-4ce1-a7a3-73bb04510f92",
      "name": "International Conference on Smart Communications and Networking", "type":
      "conference", "alternate_names": ["SmartNets", "Int Conf Smart Commun Netw"]},
      "url": "https://www.semanticscholar.org/paper/26042d586014dbb48f3460dbc4e9ef6e3ae517d1",
      "title": "Evaluating operational readiness using chaos engineering simulations
      on Kubernetes architecture in Big Data", "abstract": "- How much confidence
      we can have in the interconnected complex systems that we put into production
      environment? In this paper we will provide the solution for operational readiness
      of a platform strengthening the backup, restore, network file transfer, failover
      capabilities and overall security. We provide the evaluation of inducing chaos
      to a Kubernetes environment which terminates random pods with data from edge
      devices in data centers while processing analytics on Big Data network and infer
      the recovery time of pods to calculate an estimated response time. In this research,
      we discuss the Operational Acceptance Testing through Chaos Engineering at all
      layers and more precisely on the modern architecture and practices like Microservices
      Architecture and Cloud computing which have changed our IT landscape in recent
      times.", "venue": "International Conference on Smart Communications and Networking",
      "year": 2022, "referenceCount": 14, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-11-29", "journal": {"name": "2022 International Conference
      on Smart Applications, Communications and Networking (SmartNets)", "pages":
      "1-7"}, "citationStyles": {"bibtex": "@Article{Siwach2022EvaluatingOR,\n author
      = {Gautam Siwach and Adinarayana Haridas and Nagaraj Chinni},\n booktitle =
      {International Conference on Smart Communications and Networking},\n journal
      = {2022 International Conference on Smart Applications, Communications and Networking
      (SmartNets)},\n pages = {1-7},\n title = {Evaluating operational readiness using
      chaos engineering simulations on Kubernetes architecture in Big Data},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "1875180", "name": "Gautam Siwach"},
      {"authorId": "2199261200", "name": "Adinarayana Haridas"}, {"authorId": "2199261926",
      "name": "Nagaraj Chinni"}]}, {"paperId": "2637957f840952fd5e0495179e7198a60295dabc",
      "externalIds": {"DBLP": "conf/bigdataconf/GajanananKKW21", "DOI": "10.1109/BigData52589.2021.9671944",
      "CorpusId": 245934578}, "corpusId": 245934578, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/2637957f840952fd5e0495179e7198a60295dabc",
      "title": "Scalable Runtime Integrity Protection for Helm Based Applications
      on Kubernetes Cluster", "abstract": "Enterprises adopting cloud increasingly
      use container orchestration systems (e.g., Kubernetes) to manage applications
      and their configurations at scale. In Kubernetes environment, developers use
      package managers (e.g., Helm) for bundling, distributing, and deploying applications.
      These developments in cloud native applications have introduced new challenges.
      One of the challenges is protecting the integrity of application packages (e.g.,
      Helm chart) deployed in a large-scale enterprise cluster. Existing tools for
      verifying integrity of Helm charts are limited to verify provenance and integrity
      of application packages. Therefore, in this work, we propose a mechanism to
      verify provenance and integrity of Helm charts at the cluster-side by addressing
      the granularity gap to verify each resource in a chart. We demonstrate how our
      approach successfully enforces integrity of Helm charts and evaluate the cost
      of integrity enforcement with a preliminary study.", "venue": "2021 IEEE International
      Conference on Big Data (Big Data)", "year": 2021, "referenceCount": 0, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2021-12-15", "journal":
      {"name": "2021 IEEE International Conference on Big Data (Big Data)", "pages":
      "2362-2371"}, "citationStyles": {"bibtex": "@Article{Gajananan2021ScalableRI,\n
      author = {Kugamoorthy Gajananan and Hirokuni Kitahara and Ruriko Kudo and Yuji
      Watanabe},\n booktitle = {2021 IEEE International Conference on Big Data (Big
      Data)},\n journal = {2021 IEEE International Conference on Big Data (Big Data)},\n
      pages = {2362-2371},\n title = {Scalable Runtime Integrity Protection for Helm
      Based Applications on Kubernetes Cluster},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2282094", "name": "Kugamoorthy Gajananan"}, {"authorId": "2059124149",
      "name": "Hirokuni Kitahara"}, {"authorId": "40955730", "name": "Ruriko Kudo"},
      {"authorId": "2111725165", "name": "Yuji Watanabe"}]}, {"paperId": "26ae287308acb9e11f21ba8e3422b1c49b5ba173",
      "externalIds": {"DBLP": "conf/ic2e/GeldenhuysWPHST21", "ArXiv": "2108.10721",
      "DOI": "10.1109/ic2e52221.2021.00041", "CorpusId": 237278284}, "corpusId": 237278284,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/26ae287308acb9e11f21ba8e3422b1c49b5ba173",
      "title": "Dependable IoT Data Stream Processing for Monitoring and Control of
      Urban Infrastructures", "abstract": "The Internet of Things describes a network
      of physical devices interacting and producing vast streams of sensor data. At
      present there are a number of general challenges which exist while developing
      solutions for use cases involving the monitoring and control of urban infrastructures.
      These include the need for a dependable method for extracting value from these
      high volume streams of time sensitive data which is adaptive to changing workloads.
      Low-latency access to the current state for live monitoring is a necessity as
      well as the ability to perform queries on historical data. At the same time,
      many design choices need to be made and the number of possible technology options
      available further adds to the complexity. In this paper we present a dependable
      IoT data processing platform for the monitoring and control of urban infrastructures.
      We define requirements in terms of dependability and then select a number of
      mature open-source technologies to match these requirements. We examine the
      disparate parts necessary for delivering a holistic overall architecture and
      describe the dataflows between each of these components. We likewise present
      generalizable methods for the enrichment and analysis of sensor data applicable
      across various application areas. We demonstrate the usefulness of this approach
      by providing an exemplary prototype platform executing on top of Kubernetes
      and evaluate the effectiveness of jobs processing sensor data in this environment.",
      "venue": "2021 IEEE International Conference on Cloud Engineering (IC2E)", "year":
      2021, "referenceCount": 29, "citationCount": 11, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "http://eprints.gla.ac.uk/268175/1/268175.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2021-08-24", "journal":
      {"name": "2021 IEEE International Conference on Cloud Engineering (IC2E)", "pages":
      "244-250"}, "citationStyles": {"bibtex": "@Article{Geldenhuys2021DependableID,\n
      author = {Morgan K. Geldenhuys and Jonathan Will and Benjamin J. J. Pfister
      and M. Haug and A. Scharmann and L. Thamsen},\n booktitle = {2021 IEEE International
      Conference on Cloud Engineering (IC2E)},\n journal = {2021 IEEE International
      Conference on Cloud Engineering (IC2E)},\n pages = {244-250},\n title = {Dependable
      IoT Data Stream Processing for Monitoring and Control of Urban Infrastructures},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "88355634", "name": "Morgan K.
      Geldenhuys"}, {"authorId": "153294591", "name": "Jonathan Will"}, {"authorId":
      "2124213396", "name": "Benjamin J. J. Pfister"}, {"authorId": "48295895", "name":
      "M. Haug"}, {"authorId": "74717903", "name": "A. Scharmann"}, {"authorId": "2294791",
      "name": "L. Thamsen"}]}, {"paperId": "26b8672bd6f429ec9a6d4d1424244360ba2e6f03",
      "externalIds": {"DBLP": "journals/tnsm/SubramanyaR21", "DOI": "10.1109/TNSM.2021.3050955",
      "CorpusId": 232236899}, "corpusId": 232236899, "publicationVenue": {"id": "a00fde74-d8df-4613-b825-0fff9f531d3f",
      "name": "IEEE Transactions on Network and Service Management", "type": "journal",
      "alternate_names": ["IEEE Trans Netw Serv Manag"], "issn": "1932-4537", "url":
      "http://ejournals.ebsco.com/direct.asp?JournalID=714200", "alternate_urls":
      ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=4275028", "http://ieeexplore.ieee.org/servlet/opac?punumber=4275028"]},
      "url": "https://www.semanticscholar.org/paper/26b8672bd6f429ec9a6d4d1424244360ba2e6f03",
      "title": "Centralized and Federated Learning for Predictive VNF Autoscaling
      in Multi-Domain 5G Networks and Beyond", "abstract": "Network Function Virtualization
      (NFV) and Multi-access Edge Computing (MEC) are two technologies expected to
      play a vital role in 5G and beyond networks. However, adequate mechanisms are
      required to meet the dynamically changing network service demands to utilize
      the network resources optimally and also to satisfy the demanding QoS requirements.
      Particularly in multi-domain scenarios, the additional challenge of isolation
      and data privacy among domains needs to be tackled. To this end, centralized
      and distributed Artificial Intelligence (AI)-driven resource orchestration techniques
      (e.g., virtual network function (VNF) autoscaling) are foreseen as the main
      enabler. In this work, we propose deep learning models, both centralized and
      federated approaches, that can perform horizontal and vertical autoscaling in
      multi-domain networks. The problem of autoscaling is modelled as a time series
      forecasting problem that predicts the future number of VNF instances based on
      the expected traffic demand. We evaluate the performance of various deep learning
      models trained over a commercial network operator dataset and investigate the
      pros and cons of federated learning over centralized learning approaches. Furthermore,
      we introduce the AI-driven Kubernetes orchestration prototype that we implemented
      by leveraging our MEC platform and assess the performance of the proposed deep
      learning models in a practical setup.", "venue": "IEEE Transactions on Network
      and Service Management", "year": 2021, "referenceCount": 38, "citationCount":
      53, "influentialCitationCount": 4, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://iris.unitn.it/bitstream/11572/297103/1/FINAL%20VERSION.pdf", "status":
      "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-03-01", "journal":
      {"name": "IEEE Transactions on Network and Service Management", "pages": "63-78",
      "volume": "18"}, "citationStyles": {"bibtex": "@Article{Subramanya2021CentralizedAF,\n
      author = {T. Subramanya and R. Riggio},\n booktitle = {IEEE Transactions on
      Network and Service Management},\n journal = {IEEE Transactions on Network and
      Service Management},\n pages = {63-78},\n title = {Centralized and Federated
      Learning for Predictive VNF Autoscaling in Multi-Domain 5G Networks and Beyond},\n
      volume = {18},\n year = {2021}\n}\n"}, "authors": [{"authorId": "8743602", "name":
      "T. Subramanya"}, {"authorId": "1746291", "name": "R. Riggio"}]}, {"paperId":
      "26e5a4fc123e0271aed49a38e520880aff1a16d8", "externalIds": {"MAG": "2936595372",
      "CorpusId": 146109079}, "corpusId": 146109079, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/26e5a4fc123e0271aed49a38e520880aff1a16d8",
      "title": "Study of Blockchain-as-a-Service Systems with a Case Study of Hyperledger
      Fabric Implementation on Kubernetes", "abstract": "...........................................................................................................................
      iii ACKNOWLEDGEMENTS ..........................................................................................................
      v TABLE OF CONTENTS ............................................................................................................
      vi LIST OF TABLES ......................................................................................................................
      x LIST OF FIGURES ...................................................................................................................
      xi CHAPTER 1 : BLOCKCHAIN AND RELATED TERMINOLOGIES ....................................................
      1 1.", "venue": "", "year": 2018, "referenceCount": 6, "citationCount": 6, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Yewale2018StudyOB,\n
      author = {Aniket Jalinder Yewale},\n title = {Study of Blockchain-as-a-Service
      Systems with a Case Study of Hyperledger Fabric Implementation on Kubernetes},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "116712894", "name": "Aniket
      Jalinder Yewale"}]}, {"paperId": "270f5d2f2a39f918e3c3c1bd136acd17b93f91b6",
      "externalIds": {"DBLP": "conf/nof/ZerwasKUARWK22", "DOI": "10.1109/NoF55974.2022.9942649",
      "CorpusId": 253543367}, "corpusId": 253543367, "publicationVenue": {"id": "966ed49f-abb2-4051-a7e7-c966d9426b85",
      "name": "International Conference on Network of the Future", "type": "conference",
      "alternate_names": ["Int Conf Netw Future", "NoF", "NOF", "International Conference
      on Network of Future"]}, "url": "https://www.semanticscholar.org/paper/270f5d2f2a39f918e3c3c1bd136acd17b93f91b6",
      "title": "KAPET\u00c1NIOS: Automated Kubernetes Adaptation through a Digital
      Twin", "abstract": "This demo presents a self-operating Kubernetes (K8s) cluster
      that uses digital twinning and machine learning to autonomously adapt its Horizontal
      Pod Autoscaler (HPA) to workload changes. The demo uses a digital twin of a
      K8s cluster to gather performance statistics and learn a model for the workload.
      With the model, the cluster autonomously adjusts HPA parameters for better performance.
      The demo illustrates this process and shows that the requested pod seconds decrease
      by ~37 %, while the request latency stays mostly unaffected.", "venue": "International
      Conference on Network of the Future", "year": 2022, "referenceCount": 12, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://mediatum.ub.tum.de/doc/1688820/document.pdf", "status": "GREEN"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2022-10-05", "journal": {"name": "2022 13th
      International Conference on Network of the Future (NoF)", "pages": "1-3"}, "citationStyles":
      {"bibtex": "@Article{Zerwas2022KAPET\u00c1NIOSAK,\n author = {Johannes Zerwas
      and Patrick Kr\u00e4mer and Razvan-Mihai Ursu and Navidreza Asadi and Phil Rodgers
      and Leon Wong and W. Kellerer},\n booktitle = {International Conference on Network
      of the Future},\n journal = {2022 13th International Conference on Network of
      the Future (NoF)},\n pages = {1-3},\n title = {KAPET\u00c1NIOS: Automated Kubernetes
      Adaptation through a Digital Twin},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "66850064", "name": "Johannes Zerwas"}, {"authorId": "2169674538", "name": "Patrick
      Kr\u00e4mer"}, {"authorId": "2165526212", "name": "Razvan-Mihai Ursu"}, {"authorId":
      "2187926743", "name": "Navidreza Asadi"}, {"authorId": "2190914129", "name":
      "Phil Rodgers"}, {"authorId": "2054542303", "name": "Leon Wong"}, {"authorId":
      "9358170", "name": "W. Kellerer"}]}, {"paperId": "2740d85a6f815115a25843d120ab147917c091ee",
      "externalIds": {"DOI": "10.33168/jsms.2023.0314", "CorpusId": 263823323}, "corpusId":
      263823323, "publicationVenue": {"id": "a5bf783b-ddeb-42bd-bde6-9cd4824c8794",
      "name": "Journal of system and management sciences", "type": "journal", "alternate_names":
      ["J syst manag sci"], "issn": "1816-6075", "alternate_issns": ["1818-0523"]},
      "url": "https://www.semanticscholar.org/paper/2740d85a6f815115a25843d120ab147917c091ee",
      "title": "Implementations of Microservice on Self-service Application Using
      Service Oriented Modelling and Architecture: A Case Study", "abstract": ". The
      impact of the pandemic has accelerated the pace of digital transformation, one
      of the sectors affected is self-service technology (SST), which allows the company''s
      business activities to continue and can be accessed by customers without time
      and place restrictions. The increasing number of SST users, this is the basis
      for making applications that have good performance by comparing application
      development methods based on Monolithic Architecture (MA) with Microservice
      Architecture (MSA) using three Quality Attributes (QAs) based on the basic principles
      of Service Oriented Architecture (SOA) with the Service Oriented Modeling and
      Architecture (SOMA) method, namely scalability, performance, and availability.
      The scalability factor of the application becomes a reference because the application
      of MA has drawbacks in terms of scaling which requires quite a long time. Due
      to these deficiencies of MA, the application of MSA is a solution, especially
      by using containerization with Kubernetes as an orchestration platform that
      is deployed on a public cloud. Testing was carried out on QAs using Apache JMeter.
      From the test results, it can be concluded that MSA has high flexibility, able
      to accommodate large user requests. Moreover, it has good availability and agile
      development that can follow business needs.", "venue": "Journal of system and
      management sciences", "year": 2023, "referenceCount": 22, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-05-31", "journal":
      {"name": "Journal of System and Management Sciences"}, "citationStyles": {"bibtex":
      "@Article{Hutomo2023ImplementationsOM,\n author = {Hestu Widyo Hutomo and A.
      S. Girsang},\n booktitle = {Journal of system and management sciences},\n journal
      = {Journal of System and Management Sciences},\n title = {Implementations of
      Microservice on Self-service Application Using Service Oriented Modelling and
      Architecture: A Case Study},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2258750817", "name": "Hestu Widyo Hutomo"}, {"authorId": "2072640", "name":
      "A. S. Girsang"}]}, {"paperId": "2743571d759ca3f22b72ea2023b2a826baf1057a",
      "externalIds": {"DOI": "10.2298/fuee2104525g", "CorpusId": 245942414}, "corpusId":
      245942414, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2743571d759ca3f22b72ea2023b2a826baf1057a",
      "title": "Autoscalabile ditributed anti-spam SMTP system based on kubernetes",
      "abstract": "Due to the increasing amount of spam email traffic, email users
      are in\n increasing danger, while email server resources are becoming overloaded.\n
      Therefore, it is necessary to protect email users, but also to prevent SMTP\n
      system overload during spam attacks. The aim of this paper is to design and\n
      implement an autoscalable distributed anti-spam SMTP system based on a Proof\n
      of work concept. The proposed solution extends SMTP protocol in order to\n enable
      the evaluation of the client?s credibility using the Proof of work\n algorithm.
      In order to prevent resource overload during spam attacks, the\n anti-spam SMTP
      system is implemented in a distributed environment, as a \n group of multiple
      anti-spam SMTP server instances. Kubernetes architecture\n is used for system
      distribution, configured with the possibility of\n autoscaling the number of
      antispam SMTP server instances depending on the\n system load. The implemented
      system is evaluated during a distributed spam\n attempt, simulated by a custom-made
      traffic generator tool. Various\n performance tests are given: (1) The proposed
      system?s impact on client?s\n behaviour and the overall amount of spam messages,
      (2) The performance of\n the undistributed anti-spam SMTP server during spam
      attack, in terms of\n resource load analysis (3) Autoscaling demonstration and
      evaluation of\n proposed distributed system?s performance during a spam attack.
      It is shown\n that the proposed solution has the possibility of reducing the
      amount of\n spam traffic, while processing tens of thousands of simultaneous
      SMTP client\n requests in a distributed environment.", "venue": "Facta universitatis
      - series: Electronics and Energetics", "year": 2021, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "http://www.doiserbia.nb.rs/ft.aspx?id=0353-36702104525G", "status": "GOLD"},
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "Facta universitatis - series: Electronics and Energetics"},
      "citationStyles": {"bibtex": "@Article{Gavrilovic2021AutoscalabileDA,\n author
      = {Nadja Gavrilovic and V. Ciric},\n booktitle = {Facta universitatis - series:
      Electronics and Energetics},\n journal = {Facta universitatis - series: Electronics
      and Energetics},\n title = {Autoscalabile ditributed anti-spam SMTP system based
      on kubernetes},\n year = {2021}\n}\n"}, "authors": [{"authorId": "1860697949",
      "name": "Nadja Gavrilovic"}, {"authorId": "40453902", "name": "V. Ciric"}]},
      {"paperId": "2755368c09f13bfb93959460ef87b607d4f035c1", "externalIds": {"DBLP":
      "journals/corr/abs-2401-01408", "ArXiv": "2401.01408", "DOI": "10.48550/arXiv.2401.01408",
      "CorpusId": 266741881}, "corpusId": 266741881, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/2755368c09f13bfb93959460ef87b607d4f035c1",
      "title": "Cost Minimization in Multi-cloud Systems with Runtime Microservice
      Re-orchestration", "abstract": "Multi-cloud systems facilitate a cost-efficient
      and geographically-distributed deployment of microservice-based applications
      by temporary leasing virtual nodes with diverse pricing models. To preserve
      the cost-efficiency of multi-cloud deployments, it is essential to redeploy
      microservices onto the available nodes according to a dynamic resource configuration,
      which is often performed to better accommodate workload variations. However,
      this approach leads to frequent service disruption since applications are continuously
      shutdown and redeployed in order to apply the new resource assignment. To overcome
      this issue, we propose a re-orchestration scheme that migrates microservice
      at runtime based on a rolling update scheduling logic. Specifically, we propose
      an integer linear optimization problem that minimizes the cost associated to
      multi-cloud virtual nodes and that ensures that delay-sensitive microservices
      are co-located on the same regional cluster. The resulting rescheduling order
      guarantees no service disruption by repacking microservices between the available
      nodes without the need to turn off the outdated microservice instance before
      redeploying the updated version. In addition, we propose a two-step heuristic
      scheme that effectively approximates the optimal solution at the expense of
      close-to-zero service disruption and QoS violation probability. Results show
      that proposed schemes achieve better performance in terms of cost mitigation,
      low service disruption and low QoS violation probability compared to baseline
      schemes replicating Kubernetes scheduler functionalities.", "venue": "arXiv.org",
      "year": 2024, "referenceCount": 21, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2024-01-02", "journal": {"name": "ArXiv", "volume": "abs/2401.01408"}, "citationStyles":
      {"bibtex": "@Article{Zambianco2024CostMI,\n author = {Marco Zambianco and Silvio
      Cretti and Domenico Siracusa},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n
      title = {Cost Minimization in Multi-cloud Systems with Runtime Microservice
      Re-orchestration},\n volume = {abs/2401.01408},\n year = {2024}\n}\n"}, "authors":
      [{"authorId": "1659279585", "name": "Marco Zambianco"}, {"authorId": "8811077",
      "name": "Silvio Cretti"}, {"authorId": "2257191425", "name": "Domenico Siracusa"}]},
      {"paperId": "2764e7043d7628a3e166942234a0e3f65f288ccb", "externalIds": {"DBLP":
      "conf/systor/DeshpandeLS21", "DOI": "10.1145/3456727.3463833", "CorpusId": 235348672},
      "corpusId": 235348672, "publicationVenue": {"id": "8f0f5460-2391-4d75-ae39-d9b233b91e0a",
      "name": "Annual Haifa Experimental Systems Conference", "type": "conference",
      "alternate_names": ["Haifa Experimental Systems Conference", "SYSTOR", "ACM
      Int Conf Syst Storage", "Annu Haifa Exp Syst Conf", "ACM International Conference
      on Systems and Storage", "Haifa Exp Syst Conf"]}, "url": "https://www.semanticscholar.org/paper/2764e7043d7628a3e166942234a0e3f65f288ccb",
      "title": "Self managed data protection for containers", "abstract": "Container
      frameworks have been gaining popularity in recent years, with container native
      storage being one of the fastest growing segment. According to IDC report [1],
      90% of applications on cloud platforms and over 95% of new microservices are
      being deployed in containers. The growth of container native storage is largely
      driven by stateful applications [2, 3], the mainstay of enterprise IT environments.
      As organizations are increasingly adopting containerized deployments, they must
      also deal with data protection to maintain business continuity. The users or
      application developers in containerized environment focus on designing and configuring
      the application, whereas various management aspects are handled by the orchestration
      system. For instance, the Kubernetes framework deals with load balancing and
      failover of application components without active user involvement. In the same
      mold, we present a self-service backup system for containerized stateful applications.
      Here, backups refer to physically distinct copies of point-in-time logical copies
      of data that are used to protect data from logical corruption, human error and
      cyber attacks such as ransomware attacks. Our goal is to allow users to convey
      their data protection requirements, such as Recovery Point Objective (RPO) or
      retention period, in a similar manner as application configuration. The RPO
      expresses the data loss tolerance for the backup. The RPO is said to be T hours
      if the application can lose no more data than the changes made in the last T
      hours. Given the user requirements, the backup system snapshots the application
      data volumes and copies out the snapshots to an external repository. In case
      of a failure of the primary volume, the volume can be restored from the repository.
      In traditionally managed data centers, administrators are responsible for assessing
      the load on the storage system and accordingly configuring backup objectives
      for all users. However, self-service containerized environment present the following
      challenges. First, in such environments each application instance, i.e. a stateful
      container, is provisioned with a separate volume. Therefore a cluster may consist
      of thousands of small volumes with varying RPOs. Moreover, the end users may
      not be aware of failures or resource fluctuations, e.g., load on the storage
      system, to know if the specified data protection guarantee can be fulfilled.
      Second, when the storage system is being used by IO intensive applications,
      the application traffic competes with the backup traffic and maintaining the
      RPO of backups becomes challenging. When the rate of data copying for backups
      is increased to meet the RPO, the applications may suffer from the adverse impact.
      In contrast, when the rate of data copying is decreased to reduce its interference
      with the application traffic, the backup may violate the provided RPO guarantee.
      We address the above problems in the proposed self-service backup system. To
      protect data of their stateful applications, users can simply specify the desired
      protection policies, namely RPO and retention period, and need not dictate when
      or how frequently the volumes are backed up. The users can request and monitor
      backups through a familiar Kubernetes interface, i.e, kubectl. Additionally,
      we propose adaptive scheduling to minimize the snapshots required to provide
      the necessary RPO guarantee. The scheduler varies the interval between the snapshots
      based on system load. When storage system, network is under heavy load, or experiencing
      any failures or outages, the snapshot frequency is increased, thus affording
      more time for offloading the data. At other times, the scheduler reduces the
      snapshot frequency thereby reducing system processing and network overhead.
      The system is also resilient to resource, component and backup job failures.
      It treats each operation (request creation, snapshot, data copy) as a transaction
      and leverage Kubernetes to restart the erroneous or failed component on same
      or different nodes. The transactional semantic ensures continuity through such
      restarts. Our evaluation with thousands volumes with varying RPOs shows that
      our system can quickly react to resource fluctuations and minimize RPO violations
      as compared to the fixed schedulers.", "venue": "Annual Haifa Experimental Systems
      Conference", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book"],
      "publicationDate": "2021-06-14", "journal": {"name": "Proceedings of the 14th
      ACM International Conference on Systems and Storage"}, "citationStyles": {"bibtex":
      "@Article{Deshpande2021SelfMD,\n author = {Umesh Deshpande and Nick Linck and
      S. Seshadri},\n booktitle = {Annual Haifa Experimental Systems Conference},\n
      journal = {Proceedings of the 14th ACM International Conference on Systems and
      Storage},\n title = {Self managed data protection for containers},\n year =
      {2021}\n}\n"}, "authors": [{"authorId": "2058600733", "name": "Umesh Deshpande"},
      {"authorId": "2107014847", "name": "Nick Linck"}, {"authorId": "32999489", "name":
      "S. Seshadri"}]}, {"paperId": "2782cd8f6d0842f5a636896d2b8886bcf7aafaca", "externalIds":
      {"DOI": "10.1088/1742-6596/2438/1/012014", "CorpusId": 256897549}, "corpusId":
      256897549, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2782cd8f6d0842f5a636896d2b8886bcf7aafaca",
      "title": "CernVM-FS ephemeral publishers on Kubernetes", "abstract": "The CernVM
      File System (CernVM-FS) is a global read-only POSIX file system that provides
      scalable and reliable software distribution to numerous scientific collaborations.
      It gives access to more than a billion binary files of experiment application
      software stacks and operating system containers to end user devices, grids,
      clouds, and supercomputers. CernVM-FS is asymmetric by construction. Writing
      into the repository is a centralized operation called publishing, while reading
      is allowed for many clients from many locations. The classic publishing process
      needs a dedicated \u201crelease manager machine\u201d that provides the editable
      repository copy. This classic approach was improved thanks to the introduction
      of the CernVM-FS Gateway that provides concurrent access to the repository backend
      storage through a REST API. In this contribution, we present further improvements
      to the CernVM-FS publishing process. Our main contribution is the construction
      of ephemeral containers that are created on demand and used to provide a temporary,
      editable repository copy for a single publish operation. The container construction
      makes careful use of Linux namespaces and a user-space implementation of overlayfs.
      We further show that both the gateway and the containers used for publishing
      can be instantiated as pods in a kubernetes cluster. Thus, we demonstrate a
      kubernetes-native CernVM-FS publishing workflow.", "venue": "Journal of Physics:
      Conference Series", "year": 2023, "referenceCount": 6, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Physics"],
      "s2FieldsOfStudy": [{"category": "Physics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["Conference"],
      "publicationDate": "2023-02-01", "journal": {"name": "Journal of Physics: Conference
      Series", "volume": "2438"}, "citationStyles": {"bibtex": "@Conference{Valenzuela2023CernVMFSEP,\n
      author = {Andrea Valenzuela and J. Blomer},\n booktitle = {Journal of Physics:
      Conference Series},\n journal = {Journal of Physics: Conference Series},\n title
      = {CernVM-FS ephemeral publishers on Kubernetes},\n volume = {2438},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2055017637", "name": "Andrea Valenzuela"},
      {"authorId": "2458191", "name": "J. Blomer"}]}, {"paperId": "27a4264ff7ab4559e309f1fdff922a19322f010c",
      "externalIds": {"DOI": "10.1109/GCAT59970.2023.10353291", "CorpusId": 266412239},
      "corpusId": 266412239, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/27a4264ff7ab4559e309f1fdff922a19322f010c",
      "title": "A New Approach Towards Deployment and Management of Machine Learning
      Models Using K-serve Platform for Building Robust Machine Learning Systems",
      "abstract": "Kserve, commonly referred to as KFServing, is an open-source serving
      framework for machine learning (ML) models that runs on Kubernetes. enables
      the deployment, servicing, and management of ML models in a production environment
      in a scalable and effective manner. Kserve resources make it easier to develop
      scalable and reliable machine learning serving systems by streamlining the deployment
      and management of ML models in production. With contributions from several organisations
      and developers in the ML community, it is a dynamic open-source project. The
      influence that Kserve\u2019s work has had on the Data Science community is extensively
      covered in this research. This research also discusses the Kserve design, elements,
      and features. The additional Kserve platforms that aid in the deployment and
      administration of machine learning models for creating reliable machine learning
      systems have also been brought to light.", "venue": "2023 4th IEEE Global Conference
      for Advancement in Technology (GCAT)", "year": 2023, "referenceCount": 20, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2023-10-06", "journal": {"name": "2023 4th IEEE Global Conference for Advancement
      in Technology (GCAT)", "pages": "1-5"}, "citationStyles": {"bibtex": "@Conference{Gill2023ANA,\n
      author = {Kanwarpartap Singh Gill and Vatsala Anand and Rupesh Gupta and Charu
      Khosla and Pao-Ann Hsiung},\n booktitle = {2023 4th IEEE Global Conference for
      Advancement in Technology (GCAT)},\n journal = {2023 4th IEEE Global Conference
      for Advancement in Technology (GCAT)},\n pages = {1-5},\n title = {A New Approach
      Towards Deployment and Management of Machine Learning Models Using K-serve Platform
      for Building Robust Machine Learning Systems},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2201714670", "name": "Kanwarpartap Singh Gill"}, {"authorId":
      "1398280374", "name": "Vatsala Anand"}, {"authorId": "2129490766", "name": "Rupesh
      Gupta"}, {"authorId": "2267816300", "name": "Charu Khosla"}, {"authorId": "2259967907",
      "name": "Pao-Ann Hsiung"}]}, {"paperId": "27a84e6dfddfb86a614cc34cfb918af4aff67c68",
      "externalIds": {"ArXiv": "2009.08912", "DBLP": "journals/corr/abs-2009-08912",
      "MAG": "3087181205", "CorpusId": 221802760}, "corpusId": 221802760, "publicationVenue":
      {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names":
      ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/27a84e6dfddfb86a614cc34cfb918af4aff67c68",
      "title": "C-Balancer: A System for Container Profiling and Scheduling", "abstract":
      "Linux containers have gained high popularity in recent times. This popularity
      is significantly due to various advantages of containers over Virtual Machines
      (VM). The containers are lightweight, occupy lesser storage, have fast boot-up
      time, easy to deploy and have faster auto-scaling. The key reason behind the
      popularity of containers is that they leverage the mechanism of micro-service
      style software development, where applications are designed as independently
      deployable services. There are various container orchestration tools for deploying
      and managing the containers in the cluster. The prominent among them are Docker
      Swarm and Kubernetes. However, they do not address the effects of resource contention
      when multiple containers are deployed on a node. Moreover, they do not provide
      support for container migration in the event of an attack or increased resource
      contention. To address such issues, we propose C-Balancer, a scheduling framework
      for efficient placement of containers in the cluster environment. C-Balancer
      works by periodically profiling the containers and deciding the optimal container
      to node placement. Our proposed approach improves the performance of containers
      in terms of resource utilization and throughput. Experiments using a workload
      mix of Stress-NG and iPerf benchmark shows that our proposed approach achieves
      a maximum performance improvement of 58% for the workload mix. Our approach
      also reduces the variance in resource utilization across the cluster by 60%
      on average.", "venue": "arXiv.org", "year": 2020, "referenceCount": 30, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-09-18", "journal": {"name": "ArXiv", "volume": "abs/2009.08912"}, "citationStyles":
      {"bibtex": "@Article{Dhumal2020CBalancerAS,\n author = {Akshay Dhumal and D.
      Janakiram},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {C-Balancer:
      A System for Container Profiling and Scheduling},\n volume = {abs/2009.08912},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "143749745", "name": "Akshay
      Dhumal"}, {"authorId": "70271329", "name": "D. Janakiram"}]}, {"paperId": "27e254bd393802e38f726d3d77a1c320f9ab63ae",
      "externalIds": {"DOI": "10.31891/csit-2023-2-5", "CorpusId": 261754274}, "corpusId":
      261754274, "publicationVenue": {"id": "7a090827-17e9-45b3-807b-4deb0d918e94",
      "name": "Computer Systems and Information Technologies", "alternate_names":
      ["Comput Syst Inf Technol"], "issn": "2710-0766", "alternate_issns": ["2710-0774"]},
      "url": "https://www.semanticscholar.org/paper/27e254bd393802e38f726d3d77a1c320f9ab63ae",
      "title": "STUDY OF METHODS OF CREATING SERVICE-ORIENTED SOFTWARE SYSTEMS IN
      AZURE", "abstract": "The modern development of service-oriented software systems
      is accompanied by the wide use of cloud technologies, which affect the competitiveness
      of companies and their systems, which provide opportunities to expand the client
      base thanks to the coverage of several regions of the city or country. \nThe
      advantage of cloud services is availability in any part of the world where there
      is an Internet connection. Cloud providers provide a large volume of services
      for various needs: such as hosting, deployment of containers, file storage,
      databases, etc. \nIn particular, all the most popular cloud providers offer
      several options for creating service-oriented software systems, including both
      standard technologies and proprietary developments. This paper compares the
      methods of creating service-oriented software systems based on the Azure cloud
      platform: Azure Container Apps, Azure Kubernete Service, and Azure Red Hat OpenShift.
      The subject area of technologies for the implementation of service-oriented
      application architecture is considered, and criteria for the analysis of methods
      for implementing applications with such an architecture are proposed. A software
      solution for comparing methods of creating service-oriented applications based
      on the Azure cloud platform was designed and developed. The developed software
      system provides an opportunity to rent scooters, bicycles and cars. \nThe purpose
      of the study is a comparative analysis of the methods of creating service-oriented
      software systems based on Azure services, and the subject of the study is a
      software solution implemented using these methods. \nThe purpose of this work
      will be the development of a software system that will provide an opportunity
      to rent scooters, bicycles and cars. Using this system, we will investigate
      the deployment of this system on certain services from Azure. \nThe results
      of this research on Azure services: Azure Container Apps, Azure Kubernete Service
      and Azure Red Hat OpenShift can be used when creating a new software system,
      when expanding an existing software system, when transferring software system
      components from other platforms to the Azure platform using these services.",
      "venue": "Computer Systems and Information Technologies", "year": 2023, "referenceCount":
      8, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://csitjournal.khmnu.edu.ua/index.php/csit/article/download/214/143",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-06-29", "journal": {"name": "Computer systems and information
      technologies"}, "citationStyles": {"bibtex": "@Article{Makieiev2023STUDYOM,\n
      author = {Oleksii Makieiev and Natalia Kravets},\n booktitle = {Computer Systems
      and Information Technologies},\n journal = {Computer systems and information
      technologies},\n title = {STUDY OF METHODS OF CREATING SERVICE-ORIENTED SOFTWARE
      SYSTEMS IN AZURE},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2239822852",
      "name": "Oleksii Makieiev"}, {"authorId": "2239830780", "name": "Natalia Kravets"}]},
      {"paperId": "27e4cf6eb1b93655f43b6aae7be269f60e37f179", "externalIds": {"DOI":
      "10.1109/MICCIS58901.2023.00020", "CorpusId": 261711071}, "corpusId": 261711071,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/27e4cf6eb1b93655f43b6aae7be269f60e37f179",
      "title": "A Node Agent for Fast and Safe Execution of Computing Tasks under
      Kubernetes", "abstract": "Current cloud platforms host workloads by creating
      a container instance and destroying the instance when the call is complete.
      However, the use of containers brings much overhead, which is not suitable for
      performance-sensitive computing tasks such as emerging IoT applications with
      real-time latency constraints. In this paper, we discuss the existing solutions
      for performing computational tasks in Kubernetes, a software that can automatically
      manage, scale, and maintain the required state of multiple workloads, as well
      as unresolved performance challenges in resource-constrained nodes. To achieve
      higher performance, we propose and implement a node agent that performs computing
      tasks quickly and safely. Compared with traditional container-based node agent,
      the performance of our node agent is improved by about 100 times and 1.1 times
      in the cold start and hot start workload scenarios, respectively. Compared with
      the latest solution using Webassembly, it improves the cold start and hot start
      time by about 10%-50%, and can be applied to richer scenarios.", "venue": "2023
      International Conference on Mobile Internet, Cloud Computing and Information
      Security (MICCIS)", "year": 2023, "referenceCount": 19, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2023-04-01", "journal":
      {"name": "2023 International Conference on Mobile Internet, Cloud Computing
      and Information Security (MICCIS)", "pages": "86-94"}, "citationStyles": {"bibtex":
      "@Conference{Zhang2023ANA,\n author = {Zhiwei Zhang and Qijun Pan and Jun Zhou
      and Chen Zhang},\n booktitle = {2023 International Conference on Mobile Internet,
      Cloud Computing and Information Security (MICCIS)},\n journal = {2023 International
      Conference on Mobile Internet, Cloud Computing and Information Security (MICCIS)},\n
      pages = {86-94},\n title = {A Node Agent for Fast and Safe Execution of Computing
      Tasks under Kubernetes},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2239414724",
      "name": "Zhiwei Zhang"}, {"authorId": "2239278247", "name": "Qijun Pan"}, {"authorId":
      "2239390672", "name": "Jun Zhou"}, {"authorId": "2239428130", "name": "Chen
      Zhang"}]}, {"paperId": "280d4926ec2cb5413e000434da9cd63aa0a4fc02", "externalIds":
      {"DBLP": "journals/corr/abs-1912-11963", "MAG": "2997392935", "ArXiv": "1912.11963",
      "CorpusId": 209500590}, "corpusId": 209500590, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/280d4926ec2cb5413e000434da9cd63aa0a4fc02",
      "title": "URSA: Precise Capacity Planning and Contention-aware Scheduling for
      Public Clouds", "abstract": "Database platform-as-a-service (dbPaaS) is developing
      rapidly and a large number of databases have been migrated to run on the Clouds
      for the low cost and flexibility. Emerging Clouds rely on the tenants to provide
      the resource specification for their database workloads. However, they tend
      to over-estimate the resource requirement of their databases, resulting in the
      unnecessarily high cost and low Cloud utilization. A methodology that automatically
      suggests the \"just-enough\" resource specification that fulfills the performance
      requirement of every database workload is profitable. To this end, we propose
      URSA, a capacity planning and workload scheduling system for dbPaaS Clouds.
      USRA is comprised by an online capacity planner, a performance interference
      estimator, and a contention-aware scheduling engine. The capacity planner identifies
      the most cost-efficient resource specification for a database workload to achieve
      the required performance online. The interference estimator quantifies the pressure
      on the shared resource and the sensitivity to the shared resource contention
      of each database workload. The scheduling engine schedules the workloads across
      Cloud nodes carefully to eliminate unfair performance interference between the
      co-located workloads. Our real system experimental results show that URSA reduces
      27.5% of CPU usage and 53.4% of memory usage for database workloads while satisfying
      their performance requirements. Meanwhile, URSA reduces the performance unfairness
      between the co-located workloads by 42.8% compared with the Kubernetes.", "venue":
      "arXiv.org", "year": 2019, "referenceCount": 29, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-12-27", "journal": {"name": "ArXiv",
      "volume": "abs/1912.11963"}, "citationStyles": {"bibtex": "@Article{Zheng2019URSAPC,\n
      author = {Ningxin Zheng and Quan Chen and Yong Yang and Wei Zhang and Jin Li
      and Wenli Zheng and M. Guo},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n
      title = {URSA: Precise Capacity Planning and Contention-aware Scheduling for
      Public Clouds},\n volume = {abs/1912.11963},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "66887984", "name": "Ningxin Zheng"}, {"authorId": "1596812259",
      "name": "Quan Chen"}, {"authorId": "2146265562", "name": "Yong Yang"}, {"authorId":
      "39340691", "name": "Wei Zhang"}, {"authorId": "2118398501", "name": "Jin Li"},
      {"authorId": "50010573", "name": "Wenli Zheng"}, {"authorId": "1697293", "name":
      "M. Guo"}]}, {"paperId": "281c20ec7853490c7854fdf1762f9564a30e88e2", "externalIds":
      {"MAG": "2988990131", "DOI": "10.1088/1742-6596/1325/1/012018", "CorpusId":
      209056584}, "corpusId": 209056584, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/281c20ec7853490c7854fdf1762f9564a30e88e2",
      "title": "Design and Implementation of Dynamic Expansion of Vehicle Real-Time
      Data Transmission Architecture Based on Kubernetes", "abstract": "In order to
      deal with the overload problem of smart car server, a dynamic capacity expansion
      technology of vehicle real-time data transmission architecture based on Kubernetes
      cluster is proposed. The technology uses Docker to split the architecture into
      multiple micro-services, and uses the HPA feature of Kubernetes to periodically
      monitor server CPU resource utilization, trigger expansion rules, and automate
      the increase and decrease of nodes to achieve capacity expansion. It has been
      proved by experiments that the dynamic expansion technology of the real-time
      data transmission architecture based on Kubernetes can realize the dynamic expansion
      of the architecture. It solves a series of problems caused by server service
      overload caused by the sudden increase of data sent by the car in a short period
      of time, and ensures the stability of the service.", "venue": "Journal of Physics:
      Conference Series", "year": 2019, "referenceCount": 14, "citationCount": 2,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://iopscience.iop.org/article/10.1088/1742-6596/1325/1/012018/pdf", "status":
      "GOLD"}, "fieldsOfStudy": ["Computer Science", "Physics"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Physics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2019-10-01", "journal": {"name": "Journal
      of Physics: Conference Series", "volume": "1325"}, "citationStyles": {"bibtex":
      "@Conference{Chen2019DesignAI,\n author = {Chen Chen and Jianjun Cai and N.
      Ren and Kunhao Li},\n booktitle = {Journal of Physics: Conference Series},\n
      journal = {Journal of Physics: Conference Series},\n title = {Design and Implementation
      of Dynamic Expansion of Vehicle Real-Time Data Transmission Architecture Based
      on Kubernetes},\n volume = {1325},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2127379185", "name": "Chen Chen"}, {"authorId": "2115669006", "name": "Jianjun
      Cai"}, {"authorId": "1453607445", "name": "N. Ren"}, {"authorId": "2115467903",
      "name": "Kunhao Li"}]}, {"paperId": "285854d22f28953eaa8ba30b5415ee3f6337ba84",
      "externalIds": {"DBLP": "conf/codaspy/FarasatRK23", "DOI": "10.1145/3577923.3585049",
      "CorpusId": 258217183}, "corpusId": 258217183, "publicationVenue": {"id": "ebc05d3e-7ef6-450a-9496-e9f4f7118d49",
      "name": "Conference on Data and Application Security and Privacy", "type": "conference",
      "alternate_names": ["CODASPY", "Conf Data Appl Secur Priv"], "url": "http://www.codaspy.org/"},
      "url": "https://www.semanticscholar.org/paper/285854d22f28953eaa8ba30b5415ee3f6337ba84",
      "title": "Securing Kubernetes Pods communicating over Weave Net through eBPF/XDP
      from DDoS attacks", "abstract": "Kubernetes, a container orchestration tool,
      can be vulnerable to many network threats. Distributed Denial-of-Service (DDoS)
      attack causes Kubernetes nodes and Pods/Containers inaccessible to users. In
      this work, we highlight that extended Berkeley Packet Filter/eXpress Data Path
      (eBPF/XDP) can protect Kubernetes Weave Net Pods from DDoS attacks by loading
      the XDP_DROP/FILTER program over the Weave Net VXLAN interface.", "venue": "Conference
      on Data and Application Security and Privacy", "year": 2023, "referenceCount":
      4, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2023-04-24",
      "journal": {"name": "Proceedings of the Thirteenth ACM Conference on Data and
      Application Security and Privacy"}, "citationStyles": {"bibtex": "@Article{Farasat2023SecuringKP,\n
      author = {Talaya Farasat and Muhammad Ahmad Rathore and JongWon Kim},\n booktitle
      = {Conference on Data and Application Security and Privacy},\n journal = {Proceedings
      of the Thirteenth ACM Conference on Data and Application Security and Privacy},\n
      title = {Securing Kubernetes Pods communicating over Weave Net through eBPF/XDP
      from DDoS attacks},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2036822744",
      "name": "Talaya Farasat"}, {"authorId": "50976714", "name": "Muhammad Ahmad
      Rathore"}, {"authorId": "2157129212", "name": "JongWon Kim"}]}, {"paperId":
      "289c7a9747a605c29d171628ac1f1b877e5d1dea", "externalIds": {"DOI": "10.1109/ICCST55948.2022.10040417",
      "CorpusId": 256876525}, "corpusId": 256876525, "publicationVenue": {"id": "aaa9c845-192a-4560-bcb5-aa56da10b9ff",
      "name": "International Carnahan Conference on Security Technology", "type":
      "conference", "alternate_names": ["ICCST", "Int Carnahan Conf Secur Technol"],
      "url": "http://sites.ieee.org/iccst/"}, "url": "https://www.semanticscholar.org/paper/289c7a9747a605c29d171628ac1f1b877e5d1dea",
      "title": "Predictive Disk Space Analysis For Microservice Based Applications
      On Public Cloud", "abstract": "Predictive analysis of time-series data is of
      tremen- dous importance to any organization. It is used in many scenarios like
      capacity and resource planning, especially in cloud-based infrastructure where
      resources have cost. Predictive analysis of resources such as disks allows users
      or administrators to optimize costs by predicting future values to manage the
      resources better. The system in the proposed paper describes each stage for
      the predictive analysis of Disk space usage, from Data generation using open-source
      tools to extracting data from these tools and preparing a model to predict the
      future values for a Kubernetes Based application.", "venue": "International
      Carnahan Conference on Security Technology", "year": 2022, "referenceCount":
      18, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-11-09",
      "journal": {"name": "2022 1st International Conference on Computational Science
      and Technology (ICCST)", "pages": "302-306"}, "citationStyles": {"bibtex": "@Conference{Mulay2022PredictiveDS,\n
      author = {Shivam Mulay and S. Ghosh},\n booktitle = {International Carnahan
      Conference on Security Technology},\n journal = {2022 1st International Conference
      on Computational Science and Technology (ICCST)},\n pages = {302-306},\n title
      = {Predictive Disk Space Analysis For Microservice Based Applications On Public
      Cloud},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2151027485", "name":
      "Shivam Mulay"}, {"authorId": "1753720833", "name": "S. Ghosh"}]}, {"paperId":
      "28a97ccd99d76913180d7f9a8c9c7da48a49893f", "externalIds": {"MAG": "3082658654",
      "DOI": "10.1109/Indo-TaiwanICAN48429.2020.9181343", "CorpusId": 221474563},
      "corpusId": 221474563, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/28a97ccd99d76913180d7f9a8c9c7da48a49893f",
      "title": "An Implementation of Face Recognition with Deep Learning based on
      a Container-Orchestration Platform", "abstract": "As a lightweight alternative
      to a virtual machine, a container runs applications only with the necessary
      environmental variables, libraries, etc. Moreover, many more containers can
      be run on the same computer compared to traditional VMs, which take up a lot
      of computing resources. Currently, Docker container and Kubernetes (K8s), which
      is a container-orchestration platform, are very popular tools. In addition,
      K8s is a high availability (HA) system with many features that can provide containers
      to implement more applications. In this project, a face recognition application
      is implemented with deep learning on Kubeflow, which is a machine learning platform
      running on K8s. Also, the deep learning method output features instead of classifications.
      This method computes the distance between two images with Triplet loss function
      and Euclidean distance. K8s runs on the server as a private cloud, on which
      our face recognition application runs.", "venue": "2020 Indo \u2013 Taiwan 2nd
      International Conference on Computing, Analytics and Networks (Indo-Taiwan ICAN)",
      "year": 2020, "referenceCount": 19, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2020-02-01", "journal": {"name": "2020 Indo
      \u2013 Taiwan 2nd International Conference on Computing, Analytics and Networks
      (Indo-Taiwan ICAN)", "pages": "325-329"}, "citationStyles": {"bibtex": "@Conference{Wong2020AnIO,\n
      author = {Winggun Wong and Cheng-Sheng Lee},\n booktitle = {2020 Indo \u2013
      Taiwan 2nd International Conference on Computing, Analytics and Networks (Indo-Taiwan
      ICAN)},\n journal = {2020 Indo \u2013 Taiwan 2nd International Conference on
      Computing, Analytics and Networks (Indo-Taiwan ICAN)},\n pages = {325-329},\n
      title = {An Implementation of Face Recognition with Deep Learning based on a
      Container-Orchestration Platform},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "2093343174", "name": "Winggun Wong"}, {"authorId": "2115294519", "name": "Cheng-Sheng
      Lee"}]}, {"paperId": "28b6f3033106c6d62866c68ab88aee0ff8137d1f", "externalIds":
      {"MAG": "3082104242", "DBLP": "conf/caise/WursterBHLS20", "DOI": "10.1007/978-3-030-58135-0_12",
      "CorpusId": 221713836}, "corpusId": 221713836, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/28b6f3033106c6d62866c68ab88aee0ff8137d1f",
      "title": "TOSCA Lightning: An Integrated Toolchain for Transforming TOSCA Light
      into Production-Ready Deployment Technologies", "abstract": null, "venue": "CAiSE
      Forum", "year": 2020, "referenceCount": 23, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"pages": "138-146"}, "citationStyles": {"bibtex": "@Article{Wurster2020TOSCALA,\n
      author = {Michael Wurster and Uwe Breitenb\u00fccher and Lukas Harzenetter and
      F. Leymann and J. Soldani},\n booktitle = {CAiSE Forum},\n pages = {138-146},\n
      title = {TOSCA Lightning: An Integrated Toolchain for Transforming TOSCA Light
      into Production-Ready Deployment Technologies},\n year = {2020}\n}\n"}, "authors":
      [{"authorId": "144749049", "name": "Michael Wurster"}, {"authorId": "2168607",
      "name": "Uwe Breitenb\u00fccher"}, {"authorId": "51517939", "name": "Lukas Harzenetter"},
      {"authorId": "1688415", "name": "F. Leymann"}, {"authorId": "2265546", "name":
      "J. Soldani"}]}, {"paperId": "28c2a186af9137c829d1bfa1723f386540df19fd", "externalIds":
      {"DBLP": "conf/coinco/Warke0ELS018", "MAG": "2900739159", "DOI": "10.1109/CIC.2018.00046",
      "CorpusId": 53765485}, "corpusId": 53765485, "publicationVenue": {"id": "cb55f70b-f8f9-4ae0-8b67-0f0105672b4b",
      "name": "International Conference on Communications in Computing", "type": "conference",
      "alternate_names": ["Color Imaging Conf", "International Conference on Collaboration
      and Internet Computing", "CIC", "CDMA Int Conf", "CDMA International Conference",
      "Int Conf Commun Comput", "Int Conf Collab Internet Comput", "Color Imaging
      Conference"], "url": "http://www.imaging.org/"}, "url": "https://www.semanticscholar.org/paper/28c2a186af9137c829d1bfa1723f386540df19fd",
      "title": "Storage Service Orchestration with Container Elasticity", "abstract":
      "The advent, popularity and widespread adoption of Cloud-Native architectures
      and platforms have revolutionized the way in which applications are being built
      and deployed in the Cloud. Applications designed for Cloud-Native architectures
      are being migrated from traditional monolithic approach to a Microservices architecture,
      in which an application is broken down into a collection of small, independent
      and collaborative services. These applications are dynamically scheduled and
      managed by Cloud Native platforms. Container Orchestrators (CO), such as Docker,
      Kubernetes, Cloud Foundry, enable the deployment and management of stateless
      and scalable microservices. However, as more and more stateful applications
      and workloads are being deployed in Cloud-Native platforms, these platforms
      must support the workloads by providing persistent storage to the microservices
      so that data can be protected and accessed beyond the lifecycle of an ephemeral
      container. In this paper, we present the design and development of a Cloud-Native
      storage service orchestration platform by leveraging capabilities of the IBM
      Ubiquity framework. Our ultimate goal is to provide persistent storage across
      different container orchestrators and supporting multi-protocol access for Volume
      management within the storage systems, such as SSH, REST, GPFS native protocol
      using CLI, NFS and Object. We demonstrate the effectiveness of the storage service
      orchestration development vision by providing a prototype implementation using
      Docker and General Parallel Filesystem (GPFS), aiming to provide shared storage
      volumes to containers orchestrated by Docker. As the volume and variety of microservices
      continue to grow and to dominate the development and deployments of Cloud applications,
      we conjecture that the proposed storage service orchestration framework will
      be a critical enabling building block for supporting elastic, reliable and effective
      microservice architectures in Cloud datacenters.", "venue": "International Conference
      on Communications in Computing", "year": 2018, "referenceCount": 10, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2018-10-01", "journal":
      {"name": "2018 IEEE 4th International Conference on Collaboration and Internet
      Computing (CIC)", "pages": "283-292"}, "citationStyles": {"bibtex": "@Article{Warke2018StorageSO,\n
      author = {Amit Warke and Mohamed Mohamed and R. Engel and Heiko Ludwig and W.
      Sawdon and Ling Liu},\n booktitle = {International Conference on Communications
      in Computing},\n journal = {2018 IEEE 4th International Conference on Collaboration
      and Internet Computing (CIC)},\n pages = {283-292},\n title = {Storage Service
      Orchestration with Container Elasticity},\n year = {2018}\n}\n"}, "authors":
      [{"authorId": "26975157", "name": "Amit Warke"}, {"authorId": "144103054", "name":
      "Mohamed Mohamed"}, {"authorId": "3802548", "name": "R. Engel"}, {"authorId":
      "144854947", "name": "Heiko Ludwig"}, {"authorId": "52039006", "name": "W. Sawdon"},
      {"authorId": "46458150", "name": "Ling Liu"}]}, {"paperId": "293ea3c3ed3a22c5407c05c2c4cfaca659501058",
      "externalIds": {"DBLP": "journals/jicts/Rostami23", "DOI": "10.13052/jicts2245-800x.1132",
      "CorpusId": 261800733}, "corpusId": 261800733, "publicationVenue": {"id": "06596b4a-b63a-4c92-a308-0574b8ec9d2c",
      "name": "Journal of ICT Standardization", "type": "journal", "alternate_names":
      ["J ICT Stand"], "issn": "2246-0853", "url": "https://www.riverpublishers.com/journal.php?j=JICTS/3/2"},
      "url": "https://www.semanticscholar.org/paper/293ea3c3ed3a22c5407c05c2c4cfaca659501058",
      "title": "Role-based Access Control (RBAC) Authorization in Kubernetes", "abstract":
      "In computer systems security, role-based access control (RBAC) or role-based
      security is an approach to restricting system access to authorized users [1].
      This paper will describe how the Kubernetes RBAC authorization sub-system works,
      how to leverage it to secure access to resources in the cluster, and how to
      validate the set policies through impersonation to ensure users and service
      accounts are granted the intended rights.", "venue": "Journal of ICT Standardization",
      "year": 2023, "referenceCount": 9, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://journals.riverpublishers.com/index.php/JICTS/article/download/18185/18729",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-09-11", "journal": {"name": "J. ICT Stand.", "pages":
      "237-260", "volume": "11"}, "citationStyles": {"bibtex": "@Article{Rostami2023RolebasedAC,\n
      author = {Garsha Rostami},\n booktitle = {Journal of ICT Standardization},\n
      journal = {J. ICT Stand.},\n pages = {237-260},\n title = {Role-based Access
      Control (RBAC) Authorization in Kubernetes},\n volume = {11},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2240225926", "name": "Garsha Rostami"}]}, {"paperId":
      "294d2397e67034e0d5f2ca93d4e610d047fd42c8", "externalIds": {"DBLP": "journals/corr/abs-2310-08247",
      "ArXiv": "2310.08247", "DOI": "10.48550/arXiv.2310.08247", "CorpusId": 263909286},
      "corpusId": 263909286, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/294d2397e67034e0d5f2ca93d4e610d047fd42c8",
      "title": "Leveraging DevOps for Scientific Computing", "abstract": "Critical
      goals of scientific computing are to increase scientific rigor, reproducibility,
      and transparency while keeping up with ever-increasing computational demands.
      This work presents an integrated framework well-suited for data processing and
      analysis spanning individual, on-premises, and cloud environments. This framework
      leverages three well-established DevOps tools: 1) Git repositories linked to
      2) CI/CD engines operating on 3) containers. It supports the full life-cycle
      of scientific data workflows with minimal friction between stages--including
      solutions for researchers who generate data. This is achieved by leveraging
      a single container that supports local, interactive user sessions and deployment
      in HPC or Kubernetes clusters. Combined with Git repositories integrated with
      CI/CD, this approach enables decentralized data pipelines across multiple, arbitrary
      computational environments. This framework has been successfully deployed and
      validated within our research group, spanning experimental acquisition systems
      and computational clusters with open-source, purpose-built GitLab CI/CD executors
      for slurm and Google Kubernetes Engine Autopilot. Taken together, this framework
      can increase the rigor, reproducibility, and transparency of compute-dependent
      scientific research.", "venue": "arXiv.org", "year": 2023, "referenceCount":
      43, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/2310.08247", "status": "CLOSED"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-12", "journal":
      {"name": "ArXiv", "volume": "abs/2310.08247"}, "citationStyles": {"bibtex":
      "@Article{Nuyujukian2023LeveragingDF,\n author = {Paul Nuyujukian},\n booktitle
      = {arXiv.org},\n journal = {ArXiv},\n title = {Leveraging DevOps for Scientific
      Computing},\n volume = {abs/2310.08247},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2257344288", "name": "Paul Nuyujukian"}]}, {"paperId": "29a140c81795fbf2f5a032dd0a203283d777ddc1",
      "externalIds": {"DBLP": "conf/sii/RehmanKKFDLV19", "MAG": "2942934107", "DOI":
      "10.1109/SII.2019.8700423", "CorpusId": 139108641}, "corpusId": 139108641, "publicationVenue":
      {"id": "dc7bc1cd-de58-4eb5-917f-e5b0560fe0c0", "name": "IEEE/SICE International
      Symposium on System Integration", "type": "conference", "alternate_names": ["SII",
      "IEEE/SICE Int Symp Syst Integr"]}, "url": "https://www.semanticscholar.org/paper/29a140c81795fbf2f5a032dd0a203283d777ddc1",
      "title": "A Cloud-based Development Environment using HLA and Kubernetes for
      the Co-simulation of a Corporate Electric Vehicle Fleet", "abstract": "Decision
      makers in modern enterprises need to assess so-called \"what-if\" scenarios
      and select the best of breed among the available alternatives. Although simulation
      plays a pivotal role in niche cases, it is an undervalued tool in the broader
      enterprise context. Its proliferation has not kept up with recent technological
      advances such as big data, cloud computing, graphics processing units clusters,
      and cross-layer enterprise integration. Based on such new developments, new
      capabilities can be realized that go beyond single-purpose simulations, and
      are an excellent fit for studying heterogeneous, independently developed System-of-Systems
      (SoS), in a multitude of scenarios in complex and dynamic enterprise environments.
      Co-simulation efforts can provide new insights on the enterprise operations
      including compelling visualizations of possible simulated alternatives, thereby
      assisting decision makers in their strategy selection. To move beyond niche
      applications, however, simulated systems need to integrate in real-time, a continually
      increasing amount of data (both real and simulated), stemming from various domains
      and their systems. This work presents a way to achieve such distributed simulations
      in modern enterprise environments, based on HighLevel Architecture (HLA), as
      well as their coordination via the Run-Time Infrastructure (RTI). In an example
      scenario featuring a co-simulation of a corporate electric vehicle fleet, it
      is shown how various software subsystems interact to enable business users to
      visually investigate scenarios, as well as how such a system can be deployed
      and operated within a modern enterprise IT landscape.", "venue": "IEEE/SICE
      International Symposium on System Integration", "year": 2019, "referenceCount":
      20, "citationCount": 6, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Engineering"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Engineering", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2019-01-01", "journal":
      {"name": "2019 IEEE/SICE International Symposium on System Integration (SII)",
      "pages": "47-54"}, "citationStyles": {"bibtex": "@Article{Rehman2019ACD,\n author
      = {K. Rehman and O. Kipouridis and S. Karnouskos and Oliver Frendo and Helge
      Dickel and Jonas Lipps and Nemrude Verzano},\n booktitle = {IEEE/SICE International
      Symposium on System Integration},\n journal = {2019 IEEE/SICE International
      Symposium on System Integration (SII)},\n pages = {47-54},\n title = {A Cloud-based
      Development Environment using HLA and Kubernetes for the Co-simulation of a
      Corporate Electric Vehicle Fleet},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "47399250", "name": "K. Rehman"}, {"authorId": "3001371", "name": "O. Kipouridis"},
      {"authorId": "1766216", "name": "S. Karnouskos"}, {"authorId": "80192654", "name":
      "Oliver Frendo"}, {"authorId": "116665226", "name": "Helge Dickel"}, {"authorId":
      "82797272", "name": "Jonas Lipps"}, {"authorId": "29378436", "name": "Nemrude
      Verzano"}]}, {"paperId": "29f6b4ced42b70c625efe77a408f0dcc04673f70", "externalIds":
      {"CorpusId": 251839738}, "corpusId": 251839738, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/29f6b4ced42b70c625efe77a408f0dcc04673f70",
      "title": "University of Birmingham PhenoMeNal", "abstract": "Background: Metabolomics
      is the comprehensive study of a multitude of small molecules to gain insight
      into an organism\u2019s metabolism. The research field is dynamic and expanding
      with applications across biomedical, biotechnological, and many other applied
      biological domains. Its computationally intensive nature has driven requirements
      for open data formats, data repositories, and data analysis tools. However,
      the rapid progress has resulted in a mosaic of independent, and sometimes incompatible,
      analysis methods that are difficult to connect into a useful and complete data
      analysis solution. Findings: PhenoMeNal (Phenome and Metabolome aNalysis) is
      an advanced and complete solution to set up Infrastructure-as-a-Service (IaaS)
      that brings workflow-oriented, interoperable metabolomics data analysis platforms
      into the cloud. PhenoMeNal seamlessly integrates a wide array of existing open-source
      tools that are tested and packaged as Docker containers through the project\u2019s
      continuous integration process and deployed based on a kubernetes orchestration
      framework. It also provides a number of standardized, automated, and published
      analysis workflows in the user interfaces Galaxy, Jupyter, Luigi, and Pachyderm.
      Conclusions: PhenoMeNal constitutes a keystone solution in cloud e-infrastructures
      available for metabolomics. PhenoMeNal is a unique and complete solution for
      setting up cloud e-infrastructures through easy-to-use web interfaces that can
      be scaled to any custom public and private cloud environment. By harmonizing
      and automating software installation and configuration and through ready-to-use
      scientific workflow user interfaces, PhenoMeNal has succeeded in providing scientists
      with workflow-driven, reproducible, and shareable metabolomics data analysis
      platforms that are interfaced through standard data formats, representative
      datasets, versioned, and have been tested for reproducibility and interoperability.
      The elastic implementation of PhenoMeNal further allows easy adaptation of the
      infrastructure to other application areas and \u2018omics research domains.",
      "venue": "", "year": 2019, "referenceCount": 97, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Biology", "source": "s2-fos-model"}, {"category": "Chemistry",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Peters2019UniversityOB,\n
      author = {Kristian Peters and James Bradbury and S. Bergmann and Marco Capuccini
      and Marta Cascante and P. D. Atauri and M. Timothy and D. Ebbels and C. Foguet
      and R. Glen and Alejandra N. Gonz\u00e1lez-Beltr\u00e1n and U. G\u00fcnther
      and E. Handakas and T. Hankemeier and Kenneth Haug and Stephanie Herman and
      P. Holub and Massimiliano Izzo and D. Jacob and David Johnson and F. Jourdan
      and Namrata Kale and I. Karaman and Bita Khalili and P. Khonsari and K. Kultima
      and Samuel Lampa and Anders Larsson and C. Ludwig and P. Moreno and Steffen
      Neumann and Jon and Ander Novella and C. O\u2019Donovan and Jake T. M. Pearce
      and Alina Peluso and Marco Enrico Piras and L. Pireddu and Michelle and A. C.
      Reed and P. Rocca-Serra and Pierrick Roger and A. Rosato and R. Rueedi and Christoph
      Ruttkies and Noureddin M. Sadawi and R. Salek and Susanna-Assunta Sansone and
      V. Selivanov and O. Spjuth and Daniel Schober and Etienne and A. Th\u00e9venot
      and M. Tomasoni and M. Rijswijk and M. Van and Vliet and M. Viant and Ralf J.
      M. Weber and G. Zanetti and C. Steinbeck},\n title = {University of Birmingham
      PhenoMeNal},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2018730053",
      "name": "Kristian Peters"}, {"authorId": "47244844", "name": "James Bradbury"},
      {"authorId": "145671573", "name": "S. Bergmann"}, {"authorId": "2885797", "name":
      "Marco Capuccini"}, {"authorId": "2201003642", "name": "Marta Cascante"}, {"authorId":
      "3006824", "name": "P. D. Atauri"}, {"authorId": "145880228", "name": "M. Timothy"},
      {"authorId": "87020634", "name": "D. Ebbels"}, {"authorId": "8054715", "name":
      "C. Foguet"}, {"authorId": "122560801", "name": "R. Glen"}, {"authorId": "1401553965",
      "name": "Alejandra N. Gonz\u00e1lez-Beltr\u00e1n"}, {"authorId": "40386538",
      "name": "U. G\u00fcnther"}, {"authorId": "13805311", "name": "E. Handakas"},
      {"authorId": "3255958", "name": "T. Hankemeier"}, {"authorId": "26976237", "name":
      "Kenneth Haug"}, {"authorId": "38441575", "name": "Stephanie Herman"}, {"authorId":
      "153849713", "name": "P. Holub"}, {"authorId": "37650929", "name": "Massimiliano
      Izzo"}, {"authorId": "144534566", "name": "D. Jacob"}, {"authorId": "2150446362",
      "name": "David Johnson"}, {"authorId": "34833477", "name": "F. Jourdan"}, {"authorId":
      "144866363", "name": "Namrata Kale"}, {"authorId": "49026919", "name": "I. Karaman"},
      {"authorId": "49473668", "name": "Bita Khalili"}, {"authorId": "1397494714",
      "name": "P. Khonsari"}, {"authorId": "6590379", "name": "K. Kultima"}, {"authorId":
      "3124236", "name": "Samuel Lampa"}, {"authorId": "2070963974", "name": "Anders
      Larsson"}, {"authorId": "1689408", "name": "C. Ludwig"}, {"authorId": "47690379",
      "name": "P. Moreno"}, {"authorId": "2067089579", "name": "Steffen Neumann"},
      {"authorId": "2093883761", "name": "Jon"}, {"authorId": "2234246528", "name":
      "Ander Novella"}, {"authorId": "1389548621", "name": "C. O\u2019Donovan"}, {"authorId":
      "40255789", "name": "Jake T. M. Pearce"}, {"authorId": "52174192", "name": "Alina
      Peluso"}, {"authorId": "49628489", "name": "Marco Enrico Piras"}, {"authorId":
      "1689341", "name": "L. Pireddu"}, {"authorId": "2067384152", "name": "Michelle"},
      {"authorId": "2060225027", "name": "A. C. Reed"}, {"authorId": "1397958214",
      "name": "P. Rocca-Serra"}, {"authorId": "40222537", "name": "Pierrick Roger"},
      {"authorId": "2200761158", "name": "A. Rosato"}, {"authorId": "3373730", "name":
      "R. Rueedi"}, {"authorId": "3364826", "name": "Christoph Ruttkies"}, {"authorId":
      "3331007", "name": "Noureddin M. Sadawi"}, {"authorId": "2143634", "name": "R.
      Salek"}, {"authorId": "1760490", "name": "Susanna-Assunta Sansone"}, {"authorId":
      "33584277", "name": "V. Selivanov"}, {"authorId": "1776762", "name": "O. Spjuth"},
      {"authorId": "46413423", "name": "Daniel Schober"}, {"authorId": "2083263390",
      "name": "Etienne"}, {"authorId": "2076066714", "name": "A. Th\u00e9venot"},
      {"authorId": "2915530", "name": "M. Tomasoni"}, {"authorId": "41135618", "name":
      "M. Rijswijk"}, {"authorId": "3087207", "name": "M. Van"}, {"authorId": "2099652256",
      "name": "Vliet"}, {"authorId": "2313499", "name": "M. Viant"}, {"authorId":
      "2073815", "name": "Ralf J. M. Weber"}, {"authorId": "48867403", "name": "G.
      Zanetti"}, {"authorId": "1714873", "name": "C. Steinbeck"}]}, {"paperId": "2a47e5c4a6a335dc96a5169822eaa588ca4a7fb7",
      "externalIds": {"DBLP": "journals/corr/abs-2305-13933", "ArXiv": "2305.13933",
      "DOI": "10.48550/arXiv.2305.13933", "CorpusId": 258840873}, "corpusId": 258840873,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/2a47e5c4a6a335dc96a5169822eaa588ca4a7fb7",
      "title": "A comparison between traditional and Serverless technologies in a
      microservices setting", "abstract": "Serverless technologies, also known as
      FaaS (Function as a Service), are promoted as solutions that provide dynamic
      scalability, speed of development, cost-per-consumption model, and the ability
      to focus on the code while taking attention away from the infrastructure that
      is managed by the vendor. A microservices architecture is defined by the interaction
      and management of the application state by several independent services, each
      with a well-defined domain. When implementing software architectures based on
      microservices, there are several decisions to take about the technologies and
      the possibility of adopting Serverless. In this study, we implement 9 prototypes
      of the same microservice application using different technologies. Some architectural
      decisions and their impact on the performance and cost of the result obtained
      are analysed. We use Amazon Web Services and start with an application that
      uses a more traditional deployment environment (Kubernetes) and migration to
      a serverless architecture is performed by combining and analysing the impact
      (both cost and performance) of the use of different technologies such as AWS
      ECS Fargate, AWS Lambda, DynamoDB or DocumentDB.", "venue": "arXiv.org", "year":
      2023, "referenceCount": 16, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://arxiv.org/pdf/2305.13933",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-05-23", "journal": {"name": "ArXiv", "volume": "abs/2305.13933"},
      "citationStyles": {"bibtex": "@Article{Men''endez2023ACB,\n author = {Juan Mera
      Men''endez and Jose Emilio Labra Gayo and Enrique Riesgo Canal and Aitor Fern''andez},\n
      booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {A comparison between
      traditional and Serverless technologies in a microservices setting},\n volume
      = {abs/2305.13933},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2218408064",
      "name": "Juan Mera Men''endez"}, {"authorId": "1729679", "name": "Jose Emilio
      Labra Gayo"}, {"authorId": "2218421935", "name": "Enrique Riesgo Canal"}, {"authorId":
      "2186200863", "name": "Aitor Fern''andez"}]}, {"paperId": "2a6ec82796374f5d92602506d38e7362effbea4b",
      "externalIds": {"DBLP": "conf/ccgrid/HeckmannR23", "DOI": "10.1109/CCGridW59191.2023.00054",
      "CorpusId": 259978400}, "corpusId": 259978400, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/2a6ec82796374f5d92602506d38e7362effbea4b",
      "title": "Evaluating Kubernetes at the Edge for Fault Tolerant Multi-Camera
      Computer Vision Applications", "abstract": "The rise of AI-powered computer
      vision algorithms offers the possibility of visual sensing of the environment
      in IoT applications through the widespread use of low-cost video cameras. The
      need for low latency, bandwidth limitations, and privacy concerns associated
      with video data motivates the use of edge computing for computer vision applications.
      However, unlike cloud computing with almost unbounded resources, the edge is
      characterized by compute nodes of limited capacity and power budget. Additionally,
      fault tolerance is limited due to replication costs at the edge.In this poster,
      we present our initial work on evaluating the performance of an edge-specific
      version of Kubernetes on a Raspberry Pi4 cluster for multi-camera computer vision
      applications. Kubernetes enables automated deployment and management of containerized
      distributed applications to run at scale across a cluster of compute and storage
      nodes, while handling node failures. However, existing literature has not characterized
      the resource consumption and latency impact of Kubernetes for computer vision
      applications on realistic edge clusters. Our experimental results indicate that
      while Kubernetes can deliver fault tolerance at the edge, the choices made in
      the design of containers pods significantly affects the observed tail latency
      on a low power edge cluster.", "venue": "2023 IEEE/ACM 23rd International Symposium
      on Cluster, Cloud and Internet Computing Workshops (CCGridW)", "year": 2023,
      "referenceCount": 8, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-05-01", "journal": {"name": "2023
      IEEE/ACM 23rd International Symposium on Cluster, Cloud and Internet Computing
      Workshops (CCGridW)", "pages": "269-271"}, "citationStyles": {"bibtex": "@Article{Heckmann2023EvaluatingKA,\n
      author = {Owen Heckmann and A. Ravindran},\n booktitle = {2023 IEEE/ACM 23rd
      International Symposium on Cluster, Cloud and Internet Computing Workshops (CCGridW)},\n
      journal = {2023 IEEE/ACM 23rd International Symposium on Cluster, Cloud and
      Internet Computing Workshops (CCGridW)},\n pages = {269-271},\n title = {Evaluating
      Kubernetes at the Edge for Fault Tolerant Multi-Camera Computer Vision Applications},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2223957900", "name": "Owen Heckmann"},
      {"authorId": "145685135", "name": "A. Ravindran"}]}, {"paperId": "2a7396b670ac72d37afbf5da2925116d35a4030a",
      "externalIds": {"DOI": "10.1109/USBEREIT58508.2023.10158865", "CorpusId": 259280065},
      "corpusId": 259280065, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2a7396b670ac72d37afbf5da2925116d35a4030a",
      "title": "An Overview of Container Security in a Kubernetes Cluster", "abstract":
      "Recently, the use of container technology for applications has become commonplace.
      The advantages of this technology allow you to quickly develop and implement
      new services and applications in any programming language. The Kubernetes platform
      is the most popular container orchestration tool and is widely used for application
      development and deployment. Kubernetes not only allows you to deploy applications,
      but also performs functions such as load balancing, storage organization, secret
      storage and much more. However, experts pay attention to possible security problems
      when using Kubernetes. Attackers can use application containers in Kubernetes
      not only to obtain data processed by the application, but also to form an entry
      point into the company''s infrastructure for a subsequent attack on the company''s
      internal assets. The configuration requirements of the containerization platform
      cannot fully protect against malicious actions from containers, so it is necessary
      to supplement the protection system with tools that could track actions in the
      container in real time. This article will compare several Kubernetes real-time
      cluster security solutions and show their advantages and disadvantages.", "venue":
      "2023 IEEE Ural-Siberian Conference on Biomedical Engineering, Radioelectronics
      and Information Technology (USBEREIT)", "year": 2023, "referenceCount": 6, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference", "Review"], "publicationDate": "2023-05-15",
      "journal": {"name": "2023 IEEE Ural-Siberian Conference on Biomedical Engineering,
      Radioelectronics and Information Technology (USBEREIT)", "pages": "283-285"},
      "citationStyles": {"bibtex": "@Conference{German2023AnOO,\n author = {Kazenas
      German and O. Ponomareva},\n booktitle = {2023 IEEE Ural-Siberian Conference
      on Biomedical Engineering, Radioelectronics and Information Technology (USBEREIT)},\n
      journal = {2023 IEEE Ural-Siberian Conference on Biomedical Engineering, Radioelectronics
      and Information Technology (USBEREIT)},\n pages = {283-285},\n title = {An Overview
      of Container Security in a Kubernetes Cluster},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2220780891", "name": "Kazenas German"}, {"authorId": "49288094",
      "name": "O. Ponomareva"}]}, {"paperId": "2a822fec5a4bd7109557fd80af8cb69f160a935c",
      "externalIds": {"MAG": "3164590080", "PubMedCentral": "8198574", "DBLP": "journals/sensors/BotezCISD21",
      "DOI": "10.3390/s21113773", "CorpusId": 235300661, "PubMed": "34072301"}, "corpusId":
      235300661, "publicationVenue": {"id": "3dbf084c-ef47-4b74-9919-047b40704538",
      "name": "Italian National Conference on Sensors", "type": "conference", "alternate_names":
      ["SENSORS", "IEEE Sens", "Ital National Conf Sens", "IEEE Sensors", "Sensors"],
      "issn": "1424-8220", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/2a822fec5a4bd7109557fd80af8cb69f160a935c",
      "title": "SDN-Based Network Slicing Mechanism for a Scalable 4G/5G Core Network:
      A Kubernetes Approach \u2020", "abstract": "Managing the large volumes of IoT
      and M2M traffic requires the evaluation of the scalability and reliability for
      all the components in the end-to-end system. This includes connectivity, mobile
      network functions, and application or services receiving and processing the
      data from end devices. Firstly, this paper discusses the design of a containerized
      IoT and M2M application and the mechanisms for delivering automated scalability
      and high availability when deploying it in: (1) the edge using balenaCloud;
      (2) the Amazon Web Services cloud with EC2 instances; and (3) the dedicated
      Amazon Web Services IoT service. The experiments showed that there are no significant
      differences between edge and cloud deployments regarding resource consumption.
      Secondly, the solutions for scaling the 4G/5G network functions and mobile backhaul
      that provide the connectivity between devices and IoT/M2M applications are analyzed.
      In this case, the scalability and high availability of the 4G/5G components
      are provided by Kubernetes. The experiments showed that our proposed scaling
      algorithm for network slicing managed with SDN guarantees the necessary radio
      and network resources for end-to-end high availability.", "venue": "Italian
      National Conference on Sensors", "year": 2021, "referenceCount": 42, "citationCount":
      17, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.mdpi.com/1424-8220/21/11/3773/pdf", "status": "GOLD"}, "fieldsOfStudy":
      ["Computer Science", "Medicine"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Medicine", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-05-29", "journal":
      {"name": "Sensors (Basel, Switzerland)", "volume": "21"}, "citationStyles":
      {"bibtex": "@Article{Botez2021SDNBasedNS,\n author = {Robert Botez and J. Costa-Requena
      and I. Ivanciu and Vlad Strautiu and V. Dobrota},\n booktitle = {Italian National
      Conference on Sensors},\n journal = {Sensors (Basel, Switzerland)},\n title
      = {SDN-Based Network Slicing Mechanism for a Scalable 4G/5G Core Network: A
      Kubernetes Approach \u2020},\n volume = {21},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "1825768393", "name": "Robert Botez"}, {"authorId": "2003732",
      "name": "J. Costa-Requena"}, {"authorId": "2659896", "name": "I. Ivanciu"},
      {"authorId": "2044356034", "name": "Vlad Strautiu"}, {"authorId": "1680160",
      "name": "V. Dobrota"}]}, {"paperId": "2ac2edb9e9ce5c680f1ab5103adf1494ac274fe1",
      "externalIds": {"DBLP": "conf/icfnds/UngureanuVK19", "MAG": "2971363326", "DOI":
      "10.1145/3341325.3341992", "CorpusId": 202159285}, "corpusId": 202159285, "publicationVenue":
      {"id": "ff58b787-368a-48e9-a2a1-c03d0f0e2b4d", "name": "International Conference
      on Future Networks and Distributed Systems", "type": "conference", "alternate_names":
      ["ICFNDS", "Int Conf Future Netw Distrib Syst"]}, "url": "https://www.semanticscholar.org/paper/2ac2edb9e9ce5c680f1ab5103adf1494ac274fe1",
      "title": "Kubernetes cluster optimization using hybrid shared-state scheduling
      framework", "abstract": "This paper presents a novel approach for scheduling
      the workloads in a Kubernetes cluster, which are sometimes unequally distributed
      across the environment or deal with fluctuations in terms of resources utilization.
      Our proposal looks at a hybrid shared-state scheduling framework model that
      delegates most of the tasks to the distributed scheduling agents and has a scheduling
      correction function that mainly processes the unscheduled and unprioritized
      tasks. The scheduling decisions are made based on the entire cluster state which
      is synchronized and periodically updated by a master-state agent. By preserving
      the Kubernetes objects and concepts, we analyzed the proposed scheduler behavior
      under different scenarios, for instance we tested the failover/recovery behavior
      in a deployed Kubernetes cluster. Moreover, our findings show that in situations
      like collocation interference or priority preemption, other centralized scheduling
      frameworks integrated with the Kubernetes system might not perform accordingly
      due to high latency derived from the calculation of load spreading. In a wider
      context of the existing scheduling frameworks for container clusters, the distributed
      models lack of visibility at an upper-level scheduler might generate conflicting
      job placements. Therefore, our proposed scheduler encompasses the functionality
      of both centralized and distributed frameworks. By employing a synchronized
      cluster state, we ensure an optimal scheduling mechanism for the resources utilization.",
      "venue": "International Conference on Future Networks and Distributed Systems",
      "year": 2019, "referenceCount": 37, "citationCount": 9, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "https://repository.tudelft.nl/islandora/object/uuid%3A2cc41b6a-e9b4-4796-a893-6c1ec4136f15/datastream/OBJ/download",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2019-07-01",
      "journal": {"name": "Proceedings of the 3rd International Conference on Future
      Networks and Distributed Systems"}, "citationStyles": {"bibtex": "@Book{Ungureanu2019KubernetesCO,\n
      author = {O. Ungureanu and C. Vladeanu and R. Kooij},\n booktitle = {International
      Conference on Future Networks and Distributed Systems},\n journal = {Proceedings
      of the 3rd International Conference on Future Networks and Distributed Systems},\n
      title = {Kubernetes cluster optimization using hybrid shared-state scheduling
      framework},\n year = {2019}\n}\n"}, "authors": [{"authorId": "1393636932", "name":
      "O. Ungureanu"}, {"authorId": "1803825", "name": "C. Vladeanu"}, {"authorId":
      "3206413", "name": "R. Kooij"}]}, {"paperId": "2ad9d33bfa4fd192250615e506bfb34842c9444e",
      "externalIds": {"DBLP": "journals/ijgi/HuangZZM17", "MAG": "2595525276", "DOI":
      "10.3390/ijgi6030084", "CorpusId": 486524}, "corpusId": 486524, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/2ad9d33bfa4fd192250615e506bfb34842c9444e",
      "title": "Elastic Spatial Query Processing in OpenStack Cloud Computing Environment
      for Time-Constraint Data Analysis", "abstract": "Geospatial big data analysis
      (GBDA) is extremely significant for time-constraint applications such as disaster
      response. However, the time-constraint analysis is not yet a trivial task in
      the cloud computing environment. Spatial query processing (SQP) is typical computation-intensive
      and indispensable for GBDA, and the spatial range query, join query, and the
      nearest neighbor query algorithms are not scalable without using MapReduce-liked
      frameworks. Parallel SQP algorithms (PSQPAs) are trapped in screw-processing,
      which is a known issue in Geoscience. To satisfy time-constrained GBDA, we propose
      an elastic SQP approach in this paper. First, Spark is used to implement PSQPAs.
      Second, Kubernetes-managed Core Operation System (CoreOS) clusters provide self-healing
      Docker containers for running Spark clusters in the cloud. Spark-based PSQPAs
      are submitted to Docker containers, where Spark master instances reside. Finally,
      the horizontal pod auto-scaler (HPA) would scale-out and scale-in Docker containers
      for supporting on-demand computing resources. Combined with an auto-scaling
      group of virtual instances, HPA helps to find each of the five nearest neighbors
      for 46,139,532 query objects from 834,158 spatial data objects in less than
      300 s. The experiments conducted on an OpenStack cloud demonstrate that auto-scaling
      containers can satisfy time-constraint GBDA in clouds.", "venue": "ISPRS Int.
      J. Geo Inf.", "year": 2017, "referenceCount": 34, "citationCount": 10, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/2220-9964/6/3/84/pdf?version=1489584251",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2017-03-15", "journal": {"name": "ISPRS
      Int. J. Geo Inf.", "pages": "84", "volume": "6"}, "citationStyles": {"bibtex":
      "@Article{Huang2017ElasticSQ,\n author = {Wei Huang and Wen Zhang and Dongying
      Zhang and L. Meng},\n booktitle = {ISPRS Int. J. Geo Inf.},\n journal = {ISPRS
      Int. J. Geo Inf.},\n pages = {84},\n title = {Elastic Spatial Query Processing
      in OpenStack Cloud Computing Environment for Time-Constraint Data Analysis},\n
      volume = {6},\n year = {2017}\n}\n"}, "authors": [{"authorId": null, "name":
      "Wei Huang"}, {"authorId": "2145135308", "name": "Wen Zhang"}, {"authorId":
      "40009007", "name": "Dongying Zhang"}, {"authorId": "144744632", "name": "L.
      Meng"}]}, {"paperId": "2aec7bcb25b1fa04743bc6efc1b94fbb002cd3d8", "externalIds":
      {"MAG": "2980028019", "DBLP": "conf/camad/AstyrakakisNKSP19", "DOI": "10.1109/CAMAD.2019.8858164",
      "CorpusId": 204231340}, "corpusId": 204231340, "publicationVenue": {"id": "a03dd819-cbf4-4e9e-9fb7-2435d554824a",
      "name": "IEEE International Workshop on Computer Aided Modeling and Design of
      Communication Links and Networks", "type": "conference", "alternate_names":
      ["Comput Aided Model Des Commun Links Netw", "CAMAD", "IEEE Int Workshop Comput
      Aided Model Des Commun Links Netw", "Computer Aided Modeling and Design of Communication
      Links and Networks"], "url": "http://www.wikicfp.com/cfp/program?id=352"}, "url":
      "https://www.semanticscholar.org/paper/2aec7bcb25b1fa04743bc6efc1b94fbb002cd3d8",
      "title": "Cloud-Native Application Validation & Stress Testing through a Framework
      for Auto-Cluster Deployment", "abstract": "The proliferation of cloud-native
      applications (applications built specifically for the cloud) has taken cloud
      computing to another level, but it also revealed several issues such as the
      lack of automation and complexity of deployment. Extensive research on the subject,
      revealed many endeavors towards that end. Nonetheless, there are still issues
      to be solved, such as the cluster monitoring and the cluster deployment automation.
      Most of the existing solutions, are semi-automated or completely manual approaches,
      with some of them targeting specific cloud providers/vendors. Furthermore, there
      is also very limited research that tackles the validation of such applications.
      Untrusted developers, are able to develop and upload applications to marketplaces,
      without being audited and verified. Towards addressing the above-mentioned issues,
      this paper presents a novel, completely automated tool for deploying and monitoring
      a Kubernetes cluster over OpenStack. Additionally, we propose a tool that provides
      automatic validation of cloud-native applications. The evaluation of the proposed
      toolbox resulted in the deployment of Kubernetes clusters with remarkably low
      overall times, compared to other, manual approaches. The validation process
      lasted approximately 11 minutes for a containerized application with the Kubernetes
      Horizontal Pod Autoscaler (HPA) enabled and approximately 3 minutes for a containerized
      application with the Kubernetes HPA disabled. These overall times are relatively
      shorter than several other non-automated approaches. The afore-mentioned overall
      times, are analogous to the underlying hardware and network resources of our
      test-bed.", "venue": "IEEE International Workshop on Computer Aided Modeling
      and Design of Communication Links and Networks", "year": 2019, "referenceCount":
      22, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2019-09-01", "journal":
      {"name": "2019 IEEE 24th International Workshop on Computer Aided Modeling and
      Design of Communication Links and Networks (CAMAD)", "pages": "1-5"}, "citationStyles":
      {"bibtex": "@Article{Astyrakakis2019CloudNativeAV,\n author = {N. Astyrakakis
      and Y. Nikoloudakis and Ioannis Kefaloukos and C. Skianis and E. Pallis and
      E. Markakis},\n booktitle = {IEEE International Workshop on Computer Aided Modeling
      and Design of Communication Links and Networks},\n journal = {2019 IEEE 24th
      International Workshop on Computer Aided Modeling and Design of Communication
      Links and Networks (CAMAD)},\n pages = {1-5},\n title = {Cloud-Native Application
      Validation & Stress Testing through a Framework for Auto-Cluster Deployment},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "10028610", "name": "N. Astyrakakis"},
      {"authorId": "8567606", "name": "Y. Nikoloudakis"}, {"authorId": "1392707987",
      "name": "Ioannis Kefaloukos"}, {"authorId": "1806574", "name": "C. Skianis"},
      {"authorId": "145088714", "name": "E. Pallis"}, {"authorId": "1737120", "name":
      "E. Markakis"}]}, {"paperId": "2b179106fd776df712fa6444a2f0f682e016f159", "externalIds":
      {"DBLP": "conf/netsoft/CentofantiTMGC23", "DOI": "10.1109/NetSoft57336.2023.10175431",
      "CorpusId": 259860677}, "corpusId": 259860677, "publicationVenue": {"id": "8d051ed1-e691-49d8-8a57-d7b4a76c4352",
      "name": "IEEE Conference on Network Softwarization", "type": "conference", "alternate_names":
      ["IEEE Conf Netw Softwarization", "NetSoft"]}, "url": "https://www.semanticscholar.org/paper/2b179106fd776df712fa6444a2f0f682e016f159",
      "title": "Latency-Aware Kubernetes Scheduling for Microservices Orchestration
      at the Edge", "abstract": "Network and computing infrastructures are nowadays
      challenged to meet the increasingly stringent requirements of novel applications.
      One of the most critical aspect is optimizing the latency perceived by the end-user
      accessing the services. New network architectures offer a natural framework
      for the efficient orchestration of microservices. However, how to incorporate
      accurate latency metrics into orchestration decisions still represents an open
      challenge.In this work we propose a novel architectural approach to perform
      scheduling operations in Kubernetes environment. Existing approaches proposed
      the collection of network metrics, e.g. latency between nodes in the cluster,
      via purposely-built external measurement services deployed in the cluster. Compared
      to other approaches the proposed one: (i) collects performance metrics at the
      application layer instead of network layer; (ii) relies on latency measurements
      performed inside the service of interest instead of utilizing external measurement
      services; (iii) takes scheduling decisions based on effective end-user perceived
      latency instead of considering the latency between cluster nodes.We show the
      effectiveness of our approach by adopting an iterative discovery strategy able
      to dynamically determine which node operates with the lowest latency for the
      Kubernetes pod placement.", "venue": "IEEE Conference on Network Softwarization",
      "year": 2023, "referenceCount": 13, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2023-06-19", "journal": {"name": "2023 IEEE 9th International
      Conference on Network Softwarization (NetSoft)", "pages": "426-431"}, "citationStyles":
      {"bibtex": "@Article{Centofanti2023LatencyAwareKS,\n author = {C. Centofanti
      and Walter Tiberti and A. Marotta and F. Graziosi and D. Cassioli},\n booktitle
      = {IEEE Conference on Network Softwarization},\n journal = {2023 IEEE 9th International
      Conference on Network Softwarization (NetSoft)},\n pages = {426-431},\n title
      = {Latency-Aware Kubernetes Scheduling for Microservices Orchestration at the
      Edge},\n year = {2023}\n}\n"}, "authors": [{"authorId": "150945807", "name":
      "C. Centofanti"}, {"authorId": "1839438", "name": "Walter Tiberti"}, {"authorId":
      "143967595", "name": "A. Marotta"}, {"authorId": "2406722", "name": "F. Graziosi"},
      {"authorId": "20843589", "name": "D. Cassioli"}]}, {"paperId": "2b1be514b05a77286404f8885d29d6fd83e612ad",
      "externalIds": {"DBLP": "conf/comsnets/ChaurasiaNAG22", "DOI": "10.1109/COMSNETS53615.2022.9668432",
      "CorpusId": 245952260}, "corpusId": 245952260, "publicationVenue": {"id": "6afe5f5f-0d54-4e3a-aa07-ed4778cf1405",
      "name": "International Conference on Communication Systems and Networks", "type":
      "conference", "alternate_names": ["Communication Systems and Networks", "Int
      Conf Commun Syst Netw", "COMSNETS", "Commun Syst Netw"], "url": "http://www.comsnets.org/"},
      "url": "https://www.semanticscholar.org/paper/2b1be514b05a77286404f8885d29d6fd83e612ad",
      "title": "Automating the Selection of Container Orchestrators for Service Deployment",
      "abstract": "With the ubiquitous usage of cloud computing, the services are
      deployed as a virtual machine (VM) in cloud servers. However, VM based deployment
      often takes more amount of resources. In order to minimize the resource consumption
      of service deployment, container based lightweight virtualization is used. The
      management of the containers for deployment is a challenging problem as the
      container managers need to consume less amount of resources while also catering
      to the needs of the clients. In order to choose the right container manager,
      we have proposed an architecture based on the application and user needs. In
      the proposed architecture, we have a machine learning based decision engine
      to solve the problem. We have considered docker containers for experimentation.
      The experimental results show that the proposed system can select the proper
      container manager among docker compose based manager and Kubernetes.", "venue":
      "International Conference on Communication Systems and Networks", "year": 2022,
      "referenceCount": 19, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2022-01-04", "journal": {"name": "2022 14th
      International Conference on COMmunication Systems & NETworkS (COMSNETS)", "pages":
      "739-743"}, "citationStyles": {"bibtex": "@Article{Chaurasia2022AutomatingTS,\n
      author = {Pravar Chaurasia and S. Nath and S. K. Addya and S. Ghosh},\n booktitle
      = {International Conference on Communication Systems and Networks},\n journal
      = {2022 14th International Conference on COMmunication Systems & NETworkS (COMSNETS)},\n
      pages = {739-743},\n title = {Automating the Selection of Container Orchestrators
      for Service Deployment},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2149990119",
      "name": "Pravar Chaurasia"}, {"authorId": "3468518", "name": "S. Nath"}, {"authorId":
      "3377603", "name": "S. K. Addya"}, {"authorId": "49870581", "name": "S. Ghosh"}]},
      {"paperId": "2b2111340cb845e6d1e339d25bff2076faec0fc1", "externalIds": {"DOI":
      "10.11591/eei.v12i5.4240", "CorpusId": 259505034}, "corpusId": 259505034, "publicationVenue":
      {"id": "b827eced-82ea-44e6-b6d3-e8dfd4d8f000", "name": "Bulletin of Electrical
      Engineering and Informatics", "type": "journal", "alternate_names": ["Bull Electr
      Eng Informatics"], "issn": "2089-3191", "alternate_issns": ["2302-9285"], "url":
      "https://web.archive.org/web/20180818122233/http:/portalgaruda.org/portalgaruda/journals/index.php/EEI/issue/archive",
      "alternate_urls": ["http://beei.org/index.php/EEI"]}, "url": "https://www.semanticscholar.org/paper/2b2111340cb845e6d1e339d25bff2076faec0fc1",
      "title": "A case analysis for Kubernetes network security of financial service
      industry in Indonesia using zero trust model", "abstract": "In this study, a
      case analysis of Kubernetes application in an enterprise providing financial
      services in Indonesia is presented. It is implemented to improve their digital
      services-based application, developed using micro-services architecture. Kubernetes,
      an application container technology, has been applied in the enterprise providing
      financial services in Indonesia to improve their digital services-based application,
      developed using micro-services architecture concepts. Without incorporating
      any additional hardware, the new technology and services have been adopted to
      existing virtualized resources of the enterprise. An infrastructure design for
      secure Kubernetes networking was built and has been studied using the data center
      provided by the enterprise. This study focuses on two important aspects: network
      and security. As a security guideline, the network recommendations from VMware,
      Cisco, and Forrester\u2019s zero trust model were employed to design the infrastructure
      and were evaluated. The proposed secure network infrastructure design is successfully
      applied in the container networks using the zero trust requirement, the enterprise\u2019s
      requirements, and constraints. And we hope this study about network design security
      can be used and adaptable with existing network and reduce risk and disruption
      to the business caused by the network.", "venue": "Bulletin of Electrical Engineering
      and Informatics", "year": 2023, "referenceCount": 29, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://beei.org/index.php/EEI/article/download/4240/3427",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Business", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-01", "journal":
      {"name": "Bulletin of Electrical Engineering and Informatics"}, "citationStyles":
      {"bibtex": "@Article{Surantha2023ACA,\n author = {N. Surantha and Felix Ivan
      and Ritchie Chandra},\n booktitle = {Bulletin of Electrical Engineering and
      Informatics},\n journal = {Bulletin of Electrical Engineering and Informatics},\n
      title = {A case analysis for Kubernetes network security of financial service
      industry in Indonesia using zero trust model},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2510146", "name": "N. Surantha"}, {"authorId": "69056143", "name":
      "Felix Ivan"}, {"authorId": "2221538697", "name": "Ritchie Chandra"}]}, {"paperId":
      "2bb549d33ee5b74a272e89574595eeeb1fa6387f", "externalIds": {"DBLP": "conf/infocom/KelleyM19",
      "MAG": "2974967316", "DOI": "10.1109/INFCOMW.2019.8845081", "CorpusId": 202729429},
      "corpusId": 202729429, "publicationVenue": {"id": "be267cb9-6411-4126-8b64-4847025171ee",
      "name": "Conference on Computer Communications Workshops", "type": "conference",
      "alternate_names": ["INFOCOM WKSHPS", "Conf Comput Commun Work"]}, "url": "https://www.semanticscholar.org/paper/2bb549d33ee5b74a272e89574595eeeb1fa6387f",
      "title": "Rapid In-situ Profiling of Colocated Workloads", "abstract": "Kubernetes
      can increase server utilization by colocating multiple services on a server,
      but such colocation can cause costly service level violations. Workload characterizations
      describe how often a colocation causes service level violations under realistic
      request arrival patterns. They can be used to avoid poor colocation placements.
      This paper presents our design for a workload-characterization tool for colocated
      Kubernetes pods. Our design calls for replicating target pods, colocating them,
      duplicating their online requests and profiling the execution on both original
      and speculative placements. It uses statistical convergence tests to decide
      when workload characterization is complete. Statistical tests allow our design
      to trade accuracy and execution time. Users can speed up profiling by setting
      hard limits on the total time for workload characterization. We implemented
      our design starting with the in-situ characterization. We studied the overhead
      resulting from this on pods running Apache Lucene and Redis colocated with NAS
      Parallel Benchmarks. While the slowdown on Apache Lucene at low utilization
      was 35% on average across all colocation environments, the highest slowdown
      on any of the NAS benchmarks was 6%. Across all colocation environments, slowdown
      was negligible on Apache Lucene at high utilization and on Redis regardless
      of utilization.", "venue": "Conference on Computer Communications Workshops",
      "year": 2019, "referenceCount": 21, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2019-04-01", "journal":
      {"name": "IEEE INFOCOM 2019 - IEEE Conference on Computer Communications Workshops
      (INFOCOM WKSHPS)", "pages": "528-534"}, "citationStyles": {"bibtex": "@Article{Kelley2019RapidIP,\n
      author = {Jaimie Kelley and Nathaniel Morris},\n booktitle = {Conference on
      Computer Communications Workshops},\n journal = {IEEE INFOCOM 2019 - IEEE Conference
      on Computer Communications Workshops (INFOCOM WKSHPS)},\n pages = {528-534},\n
      title = {Rapid In-situ Profiling of Colocated Workloads},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "37970926", "name": "Jaimie Kelley"}, {"authorId":
      "34197724", "name": "Nathaniel Morris"}]}, {"paperId": "2bcb08d31684eade10ffe02226c35f0e44062b92",
      "externalIds": {"DBLP": "conf/wowmom/FogliGS22", "DOI": "10.1109/WoWMoM54355.2022.00067",
      "CorpusId": 251472528}, "corpusId": 251472528, "publicationVenue": {"id": "35f2d652-9310-4864-8080-f431035f28b3",
      "name": "IEEE International Symposium on a World of Wireless, Mobile and Multimedia
      Networks", "type": "conference", "alternate_names": ["World Wirel Mob Multimedia
      Netw", "World of Wireless, Mobile and Multimedia Networks", "IEEE Int Symp World
      Wirel Mob Multimedia Netw", "WoWMoM"], "url": "http://www.wikicfp.com/cfp/program?id=3145"},
      "url": "https://www.semanticscholar.org/paper/2bcb08d31684eade10ffe02226c35f0e44062b92",
      "title": "Joint Orchestration of Content-Based Message Management and Traffic
      Flow Steering in Industrial Backbones", "abstract": "The industrial internet
      of things has radically modified industrial environments, not only enabling
      novel services but also dramatically increasing the amount of generated traffic.
      Nowadays, a major concern within industrial plants is to support network-intensive
      services, such as real-time remote vibration monitoring of autonomous guided
      vehicles, while ensuring the prompt and reliable delivery of mission-critical
      safety-related messages among machines and the control room. To this purpose,
      we present a novel solution jointly orchestrating content-based message management
      and traffic flow steering: the former enables edge-powered in-network processing
      modules to process packet payloads as they traverse the industrial backbone,
      the latter supports dynamic (re)routing of traffic flows towards such processing
      modules. In particular, we exploit software-defined networking for flexible
      traffic flow (re)routing and Kubernetes for dynamic deployment on edge nodes
      of in-network processing modules for content-based message management. As demonstrated
      by performance results based on our working proof-of-concept prototype, our
      solution efficiently allows to manage industrial traffic flows in a coordinated
      fashion, by considering requirements of concurrently running industrial applications
      and the current state of the overall topology.", "venue": "IEEE International
      Symposium on a World of Wireless, Mobile and Multimedia Networks", "year": 2022,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2022-06-01", "journal": {"name": "2022
      IEEE 23rd International Symposium on a World of Wireless, Mobile and Multimedia
      Networks (WoWMoM)", "pages": "325-330"}, "citationStyles": {"bibtex": "@Article{Fogli2022JointOO,\n
      author = {Mattia Fogli and Carlo Giannelli and C. Stefanelli},\n booktitle =
      {IEEE International Symposium on a World of Wireless, Mobile and Multimedia
      Networks},\n journal = {2022 IEEE 23rd International Symposium on a World of
      Wireless, Mobile and Multimedia Networks (WoWMoM)},\n pages = {325-330},\n title
      = {Joint Orchestration of Content-Based Message Management and Traffic Flow
      Steering in Industrial Backbones},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2051754", "name": "Mattia Fogli"}, {"authorId": "145762168", "name": "Carlo
      Giannelli"}, {"authorId": "1754846", "name": "C. Stefanelli"}]}, {"paperId":
      "2bf097153c4353f7163e278ee3711e1631b8fe97", "externalIds": {"CorpusId": 19167663},
      "corpusId": 19167663, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2bf097153c4353f7163e278ee3711e1631b8fe97",
      "title": "Digital Forensics Compute Cluster ( DFORC 2 ) \u2013 A New High Speed
      Distributed Computing Capability for Digital Forensics", "abstract": "We have
      developed a new distributed computing capability, Digital Forensics Compute
      Cluster (DFORC2) to speed up the ingestion and processing of digital evidence.
      DFORC2 parallelizes evidence ingestion and file processing steps. It can be
      run on a standalone server or in the Amazon Web Services (AWS) cloud. When running
      in a cloud computing environment, its cluster resources can be dynamically scaled
      up or down using Kubernetes. DFORC2 is an open source project that uses Autopsy,
      Apache Spark and Kafka, and other open source software packages. It extends
      Autopsy\u2019s forensics capabilities to compute clusters and cloud architectures,
      so key digital forensics tasks can be accomplished simultaneously by a scalable
      array of cluster compute nodes. In this paper we compare the performance of
      a DFORC2 with a standalone version of Autopsy for evidentiary hard drives of
      different sizes.", "venue": "", "year": 2018, "referenceCount": 1, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Gonzales2018DigitalFC,\n
      author = {Dan Gonzales and Zev Winkelman and Trung Tran and R. Sanchez and Dulani
      Woods and John S. Hollywood},\n title = {Digital Forensics Compute Cluster (
      DFORC 2 ) \u2013 A New High Speed Distributed Computing Capability for Digital
      Forensics},\n year = {2018}\n}\n"}, "authors": [{"authorId": "153934841", "name":
      "Dan Gonzales"}, {"authorId": "14350161", "name": "Zev Winkelman"}, {"authorId":
      "2072580668", "name": "Trung Tran"}, {"authorId": "2652092", "name": "R. Sanchez"},
      {"authorId": "48132889", "name": "Dulani Woods"}, {"authorId": "28970990", "name":
      "John S. Hollywood"}]}, {"paperId": "2c2b24aa219973dcd69a9c04bc2da3bdd9cacc94",
      "externalIds": {"DBLP": "conf/icdcs/SenelMCFFM22", "DOI": "10.1109/ICDCS54860.2022.00141",
      "CorpusId": 252900056}, "corpusId": 252900056, "publicationVenue": {"id": "ffe5bb5c-04ed-488e-985d-d3a7b39542cf",
      "name": "IEEE International Conference on Distributed Computing Systems", "type":
      "conference", "alternate_names": ["International Conference on Distributed Computing
      Systems", "IEEE Int Conf Distrib Comput Syst", "Int Conf Device Circuit Syst",
      "ICDCS", "Int Conf Distrib Comput Syst", "International Conference on Devices,
      Circuits and Systems"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1000213/all-proceedings"},
      "url": "https://www.semanticscholar.org/paper/2c2b24aa219973dcd69a9c04bc2da3bdd9cacc94",
      "title": "Demo: EdgeNet, a Production Internet-Scale Container-Based Distributed
      System Testbed", "abstract": "The EdgeNet software is free, open-source, liberally
      licensed code that extends the Kubernetes container orchestration system to
      the edge cloud. We use this code to run the EdgeNet testbed, an internet-scale
      edge cloud for distributed systems researchers. This demonstration showcases
      three features of EdgeNet: its multitenancy model, its multi-provider aspect,
      and its geographically-based selective deployment capability. Multitenancy allows
      multiple teams to use the platform concurrently; being multi-provider, independent
      contributors can make nodes available to the platform; and selective deployment
      facilitates location-based placement of software. Under our guidance, demo participants
      invoke the Kubernetes command-line interface to use the testbed. In so doing,
      they get experience with the testbed, which they can continue to use afterwards.
      They also gain insight into how the demonstrated features are useful for edge
      cloud container deployment in general. Participants who volunteer to help EdgeNet
      nodes receive Odroid devices to host in their homes or workplaces.", "venue":
      "IEEE International Conference on Distributed Computing Systems", "year": 2022,
      "referenceCount": 7, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-07-01",
      "journal": {"name": "2022 IEEE 42nd International Conference on Distributed
      Computing Systems (ICDCS)", "pages": "1298-1301"}, "citationStyles": {"bibtex":
      "@Article{Senel2022DemoEA,\n author = {Berat Can Senel and Maxime Mouchet and
      Justin Cappos and T. Friedman and Olivier Fourmaux and R. McGeer},\n booktitle
      = {IEEE International Conference on Distributed Computing Systems},\n journal
      = {2022 IEEE 42nd International Conference on Distributed Computing Systems
      (ICDCS)},\n pages = {1298-1301},\n title = {Demo: EdgeNet, a Production Internet-Scale
      Container-Based Distributed System Testbed},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "27835405", "name": "Berat Can Senel"}, {"authorId": "51202031",
      "name": "Maxime Mouchet"}, {"authorId": "2030168", "name": "Justin Cappos"},
      {"authorId": "13744465", "name": "T. Friedman"}, {"authorId": "1683620", "name":
      "Olivier Fourmaux"}, {"authorId": "1772751", "name": "R. McGeer"}]}, {"paperId":
      "2c5857d8a44c99a90576f3fba522277299f6c198", "externalIds": {"MAG": "3099787824",
      "DOI": "10.1051/epjconf/202024506041", "CorpusId": 229220481}, "corpusId": 229220481,
      "publicationVenue": {"id": "f2cc63fa-90cb-413d-92ce-003d5244a1e8", "name": "EPJ
      Web of Conferences", "type": "journal", "alternate_names": ["EPJ Web Conf",
      "Epj Web of Conferences", "Epj Web Conf"], "issn": "2100-014X", "url": "https://web.archive.org/web/*/https:/www.epj-conferences.org/component/issues/",
      "alternate_urls": ["https://www.epj-conferences.org/", "https://web.archive.org/web/20161128151311/http:/www.epj-conferences.org:80/",
      "https://www.epj-conferences.org/component/issues/"]}, "url": "https://www.semanticscholar.org/paper/2c5857d8a44c99a90576f3fba522277299f6c198",
      "title": "Hybrid analysis pipelines in the REANA reproducible analysis platform",
      "abstract": "We introduce the feasibility of running hybrid analysis pipelines
      in the REANA reproducible analysis platform. The REANA platform allows researchers
      to specify declarative computational workflow steps describing the analysis
      process and to execute analysis workload on remote containerised compute clouds.
      We have designed an abstract job controller component permitting to execute
      different parts of the analysis workflow on different compute backends, such
      as HTCondor, Kubernetes and SLURM. We have prototyped the designed solution
      including the job execution, job monitoring, and input/output file staging mechanism
      between the various compute backends. We have tested the prototype using several
      particle physics model analyses. The present work introduces support for hybrid
      analysis workflows in the REANA reproducible analysis platform and paves the
      way towards studying underlying performance advantages and challenges associated
      with hybrid analysis patterns in complex particle physics data analyses.", "venue":
      "EPJ Web of Conferences", "year": 2020, "referenceCount": 7, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": null, "journal": {"name": "EPJ Web of Conferences"},
      "citationStyles": {"bibtex": "@Conference{Rodr\u00edguez2020HybridAP,\n author
      = {D. Rodr\u00edguez and Rokas Maciulaitis and Jan Okraska and T. Simko},\n
      booktitle = {EPJ Web of Conferences},\n journal = {EPJ Web of Conferences},\n
      title = {Hybrid analysis pipelines in the REANA reproducible analysis platform},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "2064654476", "name": "D. Rodr\u00edguez"},
      {"authorId": "71464519", "name": "Rokas Maciulaitis"}, {"authorId": "1413510642",
      "name": "Jan Okraska"}, {"authorId": "71856618", "name": "T. Simko"}]}, {"paperId":
      "2c64142e980e58e714ca051c7c4e872e63786c01", "externalIds": {"DOI": "10.12968/s1353-4858(22)70068-2",
      "CorpusId": 255031395}, "corpusId": 255031395, "publicationVenue": {"id": "aa33d276-504f-40e6-9c33-170b6ec03287",
      "name": "Network Security", "type": "conference", "alternate_names": ["Netw
      Secur"], "issn": "1353-4858", "url": "http://www.elsevier.com/wps/find/journaldescription.cws_home/30358/description#description",
      "alternate_urls": ["http://www.sciencedirect.com/science/journal/13534858"]},
      "url": "https://www.semanticscholar.org/paper/2c64142e980e58e714ca051c7c4e872e63786c01",
      "title": "Why businesses shouldn''t rely on Istio''s Mutual TLS", "abstract":
      "Containers are everywhere now, and with the help of Kubernetes it has become
      easy to deploy complex infrastructures. This raises its own challenges regarding
      visibility and the application of security policies. And while tools such as
      Istio have appeared to help with this issue, they need to be used with care
      and can raise security issues of their own.", "venue": "Network Security", "year":
      2022, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Business",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2022-12-01",
      "journal": {"name": "Network Security"}, "citationStyles": {"bibtex": "@Article{Bocek2022WhyBS,\n
      author = {Kevin M Bocek},\n booktitle = {Network Security},\n journal = {Network
      Security},\n title = {Why businesses shouldn''t rely on Istio''s Mutual TLS},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "49392101", "name": "Kevin M
      Bocek"}]}, {"paperId": "2c708beb2a24c35aabf301a4c9135da570b9f235", "externalIds":
      {"ArXiv": "1803.06178", "MAG": "2793456943", "DBLP": "conf/eurosys/PacholczykR18",
      "DOI": "10.1145/3195870.3195873", "CorpusId": 3956614}, "corpusId": 3956614,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2c708beb2a24c35aabf301a4c9135da570b9f235",
      "title": "Fair non-monetary scheduling in federated clouds", "abstract": "In
      a hybrid cloud, individual cloud service providers (CSPs) often have incentive
      to use each other''s resources to offload peak loads or place load closer to
      the end user. However, CSPs have to keep track of contributions and gains in
      order to disincentivize long-term free-riding. We show CloudShare, a distributed
      version of a load balancing algorithm DirectCloud based on the Shapley value---a
      powerful fairness concept from game theory. CloudShare coordinates CSPs by a
      ZooKeeper-based coordination layer; each CSP runs a broker that interacts with
      local resources (such as Kubernetes-managed clusters). We quantitatively evaluate
      our implementation by simulation. The results confirm that CloudShare generates
      on the average more fair schedules than the popular FairShare algorithm. We
      believe our results show an viable alternative to monetary methods based on,
      e.g., spot markets.", "venue": "CrossCloud@EuroSys", "year": 2018, "referenceCount":
      12, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/1803.06178", "status": "GREEN"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"], "publicationDate":
      "2018-03-16", "journal": {"name": "Proceedings of the 5th Workshop on CrossCloud
      Infrastructures & Platforms"}, "citationStyles": {"bibtex": "@Book{Pacholczyk2018FairNS,\n
      author = {Milosz Pacholczyk and K. Rz\u0105dca},\n booktitle = {CrossCloud@EuroSys},\n
      journal = {Proceedings of the 5th Workshop on CrossCloud Infrastructures & Platforms},\n
      title = {Fair non-monetary scheduling in federated clouds},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "40892682", "name": "Milosz Pacholczyk"}, {"authorId":
      "1780581", "name": "K. Rz\u0105dca"}]}, {"paperId": "2c88cdc589793d03fd1d714f767a55a21741f275",
      "externalIds": {"DBLP": "conf/icebe/ZhangRHFQC18", "MAG": "2907326466", "DOI":
      "10.1109/ICEBE.2018.00021", "CorpusId": 57365953}, "corpusId": 57365953, "publicationVenue":
      {"id": "2e7913cf-49f3-4c19-9a51-68860c6d73f9", "name": "IEEE International Conference
      on e-Business Engineering", "type": "conference", "alternate_names": ["IEEE
      Int Conf bus Eng", "Int Conf bus Eng", "International Conference on e-Business
      Engineering", "ICEBE"], "url": "http://www.wikicfp.com/cfp/program?id=1344"},
      "url": "https://www.semanticscholar.org/paper/2c88cdc589793d03fd1d714f767a55a21741f275",
      "title": "Service Dependency Based Dynamic Load Balancing Algorithm for Container
      Clusters", "abstract": "Recently e-business have grown explosively with the
      widespread of Internet of Things (IoT). To acheive better performance and higher
      resource utilization, many services providers design their services following
      the principle of micro service and deploy them on container clusters like kubernetes.
      However, the existing approaches fail to address service dependency problem.
      The service dependency is a challenge introduced when micro service is applied
      for e-business, the performance of a service is not only decided by the processing
      ability of its backend servers, but also by performance of other serivces it
      relies on to provide its functionality. To address this, this paper proposes
      a dynamic load-balancing solution for kubernetes which can combine service dependency
      to give a more accurate description for request resource consumption and backend
      server ability, and finally performs a better load balancing. Experimental results
      are given to validate the performance of proposed solution.", "venue": "IEEE
      International Conference on e-Business Engineering", "year": 2018, "referenceCount":
      14, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2018-10-01", "journal": {"name": "2018 IEEE
      15th International Conference on e-Business Engineering (ICEBE)", "pages": "70-77"},
      "citationStyles": {"bibtex": "@Article{Zhang2018ServiceDB,\n author = {Jianxin
      Zhang and Rui Ren and Chengxi Huang and Xiang Fei and Wu Qun and Hongming Cai},\n
      booktitle = {IEEE International Conference on e-Business Engineering},\n journal
      = {2018 IEEE 15th International Conference on e-Business Engineering (ICEBE)},\n
      pages = {70-77},\n title = {Service Dependency Based Dynamic Load Balancing
      Algorithm for Container Clusters},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "2144175475", "name": "Jianxin Zhang"}, {"authorId": "2135390019", "name": "Rui
      Ren"}, {"authorId": "48908570", "name": "Chengxi Huang"}, {"authorId": "144380293",
      "name": "Xiang Fei"}, {"authorId": "2071064284", "name": "Wu Qun"}, {"authorId":
      "1720869", "name": "Hongming Cai"}]}, {"paperId": "2c8d64eae18b31552db8bbf753ec5a658e84d66a",
      "externalIds": {"DBLP": "conf/closer/SteffenelCAAS19", "MAG": "3033770600",
      "DOI": "10.1007/978-3-030-49432-2_10", "CorpusId": 226855874}, "corpusId": 226855874,
      "publicationVenue": {"id": "229ff272-1128-48a4-94eb-2ea4041eadff", "name": "International
      Conference on Cloud Computing and Services Science", "type": "conference", "alternate_names":
      ["CLOSER", "Int Conf Cloud Comput Serv Sci"], "url": "http://closer.scitevents.org/"},
      "url": "https://www.semanticscholar.org/paper/2c8d64eae18b31552db8bbf753ec5a658e84d66a",
      "title": "MPI to Go: Container Clusters for MPI Applications", "abstract": null,
      "venue": "International Conference on Cloud Computing and Services Science",
      "year": 2019, "referenceCount": 29, "citationCount": 3, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2019-05-02", "journal":
      {"pages": "199-222"}, "citationStyles": {"bibtex": "@Article{Steffenel2019MPITG,\n
      author = {L. Steffenel and A. Char\u00e3o and Bruno da Silva Alves and Lucas
      Roges de Araujo and L. F. D. Silva},\n booktitle = {International Conference
      on Cloud Computing and Services Science},\n pages = {199-222},\n title = {MPI
      to Go: Container Clusters for MPI Applications},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "1826667", "name": "L. Steffenel"}, {"authorId": "1724375", "name":
      "A. Char\u00e3o"}, {"authorId": "146235915", "name": "Bruno da Silva Alves"},
      {"authorId": "2057167781", "name": "Lucas Roges de Araujo"}, {"authorId": "50567316",
      "name": "L. F. D. Silva"}]}, {"paperId": "2c93553329686681e224c6730cc7bef05d68f52e",
      "externalIds": {"DBLP": "conf/sigcomm/HajaSSPT19", "MAG": "2967180176", "DOI":
      "10.1145/3342280.3342335", "CorpusId": 199661482}, "corpusId": 199661482, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/2c93553329686681e224c6730cc7bef05d68f52e",
      "title": "Sharpening Kubernetes for the Edge", "abstract": "Kubernetes has become
      the most popular cluster manager during the past 5 years. It is used primarily
      for orchestrating data center deployments running web applications. Its powerful
      features, e.g., self-healing and scaling, have attracted a huge community, which
      in turn, is inducing a meteoric rise of this open source project. We venture
      to shape Kubernetes to be suited for edge infrastructure. As mostly delay-sensitive
      applications are to be deployed in the edge, a topology-aware Kubernetes is
      needed, extending its widely-used feature set with regard to network latency.
      Moreover, as the edge infrastructure is highly prone to failures and is considered
      to be expensive to build and maintain, self-healing features must receive more
      emphasis than in the baseline Kubernetes. We therefore designed a custom Kubernetes
      scheduler that makes its decisions with applications'' delay constraints and
      edge reliability in mind. In this demonstration we show the novel features of
      our Kubernetes extension, and describe the solution that we release as open
      source.", "venue": "SIGCOMM Posters and Demos", "year": 2019, "referenceCount":
      3, "citationCount": 18, "influentialCitationCount": 2, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2019-08-19",
      "journal": {"name": "Proceedings of the ACM SIGCOMM 2019 Conference Posters
      and Demos"}, "citationStyles": {"bibtex": "@Book{Haja2019SharpeningKF,\n author
      = {D\u00e1vid Haja and M\u00e1rk Szalay and Bal\u00e1zs Sonkoly and Gergely
      Pongr\u00e1cz and L\u00e1szl\u00f3 Toka},\n booktitle = {SIGCOMM Posters and
      Demos},\n journal = {Proceedings of the ACM SIGCOMM 2019 Conference Posters
      and Demos},\n title = {Sharpening Kubernetes for the Edge},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "30421938", "name": "D\u00e1vid Haja"}, {"authorId":
      "144131030", "name": "M\u00e1rk Szalay"}, {"authorId": "1771457", "name": "Bal\u00e1zs
      Sonkoly"}, {"authorId": "2120798", "name": "Gergely Pongr\u00e1cz"}, {"authorId":
      "2955111", "name": "L\u00e1szl\u00f3 Toka"}]}, {"paperId": "2cb03cca6251bf433bf9b68a265965ac89fd7822",
      "externalIds": {"DOI": "10.1109/ICIDeA53933.2022.9970103", "CorpusId": 254368619},
      "corpusId": 254368619, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2cb03cca6251bf433bf9b68a265965ac89fd7822",
      "title": "Serverless Implementation of Data Wizard Application using Azure Kubernetes
      Service and Docker", "abstract": "Several providers in the cloud provide server-less
      solutions that claim to be highly available, scalable, and low-maintenance.
      To that end, serverless computing using Azure Kubernetes Service (AKS) and Dockers
      is promoted as a feasible choice for pay-per-use Web API, data processing, and
      backend services. They offer elastic and automated scalability, in contrast
      to VMs, by automatically provisioning and allocating resources. We provide our
      findings from analyzing the Data Wizard application running on AKS and as Function(s)-as-a-Service,
      a serverless solution (FaaS). We compare these rollouts by moving data between
      generations of Azure to track latencies and costs. When VMs are prepared for
      the anticipated load, and test scenarios are within the FaaS hardware constraints,
      we discovered no major changes in response time between deployments. FaaS easily
      manages larger data migration volumes, but VMs require more man hours to get
      the same outcomes. The benefits of serverless computing, as we''ve seen them,
      make it easy to decide between serverless and virtual machines for a Data Wizard
      (DW) programme.", "venue": "2022 1st IEEE International Conference on Industrial
      Electronics: Developments & Applications (ICIDeA)", "year": 2022, "referenceCount":
      25, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-10-15",
      "journal": {"name": "2022 1st IEEE International Conference on Industrial Electronics:
      Developments & Applications (ICIDeA)", "pages": "214-219"}, "citationStyles":
      {"bibtex": "@Conference{Sethy2022ServerlessIO,\n author = {Kishore Sethy and
      Debabrata Singh and A. Biswal and Sampa Sahoo},\n booktitle = {2022 1st IEEE
      International Conference on Industrial Electronics: Developments & Applications
      (ICIDeA)},\n journal = {2022 1st IEEE International Conference on Industrial
      Electronics: Developments & Applications (ICIDeA)},\n pages = {214-219},\n title
      = {Serverless Implementation of Data Wizard Application using Azure Kubernetes
      Service and Docker},\n year = {2022}\n}\n"}, "authors": [{"authorId": "47476128",
      "name": "Kishore Sethy"}, {"authorId": "2112765592", "name": "Debabrata Singh"},
      {"authorId": "101652516", "name": "A. Biswal"}, {"authorId": "3070159", "name":
      "Sampa Sahoo"}]}, {"paperId": "2cced7de36f2f79bd3f4f35d3c9382e0dce55915", "externalIds":
      {"DOI": "10.1109/AEECA55500.2022.9918897", "CorpusId": 252999811}, "corpusId":
      252999811, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2cced7de36f2f79bd3f4f35d3c9382e0dce55915",
      "title": "Research on Elastic Cloud Resource Management Strategies based on
      Kubernetes", "abstract": "Kubernetes\u2019 native horizontal scaling strategy,
      horizontal pod autoscaler(HPA), suffers from a single monitoring metric that
      does not accurately measure workload. In addition, there are response delays
      in the expansion stage, and the deletion of redundant Pods in the capacity reduction
      phase may adversely affect load balancing. In order to improve the efficiency
      of computing resource usage, this paper designs an automatic horizontal scaling
      system architecture based on the Monitor-Analyse-Planning-Execution (MAPE) loop
      to address the above problems. The system also equips the horizontal scaling
      system with the resource deletion strategy RRS, which enables the system to
      handle bursty workloads better. The main contribution of this paper is to propose
      a passive strategy based on weighted metric thresholds and an active strategy
      based on ARIMA prediction. The results of multiple experiments show that the
      ARIMA-prediction-based strategy has the problem of decreasing prediction accuracy
      in the late stage of the experiment, demonstrating the limitations of the ARIMA
      model in the real-time scaling system. The weighted-metric-threshold-based strategy
      outperforms HPA in that the timing, number, and replica variation of Pod scaling
      better matches workload variation and improves response latency. This paper
      provides a reference for researchers, developers, and others using Kubernetes
      to optimize the performance of HPA.", "venue": "2022 IEEE International Conference
      on Advances in Electrical Engineering and Computer Applications (AEECA)", "year":
      2022, "referenceCount": 13, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2022-08-20", "journal": {"name": "2022 IEEE International Conference on Advances
      in Electrical Engineering and Computer Applications (AEECA)", "pages": "441-448"},
      "citationStyles": {"bibtex": "@Conference{Qiu2022ResearchOE,\n author = {Yunyun
      Qiu and Pingping Chen and Dingying Tan},\n booktitle = {2022 IEEE International
      Conference on Advances in Electrical Engineering and Computer Applications (AEECA)},\n
      journal = {2022 IEEE International Conference on Advances in Electrical Engineering
      and Computer Applications (AEECA)},\n pages = {441-448},\n title = {Research
      on Elastic Cloud Resource Management Strategies based on Kubernetes},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": null, "name": "Yunyun Qiu"}, {"authorId":
      "2119039441", "name": "Pingping Chen"}, {"authorId": "3066548", "name": "Dingying
      Tan"}]}, {"paperId": "2cd40bd3f962b7e8bf876957998d4387042b970d", "externalIds":
      {"MAG": "2546590409", "DOI": "10.1007/978-3-319-48944-5_12", "CorpusId": 64362624},
      "corpusId": 64362624, "publicationVenue": {"id": "cfc9d2e1-32a5-4ecb-b6a6-c86b494b3143",
      "name": "International Conference on Systems", "type": "conference", "alternate_names":
      ["Int Conf Neuromorphic Syst", "Int Conf Intell Control Autom Sci", "ICONS",
      "International Conference on Neuromorphic Systems", "Int Conf Syst", "International
      Conference on Intelligent Control and Automation Science"], "url": "https://www.iaria.org/conferences/ICONS.html"},
      "url": "https://www.semanticscholar.org/paper/2cd40bd3f962b7e8bf876957998d4387042b970d",
      "title": "Evaluating Raft in Docker on Kubernetes", "abstract": null, "venue":
      "International Conference on Systems", "year": 2016, "referenceCount": 14, "citationCount":
      13, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2016-09-07",
      "journal": {"name": "", "pages": "123-130", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Oliveira2016EvaluatingRI,\n author = {Caio Pereira
      Oliveira and L. Lung and Hylson Vescovi Netto and Luciana Rech},\n booktitle
      = {International Conference on Systems},\n pages = {123-130},\n title = {Evaluating
      Raft in Docker on Kubernetes},\n year = {2016}\n}\n"}, "authors": [{"authorId":
      "21964647", "name": "Caio Pereira Oliveira"}, {"authorId": "1737004", "name":
      "L. Lung"}, {"authorId": "3332738", "name": "Hylson Vescovi Netto"}, {"authorId":
      "144850855", "name": "Luciana Rech"}]}, {"paperId": "2cd9a827073ff9972d2c6e7e995244e2c48d44bc",
      "externalIds": {"DOI": "10.1109/RusAutoCon58002.2023.10272771", "CorpusId":
      263837656}, "corpusId": 263837656, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2cd9a827073ff9972d2c6e7e995244e2c48d44bc",
      "title": "Develop a Lightweight MEC Platform Simulator", "abstract": "This paper
      reviews the use of Minikube in multi-node mode to work with the ETSI MEC Sandbox
      as a lightweight multi-access edge computing platform simulator (LWMECPS). The
      work included a comparative analysis of MEC platforms in terms of functionality,
      cost of deployment, and complexity of adoption. An experiment was also conducted
      to test LWMECPS as a MEC platform using a Python3 test application. The experiment
      confirmed the feasibility of using LWMECPS as a MEC platform by deploying a
      Kubernetes deployment based on the number of users on the simulated 4g-macro
      network service zones from the ETSI MEC Sandbox. Particular attention was paid
      to the analysis of existing scientific literature on the use of multi-access
      edge computing platforms in various use cases.", "venue": "2023 International
      Russian Automation Conference (RusAutoCon)", "year": 2023, "referenceCount":
      22, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference", "Review"], "publicationDate":
      "2023-09-10", "journal": {"name": "2023 International Russian Automation Conference
      (RusAutoCon)", "pages": "537-542"}, "citationStyles": {"bibtex": "@Conference{Filianin2023DevelopAL,\n
      author = {Ivan Filianin and Vladimir Bogatyrev and Matvey Lesonen},\n booktitle
      = {2023 International Russian Automation Conference (RusAutoCon)},\n journal
      = {2023 International Russian Automation Conference (RusAutoCon)},\n pages =
      {537-542},\n title = {Develop a Lightweight MEC Platform Simulator},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2257054988", "name": "Ivan Filianin"},
      {"authorId": "2257054364", "name": "Vladimir Bogatyrev"}, {"authorId": "2257055597",
      "name": "Matvey Lesonen"}]}, {"paperId": "2cdc48c2db4721d921efa30a48048e1270789978",
      "externalIds": {"DOI": "10.32604/iasc.2023.028815", "CorpusId": 249442107},
      "corpusId": 249442107, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2cdc48c2db4721d921efa30a48048e1270789978",
      "title": "Resource Based Automatic Calibration System (RBACS) Using Kubernetes
      Framework", "abstract": null, "venue": "Intelligent Automation &amp; Soft Computing",
      "year": null, "referenceCount": 0, "citationCount": 5, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://file.techscience.com/ueditor/files/iasc/TSP_IASC-35-1/TSP_IASC_28815/TSP_IASC_28815.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "Intelligent Automation &amp; Soft Computing"}, "citationStyles": {"bibtex":
      "@Misc{None,\n author = {T. Alyas and Nadia Tabassum and Muhammad Waseem Iqbal
      and Abdullah S. Alshahrani and Ahmed Alghamdi and Syed Khuram Shahzad},\n booktitle
      = {Intelligent Automation &amp; Soft Computing},\n journal = {Intelligent Automation
      &amp; Soft Computing},\n title = {Resource Based Automatic Calibration System
      (RBACS) Using Kubernetes Framework}\n}\n"}, "authors": [{"authorId": "66553437",
      "name": "T. Alyas"}, {"authorId": "4855902", "name": "Nadia Tabassum"}, {"authorId":
      "1854095484", "name": "Muhammad Waseem Iqbal"}, {"authorId": "2163261088", "name":
      "Abdullah S. Alshahrani"}, {"authorId": "2057271571", "name": "Ahmed Alghamdi"},
      {"authorId": "1854275411", "name": "Syed Khuram Shahzad"}]}, {"paperId": "2cf18a69941491d2959d08b6a9a0cc8e67ec5300",
      "externalIds": {"CorpusId": 260526816}, "corpusId": 260526816, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/2cf18a69941491d2959d08b6a9a0cc8e67ec5300",
      "title": "Accelerate Microservice Networking Performance with 4th Gen Intel\u00ae
      Xeon\u00ae Scalable Processor", "abstract": "Microservice architectures are
      decoupling applications from maintaining and managing infrastructure operations
      to performing only the required business logic. Infrastructure tasks such as
      transferring data, performing health checks, and rate limiting are being decoupled
      from orchestrators like Kubernetes (K8s) and are being taken up by service mesh
      using sidecar proxies, forming a software-defined data plane for microservices.
      Applications running as microservices still perform tasks for which logic has
      to be replicated by each microservice. Service mesh decouples these operations.
      A service mesh deployment makes use of iptables to establish network connections
      between pods and nodes, managing the networking and port forwarding rules. Each
      layer of networking adds 15-30% to the overall latency and reduces the total
      number of requests per second (RPS). We present the characterized and optimized
      performance of Kubernetes CNIs like Calico, web proxies like NGINX, service
      mesh like Istio-Envoy, and remote procedure call frameworks for gRPC. We recommend
      using eBPF, DPDK, and VPP-based optimized networking stack, which provide more
      than 2x performance with Intel\u00ae Xeon\u00ae processor accelerator offloads
      and Xeon processor-specific instructions (ISAs). This document is part of the
      Network and Edge Platform Experience Kits.", "venue": "", "year": 2023, "referenceCount":
      12, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{Ganguli2023AccelerateMN,\n
      author = {M. Ganguli and K. Mullick and Xiaobing Qian and Ismo H. Puustinen
      and Renzhi Jiang and Andrei Palade and Amruta Mishra},\n title = {Accelerate
      Microservice Networking Performance with 4th Gen Intel\u00ae Xeon\u00ae Scalable
      Processor},\n year = {2023}\n}\n"}, "authors": [{"authorId": "28227245", "name":
      "M. Ganguli"}, {"authorId": "92286362", "name": "K. Mullick"}, {"authorId":
      "2227879757", "name": "Xiaobing Qian"}, {"authorId": "2109450", "name": "Ismo
      H. Puustinen"}, {"authorId": "2227858800", "name": "Renzhi Jiang"}, {"authorId":
      "2138463", "name": "Andrei Palade"}, {"authorId": "2227904458", "name": "Amruta
      Mishra"}]}, {"paperId": "2cf597cfb75b608efe4ea147dae420519888f7d1", "externalIds":
      {"DBLP": "conf/middleware/HeraHRTAUVH17", "MAG": "2770804322", "DOI": "10.1145/3152881.3152887",
      "CorpusId": 3636860}, "corpusId": 3636860, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/2cf597cfb75b608efe4ea147dae420519888f7d1",
      "title": "Adaptive sensing using internet-of-things with constrained communications",
      "abstract": "In this paper, we design and implement an Internet-of-Things (IoT)
      based platform for developing cities using environmental sensing as driving
      application with a set of air quality sensors that periodically upload sensor
      data to the cloud. Ubiquitous and free WiFi access is unavailable in most developing
      cities; IoT deployments must leverage 3G cellular connections that are expensive
      and metered. In order to best utilize the limited 3G data plan, we envision
      two adaptation strategies to drive sensing and sensemaking. The first technique
      is an infrastructure-level adaptation approach where we adjust sensing intervals
      of periodic sensors so that the data volume remains bounded within the plan.
      The second approach is at the information-level where application-specific analytics
      are deployed on board devices (or the edge) through container technologies (Docker
      and Kubernetes); the use case focuses on multimedia sensors that process captured
      raw information to lower volume semantic data that is communicated. This approach
      is implemented through the EnviroSCALE (Environmental Sensing and Community
      Alert Network) platform, an inexpensive Raspberry Pi based environmental sensing
      system that periodically publishes sensor data over a 3G connection with a limited
      data plan. We outline our deployment experience of EnviroSCALE in Dhaka city,
      the capital of Bangladesh. For information-level adaptation, we enhanced EnviroSCALE
      with Docker containers with rich media analytics, along Kubernetes for provisioning
      IoT devices and deploying the Docker images. To limit data communication overhead,
      the Docker images are preloaded in the board but a small footprint of analytic
      code is transferred whenever required. Our experiment results demonstrate the
      practicality of adaptive sensing and triggering rich sensing analytics via user-specified
      criteria, even over constrained data connections.", "venue": "ARM@Middleware",
      "year": 2017, "referenceCount": 14, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2017-12-11",
      "journal": {"name": "Proceedings of the 16th Workshop on Adaptive and Reflective
      Middleware"}, "citationStyles": {"bibtex": "@Article{Hera2017AdaptiveSU,\n author
      = {Mahmudur Rahman Hera and Hua-Jun Hong and Amatur Rahman and P. Tsai and Afia
      Afrin and Md Yusuf Sarwar Uddin and N. Venkatasubramanian and Cheng-Hsin Hsu},\n
      booktitle = {ARM@Middleware},\n journal = {Proceedings of the 16th Workshop
      on Adaptive and Reflective Middleware},\n title = {Adaptive sensing using internet-of-things
      with constrained communications},\n year = {2017}\n}\n"}, "authors": [{"authorId":
      "25087381", "name": "Mahmudur Rahman Hera"}, {"authorId": "40657306", "name":
      "Hua-Jun Hong"}, {"authorId": "35929292", "name": "Amatur Rahman"}, {"authorId":
      "145969493", "name": "P. Tsai"}, {"authorId": "9818931", "name": "Afia Afrin"},
      {"authorId": "2333370", "name": "Md Yusuf Sarwar Uddin"}, {"authorId": "1732742",
      "name": "N. Venkatasubramanian"}, {"authorId": "1806563", "name": "Cheng-Hsin
      Hsu"}]}, {"paperId": "2cf7d2b9ea62c6eba5cc13c1713404cde88f417b", "externalIds":
      {"CorpusId": 264552943}, "corpusId": 264552943, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/2cf7d2b9ea62c6eba5cc13c1713404cde88f417b",
      "title": "The Analysis Of The Content Delivery Network Application Deployment
      On Kubernetes Platform", "abstract": "Kubernetes is one of the platforms which
      provides different features that help in the deployment of applications. This
      platform provides different ways to enhance the application\u2019s capability.
      With the better exploration of these ways, we can provide the best Content Delivery
      Network (CDN) services. Some of the important Kubernetes features that are useful
      in the deployment of CDN application is highlighted in this paper. The aim of
      this paper is the analysis of the CDN application deployment and the demonstration
      of high-speed data delivery from the CDN application. We deployed a single-node
      Kubernetes edge cluster on the physical machine using Intel\u2019s Open NESS
      software toolkit. We installed the NGINX-based CDN applications on the Kuberenetes
      cluster. To achieve higher speed, the Single Root I/O Virtualization (SR-IOV)
      interface is used between the edge node and the CDN client machine. The performance
      measurements of the CDN application show higher data delivery speed. Keywords",
      "venue": "", "year": null, "referenceCount": 13, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Misc{None,\n author = {Meeradevi
      and Monica R. Mundada and Palaniappan Ramanathan},\n title = {The Analysis Of
      The Content Delivery Network Application Deployment On Kubernetes Platform}\n}\n"},
      "authors": [{"authorId": "30908055", "name": "Meeradevi"}, {"authorId": "144676461",
      "name": "Monica R. Mundada"}, {"authorId": "2254672094", "name": "Palaniappan
      Ramanathan"}]}, {"paperId": "2d0233440f61d59fe32d6fc4c10f03ef1e378ab5", "externalIds":
      {"CorpusId": 260005335}, "corpusId": 260005335, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/2d0233440f61d59fe32d6fc4c10f03ef1e378ab5",
      "title": "TOWARDS GENERIC AND SCALABLE NETWORK EMULATION", "abstract": "blocks
      for this solution as well as Docker and Kubernetes to build a scalable system.",
      "venue": "", "year": 2023, "referenceCount": 97, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Antunes2023TOWARDSGA,\n
      author = {David Manuel Marques Antunes},\n title = {TOWARDS GENERIC AND SCALABLE
      NETWORK EMULATION},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2224105289",
      "name": "David Manuel Marques Antunes"}]}, {"paperId": "2d0389b1f69711a845aa29815d77c1afa37c6fdd",
      "externalIds": {"MAG": "2769551437", "DOI": "10.1145/3154842.3154845", "CorpusId":
      36570579}, "corpusId": 36570579, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2d0389b1f69711a845aa29815d77c1afa37c6fdd",
      "title": "Orchestrating deep learning workloads on distributed infrastructure",
      "abstract": "Containers simplify the packaging, deployment and orchestration
      of diverse workloads on distributed infrastructure. Containers are primarily
      used for web applications, databases, application servers, etc. on infrastructure
      that consists of CPUs, Memory, Network and Storage. Accelerator hardware such
      GPUs are needed for emerging class of deep learning workloads with unique set
      of requirements that are not addressed by current container orchestration systems
      like Mesos, Kuberentes, and Docker swarm. In this extended abstract, we discuss
      the requirements to support GPUs in container management systems and describe
      our solutions in Kubernetes. We will conclude with a set of open issues that
      are yet to be addressed to fully support deep learning workloads on distributed
      infrastructure. Operating system (OS) allows flexible sharing and load balancing
      of resources like CPU, Memory and Network among multiple processes and containers.
      Unlike these GPU''s are unique quantities (GPU 0, GPU 1, ...) and they must
      be allocated accordingly (e.g., allocate GPU 0 to Container 1). GPU topology,
      will heavily affect the bandwidth of GPU to GPU communication and must take
      into consideration. Moreover, GPU topology even affects GPU capabilities. In
      some systems, for example, GPUs on different CPU socket cannot have Peer to
      Peer communication capability. To address these issues, firstly, we have enabled
      GPU support on Kubernetes. We implemented a GPU allocator module to record GPU
      number-to-device mapping. Kubernetes users only request number of GPUs need
      for their workload; GPU allocator module maps the number to actual GPU devices
      according to required scheduling policy and expose the allocated GPUs to application
      inside the container. Secondly, we have developed two advanced GPU schedulers,
      a bin-packing scheduler and a topology-aware scheduler, to improve GPU utilization
      and GPU performance. Bin-packing scheduler tries to bundle GPU jobs to fewer
      servers, so that other idle servers can be reserved for potentially large jobs.
      Topology-aware scheduler can automatically collect GPU topology information
      of each worker node, and assign nodes that deliver the highest possible bandwidth
      to the application. Access to CPU, Memory, Network and Storage devices are abstracted
      by operating system (OS) application programming interface (API) calls. The
      OS translates the application calls into device specific calls internally. Unlike
      these resources, GPUs have device access calls that are not yet abstracted under
      OS API''s so applications that require access to GPU devices need those GPU
      devices mounted inside the container, they need access to auxiliary device interfaces
      (like nvidia-uvm), and they need the GPU drivers inside that container. The
      device driver inside the container must exactly match the driver on the host
      for proper operation. To solve these issues, we enhanced Kubernetes to gather
      the device drivers on kubelet startup and mount these drivers into the container
      automatically. This ensures portability of the workloads across systems with
      potentially different drivers. A similar approach is taken by Mesos, Nvidia
      Docker and other systems. In addition, unlike CPU and memory, GPU is an external
      PCIe device and in our experience it experiences software and hardware failures
      far more frequently than the rest of the system. Failures could include bad
      connection to the PCIe slot, GPU kernel crash, bad power supply, and so on.
      To deal with such issues, we enabled GPU liveness check on Kubernetes (like
      the liveness check in any cloud service). The kubelet periodically checks the
      healthiness of GPU devices. Once the GPU failure is detected, the GPU will automatically
      be removed out from the resources pool. Finally to support multiple users, we
      added GPU quota support in Kubernetes so that GPU resources can be limited by
      different namespaces; We auto-labeled GPU devices model to Kubernetes worker
      nodes so that the job can use such information to filter GPUs. All these new
      features are originated from our real requirements and aim to enhance the usability
      of GPUs in a cloud context. We consider GPU related scheduling policy and algorithm
      to improve both GPU performance and utility as open issues. We plan to extend
      CPU topology and affinity support to Kubernetes, so that we can make CPU-GPU
      joint topology optimized scheduling. The exploration of CPU-GPU bandwidth will
      bring more possibilities for performance improvement especially for servers
      with NVLink technology (like IBM Minsky) between CPU-GPU.", "venue": "", "year":
      2017, "referenceCount": 1, "citationCount": 2, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Book"], "publicationDate":
      "2017-12-11", "journal": {"name": "Proceedings of the 1st Workshop on Distributed
      Infrastructures for Deep Learning"}, "citationStyles": {"bibtex": "@Book{Seelam2017OrchestratingDL,\n
      author = {Seetharami R. Seelam and Yubo Li},\n journal = {Proceedings of the
      1st Workshop on Distributed Infrastructures for Deep Learning},\n title = {Orchestrating
      deep learning workloads on distributed infrastructure},\n year = {2017}\n}\n"},
      "authors": [{"authorId": "6011944", "name": "Seetharami R. Seelam"}, {"authorId":
      "2154552220", "name": "Yubo Li"}]}, {"paperId": "2d0bcde7e7343082183cfa25ffd28830747803d1",
      "externalIds": {"DBLP": "conf/noms/KhichaneFAG23", "DOI": "10.1109/NOMS56928.2023.10154369",
      "CorpusId": 259217747}, "corpusId": 259217747, "publicationVenue": {"id": "042bc893-3752-44f7-9e77-c59ce54b1b11",
      "name": "IEEE/IFIP Network Operations and Management Symposium", "type": "conference",
      "alternate_names": ["Network Operations and Management Symposium", "NOMS", "IEEE/IFIP
      Netw Oper Manag Symp", "Netw Oper Manag Symp"], "url": "http://www.comsoc.org/"},
      "url": "https://www.semanticscholar.org/paper/2d0bcde7e7343082183cfa25ffd28830747803d1",
      "title": "5GC-Observer Demonstrator: a Non-intrusive Observability Prototype
      for Cloud Native 5G System", "abstract": "Telco players are accelerating their
      adoption of cloud native technologies. Indeed, the migration of traditional
      communications applications to microservice-based architectures will facilitate
      the development of new network services while providing a high level of granularity.
      However, cloud native comes with new operational challenges. Indeed, effective
      network service management requires novel solutions for fine-grained monitoring
      and tracking of widely distributed cloud native network functions. In this paper,
      we put forward 5GC-Observer, our proposed framework for the observability of
      cloud native 5G network services. 5GC-Observer leverages the eBPF technology
      to track network traffic circulating between 5G network functions and report
      telemetry data. This demo makes use of our open-source platform, Towards5GS,
      to implement a real cloud native 5G network on top of Kubernetes. Finally, we
      develop a statistical technique which leverages the collected telemetry data
      to detect 5G end-users\u2019 Quality of Service degradation, based on real access
      network information collected from Orange\u2019s gNB (gNodeB) located in Paris-Orly
      airport.", "venue": "IEEE/IFIP Network Operations and Management Symposium",
      "year": 2023, "referenceCount": 8, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-05-08", "journal": {"name": "NOMS 2023-2023 IEEE/IFIP Network Operations
      and Management Symposium", "pages": "1-3"}, "citationStyles": {"bibtex": "@Article{Khichane20235GCObserverDA,\n
      author = {Abderaouf Khichane and Ilhem Fajjari and Nadjib Aitsaadi and M. Gu\u00e9roui},\n
      booktitle = {IEEE/IFIP Network Operations and Management Symposium},\n journal
      = {NOMS 2023-2023 IEEE/IFIP Network Operations and Management Symposium},\n
      pages = {1-3},\n title = {5GC-Observer Demonstrator: a Non-intrusive Observability
      Prototype for Cloud Native 5G System},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2169673653", "name": "Abderaouf Khichane"}, {"authorId": "2636124", "name":
      "Ilhem Fajjari"}, {"authorId": "2482762", "name": "Nadjib Aitsaadi"}, {"authorId":
      "9105304", "name": "M. Gu\u00e9roui"}]}, {"paperId": "2d0c52ff9832bc573264709d2f77e1a8c18b3124",
      "externalIds": {"MAG": "2990925573", "DOI": "10.1109/DDP.2019.00020", "CorpusId":
      209901119}, "corpusId": 209901119, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2d0c52ff9832bc573264709d2f77e1a8c18b3124",
      "title": "A New Approach to Calculate Resource Limits with Fairness in Kubernetes",
      "abstract": "Containerization has become a new approach that facilitates application
      deployment and delivers scalability, productivity, security, and portability.
      As a first promising platform, Docker was proposed in 2013 to automate the deployment
      of applications. There are many advantages of Docker for delivering cloud native
      services. However, its widespread use has revealed problems such as performance
      overhead. In order to deal with those problems, Kubernetes was introduced in
      2015 as a container orchestration platform to simplify the management of containers.
      Kubernetes simplifies managing a large scale number of docker containers, however,
      the fairness is a missing point in the Kubernetes that has been applied in other
      platforms such as Apache Hadoop, YARN and Mesos. Assigning resource limits fairly
      among the pods in kubernetes becomes a challenging issue as some applications
      may require intensive resources such as CPU and memory that should be maximized
      to satisfy them. In order to do that, in this paper, we practice a novel way
      to assign resource limits fairly among the pods in the Kubernetes environment.",
      "venue": "2019 First International Conference on Digital Data Processing (DDP)",
      "year": 2019, "referenceCount": 12, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://eprints.bournemouth.ac.uk/32791/1/IEEE_ICDIM_2019%282%29.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2019-09-24", "journal": {"name": "2019 First International Conference on Digital
      Data Processing (DDP)", "pages": "51-58"}, "citationStyles": {"bibtex": "@Conference{Hamzeh2019ANA,\n
      author = {Hamed Hamzeh and Sofia Meacham and Kashaf Khan},\n booktitle = {2019
      First International Conference on Digital Data Processing (DDP)},\n journal
      = {2019 First International Conference on Digital Data Processing (DDP)},\n
      pages = {51-58},\n title = {A New Approach to Calculate Resource Limits with
      Fairness in Kubernetes},\n year = {2019}\n}\n"}, "authors": [{"authorId": "32565737",
      "name": "Hamed Hamzeh"}, {"authorId": "3483539", "name": "Sofia Meacham"}, {"authorId":
      "144429483", "name": "Kashaf Khan"}]}, {"paperId": "2d16746fce9a71d41567ed846e71426c0b73b064",
      "externalIds": {"CorpusId": 247087659}, "corpusId": 247087659, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/2d16746fce9a71d41567ed846e71426c0b73b064",
      "title": "Pixie''s protocol tracing with eBPF", "abstract": "Pixie [1, 2], a
      CNCF sandbox open-source project, aims to close these observability gaps by
      providing automatic observability using eBPF [3]. Pixie\u2019s approach to observability
      has the following characteristics: \u25cf No-instrumentation: Pixie\u2019s approach
      is to gather metrics, logs and events without requiring any code changes or
      even application redeployments. Much of this functionality is enabled by eBPF.
      \u25cf Data-oriented UI: Pixie enables users to query data through a Pandas-inspired
      [4] scripting language, and view them through a Web UI. \u25cf Kubernetes-native:
      Although the core features are general to most Linux systems, Pixie is specifically
      designed to provide instant monitoring of applications in Kubernetes environments.",
      "venue": "", "year": null, "referenceCount": 2, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Misc{None,\n author = {Omid Azizi and Yaxiong Zhao and R. Cheng and John P.
      Stevenson and Zain Asgar},\n title = {Pixie''s protocol tracing with eBPF}\n}\n"},
      "authors": [{"authorId": "2096950929", "name": "Omid Azizi"}, {"authorId": "1746089",
      "name": "Yaxiong Zhao"}, {"authorId": "1380659399", "name": "R. Cheng"}, {"authorId":
      "37362092", "name": "John P. Stevenson"}, {"authorId": "2341661", "name": "Zain
      Asgar"}]}, {"paperId": "2d177f439124dc2e4b50b5ec0c9bd99db8d25b83", "externalIds":
      {"DOI": "10.1002/9781119564409.ch7", "CorpusId": 242193634}, "corpusId": 242193634,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2d177f439124dc2e4b50b5ec0c9bd99db8d25b83",
      "title": "Computing with Kubernetes", "abstract": null, "venue": "Google Cloud
      Certified Associate Cloud Engineer Study Guide", "year": 2019, "referenceCount":
      0, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2019-03-28",
      "journal": {"name": "Google Cloud Certified Associate Cloud Engineer Study Guide"},
      "citationStyles": {"bibtex": "@Article{None,\n booktitle = {Google Cloud Certified
      Associate Cloud Engineer Study Guide},\n journal = {Google Cloud Certified Associate
      Cloud Engineer Study Guide},\n title = {Computing with Kubernetes},\n year =
      {2019}\n}\n"}, "authors": []}, {"paperId": "2d1db2f5c6bba68ac58bce15a32bd3e32081e9ce",
      "externalIds": {"MAG": "2970088591", "DBLP": "conf/iccci/MerclP19", "DOI": "10.1007/978-3-030-28374-2_56",
      "CorpusId": 201660425}, "corpusId": 201660425, "publicationVenue": {"id": "66c268f7-ba60-443f-919d-e2c297910401",
      "name": "International Conference on Computational Collective Intelligence",
      "type": "conference", "alternate_names": ["International Conference on Computer
      Communication and Informatics", "Int Conf Comput Commun Informatics", "IEEE
      International Conference on Computer Communication and Internet", "Int Conf
      Comput Collect Intell", "ICCCI", "IEEE Int Conf Comput Commun Internet"], "url":
      "http://www.wikicfp.com/cfp/program?id=1302"}, "url": "https://www.semanticscholar.org/paper/2d1db2f5c6bba68ac58bce15a32bd3e32081e9ce",
      "title": "Public Cloud Kubernetes Storage Performance Analysis", "abstract":
      null, "venue": "International Conference on Computational Collective Intelligence",
      "year": 2019, "referenceCount": 30, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2019-09-04", "journal": {"pages": "649-660"}, "citationStyles": {"bibtex":
      "@Article{Mercl2019PublicCK,\n author = {Lubos Mercl and Jakub Pavl\u00edk},\n
      booktitle = {International Conference on Computational Collective Intelligence},\n
      pages = {649-660},\n title = {Public Cloud Kubernetes Storage Performance Analysis},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "25064450", "name": "Lubos Mercl"},
      {"authorId": "8838774", "name": "Jakub Pavl\u00edk"}]}, {"paperId": "2d1f9416bd6eb29990cc98e6f001c3c626666ffc",
      "externalIds": {"CorpusId": 208194260}, "corpusId": 208194260, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/2d1f9416bd6eb29990cc98e6f001c3c626666ffc",
      "title": "RUNNING DATABASES IN A KUBERNETES CLUSTER An evaluation", "abstract":
      "A recent trend in so\u0089ware engineering is to build applications composed
      of a set of small independent services \u2013 microservices. Kubernetes has
      become the common denominator for hosting stateless microservices. It o\u0082ers
      foundational features such as deployment and replication of microservices as
      well as cluster resource management. Whereas stateless microservices are well
      suited to being hosted in Kubernetes, stateful microservices such as databases
      are generally hosted outside of Kubernetes and managed by domain experts. It
      is desirable to run stateful services such as databases in Kubernetes to leverage
      its features, ease of operation, and to harmonize the environment across the
      entire application stack. \u0091e purpose of this thesis is to investigate and
      evaluate the current support for hosting stateful applications in the form of
      databases in Kubernetes, and to show how di\u0082erent databases are able to
      operate in Kubernets. An experimental setup was used where a set of databases
      \u2013 MySQL, TiDB, and CockroachDB, were deployed in a Kubernetes cluster.
      For each of these databases, a set of operational tasks were performed that
      concerned backup, upgrading, and capacity re-scaling. During the operations
      a number of server-sided and clientsided metrics related to the performance
      and resource e\u0081ciency of the databases were captured. \u0091e results showed
      that Kubernetes has got the native capabilities necessary to deploy and run
      databases, but not to fully operate them correctly. Furthermore, it was concluded
      that the operations had a widely di\u0082erent performance impact depending
      on the database solution.", "venue": "", "year": 2019, "referenceCount": 11,
      "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Inproceedings{Larsson2019RUNNINGDI,\n author = {O. Larsson},\n
      title = {RUNNING DATABASES IN A KUBERNETES CLUSTER An evaluation},\n year =
      {2019}\n}\n"}, "authors": [{"authorId": "2056353094", "name": "O. Larsson"}]},
      {"paperId": "2d206df22cbbba8ca63ea1628af1b324863270b7", "externalIds": {"DBLP":
      "journals/tpds/DettiFP23", "DOI": "10.1109/TPDS.2023.3236447", "CorpusId": 260512570},
      "corpusId": 260512570, "publicationVenue": {"id": "7c9d091e-015e-4e5d-a11f-9bc369fcf414",
      "name": "IEEE Transactions on Parallel and Distributed Systems", "type": "journal",
      "alternate_names": ["IEEE Trans Parallel Distrib Syst"], "issn": "1045-9219",
      "url": "http://www.computer.org/tpds", "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=71"]},
      "url": "https://www.semanticscholar.org/paper/2d206df22cbbba8ca63ea1628af1b324863270b7",
      "title": "<inline-formula><tex-math notation=\"LaTeX\">$\\mu$</tex-math><alternatives><mml:math><mml:mi>\u03bc</mml:mi></mml:math><inline-graphic
      xlink:href=\"detti-ieq1-3236447.gif\"/></alternatives></inline-formula>Bench:
      An Open-Source Factory of Benchmark Microservice Applications", "abstract":
      "<inline-formula><tex-math notation=\"LaTeX\">$\\mu$</tex-math><alternatives><mml:math><mml:mi>\u03bc</mml:mi></mml:math><inline-graphic
      xlink:href=\"detti-ieq2-3236447.gif\"/></alternatives></inline-formula>Bench
      is an open-source tool for benchmarking cloud/edge computing platforms that
      run microservice applications. The tool creates dummy microservice applications
      that can be customized and executed on a Kubernetes cluster. <inline-formula><tex-math
      notation=\"LaTeX\">$\\mu$</tex-math><alternatives><mml:math><mml:mi>\u03bc</mml:mi></mml:math><inline-graphic
      xlink:href=\"detti-ieq3-3236447.gif\"/></alternatives></inline-formula>Bench
      allows users to control fundamental properties of the microservice applications
      it creates, such as service mesh topology, microservices\u2019 behaviors using
      a portfolio of stress functions (e.g., for CPU, memory, I/O, network) or implementing
      new ones, microservice-to-microservice API (HTTP or gRPC), etc. Application
      performance can be evaluated by stochastic or trace-driven workloads. \u03bcBench
      is aimed at researchers and cloud platform developers who lack real microservice
      applications to benchmark their findings (e.g., new resource control mechanisms,
      artificial intelligence-driven orchestration, etc.) or wish to thoroughly evaluate
      their proposals versus a broad set of heterogeneous applications that \u03bcBench
      can create. In addition to the description of \u03bcBench, in this article,
      we show one possible use of it. We compared advantages and disadvantages of
      microservice architectures versus monolithic ones, and analyzed the performance
      impact of key architectural choices, such as service mesh topology and the use
      of replication. For this analysis, we generated several microservice applications
      with different properties, and two of them are derived from a real cloud dataset.",
      "venue": "IEEE Transactions on Parallel and Distributed Systems", "year": 2023,
      "referenceCount": 0, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-03-01", "journal":
      {"name": "IEEE Transactions on Parallel and Distributed Systems", "pages": "968-980",
      "volume": "34"}, "citationStyles": {"bibtex": "@Article{Detti2023inlineformulatexmathNX,\n
      author = {A. Detti and Ludovico Funari and Luca Petrucci},\n booktitle = {IEEE
      Transactions on Parallel and Distributed Systems},\n journal = {IEEE Transactions
      on Parallel and Distributed Systems},\n pages = {968-980},\n title = {<inline-formula><tex-math
      notation=\"LaTeX\">$\\mu$</tex-math><alternatives><mml:math><mml:mi>\u03bc</mml:mi></mml:math><inline-graphic
      xlink:href=\"detti-ieq1-3236447.gif\"/></alternatives></inline-formula>Bench:
      An Open-Source Factory of Benchmark Microservice Applications},\n volume = {34},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "1791403", "name": "A. Detti"},
      {"authorId": "1935254595", "name": "Ludovico Funari"}, {"authorId": "2068374610",
      "name": "Luca Petrucci"}]}, {"paperId": "2d460af9adb510cb5c5cb27ae6d9b50d3cc1596d",
      "externalIds": {"MAG": "2974377865", "DOI": "10.1051/epjconf/201921407026",
      "CorpusId": 203706164}, "corpusId": 203706164, "publicationVenue": {"id": "f2cc63fa-90cb-413d-92ce-003d5244a1e8",
      "name": "EPJ Web of Conferences", "type": "journal", "alternate_names": ["EPJ
      Web Conf", "Epj Web of Conferences", "Epj Web Conf"], "issn": "2100-014X", "url":
      "https://web.archive.org/web/*/https:/www.epj-conferences.org/component/issues/",
      "alternate_urls": ["https://www.epj-conferences.org/", "https://web.archive.org/web/20161128151311/http:/www.epj-conferences.org:80/",
      "https://www.epj-conferences.org/component/issues/"]}, "url": "https://www.semanticscholar.org/paper/2d460af9adb510cb5c5cb27ae6d9b50d3cc1596d",
      "title": "Advanced features of the CERN OpenStack Cloud", "abstract": "The CERN
      OpenStack cloud has been delivering a wide variety of services to the whole
      laboratory since it entered in production in 2013. Initially, standard resources
      such as Virtual Machines and Block Storage were offered. Today, the cloud offering
      includes advanced features such as Container Orchestration (for Kubernetes,
      Docker Swarm mode, Mesos/DCOS clusters), File Shares and Bare Metal, and the
      Cloud team is preparing the addition of Networking and Workflow-as-a-Service
      components. In this paper, we will describe these advanced features, the OpenStack
      projects that provide them, as well as some of the main usecases that benefit
      from them. We will show the ongoing work on those services that will increase
      functionality, such as container orchestration upgrades and networking features
      such as private networks and floating IPs.", "venue": "EPJ Web of Conferences",
      "year": 2019, "referenceCount": 6, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.epj-conferences.org/articles/epjconf/pdf/2019/19/epjconf_chep2018_07026.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Physics", "source": "s2-fos-model"}], "publicationTypes": ["Conference"],
      "publicationDate": null, "journal": {"name": "EPJ Web of Conferences"}, "citationStyles":
      {"bibtex": "@Conference{Le\u00f3n2019AdvancedFO,\n author = {Jos\u00e9 Castro
      Le\u00f3n},\n booktitle = {EPJ Web of Conferences},\n journal = {EPJ Web of
      Conferences},\n title = {Advanced features of the CERN OpenStack Cloud},\n year
      = {2019}\n}\n"}, "authors": [{"authorId": "41017219", "name": "Jos\u00e9 Castro
      Le\u00f3n"}]}, {"paperId": "2d57ad4245cb1981a33cb5db485e4efb32a38789", "externalIds":
      {"MAG": "2995405669", "CorpusId": 214480614}, "corpusId": 214480614, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/2d57ad4245cb1981a33cb5db485e4efb32a38789",
      "title": "Containerization and scaling of a PHP application : Docker & Kubernetes",
      "abstract": null, "venue": "", "year": 2019, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Juntunen2019ContainerizationAS,\n
      author = {Joni Juntunen},\n title = {Containerization and scaling of a PHP application
      : Docker & Kubernetes},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2086530797",
      "name": "Joni Juntunen"}]}, {"paperId": "2da3b8f8049b783911857c53df0f84843059fb53",
      "externalIds": {"DOI": "10.1145/3583740.3626613", "CorpusId": 267524593}, "corpusId":
      267524593, "publicationVenue": {"id": "c60f6e64-434b-4c82-931d-faefcb362d4c",
      "name": "IFIP International Information Security Conference", "type": "conference",
      "alternate_names": ["Symp Edge Comput", "Symposium on Edge Computing", "Inf
      Secur", "Information Security", "IFIP Int Inf Secur Conf", "SEC"], "url": "http://www.tc11.uni-frankfurt.de/",
      "alternate_urls": ["https://acm-ieee-sec.org"]}, "url": "https://www.semanticscholar.org/paper/2da3b8f8049b783911857c53df0f84843059fb53",
      "title": "Middleware Support for Edge Data Analytics Over Heterogeneous Scenarios",
      "abstract": "Edge intelligence has been gaining traction and sophistication.
      The execution settings may range from a small cluster as an edge cloud to on-device
      inference on embedded devices, differing in hardware capability over orders
      of magnitude. The application scenarios for edge data analytics increasingly
      involve multimodal sensory input (e.g., combining audio, video, and text input)
      for richer contextual understanding. However, there is insufficient system support
      to handle the growing complexity and heterogeneity in edge analytics. Application
      development and deployment still require substantial domain knowledge of both
      multimodal inference and myriad execution environments. This paper presents
      Crystal, a framework to ease edge analytics development and deployment over
      diverse edge settings. Crystal presents developers with configuration interfaces
      to use built-in or custom libraries for common analytics modules and then compiles
      the application code. Internally, Crystal masks hardware heterogeneity with
      abstract resource types through containerization, while abstracting away application
      processing pipelines into generic flow graphs. On this basis, Crystal then supports
      a notion of degradable computing that adjusts the application flow to fit the
      available resource and streamlines the analytics processing by elimination modality
      redundancy. Crystal further interfaces with existing machine learning frameworks
      (e.g., TensorFlow) and containerization and orchestration tools (Docker and
      Kubernetes). Building atop Crystal reduces the application development effort
      by a factor of 10 in terms of lines of code; Meanwhile, Crystal automatically
      and gracefully adapts to settings from a Raspberry Pi to a small EC2 cluster,
      without manual effort or significant loss of analytics quality.", "venue": "IFIP
      International Information Security Conference", "year": 2023, "referenceCount":
      81, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2023-12-06", "journal": {"name":
      "2023 IEEE/ACM Symposium on Edge Computing (SEC)", "pages": "171-184"}, "citationStyles":
      {"bibtex": "@Article{Hu2023MiddlewareSF,\n author = {Bo Hu and Wenjun Hu},\n
      booktitle = {IFIP International Information Security Conference},\n journal
      = {2023 IEEE/ACM Symposium on Edge Computing (SEC)},\n pages = {171-184},\n
      title = {Middleware Support for Edge Data Analytics Over Heterogeneous Scenarios},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2118095167", "name": "Bo Hu"},
      {"authorId": "2250067311", "name": "Wenjun Hu"}]}, {"paperId": "2da56db27225c00519d3c2ad941fd09f294fae46",
      "externalIds": {"MAG": "2907801988", "DBLP": "conf/soca/AlyKY18", "DOI": "10.1109/SOCA.2018.00024",
      "CorpusId": 53394288}, "corpusId": 53394288, "publicationVenue": {"id": "70ad7990-ecc7-4d62-9a54-b1fac46b4570",
      "name": "IEEE International Conference on Service-Oriented Computing and Applications",
      "type": "conference", "alternate_names": ["SOCA", "IEEE Int Conf Serv Comput
      Appl"]}, "url": "https://www.semanticscholar.org/paper/2da56db27225c00519d3c2ad941fd09f294fae46",
      "title": "Kubernetes or OpenShift? Which Technology Best Suits Eclipse Hono
      IoT Deployments", "abstract": "New verticals within the Internet of Things paradigm,
      i.e., smart cities, industrie 4.0, etc., require specific platform(s) to allow
      different components to communicate. The value of the IoT systems often correlates
      directly with the ability of those platforms to connect different devices efficiently
      and integrate them into higher-level solutions. Eclipse Hono allows the provisioning
      of remote service interfaces for connecting devices to a back-end and interacts
      with them uniformly regardless of their types and communication protocols. Currently,
      there is a variety of possibilities for using Hono in production; it can be
      deployed on Kubernetes, OpenShift or Docker Swarms. However, these deployments
      decisions have important performance implications that the developers are not
      often aware of. In this paper, we step up loads in Kubernetes and OpenShift
      to clear out the performance costs of their deployment scenarios, with the aim
      to provide the practitioners with guidelines to help understand the performance
      implications of their design and deployment decisions.", "venue": "IEEE International
      Conference on Service-Oriented Computing and Applications", "year": 2018, "referenceCount":
      19, "citationCount": 7, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2018-11-01", "journal":
      {"name": "2018 IEEE 11th Conference on Service-Oriented Computing and Applications
      (SOCA)", "pages": "113-120"}, "citationStyles": {"bibtex": "@Article{Aly2018KubernetesOO,\n
      author = {M. Aly and Foutse Khomh and S. Yacout},\n booktitle = {IEEE International
      Conference on Service-Oriented Computing and Applications},\n journal = {2018
      IEEE 11th Conference on Service-Oriented Computing and Applications (SOCA)},\n
      pages = {113-120},\n title = {Kubernetes or OpenShift? Which Technology Best
      Suits Eclipse Hono IoT Deployments},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "27729369", "name": "M. Aly"}, {"authorId": "1703493", "name": "Foutse Khomh"},
      {"authorId": "2675762", "name": "S. Yacout"}]}, {"paperId": "2dab94fc9ffd458d03ed709b5b0e1b2934860fce",
      "externalIds": {"DBLP": "journals/corr/abs-2307-12567", "ArXiv": "2307.12567",
      "DOI": "10.48550/arXiv.2307.12567", "CorpusId": 260125234}, "corpusId": 260125234,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/2dab94fc9ffd458d03ed709b5b0e1b2934860fce",
      "title": "Monitoring Cascading Changes of Resources in the Kubernetes Control
      Plane", "abstract": "Kubernetes is a container management system that has many
      automated functionalities. Those functionalities are managed by configuring
      objects and resources in the control plane. Since most objects change their
      state depending on other objects'' states, a change propagates to other objects
      in a chain. As cluster availability is influenced by the time required for these
      cascading changes, it is essential to make the propagations measurable and shed
      light on the behavior of the Kubernetes control plane. However, it is not easy
      because each object constantly monitors other objects'' status and acts autonomously
      in response to their changes to play its role. In this paper, we propose a measurement
      system that outputs objects'' change logs published from the API server in the
      control plane and assists in analyzing the time of cascading changes between
      objects by utilizing the relationships among resources. With a practical change
      scenario, our system is confirmed that it can measure change propagation times
      within a cascading change. Also, measurements on the system itself showed it
      has a small CPU and memory footprint.", "venue": "arXiv.org", "year": 2023,
      "referenceCount": 15, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2307.12567", "status":
      "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-24", "journal":
      {"name": "ArXiv", "volume": "abs/2307.12567"}, "citationStyles": {"bibtex":
      "@Article{Ehira2023MonitoringCC,\n author = {Tomoyuki Ehira and Daisuke Kotani
      and Hiroki Shirokura and Hirofumi Ichihara and Y. Okabe},\n booktitle = {arXiv.org},\n
      journal = {ArXiv},\n title = {Monitoring Cascading Changes of Resources in the
      Kubernetes Control Plane},\n volume = {abs/2307.12567},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2224624210", "name": "Tomoyuki Ehira"}, {"authorId":
      "1557396900", "name": "Daisuke Kotani"}, {"authorId": "2204878712", "name":
      "Hiroki Shirokura"}, {"authorId": "3101179", "name": "Hirofumi Ichihara"}, {"authorId":
      "1836560", "name": "Y. Okabe"}]}, {"paperId": "2dd0f8d71aa49dbc378fc07152ed12e4e00c0dee",
      "externalIds": {"CorpusId": 235467695}, "corpusId": 235467695, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/2dd0f8d71aa49dbc378fc07152ed12e4e00c0dee",
      "title": "Scalability Benchmarking of Stream Processing Engines with Apache
      Beam", "abstract": "The rapid increase in data due to modern developments, such
      as Industry 4.0, Internet of Things, artificial intelligence or the analysis
      of user interaction on websites led to a plethora of new technologies dealing
      with the challenges associated with the four Vs of Big Data. One approach for
      dealing with these challenges, stream processing, gained special interest due
      to its ability to handle high loads while providing real-time results. Due to
      this, many different stream processing frameworks emerged, each with its own
      design decisions. In this thesis, we will benchmark the horizontal scalability
      of two stream processing frameworks. To achieve this, we will apply the benchmarking
      method Theodolite and benchmark four already identified use cases. We will focus
      on Apache Beam as a programming API using Apache Samza and Apache Flink as stream
      processing backends. Additionally, we will adjust the framework of Theodolite
      to support the execution of Beam pipelines using Apache Flink and Apache Samza
      as stream processing engines. Following, we will take the necessary steps to
      execute our use cases in a private cloud environment, orchestrated by Kubernetes.
      We found that using Flink as processing backend is advantageous in three use
      cases, while using Samza as processing backend results in better results for
      one use case.", "venue": "", "year": 2021, "referenceCount": 46, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Bensien2021ScalabilityBO,\n
      author = {Jan Robert Bensien and W. Hasselbring and S. Henning},\n title = {Scalability
      Benchmarking of Stream Processing Engines with Apache Beam},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2113410380", "name": "Jan Robert Bensien"}, {"authorId":
      "1712950", "name": "W. Hasselbring"}, {"authorId": "26667701", "name": "S. Henning"}]},
      {"paperId": "2e28828c21e713ab9414e38606f71593844a151f", "externalIds": {"DOI":
      "10.33965/ciaca_ciawi2022_202209l015", "CorpusId": 255040050}, "corpusId": 255040050,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2e28828c21e713ab9414e38606f71593844a151f",
      "title": "SISTEMA DE DETEC\u00c7\u00c3O DE INTRUS\u00c3O ESCAL\u00c1VEL E PARALELO
      UTILIZANDO APACHE SPARK E KUBERNETES", "abstract": "Neste artigo \u00e9 problematizado
      a inefici\u00eancia do treinamento de solu\u00e7\u00f5es de seguran\u00e7a baseadas
      em Machine Learning capazes de atingir um tempo de resposta reduzido devido
      ao alto volume de informa\u00e7\u00e3o que deve ser processado. Dessa forma,
      \u00e9 proposto um N-IDS (Network Intrusion Detection System ) baseado em rede
      neural MLP ( Multilayer Perceptron ) implantado em uma infraestrutura paralela
      em Cloud, composta por Apache Spark e Kubernetes . Foi verificado que a t\u00e9cnica
      de rede MLP mostra-se como uma solu\u00e7\u00e3o alternativa eficaz capaz de
      detectar 98, 0% dos casos analisados, al\u00e9m de que a implementa\u00e7\u00e3o
      em conjunto com Apache Spark e Kubernetes , com recurso de aloca\u00e7\u00e3o
      din\u00e2mica, consegue equilibrar o t radeoff entre tempo de resposta da aplica\u00e7\u00e3o
      e recursos utilizados, mostrando a viabilidade de implementa\u00e7\u00e3o em
      ambientes eficientes e que necessitam de tempo de resposta reduzido", "venue":
      "Proceedings of the Ibero American Conferences on Applied Computing 2022 and
      WWW/Internet 2022", "year": 2022, "referenceCount": 14, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes": ["Conference"],
      "publicationDate": "2022-11-09", "journal": {"name": "Proceedings of the Ibero
      American Conferences on Applied Computing 2022 and WWW/Internet 2022"}, "citationStyles":
      {"bibtex": "@Conference{Cardoso2022SISTEMADD,\n author = {Luan Santana da Costa
      e Diego Lisboa Cardoso},\n booktitle = {Proceedings of the Ibero American Conferences
      on Applied Computing 2022 and WWW/Internet 2022},\n journal = {Proceedings of
      the Ibero American Conferences on Applied Computing 2022 and WWW/Internet 2022},\n
      title = {SISTEMA DE DETEC\u00c7\u00c3O DE INTRUS\u00c3O ESCAL\u00c1VEL E PARALELO
      UTILIZANDO APACHE SPARK E KUBERNETES},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2198296158", "name": "Luan Santana da Costa e Diego Lisboa Cardoso"}]}, {"paperId":
      "2e820ddbe15b02740a7023aa871cfd17bd67609b", "externalIds": {"DOI": "10.1117/12.2667227",
      "CorpusId": 257136656}, "corpusId": 257136656, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/2e820ddbe15b02740a7023aa871cfd17bd67609b",
      "title": "The design of an experimental cloud resource provisioning language",
      "abstract": "As a cornerstone of cloud-native systems, Kubernetes uses YAML,
      a data description language, to configure resources. However, YAML does not
      meet the configuration requirements of complex scenarios and has three major
      problems. First, YAML has no type checking mechanism and therefore data type
      mismatches cannot be detected during compilation. Second, YAML does not have
      the ability to reuse data descriptions and there are duplicate code for largescale
      data. Third, YAML lacks a type merging algorithm that meets the needs of multi-team
      development in enterprises. This paper implements an experimental cloud resource
      provisioning language, Hermias, which is based on the functional programming
      language OCaml. Hermias is used to describe the resource configuration of cloud
      servers, which solves the above three problems in YAML. The novelty of this
      work is to propose a type merging algorithm that computes records with common
      labels by union types and subtyping.", "venue": "Third International Seminar
      on Artificial Intelligence, Networking, and Information Technology", "year":
      2023, "referenceCount": 6, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Engineering"],
      "s2FieldsOfStudy": [{"category": "Engineering", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2023-02-22", "journal": {"pages": "1258713 - 1258713-5", "volume": "12587"},
      "citationStyles": {"bibtex": "@Inproceedings{Wang2023TheDO,\n author = {Nan
      Wang and Z. Zhang and Xiaodong Duo and Yingying Ma and Gang Chen},\n booktitle
      = {Third International Seminar on Artificial Intelligence, Networking, and Information
      Technology},\n pages = {1258713 - 1258713-5},\n title = {The design of an experimental
      cloud resource provisioning language},\n volume = {12587},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2198607484", "name": "Nan Wang"}, {"authorId": "2148907092",
      "name": "Z. Zhang"}, {"authorId": "2209958027", "name": "Xiaodong Duo"}, {"authorId":
      "2146275781", "name": "Yingying Ma"}, {"authorId": "2146663291", "name": "Gang
      Chen"}]}, {"paperId": "2ec7b33659fa1d013d49ef1ee2f4783533b01d88", "externalIds":
      {"DBLP": "conf/seke/LiuMZH18", "MAG": "2898747401", "DOI": "10.18293/SEKE2018-086",
      "CorpusId": 53241118}, "corpusId": 53241118, "publicationVenue": {"id": "336e2706-61ed-4bc5-97a6-3df713fc01c2",
      "name": "International Conference on Software Engineering and Knowledge Engineering",
      "type": "conference", "alternate_names": ["Softw Eng Knowl Eng", "Int Conf Softw
      Eng Knowl Eng", "SEKE", "Software Engineering and Knowledge Engineering"], "url":
      "http://ksiresearch.org/seke/seke20.html"}, "url": "https://www.semanticscholar.org/paper/2ec7b33659fa1d013d49ef1ee2f4783533b01d88",
      "title": "Towards Reference Architecture for a Multi-layer Controlled Self-adaptive
      Microservice System", "abstract": "With the features of high distribution in
      deployment and independence in running, the microservice systems that operate
      in heterogeneous infrastructures and open Internet environment are expected
      to be self-adaptive to adapt to various changes of both operating contexts and
      application requirements. This requires the adaptability of the microservice
      systems to be diverse and flexible, and independent of implementation technologies
      and platforms. This paper presents a reference architecture for self-adaptive
      microservice systems with the abilities of multi-layer controlled self-adaptations,
      including infrastructure-controlled layer and application-controlled layer.
      Such reference architecture presents a blueprint to cope with diverse changes
      from different levels in microservice systems and supports the interactions
      between layers. We have implemented a practical platform called SAMSP based
      on the reference architecture and Kubernetes and evaluated our approach using
      a sample. The experimental results are promising, and demonstrate the feasibility
      and effectiveness of our proposed reference architecture. Keywords-microservice
      system; reference architecture; selfadaptive microservice system; multi-layer
      control loops", "venue": "International Conference on Software Engineering and
      Knowledge Engineering", "year": 2018, "referenceCount": 18, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://doi.org/10.18293/seke2018-086", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2018-07-01", "journal": {"pages": "236-235"}, "citationStyles":
      {"bibtex": "@Article{Liu2018TowardsRA,\n author = {Peini Liu and Xinjun Mao
      and Shuai Zhang and Fu Hou},\n booktitle = {International Conference on Software
      Engineering and Knowledge Engineering},\n pages = {236-235},\n title = {Towards
      Reference Architecture for a Multi-layer Controlled Self-adaptive Microservice
      System},\n year = {2018}\n}\n"}, "authors": [{"authorId": "2692262", "name":
      "Peini Liu"}, {"authorId": "39389365", "name": "Xinjun Mao"}, {"authorId": "2108433056",
      "name": "Shuai Zhang"}, {"authorId": "145610432", "name": "Fu Hou"}]}, {"paperId":
      "2ec9681a021ffed564ac364def44e9fbcedacd48", "externalIds": {"MAG": "2919897868",
      "DBLP": "conf/infocom/BaoPW19", "DOI": "10.1109/INFOCOM.2019.8737460", "CorpusId":
      86466941}, "corpusId": 86466941, "publicationVenue": {"id": "7f92b1d2-f2b3-454d-adbe-ff02c83fe404",
      "name": "IEEE Conference on Computer Communications", "type": "conference",
      "alternate_names": ["INFOCOM", "IEEE Conf Comput Commun"], "url": "http://www.ieee-infocom.org/"},
      "url": "https://www.semanticscholar.org/paper/2ec9681a021ffed564ac364def44e9fbcedacd48",
      "title": "Deep Learning-based Job Placement in Distributed Machine Learning
      Clusters", "abstract": "Production machine learning (ML) clusters commonly host
      a variety of distributed ML workloads, e.g., speech recognition, machine translation.
      While server sharing among jobs improves resource utilization, interference
      among co-located ML jobs can lead to significant performance downgrade. Existing
      cluster schedulers (e.g., Mesos) are interference-oblivious in their job placement,
      causing suboptimal resource efficiency. Interference-aware job placement has
      been studied in the literature, but was treated using detailed workload profiling
      and interference modeling, which is not a general solution. This paper presents
      Harmony, a deep learning-driven ML cluster scheduler that places training jobs
      in a manner that minimizes interference and maximizes performance (i.e., training
      completion time). Harmony is based on a carefully designed deep reinforcement
      learning (DRL) framework augmented with reward modeling. The DRL employs state-of-the-art
      techniques to stabilize training and improve convergence, including actor-critic
      algorithm, job-aware action space exploration and experience replay. In view
      of a common lack of reward samples corresponding to different placement decisions,
      we build an auxiliary reward prediction model, which is trained using historical
      samples and used for producing reward for unseen placement. Experiments using
      real ML workloads in a Kubernetes cluster of 6 GPU servers show that Harmony
      outperforms representative schedulers by 25% in terms of average job completion
      time.", "venue": "IEEE Conference on Computer Communications", "year": 2019,
      "referenceCount": 35, "citationCount": 90, "influentialCitationCount": 9, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2019-04-01", "journal": {"name": "IEEE INFOCOM
      2019 - IEEE Conference on Computer Communications", "pages": "505-513"}, "citationStyles":
      {"bibtex": "@Article{Bao2019DeepLJ,\n author = {Yixin Bao and Yanghua Peng and
      Chuan Wu},\n booktitle = {IEEE Conference on Computer Communications},\n journal
      = {IEEE INFOCOM 2019 - IEEE Conference on Computer Communications},\n pages
      = {505-513},\n title = {Deep Learning-based Job Placement in Distributed Machine
      Learning Clusters},\n year = {2019}\n}\n"}, "authors": [{"authorId": "3393850",
      "name": "Yixin Bao"}, {"authorId": "9561490", "name": "Yanghua Peng"}, {"authorId":
      "1726963", "name": "Chuan Wu"}]}, {"paperId": "2ed0c612ee6aa263b107de3d25ba53227d9432b7",
      "externalIds": {"DBLP": "conf/gecon/FaticantiZDRASC20", "DOI": "10.1007/978-3-030-63058-4_8",
      "CorpusId": 228077705}, "corpusId": 228077705, "publicationVenue": {"id": "339231ae-625f-45bd-a860-089e2de02e23",
      "name": "Grid Economics and Business Models", "type": "conference", "alternate_names":
      ["GECON", "Grid Econ Bus Model"], "url": "http://www.wikicfp.com/cfp/program?id=1122"},
      "url": "https://www.semanticscholar.org/paper/2ed0c612ee6aa263b107de3d25ba53227d9432b7",
      "title": "Distributed Cloud Intelligence: Implementing an ETSI MANO-Compliant
      Predictive Cloud Bursting Solution Using Openstack and Kubernetes", "abstract":
      null, "venue": "Grid Economics and Business Models", "year": 2020, "referenceCount":
      0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"pages": "80-85"},
      "citationStyles": {"bibtex": "@Article{Faticanti2020DistributedCI,\n author
      = {Francescomaria Faticanti and Jason Zormpas and Sergey Drozdov and Kewin Rausch
      and Orlando Avila-Garc\u00eda and Fragkiskos Sardis and Silvio Cretti and Mohsen
      Amiribesheli and D. Siracusa},\n booktitle = {Grid Economics and Business Models},\n
      pages = {80-85},\n title = {Distributed Cloud Intelligence: Implementing an
      ETSI MANO-Compliant Predictive Cloud Bursting Solution Using Openstack and Kubernetes},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "83615886", "name": "Francescomaria
      Faticanti"}, {"authorId": "2034062291", "name": "Jason Zormpas"}, {"authorId":
      "118500348", "name": "Sergey Drozdov"}, {"authorId": "34961596", "name": "Kewin
      Rausch"}, {"authorId": "1405256623", "name": "Orlando Avila-Garc\u00eda"}, {"authorId":
      "1994272", "name": "Fragkiskos Sardis"}, {"authorId": "8811077", "name": "Silvio
      Cretti"}, {"authorId": "3235225", "name": "Mohsen Amiribesheli"}, {"authorId":
      "1989382", "name": "D. Siracusa"}]}, {"paperId": "2eeddccbf3028c26a983a42335d8b78dd87d14c0",
      "externalIds": {"DOI": "10.1109/MoNeTec55448.2022.9960769", "CorpusId": 254100053},
      "corpusId": 254100053, "publicationVenue": {"id": "fd3e045b-a11e-468c-a1ba-1f222f6f50b8",
      "name": "Modern Network technologies", "type": "conference", "alternate_names":
      ["MoNeTec", "Mod Netw technol"]}, "url": "https://www.semanticscholar.org/paper/2eeddccbf3028c26a983a42335d8b78dd87d14c0",
      "title": "Development of Docker and Kubernetes Orchestration Platforms for Industrial
      Internet of Things Service Migration", "abstract": "This paper has considered
      an architecture for building the Industrial Internet of Things (IIoT) using
      edge computing technology. The levels of this architecture and their respective
      roles are described, as are the benefits of implementing Mobile Edge Computing
      (MEC) in IIoT, the model of the considered smart factory, and the case in which
      the application must be migrated from the cloud to the edge device. As part
      of the explanation for the selection of technologies used in coordinating migration
      for a network with edge computing, the concepts of designing software based
      on a microservice architecture were considered, as well as virtualization and
      containerization technologies. The Docker containerization technology and the
      Kubernetes orchestration system are explored in depth to facilitate the migration
      of cloud-based applications to the peripheral.", "venue": "Modern Network technologies",
      "year": 2022, "referenceCount": 16, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2022-10-27", "journal": {"name": "2022 International Conference on Modern Network
      Technologies (MoNeTec)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Conference{Muthanna2022DevelopmentOD,\n
      author = {Mohammed Saleh Ali Muthanna and Alexey Tselykh},\n booktitle = {Modern
      Network technologies},\n journal = {2022 International Conference on Modern
      Network Technologies (MoNeTec)},\n pages = {1-6},\n title = {Development of
      Docker and Kubernetes Orchestration Platforms for Industrial Internet of Things
      Service Migration},\n year = {2022}\n}\n"}, "authors": [{"authorId": "30862878",
      "name": "Mohammed Saleh Ali Muthanna"}, {"authorId": "2141943557", "name": "Alexey
      Tselykh"}]}, {"paperId": "2eff2b21ea6863a1576acb43c00835ed777e3d0b", "externalIds":
      {"DOI": "10.1109/EEBDA56825.2023.10090753", "CorpusId": 258067831}, "corpusId":
      258067831, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2eff2b21ea6863a1576acb43c00835ed777e3d0b",
      "title": "An Ansible-based Distributed Application Architecture Rapid Deployment
      Scheme", "abstract": "This article proposes a platform of containers based on
      high availability Kubernetes cluster. The platform let containerized applications
      work continuously. The solution can be used by increasing master nodes or based
      on the original Kubernetes cluster in order to reduce cost. The article also
      providers installation scripts for quickly deployment.", "venue": "2023 IEEE
      2nd International Conference on Electrical Engineering, Big Data and Algorithms
      (EEBDA)", "year": 2023, "referenceCount": 8, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2023-02-24", "journal": {"name": "2023 IEEE 2nd International Conference on
      Electrical Engineering, Big Data and Algorithms (EEBDA)", "pages": "972-975"},
      "citationStyles": {"bibtex": "@Conference{Ning2023AnAD,\n author = {An Ning},\n
      booktitle = {2023 IEEE 2nd International Conference on Electrical Engineering,
      Big Data and Algorithms (EEBDA)},\n journal = {2023 IEEE 2nd International Conference
      on Electrical Engineering, Big Data and Algorithms (EEBDA)},\n pages = {972-975},\n
      title = {An Ansible-based Distributed Application Architecture Rapid Deployment
      Scheme},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2072094112", "name":
      "An Ning"}]}, {"paperId": "2f0de64ed0cf1d791507372b901bbbfd73e3495c", "externalIds":
      {"MAG": "2795361658", "CorpusId": 29836329}, "corpusId": 29836329, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/2f0de64ed0cf1d791507372b901bbbfd73e3495c",
      "title": "Kubernetes: Up and Running: Dive into the Future of Infrastructure",
      "abstract": "Legend has it that Google deploys over two billion application
      containers a week. Hows that possible? Google revealed the secret through a
      project called Kubernetes, an open source cluster orchestrator (based on its
      internal Borg system) that radically simplifies the task of building, deploying,
      and maintaining scalable distributed systems in the cloud. This practical guide
      shows you how Kubernetes and container technology can help you achieve new levels
      of velocity, agility, reliability, and efficiency. Authors Kelsey Hightower,
      Brendan Burns, and Joe Bedawhove worked on Kubernetes at Google and other organizatons
      explain how this system fits into the lifecycle of a distributed application.
      You will learn how to use tools and APIs to automate scalable distributed systems,
      whether it is for online services, machine-learning applications, or a cluster
      of Raspberry Pi computers. Explore the distributed system challenges that Kubernetes
      addresses Dive into containerized application development, using containers
      such as Docker Create and run containers on Kubernetes, using the docker image
      format and container runtime Explore specialized objects essential for running
      applications in production Reliably roll out new software versions without downtime
      or errors Get examples of how to develop and deploy real-world applications
      in Kubernetes", "venue": "", "year": 2017, "referenceCount": 0, "citationCount":
      226, "influentialCitationCount": 32, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2017-09-07", "journal": {"name":
      "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Hightower2017KubernetesUA,\n
      author = {Kelsey Hightower and Brendan Burns and J. Beda},\n title = {Kubernetes:
      Up and Running: Dive into the Future of Infrastructure},\n year = {2017}\n}\n"},
      "authors": [{"authorId": "52477038", "name": "Kelsey Hightower"}, {"authorId":
      "2056947472", "name": "Brendan Burns"}, {"authorId": "69973940", "name": "J.
      Beda"}]}, {"paperId": "2f1639469354457c219be3752d7967148d4564bb", "externalIds":
      {"DBLP": "journals/access/PhucKPKK22", "DOI": "10.1109/ACCESS.2022.3232131",
      "CorpusId": 255180429}, "corpusId": 255180429, "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26",
      "name": "IEEE Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/2f1639469354457c219be3752d7967148d4564bb",
      "title": "Node-Based Horizontal Pod Autoscaler in KubeEdge-Based Edge Computing
      Infrastructure", "abstract": "KubeEdge (KE) is a container orchestration platform
      for deploying and managing containerized IoT applications in an edge computing
      environment based on Kubernetes. It is intended to be hosted at the edge and
      provides seamless cloud-edge coordination as well as an offline mode that allows
      the edge to function independently of the cloud. However, there are unreliable
      communication links between edge nodes in edge computing environments, implying
      that load balancing in an edge computing environment is not guaranteed while
      using KE. Furthermore, KE lacks Horizontal Pod Autoscaling (HPA), implying that
      KE cannot dynamically deploy new resources to efficiently handle increasing
      requests. Both of the aforementioned issues have a significant impact on the
      performance of the KE-based edge computing system, particularly when traffic
      volumes vary over time and geographical location. In this study, a node-based
      horizontal pod autoscaler (NHPA) is proposed to provide dynamical adjustment
      for the number of pods of individual nodes independently from each other in
      an edge computing environment where the traffic volume fluctuates over time
      and location, and the communication links between edge nodes are not stable.
      The proposed NHPA can dynamically adjust the number of pods depending on the
      incoming traffic at each node, which will improve the overall performance of
      the KubeEdge-based edge computing environment. In the KubeEdge-based edge computing
      environment, the experimental findings reveal that NHPA outperforms KE in terms
      of throughput and response time by a factor of about 3 and 25, respectively.",
      "venue": "IEEE Access", "year": 2022, "referenceCount": 30, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://ieeexplore.ieee.org/ielx7/6287639/6514899/09999239.pdf", "status":
      "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "IEEE Access",
      "pages": "134417-134426", "volume": "10"}, "citationStyles": {"bibtex": "@Article{Phuc2022NodeBasedHP,\n
      author = {Le Hoang Phuc and Majid Kundroo and Dae-Heon Park and Sehan Kim and
      Taehong Kim},\n booktitle = {IEEE Access},\n journal = {IEEE Access},\n pages
      = {134417-134426},\n title = {Node-Based Horizontal Pod Autoscaler in KubeEdge-Based
      Edge Computing Infrastructure},\n volume = {10},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2154156888", "name": "Le Hoang Phuc"}, {"authorId": "2257053500",
      "name": "Majid Kundroo"}, {"authorId": "49777745", "name": "Dae-Heon Park"},
      {"authorId": "2758210", "name": "Sehan Kim"}, {"authorId": "2111277421", "name":
      "Taehong Kim"}]}, {"paperId": "2f1c0cd900bafe01e8bfdf3e3726e8d134959222", "externalIds":
      {"DBLP": "conf/icaiic/WooL23", "DOI": "10.1109/ICAIIC57133.2023.10066988", "CorpusId":
      257721261}, "corpusId": 257721261, "publicationVenue": {"id": "2756e173-d599-4a50-8d52-df1b9492f924",
      "name": "Digital Signal Processing and Signal Processing Education Workshop",
      "type": "conference", "alternate_names": ["International Conference on Artificial
      Intelligence in Information and Communication", "ICAIIC", "Digit Signal Process
      Signal Process Educ Workshop", "Int Conf Artif Intell Inf Commun"]}, "url":
      "https://www.semanticscholar.org/paper/2f1c0cd900bafe01e8bfdf3e3726e8d134959222",
      "title": "Proposal of Docker and Kubernetes Direction through the Event Timeline
      of Kubernetes", "abstract": "Modern developers typically run their workloads
      through cloud-native environments such as Docker and Kubernetes. Docker is a
      platform that runs and manages containers. With the birth of Docker, interest
      in containers and technology has grown. As one of the container orchestration
      tools that control and manage containers running on multiple hosts, Kubernetes
      has a very large share and is used by many cloud companies, making it the standard
      for practical container orchestration tools. Therefore, in this paper, by analyzing
      the Kubernetes event timeline, we present the future direction of Kubernetes
      and Docker, which are key tools in the cloud-native environment.", "venue":
      "Digital Signal Processing and Signal Processing Education Workshop", "year":
      2023, "referenceCount": 5, "citationCount": 1, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2023-02-20", "journal": {"name": "2023 International Conference
      on Artificial Intelligence in Information and Communication (ICAIIC)", "pages":
      "815-820"}, "citationStyles": {"bibtex": "@Article{Woo2023ProposalOD,\n author
      = {Seungchan Woo and Jong-Hyouk Lee},\n booktitle = {Digital Signal Processing
      and Signal Processing Education Workshop},\n journal = {2023 International Conference
      on Artificial Intelligence in Information and Communication (ICAIIC)},\n pages
      = {815-820},\n title = {Proposal of Docker and Kubernetes Direction through
      the Event Timeline of Kubernetes},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2212602435", "name": "Seungchan Woo"}, {"authorId": "2184078475", "name": "Jong-Hyouk
      Lee"}]}, {"paperId": "2f20428e586a38ea47edcf2ac3acd60f3fcd96bc", "externalIds":
      {"DOI": "10.1007/978-1-4842-7192-6_3", "CorpusId": 242766335}, "corpusId": 242766335,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2f20428e586a38ea47edcf2ac3acd60f3fcd96bc",
      "title": "Kubernetes Architecture", "abstract": null, "venue": "SQL Server on
      Kubernetes", "year": 2021, "referenceCount": 0, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "SQL Server on Kubernetes"}, "citationStyles": {"bibtex":
      "@Article{Nocentino2021KubernetesA,\n author = {Anthony E. Nocentino and Benjamin
      Weissman},\n booktitle = {SQL Server on Kubernetes},\n journal = {SQL Server
      on Kubernetes},\n title = {Kubernetes Architecture},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2047576954", "name": "Anthony E. Nocentino"}, {"authorId":
      "145400508", "name": "Benjamin Weissman"}]}, {"paperId": "2f2ab063761101e5af69aad864d0b0d66e8b0a0a",
      "externalIds": {"MAG": "2972874238", "ArXiv": "1909.06040", "DBLP": "journals/corr/abs-1909-06040",
      "DOI": "10.1109/TPDS.2021.3052895", "CorpusId": 202572613}, "corpusId": 202572613,
      "publicationVenue": {"id": "7c9d091e-015e-4e5d-a11f-9bc369fcf414", "name": "IEEE
      Transactions on Parallel and Distributed Systems", "type": "journal", "alternate_names":
      ["IEEE Trans Parallel Distrib Syst"], "issn": "1045-9219", "url": "http://www.computer.org/tpds",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=71"]},
      "url": "https://www.semanticscholar.org/paper/2f2ab063761101e5af69aad864d0b0d66e8b0a0a",
      "title": "DL2: A Deep Learning-Driven Scheduler for Deep Learning Clusters",
      "abstract": "Efficient resource scheduling is essential for maximal utilization
      of expensive deep learning (DL) clusters. Existing cluster schedulers either
      are agnostic to machine learning (ML) workload characteristics, or use scheduling
      heuristics based on operators\u2019 understanding of particular ML framework
      and workload, which are less efficient or not general enough. In this article,
      we show that DL techniques can be adopted to design a generic and efficient
      scheduler. Specifically, we propose DL<inline-formula><tex-math notation=\"LaTeX\">$^2$</tex-math><alternatives><mml:math><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic
      xlink:href=\"peng-ieq2-3052895.gif\"/></alternatives></inline-formula>, a DL-driven
      scheduler for DL clusters, targeting global training job expedition by dynamically
      resizing resources allocated to jobs. DL<inline-formula><tex-math notation=\"LaTeX\">$^2$</tex-math><alternatives><mml:math><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic
      xlink:href=\"peng-ieq3-3052895.gif\"/></alternatives></inline-formula> advocates
      a joint supervised learning and reinforcement learning approach: a neural network
      is warmed up via offline supervised learning based on job traces produced by
      the existing cluster scheduler; then the neural network is plugged into the
      live DL cluster, fine-tuned by reinforcement learning carried out throughout
      the training progress of the DL jobs, and used for deciding job resource allocation
      in an online fashion. We implement DL<inline-formula><tex-math notation=\"LaTeX\">$^2$</tex-math><alternatives><mml:math><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic
      xlink:href=\"peng-ieq4-3052895.gif\"/></alternatives></inline-formula> on Kubernetes
      and enable dynamic resource scaling in DL jobs on MXNet. Extensive evaluation
      shows that DL<inline-formula><tex-math notation=\"LaTeX\">$^2$</tex-math><alternatives><mml:math><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic
      xlink:href=\"peng-ieq5-3052895.gif\"/></alternatives></inline-formula> outperforms
      fairness scheduler (i.e., DRF) by 44.1 percent and expert heuristic scheduler
      (i.e., Optimus) by 17.5 percent in terms of average job completion time.", "venue":
      "IEEE Transactions on Parallel and Distributed Systems", "year": 2019, "referenceCount":
      71, "citationCount": 51, "influentialCitationCount": 5, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/1909.06040", "status": "GREEN"},
      "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-09-13", "journal": {"name": "IEEE
      Transactions on Parallel and Distributed Systems", "pages": "1947-1960", "volume":
      "32"}, "citationStyles": {"bibtex": "@Article{Peng2019DL2AD,\n author = {Yanghua
      Peng and Yixin Bao and Yangrui Chen and Chuan Wu and Chen Meng and Wei Lin},\n
      booktitle = {IEEE Transactions on Parallel and Distributed Systems},\n journal
      = {IEEE Transactions on Parallel and Distributed Systems},\n pages = {1947-1960},\n
      title = {DL2: A Deep Learning-Driven Scheduler for Deep Learning Clusters},\n
      volume = {32},\n year = {2019}\n}\n"}, "authors": [{"authorId": "9561490", "name":
      "Yanghua Peng"}, {"authorId": "3393850", "name": "Yixin Bao"}, {"authorId":
      "40930325", "name": "Yangrui Chen"}, {"authorId": "1726963", "name": "Chuan
      Wu"}, {"authorId": "2057110081", "name": "Chen Meng"}, {"authorId": "71666838",
      "name": "Wei Lin"}]}, {"paperId": "2f3d1ec86d3ed4912dbbc4e42e31cd0531445570",
      "externalIds": {"CorpusId": 251248211}, "corpusId": 251248211, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/2f3d1ec86d3ed4912dbbc4e42e31cd0531445570",
      "title": "Kubernetes Provenance", "abstract": "vi Chapter", "venue": "", "year":
      2020, "referenceCount": 40, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [], "publicationTypes": null, "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Inproceedings{Lin2020KubernetesP,\n author = {Willy Lin},\n title
      = {Kubernetes Provenance},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "120634279", "name": "Willy Lin"}]}, {"paperId": "2f70a1403f992bdaaa4bdc784562f4eb4866988b",
      "externalIds": {"MAG": "2990902466", "DBLP": "conf/ucc/Wang19", "DOI": "10.1145/3368235.3369378",
      "CorpusId": 208355611}, "corpusId": 208355611, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/2f70a1403f992bdaaa4bdc784562f4eb4866988b",
      "title": "The Journey of Cloud Computing with Open Source", "abstract": "Cloud
      computing is changing from a buzz word to a common technology nowadays. Though
      there is clarification for cloud computing for three types/layers: Infrastructure
      as a Service (IaaS), Platform as a Service (PaaS), Software as a Service (SaaS),
      generally people talk about IaaS and PaaS when they talking about cloud computing.
      There are already several giant players, like AWS, Azure and GoogleCloud, in
      the market and it''s a 100+ billions USD market[1],but it''s a competitive market
      and there are new players coming in. And on the other hand, people can see big
      demand for private cloud as well. In this talk, I''d like to share our journey
      about building a public cloud with OpenStack[2]. Our journey started since 2014
      and the idea incubated even earlier. I will generally cover how we design and
      implement our cloud from bare metal, to VM, then container/Kubernetes, and the
      road map targeting to serverless, mainly focus on the current stage, about building
      a high quality managed Kubernetes service. Recently having gone through the
      experience of building, implementing and running a Kubernetes platform service
      in our public cloud, Catalyst Cloud has some interesting experiences and war
      stories to share about the journey.", "venue": "UCC Companion", "year": 2019,
      "referenceCount": 0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Business", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2019-12-02",
      "journal": {"name": "Proceedings of the 12th IEEE/ACM International Conference
      on Utility and Cloud Computing Companion"}, "citationStyles": {"bibtex": "@Article{Wang2019TheJO,\n
      author = {Feilong Wang},\n booktitle = {UCC Companion},\n journal = {Proceedings
      of the 12th IEEE/ACM International Conference on Utility and Cloud Computing
      Companion},\n title = {The Journey of Cloud Computing with Open Source},\n year
      = {2019}\n}\n"}, "authors": [{"authorId": "6326459", "name": "Feilong Wang"}]},
      {"paperId": "2f795928a09536287e0a859010a0a036143c2dbc", "externalIds": {"MAG":
      "2581491802", "DOI": "10.1007/978-1-4842-2598-1_10", "CorpusId": 63493219},
      "corpusId": 63493219, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2f795928a09536287e0a859010a0a036143c2dbc",
      "title": "Configuring Compute Resources", "abstract": null, "venue": "", "year":
      2017, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "pages": "237-256", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Vohra2017ConfiguringCR,\n author = {Deepak Vohra},\n
      pages = {237-256},\n title = {Configuring Compute Resources},\n year = {2017}\n}\n"},
      "authors": [{"authorId": "3026624", "name": "Deepak Vohra"}]}, {"paperId": "2f7ceb65aecd4b679c6802aef147e46bf48614d9",
      "externalIds": {"MAG": "2962363460", "DOI": "10.1007/978-1-4842-4828-7_6", "CorpusId":
      199265310}, "corpusId": 199265310, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2f7ceb65aecd4b679c6802aef147e46bf48614d9",
      "title": "Monitoring Azure Kubernetes Service", "abstract": null, "venue": "Building
      Microservices Applications on Microsoft Azure", "year": 2019, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "Building
      Microservices Applications on Microsoft Azure"}, "citationStyles": {"bibtex":
      "@Article{Chawla2019MonitoringAK,\n author = {Harsh Chawla and Hemant Kathuria},\n
      booktitle = {Building Microservices Applications on Microsoft Azure},\n journal
      = {Building Microservices Applications on Microsoft Azure},\n title = {Monitoring
      Azure Kubernetes Service},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "38823842", "name": "Harsh Chawla"}, {"authorId": "151024167", "name": "Hemant
      Kathuria"}]}, {"paperId": "2fc91da1cfb56f57f6e93b1620481b5f3d89baed", "externalIds":
      {"DBLP": "conf/ieeesec/FigueiredoS20", "MAG": "3131079564", "DOI": "10.1109/SEC50012.2020.00032",
      "CorpusId": 232062036}, "corpusId": 232062036, "publicationVenue": {"id": "c60f6e64-434b-4c82-931d-faefcb362d4c",
      "name": "IFIP International Information Security Conference", "type": "conference",
      "alternate_names": ["Symp Edge Comput", "Symposium on Edge Computing", "Inf
      Secur", "Information Security", "IFIP Int Inf Secur Conf", "SEC"], "url": "http://www.tc11.uni-frankfurt.de/",
      "alternate_urls": ["https://acm-ieee-sec.org"]}, "url": "https://www.semanticscholar.org/paper/2fc91da1cfb56f57f6e93b1620481b5f3d89baed",
      "title": "Demo: EdgeVPN.io: Open-source Virtual Private Network for Seamless
      Edge Computing with Kubernetes", "abstract": "Edge and fog computing encompass
      a variety of technologies that are poised to enable new applications across
      the Internet that support data capture, storage, processing, and communication
      across the networking continuum. These environments pose new challenges to the
      design and implementation of networks-as membership can be dynamic and devices
      are heterogeneous, widely distributed geographically, and in proximity to end-users,
      as is the case with mobile and Internet-of-Things (IoT) devices. We present
      a demonstration of EdgeVPN.io (Evio for short), an open-source programmable,
      software-defined network that addresses challenges in the deployment of virtual
      networks spanning distributed edge and cloud resources, in particular highlighting
      its use in support of the Kubernetes container orchestration middleware. The
      demo highlights a deployment of unmodified Kubernetes middleware across a virtual
      cluster comprising virtual machines deployed both in cloud providers, and in
      distinct networks at the edge-where all nodes are assigned private IP addresses
      and subject to different NAT (Network Address Translation) middleboxes, connected
      through an Evio virtual network. The demo includes an overview of the configuration
      of Kubernetes and Evio nodes and the deployment of Docker-based container pods,
      highlighting the seamless connectivity for TCP/IP applications deployed on the
      pods.", "venue": "IFIP International Information Security Conference", "year":
      2020, "referenceCount": 5, "citationCount": 10, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Review"], "publicationDate": "2020-11-01",
      "journal": {"name": "2020 IEEE/ACM Symposium on Edge Computing (SEC)", "pages":
      "190-192"}, "citationStyles": {"bibtex": "@Article{Figueiredo2020DemoEO,\n author
      = {R. Figueiredo and Kensworth C. Subratie},\n booktitle = {IFIP International
      Information Security Conference},\n journal = {2020 IEEE/ACM Symposium on Edge
      Computing (SEC)},\n pages = {190-192},\n title = {Demo: EdgeVPN.io: Open-source
      Virtual Private Network for Seamless Edge Computing with Kubernetes},\n year
      = {2020}\n}\n"}, "authors": [{"authorId": "144356414", "name": "R. Figueiredo"},
      {"authorId": "2032809", "name": "Kensworth C. Subratie"}]}, {"paperId": "2fd89de98ac5e31321b53f6dd2817e9e025188f9",
      "externalIds": {"MAG": "3011619509", "CorpusId": 216599940}, "corpusId": 216599940,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2fd89de98ac5e31321b53f6dd2817e9e025188f9",
      "title": "DevOps en el desarrollo de una API REST con .Net Core y arquitectura
      de microservicios", "abstract": "El presente trabajo aborda la elaboracion de
      una API de una tienda online alojada en la nube de Azure, con una arquitectura
      de microservicios, haciendo uso de .Net Core para su implementacion, de Docker
      para crear los contenedores y de Kubernetes para gestionarlos en tiempo real.
      Se decidio hacer uso de dos entornos, uno de desarrollo y otro de pruebas. Se
      ha utilizado utilizado una metodologia DevOps, apoyandose en las herramientas
      que proporciona Azure DevOps. Para ello se han creado pipelines para cada microservicio,
      encargados de construir, probar y desplegar automaticamente la imagen Docker
      en nuestro cluster de Kubernetes. Ademas, se hace uso de SonarCloud para mejorar
      la calidad del codigo. En este trabajo se puede encontrar documentacion sobre
      las tecnologias utilizadas y una guia de desarrollo de los puntos clave del
      proyecto. El proyecto se aborda desde el punto de vista de la Ingenieria del
      Software, que abarca el desarrollo de la API, y la Ingenieria del Computadores,
      centrada en la configuracion de la infraestructura. Abstract: This paper is
      focused on the development of an online store API hosted in the Azure cloud
      with a microservice architecture, implemented with .Net Core, creating containers
      with Docker and managing them in real time with Kubernetes. We decided to use
      two environments, one for development and another one for testing. We have used
      a DevOps methodology, based on tools provided by Azure DevOps. Due to this,
      for each microservice pipelines have been created, enabling automatic building,
      testing and deploying of the Docker image in our Kubernetes cluster. In addition,
      quality of code has been improved with the use of SonarCloud. In this paper
      you can find documentation about used technologies and a development guide focused
      on key points of the project. The project is approached from the point of view
      of Software Engineering, covering the development of the API, and Hardware Engineering,
      focused on infrastructure configuration.", "venue": "", "year": 2019, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Engineering"], "s2FieldsOfStudy":
      [{"category": "Engineering", "source": "external"}], "publicationTypes": null,
      "publicationDate": "2019-07-01", "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Pinilla2019DevOpsEE,\n author = {Daniela Pinilla
      and Diego Sebasti\u00e1n D\u00edez},\n title = {DevOps en el desarrollo de una
      API REST con .Net Core y arquitectura de microservicios},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "117254303", "name": "Daniela Pinilla"}, {"authorId":
      "1661077077", "name": "Diego Sebasti\u00e1n D\u00edez"}]}, {"paperId": "2fe53d5c4bad671f7e01c31e552b2ee008501a2e",
      "externalIds": {"DBLP": "journals/concurrency/SarathchandraKH21", "MAG": "3161169615",
      "DOI": "10.1002/cpe.6373", "CorpusId": 236386999}, "corpusId": 236386999, "publicationVenue":
      {"id": "312ca99c-9149-490d-813e-c60d5e949f65", "name": "Concurrency and Computation",
      "type": "journal", "alternate_names": ["Concurr Comput Pract Exp", "Concurrency
      and Computation: Practice and Experience", "Concurr Comput"], "issn": "1532-0626",
      "url": "http://www3.interscience.wiley.com/cgi-bin/jhome/77004395?CRETRY=1&SRETRY=0",
      "alternate_urls": ["http://www3.interscience.wiley.com/cgi-bin/jtoc?ID=77004395",
      "http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)1532-0634"]}, "url": "https://www.semanticscholar.org/paper/2fe53d5c4bad671f7e01c31e552b2ee008501a2e",
      "title": "Resource aware scheduler for distributed stream processing in cloud
      native environments", "abstract": "Recently distributed stream processors are
      increasingly being deployed in cloud computing infrastructures. In this article,
      we study performance characteristics of distributed stream processing applications
      in Google Compute Engine which is based on Kubernetes. We identify performance
      gaps in terms of throughput which appear in such environments when using a round
      robin (RR) scheduling algorithm. As a solution, we propose resource aware stream
      processing scheduler called resource aware scheduler for stream processing applications
      in cloud native environments (RaspaCN). We implement RaspaCN''s job scheduler
      using two\u2010step process. First, we use machine learning to identify the
      optimal number of worker nodes. Second, we use RR and multiple Knapsack algorithms
      to produce performance optimal stream processing job schedules. With three application
      benchmarks called HTTP Log Processor, Nexmark, and Email Processor representing
      real world stream processing scenarios we evaluate the performance benefits
      obtained via RaspaCN''s scheduling algorithm. RaspaCN could produce percentage
      increase of average throughput values by at least 37%, 38%, and 10%, respectively,
      for HTTP Log Processor, Nexmark, and Email Processor benchmarks for fixed input
      data rates. Furthermore, we conduct experiments with varying input data rates
      as well and show 7% improved average throughput for HTTP Log Processor. These
      experiments show the effectiveness of our proposed stream processor job scheduler
      for producing improved performance.", "venue": "Concurrency and Computation",
      "year": 2021, "referenceCount": 43, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-05-20", "journal": {"name": "Concurrency and Computation: Practice and
      Experience", "volume": "33"}, "citationStyles": {"bibtex": "@Article{Sarathchandra2021ResourceAS,\n
      author = {Madushi Sarathchandra and C. Karandana and Winma Heenatigala and Miyuru
      Dayarathna and Sanath Jayasena},\n booktitle = {Concurrency and Computation},\n
      journal = {Concurrency and Computation: Practice and Experience},\n title =
      {Resource aware scheduler for distributed stream processing in cloud native
      environments},\n volume = {33},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2121101450", "name": "Madushi Sarathchandra"}, {"authorId": "1397290739", "name":
      "C. Karandana"}, {"authorId": "2121077112", "name": "Winma Heenatigala"}, {"authorId":
      "2741023", "name": "Miyuru Dayarathna"}, {"authorId": "2066026296", "name":
      "Sanath Jayasena"}]}, {"paperId": "2ff6dd3a8bbf583166cc0bb86a0cdb4217d3f723",
      "externalIds": {"CorpusId": 236922715}, "corpusId": 236922715, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/2ff6dd3a8bbf583166cc0bb86a0cdb4217d3f723",
      "title": "Designing, deploying and managing cloud-native applications effectively
      using Docker, Jenkins, and Kubernetes", "abstract": "From storing and retrieving
      information in databases online to delivering various services such as servers,
      and computing resources over the internet, cloud computing has brought tremendous
      advancements in the technological world. One of the major sectors of cloud computing
      is application development. A wide variety of applications are being developed
      which offer services for almost every working industry globally. Several debates
      and discussions have arisen on designing the application in the best way possible.
      Extensive research studies were done using various parameters such as resource
      usage, storage, efficiency to determine the most optimal method. Cloud-enabled
      applications were the primary type developed, followed by cloud-based applications.
      However, the demand for lightweight and flexible applications designed at the
      least cost possible rendered these approaches obsolete. That is where the cloud-native
      model came into the picture. This paper explores the model and presents how
      it is used to design, deploy, and manage cloud-native applications, including
      discussing the model''s core elements and implementing them in making the application.",
      "venue": "", "year": 2021, "referenceCount": 16, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Paladugu2021DesigningDA,\n
      author = {Jyothi Koushik Paladugu},\n title = {Designing, deploying and managing
      cloud-native applications effectively using Docker, Jenkins, and Kubernetes},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2122693760", "name": "Jyothi
      Koushik Paladugu"}]}, {"paperId": "3009fa0c6b914183f38ae60b37d061c688ae6146",
      "externalIds": {"MAG": "2064490042", "DOI": "10.1002/BS.3830010104", "CorpusId":
      121996437}, "corpusId": 121996437, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3009fa0c6b914183f38ae60b37d061c688ae6146",
      "title": "The effect of experience on a determinate dynamic system", "abstract":
      "The kappa in Phi Beta Kappa stands for \u201ckubernetes,\u201d a Greek noun
      related to the English adjective \u201cgubernatorial.\u201d It refers to governing
      or executive functions. (\u03c6BK means \u201cphilosophy, the governor of life.\u201d)
      The name for the new science of governing mechanisms, cybernetics, is derived
      from the Greek \u201ckubernetes.\u201d This year the first text in this field
      will appear, written by the author of this article, who also wrote \u201cDesign
      for a Brain.\u201d Here he gives a preview of some of the ideas he develops
      in his new book, particularly how it happens that the state of certain systems
      can with the passage of time be more dependent on what their surroundings have
      been like than on their initial states. He relates his theoretical concepts
      to observations about how personality and behavior patterns develop as human
      beings mature.", "venue": "", "year": 2007, "referenceCount": 2, "citationCount":
      11, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Sociology"], "s2FieldsOfStudy": [{"category": "Sociology",
      "source": "external"}, {"category": "Philosophy", "source": "s2-fos-model"}],
      "publicationTypes": ["Review"], "publicationDate": "2007-01-17", "journal":
      {"name": "Systems Research and Behavioral Science", "pages": "35-42", "volume":
      "1"}, "citationStyles": {"bibtex": "@Article{Ashby2007TheEO,\n author = {W.
      R. Ashby},\n journal = {Systems Research and Behavioral Science},\n pages =
      {35-42},\n title = {The effect of experience on a determinate dynamic system},\n
      volume = {1},\n year = {2007}\n}\n"}, "authors": [{"authorId": "3396767", "name":
      "W. R. Ashby"}]}, {"paperId": "30129c4bb11dd5c86a5bc3c24197b14378f1b59b", "externalIds":
      {"DBLP": "journals/cm/ScoteceNFC23", "DOI": "10.1109/MCOM.006.2200693", "CorpusId":
      257788901}, "corpusId": 257788901, "publicationVenue": {"id": "a1b15bc8-157e-45a9-b4c8-8211f938775d",
      "name": "IEEE Communications Magazine", "type": "journal", "alternate_names":
      ["IEEE Commun Mag"], "issn": "0163-6804", "url": "http://www.comsoc.org/commag",
      "alternate_urls": ["https://ieeexplore.ieee.org/servlet/opac?punumber=35"]},
      "url": "https://www.semanticscholar.org/paper/30129c4bb11dd5c86a5bc3c24197b14378f1b59b",
      "title": "5G-Kube: Complex Telco Core Infrastructure Deployment Made Low-Cost",
      "abstract": "Network Function Virtualization (NFV) along with Software Defined
      Networking (SDN) have brought an evolution in telecommunications laying out
      the bases for 5G networks and its softwarization. Accordingly, new implementations
      of telecom standards, such as the 3GPP 5G Core, are defined as fully-virtualized
      infrastructures consisting of different components and leveraging a cloud-native
      approach. At the same time, standard-oriented solutions, such as ETSI Management
      and Orchestration (MANO), have emerged to master the complexity of Virtualized
      Network Functions (VNFs) orchestration, including 5G Core VNFs. While MANO operates
      at the NFV level, it also leverages existing cloud infrastructures for the deployment
      of VNFs by interoperating with resource orchestrators at the cloud level. From
      the business perspective, that requires telco operators to interact with different
      technology providers, from NFV/MANO software producers to cloud computing providers,
      and to hire technicians proficient in the technologies of both telco and computing
      worlds, that are a rather difficult human resourcing to find. The main claim
      of the article is that the Development and Operations (DevOps) tools in the
      IT world are mature enough to leverage them directly in the telco world, without
      superimposing other interlaced standard/software. That allows to significantly
      reduce OPEX cost of complex telco infrastructures by supporting all needed automation
      and by avoiding the combined use of (too) complex layered standards/software
      stacks, such as in the case of MANO. Accordingly, in this article, we leverage
      container-based technologies and Kubernetes to design and evaluate a novel deployment
      approach, called 5G-Kube, for softwarized 5G core networks. 5G-Kube, which is
      openly to the community, has been also evaluated in two different use cases
      of the 5G Core and Kubernetes deployment fitting, namely, Industry 4.0 and Smart
      Cities.", "venue": "IEEE Communications Magazine", "year": 2023, "referenceCount":
      14, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-07-01", "journal":
      {"name": "IEEE Communications Magazine", "pages": "26-30", "volume": "61"},
      "citationStyles": {"bibtex": "@Article{Scotece20235GKubeCT,\n author = {Domenico
      Scotece and Asma Noor and L. Foschini and Antonio Corradi},\n booktitle = {IEEE
      Communications Magazine},\n journal = {IEEE Communications Magazine},\n pages
      = {26-30},\n title = {5G-Kube: Complex Telco Core Infrastructure Deployment
      Made Low-Cost},\n volume = {61},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "29924476", "name": "Domenico Scotece"}, {"authorId": "2061523855", "name":
      "Asma Noor"}, {"authorId": "1748978", "name": "L. Foschini"}, {"authorId": "144765161",
      "name": "Antonio Corradi"}]}, {"paperId": "301c433043fb8e992a0c36e2bb0a2032258e04dd",
      "externalIds": {"DBLP": "journals/fi/DellImmagineSB23", "DOI": "10.3390/fi15070228",
      "CorpusId": 259760671}, "corpusId": 259760671, "publicationVenue": {"id": "c3e5f1c8-9ba7-47e5-acde-53063a69d483",
      "name": "Future Internet", "type": "journal", "issn": "1999-5903", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-156830",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-156830",
      "https://www.mdpi.com/journal/futureinternet"]}, "url": "https://www.semanticscholar.org/paper/301c433043fb8e992a0c36e2bb0a2032258e04dd",
      "title": "KubeHound: Detecting Microservices'' Security Smells in Kubernetes
      Deployments", "abstract": "As microservice-based architectures are increasingly
      adopted, microservices security has become a crucial aspect to consider for
      IT businesses. Starting from a set of \u201csecurity smells\u201d for microservice
      applications that were recently proposed in the literature, we enable the automatic
      detection of such smells in microservice applications deployed with Kubernetes.
      We first introduce possible analysis techniques to automatically detect security
      smells in Kubernetes-deployed microservices. We then demonstrate the practical
      applicability of the proposed techniques by introducing KubeHound, an extensible
      prototype tool for automatically detecting security smells in microservice applications,
      and which already features a selected subset of the discussed analyses. We finally
      show that KubeHound can effectively detect instances of security smells in microservice
      applications by means of controlled experiments and by applying it to existing,
      third-party applications.", "venue": "Future Internet", "year": 2023, "referenceCount":
      11, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/1999-5903/15/7/228/pdf?version=1687932243",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-06-26", "journal": {"name": "Future Internet", "pages":
      "228", "volume": "15"}, "citationStyles": {"bibtex": "@Article{Dell\u2019Immagine2023KubeHoundDM,\n
      author = {Giorgio Dell\u2019Immagine and J. Soldani and Antonio Brogi},\n booktitle
      = {Future Internet},\n journal = {Future Internet},\n pages = {228},\n title
      = {KubeHound: Detecting Microservices'' Security Smells in Kubernetes Deployments},\n
      volume = {15},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2222818753",
      "name": "Giorgio Dell\u2019Immagine"}, {"authorId": "2265546", "name": "J. Soldani"},
      {"authorId": "1787701", "name": "Antonio Brogi"}]}, {"paperId": "3021377463ef6e2829cf68023ec42bdc706f8071",
      "externalIds": {"MAG": "3081607228", "DBLP": "conf/sose/AmbrosinoFCV20", "DOI":
      "10.1109/SOSE49046.2020.00014", "CorpusId": 221473259}, "corpusId": 221473259,
      "publicationVenue": {"id": "a59db0cb-8287-4db4-9378-0eb4c692f830", "name": "International
      Symposium on Service Oriented Software Engineering", "type": "conference", "alternate_names":
      ["IEEE International Conference on System of Systems Engineering", "Int Symp
      Serv Oriented Softw Eng", "International Conference on System of Systems Engineering",
      "SoSE", "Service Oriented Software Engineering", "Serv Oriented Softw Eng",
      "Int Conf Syst Syst Eng", "IEEE Int Conf Syst Syst Eng", "SOSE"]}, "url": "https://www.semanticscholar.org/paper/3021377463ef6e2829cf68023ec42bdc706f8071",
      "title": "Container Mapping and its Impact on Performance in Containerized Cloud
      Environments", "abstract": "The past few years have witnessed many software
      companies refactoring their monolithic applications into microservices to take
      advantage of containers in Cloud-native and DevOps-driven environments. Modern
      Cloud environments achieve high levels of scalability, flexibility, availability
      and business agility by combining two different kinds of virtualization: virtual
      machines and containers. The deployment of complex applications in such environments
      should be done by taking into account the interactions that may arise from the
      overlapping of these two different levels of virtualization. In this paper,
      we first describe a preliminary evaluation of a containerized application that
      has been obtained by refactoring a monolithic application into microservices.
      The application was deployed in a private Cloud system that relies on Kubernetes,
      which is a cluster management software for Docker containers that have been
      deployed on top of OpenStack-managed KVM virtual machines. Subsequently, in
      order to systematically investigate the possible interactions that can be produced
      when multiple containers running different kinds of workloads are activated
      on top of virtual machines, we present and analyze the results obtained by running
      different benchmarks in a testbed setup. From the analysis of the benchmark
      results, we derive some guidelines that should be taken into account by container
      schedulers when container orchestration platforms, such as Kubernetes, are deployed
      on top of a virtualized IaaS layer.", "venue": "International Symposium on Service
      Oriented Software Engineering", "year": 2020, "referenceCount": 20, "citationCount":
      3, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2020-08-01", "journal":
      {"name": "2020 IEEE International Conference on Service Oriented Systems Engineering
      (SOSE)", "pages": "57-64"}, "citationStyles": {"bibtex": "@Article{Ambrosino2020ContainerMA,\n
      author = {G. Ambrosino and Giovanni B. Fioccola and R. Canonico and G. Ventre},\n
      booktitle = {International Symposium on Service Oriented Software Engineering},\n
      journal = {2020 IEEE International Conference on Service Oriented Systems Engineering
      (SOSE)},\n pages = {57-64},\n title = {Container Mapping and its Impact on Performance
      in Containerized Cloud Environments},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "1931738664", "name": "G. Ambrosino"}, {"authorId": "2116593", "name": "Giovanni
      B. Fioccola"}, {"authorId": "1741210", "name": "R. Canonico"}, {"authorId":
      "2431747", "name": "G. Ventre"}]}, {"paperId": "303d53c02377e3226ce0cf55523a4970184d6f6e",
      "externalIds": {"DBLP": "conf/lanman/FurusawaAON22", "DOI": "10.1109/lanman54755.2022.9820181",
      "CorpusId": 250462761}, "corpusId": 250462761, "publicationVenue": {"id": "4539abfb-20e2-438c-a6d0-61dd915da9df",
      "name": "IEEE Workshop on Local and Metropolitan Area Networks", "type": "conference",
      "alternate_names": ["Workshop Local Metrop Area Netw", "Workshop on Local and
      Metropolitan Area Networks", "IEEE Workshop Local  Metrop Area Netw", "LANMAN",
      "IEEE Workshop on Local & Metropolitan Area Networks", "IEEE Workshop Local
      Metrop Area Netw"], "issn": "1944-0375", "alternate_issns": ["1944-0367"], "url":
      "https://ieeexplore.ieee.org/Xplore/home.jsp", "alternate_urls": ["http://www.ieee-lanman.org/"]},
      "url": "https://www.semanticscholar.org/paper/303d53c02377e3226ce0cf55523a4970184d6f6e",
      "title": "Service Mesh Controller for Cooperative Load Balancing among Neighboring
      Edge Servers", "abstract": "Edge computing for connected vehicles is expected
      to become a reality. Compared to public clouds, the computing resources available
      on individual edge servers are limited: therefore, dynamically allocating computing
      resources as needed based on load is effective for the efficient use of edge
      server resources, and the auto-scale functionality using containers and Kubernetes
      is widely used. However, if the edge servers are overloaded when requests exceed
      their maximum processing capacity, long response delays and service outages
      may occur. Cooperative load balancing among neighboring edge servers is known
      as a method to prevent edge servers from overload, but standard Kubernetes does
      not have a control function based on server location or distance between servers,
      making it difficult to implement this. This paper proposes a service mesh controller
      to achieve cooperative load balancing among neighboring edge servers in an environment
      where container execution infrastructure controlled by Kubernetes runs on edge
      servers. Experimental results show that the proposed method with the service
      mesh controller reduces the median of response time by 96.3% compared with a
      conventional method without load balancing while also preventing overloads.",
      "venue": "IEEE Workshop on Local and Metropolitan Area Networks", "year": 2022,
      "referenceCount": 5, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-07-11", "journal":
      {"name": "2022 IEEE International Symposium on Local and Metropolitan Area Networks
      (LANMAN)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Furusawa2022ServiceMC,\n
      author = {Toru Furusawa and Hiroshi Abe and Kazuya Okada and A. Nakao},\n booktitle
      = {IEEE Workshop on Local and Metropolitan Area Networks},\n journal = {2022
      IEEE International Symposium on Local and Metropolitan Area Networks (LANMAN)},\n
      pages = {1-6},\n title = {Service Mesh Controller for Cooperative Load Balancing
      among Neighboring Edge Servers},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2069980286", "name": "Toru Furusawa"}, {"authorId": "2069102552", "name": "Hiroshi
      Abe"}, {"authorId": "1926799", "name": "Kazuya Okada"}, {"authorId": "3303067",
      "name": "A. Nakao"}]}, {"paperId": "304935aef59d535238d48d935280aafe4a53ff68",
      "externalIds": {"ArXiv": "2109.11067", "DBLP": "journals/corr/abs-2109-11067",
      "CorpusId": 237605550}, "corpusId": 237605550, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/304935aef59d535238d48d935280aafe4a53ff68",
      "title": "Serving DNN Models with Multi-Instance GPUs: A Case of the Reconfigurable
      Machine Scheduling Problem", "abstract": "Multi-Instance GPU (MIG) is a new
      feature introduced by NVIDIA A100 GPUs that partitions one physical GPU into
      multiple GPU instances. With MIG, A100 can be the most cost-efficient GPU ever
      for serving Deep Neural Networks (DNNs). However, discovering the most efficient
      GPU partitions is challenging. The underlying problem is NP-hard; moreover,
      it is a new abstract problem, which we define as the Reconfigurable Machine
      Scheduling Problem (RMS). This paper studies serving DNNs with MIG, a new case
      of RMS. We further propose a solution, MIG-serving. MIG- serving is an algorithm
      pipeline that blends a variety of newly designed algorithms and customized classic
      algorithms, including a heuristic greedy algorithm, Genetic Algorithm (GA),
      and Monte Carlo Tree Search algorithm (MCTS). We implement MIG-serving on Kubernetes.
      Our experiments show that compared to using A100 as-is, MIG-serving can save
      up to 40% of GPUs while providing the same throughput.", "venue": "arXiv.org",
      "year": 2021, "referenceCount": 38, "citationCount": 15, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-09-18", "journal": {"name": "ArXiv", "volume": "abs/2109.11067"}, "citationStyles":
      {"bibtex": "@Article{Tan2021ServingDM,\n author = {Cheng Tan and Zhichao Li
      and Jian Zhang and Yunyin Cao and Sikai Qi and Zherui Liu and Yibo Zhu and Chuanxiong
      Guo},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {Serving DNN
      Models with Multi-Instance GPUs: A Case of the Reconfigurable Machine Scheduling
      Problem},\n volume = {abs/2109.11067},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2111727818", "name": "Cheng Tan"}, {"authorId": "2109661586", "name": "Zhichao
      Li"}, {"authorId": "2151813176", "name": "Jian Zhang"}, {"authorId": "2019914177",
      "name": "Yunyin Cao"}, {"authorId": "122730812", "name": "Sikai Qi"}, {"authorId":
      "70995333", "name": "Zherui Liu"}, {"authorId": "2438403", "name": "Yibo Zhu"},
      {"authorId": "145207202", "name": "Chuanxiong Guo"}]}, {"paperId": "3092afc3ae50f33c58bb300e6112139fd680e1cf",
      "externalIds": {"DBLP": "conf/iccd/Wen0LDAVLDW23", "DOI": "10.1109/ICCD58817.2023.00041",
      "CorpusId": 266494950}, "corpusId": 266494950, "publicationVenue": {"id": "77bd93b1-91df-4192-9b10-d7698cca4768",
      "name": "ICCD", "type": "journal", "alternate_names": ["International Conference
      on Computer Design", "Int Conf Comput Des", "CDES"], "issn": "2622-5611", "url":
      "http://iccd.asia/ojs/index.php/jiccd/index", "alternate_urls": ["http://www.wikicfp.com/cfp/program?id=1304"]},
      "url": "https://www.semanticscholar.org/paper/3092afc3ae50f33c58bb300e6112139fd680e1cf",
      "title": "K8sES: Optimizing Kubernetes with Enhanced Storage Service-Level Objectives",
      "abstract": "Kubernetes (k8s) is a system for managing containerized applications
      across multiple hosts. It offers automatic deployment, maintenance, scaling,
      and resource management for applications. Applications in k8s usually have different
      storage requirements in the form of service-level objectives (SLOs). However,
      the current k8s storage management has several limitations which cause explicit
      performance and cost overhead. K8s administrators have to configure storage
      in advance manually, and users must know configurations and capabilities of
      provided storage. Users'' storage SLOs can be easily violated in k8s.In this
      paper, we design and implement k8s Enhanced Storage (k8sES) which efficiently
      supports applications with various storage SLOs along with all other requirements
      in the Kubernetes environment. We design and incorporate storage scheduling
      as part of the node scheduling process in k8s. Applications will be scheduled
      onto the correct nodes and storage without intervention from either users or
      administrators. Proper storage resources will be dynamically carved based on
      users'' storage SLOs. In addition, we provide a tool to monitor the I/O activities
      of both applications and storage devices in k8sES. The evaluation shows that
      k8sES can better meet users'' storage SLOs along with other requirements. Also,
      k8sES can achieve higher resource utilization efficiency with overhead similar
      to that of the current k8s.", "venue": "ICCD", "year": 2023, "referenceCount":
      32, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2023-11-06",
      "journal": {"name": "2023 IEEE 41st International Conference on Computer Design
      (ICCD)", "pages": "214-222"}, "citationStyles": {"bibtex": "@Article{Wen2023K8sESOK,\n
      author = {Hao Wen and Zhichao Cao and Bingzhe Li and David H.C. Du and Ayman
      Abouelwafa and Doug Voigt and Shiyong Liu and Jim Diehl and Fenggang Wu},\n
      booktitle = {ICCD},\n journal = {2023 IEEE 41st International Conference on
      Computer Design (ICCD)},\n pages = {214-222},\n title = {K8sES: Optimizing Kubernetes
      with Enhanced Storage Service-Level Objectives},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2075348460", "name": "Hao Wen"}, {"authorId": "47060660", "name":
      "Zhichao Cao"}, {"authorId": "2276175045", "name": "Bingzhe Li"}, {"authorId":
      "2275977989", "name": "David H.C. Du"}, {"authorId": "2276026463", "name": "Ayman
      Abouelwafa"}, {"authorId": "2275871312", "name": "Doug Voigt"}, {"authorId":
      "2276025291", "name": "Shiyong Liu"}, {"authorId": "31664621", "name": "Jim
      Diehl"}, {"authorId": "2033983", "name": "Fenggang Wu"}]}, {"paperId": "3093b36303a7ce055227453fe69a26568dd40263",
      "externalIds": {"MAG": "2253172484", "DOI": "10.14795/J.V2I4.124", "CorpusId":
      74599231}, "corpusId": 74599231, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3093b36303a7ce055227453fe69a26568dd40263",
      "title": "INTERTEXTUALITY IN THE DEATH OF A PILOT: THE KUBERNETES ARISTOS IN
      LUCIAN\u2019S VERAE HISTORIAE.", "abstract": "In Lucian\u2019s Verae Historiae
      , Lucian ensures the success of his voyage by providing the very best supplies
      and equipment for his men. As part of his preparation he hires on the best pilot
      that money could buy, this pilot is only heard from at one other point in the
      narrative, at his death in the belly of the sea monster. This paper examines
      the intertextual context of the pilot\u2019s death and how Lucian uses it to
      further the juxtaposition of himself with that greatest of liars, Odysseus.",
      "venue": "", "year": 2015, "referenceCount": 7, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://jaha.org.ro/index.php/JAHA/article/download/124/112",
      "status": "GOLD"}, "fieldsOfStudy": ["Medicine"], "s2FieldsOfStudy": [{"category":
      "Medicine", "source": "external"}, {"category": "History", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2015-12-30", "journal": {"name":
      "Journal of the American Heart Association", "volume": "2"}, "citationStyles":
      {"bibtex": "@Article{Newman2015INTERTEXTUALITYIT,\n author = {Nicholas D. Newman},\n
      journal = {Journal of the American Heart Association},\n title = {INTERTEXTUALITY
      IN THE DEATH OF A PILOT: THE KUBERNETES ARISTOS IN LUCIAN\u2019S VERAE HISTORIAE.},\n
      volume = {2},\n year = {2015}\n}\n"}, "authors": [{"authorId": "145312692",
      "name": "Nicholas D. Newman"}]}, {"paperId": "30d97c565b07384995d81cfd6ca259b8163f40c2",
      "externalIds": {"DOI": "10.55524/ijirem.2023.10.6.6", "CorpusId": 266342507},
      "corpusId": 266342507, "publicationVenue": {"id": "173b8bef-38cf-44f6-89a0-bd1cabce1c6e",
      "name": "International Journal of Innovative Research in Engineering & Management",
      "type": "journal", "alternate_names": ["Int J Innov Res Eng  Manag"], "issn":
      "2350-0557", "url": "http://www.ijirem.org/"}, "url": "https://www.semanticscholar.org/paper/30d97c565b07384995d81cfd6ca259b8163f40c2",
      "title": "Efficient Resource Utilization in Kubernetes: A Review of Load Balancing
      Solutions", "abstract": "Modern distributed systems face the challenge of efficiently
      distributing workloads across nodes to ensure optimal resource utilization,
      high avail-ability, and performance. In this context, Kubernetes, an open-source
      container orchestration engine, plays a pivotal role in automating deployment,
      scaling, and management of containerized applications. This paper explores the
      landscape of load balancing strategies within Kubernetes, aiming to provide
      a comprehensive overview of existing techniques, challenges, and best practices.
      The paper delves into the dynamic nature of Kubernetes environments, where applications
      scale dynamically, and demand for resources fluctuates. We review various load
      balancing approaches, including those based on traffic, resource-aware algorithms,
      and affinity policies. Special attention is given to the unique characteristics
      of containerized workloads and their impact on load balancing decisions. In
      this paper the implications of load balancing on the scalability and performance
      of applications deployed in Kubernetes clusters. It explores the trade-offs
      between different strategies, considering factors such as response time, throughput,
      and the adapt-ability to varying workloads. As cloud-native architectures continue
      to evolve, understanding and addressing the intricacies of load balancing in
      dynamic con-tainer orchestration environments become increasingly crucial. In
      this paper we had consolidated the current state of knowledge on load balancing
      in Kubernetes, providing researchers and practitioners with valuable insights
      and a foundation for further advancements in the quest for efficient, scalable,
      and resilient distrib-uted systems.", "venue": "International Journal of Innovative
      Research in Engineering & Management", "year": 2023, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Review"], "publicationDate": "2023-12-01",
      "journal": {"name": "International Journal of Innovative Research in Engineering
      and Management"}, "citationStyles": {"bibtex": "@Article{Vasireddy2023EfficientRU,\n
      author = {Indrani Vasireddy and Prathima Kandi and SreeRamya Gandu},\n booktitle
      = {International Journal of Innovative Research in Engineering & Management},\n
      journal = {International Journal of Innovative Research in Engineering and Management},\n
      title = {Efficient Resource Utilization in Kubernetes: A Review of Load Balancing
      Solutions},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2274994346", "name":
      "Indrani Vasireddy"}, {"authorId": "2275001519", "name": "Prathima Kandi"},
      {"authorId": "2274997471", "name": "SreeRamya Gandu"}]}, {"paperId": "30de4b6fc1d8e6694e33193f066d6f086f27b1e0",
      "externalIds": {"MAG": "2943527539", "CorpusId": 155312573}, "corpusId": 155312573,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/30de4b6fc1d8e6694e33193f066d6f086f27b1e0",
      "title": "Peer-to-peer E-transaction system using blockchain", "abstract": "We
      create a simple transaction system with Blockchain as the backbone, while making
      use of Solidity, Node.js, Python and the Kubernetes framework. The resulting
      system is capable of mining currency, creating wallets and making transactions.",
      "venue": "", "year": 2019, "referenceCount": 6, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2019-03-05", "journal": {"name": "International Journal
      of Advance Research, Ideas and Innovations in Technology", "pages": "24-26",
      "volume": "5"}, "citationStyles": {"bibtex": "@Article{Sundaresan2019PeertopeerES,\n
      author = {R. Sundaresan and G. Rajesh},\n journal = {International Journal of
      Advance Research, Ideas and Innovations in Technology},\n pages = {24-26},\n
      title = {Peer-to-peer E-transaction system using blockchain},\n volume = {5},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "144567646", "name": "R. Sundaresan"},
      {"authorId": "153436225", "name": "G. Rajesh"}]}, {"paperId": "30f44eb497575a5ebb366cb4c03001b18188a8f3",
      "externalIds": {"DBLP": "journals/corr/abs-2211-11487", "ArXiv": "2211.11487",
      "DOI": "10.1109/HPCC-DSS-SmartCity-DependSys57074.2022.00068", "CorpusId": 253734513},
      "corpusId": 253734513, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/30f44eb497575a5ebb366cb4c03001b18188a8f3",
      "title": "Fine-Grained Scheduling for Containerized HPC Workloads in Kubernetes
      Clusters", "abstract": "Containerization technology offers lightweight OS-level
      virtualization, and enables portability, reproducibility, and flexibility by
      packing applications with low performance overhead and low effort to maintain
      and scale them. Moreover, container orchestrators (e.g., Kubernetes) are widely
      used in the Cloud to manage large clusters running many containerized applications.
      However, scheduling policies that consider the performance nuances of containerized
      High Performance Computing (HPC) workloads have not been well-explored yet.
      This paper conducts fine-grained scheduling policies for containerized HPC workloads
      in Kubernetes clusters, focusing especially on partitioning each job into a
      suitable multi-container deployment according to the application profile. We
      implement our scheduling schemes on different layers of management (application
      and infrastructure), so that each component has its own focus and algorithms
      but still collaborates with others. Our results show that our fine-grained scheduling
      policies outperform baseline and baseline with CPU/memory affinity enabled policies,
      reducing the overall response time by 35% and 19%, respectively, and also improving
      the makespan by 34% and 11%, respectively. They also provide better usability
      and flexibility to specify HPC workloads than other comparable HPC Cloud frameworks,
      while providing better scheduling efficiency thanks to their multi-layered approach.",
      "venue": "2022 IEEE 24th Int Conf on High Performance Computing & Communications;
      8th Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int
      Conf on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys)",
      "year": 2022, "referenceCount": 26, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://upcommons.upc.edu/bitstream/2117/386006/3/HPCC_2022__Camera_Ready_.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-11-21", "journal":
      {"name": "2022 IEEE 24th Int Conf on High Performance Computing & Communications;
      8th Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int
      Conf on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys)",
      "pages": "275-284"}, "citationStyles": {"bibtex": "@Article{Liu2022FineGrainedSF,\n
      author = {Peini Liu and Jordi Guitart},\n booktitle = {2022 IEEE 24th Int Conf
      on High Performance Computing & Communications; 8th Int Conf on Data Science
      & Systems; 20th Int Conf on Smart City; 8th Int Conf on Dependability in Sensor,
      Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys)},\n journal
      = {2022 IEEE 24th Int Conf on High Performance Computing & Communications; 8th
      Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int Conf
      on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys)},\n
      pages = {275-284},\n title = {Fine-Grained Scheduling for Containerized HPC
      Workloads in Kubernetes Clusters},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2692262", "name": "Peini Liu"}, {"authorId": "143814317", "name": "Jordi Guitart"}]},
      {"paperId": "30f93976427e3bddc7747f2fa8d7d3b0a6f6fdcd", "externalIds": {"MAG":
      "3045785412", "DBLP": "conf/iwcmc/JavedMF20", "DOI": "10.1109/IWCMC48107.2020.9148269",
      "CorpusId": 220886878}, "corpusId": 220886878, "publicationVenue": {"id": "b4b9c2ab-3b92-4da7-a4ae-26c8247300d0",
      "name": "International Conference on Wireless Communications and Mobile Computing",
      "type": "conference", "alternate_names": ["IWCMC", "Int Conf Wirel Commun Mob
      Comput"], "url": "http://iwcmc.com/"}, "url": "https://www.semanticscholar.org/paper/30f93976427e3bddc7747f2fa8d7d3b0a6f6fdcd",
      "title": "Edge Computing-based Fault-Tolerant Framework: A Case Study on Vehicular
      Networks", "abstract": "With the evolution of vehicular networks, the Intelligent
      Transportation System (ITS) has emerged as a promising technology for autonomous
      road transport. For a successful deployment of ITS, security and reliability
      are the most challenging factors to be tackled to ensure Vehicle-to-Infrastructure
      (V2I) and Infrastructure-to-Infrastructure (I2I) communications. Due to unreliable
      communications in vehicular networks, implementing fault-tolerant techniques
      for the Road Side Unit (RSU) infrastructure is an imperial need. Within this
      context, the contributions of this paper are twofold: (i) we propose a distributed
      fault-tolerant framework for V2I and I2I communications based on edge computing
      to resolve hardware- and network connectivity-based failures. The fault tolerance
      issue is addressed by employing open messaging standards as a subscription-based
      data replication solution at the edge. We also adopt Kubernetes for the fault-tolerant
      management, combined with high-availability mechanism, allowing automatic reconfiguration
      of the data processing pipeline; and (ii) we implement a demonstrator system
      for vehicular networks-based smart mobility to assess fault tolerance capabilities.
      The experimental results show that our proposed framework dynamically tolerates
      RSU-related failures during the vehicular communication phase.", "venue": "International
      Conference on Wireless Communications and Mobile Computing", "year": 2020, "referenceCount":
      22, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://aaltodoc.aalto.fi:443/bitstream/123456789/114001/1/isbn9789526407579.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2020-06-01", "journal": {"name": "2020
      International Wireless Communications and Mobile Computing (IWCMC)", "pages":
      "1541-1548"}, "citationStyles": {"bibtex": "@Article{Javed2020EdgeCF,\n author
      = {Asad Javed and A. Malhi and Kary Fr\u00e4mling},\n booktitle = {International
      Conference on Wireless Communications and Mobile Computing},\n journal = {2020
      International Wireless Communications and Mobile Computing (IWCMC)},\n pages
      = {1541-1548},\n title = {Edge Computing-based Fault-Tolerant Framework: A Case
      Study on Vehicular Networks},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "49172907", "name": "Asad Javed"}, {"authorId": "2718975", "name": "A. Malhi"},
      {"authorId": "31330786", "name": "Kary Fr\u00e4mling"}]}, {"paperId": "310468539eea8535a3138f3e0c25dacce573fad0",
      "externalIds": {"MAG": "2942362554", "CorpusId": 150184446}, "corpusId": 150184446,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/310468539eea8535a3138f3e0c25dacce573fad0",
      "title": "Container orchestration environments for M&S", "abstract": "Deployment
      and execution of HLA federates in Docker containers offers many benefits. However,
      managing the execution of multiple HLA federate containers to run a complete
      HLA federation across a set of compute nodes in a local area network or in a
      cloud environment can be time consuming and error prone. A small HLA federation
      can easily consist of ten or more containers and it quickly becomes impossible
      to oversee these containers without proper tools to orchestrate them. Tools
      to support the orchestration of containers exist and reduce the effort required
      to configure, coordinate, and manage containers. Many of these tools are open
      source, are freely available and evolve quickly. The most popular ones include
      Docker Native tools from Docker Inc. and Kubernetes from Google. In an earlier
      SISO paper (16F-SIW-031), guidelines and best practices for containerizing HLA
      applications were presented. This paper discusses the topic of container orchestration
      environments for M&S, in particular for containerized HLA applications. Topics
      covered in this paper include the following: what is required to effectively
      deploy a HLA federation via an orchestration tool? What orchestration solutions
      are available and what benefits/challenges do each provide? By the end of this
      paper the reader should have a good idea of what is available, what is needed,
      and how to use orchestration tools to field a HLA federation. This paper provides
      orchestration solutions that can be equally well used for simulation technology
      other than the HLA. \u00c2\u00a9 Winter Simulation Innovation Workshop, SIW
      2018. All rights reserved.", "venue": "", "year": 2018, "referenceCount": 0,
      "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Berg2018ContainerOE,\n author
      = {T. V. D. Berg and A. Cramp},\n title = {Container orchestration environments
      for M&S},\n year = {2018}\n}\n"}, "authors": [{"authorId": "145645884", "name":
      "T. V. D. Berg"}, {"authorId": "80674349", "name": "A. Cramp"}]}, {"paperId":
      "310524cfb26eac75daf1710207ed96bd0df0320a", "externalIds": {"DBLP": "conf/netsoft/KuranageNBFB22",
      "DOI": "10.1109/NetSoft54395.2022.9844056", "CorpusId": 251323194}, "corpusId":
      251323194, "publicationVenue": {"id": "8d051ed1-e691-49d8-8a57-d7b4a76c4352",
      "name": "IEEE Conference on Network Softwarization", "type": "conference", "alternate_names":
      ["IEEE Conf Netw Softwarization", "NetSoft"]}, "url": "https://www.semanticscholar.org/paper/310524cfb26eac75daf1710207ed96bd0df0320a",
      "title": "Deep learning based resource forecasting for 5G core network scaling
      in Kubernetes environment", "abstract": "5G networks are moving towards cloudification
      which gives the telecom operators the flexibility to manage their networks efficiently
      and cost-effectively. Scaling network functions on demand is one of the advantages
      of using container-based deployment in cloud environments. With the continuously
      changing network traffic patterns due to the emerging new 5G use cases, there
      is a need for novel automated network resources management approach in cloud-native
      environments. Considering the scale and the complexity of the 5G network, managing
      resources is a challenge. To address this, we propose a deep learning-based
      resource usage forecasting approach that provides useful insights for decision-making
      in containerized Network Function (CNF) scaling for the Kubernetes environment.
      Kubernetes is a container orchestration tool that becoming popular among Telecom
      operators due to its simplicity. We implemented a testbed in the Kubernetes
      environment to generate a dataset closer to real-world data for deep learning
      model training and evaluated the best-performing model for resource usage forecasting.
      We benchmarked our approach against another deep learning-based resource usage
      forecasting approach which proved our method can provide a highly accurate forecast
      for further horizons.", "venue": "IEEE Conference on Network Softwarization",
      "year": 2022, "referenceCount": 8, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-06-27", "journal": {"name": "2022 IEEE 8th International
      Conference on Network Softwarization (NetSoft)", "pages": "139-144"}, "citationStyles":
      {"bibtex": "@Article{Kuranage2022DeepLB,\n author = {Menuka Perera Jayasuriya
      Kuranage and L. Nuaymi and A. Bouabdallah and Thomas Ferrandiz and P. Bertin},\n
      booktitle = {IEEE Conference on Network Softwarization},\n journal = {2022 IEEE
      8th International Conference on Network Softwarization (NetSoft)},\n pages =
      {139-144},\n title = {Deep learning based resource forecasting for 5G core network
      scaling in Kubernetes environment},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "1646864689", "name": "Menuka Perera Jayasuriya Kuranage"}, {"authorId": "2907264",
      "name": "L. Nuaymi"}, {"authorId": "2712903", "name": "A. Bouabdallah"}, {"authorId":
      "2208856", "name": "Thomas Ferrandiz"}, {"authorId": "40621697", "name": "P.
      Bertin"}]}, {"paperId": "3132804b0b67f166b8974950d24624381f7dd7c5", "externalIds":
      {"DOI": "10.1088/1757-899X/1042/1/012013", "CorpusId": 235281897}, "corpusId":
      235281897, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3132804b0b67f166b8974950d24624381f7dd7c5",
      "title": "A contingent review on cloud computing trends predicting viable possibilities
      for future of computing", "abstract": "Cloud computing was maybe the wildest
      stage in innovation as well as business press all through 2019. This\u2019s
      absolutely nothing unexpected as the cloud sector has been creating quickly
      throughout the final several years. Synergy Research by Group a short while
      ago detailed a thirty-seven % by and huge development year-over-year within
      the public cloud. They as well bear in mind it\u2019s taken just 2 years for
      the open PaaS and IaaS marketplaces to twofold in size as well as their conjecture
      provides them multiplying once again within the following 3 years. As year that
      is New begins with targets in the lives of ours, likewise, for that IT business
      additionally constantly accompanies an objective in Cloud Computing. Cloud is
      cost-productive, robust, and scalable. Cloud innovation is beneficial for program
      development, using the cloud for specific application development has to be
      common. We\u2019re just beginning to view the improvement of this concept into
      a transformation. Cloud computing changes the fashion in that we consider information,
      the manner where businesses consider the operations of theirs as well as the
      manner where engineers consider building. Let us take a look at several of the
      cloud computing trends which will take place in deep 2020 in terms of serverless
      computing, omni cloud, Quantum computing. Kubernetes, digital natives and here
      try to predict the future scope of computing in terms of compute, network, store
      and mark analytics.", "venue": "IOP Conference Series: Materials Science and
      Engineering", "year": 2021, "referenceCount": 14, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Physics"],
      "s2FieldsOfStudy": [{"category": "Physics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Business", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference", "Review"], "publicationDate":
      "2021-02-04", "journal": {"name": "IOP Conference Series: Materials Science
      and Engineering", "volume": "1042"}, "citationStyles": {"bibtex": "@Conference{Kumar2021ACR,\n
      author = {Ravula Arun Kumar and V. Kambalapally},\n booktitle = {IOP Conference
      Series: Materials Science and Engineering},\n journal = {IOP Conference Series:
      Materials Science and Engineering},\n title = {A contingent review on cloud
      computing trends predicting viable possibilities for future of computing},\n
      volume = {1042},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2109227417",
      "name": "Ravula Arun Kumar"}, {"authorId": "87095560", "name": "V. Kambalapally"}]},
      {"paperId": "3133acc13fd473e8d78d7578ea51e32808d24dec", "externalIds": {"DOI":
      "10.5753/errc.2021.18544", "CorpusId": 246071057}, "corpusId": 246071057, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/3133acc13fd473e8d78d7578ea51e32808d24dec",
      "title": "Uma an\u00e1lise das vulnerabilidades de seguran\u00e7a do Kubernetes",
      "abstract": "Os orquestradores de cont\u00eaineres v\u00eam ganhando mais utilizadores
      a cada ano, sendo utilizado nas infraestrutura de pequenas e grandes empresas.
      Atualmente, o Kubernetes \u00e9 o orquestrador mais utilizado e apresenta uma
      arquitetura de gerenciador e trabalhadores. O uso de diversos recursos normalmente
      aumenta a superf\u00edcie de ataque, sendo assim, \u00e9 poss\u00edvel explorar
      vulnerabilidades para atacar o cluster. Este artigo tem por objetivo fazer uma
      an\u00e1lise das principais vulnerabilidades do Kubernetes, relacionando as
      vulnerabilidades e os componentes de um sistema de orquestra\u00e7\u00e3o.",
      "venue": "Anais da XIX Escola Regional de Redes de Computadores (ERRC 2021)",
      "year": 2021, "referenceCount": 17, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [], "publicationTypes": null, "publicationDate": "2021-10-27", "journal": {"name":
      "Anais da XIX Escola Regional de Redes de Computadores (ERRC 2021)"}, "citationStyles":
      {"bibtex": "@Article{Jensen2021UmaAD,\n author = {Nikolas Jensen and C. Miers},\n
      booktitle = {Anais da XIX Escola Regional de Redes de Computadores (ERRC 2021)},\n
      journal = {Anais da XIX Escola Regional de Redes de Computadores (ERRC 2021)},\n
      title = {Uma an\u00e1lise das vulnerabilidades de seguran\u00e7a do Kubernetes},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2100558197", "name": "Nikolas
      Jensen"}, {"authorId": "2035629156", "name": "C. Miers"}]}, {"paperId": "3134540b11b1e3a4f970bea105513e1dc68be642",
      "externalIds": {"DBLP": "conf/supercomputer/SadekMBTGFS23", "DOI": "10.1007/978-3-031-40843-4_43",
      "CorpusId": 261344784}, "corpusId": 261344784, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/3134540b11b1e3a4f970bea105513e1dc68be642",
      "title": "Open OnDemand Connector for Amazon Elastic Kubernetes Service (EKS)",
      "abstract": null, "venue": "ISC Workshops", "year": 2023, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "577-586"}, "citationStyles": {"bibtex": "@Article{Sadek2023OpenOC,\n
      author = {Faras Sadek and Milson Munakami and Arthur Barrett and Vesna Tan and
      Jeremy Guillette and Robert M. Freeman and Raminderjeet Singh},\n booktitle
      = {ISC Workshops},\n pages = {577-586},\n title = {Open OnDemand Connector for
      Amazon Elastic Kubernetes Service (EKS)},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2235886097", "name": "Faras Sadek"}, {"authorId": "3255915",
      "name": "Milson Munakami"}, {"authorId": "2235886613", "name": "Arthur Barrett"},
      {"authorId": "2235885371", "name": "Vesna Tan"}, {"authorId": "51195658", "name":
      "Jeremy Guillette"}, {"authorId": "1398512253", "name": "Robert M. Freeman"},
      {"authorId": "8107308", "name": "Raminderjeet Singh"}]}, {"paperId": "315a4f8206c2b1672d17d018b1366cf7a944174c",
      "externalIds": {"DBLP": "conf/acsos/RossiCP20", "MAG": "3089345884", "DOI":
      "10.1109/ACSOS49614.2020.00023", "CorpusId": 221845289}, "corpusId": 221845289,
      "publicationVenue": {"id": "ecc3036c-4c51-45be-8b2e-f5bb0ea3db40", "name": "International
      Conference on Autonomic Computing and Self-Organizing Systems", "type": "conference",
      "alternate_names": ["ACSOS", "Int Conf Auton Comput Self-organizing Syst"]},
      "url": "https://www.semanticscholar.org/paper/315a4f8206c2b1672d17d018b1366cf7a944174c",
      "title": "Hierarchical Scaling of Microservices in Kubernetes", "abstract":
      "In the last years, we have seen the increasing adoption of the microservice
      architectural style where applications satisfy user requests by invoking a set
      of independently deployable services. Software containers and orchestration
      tools, such as Kubernetes, have simplified the development and management of
      microservices. To manage containers\u2019 horizontal elasticity, Kubernetes
      uses a decentralized threshold-based policy that requires to set thresholds
      on system-oriented metrics (i.e., CPU utilization). This might not be well-suited
      to scale latency-sensitive applications, which need to express requirements
      in terms of response time. Moreover, being a fully decentralized solution, it
      may lead to frequent and uncoordinated application reconfigurations.In this
      paper, we present me-kube (Multi-level Elastic Kubernetes), a Kubernetes extension
      that introduces a hierarchical architecture for controlling the elasticity of
      microservice-based applications. At higher level, a centralized per-application
      component coordinates the run-time adaptation of subordinated distributed components,
      which, in turn, locally control the adaptation of each microservice. Then, we
      propose novel proactive and reactive hierarchical control policies, based on
      queuing theory. To show that me-kube provides general mechanisms, we also integrate
      reinforcement learning-based scaling policies. Using me-kube, we perform a large
      set of experiments, aimed to show the advantages of a hierarchical control over
      the default Kubernetes autoscaler.", "venue": "International Conference on Autonomic
      Computing and Self-Organizing Systems", "year": 2020, "referenceCount": 22,
      "citationCount": 34, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2020-08-01",
      "journal": {"name": "2020 IEEE International Conference on Autonomic Computing
      and Self-Organizing Systems (ACSOS)", "pages": "28-37"}, "citationStyles": {"bibtex":
      "@Article{Rossi2020HierarchicalSO,\n author = {Fabiana Rossi and V. Cardellini
      and F. L. Presti},\n booktitle = {International Conference on Autonomic Computing
      and Self-Organizing Systems},\n journal = {2020 IEEE International Conference
      on Autonomic Computing and Self-Organizing Systems (ACSOS)},\n pages = {28-37},\n
      title = {Hierarchical Scaling of Microservices in Kubernetes},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "152419560", "name": "Fabiana Rossi"}, {"authorId":
      "1706698", "name": "V. Cardellini"}, {"authorId": "1685545", "name": "F. L.
      Presti"}]}, {"paperId": "3173cfa044fa58b9a35acd37299875bccacce688", "externalIds":
      {"CorpusId": 251885863}, "corpusId": 251885863, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/3173cfa044fa58b9a35acd37299875bccacce688",
      "title": "NUM CONTEXTO DE IOT EXPLORING KUBERNETES AND DEVOPS IN AN IOT CONTEXT",
      "abstract": "Containerized solutions and container orchestration technologies
      have recently been of great interest to organizations as a way of accelerating
      both software development and delivery processes. However, adopting these is
      a rather complex shift that may impact an organization and teams that were already
      established. This is where development cultures such as DevOps emerge to ease
      such shift amongst teams, promoting collaboration and automation of development
      and deployment processes throughout. The purpose of the current dissertation
      is to illustrate the path that led to the use of DevOps and containerization
      as means to support the development and deployment of a proof of concept system,
      Firefighter Sync \u2013 an Internet of Things based solution applied to a firefighting
      monitoring scenario. The goal, besides implementing Firefighter Sync, was to
      propose and deploy a development and operations ecosystem based on DevOps practices
      to achieve a full automation pipeline for both the development and operations
      processes. Firefighter Sync enabled the exploration of such state-of-the-art
      solutions such as Kubernetes to support container-based deployment and Jenkins
      for a fully automated CI/CD pipeline. Firefighter Sync clearly illustrates that
      addressing the development of a system from a DevOps perspective from the very
      beginning, although it requires an accentuated learning curve due to the large
      range of concepts and technologies addressed throughout, has illustrated to
      effectively impact the development process as well as ease the solution for
      future evolution. A good example is the automation process pipeline, that whilst
      allowing an easy integration of new features within a DevOps process \u2013
      implies addressing the development and operations as a whole \u2013 it abstracts
      specific technological concerns turning these transversals to the traditional
      stages from development to deployment.", "venue": "", "year": 2019, "referenceCount":
      34, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{Martins2019NUMCD,\n author
      = {S\u00e9rgio Oliveira Martins and Explorar Kubernetes and E. DevOps and Lu\u00eds
      Guimar\u00e3es OIiveira and I. Dutra and J. M. A. Fernandes and I. Oliveira},\n
      title = {NUM CONTEXTO DE IOT EXPLORING KUBERNETES AND DEVOPS IN AN IOT CONTEXT},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "2183119058", "name": "S\u00e9rgio
      Oliveira Martins"}, {"authorId": "2183120153", "name": "Explorar Kubernetes"},
      {"authorId": "2082744147", "name": "E. DevOps"}, {"authorId": "2183119556",
      "name": "Lu\u00eds Guimar\u00e3es OIiveira"}, {"authorId": "31092126", "name":
      "I. Dutra"}, {"authorId": "2068339552", "name": "J. M. A. Fernandes"}, {"authorId":
      "1750880", "name": "I. Oliveira"}]}, {"paperId": "3181c2e6a6d51dc7b56828b8471e2cf3c8adf25a",
      "externalIds": {"CorpusId": 264509544}, "corpusId": 264509544, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/3181c2e6a6d51dc7b56828b8471e2cf3c8adf25a",
      "title": "Cross Container Attacks: The Bewildered eBPF on Clouds", "abstract":
      "The extended Berkeley Packet Filter (eBPF) provides powerful and flexible kernel
      interfaces to extend the kernel functions for user space programs via running
      bytecode directly in the kernel space. It has been widely used by cloud services
      to enhance container security, network management, and system observability.
      However, we discover that the offensive eBPF that has been extensively discussed
      in Linux hosts can bring new attack surfaces to containers. With eBPF tracing
      features, attackers can break the container\u2019s isolation and attack the
      host, e.g., steal sensitive data, DoS, and even escape the container. In this
      paper, we study the eBPF-based cross container attacks and reveal their security
      impacts in real world services. With eBPF attacks, we successfully compromise
      five online Jupyter/Interactive Shell services and the Cloud Shell of Google
      Cloud Platform. Furthermore, we find that the Kubernetes services offered by
      three leading cloud vendors can be exploited to launch cross-node attacks after
      the attackers escape the container via eBPF. Specifically, in Al-ibaba\u2019s
      Kubernetes services, attackers can compromise the whole cluster by abusing their
      over-privileged cloud metrics or management Pods. Unfortunately, the eBPF attacks
      on containers are seldom known and can hardly be discovered by existing intrusion
      detection systems. Also, the existing eBPF permission model cannot confine the
      eBPF and ensure secure usage in shared-kernel container environments. To this
      end, we propose a new eBPF permission model to counter the eBPF attacks in containers.",
      "venue": "", "year": null, "referenceCount": 60, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Misc{None,\n author = {Yi He
      and Roland Guo and Xijia Che and Kun Sun and Zhuotao Liu and Ke Xu and Qi Li},\n
      title = {Cross Container Attacks: The Bewildered eBPF on Clouds}\n}\n"}, "authors":
      [{"authorId": "2262088669", "name": "Yi He"}, {"authorId": "2228455529", "name":
      "Roland Guo"}, {"authorId": "2228908895", "name": "Xijia Che"}, {"authorId":
      "2238955070", "name": "Kun Sun"}, {"authorId": "2144264353", "name": "Zhuotao
      Liu"}, {"authorId": "2261908496", "name": "Ke Xu"}, {"authorId": "2237948580",
      "name": "Qi Li"}]}, {"paperId": "31896381d299cea31ed8619fe97ab0b0b338f85f",
      "externalIds": {"DOI": "10.5753/latinoware.2021.19916", "CorpusId": 247549706},
      "corpusId": 247549706, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/31896381d299cea31ed8619fe97ab0b0b338f85f",
      "title": "A scalable distributed system based on microservices for collecting
      pod logs from a Kubernetes cluster", "abstract": "This article presents the
      architecture of a distributed log collection system for Kubernetes clusters.
      Initially, we present the motivation for creating the system. Then, we present
      an overview of the system, consisting of several microservices. Next, we approach
      the implementation of each of the microservices. All system components are free
      and open software. This article is an example of how a distributed system with
      microservices can be heterogeneous in relation to the programming languages
      used.", "venue": "Anais do XVIII Congresso Latino-Americano de Software Livre
      e Tecnologias Abertas (Latinoware 2021)", "year": 2021, "referenceCount": 0,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Review"], "publicationDate": "2021-10-13", "journal":
      {"name": "Anais do XVIII Congresso Latino-Americano de Software Livre e Tecnologias
      Abertas (Latinoware 2021)"}, "citationStyles": {"bibtex": "@Article{Lisboa2021ASD,\n
      author = {Fl\u00e1vio Gomes da Silva Lisboa},\n booktitle = {Anais do XVIII
      Congresso Latino-Americano de Software Livre e Tecnologias Abertas (Latinoware
      2021)},\n journal = {Anais do XVIII Congresso Latino-Americano de Software Livre
      e Tecnologias Abertas (Latinoware 2021)},\n title = {A scalable distributed
      system based on microservices for collecting pod logs from a Kubernetes cluster},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2154694363", "name": "Fl\u00e1vio
      Gomes da Silva Lisboa"}]}, {"paperId": "318c02a489e39c9a9879d31a7c71303f10b59948",
      "externalIds": {"DBLP": "conf/closer/QuintK18", "MAG": "2786180297", "ArXiv":
      "1802.03562", "DOI": "10.5220/0006683804000408", "CorpusId": 3631462}, "corpusId":
      3631462, "publicationVenue": {"id": "229ff272-1128-48a4-94eb-2ea4041eadff",
      "name": "International Conference on Cloud Computing and Services Science",
      "type": "conference", "alternate_names": ["CLOSER", "Int Conf Cloud Comput Serv
      Sci"], "url": "http://closer.scitevents.org/"}, "url": "https://www.semanticscholar.org/paper/318c02a489e39c9a9879d31a7c71303f10b59948",
      "title": "Towards a Lightweight Multi-Cloud DSL for Elastic and Transferable
      Cloud-native Applications", "abstract": "Cloud-native applications are intentionally
      designed for the cloud in order to leverage cloud platform features like horizontal
      scaling and elasticity - benefits coming along with cloud platforms. In addition
      to classical (and very often static) multi-tier deployment scenarios, cloud-native
      applications are typically operated on much more complex but elastic infrastructures.
      Furthermore, there is a trend to use elastic container platforms like Kubernetes,
      Docker Swarm or Apache Mesos. However, especially multi-cloud use cases are
      astonishingly complex to handle. In consequence, cloud-native applications are
      prone to vendor lock-in. Very often TOSCA-based approaches are used to tackle
      this aspect. But, these application topology defining approaches are limited
      in supporting multi-cloud adaption of a cloud-native application at runtime.
      In this paper, we analyzed several approaches to define cloud-native applications
      being multi-cloud transferable at runtime. We have not found an approach that
      fully satisfies all of our requirements. Therefore we introduce a solution proposal
      that separates elastic platform definition from cloud application definition.
      We present first considerations for a domain specific language for application
      definition and demonstrate evaluation results on the platform level showing
      that a cloud-native application can be transferred between different cloud service
      providers like Azure and Google within minutes and without downtime. The evaluation
      covers public and private cloud service infrastructures provided by Amazon Web
      Services, Microsoft Azure, Google Compute Engine and OpenStack.", "venue": "International
      Conference on Cloud Computing and Services Science", "year": 2018, "referenceCount":
      31, "citationCount": 14, "influentialCitationCount": 3, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2018-02-01", "journal":
      {"name": "ArXiv", "volume": "abs/1802.03562"}, "citationStyles": {"bibtex":
      "@Article{Quint2018TowardsAL,\n author = {Peter-Christian Quint and Nane Kratzke},\n
      booktitle = {International Conference on Cloud Computing and Services Science},\n
      journal = {ArXiv},\n title = {Towards a Lightweight Multi-Cloud DSL for Elastic
      and Transferable Cloud-native Applications},\n volume = {abs/1802.03562},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "3442528", "name": "Peter-Christian
      Quint"}, {"authorId": "1730225", "name": "Nane Kratzke"}]}, {"paperId": "318f7b6479b39f2821174333c6c714077b411ea7",
      "externalIds": {"DBLP": "conf/dasc/GalantinoIRM21", "DOI": "10.1109/DASC-PICom-CBDCom-CyberSciTech52372.2021.00055",
      "CorpusId": 237641284}, "corpusId": 237641284, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/318f7b6479b39f2821174333c6c714077b411ea7",
      "title": "RAYGO: Reserve As You GO", "abstract": "The capability to predict
      the precise resource requirements of a microservice-based application is a very
      important problem for cloud services. In fact, the allocation of abundant resources
      guarantees an excellent quality of experience (QoE) for the hosted services,
      but it can translate into unnecessary costs for the cloud customer due to the
      reserved (but unused) resources. On the other side, poor resource provisioning
      may turn out in scarce performance when experiencing an unexpected peak of demand.
      This paper proposes RAYGO, a novel approach for dynamic resource provisioning
      to microservices in Kubernetes that (i) reliefs the customers from the definition
      of appropriate execution boundaries, (ii) ensures the right amount of resources
      at any time, according to the past and the predicted usage, and (iii) operates
      at the application level, acknowledging the dependency between multiple correlated
      microservices.", "venue": "2021 IEEE Intl Conf on Dependable, Autonomic and
      Secure Computing, Intl Conf on Pervasive Intelligence and Computing, Intl Conf
      on Cloud and Big Data Computing, Intl Conf on Cyber Science and Technology Congress
      (DASC/PiCom/CBDCom/CyberSciTech)", "year": 2021, "referenceCount": 15, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-10-01", "journal": {"name": "2021 IEEE Intl Conf on Dependable, Autonomic
      and Secure Computing, Intl Conf on Pervasive Intelligence and Computing, Intl
      Conf on Cloud and Big Data Computing, Intl Conf on Cyber Science and Technology
      Congress (DASC/PiCom/CBDCom/CyberSciTech)", "pages": "269-275"}, "citationStyles":
      {"bibtex": "@Article{Galantino2021RAYGORA,\n author = {S. Galantino and Marco
      Iorio and Fulvio Risso and A. Manzalini},\n booktitle = {2021 IEEE Intl Conf
      on Dependable, Autonomic and Secure Computing, Intl Conf on Pervasive Intelligence
      and Computing, Intl Conf on Cloud and Big Data Computing, Intl Conf on Cyber
      Science and Technology Congress (DASC/PiCom/CBDCom/CyberSciTech)},\n journal
      = {2021 IEEE Intl Conf on Dependable, Autonomic and Secure Computing, Intl Conf
      on Pervasive Intelligence and Computing, Intl Conf on Cloud and Big Data Computing,
      Intl Conf on Cyber Science and Technology Congress (DASC/PiCom/CBDCom/CyberSciTech)},\n
      pages = {269-275},\n title = {RAYGO: Reserve As You GO},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "51512758", "name": "S. Galantino"}, {"authorId": "2054939852",
      "name": "Marco Iorio"}, {"authorId": "2240973101", "name": "Fulvio Risso"},
      {"authorId": "2069729", "name": "A. Manzalini"}]}, {"paperId": "31a53437dd5aae3a66fd669916ba15a270d96d78",
      "externalIds": {"ArXiv": "2210.12218", "DBLP": "journals/corr/abs-2210-12218",
      "DOI": "10.48550/arXiv.2210.12218", "CorpusId": 253098806}, "corpusId": 253098806,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/31a53437dd5aae3a66fd669916ba15a270d96d78",
      "title": "SEIFER: Scalable Edge Inference for Deep Neural Networks", "abstract":
      "Edge inference is becoming ever prevalent through its applications from retail
      to wearable technology. Clusters of networked resource-constrained edge devices
      are becoming common, yet there is no production-ready orchestration system for
      deploying deep learning models over such edge networks which adopts the ro-bustness
      and scalability of the cloud. We present SEIFER, a framework utilizing a standalone
      Kubernetes cluster to partition a given DNN and place these partitions in a
      distributed manner across an edge network, with the goal of maximizing inference
      throughput. The system is node fault-tolerant and automatically updates deployments
      based on updates to the model\u2019s version. We provide a preliminary evaluation
      of a partitioning and placement algorithm that works within this framework,
      and show that we can improve the inference pipeline throughput by 200% by utilizing
      suf\ufb01cient numbers of resource-constrained nodes. We have imple-mented SEIFER
      in open-source software that is publicly available to the research community.",
      "venue": "arXiv.org", "year": 2022, "referenceCount": 10, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/2210.12218", "status": "GREEN"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2022-10-21", "journal": {"name": "ArXiv", "volume": "abs/2210.12218"}, "citationStyles":
      {"bibtex": "@Article{Parthasarathy2022SEIFERSE,\n author = {Arjun Parthasarathy
      and B. Krishnamachari},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title
      = {SEIFER: Scalable Edge Inference for Deep Neural Networks},\n volume = {abs/2210.12218},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2149945872", "name": "Arjun
      Parthasarathy"}, {"authorId": "1701475", "name": "B. Krishnamachari"}]}, {"paperId":
      "321b33e083406ffb5b700f27e692986c2955130a", "externalIds": {"DBLP": "conf/infocom/UllauriGBHVVVNS23",
      "DOI": "10.1109/INFOCOMWKSHPS57453.2023.10225925", "CorpusId": 261371711}, "corpusId":
      261371711, "publicationVenue": {"id": "be267cb9-6411-4126-8b64-4847025171ee",
      "name": "Conference on Computer Communications Workshops", "type": "conference",
      "alternate_names": ["INFOCOM WKSHPS", "Conf Comput Commun Work"]}, "url": "https://www.semanticscholar.org/paper/321b33e083406ffb5b700f27e692986c2955130a",
      "title": "Privacy Preservation in Kubernetes-based Federated Learning: A Networking
      Approach", "abstract": "Federated Learning (FL) is a distributed Machine Learning
      paradigm that allows multiple clients to collaboratively train a model under
      the control of a central server while keeping data locally in edge devices.
      To simplify workload management in FL ecosystems, cloud computing and container-based
      approaches such as Kubernetes (K8s) have been proposed for scalable deployment.
      Nonetheless, K8s can violate fundamental FL privacy principles, e.g., the inherent
      flat networking approach in K8s can potentially allow FL clients to access other
      client or domain resources. The latter poses an open research problem and gap
      in the literature because serious privacy risks can arise from attackers gaining
      access to any client in the FL setup. To address this problem, this paper presents
      a networking approach via network isolation at the link layer level, and authentication
      and data packet encryption at the network layer level. The former allows to
      create secure resource sharing, and the latter is used to protect in-transit
      data. For this purpose, we use a K8s networking operator and a secure network
      protocol suite. The above combination facilitates on-demand link-layer connectivity,
      per-link data source authentication, and confidentiality between FL actors.
      We tested our approach on a network testbed composed of different geo-located
      nodes where FL clients are deployed. Our promising results showcase the feasibility
      of the solution for privacy preservation at the network level in K8s-based FL.",
      "venue": "Conference on Computer Communications Workshops", "year": 2023, "referenceCount":
      20, "citationCount": 1, "influentialCitationCount": 1, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://research-information.bris.ac.uk/files/357963251/Privacy_Preservation_in_Kubernetes_based_Federated_Learning_A_Networking_Approach.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2023-05-20", "journal": {"name": "IEEE INFOCOM
      2023 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)",
      "pages": "1-7"}, "citationStyles": {"bibtex": "@Article{Parra-Ullauri2023PrivacyPI,\n
      author = {J. Parra-Ullauri and Luis F. Gonzalez and A. Bravalheri and Rasheed
      Hussain and Xenofon Vasilakos and I. Vidal and F. Valera and R. Nejabati and
      D. Simeonidou},\n booktitle = {Conference on Computer Communications Workshops},\n
      journal = {IEEE INFOCOM 2023 - IEEE Conference on Computer Communications Workshops
      (INFOCOM WKSHPS)},\n pages = {1-7},\n title = {Privacy Preservation in Kubernetes-based
      Federated Learning: A Networking Approach},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2166238827", "name": "J. Parra-Ullauri"}, {"authorId": "2072871840",
      "name": "Luis F. Gonzalez"}, {"authorId": "3418023", "name": "A. Bravalheri"},
      {"authorId": "2225364", "name": "Rasheed Hussain"}, {"authorId": "1842694",
      "name": "Xenofon Vasilakos"}, {"authorId": "143917913", "name": "I. Vidal"},
      {"authorId": "145764713", "name": "F. Valera"}, {"authorId": "2322265", "name":
      "R. Nejabati"}, {"authorId": "3259233", "name": "D. Simeonidou"}]}, {"paperId":
      "3256b0c51551649370d75c4a06d60ad1b7929046", "externalIds": {"DBLP": "conf/sac/MullerMM22",
      "DOI": "10.1145/3477314.3507221", "CorpusId": 248545923}, "corpusId": 248545923,
      "publicationVenue": {"id": "d80d58be-58fc-4181-a397-5ac6fd976a47", "name": "ACM
      Symposium on Applied Computing", "type": "conference", "alternate_names": ["Sel
      Area Cryptogr", "Int Conf Sel area Cryptogr", "International Conference on Selected
      areas in Cryptography", "ACM Symp Appl Comput", "Selected Areas in Cryptography",
      "Symposium on Applied Computing", "SAC", "Symp Appl Comput"], "url": "https://www.acm.org/publications",
      "alternate_urls": ["http://sacworkshop.org/"]}, "url": "https://www.semanticscholar.org/paper/3256b0c51551649370d75c4a06d60ad1b7929046",
      "title": "An architecture proposal for checkpoint/restore on stateful containers",
      "abstract": "Containers have been widely adopted for the development of microservices
      and cloud-native applications. In parts, this popularization stems from the
      container orchestration platforms support, facilitating the development and
      continuously integrating large-scale applications. However, the established
      techniques offered by orchestration tools to replicate containers are insufficient
      to provide high availability and strong consistency for stateful containers.
      Thus, this paper proposes a Checkpoint/Restore (C/R) service to achieve fault-tolerance
      on stateful containers. Our service aims to eliminate the checkpoint management
      burden by adding a transparent C/R service into container orchestration platforms.
      The checkpointing service, implemented as an interceptor, is responsible for
      taking snapshots of application containers and coordinating the checkpoint execution
      with the delivery of requests. In case of faults, a new application container
      is automatically built from a recent snapshot, and the interceptor resumes the
      delivery of client requests since that checkpoint. A Proof of Concept using
      a Kubernetes cluster is implemented and corroborates for the feasibility of
      the C/R. Some challenges and future directions are discussed.", "venue": "ACM
      Symposium on Applied Computing", "year": 2022, "referenceCount": 7, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2022-04-25", "journal": {"name":
      "Proceedings of the 37th ACM/SIGAPP Symposium on Applied Computing"}, "citationStyles":
      {"bibtex": "@Article{M\u00fcller2022AnAP,\n author = {Rodrigo H. M\u00fcller
      and C. Meinhardt and O. Mendizabal},\n booktitle = {ACM Symposium on Applied
      Computing},\n journal = {Proceedings of the 37th ACM/SIGAPP Symposium on Applied
      Computing},\n title = {An architecture proposal for checkpoint/restore on stateful
      containers},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2164259301",
      "name": "Rodrigo H. M\u00fcller"}, {"authorId": "2952148", "name": "C. Meinhardt"},
      {"authorId": "2546148", "name": "O. Mendizabal"}]}, {"paperId": "325c658258d91637f7b0bdcafeef11675d556b88",
      "externalIds": {"MAG": "2982576723", "DBLP": "conf/icdcs/KwanWJM19", "DOI":
      "10.1109/ICDCS.2019.00017", "CorpusId": 207756948}, "corpusId": 207756948, "publicationVenue":
      {"id": "ffe5bb5c-04ed-488e-985d-d3a7b39542cf", "name": "IEEE International Conference
      on Distributed Computing Systems", "type": "conference", "alternate_names":
      ["International Conference on Distributed Computing Systems", "IEEE Int Conf
      Distrib Comput Syst", "Int Conf Device Circuit Syst", "ICDCS", "Int Conf Distrib
      Comput Syst", "International Conference on Devices, Circuits and Systems"],
      "url": "https://ieeexplore.ieee.org/xpl/conhome/1000213/all-proceedings"}, "url":
      "https://www.semanticscholar.org/paper/325c658258d91637f7b0bdcafeef11675d556b88",
      "title": "HyScale: Hybrid and Network Scaling of Dockerized Microservices in
      Cloud Data Centres", "abstract": "When designing modern software, care must
      be taken to allow for applications to scale based on the demands of its users
      while still accommodating flexibility in development. Recently, microservices
      architectures have garnered the attention of many organizations\u2014providing
      higher levels of scalability, availability, and fault isolation. Many organizations
      choose to host their microservices architectures in cloud data centres to offset
      costs. Incidentally, data centres become over-encumbered during peak usage hours
      and underutilized during off-peak hours. Traditional microservice scaling methods
      perform either horizontal or vertical scaling exclusively. When used in combination,
      however, these methods offer complementary benefits and compensate for each
      other''s deficiencies. To leverage the high availability of horizontal scaling
      and the fine-grained resource control of vertical scaling, we developed two
      novel hybrid autoscaling algorithms and a dedicated network scaling algorithm
      and benchmarked them against Google''s popular Kubernetes horizontal autoscaling
      algorithm. Results indicated up to 1.49x speedups in response times for our
      hybrid algorithms, and 1.69x speedups for our network algorithm under high-burst
      network loads.", "venue": "IEEE International Conference on Distributed Computing
      Systems", "year": 2019, "referenceCount": 34, "citationCount": 37, "influentialCitationCount":
      3, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2019-07-07", "journal": {"name": "2019 IEEE 39th International
      Conference on Distributed Computing Systems (ICDCS)", "pages": "80-90"}, "citationStyles":
      {"bibtex": "@Article{Kwan2019HyScaleHA,\n author = {Anthony Kwan and J. Wong
      and H. Jacobsen and Vinod Muthusamy},\n booktitle = {IEEE International Conference
      on Distributed Computing Systems},\n journal = {2019 IEEE 39th International
      Conference on Distributed Computing Systems (ICDCS)},\n pages = {80-90},\n title
      = {HyScale: Hybrid and Network Scaling of Dockerized Microservices in Cloud
      Data Centres},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2064026080",
      "name": "Anthony Kwan"}, {"authorId": "21151310", "name": "J. Wong"}, {"authorId":
      "145641161", "name": "H. Jacobsen"}, {"authorId": "46761645", "name": "Vinod
      Muthusamy"}]}, {"paperId": "326e0c846d309a5593dd605df63673d2df8ad273", "externalIds":
      {"DOI": "10.1155/2022/7862911", "CorpusId": 252788063}, "corpusId": 252788063,
      "publicationVenue": {"id": "501c1070-b5d2-4ff0-ad6f-8769a0a1e13f", "name": "Wireless
      Communications and Mobile Computing", "type": "journal", "alternate_names":
      ["Wirel Commun Mob Comput"], "issn": "1530-8669", "url": "https://www.hindawi.com/journals/wcmc/",
      "alternate_urls": ["https://onlinelibrary.wiley.com/journal/15308677", "http://www.interscience.wiley.com/jpages/1530-8669/"]},
      "url": "https://www.semanticscholar.org/paper/326e0c846d309a5593dd605df63673d2df8ad273",
      "title": "SoDa: A Serverless-Oriented Deadline-Aware Workflow Scheduling Engine
      for IoT Applications in Edge Clouds", "abstract": "As a coordination tool, workflow
      with a large number of interdependent tasks has increasingly become a new paradigm
      for orchestrating computationally intensive tasks in large-scale and complex
      Internet of Things (IoT) applications. Serverless computing has also recently
      been applied to real-world problems at the network edge as well, primarily aimed
      at event based IoT applications. However, the existing workflow scheduling algorithm
      based on the virtual machine resource model is inefficient in ensuring the QoS
      (Quality of Service) of users on the serverless platform. In this paper, we
      design an elastic workflow scheduling framework in edge clouds called EWSF based
      on the serverless architecture. In addition, we propose a serverless-oriented
      deadline-aware workflow scheduling algorithm called SoDa. Furthermore, we implemented
      the EWSF prototype based on Knative and Kubernetes and integrated SoDa as the
      scheduling engine. The performance of SoDa has been verified on the experimental
      platform in comparison with six counterparts. The experiment results show that
      SoDa adapts to various scheduling environments and achieves better performance
      in terms of overall makespan and execution success rate. In the case of tight
      cluster resources, SoDa improves the overall makespan and success rate by 10.4%
      and 55%, respectively, compared with the second-best algorithm.", "venue": "Wireless
      Communications and Mobile Computing", "year": 2022, "referenceCount": 28, "citationCount":
      3, "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://downloads.hindawi.com/journals/wcmc/2022/7862911.pdf", "status": "GOLD"},
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2022-10-07", "journal": {"name": "Wireless Communications
      and Mobile Computing"}, "citationStyles": {"bibtex": "@Article{Li2022SoDaAS,\n
      author = {Dazhi Li and Jiaang Duan and Yan Yao and Shiyou Qian and Jie Zhou
      and Guangtao Xue and Jian Cao},\n booktitle = {Wireless Communications and Mobile
      Computing},\n journal = {Wireless Communications and Mobile Computing},\n title
      = {SoDa: A Serverless-Oriented Deadline-Aware Workflow Scheduling Engine for
      IoT Applications in Edge Clouds},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2108324171", "name": "Dazhi Li"}, {"authorId": "2008743730", "name": "Jiaang
      Duan"}, {"authorId": "2110317703", "name": "Yan Yao"}, {"authorId": "2357444",
      "name": "Shiyou Qian"}, {"authorId": "2116575614", "name": "Jie Zhou"}, {"authorId":
      "1684808", "name": "Guangtao Xue"}, {"authorId": "2115872509", "name": "Jian
      Cao"}]}, {"paperId": "327bf8d5cff56833f98fdc296a6661fdd2c4fdcf", "externalIds":
      {"MAG": "2883451216", "DOI": "10.3139/9783446456020.011", "CorpusId": 188081975},
      "corpusId": 188081975, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/327bf8d5cff56833f98fdc296a6661fdd2c4fdcf",
      "title": "Interne Mechanismen von Kubernetes", "abstract": null, "venue": "Kubernetes
      in Action", "year": 2018, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [], "publicationTypes": null, "publicationDate": "2018-07-09", "journal": {"name":
      "Kubernetes in Action"}, "citationStyles": {"bibtex": "@Article{Luk\u0161a2018InterneMV,\n
      author = {Marko Luk\u0161a},\n booktitle = {Kubernetes in Action},\n journal
      = {Kubernetes in Action},\n title = {Interne Mechanismen von Kubernetes},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "2101559641", "name": "Marko
      Luk\u0161a"}]}, {"paperId": "32b6df09ad625bb221cdb8abf87ee5f56cdadc5d", "externalIds":
      {"DOI": "10.1109/icicn52636.2021.9673944", "CorpusId": 246021396}, "corpusId":
      246021396, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/32b6df09ad625bb221cdb8abf87ee5f56cdadc5d",
      "title": "Design and Development of On-Site Automatic Inspection System Based
      on Machine Vision Technology", "abstract": "Automatic System Management based
      on machine vision technology is the development direction of field management.
      At present, there are many problems in the process of field management, such
      as high personnel input, Long time-consuming inspection and tedious work flow.
      In order to solve these problems, an automatic inspection system based on machine
      vision technology is constructed by using machine vision technology, information
      technology, image contrast technology and system applications such as Docker
      and Kubernetes. Combining the system requirement analysis, from two aspects
      of function realization and system architecture, each module of the system is
      designed, the key process flow in the system operation is analyzed, and through
      the dynamic construction technology, the operation of the system is optimized
      from the recognition accuracy. The result of example verification shows that
      the system can provide service according to user\u2019s needs correctly.", "venue":
      "2021 IEEE 9th International Conference on Information, Communication and Networks
      (ICICN)", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2021-11-25", "journal": {"name": "2021 IEEE 9th International Conference on
      Information, Communication and Networks (ICICN)", "pages": "522-526"}, "citationStyles":
      {"bibtex": "@Conference{Liu2021DesignAD,\n author = {Bo Liu and H. Yin and Wangchang
      Miao and Ai-fang Zhang},\n booktitle = {2021 IEEE 9th International Conference
      on Information, Communication and Networks (ICICN)},\n journal = {2021 IEEE
      9th International Conference on Information, Communication and Networks (ICICN)},\n
      pages = {522-526},\n title = {Design and Development of On-Site Automatic Inspection
      System Based on Machine Vision Technology},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2156640790", "name": "Bo Liu"}, {"authorId": "2113971914", "name":
      "H. Yin"}, {"authorId": "2150397288", "name": "Wangchang Miao"}, {"authorId":
      "2153658015", "name": "Ai-fang Zhang"}]}, {"paperId": "3308563bbf87196390f218643cf5c30bc66b34e0",
      "externalIds": {"MAG": "3186275860", "DOI": "10.22214/IJRASET.2021.36648", "CorpusId":
      237755693}, "corpusId": 237755693, "publicationVenue": {"id": "100ffd12-b334-4f02-826b-8ac408e7df49",
      "name": "International Journal for Research in Applied Science and Engineering
      Technology", "type": "journal", "alternate_names": ["Int J Res Appl Sci Eng
      Technol"], "issn": "2321-9653", "url": "https://www.ijraset.com/"}, "url": "https://www.semanticscholar.org/paper/3308563bbf87196390f218643cf5c30bc66b34e0",
      "title": "Centralised Cleanup Service for Kubernetes and Cloud Resources", "abstract":
      "The architectural style of developing a software application using loosely
      coupled and highly cohesive services can be termed as microservices architecture.
      The microservices allow agile software development and enable businesses to
      build and deliver applications quickly. To achieve the benefits of microservices,
      an underlying infrastructure that supports them must exist. This includes CI/CD
      pipelines, execution environments like virtual machines and containers, logging
      and monitoring, communication mechanisms, and so on. Containers are lightweight,
      enable multiple execution environments to exist on a single operating system
      instance, and provide isolation. Container Orchestration Engines such as Docker
      swarm or Kubernetes automate deployment, scaling, fault tolerance, and container
      networking. Many organizations use containers to spawn resources in public or
      private clouds. Different engineering teams perform various kinds of tests by
      bundling the test code and dependencies into containers. However, cleaning up
      these containers is necessary for the efficient utilization of hardware resources.
      This paper discusses the need and benefits of a centralized cleanup service
      for Kubernetes and cloud resources. It analyzes the value additions this service
      can bring to the software development process of large organizations.", "venue":
      "International Journal for Research in Applied Science and Engineering Technology",
      "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Business"],
      "s2FieldsOfStudy": [{"category": "Business", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2021-07-15",
      "journal": {"name": "International Journal for Research in Applied Science and
      Engineering Technology"}, "citationStyles": {"bibtex": "@Article{Bhat2021CentralisedCS,\n
      author = {P. Bhat},\n booktitle = {International Journal for Research in Applied
      Science and Engineering Technology},\n journal = {International Journal for
      Research in Applied Science and Engineering Technology},\n title = {Centralised
      Cleanup Service for Kubernetes and Cloud Resources},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "1740764758", "name": "P. Bhat"}]}, {"paperId": "330acd40145584b42243588ccd40d6e26ddcbb22",
      "externalIds": {"MAG": "2907046703", "DOI": "10.1088/1757-899X/466/1/012011",
      "CorpusId": 59254066}, "corpusId": 59254066, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/330acd40145584b42243588ccd40d6e26ddcbb22",
      "title": "Dynamic Balance Strategy of High Concurrent Web Cluster Based on Docker
      Container", "abstract": "With the rapid development of the Internet in today\u2019s
      world, there are more and more applications based on network in our daily life,
      and the changes put forward higher requirements to the web systems of concurrency,
      scalability and availability. Based on the research of the Docker container
      virtualization technology and the container management platform Kubernetes,
      by improving the load balance strategies of Round-Robin and Weighted Round-Robin,
      this paper proposes a high-concurrency and easy-extending high concurrency cluster
      dynamic balance strategy to support the web system, which can guarantee the
      web system of high concurrency and high availability performance, implement
      reasonable and flexible configuration of system resources and realize the functions
      of automatic management and performance monitor of the system.", "venue": "IOP
      Conference Series: Materials Science and Engineering", "year": 2018, "referenceCount":
      10, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://iopscience.iop.org/article/10.1088/1757-899X/466/1/012011/pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Physics", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Physics", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2018-12-28", "journal":
      {"name": "IOP Conference Series: Materials Science and Engineering", "volume":
      "466"}, "citationStyles": {"bibtex": "@Conference{Ren2018DynamicBS,\n author
      = {Weizheng Ren and Wenkai Chen and Yansong Cui},\n booktitle = {IOP Conference
      Series: Materials Science and Engineering},\n journal = {IOP Conference Series:
      Materials Science and Engineering},\n title = {Dynamic Balance Strategy of High
      Concurrent Web Cluster Based on Docker Container},\n volume = {466},\n year
      = {2018}\n}\n"}, "authors": [{"authorId": "40359892", "name": "Weizheng Ren"},
      {"authorId": "2109595286", "name": "Wenkai Chen"}, {"authorId": "1971504", "name":
      "Yansong Cui"}]}, {"paperId": "33129149a04d0ad7982abcb5b601529b8bb94c0f", "externalIds":
      {"CorpusId": 203490707}, "corpusId": 203490707, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/33129149a04d0ad7982abcb5b601529b8bb94c0f",
      "title": "Dynamic allocation of computational resources for deep learning-enabled
      cellular image analysis with Kubernetes", "abstract": "Deep learning is transforming
      the ability of life scientists to extract information from images. These techniques
      have better accuracy than conventional approaches and enable previously impossible
      analyses. As the capability of deep learning methods expands, they are increasingly
      being applied to large imaging datasets. The computational demands of deep learning
      present a significant barrier to large-scale image analysis. To meet this challenge,
      we have developed DeepCell 2.0, a platform for deploying deep learning models
      on large imaging datasets (>105megapixel images) in the cloud. This software
      enables the turnkey deployment of a Kubernetes cluster on all commonly used
      operating systems. By using a microservice architecture, our platform matches
      computational operations with their hardware requirements to reduce operating
      costs. Further, it scales computational resources to meet demand, drastically
      reducing the time necessary for analysis of large datasets. A thorough analysis
      of costs demonstrates that cloud computing is economically competitive for this
      application. By treating hardware infrastructure as software, this work foreshadows
      a new generation of software packages for biology in which computational resources
      are a dynamically allocated resource. Introduction Recent advances in imaging\u2014both
      in optics and in fluorescent probes\u2014are transforming the study of living
      matter. It is now possible to study cellular function on length scales that
      span from single molecules1 to whole organisms2 with imaging. Concurrent with
      these advances have come drastic improvements in our ability to computationally
      extract information from images. Chief among these new tools is deep learning,
      a set of machine learning tools that can learn effective representation from
      data in a supervised or unsupervised manner. These methods are more accurate
      than prior approaches3 and can automate the image classification and image segmentation
      tasks that have formed the bedrock of single-cell analysis3. Their ability to
      extract latent information from images has also enabled previously unforeseen
      analyses of cellular function and behavior. Recent applications include interpreting
      imaging-based screens4 (image classification), quantifying the behavior of individual
      immune cells in the tumor microenvironment5,6 (image segmentation), improving
      the resolution of images7 (extracting latent information), and predicting fluorescence
      images directly from bright field images8 (extracting latent information). As
      the capabilities of deep learning grow, these models are increasingly being
      used throughout the life sciences on imaging datasets both small and large.
      This new reality presents several challenges. Deep learning is a dataand compute-intensive
      method; new applications often require new training datasets, while developing
      new deep learning models requires specialized hardware. As these challenges
      are being met, the remaining challenges increasingly revolve around deployment
      and scale. Timely inference of deep learning models requires hardware acceleration
      via graphical processing units (GPUs). However, complete analysis pipelines
      require both deep learning and conventional computer-vision operations. This
      constraint means that the single-workstation model for analysis is inefficient.
      Further, modern imaging experiments can produce large (>105-megapixel images)
      datasets; the turnaround time for analysis is increasingly becoming a bottleneck
      for imaging-based discovery. To meet this challenge, we have developed DeepCell
      2.0, a cloud computing platform for deploying deep learning models on imaging
      datasets. While the target application of this software is single-cell analysis
      of large live-cell imaging6 and cell atlas datasets5, it represents a fundamental
      shift from how software for biological data analysis is traditionally written.
      Rather than viewing hardware as a fixed resource, we view it instead as a resource
      that can be allocated dynamically. In this paradigm, the computational resources
      requested can scale with the dataset size . CC-BY-NC 4.0 International license
      It is made available under a (which was not peer-reviewed) is the author/funder,
      who has granted bioRxiv a license to display the preprint in perpetuity. The
      copyright holder for this preprint . http://dx.doi.org/10.1101/505032 doi: bioRxiv
      preprint first posted online Dec. 22, 2018;", "venue": "", "year": 2019, "referenceCount":
      27, "citationCount": 12, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{Bannon2019DynamicAO,\n author
      = {Dylan Bannon and Erick Moen and Morgan Schwartz and Enrico Borba and Sunny
      Cui and Kevin Huang and I. Camplisson and N. Koe and Daniel Kyme and Takamasa
      Kudo and B. Chang and Edward Pao and Erik Osterman and William Graf and David
      Van Valen},\n title = {Dynamic allocation of computational resources for deep
      learning-enabled cellular image analysis with Kubernetes},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "91548448", "name": "Dylan Bannon"}, {"authorId": "2065614284",
      "name": "Erick Moen"}, {"authorId": "82899374", "name": "Morgan Schwartz"},
      {"authorId": "1389463040", "name": "Enrico Borba"}, {"authorId": "1382472908",
      "name": "Sunny Cui"}, {"authorId": "2112441016", "name": "Kevin Huang"}, {"authorId":
      "1397123192", "name": "I. Camplisson"}, {"authorId": "84199078", "name": "N.
      Koe"}, {"authorId": "1441365097", "name": "Daniel Kyme"}, {"authorId": "5864924",
      "name": "Takamasa Kudo"}, {"authorId": "2054393394", "name": "B. Chang"}, {"authorId":
      "40587736", "name": "Edward Pao"}, {"authorId": "1987718591", "name": "Erik
      Osterman"}, {"authorId": "2054090660", "name": "William Graf"}, {"authorId":
      "6838746", "name": "David Van Valen"}]}, {"paperId": "331406527d11ce657281522becd79f36ca660ef2",
      "externalIds": {"MAG": "3041835125", "PubMedCentral": "7420330", "DBLP": "journals/sensors/NemethS20",
      "DOI": "10.3390/s20143830", "CorpusId": 220518927, "PubMed": "32660037"}, "corpusId":
      220518927, "publicationVenue": {"id": "3dbf084c-ef47-4b74-9919-047b40704538",
      "name": "Italian National Conference on Sensors", "type": "conference", "alternate_names":
      ["SENSORS", "IEEE Sens", "Ital National Conf Sens", "IEEE Sensors", "Sensors"],
      "issn": "1424-8220", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/331406527d11ce657281522becd79f36ca660ef2",
      "title": "Advanced Computation Capacity Modeling for Delay-Constrained Placement
      of IoT Services", "abstract": "A vast range of sensors gather data about our
      environment, industries and homes. The great profit hidden in this data can
      only be exploited if it is integrated with relevant services for analysis and
      usage. A core concept of the Internet of Things targets this business opportunity
      through various applications. The virtualized and software-controlled 5G networks
      are expected to achieve the scale and dynamicity of communication networks required
      by Internet of Things (IoT). As the computation and communication infrastructure
      rapidly evolves, the corresponding substrate models of service placement algorithms
      lag behind, failing to appropriately describe resource abstraction and dynamic
      features. Our paper provides an extension to existing IoT service placement
      algorithms to enable them to keep up with the latest infrastructure evolution,
      while maintaining their existing attributes, such as end-to-end delay constraints
      and the cost minimization objective. We complement our recent work on 5G service
      placement algorithms by theoretical foundation for resource abstraction, elasticity
      and delay constraint. We propose efficient solutions for the problems of aggregating
      computation resource capacities and behavior prediction of dynamic Kubernetes
      infrastructure in a delay-constrained service embedding framework. Our results
      are supported by mathematical theorems whose proofs are presented in detail.",
      "venue": "Italian National Conference on Sensors", "year": 2020, "referenceCount":
      34, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/1424-8220/20/14/3830/pdf?version=1594779063",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science", "Medicine"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Medicine",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2020-07-01", "journal": {"name": "Sensors
      (Basel, Switzerland)", "volume": "20"}, "citationStyles": {"bibtex": "@Article{N\u00e9meth2020AdvancedCC,\n
      author = {Bal\u00e1zs N\u00e9meth and Bal\u00e1zs Sonkoly},\n booktitle = {Italian
      National Conference on Sensors},\n journal = {Sensors (Basel, Switzerland)},\n
      title = {Advanced Computation Capacity Modeling for Delay-Constrained Placement
      of IoT Services},\n volume = {20},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "2080415981", "name": "Bal\u00e1zs N\u00e9meth"}, {"authorId": "1771457", "name":
      "Bal\u00e1zs Sonkoly"}]}, {"paperId": "33196fe8321566ee614c3059b2d8c42eef102e82",
      "externalIds": {"DBLP": "journals/pacmmod/YuHWMCZLZ23", "DOI": "10.1145/3589780",
      "CorpusId": 259213254}, "corpusId": 259213254, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/33196fe8321566ee614c3059b2d8c42eef102e82",
      "title": "Vineyard: Optimizing Data Sharing in Data-Intensive Analytics", "abstract":
      "Modern data analytics and AI jobs become increasingly complex and involve multiple
      tasks performed on specialized systems. Sharing of intermediate data between
      different systems is often a significant bottleneck in such jobs. When the intermediate
      data is large, it is mostly exchanged through files in standard formats (e.g.,
      CSV and ORC), causing high I/O and (de)serialization overheads. To solve these
      problems, we develop Vineyard, a high-performance, extensible, and cloud-native
      object store, trying to provide an intuitive experience for users to share data
      across systems in complex real-life workflows. Since different systems usually
      work on data structures (e.g., dataframes, graphs, hashmaps) with similar interfaces,
      and their computation logic is often loosely-coupled with how such interfaces
      are implemented over specific memory layouts, it enables Vineyard to conduct
      data sharing efficiently at a high level via memory mapping and method sharing.
      Vineyard provides an IDL named VCDL to facilitate users to register their own
      intermediate data types into Vineyard such that objects of the registered types
      can then be efficiently shared across systems in a polyglot workflow. As a cloud-native
      system, Vineyard is designed to work closely with Kubernetes, as well as achieve
      fault-tolerance and high performance in production environments. Evaluations
      on real-life datasets and data analytics jobs show that the above optimizations
      of Vineyard can significantly improve the end-to-end performance of data analytics
      jobs, by reducing their data-sharing time up to 68.4x.", "venue": "Proc. ACM
      Manag. Data", "year": 2023, "referenceCount": 56, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-06-13", "journal": {"name": "Proceedings
      of the ACM on Management of Data", "pages": "1 - 27", "volume": "1"}, "citationStyles":
      {"bibtex": "@Article{Yu2023VineyardOD,\n author = {Wenyuan Yu and Tao He and
      Lei Wang and Kewen Meng and Ye Cao and Diwen Zhu and Sanhong Li and Jingren
      Zhou},\n booktitle = {Proc. ACM Manag. Data},\n journal = {Proceedings of the
      ACM on Management of Data},\n pages = {1 - 27},\n title = {Vineyard: Optimizing
      Data Sharing in Data-Intensive Analytics},\n volume = {1},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "37681774", "name": "Wenyuan Yu"}, {"authorId": "2220349494",
      "name": "Tao He"}, {"authorId": "2152508555", "name": "Lei Wang"}, {"authorId":
      "12418191", "name": "Kewen Meng"}, {"authorId": "2220379391", "name": "Ye Cao"},
      {"authorId": "2373889", "name": "Diwen Zhu"}, {"authorId": "32585357", "name":
      "Sanhong Li"}, {"authorId": "1709595", "name": "Jingren Zhou"}]}, {"paperId":
      "332d25dd4039d13b50afa1855a4f8f1412ac4769", "externalIds": {"MAG": "3046184756",
      "DBLP": "journals/itl/BogoSNB20", "DOI": "10.1002/itl2.212", "CorpusId": 224820152},
      "corpusId": 224820152, "publicationVenue": {"id": "355dc012-4f87-416a-87cd-a2d2ba7d1fb9",
      "name": "Internet Technology Letters", "alternate_names": ["Internet Technol
      Lett"], "issn": "2476-1508", "url": "https://onlinelibrary.wiley.com/journal/24761508"},
      "url": "https://www.semanticscholar.org/paper/332d25dd4039d13b50afa1855a4f8f1412ac4769",
      "title": "Fine\u2010grained management of cloud\u2010native applications, based
      on TOSCA", "abstract": "Containers and container\u2010based orchestrators allow
      deploying and managing multi\u2010service applications over cloud platforms,
      by coupling the lifecycle of each application service to that of its hosting
      container. In this use case letter, we demonstrate how the OASIS standard TOSCA
      and Toskose allow overcoming such a coupling by enabling to exploit Docker containers
      as system containers where to independently deploy and manage application services.
      More precisely, we show how TOSCA and Toskose enable a fine\u2010grained, service\u2010aware
      management of a third\u2010party multi\u2010service application on top of existing
      Docker\u2010based container orchestrators (such as Docker Compose and Kubernetes)
      and independently of whether the application is deployed on premises or on a
      public cloud (such as MS Azure).", "venue": "Internet Technology Letters", "year":
      2020, "referenceCount": 17, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://onlinelibrary.wiley.com/doi/pdfdirect/10.1002/itl2.212",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-08-13", "journal":
      {"name": "Internet Technology Letters", "volume": "3"}, "citationStyles": {"bibtex":
      "@Article{Bogo2020FinegrainedMO,\n author = {Matteo Bogo and J. Soldani and
      Davide Neri and Antonio Brogi},\n booktitle = {Internet Technology Letters},\n
      journal = {Internet Technology Letters},\n title = {Fine\u2010grained management
      of cloud\u2010native applications, based on TOSCA},\n volume = {3},\n year =
      {2020}\n}\n"}, "authors": [{"authorId": "1491449284", "name": "Matteo Bogo"},
      {"authorId": "2265546", "name": "J. Soldani"}, {"authorId": "49332476", "name":
      "Davide Neri"}, {"authorId": "1787701", "name": "Antonio Brogi"}]}, {"paperId":
      "333d7c169cf33d5f61cfd60a3b33a3a1656bfcb1", "externalIds": {"DBLP": "conf/IEEEcloud/ElliottORM18",
      "MAG": "2890049972", "DOI": "10.1109/CLOUD.2018.00145", "CorpusId": 52195162},
      "corpusId": 52195162, "publicationVenue": {"id": "406d9f60-417a-4dc5-a6b7-1fe4689a4ff7",
      "name": "IEEE International Conference on Cloud Computing", "type": "conference",
      "alternate_names": ["Int Conf Cloud Comput [services Soc", "CLOUD", "International
      Conference on Cloud Computing [Services Society]", "IEEE Int Conf Cloud Comput"]},
      "url": "https://www.semanticscholar.org/paper/333d7c169cf33d5f61cfd60a3b33a3a1656bfcb1",
      "title": "A Cloud-Agnostic Container Orchestrator for Improving Interoperability",
      "abstract": "The last several years have seen a rapid increase in the use of
      containers and containerizing services, such as Docker, Kubernetes, and LXC.
      With such a rise comes a vast increase in opportunities for improved portability,
      security, and automation. While many of these opportunities are being taken
      advantage of in containers today, there remains many more possibilities that
      have not been explored. In this paper, we present a novel approach to container
      management that enables the rapid live migration of stateful containers between
      any hosts within private, public, or hybrid clouds, through a simple interface
      that provides a high-level view of the network of computing nodes and the containers
      running on them. Finally, we provide a vision for container management that
      allows greatly improved security and resiliency through autonomous and self-migrating
      containers existing across the scope of the Internet.", "venue": "IEEE International
      Conference on Cloud Computing", "year": 2018, "referenceCount": 18, "citationCount":
      14, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2018-07-01", "journal":
      {"name": "2018 IEEE 11th International Conference on Cloud Computing (CLOUD)",
      "pages": "958-961"}, "citationStyles": {"bibtex": "@Article{Elliott2018ACC,\n
      author = {David Elliott and Carlos E. Otero and Matthew Ridley and X. Merino},\n
      booktitle = {IEEE International Conference on Cloud Computing},\n journal =
      {2018 IEEE 11th International Conference on Cloud Computing (CLOUD)},\n pages
      = {958-961},\n title = {A Cloud-Agnostic Container Orchestrator for Improving
      Interoperability},\n year = {2018}\n}\n"}, "authors": [{"authorId": "145431234",
      "name": "David Elliott"}, {"authorId": "2065415143", "name": "Carlos E. Otero"},
      {"authorId": "2073677197", "name": "Matthew Ridley"}, {"authorId": "2094591746",
      "name": "X. Merino"}]}, {"paperId": "33409343def33b8f159e17e5d21cd1c91e013939",
      "externalIds": {"MAG": "2617936684", "CorpusId": 67312430}, "corpusId": 67312430,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/33409343def33b8f159e17e5d21cd1c91e013939",
      "title": "An application suite based on the IFB Container as a Service platform",
      "abstract": "IFB, the French Elixir Node, is a national service infrastructure
      which provides services and resources in bioinformatics[1] . IFB\u2019s goal
      is to offer to scientific users and developers a scalable, flexible and user-friendly
      computation facility associated to a large storage capacity, as needed for current
      life science data processing. To analyze heterogeneous biological data, bioinformaticians
      require hundreds of different specialized software including well-established
      tools as well as research prototypes. In addition, these software are used alone
      or in workflows, from GUI or command lines, for production, tests or developments.
      Thus, providing an updated and complete set of tools requires huge resources.
      To offer an efficient service for this expected diversity of usages, we propose
      a software architecture and a cloud model which bring solutions for tools packaging,
      rapid deployment and multiple channel software distribution. We describe here
      the set of technical components that we built to enable a Container as a Service
      Model (CaaS) adapted to a bioinformatics academic cloud facility. BioShaDock
      BioShaDock[2] is the community based container registry for bioinformatics of
      the French bioinformatics Institute. It focuses on reproducibility in bioinformatics
      tools or pipelines using Docker containers. Containers are automatically build
      in background with security scans and meta data extraction. Meta-data can include
      general information but also ontologies terms. The BioShaDock registry already
      provides a large catalog of tools direcly from users, or project like Bioconda
      or Debian. The registry is open source and can be used by anyone, it is accessible
      by any Docker or rkt client. Computer scientists and bioinformaticians can more
      easily disseminate their programs and find potential users using a dedicated
      domain-centric Docker registry. There is a wide range of possible uses for container
      registries in bioinformatics: repositories managed at a community level, based
      on tools embedded in containers, allow users to exchange and replicate data
      analyses. GO-Docker GO-Docker[3] is a batch computing/cluster management tool
      using Docker as an execution/isolation system. It is dedicated to containers
      and has both a command line client and a web front end. It uses Docker Swarm
      and Apache Mesos and is compatible with google Kubernetes. A common concern
      regarding containers solution for cloud or HPC is related to potential security
      issues. First of all, we should remind that Docker implements the Linux Kernel
      cgroups feature and it can be used to isolate resource usage by users. Furthermore,
      we implemented SSL certificate and LDAP authentication in the GO-Docker Rest
      API prior to allow access to the job scheduler that manage the nodes where containers
      can be run. In addition, depending on the facility audience and exposure, an
      even safer solution can be obtained by using virtualized computation nodes.
      Developers used to command line can exploit the Go-Docker CLI that emulates
      classical scheduler commands. GO-Docker has a rich Rest API used in by clients.
      The clients (PYTHON or JAVA ) can be used in script or SaaS front end. Galaxy
      to Docker Galaxy is a widely adopted user-friendly web front-end for biological
      data processing. It provides powerful functionalities to enhance data analysis
      accessibility and reproducibility. It currently suits well the integration of
      existing command line tools and offers a large collection of bioinformatics
      software. However, the integration of each software needs the manual off-line
      creation of XML descriptor and sometimes additional wrappers: it is still a
      technical and time-consuming task. We propose to by-pass this limitation by
      enabling the direct execution of command line within any Ad Hoc container from
      a trusted repository like BioShaDock using the GO-Docker python API. This Galaxy
      to Docker component allows to create and use new \u201con demand tools\u201d
      in a Galaxy instance without being an administrator and without need for coding.
      Accordingly, advanced users can easily and quickly include custom developments
      in their data analysis pipelines. This results in a more flexible Galaxy environment.
      D4WP The D4 workflow portal (D4WP) [4] is an advanced SaaS developer oriented
      environment for rapid tool and workflow design. It allows online graphical workflow
      and component authoring. Any command line tool and script are quickly captured
      and integrated using a full WYSIWYG approach. All workflow component dependencies
      can be defined as containers using an URI syntax. In this way a re-executable
      and self-contained workflow specification can be produced. D4WP integrates a
      GO-Docker scheduler API. From a unique specification, code generation can be
      used to target different languages to maximize potential workflow usage and
      dissemination. Current developments focus on Galaxy tool generation and Common
      Workflow Language export. The presented software components allow the creation
      of reproducible and flexible data analysis environments for different audiences
      (end users and developers) and multiple purposes (production data analysis,
      benchmark, workflow, tool and method development, dissemination, article publishing\u2026)
      All tools embedded in containers, made available in BioShaDock and scheduled
      with GO-Docker are directly usable in Galaxy, D4WP and command line. We think
      that such an architecture limits deployment overhead and software integration
      cost and therefore accelerates the transfer of bioinformatics research output
      to production computation facilities. In a context of massive biological data
      production, the CaaS model offer interesting prospects. Thus, when data movement
      is limited by network capacity, deploying the whole CaaS environment on data
      production nodes may be a pragmatic solution. Furthermore, the suite of software
      components we presented here are developed to fit the long-term objective of
      the creation of a federation of interoperable clouds. Future works will include
      dissemination related features and compatibility and standardization effort.
      \n \nReferences \n1. IFB cloud: The academic cloud of the French Institute of
      Bioinformatics. http://www.france-bioinformatique.fr/ \n2. Moreews F, Sallou
      O, Menager H et al. BioShaDock: a community driven bioinformatics shared Docker-based
      tools registry. F1000Research 2015 \n3. Sallou O, Monjeaud C: GO-Docker: Batch
      scheduling with containers. IEEE Cluster 2015. 2015. \n4. Moreews F: Design
      and share data analysis workflows. Application to bioinformatics intensive treatments.
      Thesis, universite de Rennes 1. 2015. http://workflow.genouest.org", "venue":
      "", "year": 2016, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Biology",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2016-09-03",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Moreews2016AnAS,\n
      author = {Fran\u00e7ois Moreews and Olivier Sallou and O. Collin},\n title =
      {An application suite based on the IFB Container as a Service platform},\n year
      = {2016}\n}\n"}, "authors": [{"authorId": "2100106", "name": "Fran\u00e7ois
      Moreews"}, {"authorId": "3189822", "name": "Olivier Sallou"}, {"authorId": "2193723",
      "name": "O. Collin"}]}, {"paperId": "334bc359b6738d706a516f996379bf224b3ad5ab",
      "externalIds": {"DOI": "10.5753/sbrc.2022.222327", "CorpusId": 251507910}, "corpusId":
      251507910, "publicationVenue": {"id": "39d9c543-102f-428f-b037-6b5a5569cb2d",
      "name": "Brazilian Symposium on Computer Networks and Distributed Systems",
      "type": "conference", "alternate_names": ["SBRC", "Braz Symp Comput Netw Distrib
      Syst"]}, "url": "https://www.semanticscholar.org/paper/334bc359b6738d706a516f996379bf224b3ad5ab",
      "title": "Orquestra\u00e7\u00e3o din\u00e2mica total de fatiamento de rede no
      n\u00facleo 5G sobre plataforma nativa de computa\u00e7\u00e3o em nuvem", "abstract":
      "Os avan\u00e7os tecnol\u00f3gicos na quinta gera\u00e7\u00e3o (5G) de redes
      m\u00f3veis est\u00e3o alicer\u00e7ados em plataformas nativas de computa\u00e7\u00e3o
      em nuvem e Kubernetes tem se destacado como o sistema de orquestra\u00e7\u00e3o
      de infraestrutura virtualizada. Entretanto, essas plataformas n\u00e3o foram
      projetadas para suportar nativamente os servi\u00e7os em 5G. Para ilustrar,
      Kubernetes foi planejado para ser agn\u00f3stico aos servi\u00e7os que orquestra
      e n\u00e3o \u00e9 capaz de reconfigurar o n\u00facleo 5G dinamicamente de acordo
      com os recursos de rede existentes, i.e., prov\u00ea uma orquestra\u00e7\u00e3o
      din\u00e2mica parcial para realizar um fatiamento da rede. Este artigo prop\u00f5e
      uma solu\u00e7\u00e3o integrada ao Kubernetes para permitir a orquestra\u00e7\u00e3o
      din\u00e2mica total de fatiamento de rede em tempo de execu\u00e7\u00e3o, ajustando
      n\u00facleo 5G. Essa integra\u00e7\u00e3o \u00e9 realizada atrav\u00e9s de um
      controlador integrado ao Kubernetes e de um proxy de plano de controle. O controlador
      \u00e9 capaz de ajustar o n\u00facleo 5G e adaptar a infraestrutura virtualizada,
      enquanto o proxy cria uma abstra\u00e7\u00e3o para a comunica\u00e7\u00e3o de
      controle entre as redes de acesso e transporte com o n\u00facleo. Os resultados
      experimentais apresentaram uma reconfigura\u00e7\u00e3o na orquestra\u00e7\u00e3o
      din\u00e2mica total sem interrup\u00e7\u00e3o dos servi\u00e7os, reduzindo em
      47,5% o n\u00famero total de requisi\u00e7\u00f5es de reconfigura\u00e7\u00e3o
      por fatias de rede.", "venue": "Brazilian Symposium on Computer Networks and
      Distributed Systems", "year": 2022, "referenceCount": 19, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://sol.sbc.org.br/index.php/sbrc/article/download/21182/21007", "status":
      "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      null, "publicationDate": "2022-05-23", "journal": {"name": "Anais do XL Simp\u00f3sio
      Brasileiro de Redes de Computadores e Sistemas Distribu\u00eddos (SBRC 2022)"},
      "citationStyles": {"bibtex": "@Article{Grings2022Orquestra\u00e7\u00e3oDT,\n
      author = {Felipe Hauschild Grings and Lucas Baleeiro Dominato Silveira and Nathana
      Muller and L. Prade and K. Cardoso and Sand Correa and C. Both},\n booktitle
      = {Brazilian Symposium on Computer Networks and Distributed Systems},\n journal
      = {Anais do XL Simp\u00f3sio Brasileiro de Redes de Computadores e Sistemas
      Distribu\u00eddos (SBRC 2022)},\n title = {Orquestra\u00e7\u00e3o din\u00e2mica
      total de fatiamento de rede no n\u00facleo 5G sobre plataforma nativa de computa\u00e7\u00e3o
      em nuvem},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2181262313", "name":
      "Felipe Hauschild Grings"}, {"authorId": "2181256476", "name": "Lucas Baleeiro
      Dominato Silveira"}, {"authorId": "123322019", "name": "Nathana Muller"}, {"authorId":
      "40657016", "name": "L. Prade"}, {"authorId": "1643972021", "name": "K. Cardoso"},
      {"authorId": "2056071723", "name": "Sand Correa"}, {"authorId": "2065280877",
      "name": "C. Both"}]}, {"paperId": "338a0d904aea0404e48cf222a10f525ab0d4c406",
      "externalIds": {"DOI": "10.59018/1023283", "CorpusId": 266891519}, "corpusId":
      266891519, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/338a0d904aea0404e48cf222a10f525ab0d4c406",
      "title": "Application of kubeflow as a universal approach for the development
      and implementation of artificial intelligence systems", "abstract": "An overview
      of the concept of machine learning and processes (Machine Learning and Operation,
      MLOps), which is a set of techniques for implementation and automatic continuous
      integration, as well as delivery to the production environment and model training,
      is made. The concept of MLOps was considered in terms of Kubeflow tools - a
      cloud-native open-source system running on the Kubernetes platform. The possibility
      of using modern MLOps solutions to improve the development processes of machine
      learning information systems has been studied. The results of the operation
      of the model in the Kubeflow arsenal have been checked using such improvement
      factors as speed of development, implementation of changes, reduction of time
      to search for problems, recovery after global interruptions, and decrease of
      the number of errors in the model. For practical analysis, a publicly available
      model was deployed in a Kubeflow cluster using the Seldon Core Serving application
      manifest. The conducted research showed that Kubeflow consists of a set of various
      open-source components that have a high level of integration with each other
      through the Kubernetes platform. At the same time, Kubeflow uses the Kubernetes
      pattern of operators for machine-learning objects extremely effectively.", "venue":
      "Journal of Engineering and Applied Sciences (Asian Research Publishing Network)",
      "year": 2023, "referenceCount": 21, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Review"], "publicationDate": "2023-12-30", "journal": {"name":
      "ARPN Journal of Engineering and Applied Sciences"}, "citationStyles": {"bibtex":
      "@Article{Kuzmich2023ApplicationOK,\n author = {Mykhailo Kuzmich and Tetyana
      Gordiyenko},\n booktitle = {Journal of Engineering and Applied Sciences (Asian
      Research Publishing Network)},\n journal = {ARPN Journal of Engineering and
      Applied Sciences},\n title = {Application of kubeflow as a universal approach
      for the development and implementation of artificial intelligence systems},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2279443546", "name": "Mykhailo
      Kuzmich"}, {"authorId": "2279443403", "name": "Tetyana Gordiyenko"}]}, {"paperId":
      "33946e183d3b57fd233066443853072d790d507e", "externalIds": {"DBLP": "conf/ispa/ZhuGZZ21",
      "DOI": "10.1109/ISPA-BDCloud-SocialCom-SustainCom52081.2021.00028", "CorpusId":
      245429150}, "corpusId": 245429150, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/33946e183d3b57fd233066443853072d790d507e",
      "title": "Vapor: A GPU Sharing Scheduler with Communication and Computation
      Pipeline for Distributed Deep Learning", "abstract": "Nowadays, distributed
      deep learning (DDL) workloads are typically trained on GPU clusters. Modern
      GPUs support the concurrent execution of multiple jobs to achieve efficient
      parallelization of computation and communication. While sharing GPU improves
      resource utilization and cuts down job completion time, interference among co-located
      jobs results in significant performance degradation. Recent studies such as
      interference-aware job placement carefully co-locate jobs with the least interference
      in a best-effort manner and are not ideal. Another challenge in GPU sharing
      is straggler due to unbalanced workloads in packing. When stragglers occur,
      GPU resources are wasted, so the training processes are delayed.We present Vapor,
      a GPU sharing scheduler for distributed deep learning on multi-GPUs featured
      by two novel scheduling policies: preemptive GPU sharing and adaptive batch
      redistribution to maximize GPU utilization and improve training efficiency.
      Firstly, Vapor uses preemptive scheduling that parallels computation and communication
      of co-located jobs in a pipelined manner. Secondly, Vapor uses an adaptive batch
      redistribution method to deal with stragglers in packing to improve resource
      utilization further. Vapor provides an AIMD model to predict the relationship
      between the batch size of the training data and the model calculation time in
      each iteration. We evaluate Vapor with other representative schedulers. Experiment
      on a Kubernetes cluster of 16 Tesla V100 GPU handling with popular DDL jobs
      shows that Vapor reduces job completion time by 21.8% compared with popular
      SOTA schedulers.", "venue": "2021 IEEE Intl Conf on Parallel & Distributed Processing
      with Applications, Big Data & Cloud Computing, Sustainable Computing & Communications,
      Social Computing & Networking (ISPA/BDCloud/SocialCom/SustainCom)", "year":
      2021, "referenceCount": 34, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-09-01", "journal": {"name": "2021 IEEE Intl Conf on Parallel & Distributed
      Processing with Applications, Big Data & Cloud Computing, Sustainable Computing
      & Communications, Social Computing & Networking (ISPA/BDCloud/SocialCom/SustainCom)",
      "pages": "108-116"}, "citationStyles": {"bibtex": "@Article{Zhu2021VaporAG,\n
      author = {Xiaorui Zhu and Lei Gong and Zongwei Zhu and Xuehai Zhou},\n booktitle
      = {2021 IEEE Intl Conf on Parallel & Distributed Processing with Applications,
      Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing
      & Networking (ISPA/BDCloud/SocialCom/SustainCom)},\n journal = {2021 IEEE Intl
      Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud
      Computing, Sustainable Computing & Communications, Social Computing & Networking
      (ISPA/BDCloud/SocialCom/SustainCom)},\n pages = {108-116},\n title = {Vapor:
      A GPU Sharing Scheduler with Communication and Computation Pipeline for Distributed
      Deep Learning},\n year = {2021}\n}\n"}, "authors": [{"authorId": "150345737",
      "name": "Xiaorui Zhu"}, {"authorId": "46350220", "name": "Lei Gong"}, {"authorId":
      "3089860", "name": "Zongwei Zhu"}, {"authorId": "8453780", "name": "Xuehai Zhou"}]},
      {"paperId": "33d5b60fa9db355856dcc3c79238779fd896b6bf", "externalIds": {"ArXiv":
      "1906.11321", "DBLP": "conf/pdp/RochaGFPRS19", "MAG": "2953924535", "DOI": "10.1109/EMPDP.2019.8671554",
      "CorpusId": 85500176}, "corpusId": 85500176, "publicationVenue": {"id": "d6283871-df25-4880-9c85-46e9830f0d22",
      "name": "International Euromicro Conference on Parallel, Distributed and Network-Based
      Processing", "type": "conference", "alternate_names": ["Int Euromicro Conf Parallel
      Distrib Network-based Process", "PDP", "Parallel Distrib Network-based Process",
      "Parallel, Distributed and Network-Based Processing"], "url": "http://www.euromicro.org/index.html"},
      "url": "https://www.semanticscholar.org/paper/33d5b60fa9db355856dcc3c79238779fd896b6bf",
      "title": "Heats: Heterogeneity-and Energy-Aware Task-Based Scheduling", "abstract":
      "Cloud providers usually offer diverse types of hardware for their users. Customers
      exploit this option to deploy cloud instances featuring GPUs, FPGAs, architectures
      other than x86 (e.g., ARM, IBM Power8), or featuring certain specific extensions
      (e.g., Intel SGX). We consider in this work the instances used by customers
      to deploy containers, nowadays the de facto standard for micro-services, or
      to execute computing tasks. In doing so, the underlying container orchestrator
      (e.g., Kubernetes) should be designed so as to take into account and exploit
      this hardware diversity. In addition, besides the feature range provided by
      different machines, there is an often overlooked diversity in the energy requirements
      introduced by hardware heterogeneity, which is simply ignored by default container
      orchestrator''s placement strategies. We introduce Heats, a new task-oriented
      and energy-aware orchestrator for containerized applications targeting heterogeneous
      clusters. Heats allows customers to trade performance vs. energy requirements.
      Our system first learns the performance and energy features of the physical
      hosts. Then, it monitors the execution of tasks on the hosts and opportunistically
      migrates them onto different cluster nodes to match the customer-required deployment
      trade-offs. Our Heats prototype is implemented within Google''s Kubernetes.
      The evaluation with synthetic traces in our cluster indicate that our approach
      can yield considerable energy savings (up to 8.5%) and only marginally affect
      the overall runtime of deployed tasks (by at most 7%). Heats is released as
      open-source.", "venue": "International Euromicro Conference on Parallel, Distributed
      and Network-Based Processing", "year": 2019, "referenceCount": 27, "citationCount":
      16, "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/1906.11321", "status": "GREEN"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2019-02-01", "journal": {"name": "2019 27th Euromicro International
      Conference on Parallel, Distributed and Network-Based Processing (PDP)", "pages":
      "400-405"}, "citationStyles": {"bibtex": "@Article{Rocha2019HeatsHE,\n author
      = {Isabelly Rocha and Christian G\u00f6ttel and P. Felber and Marcelo Pasin
      and Romain Rouvoy and V. Schiavoni},\n booktitle = {International Euromicro
      Conference on Parallel, Distributed and Network-Based Processing},\n journal
      = {2019 27th Euromicro International Conference on Parallel, Distributed and
      Network-Based Processing (PDP)},\n pages = {400-405},\n title = {Heats: Heterogeneity-and
      Energy-Aware Task-Based Scheduling},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "24988587", "name": "Isabelly Rocha"}, {"authorId": "14897828", "name": "Christian
      G\u00f6ttel"}, {"authorId": "1743906", "name": "P. Felber"}, {"authorId": "1970140",
      "name": "Marcelo Pasin"}, {"authorId": "1809154", "name": "Romain Rouvoy"},
      {"authorId": "2106027", "name": "V. Schiavoni"}]}, {"paperId": "33e7ccb32f2201b5d04046b1d114480d5c5d7644",
      "externalIds": {"DBLP": "conf/cloudnet/NguyenDHZ20", "MAG": "3128097083", "DOI":
      "10.1109/CloudNet51028.2020.9335809", "CorpusId": 231822950}, "corpusId": 231822950,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/33e7ccb32f2201b5d04046b1d114480d5c5d7644",
      "title": "Collaborative Container-based Parked Vehicle Edge Computing Framework
      for Online Task Offloading", "abstract": "As most vehicles spend over 95% of
      their time in the parking lots, the powerful computing resources of parked vehicles
      (PVs) are underutilized, that can be considered as available computing nodes
      to run tasks as well as an extension of the existing infrastructure. In this
      paper, we propose EdgePV, a collaborative computing paradigm to efficiently
      improve online heterogeneous task scheduling. To guarantee service reliability,
      a container orchestration (e.g. Kubernetes) is advocated to be integrated into
      this proposed architecture due to its notable advanced features such as load-balancing,
      auto-healing, resource isolation, security, etc,. Kubernetes coordinates PVs
      to run sufficient numbers of task replicas, providing high service availability
      against possible failure caused by the mobility of PVs. We investigate how efficient
      PVs can handle the online computational tasks during peak hours. We also present
      the dual cost and utility-aware heuristic algorithm, compared with a set of
      heuristics to solve the problem of task scheduling, that can be devised for
      replacing the default scheduler in Kubernetes platform. Extensive simulation
      results show that our proposed design improves the task acceptance ratios and
      average costs at least 23% and 64%, respectively, at lowest task arrival rate
      compared to the cooperated cloud-edge architecture. Furthermore, owners of PVs
      can significantly benefit from incentives received by sharing the idle resources
      of their PVs.", "venue": "2020 IEEE 9th International Conference on Cloud Networking
      (CloudNet)", "year": 2020, "referenceCount": 16, "citationCount": 8, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2020-11-09", "journal": {"name": "2020 IEEE 9th International
      Conference on Cloud Networking (CloudNet)", "pages": "1-6"}, "citationStyles":
      {"bibtex": "@Article{Nguyen2020CollaborativeCP,\n author = {Khoa T. D. Nguyen
      and S. Drew and Changcheng Huang and Jiayu Zhou},\n booktitle = {2020 IEEE 9th
      International Conference on Cloud Networking (CloudNet)},\n journal = {2020
      IEEE 9th International Conference on Cloud Networking (CloudNet)},\n pages =
      {1-6},\n title = {Collaborative Container-based Parked Vehicle Edge Computing
      Framework for Online Task Offloading},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "1381616828", "name": "Khoa T. D. Nguyen"}, {"authorId": "2047932657", "name":
      "S. Drew"}, {"authorId": "1740408", "name": "Changcheng Huang"}, {"authorId":
      "2131573459", "name": "Jiayu Zhou"}]}, {"paperId": "3402db72317bdae33b94b3bf84f80c6f86201fb5",
      "externalIds": {"MAG": "3110446646", "DBLP": "journals/corr/abs-2011-12895",
      "ArXiv": "2011.12895", "CorpusId": 227162808}, "corpusId": 227162808, "publicationVenue":
      {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names":
      ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/3402db72317bdae33b94b3bf84f80c6f86201fb5",
      "title": "TLeague: A Framework for Competitive Self-Play based Distributed Multi-Agent
      Reinforcement Learning", "abstract": "Competitive Self-Play (CSP) based Multi-Agent
      Reinforcement Learning (MARL) has shown phenomenal breakthroughs recently. Strong
      AIs are achieved for several benchmarks, including Dota 2, Glory of Kings, Quake
      III, StarCraft II, to name a few. Despite the success, the MARL training is
      extremely data thirsty, requiring typically billions of (if not trillions of)
      frames be seen from the environment during training in order for learning a
      high performance agent. This poses non-trivial difficulties for researchers
      or engineers and prevents the application of MARL to a broader range of real-world
      problems. To address this issue, in this manuscript we describe a framework,
      referred to as TLeague, that aims at large-scale training and implements several
      main-stream CSP-MARL algorithms. The training can be deployed in either a single
      machine or a cluster of hybrid machines (CPUs and GPUs), where the standard
      Kubernetes is supported in a cloud native manner. TLeague achieves a high throughput
      and a reasonable scale-up when performing distributed training. Thanks to the
      modular design, it is also easy to extend for solving other multi-agent problems
      or implementing and verifying MARL algorithms. We present experiments over StarCraft
      II, ViZDoom and Pommerman to show the efficiency and effectiveness of TLeague.
      The code is open-sourced and available at https://github.com/tencent-ailab/tleague_projpage",
      "venue": "arXiv.org", "year": 2020, "referenceCount": 68, "citationCount": 13,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-11-25", "journal": {"name": "ArXiv", "volume": "abs/2011.12895"}, "citationStyles":
      {"bibtex": "@Article{Sun2020TLeagueAF,\n author = {Peng Sun and Jiechao Xiong
      and Lei Han and Xinghai Sun and Shuxing Li and Jiawei Xu and Meng Fang and Zhengyou
      Zhang},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {TLeague:
      A Framework for Competitive Self-Play based Distributed Multi-Agent Reinforcement
      Learning},\n volume = {abs/2011.12895},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "2075416111", "name": "Peng Sun"}, {"authorId": "3081531", "name": "Jiechao
      Xiong"}, {"authorId": "1390738614", "name": "Lei Han"}, {"authorId": "1910318",
      "name": "Xinghai Sun"}, {"authorId": "2115951736", "name": "Shuxing Li"}, {"authorId":
      "2110476942", "name": "Jiawei Xu"}, {"authorId": "2055723958", "name": "Meng
      Fang"}, {"authorId": "2148905709", "name": "Zhengyou Zhang"}]}, {"paperId":
      "3404abedd7035fc52d0c581b94d534318333f0e6", "externalIds": {"MAG": "2764020494",
      "DBLP": "conf/gecon/GraciaTATBR17", "DOI": "10.1007/978-3-319-68066-8_13", "CorpusId":
      23217690}, "corpusId": 23217690, "publicationVenue": {"id": "339231ae-625f-45bd-a860-089e2de02e23",
      "name": "Grid Economics and Business Models", "type": "conference", "alternate_names":
      ["GECON", "Grid Econ Bus Model"], "url": "http://www.wikicfp.com/cfp/program?id=1122"},
      "url": "https://www.semanticscholar.org/paper/3404abedd7035fc52d0c581b94d534318333f0e6",
      "title": "Client-Side Scheduling Based on Application Characterization on Kubernetes",
      "abstract": null, "venue": "Grid Economics and Business Models", "year": 2017,
      "referenceCount": 20, "citationCount": 24, "influentialCitationCount": 2, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://zaguan.unizar.es/record/75661/files/texto_completo.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2017-09-19", "journal": {"pages": "162-176"}, "citationStyles":
      {"bibtex": "@Article{Gracia2017ClientSideSB,\n author = {V\u00edctor Medel Gracia
      and Carlos Tol\u00f3n and U. Arronategui and Rafael Tolosana-Calasanz and J.
      A. Ba\u00f1ares and O. Rana},\n booktitle = {Grid Economics and Business Models},\n
      pages = {162-176},\n title = {Client-Side Scheduling Based on Application Characterization
      on Kubernetes},\n year = {2017}\n}\n"}, "authors": [{"authorId": "1411195508",
      "name": "V\u00edctor Medel Gracia"}, {"authorId": "1411220675", "name": "Carlos
      Tol\u00f3n"}, {"authorId": "1794630", "name": "U. Arronategui"}, {"authorId":
      "1402302821", "name": "Rafael Tolosana-Calasanz"}, {"authorId": "1715306", "name":
      "J. A. Ba\u00f1ares"}, {"authorId": "1751264", "name": "O. Rana"}]}, {"paperId":
      "342c3a066b1f446c80b364558d49c8f4e56cd9b2", "externalIds": {"DBLP": "journals/corr/abs-2207-12087",
      "ArXiv": "2207.12087", "DOI": "10.1145/3538969.3543810", "CorpusId": 251040590},
      "corpusId": 251040590, "publicationVenue": {"id": "6be078fe-e448-4123-8096-25493e7a2502",
      "name": "ARES", "type": "conference", "alternate_names": ["Availability, Reliability
      and Security", "Availab Reliab Secur", "International Conference on Availability,
      Reliability and Security", "Int Conf Availab Reliab Secur"], "issn": "2554-2656",
      "url": "https://ares.hypotheses.org/", "alternate_urls": ["http://www.ares-conference.eu/"]},
      "url": "https://www.semanticscholar.org/paper/342c3a066b1f446c80b364558d49c8f4e56cd9b2",
      "title": "Learning State Machines to Monitor and Detect Anomalies on a Kubernetes
      Cluster", "abstract": "These days more companies are shifting towards using
      cloud environments to provide their services to their client. While it is easy
      to set up a cloud environment, it is equally important to monitor the system\u2019s
      runtime behaviour and identify anomalous behaviours that occur during its operation.
      In recent years, the utilisation of Recurrent Neural Networks (RNNs) and Deep
      Neural Networks (DNNs) to detect anomalies that might occur during runtime has
      been a trending approach. However, it is unclear how to explain the decisions
      made by these networks and how these networks should be interpreted to understand
      the runtime behaviour that they model. On the contrary, state machine models
      provide an easier manner to interpret and understand the behaviour that they
      model. In this work, we propose an approach that learns state machine models
      to model the runtime behaviour of a cloud environment that runs multiple microservice
      applications. To the best of our knowledge, this is the first work that tries
      to apply state machine models to microservice architectures. The state machine
      model is used to detect the different types of attacks that we launch on the
      cloud environment. From our experiment results, our approach can detect the
      attacks very well, achieving a balanced accuracy of 99.2% and a F1 score of
      0.982.", "venue": "ARES", "year": 2022, "referenceCount": 28, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3538969.3543810", "status": "HYBRID"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2022-06-28", "journal": {"name":
      "Proceedings of the 17th International Conference on Availability, Reliability
      and Security"}, "citationStyles": {"bibtex": "@Article{Cao2022LearningSM,\n
      author = {Clinton Cao and Agathe Blaise and S. Verwer and Filippo Rebecchi},\n
      booktitle = {ARES},\n journal = {Proceedings of the 17th International Conference
      on Availability, Reliability and Security},\n title = {Learning State Machines
      to Monitor and Detect Anomalies on a Kubernetes Cluster},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "9728897", "name": "Clinton Cao"}, {"authorId": "5860038",
      "name": "Agathe Blaise"}, {"authorId": "1682757", "name": "S. Verwer"}, {"authorId":
      "34941448", "name": "Filippo Rebecchi"}]}, {"paperId": "345307599f2d680bedc5434dfc027d02a22c38e1",
      "externalIds": {"DBLP": "journals/corr/abs-2305-00600", "ArXiv": "2305.00600",
      "DOI": "10.48550/arXiv.2305.00600", "CorpusId": 258426510}, "corpusId": 258426510,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/345307599f2d680bedc5434dfc027d02a22c38e1",
      "title": "Containerization of a polyglot microservice application using Docker
      and Kubernetes", "abstract": "This project investigates the benefits of containerization
      technology in modern software development and deployment. The study emphasizes
      the advantages of using Kubernetes and Docker in the development process, including
      the easy packaging and deployment of microservices, efficient resource utilization,
      faster startup times, and greater scalability and flexibility. The project concludes
      by proposing a study that involves creating a polyglot microservice application
      using Java, Python, and JavaScript, containerizing it with Docker, and deploying
      it in Kubernetes. The study aims to evaluate service discovery and auto-scaling
      in distributed mode and compare the performance metrics with virtual machines
      and containers. The results of this study can inform software development teams
      about the benefits of containerization in modern software development and deployment.",
      "venue": "arXiv.org", "year": 2023, "referenceCount": 16, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "http://arxiv.org/pdf/2305.00600", "status": "CLOSED"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-04-30", "journal": {"name": "ArXiv",
      "volume": "abs/2305.00600"}, "citationStyles": {"bibtex": "@Article{Yepuri2023ContainerizationOA,\n
      author = {V. Yepuri and Venkata Kalyan Polamarasetty and Shivani Donthi and
      Ajay Kumar Reddy Gondi},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title
      = {Containerization of a polyglot microservice application using Docker and
      Kubernetes},\n volume = {abs/2305.00600},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "46674646", "name": "V. Yepuri"}, {"authorId": "2215830791", "name":
      "Venkata Kalyan Polamarasetty"}, {"authorId": "2215822447", "name": "Shivani
      Donthi"}, {"authorId": "2215822445", "name": "Ajay Kumar Reddy Gondi"}]}, {"paperId":
      "3465516f76ea93ff8349cdfd944f9e348838ca6e", "externalIds": {"ArXiv": "2311.09526",
      "DBLP": "journals/corr/abs-2311-09526", "DOI": "10.48550/arXiv.2311.09526",
      "CorpusId": 265221173}, "corpusId": 265221173, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/3465516f76ea93ff8349cdfd944f9e348838ca6e",
      "title": "Towards Serverless Optimization with In-place Scaling", "abstract":
      "Serverless computing has gained popularity due to its cost efficiency, ease
      of deployment, and enhanced scalability. However, in serverless environments,
      servers are initiated only after receiving a request, leading to increased response
      times. This delay is commonly known as the cold start problem. In this study,
      we explore the in-place scaling feature released in Kubernetes v1.27 and examine
      its impact on serverless computing. Our experimental results reveal improvements
      in request latency, with reductions ranging from 1.16 to 18.15 times across
      various workloads when compared to traditional cold policy.", "venue": "arXiv.org",
      "year": 2023, "referenceCount": 31, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-11-16", "journal": {"name": "ArXiv", "volume": "abs/2311.09526"}, "citationStyles":
      {"bibtex": "@Article{Hsieh2023TowardsSO,\n author = {Vincent Hsieh and Jerry
      Chou},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {Towards Serverless
      Optimization with In-place Scaling},\n volume = {abs/2311.09526},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2266840958", "name": "Vincent Hsieh"}, {"authorId":
      "2266841251", "name": "Jerry Chou"}]}, {"paperId": "3485a30f522883a4b34393e1e0f4d6dc7b741ed2",
      "externalIds": {"MAG": "2891060526", "DBLP": "conf/ccs/ChenK18", "DOI": "10.1145/3243734.3243823",
      "CorpusId": 53110118}, "corpusId": 53110118, "publicationVenue": {"id": "73f7fe95-b68b-468f-b7ba-3013ca879e50",
      "name": "Conference on Computer and Communications Security", "type": "conference",
      "alternate_names": ["Int Workshop Cogn Cell Syst", "CCS", "Comput Commun Secur",
      "CcS", "International Symposium on Community-centric Systems", "International
      Workshop on Cognitive Cellular Systems", "Conf Comput Commun Secur", "Comb Comput
      Sci", "Int Symp Community-centric Syst", "Combinatorics and Computer Science",
      "Circuits, Signals, and Systems", "Computer and Communications Security", "Circuit
      Signal Syst"], "url": "https://dl.acm.org/conference/ccs"}, "url": "https://www.semanticscholar.org/paper/3485a30f522883a4b34393e1e0f4d6dc7b741ed2",
      "title": "Mystique: Uncovering Information Leakage from Browser Extensions",
      "abstract": "Browser extensions are small JavaScript, CSS and HTML programs
      that run inside the browser with special privileges. These programs, often written
      by third parties, operate on the pages that the browser is visiting, giving
      the user a programmatic way to configure the browser. The privacy implications
      that arise by allowing privileged third-party code to execute inside the users''
      browser are not well understood. In this paper, we develop a taint analysis
      framework for browser extensions and use it to perform a large scale study of
      extensions in regard to their privacy practices. We first present a hybrid approach
      to traditional taint analysis: by leveraging the fact that extension source
      code is available to the runtime JavaScript engine, we implement as well as
      enhance traditional taint analysis using information gathered from static data
      flow and control-flow analysis of the JavaScript source code. Based on this,
      we further modify the Chromium browser to support taint tracking for extensions.
      We analyzed 178,893 extensions crawled from the Chrome Web Store between September
      2016 and March 2018, as well as a separate set of all available extensions (2,790
      in total) for the Opera browser at the time of analysis. From these, our analysis
      flagged 3,868 (2.13%) extensions as potentially leaking privacy-sensitive information.
      The top 10 most popular Chrome extensions that we confirmed to be leaking privacy-sensitive
      information have more than 60 million users combined. We ran the analysis on
      a local Kubernetes cluster and were able to finish within a month, demonstrating
      the feasibility of our approach for large-scale analysis of browser extensions.
      At the same time, our results emphasize the threat browser extensions pose to
      user privacy, and the need for countermeasures to safeguard against misbehaving
      extensions that abuse their privileges.", "venue": "Conference on Computer and
      Communications Security", "year": 2018, "referenceCount": 27, "citationCount":
      56, "influentialCitationCount": 5, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3243734.3243823", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Book", "JournalArticle", "Conference"], "publicationDate": "2018-10-08", "journal":
      {"name": "Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications
      Security"}, "citationStyles": {"bibtex": "@Book{Chen2018MystiqueUI,\n author
      = {Quan Chen and A. Kapravelos},\n booktitle = {Conference on Computer and Communications
      Security},\n journal = {Proceedings of the 2018 ACM SIGSAC Conference on Computer
      and Communications Security},\n title = {Mystique: Uncovering Information Leakage
      from Browser Extensions},\n year = {2018}\n}\n"}, "authors": [{"authorId": "2109396907",
      "name": "Quan Chen"}, {"authorId": "1696427", "name": "A. Kapravelos"}]}, {"paperId":
      "34db7d648fda86a7a4e1332e474dcd37df37850a", "externalIds": {"DOI": "10.3837/tiis.2023.06.003",
      "CorpusId": 259654090}, "corpusId": 259654090, "publicationVenue": {"id": "8f5e0848-3fd6-4129-ab41-393d4529fd7c",
      "name": "KSII Transactions on Internet and Information Systems", "type": "journal",
      "alternate_names": ["Ksii Trans Internet Inf Syst", "Ksii Transactions on Internet
      and Information Systems", "KSII Trans Internet Inf Syst"], "issn": "1976-7277",
      "url": "http://www.ksii.or.kr/", "alternate_urls": ["http://www.itiis.org/"]},
      "url": "https://www.semanticscholar.org/paper/34db7d648fda86a7a4e1332e474dcd37df37850a",
      "title": "Resource Metric Refining Module for AIOps Learning Data in Kubernetes
      Microservice", "abstract": null, "venue": "KSII Transactions on Internet and
      Information Systems", "year": 2023, "referenceCount": 0, "citationCount": 1,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://itiis.org/digital-library/manuscript/file/50765/TIIS Vol 17, No 6-3.pdf",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-06-30", "journal": {"name": "KSII Transactions on Internet
      and Information Systems"}, "citationStyles": {"bibtex": "@Article{None,\n booktitle
      = {KSII Transactions on Internet and Information Systems},\n journal = {KSII
      Transactions on Internet and Information Systems},\n title = {Resource Metric
      Refining Module for AIOps Learning Data in Kubernetes Microservice},\n year
      = {2023}\n}\n"}, "authors": []}, {"paperId": "3508add8658d73632766058f753aa288a333b0b2",
      "externalIds": {"MAG": "3047511888", "CorpusId": 226163578}, "corpusId": 226163578,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3508add8658d73632766058f753aa288a333b0b2",
      "title": "Hands-On Software Engineering with Golang", "abstract": "Explore software
      engineering methodologies, techniques, and best practices in Go programming
      to build easy-to-maintain software that can effortlessly scale on demand\nKey
      Features\nApply best practices to produce lean, testable, and maintainable Go
      code to avoid accumulating technical debt\n\nExplore Go''s built-in support
      for concurrency and message passing to build high-performance applications\n\nScale
      your Go programs across machines and manage their life cycle using Kubernetes\nBook
      Description\nOver the last few years, Go has become one of the favorite languages
      for building scalable and distributed systems. Its opinionated design and built-in
      concurrency features make it easy for engineers to author code that efficiently
      utilizes all available CPU cores.\n\nThis Golang book distills industry best
      practices for writing lean Go code that is easy to test and maintain, and helps
      you to explore its practical implementation by creating a multi-tier application
      called Links ''R'' Us from scratch. You''ll be guided through all the steps
      involved in designing, implementing, testing, deploying, and scaling an application.
      Starting with a monolithic architecture, you''ll iteratively transform the project
      into a service-oriented architecture (SOA) that supports the efficient out-of-core
      processing of large link graphs. You''ll learn about various cutting-edge and
      advanced software engineering techniques such as building extensible data processing
      pipelines, designing APIs using gRPC, and running distributed graph processing
      algorithms at scale. Finally, you''ll learn how to compile and package your
      Go services using Docker and automate their deployment to a Kubernetes cluster.\n\nBy
      the end of this book, you''ll know how to think like a professional software
      developer or engineer and write lean and efficient Go code.\n\n\nWhat you will
      learn\nUnderstand different stages of the software development life cycle and
      the role of a software engineer\n\nCreate APIs using gRPC and leverage the middleware
      offered by the gRPC ecosystem\n\nDiscover various approaches to managing package
      dependencies for your projects\n\nBuild an end-to-end project from scratch and
      explore different strategies for scaling it\n\nDevelop a graph processing system
      and extend it to run in a distributed manner\n\nDeploy Go services on Kubernetes
      and monitor their health using Prometheus\nWho this book is for\nThis Golang
      programming book is for developers and software engineers looking to use Go
      to design and build scalable distributed systems effectively. Knowledge of Go
      programming and basic networking principles is required.", "venue": "", "year":
      2020, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2020-01-24",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Anagnostopoulos2020HandsOnSE,\n
      author = {A. Anagnostopoulos},\n title = {Hands-On Software Engineering with
      Golang},\n year = {2020}\n}\n"}, "authors": [{"authorId": "1691701", "name":
      "A. Anagnostopoulos"}]}, {"paperId": "35395df09da12fc10540b67fcca09365aadcf84b",
      "externalIds": {"MAG": "3042409815", "DOI": "10.23919/CISTI49556.2020.9141168",
      "CorpusId": 220606111}, "corpusId": 220606111, "publicationVenue": {"id": "b63861a6-ab0a-47a4-9f6c-accf03b5a180",
      "name": "Iberian Conference on Information Systems and Technologies", "type":
      "conference", "alternate_names": ["CISTI", "Iber Conf Inf Syst Technol"]}, "url":
      "https://www.semanticscholar.org/paper/35395df09da12fc10540b67fcca09365aadcf84b",
      "title": "Performance Evaluation of the Virtualization Environment of a Microservices-Based
      Payroll System", "abstract": "For better usage of idle resources in a symmetric
      multiprocessing environment, cloud computing providers often exploit the boundaries
      of parallelism by imposing high CPU subscription rates over their virtualization
      systems. Moreover, unsuitable resource allocation can significantly impair the
      performance during intensive workloads and increase infrastructure expenditures
      unnecessarily. It becomes an increasing challenge when dealing with microservices
      architecture and container encapsulated applications, for these are approaches
      that add more intricacy layers to the workload scheduling over the hardware.
      This paper presents a case study on a public agency private cloud, which aims
      to evaluate the performance of hypervisors and virtual machines, that are serving
      a Kubernetes container orchestration cluster and running a microservices-based
      Payroll System during CPU-bound behavior tasks. We also propose a model for
      sizing the virtual environment according to the best choices for the hardware
      characteristics and the workload needs.", "venue": "Iberian Conference on Information
      Systems and Technologies", "year": 2020, "referenceCount": 29, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2020-06-01", "journal": {"name": "2020 15th
      Iberian Conference on Information Systems and Technologies (CISTI)", "pages":
      "1-6"}, "citationStyles": {"bibtex": "@Conference{Castro2020PerformanceEO,\n
      author = {Klayton Castro and L. M. C. E. Martins and Polyane Wercelens and Rafael
      Padilha and Italo Gerv\u00e1sio and F. D. de Deus and W. Giozza and R. D. de
      Sousa},\n booktitle = {Iberian Conference on Information Systems and Technologies},\n
      journal = {2020 15th Iberian Conference on Information Systems and Technologies
      (CISTI)},\n pages = {1-6},\n title = {Performance Evaluation of the Virtualization
      Environment of a Microservices-Based Payroll System},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "39684102", "name": "Klayton Castro"}, {"authorId":
      "134315285", "name": "L. M. C. E. Martins"}, {"authorId": "31472189", "name":
      "Polyane Wercelens"}, {"authorId": "2066151649", "name": "Rafael Padilha"},
      {"authorId": "1820937484", "name": "Italo Gerv\u00e1sio"}, {"authorId": "9208266",
      "name": "F. D. de Deus"}, {"authorId": "2340298", "name": "W. Giozza"}, {"authorId":
      "31565627", "name": "R. D. de Sousa"}]}, {"paperId": "35755ac92917e08d594e0d7997acc6e2c980e583",
      "externalIds": {"DBLP": "conf/xsede/ZhangG22", "DOI": "10.1145/3491418.3535152",
      "CorpusId": 250360455}, "corpusId": 250360455, "publicationVenue": {"id": "b85446b1-9eb7-4d6d-bfde-e2b0c6b2cfb6",
      "name": "Practice and Experience in Advanced Research Computing", "type": "conference",
      "alternate_names": ["PEARC", "Pract Exp Adv Res Comput"], "url": "https://www.pearc.org/"},
      "url": "https://www.semanticscholar.org/paper/35755ac92917e08d594e0d7997acc6e2c980e583",
      "title": "BioContainers on Purdue Clusters", "abstract": "Container technologies
      such as Docker, Kubernetes, and SingularityCE have been receiving an increasing
      level of attention in academic institutions. Containers wrap up the application
      into an isolated file system containing everything it needs to run, such as
      compiler, libraries and dependencies. This enables containers to always run
      the same, regardless of the environment in which they are running, promoting
      container technology as a critical tool for reproducible research. In high-performance
      computing (HPC) context, containers gain popularity because they can significantly
      reduce the administrators\u2019 work of deploying applications. On Purdue University
      HPC clusters, several hundred SingularityCE containers have been deployed. Here,
      we will introduce how SingularityCE containers are used to create the bioinformatic
      tool collection (biocontainers). Due to the ease of deployment and portability,
      biocontainers have been deployed in Purdue\u2019s 6 HPC clusters as well as
      XSEDE Anvil, providing a reliable and reproducible computing environment for
      life science researchers.", "venue": "Practice and Experience in Advanced Research
      Computing", "year": 2022, "referenceCount": 6, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Biology",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2022-07-08",
      "journal": {"name": "Practice and Experience in Advanced Research Computing"},
      "citationStyles": {"bibtex": "@Article{Zhang2022BioContainersOP,\n author =
      {Yucheng Zhang and Lev Gorenstein},\n booktitle = {Practice and Experience in
      Advanced Research Computing},\n journal = {Practice and Experience in Advanced
      Research Computing},\n title = {BioContainers on Purdue Clusters},\n year =
      {2022}\n}\n"}, "authors": [{"authorId": "2108472947", "name": "Yucheng Zhang"},
      {"authorId": "35917912", "name": "Lev Gorenstein"}]}, {"paperId": "35a3fd76f9fc38bf3778749c8de590e44c80103e",
      "externalIds": {"DBLP": "conf/msn/ZhangDRG22", "DOI": "10.1109/MSN57253.2022.00049",
      "CorpusId": 257809344}, "corpusId": 257809344, "publicationVenue": {"id": "72a6d50c-86ae-47c7-9a0e-54e5746aacee",
      "name": "International Conference on Mobile Ad-hoc and Sensor Networks", "type":
      "conference", "alternate_names": ["MSN", "Mobile Ad-hoc and Sensor Networks",
      "Int Conf Mob Ad-hoc Sens Netw", "Mob Ad-hoc Sens Netw"]}, "url": "https://www.semanticscholar.org/paper/35a3fd76f9fc38bf3778749c8de590e44c80103e",
      "title": "EdgeMan: Ensuring Real-Time Service for Containerized Edge Systems",
      "abstract": "Containers have emerged as a popular technology for edge computing
      platforms. Although there are varieties of container orchestration frameworks,
      e.g., Kubernetes to provide high-reliable services for cloud infrastructure,
      ensuring realtime service at the containerized edge systems (CESs) remains a
      challenge. In this paper, we propose Edgeman,a holistic edge service management
      framework for CESs, which consists of (1) a model-assisted event-driven lightweight
      online scheduling algorithm to provide request-level execution plans; (2) a
      bottleneck-metric-aware progressive resource allocation mechanism to improve
      resource efficiency. We then build a testbed that installed three containerized
      services with different latency sensitivities for concrete evaluation. Besides,
      we adopt real-world data traces from Alibaba and Twitter for large-scale emulations.
      Extensive experiments demonstrate that the deadline miss ratio of Edgemanis
      reduced 85.9% on average compared with existing methods in both industry and
      academia.", "venue": "International Conference on Mobile Ad-hoc and Sensor Networks",
      "year": 2022, "referenceCount": 29, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-12-01", "journal": {"name": "2022 18th International
      Conference on Mobility, Sensing and Networking (MSN)", "pages": "231-238"},
      "citationStyles": {"bibtex": "@Article{Zhang2022EdgeManER,\n author = {Wenzhao
      Zhang and Wei Dong and Geng Ren and Yi Gao},\n booktitle = {International Conference
      on Mobile Ad-hoc and Sensor Networks},\n journal = {2022 18th International
      Conference on Mobility, Sensing and Networking (MSN)},\n pages = {231-238},\n
      title = {EdgeMan: Ensuring Real-Time Service for Containerized Edge Systems},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2157270430", "name": "Wenzhao
      Zhang"}, {"authorId": "144847593", "name": "Wei Dong"}, {"authorId": "2193649122",
      "name": "Geng Ren"}, {"authorId": "49658142", "name": "Yi Gao"}]}, {"paperId":
      "35acafc02a7588b68a65a192ff8daf1f1d37207d", "externalIds": {"MAG": "2966635673",
      "DBLP": "conf/xsede/BreenBCFGGGKMPR19", "DOI": "10.1145/3332186.3332236", "CorpusId":
      199379372}, "corpusId": 199379372, "publicationVenue": {"id": "b85446b1-9eb7-4d6d-bfde-e2b0c6b2cfb6",
      "name": "Practice and Experience in Advanced Research Computing", "type": "conference",
      "alternate_names": ["PEARC", "Pract Exp Adv Res Comput"], "url": "https://www.pearc.org/"},
      "url": "https://www.semanticscholar.org/paper/35acafc02a7588b68a65a192ff8daf1f1d37207d",
      "title": "Developing Edge Services for Federated Infrastructure Using MiniSLATE",
      "abstract": "Modern software development workflow patterns often involve the
      use of a developer''s local machine as the first platform for testing code.
      SLATE mimics this paradigm with an implementation of a light-weight version,
      called MiniSLATE[? ], that runs completely contained on the developer''s local
      machine or scales to larger machines (laptop, virtual machine, or another physical
      server). MiniSLATE resolves many development environment issues by providing
      an isolated and local configuration for the developer. Application developers
      are able to download MiniSLATE which provides a fully orchestrated set of containers
      on top of a production SLATE platform, complete with central information service,
      API server, and a local Kubernetes cluster. This approach mitigates the overhead
      of a hypervisor but still provides the requisite isolated environment. They
      are able to create the environment, iterate, destroy it, and repeat at will.
      A local MiniSLATE environment also allows the developer to explore the packaging
      of the edge service within a constrained security context in order to validate
      its full functionality within limited permissions. As a result, developers are
      able to test the functionality of their application with the complete complement
      of SLATE components local to their development environment without the overhead
      of building a cluster or virtual machine, registering a cluster, interacting
      with the production SLATE platform, etc.", "venue": "Practice and Experience
      in Advanced Research Computing", "year": 2019, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2019-07-28", "journal": {"name":
      "Proceedings of the Practice and Experience in Advanced Research Computing on
      Rise of the Machines (learning)"}, "citationStyles": {"bibtex": "@Article{Breen2019DevelopingES,\n
      author = {Joe Breen and L. Bryant and Jiahui Chen and Emerson Ford and R. Gardner
      and Gage Glupker and Skyler Griffith and Ben Kulbertis and S. McKee and R. Pierce
      and B. Riedel and Mitchell Steinman and Jason Stidd and Luan Truong and Jeremy
      Van and I. Vukotic and Christopher N. Weaver},\n booktitle = {Practice and Experience
      in Advanced Research Computing},\n journal = {Proceedings of the Practice and
      Experience in Advanced Research Computing on Rise of the Machines (learning)},\n
      title = {Developing Edge Services for Federated Infrastructure Using MiniSLATE},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "144569245", "name": "Joe Breen"},
      {"authorId": "51117490", "name": "L. Bryant"}, {"authorId": "2144202670", "name":
      "Jiahui Chen"}, {"authorId": "48434897", "name": "Emerson Ford"}, {"authorId":
      "41203336", "name": "R. Gardner"}, {"authorId": "151358983", "name": "Gage Glupker"},
      {"authorId": "151446928", "name": "Skyler Griffith"}, {"authorId": "146275430",
      "name": "Ben Kulbertis"}, {"authorId": "144603685", "name": "S. McKee"}, {"authorId":
      "151444415", "name": "R. Pierce"}, {"authorId": "49508749", "name": "B. Riedel"},
      {"authorId": "151461257", "name": "Mitchell Steinman"}, {"authorId": "147160201",
      "name": "Jason Stidd"}, {"authorId": "2065288965", "name": "Luan Truong"}, {"authorId":
      "2068907615", "name": "Jeremy Van"}, {"authorId": "8426071", "name": "I. Vukotic"},
      {"authorId": "2060178459", "name": "Christopher N. Weaver"}]}, {"paperId": "35b4b5e8eaaf28801ec62c020f1b9867b735493e",
      "externalIds": {"CorpusId": 246472553}, "corpusId": 246472553, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/35b4b5e8eaaf28801ec62c020f1b9867b735493e",
      "title": "METAMODELING ENVIRONMENT IN CLOUD", "abstract": "Nowadays, moving
      everything to the Cloud is a trend that is still rising, due to many advantages,
      like the efficient resource management. In the case of modeling tools, moving
      to Cloud increases the collaborative potential, alongside with the accessibility
      to the common user that comes along with this approach. The paper presents the
      deployment of a metamodeling environment in a public Cloud, based on technologies
      such as Docker and Kubernetes. The solution offers modeling services in Cloud
      with a private collaboration capability, for creating modeling environments
      specific to various domains. The paper gives an example for modeling sensor
      networks, by migrating an on-site modeling environment to a web-based one, hosted
      in Cloud.", "venue": "", "year": 2020, "referenceCount": 9, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Inproceedings{L\u0103c\u0103tu\u0219u2020METAMODELINGEI,\n author = {Marian
      L\u0103c\u0103tu\u0219u and A. Ionita},\n title = {METAMODELING ENVIRONMENT
      IN CLOUD},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2088496125", "name":
      "Marian L\u0103c\u0103tu\u0219u"}, {"authorId": "3300755", "name": "A. Ionita"}]},
      {"paperId": "35dec258baa411e80c754d955c11cdbe5afac2c5", "externalIds": {"DBLP":
      "conf/supercomputer/MedeirosSWP23", "DOI": "10.1007/978-3-031-40843-4_15", "CorpusId":
      261343879}, "corpusId": 261343879, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/35dec258baa411e80c754d955c11cdbe5afac2c5",
      "title": "A GPU-Accelerated Molecular Docking Workflow with Kubernetes and Apache
      Airflow", "abstract": null, "venue": "ISC Workshops", "year": 2023, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "193-206"}, "citationStyles": {"bibtex": "@Article{Medeiros2023AGM,\n
      author = {D. Medeiros and Gabin Schieffer and Jacob Wahlgren and I. Peng},\n
      booktitle = {ISC Workshops},\n pages = {193-206},\n title = {A GPU-Accelerated
      Molecular Docking Workflow with Kubernetes and Apache Airflow},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2226452874", "name": "D. Medeiros"}, {"authorId":
      "2226457272", "name": "Gabin Schieffer"}, {"authorId": "123760771", "name":
      "Jacob Wahlgren"}, {"authorId": "2580938", "name": "I. Peng"}]}, {"paperId":
      "36161e2b83db24ba242140a1907592c395a7846d", "externalIds": {"DBLP": "journals/fcsc/ZhuHZ22",
      "DOI": "10.1007/s11704-021-0118-1", "CorpusId": 238262089}, "corpusId": 238262089,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/36161e2b83db24ba242140a1907592c395a7846d",
      "title": "A bi-metric autoscaling approach for n-tier web applications on kubernetes",
      "abstract": null, "venue": "Frontiers of Computer Science", "year": 2021, "referenceCount":
      30, "citationCount": 10, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-09-27", "journal":
      {"name": "Frontiers of Computer Science", "volume": "16"}, "citationStyles":
      {"bibtex": "@Article{Zhu2021ABA,\n author = {Changpeng Zhu and B. Han and Yinliang
      Zhao},\n booktitle = {Frontiers of Computer Science},\n journal = {Frontiers
      of Computer Science},\n title = {A bi-metric autoscaling approach for n-tier
      web applications on kubernetes},\n volume = {16},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2141110", "name": "Changpeng Zhu"}, {"authorId": "71649694",
      "name": "B. Han"}, {"authorId": "35213482", "name": "Yinliang Zhao"}]}, {"paperId":
      "3626888ea022f2a1ed765f3655e9f1cb08404d54", "externalIds": {"ArXiv": "2103.13333",
      "DBLP": "journals/corr/abs-2103-13333", "DOI": "10.1109/ICDCS51616.2021.00042",
      "CorpusId": 232335831}, "corpusId": 232335831, "publicationVenue": {"id": "ffe5bb5c-04ed-488e-985d-d3a7b39542cf",
      "name": "IEEE International Conference on Distributed Computing Systems", "type":
      "conference", "alternate_names": ["International Conference on Distributed Computing
      Systems", "IEEE Int Conf Distrib Comput Syst", "Int Conf Device Circuit Syst",
      "ICDCS", "Int Conf Distrib Comput Syst", "International Conference on Devices,
      Circuits and Systems"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1000213/all-proceedings"},
      "url": "https://www.semanticscholar.org/paper/3626888ea022f2a1ed765f3655e9f1cb08404d54",
      "title": "A Multi-Tenant Framework for Cloud Container Services", "abstract":
      "Container technologies have been evolving rapidly in the cloud-native era.
      Kubernetes, as a production-grade container orchestration platform, has been
      proven to be successful at managing containerized applications in on-premises
      datacenters. However, Kubernetes lacks sufficient multi-tenant supports by design,
      meaning in cloud environments, dedicated clusters are required to serve multiple
      users, i.e., tenants. This limitation significantly diminishes the benefits
      of cloud computing, and makes it difficult to build multi-tenant software as
      a service (SaaS) products using Kubernetes. In this paper, we propose Virtual-Cluster,
      a new multi-tenant framework that extends Kubernetes with adequate multi-tenant
      supports. Basically, Virtual Cluster provides both control plane and data plane
      isolations while sharing the underlying compute resources among tenants. The
      new framework preserves the API compatibility by avoiding modifying the Kubernetes
      core components. Hence, it can be easily integrated with existing Kubernetes
      use cases. Our experimental results show that the overheads introduced by VirtualCluster,
      in terms of latency and throughput, is moderate.", "venue": "IEEE International
      Conference on Distributed Computing Systems", "year": 2021, "referenceCount":
      31, "citationCount": 4, "influentialCitationCount": 3, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/2103.13333", "status": "GREEN"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2021-03-24", "journal":
      {"name": "2021 IEEE 41st International Conference on Distributed Computing Systems
      (ICDCS)", "pages": "359-369"}, "citationStyles": {"bibtex": "@Article{Zheng2021AMF,\n
      author = {Chao Zheng and Qinghui Zhuang and Fei Guo},\n booktitle = {IEEE International
      Conference on Distributed Computing Systems},\n journal = {2021 IEEE 41st International
      Conference on Distributed Computing Systems (ICDCS)},\n pages = {359-369},\n
      title = {A Multi-Tenant Framework for Cloud Container Services},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2087015551", "name": "Chao Zheng"}, {"authorId": "2105747830",
      "name": "Qinghui Zhuang"}, {"authorId": "2065455197", "name": "Fei Guo"}]},
      {"paperId": "363378a520f103cbba454c5e8b819fcf43a96bbd", "externalIds": {"DOI":
      "10.56726/irjmets32176", "CorpusId": 254818288}, "corpusId": 254818288, "publicationVenue":
      {"id": "f963a178-be9f-4f29-95bb-0d56a45d63db", "name": "International Research
      Journal of Modernization in Engineering Technology and Science", "type": "journal",
      "alternate_names": ["Int Res J Mod Eng Technol Sci"], "issn": "2582-5208"},
      "url": "https://www.semanticscholar.org/paper/363378a520f103cbba454c5e8b819fcf43a96bbd",
      "title": "CLOUD DATA SECURITY METHODS: KUBERNETES VS DOCKER SWARM", "abstract":
      null, "venue": "International Research Journal of Modernization in Engineering
      Technology and Science", "year": 2022, "referenceCount": 0, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://doi.org/10.56726/irjmets32176", "status": "BRONZE"}, "fieldsOfStudy":
      null, "s2FieldsOfStudy": [{"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2022-12-16", "journal": {"name": "International Research
      Journal of Modernization in Engineering Technology and Science"}, "citationStyles":
      {"bibtex": "@Article{None,\n booktitle = {International Research Journal of
      Modernization in Engineering Technology and Science},\n journal = {International
      Research Journal of Modernization in Engineering Technology and Science},\n
      title = {CLOUD DATA SECURITY METHODS: KUBERNETES VS DOCKER SWARM},\n year =
      {2022}\n}\n"}, "authors": []}, {"paperId": "36582b3d1f371cd61438e481da397d575f13c87e",
      "externalIds": {"DBLP": "conf/middleware/Budigiri23", "DOI": "10.1145/3626564.3629092",
      "CorpusId": 265441082}, "corpusId": 265441082, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/36582b3d1f371cd61438e481da397d575f13c87e",
      "title": "Secure and Scalable Policy Management in Cloud Native Networking",
      "abstract": "Support for Ultra-Reliable Low-Latency Communication (URLLC) in
      5G networks has made the adoption of edge computing and cloud-native computing
      imperative. However, URLLC applications require low-latency security defenses
      against attackers to maximize resilience without impacting performance. In this
      PhD project, we explore the use of standardized cloud-native network segmentation
      solutions to achieve this goal and we develop zero-cost techniques for the enforcement
      and verification of consistency of network segmentation policies across different
      system layers of the cloud-native stack that is based on Kubernetes (K8s), a
      de-facto standard for container-based orchestration. We first evaluate network
      policies, a K8s-specific network segmentation solution on eBPF-based network
      plugins configured to avoid the use of network encapsulation techniques such
      as VxLAN or IP-in-IP. Our findings show negligible overheads. However, without
      network encapsulation, every protocol and port that is allowed in a container
      network policy must also be allowed at the underlying system layer, which is
      typically a VM-based solution with a statically-defined security group per K8s
      cluster. To drastically reduce the huge network attack surface that ensues from
      a static solution, we develop two dynamic cross-layer policy management approaches,
      each tailored to a particular level of trust between the administrators of these
      different system layers. A preliminary evaluation shows these techniques incur
      no application-level performance overhead and significantly reduce the network
      attack surface between VMs by 75-to-99% for low-latency applications.", "venue":
      "Middleware Demos/Posters/Doctoral Symposium", "year": 2023, "referenceCount":
      10, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2023-12-11",
      "journal": {"name": "Proceedings of the 24th International Middleware Conference:
      Demos, Posters and Doctoral Symposium"}, "citationStyles": {"bibtex": "@Book{Budigiri2023SecureAS,\n
      author = {Gerald Budigiri},\n booktitle = {Middleware Demos/Posters/Doctoral
      Symposium},\n journal = {Proceedings of the 24th International Middleware Conference:
      Demos, Posters and Doctoral Symposium},\n title = {Secure and Scalable Policy
      Management in Cloud Native Networking},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "1646653439", "name": "Gerald Budigiri"}]}, {"paperId": "365f12826bf3823d38e87c55a7196985d81328af",
      "externalIds": {"MAG": "3102984600", "DBLP": "journals/corr/abs-2106-00583",
      "ArXiv": "2006.08654", "DOI": "10.1145/3401025.3401731", "CorpusId": 219708396},
      "corpusId": 219708396, "publicationVenue": {"id": "0a05a451-a2de-4e8e-bade-704b9857926a",
      "name": "Distributed Event-Based Systems", "type": "conference", "alternate_names":
      ["DEBS", "Distrib Event-based Syst"], "url": "https://en.wikipedia.org/wiki/Distributed_Event-Based_Systems"},
      "url": "https://www.semanticscholar.org/paper/365f12826bf3823d38e87c55a7196985d81328af",
      "title": "Triggerflow: trigger-based orchestration of serverless workflows",
      "abstract": "As more applications are being moved to the Cloud thanks to serverless
      computing, it is increasingly necessary to support native life cycle execution
      of those applications in the data center. But existing systems either focus
      on short-running workflows (like IBM Composer or Amazon Express Workflows) or
      impose considerable overheads for synchronizing massively parallel jobs (Azure
      Durable Functions, Amazon Step Functions, Google Cloud Composer). None of them
      are open systems enabling extensible interception and optimization of custom
      workflows. We present Triggerflow: an extensible Trigger-based Orchestration
      architecture for serverless workflows built on top of Knative Eventing and Kubernetes
      technologies. We demonstrate that Triggerflow is a novel serverless building
      block capable of constructing different reactive schedulers (State Machines,
      Directed Acyclic Graphs, Workflow as code). We also validate that it can support
      high-volume event processing workloads, auto-scale on demand and transparently
      optimize scientific workflows.", "venue": "Distributed Event-Based Systems",
      "year": 2020, "referenceCount": 35, "citationCount": 41, "influentialCitationCount":
      4, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2006.08654",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book", "Conference"], "publicationDate": "2020-06-15", "journal": {"name":
      "Proceedings of the 14th ACM International Conference on Distributed and Event-based
      Systems"}, "citationStyles": {"bibtex": "@Article{L\u00f3pez2020TriggerflowTO,\n
      author = {P. L\u00f3pez and Aitor Arjona and Josep Samp\u00e9 and Aleksander
      Slominski and Lionel Villard},\n booktitle = {Distributed Event-Based Systems},\n
      journal = {Proceedings of the 14th ACM International Conference on Distributed
      and Event-based Systems},\n title = {Triggerflow: trigger-based orchestration
      of serverless workflows},\n year = {2020}\n}\n"}, "authors": [{"authorId": "144333596",
      "name": "P. L\u00f3pez"}, {"authorId": "1751308474", "name": "Aitor Arjona"},
      {"authorId": "39637073", "name": "Josep Samp\u00e9"}, {"authorId": "48657690",
      "name": "Aleksander Slominski"}, {"authorId": "2498483", "name": "Lionel Villard"}]},
      {"paperId": "369be7cc66a1d29a462de89c0b3b0edb23ad6b79", "externalIds": {"ArXiv":
      "2007.05212", "MAG": "3041017658", "DBLP": "conf/IEEEcloud/KunzCSBS20", "DOI":
      "10.1109/CLOUD49709.2020.00066", "CorpusId": 220487085}, "corpusId": 220487085,
      "publicationVenue": {"id": "406d9f60-417a-4dc5-a6b7-1fe4689a4ff7", "name": "IEEE
      International Conference on Cloud Computing", "type": "conference", "alternate_names":
      ["Int Conf Cloud Comput [services Soc", "CLOUD", "International Conference on
      Cloud Computing [Services Society]", "IEEE Int Conf Cloud Comput"]}, "url":
      "https://www.semanticscholar.org/paper/369be7cc66a1d29a462de89c0b3b0edb23ad6b79",
      "title": "Towards Tracking Data Flows in Cloud Architectures", "abstract": "As
      cloud services become central in an increasing number of applications, they
      process and store more personal and business-critical data. At the same time,
      privacy and compliance regulations such as the General Data Protection Regulation
      (GDPR), the EU ePrivacy regulation, and the upcoming EU Cybersecurity Act raise
      the bar for secure processing and traceability of critical data. Especially
      the demand to provide information about existing data records of an individual
      and the ability to delete them on demand is central in privacy regulations.
      Common to these requirements is that cloud providers must be able to track data
      as it flows across the different services to ensure that it never moves outside
      of the legitimate realm, and it is known at all times where a specific copy
      of a record that belongs to a specific individual or business process is located.
      However, current cloud architectures do neither provide the means to holistically
      track data flows across different services nor to enforce policies on data flows.
      In this paper, we point out the deficits in the data flow tracking functionalities
      of major cloud providers by means of a set of practical experiments. We then
      generalize from these experiments introducing a generic architecture that aims
      at solving the problem of cloud-wide data flow tracking and show how it can
      be built in a Kubernetes-based prototype implementation.", "venue": "IEEE International
      Conference on Cloud Computing", "year": 2020, "referenceCount": 11, "citationCount":
      8, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/2007.05212", "status": "GREEN"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2020-07-10", "journal":
      {"name": "2020 IEEE 13th International Conference on Cloud Computing (CLOUD)",
      "pages": "445-452"}, "citationStyles": {"bibtex": "@Article{Kunz2020TowardsTD,\n
      author = {Immanuel Kunz and V. Casola and Angelika Schneider and Christian Banse
      and J. Sch\u00fctte},\n booktitle = {IEEE International Conference on Cloud
      Computing},\n journal = {2020 IEEE 13th International Conference on Cloud Computing
      (CLOUD)},\n pages = {445-452},\n title = {Towards Tracking Data Flows in Cloud
      Architectures},\n year = {2020}\n}\n"}, "authors": [{"authorId": "39391802",
      "name": "Immanuel Kunz"}, {"authorId": "2922160", "name": "V. Casola"}, {"authorId":
      "49462068", "name": "Angelika Schneider"}, {"authorId": "3223911", "name": "Christian
      Banse"}, {"authorId": "144865615", "name": "J. Sch\u00fctte"}]}, {"paperId":
      "36cf41a59f5ca3eb45d30fc216ba8683e60ab842", "externalIds": {"ArXiv": "2111.08663",
      "DBLP": "conf/mipro/EnnaceurEJ22", "DOI": "10.23919/MIPRO55190.2022.9803375",
      "CorpusId": 244129944}, "corpusId": 244129944, "publicationVenue": {"id": "25710d4b-a2d9-4b6c-9f28-154866d9fbbe",
      "name": "International Convention on Information and Communication Technology,
      Electronics and Microelectronics", "type": "conference", "alternate_names":
      ["Int Conv Inf Commun Technol Electron Microelectron", "MIPRO"], "url": "http://www.mipro.hr/"},
      "url": "https://www.semanticscholar.org/paper/36cf41a59f5ca3eb45d30fc216ba8683e60ab842",
      "title": "Engineering Edge-Cloud Offloading of Big Data for Channel Modelling
      in THz-range Communications", "abstract": "Channel estimation in mmWave and
      THz-range wireless communications (producing Gb/Tb-range of data) is critical
      to configuring system parameters related to transmission signal quality, and
      yet it remains a daunting challenge both in software and hardware. Current methods
      of channel estimations, be it modeling- or data-based (machine learning (ML)),
      - use and create big data. This in turn requires a large amount of computational
      resources, read operations to prove if there is some predefined channel configurations,
      e.g., QoS requirements, in the database, as well as write operations to store
      the new combinations of QoS parameters in the database. Especially the ML-based
      approach requires high computational and storage resources, low latency and
      a higher hardware flexibility. In this paper, we engineer and study the offloading
      of the above operations to edge and cloud computing systems to understand the
      suitability of edge and cloud computing to provide rapid response with channel
      and link configuration parameters on the example of THz channel modeling. We
      evaluate the performance of the engineered system when the computational and
      storage resources are orchestrated based on: 1) monolithic architecture, 2)
      microservices architectures, both in edge-cloud based approach. For microservices
      approach, we engineer both Docker Swarm and Kubernetes systems. The measurements
      show a great promise of edge computing and microservices that can quickly respond
      to properly configure parameters and improve transmission distance and signal
      quality with ultra-high speed wireless communications.", "venue": "International
      Convention on Information and Communication Technology, Electronics and Microelectronics",
      "year": 2021, "referenceCount": 11, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2111.08663",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-11-16", "journal":
      {"name": "2022 45th Jubilee International Convention on Information, Communication
      and Electronic Technology (MIPRO)", "pages": "488-493"}, "citationStyles": {"bibtex":
      "@Article{Ennaceur2021EngineeringEO,\n author = {Zied Ennaceur and Anna Engelmann
      and A. Jukan},\n booktitle = {International Convention on Information and Communication
      Technology, Electronics and Microelectronics},\n journal = {2022 45th Jubilee
      International Convention on Information, Communication and Electronic Technology
      (MIPRO)},\n pages = {488-493},\n title = {Engineering Edge-Cloud Offloading
      of Big Data for Channel Modelling in THz-range Communications},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2140580325", "name": "Zied Ennaceur"}, {"authorId":
      "144707721", "name": "Anna Engelmann"}, {"authorId": "1708705", "name": "A.
      Jukan"}]}, {"paperId": "36d074d281641160c20d5265c8f11467ce9daeb8", "externalIds":
      {"MAG": "3111817263", "CorpusId": 230709377}, "corpusId": 230709377, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/36d074d281641160c20d5265c8f11467ce9daeb8",
      "title": "Inter-operating Co-opeting Entities - A Peer-to-Peer Approach to Cooperation
      between Competitors", "abstract": "\u2014The paper identifies conditions that
      enable competing business entities to interoperate through their mutual cooperation
      function while maintaining a strict separation of their competing functions,
      and in particular the secure operations of their core IT-business infrastructure.
      Implications on the architecture of the cooperation function and an implementation
      realized using the Kubernetes micro-service infrastructure and Hyperledger Fabric
      are presented.", "venue": "", "year": 2020, "referenceCount": 14, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Business"], "s2FieldsOfStudy": [{"category": "Business",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Business", "source": "s2-fos-model"}], "publicationTypes": null,
      "publicationDate": "2020-04-26", "journal": {"name": "", "pages": "9-12", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Sandoz2020InteroperatingCE,\n
      author = {Alain Sandoz},\n pages = {9-12},\n title = {Inter-operating Co-opeting
      Entities - A Peer-to-Peer Approach to Cooperation between Competitors},\n year
      = {2020}\n}\n"}, "authors": [{"authorId": "1809233", "name": "Alain Sandoz"}]},
      {"paperId": "36d303886069d568f436bcaf19ff07040f527482", "externalIds": {"DOI":
      "10.47839/ijc.22.4.3359", "CorpusId": 266760565}, "corpusId": 266760565, "publicationVenue":
      {"id": "3ca62840-ce4b-49fb-ba81-fbc1595d8968", "name": "International Scientific
      Journal of Computing", "type": "journal", "alternate_names": ["Int J Comput",
      "International Journal of Computing", "Int Sci J Comput"], "issn": "1727-6209",
      "url": "http://computingonline.net/"}, "url": "https://www.semanticscholar.org/paper/36d303886069d568f436bcaf19ff07040f527482",
      "title": "Exploring the Performance of Container Runtimes within Kubernetes
      Clusters", "abstract": "The advent of cloud computing, with its Pay-As-You-Go
      model, has significantly simplified IT maintenance and revolutionized the industry.
      In the era of Microservices, containerized deployment and Kubernetes orchestration
      have permeated almost every working domain, drastically reducing the time to
      market for software releases. Kubernetes utilizes container runtimes to manage
      Containers, with the Container Runtime Interface (CRI) serving as a communication
      medium with low-level container runtimes such as runc and kata container. With
      the deprecation of Dockershim, developers are left to choose between CRI-O and
      Containerd, two CRI implementations. This study configures a Kubernetes cluster
      with both Containerd and CRI-O separately and analyzes performance parameters
      such as throughput, response time, CPU, memory, and network utilization. Additionally,
      we examine the impact of using runc and kata container runtimes together within
      the cluster. The study, conducted using a performance script created by JMeter,
      reveals that different container runtimes cater to distinct business use-cases
      and can complement each other when used together in a cluster environment. High
      compute applications are best run using runc, while high-security requirements
      are fulfilled by kata. The study provides a comprehensive performance comparison
      between Containerd and CRI-O, shedding light on the depth and versatility of
      container runtimes.", "venue": "International Scientific Journal of Computing",
      "year": 2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://computingonline.net/computing/article/view/3359/1128",
      "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-12-31", "journal": {"name": "International Journal of Computing"}, "citationStyles":
      {"bibtex": "@Article{Bhattacharya2023ExploringTP,\n author = {Moulina Hazra
      Bhattacharya and H. Mittal},\n booktitle = {International Scientific Journal
      of Computing},\n journal = {International Journal of Computing},\n title = {Exploring
      the Performance of Container Runtimes within Kubernetes Clusters},\n year =
      {2023}\n}\n"}, "authors": [{"authorId": "2277796953", "name": "Moulina Hazra
      Bhattacharya"}, {"authorId": "145391920", "name": "H. Mittal"}]}, {"paperId":
      "36fdad368d3a0936c8132be8c06505e20a25434c", "externalIds": {"DOI": "10.5753/sbrc_estendido.2022.223430",
      "CorpusId": 252654101}, "corpusId": 252654101, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/36fdad368d3a0936c8132be8c06505e20a25434c",
      "title": "Ana\u0301lise de desempenho de estrate\u0301gias de autoscaling vertical
      e horizontal: um estudo de caso com o Kubernetes", "abstract": "Aplicac\u0327o\u0303es
      escala\u0301veis podem adotar estrate\u0301gias de autoscaling horizontal ou
      o vertical para provisionar recursos na nuvem. Para ajudar na escolha da melhor
      estrate\u0301gia, este trabalho visa comparar o desempenho do autoscaling horizontal
      e vertical no Kubernetes. Atrave\u0301s de experimentos de medic\u0327a\u0303o
      usando carga sinte\u0301tica em uma aplicac\u0327a\u0303o web, o autoscaling
      horizontal se mostrou mais eficiente, reagindo mais rapidamente a\u0300s variac\u0327o\u0303es
      da carga e tendo um menor impacto no tempo de resposta da aplicac\u0327a\u0303o.",
      "venue": "Anais Estendidos do XL Simp\u00f3sio Brasileiro de Redes de Computadores
      e Sistemas Distribu\u00eddos (SBRC Estendido 2022)", "year": 2022, "referenceCount":
      14, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://sol.sbc.org.br/index.php/sbrc_estendido/article/download/21437/21261",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      null, "publicationDate": "2022-05-23", "journal": {"name": "Anais Estendidos
      do XL Simp\u00f3sio Brasileiro de Redes de Computadores e Sistemas Distribu\u00eddos
      (SBRC Estendido 2022)"}, "citationStyles": {"bibtex": "@Article{Akshlley2022AnaliseDD,\n
      author = {Kewyn Akshlley and Marcus Carvalho and Raquel Lopes},\n booktitle
      = {Anais Estendidos do XL Simp\u00f3sio Brasileiro de Redes de Computadores
      e Sistemas Distribu\u00eddos (SBRC Estendido 2022)},\n journal = {Anais Estendidos
      do XL Simp\u00f3sio Brasileiro de Redes de Computadores e Sistemas Distribu\u00eddos
      (SBRC Estendido 2022)},\n title = {Ana\u0301lise de desempenho de estrate\u0301gias
      de autoscaling vertical e horizontal: um estudo de caso com o Kubernetes},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2186680961", "name": "Kewyn
      Akshlley"}, {"authorId": "90484841", "name": "Marcus Carvalho"}, {"authorId":
      "134653639", "name": "Raquel Lopes"}]}, {"paperId": "3704a2cc3aadf5d3ddc7b1c9cca95a5ea0529cf0",
      "externalIds": {"DOI": "10.1109/CSECS60003.2023.10428577", "CorpusId": 267703071},
      "corpusId": 267703071, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3704a2cc3aadf5d3ddc7b1c9cca95a5ea0529cf0",
      "title": "Image Preheating: Enables Fast Startup of Large-Scale Parallel Containerized
      Jobs", "abstract": "Containers and Kubernetes are becoming the normative way
      to deploy services in the data center. This rich virtualization ecosystem simplifies
      application development and management, resolves complex dependencies between
      applications and execution environments, and improves the efficiency of application
      deployment. Unfortunately, the startup and deployment delays of containerized
      jobs significantly limit the efficiency of job execution. In particular, the
      larger the container image, the longer the image download time, which seriously
      affects the service processing capability of the system. In this paper, we propose
      the image preheating technique to accelerate the startup of large-scale distributed
      parallel containerized jobs. According to the different working scenarios, image
      preheating is divided into layer preheating and image preheating. First, layer
      preheating is applied in the scenario where a single machine pulls a single
      image to start a single container, and we explore the parallel nature of multiple
      threads in pulling different layers of images and propose a more efficient heuristic
      algorithm to accelerate parallel pulling of images. Second, image preheating
      is applied in the scenario where the entire parallel job is deployed and started
      on the cluster. As soon as one task image of the job is downloaded, the preheating
      is completed and the entire job starts. In addition, we propose a very practical
      approach called manual image preheating to provide a better experience for users
      executing the job. Simulated and real experiments show that the method we designed
      can improve the download speed of images by 23.54% and the start of jobs in
      the cluster by 3.73%.", "venue": "2023 6th International Conference on Software
      Engineering and Computer Science (CSECS)", "year": 2023, "referenceCount": 19,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2023-12-22", "journal":
      {"name": "2023 6th International Conference on Software Engineering and Computer
      Science (CSECS)", "pages": "1-8"}, "citationStyles": {"bibtex": "@Conference{Yeting2023ImagePE,\n
      author = {Yeting and Gaohongbo and Tangbo and Yangke},\n booktitle = {2023 6th
      International Conference on Software Engineering and Computer Science (CSECS)},\n
      journal = {2023 6th International Conference on Software Engineering and Computer
      Science (CSECS)},\n pages = {1-8},\n title = {Image Preheating: Enables Fast
      Startup of Large-Scale Parallel Containerized Jobs},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2284350028", "name": "Yeting"}, {"authorId": "2284350025",
      "name": "Gaohongbo"}, {"authorId": "2284350023", "name": "Tangbo"}, {"authorId":
      "2284349396", "name": "Yangke"}]}, {"paperId": "370ed426e5b38aacf8e23f46e7a353030ce49b85",
      "externalIds": {"DOI": "10.24818/issn14531305/27.1.2023.04", "CorpusId": 259513043},
      "corpusId": 259513043, "publicationVenue": {"id": "58a3d68e-947a-44df-a384-3e506db6845f",
      "name": "Informatic\u0103 economic\u0103", "alternate_names": ["Informatic\u0103
      econ"], "issn": "1453-1305", "url": "http://www.revistaie.ase.ro/"}, "url":
      "https://www.semanticscholar.org/paper/370ed426e5b38aacf8e23f46e7a353030ce49b85",
      "title": "Theoretical and Applied in Automating Kubernetes Resources", "abstract":
      null, "venue": "Informatic\u0103 economic\u0103", "year": 2023, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-06-30", "journal": {"name": "Informatica Economica"},
      "citationStyles": {"bibtex": "@Article{Craciun2023TheoreticalAA,\n author =
      {Pavel-Cristian Craciun and C. Necula},\n booktitle = {Informatic\u0103 economic\u0103},\n
      journal = {Informatica Economica},\n title = {Theoretical and Applied in Automating
      Kubernetes Resources},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2221923153",
      "name": "Pavel-Cristian Craciun"}, {"authorId": "5987492", "name": "C. Necula"}]},
      {"paperId": "3711e41ffc8985202bd2a57bb9109f8edb885c75", "externalIds": {"DBLP":
      "conf/edge/XiongSXH18", "MAG": "2903798343", "DOI": "10.1109/SEC.2018.00048",
      "CorpusId": 54461478}, "corpusId": 54461478, "publicationVenue": {"id": "c60f6e64-434b-4c82-931d-faefcb362d4c",
      "name": "IFIP International Information Security Conference", "type": "conference",
      "alternate_names": ["Symp Edge Comput", "Symposium on Edge Computing", "Inf
      Secur", "Information Security", "IFIP Int Inf Secur Conf", "SEC"], "url": "http://www.tc11.uni-frankfurt.de/",
      "alternate_urls": ["https://acm-ieee-sec.org"]}, "url": "https://www.semanticscholar.org/paper/3711e41ffc8985202bd2a57bb9109f8edb885c75",
      "title": "Extend Cloud to Edge with KubeEdge", "abstract": "In this paper, we
      introduce an infrastructure in edge computing environment, KubeEdge, to extend
      cloud capabilities to the edge. In the new form of cloud architecture, Cloud
      consists of computing resources both at centralized data centers and at distributed
      edges. KubeEdge infrastructure connects and coordinates two computing environments
      for applications leveraging both computing resources to achieve better performance
      and user experience. Technically, KubeEdge provides the network protocol infrastructure
      and the same runtime environment on the edge as in the cloud, which allows the
      seamless communication of applications with components running on edge nodes
      as well as cloud servers. It also allows the existing cloud services and cloud
      development model to be adopted at edge. Based on Kubernetes [1], KubeEdge architecture
      includes a network protocol stack called KubeBus, a distributed metadata store
      and synchronization service, and a lightweight agent (EdgeCore) for the edge.
      KubeBus is designed to have its own implementation of OSI network protocol layers,
      which connects servers at edge and VMs in the cloud as one virtual network.
      KubeBus provides a unified multitenant communication infrastructure with fault
      tolerance and high availability. The distributed metadata store and sync service
      is designed to support the offline scenario when edge nodes are not connected
      to the cloud. EdgeController component in KubeEdge architecture is a controller
      plugin for Kubernetes [1] to manage remote edge nodes and cloud VMs as one logical
      cluster, which enables KubeEdge to schedule, deploy and manage container applications
      across edge and cloud with the same API.", "venue": "IFIP International Information
      Security Conference", "year": 2018, "referenceCount": 14, "citationCount": 110,
      "influentialCitationCount": 11, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2018-10-01", "journal": {"name": "2018
      IEEE/ACM Symposium on Edge Computing (SEC)", "pages": "373-377"}, "citationStyles":
      {"bibtex": "@Article{Xiong2018ExtendCT,\n author = {Ying Xiong and Yulin Sun
      and Li Xing and Ying Huang},\n booktitle = {IFIP International Information Security
      Conference},\n journal = {2018 IEEE/ACM Symposium on Edge Computing (SEC)},\n
      pages = {373-377},\n title = {Extend Cloud to Edge with KubeEdge},\n year =
      {2018}\n}\n"}, "authors": [{"authorId": "2112719003", "name": "Ying Xiong"},
      {"authorId": "2109035171", "name": "Yulin Sun"}, {"authorId": "48542067", "name":
      "Li Xing"}, {"authorId": "2145496094", "name": "Ying Huang"}]}, {"paperId":
      "372f1a53d31309485fc5938bd309effe104ac2ec", "externalIds": {"CorpusId": 236767827},
      "corpusId": 236767827, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/372f1a53d31309485fc5938bd309effe104ac2ec",
      "title": "Scaling of containerized network functions", "abstract": "This research
      extends on the EPI project [1]. That project tries to create a data sharing
      path between health care providers securely and dynamically. If two providers
      do not have a data sharing path or they violate data-sharing policies because
      of missing functionalities such as no way to encrypt traffic. A proxy is set
      up between the two providers where traffic gets redirected through. This proxy
      can then add the functionality as encryption by deploying network functions
      called bridging function and redirecting the traffic through those functions.
      In our research a proof of concept is created that is based on Kubernetes and
      allows us to deploy the EPI framework, pass traffic through the framework and
      scale the bridging function. Scaling of the bridging function can make it that
      resources are better utilized or that fluctuations in traffic can be better
      accommodated. By scaling horizontally we can add more bridging functions to
      help with traffic demands. Our research focused on how application traffic\u2019s
      latency changed when scaling the bridging functions horizontally. The scaling
      of the bridging functions is researched in this report by looking at the impact
      of varying Kubernetes autoscaling thresholds for bridging functions on end-user
      application traffic. So we can see if autoscaling can improve the performance
      of the bridging functions. While implementing everything, we decided on experimenting
      on the horizontal autoscaler as this is more adjustable than the vertical autoscaler,
      and would certainly have some impact on the application traffic. Therefore in
      our experiments, we implemented the Horizontal Pod Autoscalers from Kubernetes.
      Experiments were conducted on it by adjusting the threshold of when to scale
      pods and adding load to the system by increasing the number of requests made
      that passed through the bridging functions. The experiments of this project
      unfold that long-lived traffic sessions don\u2019t benefit from horizontal scaling
      of the bridging function due to the load balancing logic of Kubernetes services.
      Moreover, the processing logic of the bridging function used in the Proof of
      concept is CPU-centric; thus, the steady memory usage didn\u2019t cause any
      scale-out events. And finally, testing results also consistently shows an impact
      on end-user experience due to a slight increase in response time due to the
      scale-out load distribution overhead. This research can be complemented by examining
      different types of application traffic and bridging functions as well as using
      machine learning to find the optimal scaling threshold.", "venue": "", "year":
      2021, "referenceCount": 26, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Medicine",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Elamin2021ScalingOC,\n
      author = {Mohanad Elamin},\n title = {Scaling of containerized network functions},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2098865255", "name": "Mohanad
      Elamin"}]}, {"paperId": "3747540e4b5ed8dca040b6c4aa3ff4c6163dc417", "externalIds":
      {"MAG": "2582863866", "CorpusId": 208968192}, "corpusId": 208968192, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/3747540e4b5ed8dca040b6c4aa3ff4c6163dc417",
      "title": "janakiramm/wp-statefulset - Deploy a Highly Available WordPress Instance
      as a StatefulSet in Kubernetes 1.5", "abstract": null, "venue": "", "year":
      2017, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Stierand2017janakirammwpstatefulsetD,\n author =
      {Bj\u00f6rn Stierand},\n title = {janakiramm/wp-statefulset - Deploy a Highly
      Available WordPress Instance as a StatefulSet in Kubernetes 1.5},\n year = {2017}\n}\n"},
      "authors": [{"authorId": "52641801", "name": "Bj\u00f6rn Stierand"}]}, {"paperId":
      "3777b71f30535d4b0ecf78533bb0daa340132bab", "externalIds": {"ArXiv": "2301.01178",
      "DBLP": "journals/corr/abs-2301-01178", "DOI": "10.48550/arXiv.2301.01178",
      "CorpusId": 255393947}, "corpusId": 255393947, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/3777b71f30535d4b0ecf78533bb0daa340132bab",
      "title": "Extending Kubernetes Networking to make use of Segment Routing over
      IPv6 (SRv6)", "abstract": "\u2014Kubernetes is the leading platform for orchestrating
      containerized applications. In this paper, we extend Kubernetes networking to
      make use of SRv6, a feature-rich overlay networking mechanism. Integration with
      SRv6 can be very bene\ufb01cial when Kubernetes is used in large-scale and distributed
      multi-datacenter scenarios. We have focused on the Calico CNI plugin, one of
      the most used Kubernetes networking plugins. In particular, we consider Calico-VPP,
      a version of the Calico plugin based on the VPP (Vector Packet Processing) data
      plane, which provides support for SRv6 operations with very high performance.
      The proposed SRv6 overlay networking solution for Kubernetes offers several
      advantages compared to a traditional overlay (e.g. IP in IP), in particular
      the possibility to use Traf\ufb01c Engineering for the overlay tunnels. In the
      paper, we provide the architecture and the detailed design of the SRv6 based
      overlay and describe our open source implementation. We consider the research
      and technological question on how to extend Kubernetes networking to support
      large-scale and distributed multi-datacenter scenarios, which is an important
      goal for Cloud and Network providers. In this respect, we compare two different
      solutions for the control plane architecture of the SRv6 capable Kubernetes
      networking plugin, one based on the BGP routing protocol and another one based
      on extending the Kubernetes control plane. Finally, we report a performance
      evaluation of the data plane of the proposed SRv6 overlay networking, showing
      that it has comparable performance to existing overlay solutions (e.g. IP in
      IP), while offering a richer set of features.", "venue": "arXiv.org", "year":
      2023, "referenceCount": 34, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://arxiv.org/pdf/2301.01178",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-01-03", "journal":
      {"name": "ArXiv", "volume": "abs/2301.01178"}, "citationStyles": {"bibtex":
      "@Article{Lombardo2023ExtendingKN,\n author = {Francesco Lombardo and S. Salsano
      and A. Abdelsalam and Daniel Bernier and C. Filsfils},\n booktitle = {arXiv.org},\n
      journal = {ArXiv},\n title = {Extending Kubernetes Networking to make use of
      Segment Routing over IPv6 (SRv6)},\n volume = {abs/2301.01178},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2061002436", "name": "Francesco Lombardo"}, {"authorId":
      "1692170", "name": "S. Salsano"}, {"authorId": "145905352", "name": "A. Abdelsalam"},
      {"authorId": "2199183869", "name": "Daniel Bernier"}, {"authorId": "145361574",
      "name": "C. Filsfils"}]}, {"paperId": "37b92fadb2d144f06f46c31ecb16bb6c5bb4ad5f",
      "externalIds": {"CorpusId": 267765708}, "corpusId": 267765708, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/37b92fadb2d144f06f46c31ecb16bb6c5bb4ad5f",
      "title": "An Intent-Based Management Framework for Networks and Security in
      Software-Defined Vehicles", "abstract": "\u2014Software-Defined Vehicle (SDV)
      is a new player towards autonomous vehicles in smart road networks. An SDV is
      constructed by a software platform like a cloud-native system like Kubernetes
      and has its internal network. To facilitate the easy and efficient configuration
      of networks in the SDV, an intent-based management is an appropriate direction.
      This paper proposes a framework of intent-based management for networks and
      security in SDVs so that they can communicate with other SDVs and infrastructure
      nodes for safe", "venue": "", "year": null, "referenceCount": 10, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Engineering", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Misc{None,\n author = {Paul Jeong and Yiwen Shen},\n title = {An Intent-Based
      Management Framework for Networks and Security in Software-Defined Vehicles}\n}\n"},
      "authors": [{"authorId": "2282531056", "name": "Paul Jeong"}, {"authorId": "2282581728",
      "name": "Yiwen Shen"}]}, {"paperId": "37c9dec5a3c6ddf692c198cef83af10da3ceb344",
      "externalIds": {"MAG": "3095612829", "DOI": "10.1007/978-981-15-4409-5_9", "CorpusId":
      228913189}, "corpusId": 228913189, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/37c9dec5a3c6ddf692c198cef83af10da3ceb344",
      "title": "Networking Analysis and Performance Comparison of Kubernetes CNI Plugins",
      "abstract": null, "venue": "", "year": 2020, "referenceCount": 5, "citationCount":
      11, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "pages": "99-109", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Kumar2020NetworkingAA,\n author
      = {Ritik Kumar and M. Trivedi},\n pages = {99-109},\n title = {Networking Analysis
      and Performance Comparison of Kubernetes CNI Plugins},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "1569676956", "name": "Ritik Kumar"}, {"authorId":
      "3212425", "name": "M. Trivedi"}]}, {"paperId": "37d3c5f648baeae29c695c47a254323b7e5f4dcc",
      "externalIds": {"MAG": "2778790525", "CorpusId": 65050363}, "corpusId": 65050363,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/37d3c5f648baeae29c695c47a254323b7e5f4dcc",
      "title": "Kubernetes Management Design Patterns: With Docker, CoreOS Linux,
      and Other Platforms", "abstract": "Take container cluster management to the
      next level; learn how to administer and configure Kubernetes on CoreOS; and
      apply suitable management design patterns such as Configmaps, Autoscaling, elastic
      resource usage, and high availability. Some of the other features discussed
      are logging, scheduling, rolling updates, volumes, service types, and multiple
      cloud provider zones. The atomic unit of modular container service in Kubernetes
      is a Pod, which is a group of containers with a common filesystem and networking.
      The Kubernetes Pod abstraction enables design patterns for containerized applications
      similar to object-oriented design patterns. Containers provide some of the same
      benefits as software objects such as modularity or packaging, abstraction, and
      reuse. CoreOS Linux is used in the majority of the chapters and other platforms
      discussed are CentOS with OpenShift, Debian 8 (jessie) on AWS, and Debian 7
      for Google Container Engine. CoreOS is the main focus becayse Docker is pre-installed
      on CoreOS out-of-the-box. CoreOS:Supports most cloud providers (including Amazon
      AWS EC2 and Google Cloud Platform) and virtualization platforms (such as VMWare
      and VirtualBox)Provides Cloud-Config for declaratively configuring for OS items
      such as network configuration (flannel), storage (etcd), and user accountsProvides
      a production-level infrastructure for containerized applications including automation,
      security, and scalabilityLeads the drive for container industry standards and
      founded appcProvides the most advanced container registry, Quay Docker was made
      available as open source in March 2013 and has become the most commonly used
      containerization platform. Kubernetes was open-sourced in June 2014 and has
      become the most widely used container cluster manager. The first stable version
      of CoreOS Linux was made available in July 2014 and since has become one of
      the most commonly used operating system for containers. What You''ll LearnUse
      Kubernetes with DockerCreate a Kubernetes cluster on CoreOS on AWSApply cluster
      management design patternsUse multiple cloud provider zonesWork with Kubernetes
      and tools like AnsibleDiscover the Kubernetes-based PaaS platform OpenShiftCreate
      a high availability websiteBuild a high availability Kubernetes master clusterUse
      volumes, configmaps, services, autoscaling, and rolling updatesManage compute
      resourcesConfigure logging and schedulingWho This Book Is ForLinux admins, CoreOS
      admins, application developers, and container as a service (CAAS) developers.
      Some pre-requisite knowledge of Linux and Docker is required. Introductory knowledge
      of Kubernetes is required such as creating a cluster, creating a Pod, creating
      a service, and creating and scaling a replication controller. For introductory
      Docker and Kubernetes information, refer to Pro Docker (Apress) and Kubernetes
      Microservices with Docker (Apress). Some pre-requisite knowledge about using
      Amazon Web Services (AWS) EC2, CloudFormation, and VPC is also required.", "venue":
      "", "year": 2017, "referenceCount": 0, "citationCount": 2, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2017-01-20",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Vohra2017KubernetesMD,\n
      author = {Deepak Vohra},\n title = {Kubernetes Management Design Patterns: With
      Docker, CoreOS Linux, and Other Platforms},\n year = {2017}\n}\n"}, "authors":
      [{"authorId": "3026624", "name": "Deepak Vohra"}]}, {"paperId": "37d40346833bb8e6ece835b29970b3d0073f93ee",
      "externalIds": {"DBLP": "conf/fruct/KonevNU22", "DOI": "10.23919/FRUCT54823.2022.9770916",
      "CorpusId": 248698551}, "corpusId": 248698551, "publicationVenue": {"id": "49bb481c-95dc-4e09-a921-95f6c7f78ab8",
      "name": "Conference of the Open Innovations Association", "type": "conference",
      "alternate_names": ["FRUCT", "Conf Open Innov Assoc"], "url": "http://fruct.org/"},
      "url": "https://www.semanticscholar.org/paper/37d40346833bb8e6ece835b29970b3d0073f93ee",
      "title": "Algorithm for Containers\u2019 Persistent Volumes Auto-scaling in
      Kubernetes", "abstract": "The article describes a proposal of an algorithm for
      Persistent Volumes auto-scaling in a container orchestration system - Kubernetes.
      Auto-scaling stands for decreasing/increasing target resources depending on
      some load. In case of horizontal Volumes scaling, we vary the number of Volumes,
      while in the vertical case we vary the size of each Volume. Also we introduce
      mixed scaling that includes both: horizontal and vertical as sub steps to reach
      a desired state. It is proposed to choose from the methods above based on free
      storage capacity of Kubernetes cluster and its nodes. Approaches described in
      the article allow to use persistent storage resources in an efficient way without
      manual interaction with Kubernetes cluster.", "venue": "Conference of the Open
      Innovations Association", "year": 2022, "referenceCount": 4, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2022-04-27", "journal": {"name": "2022 31st Conference of Open Innovations
      Association (FRUCT)", "pages": "1-7"}, "citationStyles": {"bibtex": "@Article{Konev2022AlgorithmFC,\n
      author = {Igor Konev and I. Nikiforov and Sergey Ustinov},\n booktitle = {Conference
      of the Open Innovations Association},\n journal = {2022 31st Conference of Open
      Innovations Association (FRUCT)},\n pages = {1-7},\n title = {Algorithm for
      Containers\u2019 Persistent Volumes Auto-scaling in Kubernetes},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2164897435", "name": "Igor Konev"}, {"authorId": "153637853",
      "name": "I. Nikiforov"}, {"authorId": "2164897459", "name": "Sergey Ustinov"}]},
      {"paperId": "37da1ef8c2513980f045134305ff885e6f919645", "externalIds": {"MAG":
      "2901142794", "DBLP": "conf/middleware/JagerZIZ18", "DOI": "10.1145/3286490.3286561",
      "CorpusId": 53715614}, "corpusId": 53715614, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/37da1ef8c2513980f045134305ff885e6f919645",
      "title": "Parallelized Training of Deep NN: Comparison of Current Concepts and
      Frameworks", "abstract": "Horizontal scalability is a major facilitator of recent
      advances in deep learning. Common deep learning frameworks offer different approaches
      for scaling the training process. We operationalize the execution of distributed
      training using Kubernetes and helm templates. This way we lay ground for a systematic
      comparison of deep learning frameworks. For two of them, TensorFlow and MXNet
      we examine their properties with regard to throughput, scalability and practical
      ease of use.", "venue": "DIDL@Middleware", "year": 2018, "referenceCount": 18,
      "citationCount": 5, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book"],
      "publicationDate": "2018-12-10", "journal": {"name": "Proceedings of the Second
      Workshop on Distributed Infrastructures for Deep Learning"}, "citationStyles":
      {"bibtex": "@Article{J\u00e4ger2018ParallelizedTO,\n author = {Sebastian J\u00e4ger
      and Hans-Peter Zorn and S. Igel and Christian Zirpins},\n booktitle = {DIDL@Middleware},\n
      journal = {Proceedings of the Second Workshop on Distributed Infrastructures
      for Deep Learning},\n title = {Parallelized Training of Deep NN: Comparison
      of Current Concepts and Frameworks},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "2053348138", "name": "Sebastian J\u00e4ger"}, {"authorId": "40374223", "name":
      "Hans-Peter Zorn"}, {"authorId": "1917788", "name": "S. Igel"}, {"authorId":
      "2666523", "name": "Christian Zirpins"}]}, {"paperId": "37deeaa18847530f2f8e60a36d32c75883b47df3",
      "externalIds": {"DBLP": "conf/ectel/SlupczynskiK21", "CorpusId": 244895418},
      "corpusId": 244895418, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/37deeaa18847530f2f8e60a36d32c75883b47df3",
      "title": "MILKI-PSY Cloud: Facilitating multimodal learning analytics by explainable
      AI and blockchain", "abstract": "Modern cloud-based big data engineering approaches
      like machine learning and blockchain enable the collection of learner data from
      numerous sources of different modalities (like video feeds, sensor data etc.),
      allowing multimodal learning analytics (MMLA) and reflection on the learning
      process. In particular, complex psycho-motor skills like dancing or operating
      a complex machine are profiting from MMLA. However, instructors, learners, and
      other institutional stakeholders may have issues with the traceability and the
      transparency of machine learning processes applied on learning data on the one
      side, and with privacy, data protection and security on the other side. We propose
      an approach for the acquisition, storage, processing and presentation of multimodal
      learning analytics data using machine learning and blockchain as services to
      reach explainable artificial intelligence (AI) and certified traceability of
      learning data processing. Moreover, we facilitate end-user involvement into
      to whole development cycle by extending established open-source software DevOps
      processes by participative design and community-oriented monitoring of MMLA
      processes. The MILKIPSY cloud (MPC) architecture is extending existing MMLA
      approaches and Kubernetes based automation of learning analytics infrastructure
      deployment from a number of research projects. The MPC will facilitate further
      research and development in this field.", "venue": "MILeS@EC-TEL", "year": 2021,
      "referenceCount": 13, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Education", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "22-28"}, "citationStyles": {"bibtex": "@Article{Slupczynski2021MILKIPSYCF,\n
      author = {M. Slupczynski and R. Klamma},\n booktitle = {MILeS@EC-TEL},\n pages
      = {22-28},\n title = {MILKI-PSY Cloud: Facilitating multimodal learning analytics
      by explainable AI and blockchain},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "93952849", "name": "M. Slupczynski"}, {"authorId": "1790902", "name": "R. Klamma"}]},
      {"paperId": "37e995d194705bba0fb00d8fba564b02bf46daab", "externalIds": {"MAG":
      "2904481276", "CorpusId": 187422588}, "corpusId": 187422588, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/37e995d194705bba0fb00d8fba564b02bf46daab",
      "title": "Developing Applications with Kubernetes", "abstract": null, "venue":
      "", "year": 2018, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Dague2018DevelopingAW,\n author = {Sean Dague and
      Will Plusnick},\n title = {Developing Applications with Kubernetes},\n year
      = {2018}\n}\n"}, "authors": [{"authorId": "1684375", "name": "Sean Dague"},
      {"authorId": "148357892", "name": "Will Plusnick"}]}, {"paperId": "37ece2b7fd89cb7fee9fac166cbafca5efe0aefb",
      "externalIds": {"MAG": "2978246314", "DBLP": "conf/ijcnn/XingQCCXYZ019", "DOI":
      "10.1109/IJCNN.2019.8852319", "CorpusId": 203605674}, "corpusId": 203605674,
      "publicationVenue": {"id": "f80ba4a3-7aed-4021-b4d8-e4f50668847a", "name": "IEEE
      International Joint Conference on Neural Network", "type": "conference", "alternate_names":
      ["IJCNN", "IEEE Int Jt Conf Neural Netw", "Int Jt Conf Neural Netw", "International
      Joint Conference on Neural Network"], "url": "http://www.wikicfp.com/cfp/program?id=1573"},
      "url": "https://www.semanticscholar.org/paper/37ece2b7fd89cb7fee9fac166cbafca5efe0aefb",
      "title": "A QoS-oriented Scheduling and Autoscaling Framework for Deep Learning",
      "abstract": "Deep learning is popular in many areas, but users must manually
      specify the resource configuration when submitting deep learning training jobs,
      usually over-provisioning resources. This kind of unreasonable resource configuration
      method results in slow training and low resource utilization. Therefore, it
      would be more convenient and efficient if users only need to specify the quality
      of service (QoS) for their jobs, and then the resources will be autoconfigured
      to meet the QoS. To satisfy this demand, we present a QoS-oriented scheduling
      and autoscaling framework that schedules and autoscales deep learning training
      jobs in the Kubernetes cluster. This paper focuses on the most important QoS
      requirement for deep learning training jobs: deadline.The goal of the framework
      is to guarantee that as many jobs as possible can be accomplished before their
      specified deadlines. To reach this goal, the framework schedules deep learning
      jobs by implementing a heuristic scheduling policy based on resource status
      and job deadline, and autoscales resource configuration by exploiting a characteristic
      of deep learning jobs: the predictability of training time. This predictability
      is used to predict whether a job can be accomplished before its deadline and
      estimate appropriate resource configuration if necessary.We implemented the
      framework by modifying the default scheduler of Kubernetes and conducted experiments
      to evaluate its performance. The experiment results show that our scheduling
      policy can improve the completion rate by 26% when the cluster resources are
      insufficient, and our autoscaling policy can improve the completion rate to
      100% when the cluster resources are sufficient. We also show that the framework
      improves the utilization of allocated CPUs to 100%. Our proposed framework points
      to a new way of submitting and managing deep learning training jobs in the cluster.",
      "venue": "IEEE International Joint Conference on Neural Network", "year": 2019,
      "referenceCount": 24, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2019-07-01", "journal": {"name": "2019 International
      Joint Conference on Neural Networks (IJCNN)", "pages": "1-8"}, "citationStyles":
      {"bibtex": "@Article{Xing2019AQS,\n author = {Sikai Xing and Shiyou Qian and
      Bin Cheng and Jian Cao and Guangtao Xue and Jiadi Yu and Yanmin Zhu and Minglu
      Li},\n booktitle = {IEEE International Joint Conference on Neural Network},\n
      journal = {2019 International Joint Conference on Neural Networks (IJCNN)},\n
      pages = {1-8},\n title = {A QoS-oriented Scheduling and Autoscaling Framework
      for Deep Learning},\n year = {2019}\n}\n"}, "authors": [{"authorId": "37196491",
      "name": "Sikai Xing"}, {"authorId": "2357444", "name": "Shiyou Qian"}, {"authorId":
      "2055923008", "name": "Bin Cheng"}, {"authorId": "145128217", "name": "Jian
      Cao"}, {"authorId": "1684808", "name": "Guangtao Xue"}, {"authorId": "1725842",
      "name": "Jiadi Yu"}, {"authorId": "153514206", "name": "Yanmin Zhu"}, {"authorId":
      "1708917", "name": "Minglu Li"}]}, {"paperId": "380d56d83f3b368877e034f1103806dd2953eb91",
      "externalIds": {"DOI": "10.23919/CCC55666.2022.9902856", "CorpusId": 252851528},
      "corpusId": 252851528, "publicationVenue": {"id": "23f8fe4c-6537-4027-a334-6a5863115984",
      "name": "Cybersecurity and Cyberforensics Conference", "type": "conference",
      "alternate_names": ["Chin Control Conf", "Computational Complexity Conference",
      "CCC", "Comput Complex Conf", "Cybersecur Cyberforensics Conf", "Conference
      on Computational Complexity", "Computing Colombian Conference", "Conf Comput
      Complex", "Comput Colomb Conf", "Chinese Control Conference"], "url": "http://computationalcomplexity.org/"},
      "url": "https://www.semanticscholar.org/paper/380d56d83f3b368877e034f1103806dd2953eb91",
      "title": "A Cloud Control Robotics Platform Based on Intelligent Deployment
      of Micro-services", "abstract": "Cloud robotics has become a strategic focus
      of the development of the information technology industry in recent years. More
      and more cloud robotics platforms have been developed and applied in the field
      of robotics. Although its emergence has brought powerful computing and storage
      capabilities to the native robot system, the existing cloud robot platform architecture
      is relatively single and jumbled, and it is difficult to be efficiently expanded
      and updated. Inspired by the idea of cloud control system, this paper proposes
      a cloud control robot system architecture based on micro-services. We designed
      a Proxy module, which realizes the common function of the network layer by converting
      ROS system message format into JSON format, and builds a data transmission bridge
      between the cloud and the edge computing platform. Then we use Kubernetes, Docker,
      CI/CD and other technologies to realize an automatic deployment of the cloud
      robotics platform. A method is given to deploy and run ROS instances in the
      cloud, enabling ROS-based service robots to run computation-intensive tasks.
      Finally, Gmapping ROS package is used to test on the cloud control robotics
      platform compared with PC. Experimental results verify the feasibility of cloud
      control robotics platform.", "venue": "Cybersecurity and Cyberforensics Conference",
      "year": 2022, "referenceCount": 14, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2022-07-25", "journal": {"name": "2022 41st Chinese Control Conference (CCC)",
      "pages": "4257-4262"}, "citationStyles": {"bibtex": "@Conference{Liu2022ACC,\n
      author = {Kai Liu and Yuanqing Xia and Chu Wu and Yufeng Zhan},\n booktitle
      = {Cybersecurity and Cyberforensics Conference},\n journal = {2022 41st Chinese
      Control Conference (CCC)},\n pages = {4257-4262},\n title = {A Cloud Control
      Robotics Platform Based on Intelligent Deployment of Micro-services},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "49599759", "name": "Kai Liu"}, {"authorId":
      "2152311358", "name": "Yuanqing Xia"}, {"authorId": "48251217", "name": "Chu
      Wu"}, {"authorId": "3311244", "name": "Yufeng Zhan"}]}, {"paperId": "3827853ca89c2f8664c5c4405d421ba9b0f3c95e",
      "externalIds": {"DBLP": "journals/corr/abs-2002-01558", "MAG": "3004534295",
      "ArXiv": "2002.01558", "DOI": "10.1109/TETC.2020.3019202", "CorpusId": 211032127},
      "corpusId": 211032127, "publicationVenue": {"id": "855d4173-dc30-48dc-96c2-42a5b6372940",
      "name": "IEEE Transactions on Emerging Topics in Computing", "type": "journal",
      "alternate_names": ["IEEE Trans Emerg Top Comput"], "issn": "2168-6750", "url":
      "http://ieeexplore.ieee.org/servlet/opac?punumber=6245516", "alternate_urls":
      ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=6245516"]}, "url":
      "https://www.semanticscholar.org/paper/3827853ca89c2f8664c5c4405d421ba9b0f3c95e",
      "title": "StreamFlow: Cross-Breeding Cloud With HPC", "abstract": "Workflows
      are among the most commonly used tools in a variety of execution environments.
      Many of them target a specific environment; few of them make it possible to
      execute an entire workflow in different environments, e.g., Kubernetes and batch
      clusters. We present a novel approach to workflow execution, called StreamFlow,
      that complements the workflow graph with the declarative description of potentially
      complex execution environments, and that makes it possible the execution onto
      multiple sites not sharing a common data space. StreamFlow is then exemplified
      on a novel bioinformatics pipeline for single-cell transcriptomic data analysis
      workflow.", "venue": "IEEE Transactions on Emerging Topics in Computing", "year":
      2020, "referenceCount": 62, "citationCount": 35, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2002.01558",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Biology", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-02-04", "journal":
      {"name": "IEEE Transactions on Emerging Topics in Computing", "pages": "1723-1737",
      "volume": "9"}, "citationStyles": {"bibtex": "@Article{Colonnelli2020StreamFlowCC,\n
      author = {Iacopo Colonnelli and B. Cantalupo and I. Merelli and Marco Aldinucci},\n
      booktitle = {IEEE Transactions on Emerging Topics in Computing},\n journal =
      {IEEE Transactions on Emerging Topics in Computing},\n pages = {1723-1737},\n
      title = {StreamFlow: Cross-Breeding Cloud With HPC},\n volume = {9},\n year
      = {2020}\n}\n"}, "authors": [{"authorId": "88728621", "name": "Iacopo Colonnelli"},
      {"authorId": "1823174", "name": "B. Cantalupo"}, {"authorId": "1720094", "name":
      "I. Merelli"}, {"authorId": "1690549", "name": "Marco Aldinucci"}]}, {"paperId":
      "38423d45d87947c7322df5c446e6df0130311413", "externalIds": {"MAG": "3009205429",
      "DBLP": "conf/nof/LuongOG19", "DOI": "10.1109/NoF47743.2019.9015028", "CorpusId":
      211684464}, "corpusId": 211684464, "publicationVenue": {"id": "966ed49f-abb2-4051-a7e7-c966d9426b85",
      "name": "International Conference on Network of the Future", "type": "conference",
      "alternate_names": ["Int Conf Netw Future", "NoF", "NOF", "International Conference
      on Network of Future"]}, "url": "https://www.semanticscholar.org/paper/38423d45d87947c7322df5c446e6df0130311413",
      "title": "Multi-level Resource Scheduling for network slicing toward 5G", "abstract":
      "Network function virtualization (NFV) and cloud computing is bringing more
      flexibility and elasticity for mobile networks by allowing the advent of the
      network slicing concept. Slice orchestration and management allow multiple slices
      to co-exist in the same cluster, each slice corresponding to a particular service
      demand. However, in order to cope with the differences in the QoS requirements
      of each slice, appropriate resource scheduling among slices as well as within
      each slice is required. In this paper, we propose a multi-level scheduling solution
      for network slicing while at each slice creation, a Global Scheduler instantiates
      the corresponding Slice Scheduler for the created slice. The Global Scheduler,
      based on slice requirement, also configures the Slice Scheduler using the appropriate
      algorithms and metrics. To demonstrate and evaluate the proposal approach, an
      implementation of the multi-level scheduling is realized for the case of single
      slice and multiple slices deployments. The two level scheduler is developed
      inside the Kubernetes orchestrator using container technology and deployed on
      an OpenStack cluster.", "venue": "International Conference on Network of the
      Future", "year": 2019, "referenceCount": 13, "citationCount": 4, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2019-10-01", "journal": {"name": "2019 10th International
      Conference on Networks of the Future (NoF)", "pages": "25-31"}, "citationStyles":
      {"bibtex": "@Article{Luong2019MultilevelRS,\n author = {Duc-Hung Luong and A.
      Outtagarts and Y. Ghamri-Doudane},\n booktitle = {International Conference on
      Network of the Future},\n journal = {2019 10th International Conference on Networks
      of the Future (NoF)},\n pages = {25-31},\n title = {Multi-level Resource Scheduling
      for network slicing toward 5G},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "40660531", "name": "Duc-Hung Luong"}, {"authorId": "2390599", "name": "A. Outtagarts"},
      {"authorId": "1397038647", "name": "Y. Ghamri-Doudane"}]}, {"paperId": "384567d27ecafd352043855005d49e661b39be42",
      "externalIds": {"DBLP": "journals/spe/SoldaniMNB21", "MAG": "3143818167", "DOI":
      "10.1002/spe.2974", "CorpusId": 233525711}, "corpusId": 233525711, "publicationVenue":
      {"id": "3da56ce6-4a70-402c-a8b0-7dd39a3273d3", "name": "Software, Practice &
      Experience", "type": "journal", "alternate_names": ["Softw  Pract Exp", "Softw
      Pract  Exp", "Software - Practice and Experience"], "issn": "0038-0644", "url":
      "http://www3.interscience.wiley.com/cgi-bin/jhome/1752", "alternate_urls": ["http://www.interscience.wiley.com/jpages/0038-0644/",
      "https://onlinelibrary.wiley.com/journal/1097024X"]}, "url": "https://www.semanticscholar.org/paper/384567d27ecafd352043855005d49e661b39be42",
      "title": "The \u03bcTOSCA toolchain: Mining, analyzing, and refactoring microservice\u2010based
      architectures", "abstract": "Exploiting microservices to architect enterprise
      applications is becoming commonplace. This makes it crucial to provide some
      support for designing and analyzing microservice\u2010based applications, for
      example, for understanding whether a microservice\u2010based application adheres
      to the main design principles of microservices and for choosing how to refactor
      it when this is not the case. To provide such support, in this article we present
      the \u03bc TOSCA toolchain. More precisely, we first introduce the \u03bc TOSCA
      model to represent the architecture of microservice\u2010based applications
      with the OASIS standard TOSCA. We then describe a technique to automatically
      mine the architecture of a microservice\u2010based application and represent
      it with \u03bc TOSCA, given the Kubernetes deployment of the application. We
      also present a methodology to analyze the \u03bc TOSCA representation of a microservice\u2010based
      architecture to systematically identify the architectural smells potentially
      affecting the corresponding application and to resolve them. Finally, we present
      two prototype tools, \u03bcMiner and \u03bcFreshener, implementing our mining
      solution and the support for identifying and resolving architectural smells
      in microservice\u2010based applications, respectively. We then assess \u2014by
      discussing some case studies\u2014 how effectively \u03bcMiner, \u03bcFreshener,
      and the \u03bc TOSCA toolchain can support researchers and practitioners working
      with microservices.", "venue": "Software, Practice & Experience", "year": 2021,
      "referenceCount": 55, "citationCount": 20, "influentialCitationCount": 1, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://onlinelibrary.wiley.com/doi/pdfdirect/10.1002/spe.2974",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2021-04-05", "journal": {"name": "Software: Practice and
      Experience", "pages": "1591 - 1621", "volume": "51"}, "citationStyles": {"bibtex":
      "@Article{Soldani2021The\u039cT,\n author = {J. Soldani and Giuseppe Muntoni
      and Davide Neri and Antonio Brogi},\n booktitle = {Software, Practice & Experience},\n
      journal = {Software: Practice and Experience},\n pages = {1591 - 1621},\n title
      = {The \u03bcTOSCA toolchain: Mining, analyzing, and refactoring microservice\u2010based
      architectures},\n volume = {51},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2265546", "name": "J. Soldani"}, {"authorId": "2055765812", "name": "Giuseppe
      Muntoni"}, {"authorId": "49332476", "name": "Davide Neri"}, {"authorId": "1787701",
      "name": "Antonio Brogi"}]}, {"paperId": "38489517a4215f7688472f2ef12fc7c2aa8cabc6",
      "externalIds": {"ArXiv": "2210.04002", "DBLP": "conf/cnsm/SamaniS22", "DOI":
      "10.23919/CNSM55787.2022.9965074", "CorpusId": 252780234}, "corpusId": 252780234,
      "publicationVenue": {"id": "7a0ab88e-224a-475b-9ea6-e66a6b3448c8", "name": "Conference
      on Network and Service Management", "type": "conference", "alternate_names":
      ["Conf Netw Serv Manag", "CNSM"], "url": "http://www.cnsm-conf.org/"}, "url":
      "https://www.semanticscholar.org/paper/38489517a4215f7688472f2ef12fc7c2aa8cabc6",
      "title": "Dynamically meeting performance objectives for multiple services on
      a service mesh", "abstract": "We present a framework that lets a service provider
      achieve end-to-end management objectives under varying load. Dynamic control
      actions are performed by a reinforcement learning (RL) agent. Our work includes
      experimentation and evaluation on a laboratory testbed where we have implemented
      basic information services on a service mesh supported by the Istio and Kubernetes
      platforms. We investigate different management objectives that include end-to-end
      delay bounds on service requests, throughput objectives, and service differentiation.
      These objectives are mapped onto reward functions that an RL agent learns to
      optimize, by executing control actions, namely, request routing and request
      blocking. We compute the control policies not on the testbed, but in a simulator,
      which speeds up the learning process by orders of magnitude. In our approach,
      the system model is learned on the testbed; it is then used to instantiate the
      simulator, which produces near-optimal control policies for various management
      objectives. The learned policies are then evaluated on the testbed using unseen
      load patterns.", "venue": "Conference on Network and Service Management", "year":
      2022, "referenceCount": 33, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2210.04002",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2022-10-08", "journal": {"name": "2022 18th
      International Conference on Network and Service Management (CNSM)", "pages":
      "219-225"}, "citationStyles": {"bibtex": "@Article{Samani2022DynamicallyMP,\n
      author = {Forough Shahab Samani and R. Stadler},\n booktitle = {Conference on
      Network and Service Management},\n journal = {2022 18th International Conference
      on Network and Service Management (CNSM)},\n pages = {219-225},\n title = {Dynamically
      meeting performance objectives for multiple services on a service mesh},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "52398355", "name": "Forough Shahab
      Samani"}, {"authorId": "145376180", "name": "R. Stadler"}]}, {"paperId": "3878eec194cd0544ec570b29871408cff656264e",
      "externalIds": {"DOI": "10.2478/cait-2022-0029", "CorpusId": 252407252}, "corpusId":
      252407252, "publicationVenue": {"id": "0d6aa4dc-612c-4eab-bf70-0920fd59bd3f",
      "name": "Cybernetics and Information Technologies", "type": "journal", "alternate_names":
      ["Cybern Inf Technol"], "issn": "1311-9702", "url": "http://www.cit.iit.bas.bg/",
      "alternate_urls": ["http://www.degruyter.com/view/j/cait", "http://www.degruyter.com/view/j/cait?format=INT&result=24&rskey=BGbzfE"]},
      "url": "https://www.semanticscholar.org/paper/3878eec194cd0544ec570b29871408cff656264e",
      "title": "Serverless High-Performance Computing over Cloud", "abstract": "Abstract
      HPC clouds may provide fast access to fully configurable and dynamically scalable
      virtualized HPC clusters to address the complex and challenging computation
      and storage-intensive requirements. The complex environmental, software, and
      hardware requirements and dependencies on such systems make it challenging to
      carry out our large-scale simulations, prediction systems, and other data and
      compute-intensive workloads over the cloud. The article aims to present an architecture
      that enables HPC workloads to be serverless over the cloud (Shoc), one of the
      most critical cloud capabilities for HPC workloads. On one hand, Shoc utilizes
      the abstraction power of container technologies like Singularity and Docker,
      combined with the scheduling and resource management capabilities of Kubernetes.
      On the other hand, Shoc allows running any CPU-intensive and data-intensive
      workloads in the cloud without needing to manage HPC infrastructure, complex
      software, and hardware environment deployments.", "venue": "Cybernetics and
      Information Technologies", "year": 2022, "referenceCount": 11, "citationCount":
      5, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://sciendo.com/pdf/10.2478/cait-2022-0029", "status": "GOLD"}, "fieldsOfStudy":
      null, "s2FieldsOfStudy": [{"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2022-09-01", "journal": {"name": "Cybernetics and Information Technologies",
      "pages": "82 - 92", "volume": "22"}, "citationStyles": {"bibtex": "@Article{Petrosyan2022ServerlessHC,\n
      author = {Davit Petrosyan and H. Astsatryan},\n booktitle = {Cybernetics and
      Information Technologies},\n journal = {Cybernetics and Information Technologies},\n
      pages = {82 - 92},\n title = {Serverless High-Performance Computing over Cloud},\n
      volume = {22},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2082148650",
      "name": "Davit Petrosyan"}, {"authorId": "2872420", "name": "H. Astsatryan"}]},
      {"paperId": "387f7275d479e0a466f722faf31aee7882ebcef2", "externalIds": {"DOI":
      "10.1145/3634750", "CorpusId": 265552555}, "corpusId": 265552555, "publicationVenue":
      {"id": "4b9f08bb-708d-454a-bc00-6d38eca03af4", "name": "ACM Transactions on
      Autonomous and Adaptive Systems", "type": "journal", "alternate_names": ["ACM
      Trans Auton Adapt Syst"], "issn": "1556-4665", "url": "http://www.acm.org/pubs/taas",
      "alternate_urls": ["http://dl.acm.org/citation.cfm?id=J1010&picked=prox", "http://portal.acm.org/taas/",
      "https://taas.acm.org/"]}, "url": "https://www.semanticscholar.org/paper/387f7275d479e0a466f722faf31aee7882ebcef2",
      "title": "NEPTUNE: a Comprehensive Framework for Managing Serverless Functions
      at the Edge", "abstract": "Applications that are constrained by low-latency
      requirements can hardly be executed on cloud infrastructures, given the high
      network delay required to reach remote servers. Multi-access Edge Computing
      (MEC) is the reference architecture for executing applications on nodes that
      are located close to users (i.e., at the edge of the network). This way, the
      network overhead is reduced but new challenges emerge. The resources available
      on edge nodes are limited, workloads fluctuate since users can rapidly change
      location, and complex tasks are becoming widespread (e.g., machine learning
      inference). To address these issues, this article presents NEPTUNE, a serverless-based
      framework that automates the management of large-scale MEC infrastructures.
      In particular, NEPTUNE provides i) the placement of serverless functions on
      MEC nodes according to users\u2019 location, ii) the resolution of resource
      contention scenarios by avoiding that single nodes be saturated, and iii) the
      dynamic allocation of CPUs and GPUs to meet foreseen execution times. To assess
      NEPTUNE, we built a prototype based on K3S, an edge-dedicated version of Kubernetes,
      and executed a comprehensive set of experiments. Results show that NEPTUNE obtains
      a significant reduction in terms of response time, network overhead, and resource
      consumption compared to five state-of-the-art solutions.", "venue": "ACM Transactions
      on Autonomous and Adaptive Systems", "year": 2023, "referenceCount": 10, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3634750", "status": "BRONZE"}, "fieldsOfStudy":
      null, "s2FieldsOfStudy": [{"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-12-04", "journal": {"name": "ACM
      Transactions on Autonomous and Adaptive Systems"}, "citationStyles": {"bibtex":
      "@Article{Baresi2023NEPTUNEAC,\n author = {Luciano Baresi and David Hu and G.
      Quattrocchi and L. Terracciano},\n booktitle = {ACM Transactions on Autonomous
      and Adaptive Systems},\n journal = {ACM Transactions on Autonomous and Adaptive
      Systems},\n title = {NEPTUNE: a Comprehensive Framework for Managing Serverless
      Functions at the Edge},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2242736209",
      "name": "Luciano Baresi"}, {"authorId": "2070033631", "name": "David Hu"}, {"authorId":
      "1500419986", "name": "G. Quattrocchi"}, {"authorId": "35162145", "name": "L.
      Terracciano"}]}, {"paperId": "38a25937bc5b98ec1bca31abea594f5704564220", "externalIds":
      {"DBLP": "conf/icufn/LeiterKHFGHKB22", "DOI": "10.1109/icufn55119.2022.9829576",
      "CorpusId": 250944553}, "corpusId": 250944553, "publicationVenue": {"id": "5ba115b2-444a-476a-ae16-66bf1b83372f",
      "name": "International Conference on Ubiquitous and Future Networks", "type":
      "conference", "alternate_names": ["Int Conf Ubiquitous Future Netw", "ICUFN"]},
      "url": "https://www.semanticscholar.org/paper/38a25937bc5b98ec1bca31abea594f5704564220",
      "title": "Intent-based 5G UPF configuration via Kubernetes Operators in the
      Edge", "abstract": "The expected growing number of edge clouds in the telecommunication
      industry requires new types of configuration management approaches in order
      to deal with the increased complexity. The Kubernetes Operator pattern widely
      used for lifecycle management of cloud native applications could be also applied
      to network management and configuration. In this paper we present our approach
      on using Kubernetes Operators to automatically adapt the configuration of the
      edge-located User Plane Functions (UPFs) to intents coming from an Edge Application.
      The owner of the Edge Application does not need to deal with network-related
      configuration as the chain of Kubernetes Operators manage it. Furthermore, we
      also provide numerical results about the speed of automatic configuration.",
      "venue": "International Conference on Ubiquitous and Future Networks", "year":
      2022, "referenceCount": 18, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-07-05", "journal": {"name": "2022 Thirteenth International
      Conference on Ubiquitous and Future Networks (ICUFN)", "pages": "186-189"},
      "citationStyles": {"bibtex": "@Article{Leiter2022Intentbased5U,\n author = {\u00c1kos
      Leiter and I. Kisp\u00e1l and Attila Hegyi and P. Fazekas and N\u00e1ndor Galambosi
      and P. Hegyi and P\u00e9ter Kulics and J\u00f3zsef B\u00edr\u00f3},\n booktitle
      = {International Conference on Ubiquitous and Future Networks},\n journal =
      {2022 Thirteenth International Conference on Ubiquitous and Future Networks
      (ICUFN)},\n pages = {186-189},\n title = {Intent-based 5G UPF configuration
      via Kubernetes Operators in the Edge},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "51899499", "name": "\u00c1kos Leiter"}, {"authorId": "69062004", "name": "I.
      Kisp\u00e1l"}, {"authorId": "153597247", "name": "Attila Hegyi"}, {"authorId":
      "2181619", "name": "P. Fazekas"}, {"authorId": "8696426", "name": "N\u00e1ndor
      Galambosi"}, {"authorId": "48085082", "name": "P. Hegyi"}, {"authorId": "2178508412",
      "name": "P\u00e9ter Kulics"}, {"authorId": "2063102580", "name": "J\u00f3zsef
      B\u00edr\u00f3"}]}, {"paperId": "38ca75fea7276c8a7bfa34432a13391694f6a274",
      "externalIds": {"DBLP": "conf/sisy/BasciftciA22", "DOI": "10.1109/SISY56759.2022.10036308",
      "CorpusId": 256877278}, "corpusId": 256877278, "publicationVenue": {"id": "ca7c5b48-6fe3-4fff-87b1-c3101ec9603b",
      "name": "Symposium on Intelligent Systems and Informatics", "type": "conference",
      "alternate_names": ["SISY", "Int Symp Intell Syst Informatics", "International
      Symposium on Intelligent Systems and Informatics", "Symp Intell Syst Informatics"]},
      "url": "https://www.semanticscholar.org/paper/38ca75fea7276c8a7bfa34432a13391694f6a274",
      "title": "Strategies for Request-Response Logging in Microservices Architecture",
      "abstract": "Microservices Architecture is the prevailing architectural choice
      today for building distributed software systems in various business sectors,
      such as telecommunications, e-commerce, and finance. It is often necessary to
      log the full content of request and response messages (i.e., the entire body
      of these messages) that are entering and leaving such distributed systems due
      to legal book-keeping requirements. In this work, two systematic design strategies
      were used to realize the structured logging of request-response messages including
      their entire message body, particularly in a microservices architecture-based
      distributed software system. As a case study, a prototype per strategy was implemented
      and deployed into an existing Microservices Architecture-based banking system,
      which was provided by a commercial bank for the research presented in this paper
      in the Kubernetes cluster. Load tests were performed against this banking system
      to measure average request throughputs and average response times per logging
      strategy for analysis purposes. The results that are presented in this paper
      are expected to be helpful for both researchers and practitioners in the software
      industry who need a similar logging solution.", "venue": "Symposium on Intelligent
      Systems and Informatics", "year": 2022, "referenceCount": 30, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2022-09-15", "journal": {"name": "2022 IEEE 20th Jubilee International Symposium
      on Intelligent Systems and Informatics (SISY)", "pages": "000121-000126"}, "citationStyles":
      {"bibtex": "@Article{Bas\u00e7ift\u00e7i2022StrategiesFR,\n author = {F. Bas\u00e7ift\u00e7i
      and F. Aydemir},\n booktitle = {Symposium on Intelligent Systems and Informatics},\n
      journal = {2022 IEEE 20th Jubilee International Symposium on Intelligent Systems
      and Informatics (SISY)},\n pages = {000121-000126},\n title = {Strategies for
      Request-Response Logging in Microservices Architecture},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "35244329", "name": "F. Bas\u00e7ift\u00e7i"}, {"authorId":
      "2083387002", "name": "F. Aydemir"}]}, {"paperId": "38ede567dda9f6d3539e4b077c1a842158fb1a42",
      "externalIds": {"MAG": "3046993447", "DOI": "10.1109/ecti-con49241.2020.9158114",
      "CorpusId": 221086877}, "corpusId": 221086877, "publicationVenue": {"id": "16b6dc15-5de5-48a8-9654-2d56e80ca1d6",
      "name": "International Conference on Electrical Engineering/Electronics, Computer,
      Telecommunications and Information Technology", "type": "conference", "alternate_names":
      ["ECTI-CON", "Int Conf Electr Eng Comput Telecommun Inf Technol"]}, "url": "https://www.semanticscholar.org/paper/38ede567dda9f6d3539e4b077c1a842158fb1a42",
      "title": "A Scalable Service Architecture with Request Queuing for Resource-Intensive
      Tasks", "abstract": "Deploying Machine Learning (ML) prediction or Data Analytic
      (DA) process as a service in a Web API is not a trivial task. A number of settings
      and dependency requirements must be met to provide ML or DA successful solutions.
      In addition, an application that utilizes such an API needs to be always available
      to serve multiple users who can concurrently submit their requests. ML modeling
      or DA processing is a resource-intensive task, which can take a massive amount
      of time to process. Some tasks may take just a few minutes or hours while others
      may take several days to complete. In this paper, we design and develop a scalable
      architecture of API services for hosting ML models or DA functionalities in
      a production-grade deployment. The technologies of containerization and container
      orchestration, i.e., Docker and Kubernetes, have been employed to automate the
      deployment, scaling, and management of containerized ML or DA instances. To
      meet high-scale and high-availability requirements, the open-source message
      broker, i.e., RabbitMQ, is also used and containerized in Docker for scheduling
      multiple requests as task messages. These messages are then put into a task
      queue so that they will be processed later consecutively. Also, Nginx and Node.js
      with Express.js have been used and containerized as a web server and an API
      provider, respectively. We use a case-study of an intelligent system for processing
      documents about national research granting to validate our architecture.", "venue":
      "International Conference on Electrical Engineering/Electronics, Computer, Telecommunications
      and Information Technology", "year": 2020, "referenceCount": 7, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2020-06-01",
      "journal": {"name": "2020 17th International Conference on Electrical Engineering/Electronics,
      Computer, Telecommunications and Information Technology (ECTI-CON)", "pages":
      "67-70"}, "citationStyles": {"bibtex": "@Conference{Chaowvasin2020ASS,\n author
      = {Kasidis Chaowvasin and Pun Sutanchaiyanonta and Nont Kanungsukkasem and Teerapong
      Leelanupab},\n booktitle = {International Conference on Electrical Engineering/Electronics,
      Computer, Telecommunications and Information Technology},\n journal = {2020
      17th International Conference on Electrical Engineering/Electronics, Computer,
      Telecommunications and Information Technology (ECTI-CON)},\n pages = {67-70},\n
      title = {A Scalable Service Architecture with Request Queuing for Resource-Intensive
      Tasks},\n year = {2020}\n}\n"}, "authors": [{"authorId": "1865678286", "name":
      "Kasidis Chaowvasin"}, {"authorId": "1865679832", "name": "Pun Sutanchaiyanonta"},
      {"authorId": "2391529", "name": "Nont Kanungsukkasem"}, {"authorId": "1963537",
      "name": "Teerapong Leelanupab"}]}, {"paperId": "38ff3a01e30d2244d9439d3c7c68533e195310fb",
      "externalIds": {"DBLP": "journals/cluster/KhaleqR23", "DOI": "10.1007/s10586-023-03999-8",
      "CorpusId": 258414852}, "corpusId": 258414852, "publicationVenue": {"id": "f1d0ef3d-4e90-41e9-b454-f589a933654f",
      "name": "Cluster Computing", "type": "journal", "alternate_names": ["Clust Comput"],
      "issn": "1386-7857", "url": "https://www.springer.com/computer/communication+networks/journal/10586",
      "alternate_urls": ["https://link.springer.com/journal/10586", "http://www.springer.com/computer/communication+networks/journal/10586"]},
      "url": "https://www.semanticscholar.org/paper/38ff3a01e30d2244d9439d3c7c68533e195310fb",
      "title": "Intelligent microservices autoscaling module using reinforcement learning",
      "abstract": null, "venue": "Cluster Computing", "year": 2023, "referenceCount":
      36, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-04-28", "journal":
      {"name": "Cluster Computing", "pages": "2789 - 2800", "volume": "26"}, "citationStyles":
      {"bibtex": "@Article{Khaleq2023IntelligentMA,\n author = {Abeer Abdel Khaleq
      and Ilkyeun Ra},\n booktitle = {Cluster Computing},\n journal = {Cluster Computing},\n
      pages = {2789 - 2800},\n title = {Intelligent microservices autoscaling module
      using reinforcement learning},\n volume = {26},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "66652996", "name": "Abeer Abdel Khaleq"}, {"authorId": "1940102",
      "name": "Ilkyeun Ra"}]}, {"paperId": "390c6c31fac5dc46272045b15b5c09b8123188f0",
      "externalIds": {"CorpusId": 237273399}, "corpusId": 237273399, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/390c6c31fac5dc46272045b15b5c09b8123188f0",
      "title": "Evaluating Performance of OMG DDS in Kubernetes Container Deployment
      (Industry Track)", "abstract": "OMG\u2019s Data Distribution Service (DDS) is
      an open, real-time publish/subscribe middleware standard, which has been widely
      adopted in many latency-sensitive and mission-critical industrial IoT applications.
      However, deploying and managing large-scale distributed DDS applications is
      tedious and laborious. As a successful container orchestration platform for
      distributed applications in the cloud, Kubernetes (k8s) is a promising solution
      for DDS-based systems. However, the feasibility of running DDS applications
      in a k8s environment, and the overhead of different k8s virtualization network
      architectures on DDS application performance has not been systematically studied.
      To address this, we compare the performance of DDS applications with several
      k8s network solutions using a comprehensive set of experiments we designed for
      a DDS benchmark application. Our experimental results reveal that: (1) the overhead
      of container virtualization is trivial for DDS applications; (2) the overhead
      imposed by virtual networks is not significant and there is not much performance
      difference between the experimented virtual networking solutions; (3) WeaveNet
      is useful for DDS discovery because it supports IP multicast, but its multicast
      performance is considerably lower than the host network. CCS Concepts: \u2022
      Software and its engineering \u2192 Publishsubscribe / event-based architectures;
      \u2022 Networks \u2192 Network measurement; \u2022 General and reference \u2192
      Evaluation.", "venue": "", "year": 2020, "referenceCount": 15, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Inproceedings{Kang2020EvaluatingPO,\n author = {Zhuangwei Kang},\n title =
      {Evaluating Performance of OMG DDS in Kubernetes Container Deployment (Industry
      Track)},\n year = {2020}\n}\n"}, "authors": [{"authorId": "94578365", "name":
      "Zhuangwei Kang"}]}, {"paperId": "392e409c9bfd310d6a8e6f781aabb8858f212f90",
      "externalIds": {"DOI": "10.1109/CCEM50674.2020.00005", "CorpusId": 236940238},
      "corpusId": 236940238, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/392e409c9bfd310d6a8e6f781aabb8858f212f90",
      "title": "Workload Volatility Management in Datacenters and Cloud", "abstract":
      "With increasing adoption of cloud by enterprises, resource management has never
      been more important than it is now. Efficient utilization of infrastructure
      can not only improve application performance but also help enterprises save
      significantly on their operational expenditure. For features like Cluster Autoscaling,
      inefficient resource management can lead to cluster resources getting scaled
      in or out more frequently, thereby increasing operational expenses. Traditional
      resource management engines distribute workloads across the nodes based on their
      utilization. This approach is most effective when the workloads are more or
      less stable. If the workloads are unstable or volatile, this approach of distributing
      the load is not optimal as workloads keep varying and the resource management
      engine can end up moving workloads from one node to another continuously to
      keep the load distributed. This results in inefficient resource utilisation,
      overloading of hosts and wastage of resources due to continuously moving workloads.
      With new workloads like container applications and Kubernetes, clusters are
      more prone to workload volatility since these workloads are short-lived and
      can frequently switch between the containers. In the future, handling this workload
      volatility will be critical to support these new container workloads. To address
      this problem, in this paper, we introduce a new Volatility Balancer which can
      work with any Load Balancer and distribute workload volatility along with workload
      utilization. Volatility Balancer, together with a Load Balancer, can provide
      an efficient resource management model for all the new generation workloads.",
      "venue": "2020 IEEE International Conference on Cloud Computing in Emerging
      Markets (CCEM)", "year": 2020, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2020-11-01", "journal": {"name": "2020 IEEE International Conference on Cloud
      Computing in Emerging Markets (CCEM)", "pages": "82-86"}, "citationStyles":
      {"bibtex": "@Conference{Inabattini2020WorkloadVM,\n author = {Sai Inabattini
      and Priyanka Gayam},\n booktitle = {2020 IEEE International Conference on Cloud
      Computing in Emerging Markets (CCEM)},\n journal = {2020 IEEE International
      Conference on Cloud Computing in Emerging Markets (CCEM)},\n pages = {82-86},\n
      title = {Workload Volatility Management in Datacenters and Cloud},\n year =
      {2020}\n}\n"}, "authors": [{"authorId": "2122859066", "name": "Sai Inabattini"},
      {"authorId": "2122859926", "name": "Priyanka Gayam"}]}, {"paperId": "3932ae1aea7116ff43534eadb6e2f47b6e44b7c3",
      "externalIds": {"MAG": "2894649525", "DOI": "10.1080/10705511.2018.1521285",
      "CorpusId": 125416152, "PubMed": "31133771"}, "corpusId": 125416152, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/3932ae1aea7116ff43534eadb6e2f47b6e44b7c3",
      "title": "Cloud Computing for Voxel-Wise SEM Analysis of MRI Data", "abstract":
      "As data collection costs fall and vast quantities of data are collected, data
      analysis time can become a bottleneck. For massively parallel analyses, cloud
      computing offers the short-term rental of ample processing power. Recent software
      innovations have reduced the effort needed to take advantage of cloud computing.
      To demonstrate, we replicate a voxel-wise examination of the genetic contributions
      to cortical development by age using evidence from 1748 MRI scans. Specifically,
      we employ off-the-shelf Kubernetes software that permits us to re-run our analyses
      using almost the same computer code as was published in the original article.
      Large, well funded institutions may continue to maintain their own computing
      clusters. However, the modest cost of renting and ease of utilizing cloud computing
      services makes unprecedented compute power available to all researchers, whether
      or not affiliated with a research institution. We expect this to spur innovation
      in the sophisticated modeling of large datasets.", "venue": "Structural equation
      modeling : a multidisciplinary journal", "year": 2018, "referenceCount": 15,
      "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      {"url": "https://europepmc.org/articles/pmc6534137?pdf=render", "status": "GREEN"},
      "fieldsOfStudy": ["Computer Science", "Medicine"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Medicine", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2018-10-02", "journal": {"name": "Structural
      Equation Modeling: A Multidisciplinary Journal", "pages": "470 - 480", "volume":
      "26"}, "citationStyles": {"bibtex": "@Article{Pritikin2018CloudCF,\n author
      = {Joshua N. Pritikin and J. Schmitt and Michael C. Neale},\n booktitle = {Structural
      equation modeling : a multidisciplinary journal},\n journal = {Structural Equation
      Modeling: A Multidisciplinary Journal},\n pages = {470 - 480},\n title = {Cloud
      Computing for Voxel-Wise SEM Analysis of MRI Data},\n volume = {26},\n year
      = {2018}\n}\n"}, "authors": [{"authorId": "48851433", "name": "Joshua N. Pritikin"},
      {"authorId": "2252937835", "name": "J. Schmitt"}, {"authorId": "2244820280",
      "name": "Michael C. Neale"}]}, {"paperId": "3967c7b34139d5afd70d4b39ee884d59d47c6251",
      "externalIds": {"DBLP": "conf/ic2e/PusztaiNRDVX23", "DOI": "10.1109/IC2E59103.2023.00026",
      "CorpusId": 264495711}, "corpusId": 264495711, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/3967c7b34139d5afd70d4b39ee884d59d47c6251",
      "title": "Vela: A 3-Phase Distributed Scheduler for the Edge-Cloud Continuum",
      "abstract": "The amalgamation of multiple Edge and Cloud clusters into an Edge-Cloud
      continuum requires efficient scheduling techniques to cope with high numbers
      of infrastructure nodes and computing jobs. Since monolithic schedulers typically
      do not scale well beyond a certain cluster size, distributed scheduling approaches
      are usually employed to address such scalability issues. Distributed schedulers
      are often designed for Cloud environments and lack support for the Edge. Conversely,
      many Edge schedulers focus on single clusters and provide limited support to
      deal with the scale of the Edge-Cloud continuum. In this paper, we present the
      Vela Distributed Scheduler, a globally distributed scheduler, which is specifically
      tailored for the Edge-Cloud continuum. The main contributions of our work include:
      i) A novel, globally distributed and orchestrator-independent scheduler with
      a 3-phase scheduling workflow; ii) A two-level, informed sampling mechanism,
      which reduces latency for globally distributed sampling and leverages job requirements
      to produce high quality node samples; And iii) a MultiBind mechanism that significantly
      reduces job evictions and rescheduling due to scheduling conflicts. We implement
      Vela on top of Kubernetes and evaluate it in a realistic large-scale setup using
      multiple interconnected, globally distributed, and production-ready MicroK8s
      clusters with up to 20,000 total simulated nodes. Our results show that Vela\u2019s
      performance scales linearly with infrastructure size and that it reduces scheduling
      conflicts by a factor of 10.", "venue": "2023 IEEE International Conference
      on Cloud Engineering (IC2E)", "year": 2023, "referenceCount": 43, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2023-09-25", "journal":
      {"name": "2023 IEEE International Conference on Cloud Engineering (IC2E)", "pages":
      "161-172"}, "citationStyles": {"bibtex": "@Article{Pusztai2023VelaA3,\n author
      = {Thomas W. Pusztai and Stefan Nastic and Philipp Raith and S. Dustdar and
      D. Vij and Ying Xiong},\n booktitle = {2023 IEEE International Conference on
      Cloud Engineering (IC2E)},\n journal = {2023 IEEE International Conference on
      Cloud Engineering (IC2E)},\n pages = {161-172},\n title = {Vela: A 3-Phase Distributed
      Scheduler for the Edge-Cloud Continuum},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "1500401563", "name": "Thomas W. Pusztai"}, {"authorId": "1726771",
      "name": "Stefan Nastic"}, {"authorId": "2090012665", "name": "Philipp Raith"},
      {"authorId": "1691109", "name": "S. Dustdar"}, {"authorId": "49838274", "name":
      "D. Vij"}, {"authorId": "2261864287", "name": "Ying Xiong"}]}, {"paperId": "3985916d3a7d2a941af161e8734570bc608612b9",
      "externalIds": {"DBLP": "conf/aiipcc/HuoLXL22", "DOI": "10.1109/AIIPCC57291.2022.00051",
      "CorpusId": 257786695}, "corpusId": 257786695, "publicationVenue": {"id": "2dacb8db-ce48-46fd-bd2a-fe07bf87cb30",
      "name": "International Conferences on Artificial Intelligence, Information Processing
      and Cloud Computing", "type": "conference", "alternate_names": ["AIIPCC", "Int
      Conf Artif Intell Inf Process Cloud Comput"]}, "url": "https://www.semanticscholar.org/paper/3985916d3a7d2a941af161e8734570bc608612b9",
      "title": "Horizontal Pod Autoscaling based on Kubernetes with Fast Response
      and Slow Shrinkage", "abstract": "Autoscaling is an important part of Kubernetes.
      Horizontal Pod Autoscaling (HPA) schedules cluster resources according to the
      service load status to ensure that services are still running normally when
      the load increases or decreases. But the default HPA is slow and inflexible.
      In scenarios with large load changes, it will scale at a high frequency, resulting
      in a waste of cluster resources and reducing the robustness of the cluster.
      This paper proposes a Fast-response and Slow-shrinkage algorithm. By setting
      the expansion rate, tolerance, window time, etc., the flexibility of scaling
      is increased. When facing the pressure of a sudden increase in traffic, the
      rapid expansion can be optimized in minutes. The algorithm also adopts a cautious
      shrinking strategy to reduce and prevent failures caused by secondary access
      peaks.", "venue": "International Conferences on Artificial Intelligence, Information
      Processing and Cloud Computing", "year": 2022, "referenceCount": 11, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2022-08-01", "journal": {"name": "2022 International Conference on Artificial
      Intelligence, Information Processing and Cloud Computing (AIIPCC)", "pages":
      "203-206"}, "citationStyles": {"bibtex": "@Article{Huo2022HorizontalPA,\n author
      = {Qizheng Huo and Shaonan Li and Yongqiang Xie and Zhongbo Li},\n booktitle
      = {International Conferences on Artificial Intelligence, Information Processing
      and Cloud Computing},\n journal = {2022 International Conference on Artificial
      Intelligence, Information Processing and Cloud Computing (AIIPCC)},\n pages
      = {203-206},\n title = {Horizontal Pod Autoscaling based on Kubernetes with
      Fast Response and Slow Shrinkage},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2169680418", "name": "Qizheng Huo"}, {"authorId": "2210987007", "name": "Shaonan
      Li"}, {"authorId": "49290936", "name": "Yongqiang Xie"}, {"authorId": "46947599",
      "name": "Zhongbo Li"}]}, {"paperId": "3985cbe8882022c0d60179bb2c95429b43e8bf59",
      "externalIds": {"DBLP": "conf/qrs/YinSWS19", "MAG": "2979718858", "DOI": "10.1109/QRS-C.2019.00082",
      "CorpusId": 204246703}, "corpusId": 204246703, "publicationVenue": {"id": "c1a3f23d-e3de-40a3-8d2d-187b921b61c8",
      "name": "IEEE International Conference on Software Quality, Reliability and
      Security Companion", "type": "conference", "alternate_names": ["QRS-C", "IEEE
      Int Conf Softw Qual Reliab Secur Companion"]}, "url": "https://www.semanticscholar.org/paper/3985cbe8882022c0d60179bb2c95429b43e8bf59",
      "title": "A Flexible Cyber Security Experimentation Platform Architecture Based
      on Docker", "abstract": "With the rising trends in interconnectivity, ensuring
      cyber security is of paramount importance. Cyber security experimentation platform
      can help researchers simulate real-world cyber topologies, analyze various attacks
      and experiment defense strategies. While traditional platforms does not scale
      well with the evolving cyber topologies and does not have much flexibility in-terms
      of functionalities. This paper presents a new architecture for experimentation
      platform of cyber security, based on Docker. It possesses the scalability factor
      necessary for large cyber simulations and also provides a flexible extension
      mechanism. This feature enables users to customize cyber node''s topologies,
      software environment, and also support the customization of important experiment
      indicators. Kubernetes enables virtual nodes to be deployed on distributed servers
      readily, and the important experiment indicators can be relayed back in real-time
      which reduces the overall cost and helps speedup the experimental analysis.",
      "venue": "IEEE International Conference on Software Quality, Reliability and
      Security Companion", "year": 2019, "referenceCount": 11, "citationCount": 6,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2019-07-22", "journal":
      {"name": "2019 IEEE 19th International Conference on Software Quality, Reliability
      and Security Companion (QRS-C)", "pages": "413-420"}, "citationStyles": {"bibtex":
      "@Article{Yin2019AFC,\n author = {Yongfeng Yin and Yuyan Shao and Xuefeng Wang
      and Qingran Su},\n booktitle = {IEEE International Conference on Software Quality,
      Reliability and Security Companion},\n journal = {2019 IEEE 19th International
      Conference on Software Quality, Reliability and Security Companion (QRS-C)},\n
      pages = {413-420},\n title = {A Flexible Cyber Security Experimentation Platform
      Architecture Based on Docker},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2812643", "name": "Yongfeng Yin"}, {"authorId": "2112573134", "name": "Yuyan
      Shao"}, {"authorId": "2108197007", "name": "Xuefeng Wang"}, {"authorId": "1381578225",
      "name": "Qingran Su"}]}, {"paperId": "39a533d5a8e3e91b3fb580d3d91df02e02a1743d",
      "externalIds": {"DBLP": "conf/cnsm/Papakonstantinou20", "MAG": "3110413165",
      "DOI": "10.23919/CNSM50824.2020.9269114", "CorpusId": 227278092}, "corpusId":
      227278092, "publicationVenue": {"id": "7a0ab88e-224a-475b-9ea6-e66a6b3448c8",
      "name": "Conference on Network and Service Management", "type": "conference",
      "alternate_names": ["Conf Netw Serv Manag", "CNSM"], "url": "http://www.cnsm-conf.org/"},
      "url": "https://www.semanticscholar.org/paper/39a533d5a8e3e91b3fb580d3d91df02e02a1743d",
      "title": "A Techno-Economic Assessment of Microservices", "abstract": "The microservices
      design paradigm enables applications, usually based on containers, exploiting
      the flexibility of cloud computing and bringing unique scalability, fault-tolerance
      and resource-allocation benefits. A number of orchestration facilities, including
      Kubernetes, target the efficient deployment and operation of containers and
      are mainly focusing on the maintenance of server resource allocation under predefined
      thresholds, i.e., through scaling up or down containers to mitigate dynamic
      changes in the workload. In this work, we highlight the technical capabilities
      and cost-saving impact of microservices in contrast to traditional monolithic
      applications, based on a techno-economic analysis. We also investigate the service
      performance vs resource allocation trade-off, uncovering interesting dynamics
      when elasticity is driven from service quality metrics. This approach allows
      the Service Providers (SPs) to balance their profit margins with the customer
      satisfaction, i.e., reducing the infrastructure cost while keeping the service
      performance at an acceptable level.", "venue": "Conference on Network and Service
      Management", "year": 2020, "referenceCount": 17, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Economics", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2020-11-02",
      "journal": {"name": "2020 16th International Conference on Network and Service
      Management (CNSM)", "pages": "1-5"}, "citationStyles": {"bibtex": "@Article{Papakonstantinou2020ATA,\n
      author = {I. Papakonstantinou and Sarantis Kalafatidis and L. Mamatas},\n booktitle
      = {Conference on Network and Service Management},\n journal = {2020 16th International
      Conference on Network and Service Management (CNSM)},\n pages = {1-5},\n title
      = {A Techno-Economic Assessment of Microservices},\n year = {2020}\n}\n"}, "authors":
      [{"authorId": "2075018778", "name": "I. Papakonstantinou"}, {"authorId": "2031509177",
      "name": "Sarantis Kalafatidis"}, {"authorId": "2176645", "name": "L. Mamatas"}]},
      {"paperId": "39c18efeae8bfb0bf326c1dff9a3f768851ac676", "externalIds": {"MAG":
      "3006320574", "DOI": "10.1109/ISPRAS47671.2019.00016", "CorpusId": 211207796},
      "corpusId": 211207796, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/39c18efeae8bfb0bf326c1dff9a3f768851ac676",
      "title": "Kubernetes Container Orchestration as a Framework for Flexible and
      Effective Scientific Data Analysis", "abstract": "In this paper we present the
      design and deployment details for Single Particle Imaging (SPI) experiments
      data analysis pipeline in Kubernetes infrastructure. We have analyzed various
      software usage patterns for different payloads. Components of the pipeline software
      include traditional HPC (MPI-based) applications, applications which require
      GPU computations, GUI-based software and the software which can be parallelized
      naturally by dividing the data into several independent parts (Data parallelism).
      For every payload type individual deployment approach was proposed.", "venue":
      "2019 Ivannikov Ispras Open Conference (ISPRAS)", "year": 2019, "referenceCount":
      17, "citationCount": 7, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Physics", "source": "s2-fos-model"}], "publicationTypes": ["Conference"],
      "publicationDate": "2019-12-01", "journal": {"name": "2019 Ivannikov Ispras
      Open Conference (ISPRAS)", "pages": "67-71"}, "citationStyles": {"bibtex": "@Conference{Tesliuk2019KubernetesCO,\n
      author = {Anton Tesliuk and S. Bobkov and V. Ilyin and A. Novikov and A. Poyda
      and V. Velikhov},\n booktitle = {2019 Ivannikov Ispras Open Conference (ISPRAS)},\n
      journal = {2019 Ivannikov Ispras Open Conference (ISPRAS)},\n pages = {67-71},\n
      title = {Kubernetes Container Orchestration as a Framework for Flexible and
      Effective Scientific Data Analysis},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2121839793", "name": "Anton Tesliuk"}, {"authorId": "49249255", "name": "S.
      Bobkov"}, {"authorId": "47172339", "name": "V. Ilyin"}, {"authorId": "153413990",
      "name": "A. Novikov"}, {"authorId": "2386532", "name": "A. Poyda"}, {"authorId":
      "35320447", "name": "V. Velikhov"}]}, {"paperId": "39c6e70dcc719f963c85dd8db1a780d23c89d8c1",
      "externalIds": {"DBLP": "conf/ucc/FardPW20", "DOI": "10.1109/UCC48980.2020.00061",
      "CorpusId": 230512786}, "corpusId": 230512786, "publicationVenue": {"id": "d03a5bfe-db75-4dc9-95f3-ae92b081f42c",
      "name": "International Conference on Utility and Cloud Computing", "type": "conference",
      "alternate_names": ["IEEE/ACM Int Conf Util Cloud Comput", "Utility and Cloud
      Computing", "Int Conf Util Cloud Comput", "Util Cloud Comput", "UCC", "IEEE/ACM
      International Conference Utility and Cloud Computing"]}, "url": "https://www.semanticscholar.org/paper/39c6e70dcc719f963c85dd8db1a780d23c89d8c1",
      "title": "Dynamic Multi-objective Scheduling of Microservices in the Cloud",
      "abstract": "For many applications, a microservices architecture promises better
      performance and flexibility compared to a conventional monolithic architecture.
      In spite of the advantages of a microservices architecture, deploying microservices
      poses various challenges for service developers and providers alike. One of
      these challenges is the efficient placement of microservices on the cluster
      nodes. Improper allocation of microservices can quickly waste resource capacities
      and cause low system throughput. In the last few years, new technologies in
      orchestration frameworks, such as the possibility of multiple schedulers for
      pods in Kubernetes, have improved scheduling solutions of microservices but
      using these technologies needs to involve both the service developer and the
      service provider in the behavior analysis of workloads. Using memory and CPU
      requests specified in the service manifest, we propose a general microservices
      scheduling mechanism that can operate efficiently in private clusters or enterprise
      clouds. We model the scheduling problem as a complex variant of the knapsack
      problem and solve it using a multi-objective optimization approach. Our experiments
      show that the proposed mechanism is highly scalable and simultaneously increases
      utilization of both memory and CPU, which in turn leads to better throughput
      when compared to the state-of-the-art.", "venue": "International Conference
      on Utility and Cloud Computing", "year": 2020, "referenceCount": 22, "citationCount":
      6, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2020-12-01", "journal":
      {"name": "2020 IEEE/ACM 13th International Conference on Utility and Cloud Computing
      (UCC)", "pages": "386-393"}, "citationStyles": {"bibtex": "@Article{Fard2020DynamicMS,\n
      author = {H. M. Fard and R. Prodan and F. Wolf},\n booktitle = {International
      Conference on Utility and Cloud Computing},\n journal = {2020 IEEE/ACM 13th
      International Conference on Utility and Cloud Computing (UCC)},\n pages = {386-393},\n
      title = {Dynamic Multi-objective Scheduling of Microservices in the Cloud},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "2468941", "name": "H. M. Fard"},
      {"authorId": "1718255", "name": "R. Prodan"}, {"authorId": "145896107", "name":
      "F. Wolf"}]}, {"paperId": "39e170c51ba6835c6b7299ace48f1c9adc9a084c", "externalIds":
      {"DBLP": "conf/wocc/JhengWYCC21", "DOI": "10.1109/wocc53213.2021.9603194", "CorpusId":
      244167298}, "corpusId": 244167298, "publicationVenue": {"id": "588e6de5-b5fc-458c-bce5-6f86c0437622",
      "name": "Wireless and Optical Communications Conference", "type": "conference",
      "alternate_names": ["WOCC", "Wirel Opt Commun Conf"], "url": "http://www.wikicfp.com/cfp/program?id=3122"},
      "url": "https://www.semanticscholar.org/paper/39e170c51ba6835c6b7299ace48f1c9adc9a084c",
      "title": "A Systematic Resource Management for VR Streaming on MECs", "abstract":
      "Mobile edge computing(MEC) has brought computation and storage resources from
      the centralized data center to the edge network; and, this could effectively
      reduce end-to-end latency for VR users. In this work, we implement a VR streaming
      and its resource management system based on Kubernetes and KubeVirt for VR streaming
      on MECs. Such system is able to adjust the resource pool according to user requirements
      and recommend a users with proper VM template based on historical logs. Moreover,
      our system could let users run VR applications on remote servers, and stream
      their contents to the user\u2019s VR headsets. At last, the system administrator
      could control through the web interface and view the monitoring of resource
      usage in real time.", "venue": "Wireless and Optical Communications Conference",
      "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2021-10-07", "journal": {"name": "2021 30th Wireless and
      Optical Communications Conference (WOCC)", "pages": "36-37"}, "citationStyles":
      {"bibtex": "@Article{Jheng2021ASR,\n author = {Yu-Syuan Jheng and M. Wu and
      Ta-Wei Yang and Cheng-Fu Chou and Ing-Chau Chang},\n booktitle = {Wireless and
      Optical Communications Conference},\n journal = {2021 30th Wireless and Optical
      Communications Conference (WOCC)},\n pages = {36-37},\n title = {A Systematic
      Resource Management for VR Streaming on MECs},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2092701677", "name": "Yu-Syuan Jheng"}, {"authorId": "2158032866",
      "name": "M. Wu"}, {"authorId": "121270178", "name": "Ta-Wei Yang"}, {"authorId":
      "1718734", "name": "Cheng-Fu Chou"}, {"authorId": "2099808822", "name": "Ing-Chau
      Chang"}]}, {"paperId": "39e70c167aa08b5764b120b577968f5c4ee7c1eb", "externalIds":
      {"MAG": "2621887489", "CorpusId": 113483252}, "corpusId": 113483252, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/39e70c167aa08b5764b120b577968f5c4ee7c1eb",
      "title": "Mastering Docker", "abstract": "Rethink what''s possible with Docker
      become an expert in the innovative containerization tool to unlock new opportunities
      in the way you use and deploy softwareAbout This BookCreate highly scalable
      applications and services using the Linux container virtualization paradigmExtend
      Docker with external platforms, including Heroku and OpenStackIntegrate with
      some of the most innovative and exciting orchestration tools such as Kubernetes
      for larger and more controlled deploymentsWho This Book Is ForIf you recognize
      Docker''s importance for innovation in everything from system administration
      to web development, but aren''t sure how to use it to its full potential, this
      book is for you.What You Will LearnBecome fluent with the basic components of
      DockerLearn best practices for storing and managing Docker filesSecure your
      containers and files with Docker''s security featuresLearn how to use Docker
      machine to build new servers from scratchFind out how to set up and manage multiple
      environments with Docker composeUtilize Docker Swarm to orchestrate containers
      across different serversIntegrate Docker with a wide range of cloud and configuration
      tools to fully realize its potentialIn DetailDocker has been a game-changer
      when it comes to virtualization it has now grown to become a key driver of innovation
      beyond system administration, having an impact on the world of web development
      and more. But how can you make sure you''re keeping up with the innovations
      that it''s driving? How can you be sure you''re using it to its full potential?
      Mastering Docker shows you how it not only demonstrates how to use Docker more
      effectively, it also helps you rethink and reimagine what''s possible with Docker.Covering
      best practices to make sure you''re confident with and the basics, such as building,
      managing and storing containers, before diving deeper into Docker security,
      you''ll find everything you need to help you extend and integrate Docker in
      new and innovative ways. You''ll learn how to take greater control over your
      containers using some of Docker''s most sophisticated and useful tools, such
      as Docker compose and Docker swarm, before bringing together everything you
      already know and have learned to put your containers into production and monitor
      them for safety and performance.Beyond this, you''ll also explore even more
      advanced strategies, as you learn how to extend and integrate Docker with cloud
      platforms such as Heroku and OpenStack, and how tools such as Kubernetes can
      improve the way you manage large-scale container orchestration. With further
      guidance on how you can use configuration management tools such as Puppet, Chef
      and PowerShell, by the end of the book you''ll have a broad and detailed sense
      of exactly what''s possible with Docker and how seamlessly it fits with a range
      of other platforms and tools.Style and approachThis book takes you through some
      of the most sophisticated Docker tools in a way that''s accessible and practical.
      It has been created to help you put new ideas in practice and to demonstrate
      precisely what''s possible with Docker.", "venue": "", "year": 2015, "referenceCount":
      0, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Engineering"], "s2FieldsOfStudy":
      [{"category": "Engineering", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2015-12-16", "journal": {"name":
      "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Gallagher2015MasteringD,\n
      author = {S. Gallagher},\n title = {Mastering Docker},\n year = {2015}\n}\n"},
      "authors": [{"authorId": "144463946", "name": "S. Gallagher"}]}, {"paperId":
      "39fc95a8479a8068e5f1c70df0cc96b16a4932a5", "externalIds": {"DOI": "10.12694/scpe.v25i1.2970",
      "CorpusId": 266772497}, "corpusId": 266772497, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/39fc95a8479a8068e5f1c70df0cc96b16a4932a5",
      "title": "Configuration of Container Deployments on the Compute Continuum using
      Alien4Cloud", "abstract": "This paper presents the drawbacks and benefits of
      using Alien4Cloud as a platform for deploying container-based applications on
      the Compute Continuum. To achieve this, a plugin has been developed to deploy
      container-based applications in multiple Kubernetes clusters and to configure
      the containers based on their dependencies. More specifically, our implementation
      has been validated using a system of two Kubernetes clusters (one in Romania,
      and one in Spain) and a machine-learning application that has been successfully
      deployed using this system.", "venue": "Scalable Computing: Practice and Experience",
      "year": 2024, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.scpe.org/index.php/scpe/article/download/2970/909",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2024-01-04", "journal":
      {"name": "Scalable Computing: Practice and Experience"}, "citationStyles": {"bibtex":
      "@Article{Spataru2024ConfigurationOC,\n author = {Adrian F. Spataru and Julen
      Aperribay},\n booktitle = {Scalable Computing: Practice and Experience},\n journal
      = {Scalable Computing: Practice and Experience},\n title = {Configuration of
      Container Deployments on the Compute Continuum using Alien4Cloud},\n year =
      {2024}\n}\n"}, "authors": [{"authorId": "34907349", "name": "Adrian F. Spataru"},
      {"authorId": "2277930256", "name": "Julen Aperribay"}]}, {"paperId": "3a08de04fd15860e3dce2f3dc727e8421f5cdd2b",
      "externalIds": {"MAG": "2948341948", "CorpusId": 213771951}, "corpusId": 213771951,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3a08de04fd15860e3dce2f3dc727e8421f5cdd2b",
      "title": "Kubernetes ja AWS EKS", "abstract": null, "venue": "", "year": 2019,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Heikki2019KubernetesJA,\n
      author = {Ma Heikki},\n title = {Kubernetes ja AWS EKS},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "1581636413", "name": "Ma Heikki"}]}, {"paperId": "3a0b3e08d9caf06aa6c30b6d44292f5138f66656",
      "externalIds": {"DOI": "10.35143/jkt.v9i1.5606", "CorpusId": 265424998}, "corpusId":
      265424998, "publicationVenue": {"id": "6368bc18-18b2-414b-8320-537d437f53d8",
      "name": "Jurnal Komputer Terapan", "alternate_names": ["J Komp\u02b9\u00fbt
      Terap"], "issn": "2443-4159", "url": "https://jurnal.pcr.ac.id/index.php/jkt",
      "alternate_urls": ["https://jurnal.pcr.ac.id/index.php/jkt/index"]}, "url":
      "https://www.semanticscholar.org/paper/3a0b3e08d9caf06aa6c30b6d44292f5138f66656",
      "title": "Pengukuran Kinerja Kubernetes Cluster pada Nested Virtualization Berbasis
      KVM", "abstract": null, "venue": "Jurnal Komputer Terapan", "year": 2023, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://jurnal.pcr.ac.id/index.php/jkt/article/download/5606/2055",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-05-31", "journal": {"name": "Jurnal
      Komputer Terapan"}, "citationStyles": {"bibtex": "@Article{Sari2023PengukuranKK,\n
      author = {Widya Tri Wulan Sari and Sugeng Purwantoro E.S.G.S and Muhammad Arif
      Fadhly Ridha},\n booktitle = {Jurnal Komputer Terapan},\n journal = {Jurnal
      Komputer Terapan},\n title = {Pengukuran Kinerja Kubernetes Cluster pada Nested
      Virtualization Berbasis KVM},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2268155374", "name": "Widya Tri Wulan Sari"}, {"authorId": "2163874131", "name":
      "Sugeng Purwantoro E.S.G.S"}, {"authorId": "2268099738", "name": "Muhammad Arif
      Fadhly Ridha"}]}, {"paperId": "3a0cab5c8b71b2501728c0aa28da10c5a1fba702", "externalIds":
      {"DOI": "10.7763/ijcte.2021.v13.1295", "CorpusId": 240162836}, "corpusId": 240162836,
      "publicationVenue": {"id": "6b453bbe-1770-471f-a55b-435fbf79715d", "name": "International
      Journal of Computer Theory and Engineering", "type": "journal", "alternate_names":
      ["Int J Comput Theory Eng"]}, "url": "https://www.semanticscholar.org/paper/3a0cab5c8b71b2501728c0aa28da10c5a1fba702",
      "title": "Performance Comparison between Monolith and Microservice Using Docker
      and Kubernetes", "abstract": "Nowadays, various technologies play more of a
      role in our daily lives. Most people can easily access technology via computers
      or mobile phones. It cannot be denied that technology is involved in all activities
      in life. On the other hand, in the world of software development, it is considered
      to be very much affected by the inability of systems to accommodate a huge amount
      of people who can access the website or application due to design architecture
      that no longer exists in an age where technology has evolved quickly. In this
      paper, we tested and analyzed the performance comparison between monolith and
      microservices using Docker and Kubernetes by developing a simulation system
      based on those concepts. This paper presents a performance comparison of web
      services using the same scenarios with two different factors: using a monolith
      and microservices on Docker and Kubernetes. The results showed that the Monolith
      and microservices architecture developed with Kubernetes can reduce response
      time and increase throughput in the system. Moreover, we have explained the
      factors that make the system work in a more efficient way.", "venue": "International
      Journal of Computer Theory and Engineering", "year": 2021, "referenceCount":
      9, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "International Journal of Computer Theory and Engineering"},
      "citationStyles": {"bibtex": "@Article{Toomwong2021PerformanceCB,\n author =
      {Napawit Toomwong and Waraporn Viyanon},\n booktitle = {International Journal
      of Computer Theory and Engineering},\n journal = {International Journal of Computer
      Theory and Engineering},\n title = {Performance Comparison between Monolith
      and Microservice Using Docker and Kubernetes},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2136146017", "name": "Napawit Toomwong"}, {"authorId": "2505773",
      "name": "Waraporn Viyanon"}]}, {"paperId": "3a2d2384795207c93eddd1dc9ade46db3914f990",
      "externalIds": {"DOI": "10.1007/978-1-4842-7192-6_4", "CorpusId": 241824527},
      "corpusId": 241824527, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3a2d2384795207c93eddd1dc9ade46db3914f990",
      "title": "Installing Kubernetes", "abstract": null, "venue": "SQL Server on
      Kubernetes", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "SQL Server on Kubernetes"},
      "citationStyles": {"bibtex": "@Article{Nocentino2021InstallingK,\n author =
      {Anthony E. Nocentino and Benjamin Weissman},\n booktitle = {SQL Server on Kubernetes},\n
      journal = {SQL Server on Kubernetes},\n title = {Installing Kubernetes},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "2047576954", "name": "Anthony E.
      Nocentino"}, {"authorId": "145400508", "name": "Benjamin Weissman"}]}, {"paperId":
      "3a305a4f46ba33c6f41259ab17946e9a9b37a2f7", "externalIds": {"DBLP": "journals/corr/abs-2004-09599",
      "ArXiv": "2004.09599", "MAG": "3011425714", "DOI": "10.2172/1596929", "CorpusId":
      215840864}, "corpusId": 215840864, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/3a305a4f46ba33c6f41259ab17946e9a9b37a2f7",
      "title": "Distributed Resources for the Earth System Grid Advanced Management
      (DREAM)", "abstract": "The DREAM project was funded more than 3 years ago to
      design and implement a next-generation ESGF (Earth System Grid Federation [1])
      architecture which would be suitable for managing and accessing data and services
      resources on a distributed and scalable environment. In particular, the project
      intended to focus on the computing and visualization capabilities of the stack,
      which at the time were rather primitive. At the beginning, the team had the
      general notion that a better ESGF architecture could be built by modularizing
      each component, and redefining its interaction with other components by defining
      and exposing a well defined API. Although this was still the high level principle
      that guided the work, the DREAM project was able to accomplish its goals by
      leveraging new practices in IT that started just about 3 or 4 years ago: the
      advent of containerization technologies (specifically, Docker), the development
      of frameworks to manage containers at scale (Docker Swarm and Kubernetes), and
      their application to the commercial Cloud. Thanks to these new technologies,
      DREAM was able to improve the ESGF architecture (including its computing and
      visualization services) to a level of deployability and scalability beyond the
      original expectations.", "venue": "arXiv.org", "year": 2019, "referenceCount":
      4, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/2004.09599", "status": "GREEN"},
      "fieldsOfStudy": ["Computer Science", "Engineering"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Engineering", "source":
      "external"}, {"category": "Environmental Science", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2019-06-30", "journal": {"name": "ArXiv", "volume": "abs/2004.09599"}, "citationStyles":
      {"bibtex": "@Article{Pascucci2019DistributedRF,\n author = {Valerio Pascucci
      and Steve Petruzza},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title
      = {Distributed Resources for the Earth System Grid Advanced Management (DREAM)},\n
      volume = {abs/2004.09599},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "1685087", "name": "Valerio Pascucci"}, {"authorId": "8808472", "name": "Steve
      Petruzza"}]}, {"paperId": "3a4d838cbac1596d0e116d6ae83b32b8010624a9", "externalIds":
      {"DOI": "10.1186/s13677-019-0132-0", "CorpusId": 256233352}, "corpusId": 256233352,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3a4d838cbac1596d0e116d6ae83b32b8010624a9",
      "title": "Online architecture for predicting live video transcoding resources",
      "abstract": null, "venue": "Journal of Cloud Computing", "year": 2019, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://journalofcloudcomputing.springeropen.com/track/pdf/10.1186/s13677-019-0132-0",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2019-07-09", "journal": {"name": "Journal of Cloud Computing", "volume": "8"},
      "citationStyles": {"bibtex": "@Article{P\u00e4\u00e4kk\u00f6nen2019OnlineAF,\n
      author = {P. P\u00e4\u00e4kk\u00f6nen and A. Heikkinen and T. Aihkisalo},\n
      booktitle = {Journal of Cloud Computing},\n journal = {Journal of Cloud Computing},\n
      title = {Online architecture for predicting live video transcoding resources},\n
      volume = {8},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2302268", "name":
      "P. P\u00e4\u00e4kk\u00f6nen"}, {"authorId": "34139743", "name": "A. Heikkinen"},
      {"authorId": "1690569", "name": "T. Aihkisalo"}]}, {"paperId": "3a76500f11dc038defce45506c173bdc28e7b369",
      "externalIds": {"DOI": "10.1109/INCET57972.2023.10170347", "CorpusId": 259677406},
      "corpusId": 259677406, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3a76500f11dc038defce45506c173bdc28e7b369",
      "title": "Reactive-Optimized Sentence Detection In Kubernetes Using OpenNLP
      And Native GraalVM Image With Framework Metric Comparison", "abstract": "Java
      was chosen over Python for data science endeavours since it is a widely-used
      programming language. The default JVM was GraalVM, an industry-leading and high-performance
      JVM, rather than Oracle\u2019s default. GraalVM has several advantages, including
      native image generation, which pre-compiles Java code into an executable, resulting
      in a smaller footprint and better performance. Apache OpenNLP, a Java-based
      natural language processing framework, was utilized for sentence detection.
      OpenNLP has pre-built models for language recognition, sentence detection, etc.
      The default OpenNLP code was made completely reactive and functional by modifying
      it. To achieve the goals, Spring WebFlux was leveraged and the advanced capabilities
      of Java 17, including lambda and streams. WebFlux, an event-driven asynchronous
      framework, can provide backpressure-capable, non-blocking clients and servers.
      Additionally, some of the most widely-used Java frameworks were employed, namely
      Micronaut, Quarkus, Helidon, and Spring Boot, to develop the code. Two codes
      were written for each framework: one utilizing traditional Java code and the
      default OpenNLP sentence detection implementation. At the same time, the other
      was entirely reactive and functional, with the OpenNLP implementation modified
      to be reactive and functional. Docker images were created for each and deployed
      in a Kubernetes environment using Minikube. Finally, concurrent load-testing
      of the endpoint for 1-1000 users was conducted using an Apache JMeter to assess
      the performance. Vital metrics such as CPU, memory, docker image size, executable
      size, executable start-up time, throughput, and error per cent were collected.
      It was found that reactive-functional programming with Spring Boot resulted
      in superior scalability, responsiveness, and fault tolerance.", "venue": "2023
      4th International Conference for Emerging Technology (INCET)", "year": 2023,
      "referenceCount": 29, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["Conference"],
      "publicationDate": "2023-05-26", "journal": {"name": "2023 4th International
      Conference for Emerging Technology (INCET)", "pages": "1-9"}, "citationStyles":
      {"bibtex": "@Conference{Sharma2023ReactiveOptimizedSD,\n author = {Aditya Sharma
      and Komal Tahiliani and Ghanshyam Prasad Dubey},\n booktitle = {2023 4th International
      Conference for Emerging Technology (INCET)},\n journal = {2023 4th International
      Conference for Emerging Technology (INCET)},\n pages = {1-9},\n title = {Reactive-Optimized
      Sentence Detection In Kubernetes Using OpenNLP And Native GraalVM Image With
      Framework Metric Comparison},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2222508955", "name": "Aditya Sharma"}, {"authorId": "103136112", "name": "Komal
      Tahiliani"}, {"authorId": "46209657", "name": "Ghanshyam Prasad Dubey"}]}, {"paperId":
      "3a8f531c05d3b37dc8e7c961819fe45112935964", "externalIds": {"MAG": "3137662594",
      "DOI": "10.26240/HEAL.NTUA.19232", "CorpusId": 234650647}, "corpusId": 234650647,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3a8f531c05d3b37dc8e7c961819fe45112935964",
      "title": "Resource Aware GPU Scheduling in Kubernetes Infrastructure.", "abstract":
      null, "venue": "", "year": 2020, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2020-10-20",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Ferikoglou2020ResourceAG,\n
      author = {Aggelos Ferikoglou and Dimosthenis Masouros and Achilleas Tzenetopoulos
      and S. Xydis and D. Soudris},\n title = {Resource Aware GPU Scheduling in Kubernetes
      Infrastructure.},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2051874079",
      "name": "Aggelos Ferikoglou"}, {"authorId": "21075634", "name": "Dimosthenis
      Masouros"}, {"authorId": "2003073966", "name": "Achilleas Tzenetopoulos"}, {"authorId":
      "1702282", "name": "S. Xydis"}, {"authorId": "144189794", "name": "D. Soudris"}]},
      {"paperId": "3ab97c7f16fad16812dd9f782ce6895c7edd9438", "externalIds": {"MAG":
      "3163735094", "DOI": "10.48175/IJARSCT-1152", "CorpusId": 236385624}, "corpusId":
      236385624, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3ab97c7f16fad16812dd9f782ce6895c7edd9438",
      "title": "Kubernetes Security: A Quick Reference", "abstract": "A new product
      is like a newborn child. You can\u2019t just develop it and let it be in the
      air, it must be protected. As the product ages, either it acquires a customer
      base or it dies. It becomes successful only when there is a great correlation
      among all the variables responsible to fall or grow up that product. This paper
      focuses on providing efficient tools to make the Kubernetes and its environment
      secure so that a deployed product is very much protected. Security of Kubernetes
      has become a trend [1]. We believe the paper can have a great impact on decision-making
      during the deployment of SaaS products.", "venue": "", "year": 2021, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2021-05-19",
      "journal": {"name": "", "pages": "386-393", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Shaikh2021KubernetesSA,\n author = {Sharique Shaikh
      and M. Khan and Najib Baig Mirza and Ahlam Ansari},\n pages = {386-393},\n title
      = {Kubernetes Security: A Quick Reference},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2120973128", "name": "Sharique Shaikh"}, {"authorId": "50815714",
      "name": "M. Khan"}, {"authorId": "2120910728", "name": "Najib Baig Mirza"},
      {"authorId": "2309919", "name": "Ahlam Ansari"}]}, {"paperId": "3ac773ec6a428658f2b5969916807aa13dcca6a8",
      "externalIds": {"DOI": "10.1109/IAEAC54830.2022.9929476", "CorpusId": 253423807},
      "corpusId": 253423807, "publicationVenue": {"id": "7eadf6d0-2d35-410f-ad53-2635d1f830d7",
      "name": "IEEE Advanced Information Technology, Electronic and Automation Control
      Conference", "type": "conference", "alternate_names": ["IAEAC", "IEEE Adv Inf
      Technol Electron Autom Control Conf"]}, "url": "https://www.semanticscholar.org/paper/3ac773ec6a428658f2b5969916807aa13dcca6a8",
      "title": "Container Load Prediction Algorithm Based on ARIMA Model and BP Neural
      Network", "abstract": "Docker container technology has brought great changes
      to the field of cloud computing, which has greatly improved the cloud platform
      in terms of resource scheduling delay, resource granularity, and resource utilization.
      Container cloud represented by Docker and Kubernetes has been widely concerned
      and applied in the cloud computing industry. This paper proposes a container
      load prediction algorithm based on ARIMA model and BP neural network, which
      provides a reference for Kubernetes resource scheduling, and verifies the reliability
      of the algorithm through experiments.", "venue": "IEEE Advanced Information
      Technology, Electronic and Automation Control Conference", "year": 2022, "referenceCount":
      8, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["Conference"],
      "publicationDate": "2022-10-03", "journal": {"name": "2022 IEEE 6th Advanced
      Information Technology, Electronic and Automation Control Conference (IAEAC
      )", "pages": "334-337"}, "citationStyles": {"bibtex": "@Conference{Gao2022ContainerLP,\n
      author = {Pengxiang Gao and Rui Wan and Chen Wang and YunChang Cheng},\n booktitle
      = {IEEE Advanced Information Technology, Electronic and Automation Control Conference},\n
      journal = {2022 IEEE 6th Advanced Information Technology, Electronic and Automation
      Control Conference (IAEAC )},\n pages = {334-337},\n title = {Container Load
      Prediction Algorithm Based on ARIMA Model and BP Neural Network},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "49224446", "name": "Pengxiang Gao"}, {"authorId":
      "2069390467", "name": "Rui Wan"}, {"authorId": "2157434199", "name": "Chen Wang"},
      {"authorId": "2153510561", "name": "YunChang Cheng"}]}, {"paperId": "3adc419275b5ab445a8daedca9804b12c23db259",
      "externalIds": {"DBLP": "journals/pomacs/AmbatiI19", "DOI": "10.1145/3341617.3326143",
      "CorpusId": 195357334}, "corpusId": 195357334, "publicationVenue": {"id": "b5038ebc-7250-4e6b-807f-7150ef007dd1",
      "name": "Proceedings of the ACM on Measurement and Analysis of Computing Systems",
      "alternate_names": ["Proc ACM Meas Anal Comput Syst"], "issn": "2476-1249",
      "url": "https://dl.acm.org/pub.cfm?id=J1567"}, "url": "https://www.semanticscholar.org/paper/3adc419275b5ab445a8daedca9804b12c23db259",
      "title": "Optimizing the Cost of Executing Mixed Interactive and Batch Workloads
      on Transient VMs", "abstract": "Container Orchestration Platforms (COPs), such
      as Kubernetes, are increasingly used to manage large-scale clusters by automating
      resource allocation between applications encapsulated in containers. Increasingly,
      the resources underlying COPs are virtual machines (VMs) dynamically acquired
      from cloud platforms. COPs may choose from many different types of VMs offered
      by cloud platforms, which differ in their cost, performance, and availability.
      In particular, while transient VMs cost significantly less than on-demand VMs,
      platforms may revoke them at any time, causing them to become unavailable. While
      transient VMs'' price is attractive, their unreliability is a problem for COPs
      designed to support mixed workloads composed of, not only delay-tolerant batch
      jobs, but also long-lived interactive services with high availability requirements.
      To address the problem, we design TR-Kubernetes, a COP that optimizes the cost
      of executing mixed interactive and batch workloads on cloud platforms using
      transient VMs. To do so, TR-Kubernetes enforces arbitrary availability requirements
      specified by interactive services despite transient VM unavailability by acquiring
      many more transient VMs than necessary most of the time, which it then leverages
      to opportunistically execute batch jobs when excess resources are available.
      When cloud platforms revoke transient VMs, TR-Kubernetes relies on existing
      Kubernetes functions to internally revoke resources from batch jobs to maintain
      interactive services'' availability requirements. We show that TR-Kubernetes
      requires minimal extensions to Kubernetes, and is capable of lowering the cost
      (by 53%) and improving the availability (99.999%) of a representative interactive/batch
      workload on Amazon EC2 when using transient compared to on-demand VMs.", "venue":
      "Proceedings of the ACM on Measurement and Analysis of Computing Systems", "year":
      2019, "referenceCount": 35, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-06-19", "journal": {"name": "Proceedings
      of the ACM on Measurement and Analysis of Computing Systems", "pages": "1 -
      24", "volume": "3"}, "citationStyles": {"bibtex": "@Article{Ambati2019OptimizingTC,\n
      author = {Pradeep Ambati and D. Irwin},\n booktitle = {Proceedings of the ACM
      on Measurement and Analysis of Computing Systems},\n journal = {Proceedings
      of the ACM on Measurement and Analysis of Computing Systems},\n pages = {1 -
      24},\n title = {Optimizing the Cost of Executing Mixed Interactive and Batch
      Workloads on Transient VMs},\n volume = {3},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "83959199", "name": "Pradeep Ambati"}, {"authorId": "2064290015",
      "name": "D. Irwin"}]}, {"paperId": "3ade5628c9a1736a13cbca3f60aaf967da6b9a20",
      "externalIds": {"DOI": "10.1109/IETC57902.2023.10152023", "CorpusId": 259217145},
      "corpusId": 259217145, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3ade5628c9a1736a13cbca3f60aaf967da6b9a20",
      "title": "A Comparative Analysis on Load Balancing and gRPC Microservices in
      Kubernetes", "abstract": "This report provides observations and insights on
      load balancing in gRPC microservices in Kubernetes using Go. gRPC holds a single
      client-server connection until the connection completes, making it tricky to
      load balance gRPC requests across multiple server resources. This also means
      that, without careful configuration, scaling the server resources may not provide
      any help in handling loads of client RPC requests. Luckily, Go''s gRPC library
      has some built-in functionality for load balancing using round-robin logic.
      However, this involves bypassing some of the features in Kubernetes by making
      the server a headless Service. A maximum connection age can also be configured
      in gRPC servers to reduce connection times and give the client more chances
      to reconnect, which can create some balancing as well. To make these observations,
      we created and deployed multiple gRPC microservices in a Kubernetes cluster,
      and adjusted many aspects of their configurations to observe the behavior changes.
      The source code for this proiect is located on Github.11https://github.com/stars/thaigoonch/lists/research-project",
      "venue": "2023 Intermountain Engineering, Technology and Computing (IETC)",
      "year": 2023, "referenceCount": 10, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2023-05-12", "journal": {"name": "2023 Intermountain
      Engineering, Technology and Computing (IETC)", "pages": "322-327"}, "citationStyles":
      {"bibtex": "@Article{Nieman2023ACA,\n author = {Katherine Nieman and S. Sajal},\n
      booktitle = {2023 Intermountain Engineering, Technology and Computing (IETC)},\n
      journal = {2023 Intermountain Engineering, Technology and Computing (IETC)},\n
      pages = {322-327},\n title = {A Comparative Analysis on Load Balancing and gRPC
      Microservices in Kubernetes},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2220362663", "name": "Katherine Nieman"}, {"authorId": "3300978", "name": "S.
      Sajal"}]}, {"paperId": "3adea3b0a632509125244d7c0330c9d2768f521c", "externalIds":
      {"DBLP": "journals/tpds/LiuZWW22", "DOI": "10.1109/TPDS.2022.3151512", "CorpusId":
      246843269}, "corpusId": 246843269, "publicationVenue": {"id": "7c9d091e-015e-4e5d-a11f-9bc369fcf414",
      "name": "IEEE Transactions on Parallel and Distributed Systems", "type": "journal",
      "alternate_names": ["IEEE Trans Parallel Distrib Syst"], "issn": "1045-9219",
      "url": "http://www.computer.org/tpds", "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=71"]},
      "url": "https://www.semanticscholar.org/paper/3adea3b0a632509125244d7c0330c9d2768f521c",
      "title": "Coordinating Fast Concurrency Adapting With Autoscaling for SLO-Oriented
      Web Applications", "abstract": "Cloud providers tend to support dynamic computing
      resources reallocation (e.g., Autoscaling) to handle the bursty workload for
      web applications (e.g., e-commerce) in the cloud environment. Nevertheless,
      we demonstrate that directly scaling a bottleneck server without quickly adjusting
      its soft resources (e.g., server threads and database connections) can cause
      significant response time fluctuations of the target web application. Since
      soft resources determine the request processing concurrency of each server in
      the system, simply scaling out/in the bottleneck service can unintentionally
      change the concurrency level of related services, inducing either under- or
      over-utilization of the critical hardware resource. In this paper, we propose
      the Scatter-Concurrency-Throughput (SCT) model, which can rapidly identify the
      near-optimal soft resource allocation of each server in the system using the
      measurement of each server\u2019s real-time throughput and concurrency. Furthermore,
      we implement a Concurrency-aware autoScaling (ConScale) framework that integrates
      the SCT model to quickly reallocate the soft resources of the key servers in
      the system to best utilize the new hardware resource capacity after the system
      scaling. Based on extensive experimental comparisons with two widely used hardware-only
      scaling mechanisms for web applications: EC2-AutoScaling (VM-based autoscaler)
      and Kubernetes HPA (container-based autoscaler), we show that ConScale can successfully
      mitigate the response time fluctuations over the system scaling phase in both
      VM-based and container-based environments.", "venue": "IEEE Transactions on
      Parallel and Distributed Systems", "year": 2022, "referenceCount": 51, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2022-12-01", "journal": {"name": "IEEE Transactions on Parallel and Distributed
      Systems", "pages": "3349-3362", "volume": "33"}, "citationStyles": {"bibtex":
      "@Article{Liu2022CoordinatingFC,\n author = {Jianshu Liu and Shungeng Zhang
      and Qingyang Wang and Jinpeng Wei},\n booktitle = {IEEE Transactions on Parallel
      and Distributed Systems},\n journal = {IEEE Transactions on Parallel and Distributed
      Systems},\n pages = {3349-3362},\n title = {Coordinating Fast Concurrency Adapting
      With Autoscaling for SLO-Oriented Web Applications},\n volume = {33},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "48210810", "name": "Jianshu Liu"},
      {"authorId": "21197444", "name": "Shungeng Zhang"}, {"authorId": "2115979102",
      "name": "Qingyang Wang"}, {"authorId": "40342114", "name": "Jinpeng Wei"}]},
      {"paperId": "3b103cac6897cd3262eaa21c90a8539e7a0cbb90", "externalIds": {"MAG":
      "2490282740", "DOI": "10.1007/978-1-4842-1907-2_3", "CorpusId": 62993816}, "corpusId":
      62993816, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3b103cac6897cd3262eaa21c90a8539e7a0cbb90",
      "title": "Using Custom Commands and Environment Variables", "abstract": null,
      "venue": "", "year": 2016, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "pages": "77-93", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Vohra2016UsingCC,\n author
      = {Deepak Vohra},\n pages = {77-93},\n title = {Using Custom Commands and Environment
      Variables},\n year = {2016}\n}\n"}, "authors": [{"authorId": "3026624", "name":
      "Deepak Vohra"}]}, {"paperId": "3b706f85a68334e52412953171b6277f82434bd7", "externalIds":
      {"MAG": "3010926315", "DOI": "10.1109/ICSESS47205.2019.9040827", "CorpusId":
      214595881}, "corpusId": 214595881, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3b706f85a68334e52412953171b6277f82434bd7",
      "title": "Design and Research of Edge Layer Service Platform Based on Flexible
      Service Architecture", "abstract": "With the advent of the future generation
      networks(5G), high-bandwidth, high-density, and low-latency will become the
      mainstream features of network services. If we continue to adopt single cloud
      computing mode, speed, delay, or stability cannot be guaranteed at all. The
      edge calculation proposed in recent years can properly solves this problem.
      Edge computing is a network architecture that provides users with the services
      and cloud computing functions on the wireless side. At the same time, the emergence
      of virtualization technology enables the traditional server resources to be
      more fully utilized. Platform and application virtualization now is rapidly
      moving to the edge of the cloud. An edge computing platform is built by integrating
      Docker technology and Kubernetes technology in this paper. In addition, network
      service experiments on the platform are performed. Through the comparison of
      experiment results on the edge layer and the cloud layer, conclusions are obtained
      that the edge computing layer can satisfy the low-latency and stable demand
      of service.", "venue": "2019 IEEE 10th International Conference on Software
      Engineering and Service Science (ICSESS)", "year": 2019, "referenceCount": 11,
      "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2019-10-01", "journal":
      {"name": "2019 IEEE 10th International Conference on Software Engineering and
      Service Science (ICSESS)", "pages": "555-560"}, "citationStyles": {"bibtex":
      "@Conference{Liu2019DesignAR,\n author = {Shilong Liu and Yunxiao Zu},\n booktitle
      = {2019 IEEE 10th International Conference on Software Engineering and Service
      Science (ICSESS)},\n journal = {2019 IEEE 10th International Conference on Software
      Engineering and Service Science (ICSESS)},\n pages = {555-560},\n title = {Design
      and Research of Edge Layer Service Platform Based on Flexible Service Architecture},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "2131176256", "name": "Shilong
      Liu"}, {"authorId": "1956678", "name": "Yunxiao Zu"}]}, {"paperId": "3b9fae7099b8ead7bf933d57172b27cce77cb0d4",
      "externalIds": {"DBLP": "conf/igarss/GrothFWMRM23", "DOI": "10.1109/IGARSS52108.2023.10283106",
      "CorpusId": 264355536}, "corpusId": 264355536, "publicationVenue": {"id": "a47b9394-c5c7-4bc8-b8fc-b08f96954278",
      "name": "IEEE International Geoscience and Remote Sensing Symposium", "type":
      "conference", "alternate_names": ["Int Geosci Remote Sens Symp", "IGARSS", "International
      Geoscience and Remote Sensing Symposium", "IEEE Int Geosci Remote Sens Symp"],
      "url": "https://ieeexplore.ieee.org/xpl/conhome/1000307/all-proceedings"}, "url":
      "https://www.semanticscholar.org/paper/3b9fae7099b8ead7bf933d57172b27cce77cb0d4",
      "title": "Enabling Global Processing of Reference Water Products for Flood Mapping
      using Kubernetes and STAC", "abstract": "A key factor in successful flood mapping
      is the fast and easy access to water extent information at normal, non-flood
      conditions. In this study, we propose a fully automated and scalable methodology
      for generating and publishing information on permanent and seasonal surface
      water extent by leveraging cloud technologies such as Docker and Kubernetes.
      Products can be computed at global scale and made accessible free of cost via
      standardized interfaces. With this approach, the disaster response community
      benefits from easy data access and flexible integration into automated rapid
      mapping workflows. To showcase our approach, we generate reference water information
      in the scope of the 2022 flooding in Pakistan.", "venue": "IEEE International
      Geoscience and Remote Sensing Symposium", "year": 2023, "referenceCount": 20,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Environmental Science",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-07-16", "journal": {"name": "IGARSS
      2023 - 2023 IEEE International Geoscience and Remote Sensing Symposium", "pages":
      "414-417"}, "citationStyles": {"bibtex": "@Article{Groth2023EnablingGP,\n author
      = {Sandro Groth and Florian Fichtner and Marc Wieland and Nico Mandery and Torsten
      Riedlinger and Sandro Martinis},\n booktitle = {IEEE International Geoscience
      and Remote Sensing Symposium},\n journal = {IGARSS 2023 - 2023 IEEE International
      Geoscience and Remote Sensing Symposium},\n pages = {414-417},\n title = {Enabling
      Global Processing of Reference Water Products for Flood Mapping using Kubernetes
      and STAC},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2165607753", "name":
      "Sandro Groth"}, {"authorId": "2260707432", "name": "Florian Fichtner"}, {"authorId":
      "2260695578", "name": "Marc Wieland"}, {"authorId": "1573589618", "name": "Nico
      Mandery"}, {"authorId": "2260703900", "name": "Torsten Riedlinger"}, {"authorId":
      "2260695409", "name": "Sandro Martinis"}]}, {"paperId": "3bdcc788460042e2c3e98337f0d99c09b372a0a1",
      "externalIds": {"DBLP": "conf/infocom/KaurGS23", "DOI": "10.1109/INFOCOMWKSHPS57453.2023.10225858",
      "CorpusId": 261382981}, "corpusId": 261382981, "publicationVenue": {"id": "be267cb9-6411-4126-8b64-4847025171ee",
      "name": "Conference on Computer Communications Workshops", "type": "conference",
      "alternate_names": ["INFOCOM WKSHPS", "Conf Comput Commun Work"]}, "url": "https://www.semanticscholar.org/paper/3bdcc788460042e2c3e98337f0d99c09b372a0a1",
      "title": "Live migration of containerized microservices between remote Kubernetes
      Clusters", "abstract": "The recent adoption of cloud native technologies by
      telecommunication industry is accompanied by the incoming development of Network
      Functions that are containerized and packaged as light-weighted microservices.
      In order to efficiently orchestrate Cloud-Native Network Functions (CNFs), thorough
      migration strategies should be supported to place and migrate the CNFs. In this
      paper, we present a testbed illustrating the migration of pods between remote
      K8S cluster. As a use case, we consider the migration of a network function
      belonging to an opensource 5G core network (namely, Magma).", "venue": "Conference
      on Computer Communications Workshops", "year": 2023, "referenceCount": 23, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://hal.science/hal-03466765v2/file/Final_2023044682_Kiran_camera-ready.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2023-05-20",
      "journal": {"name": "IEEE INFOCOM 2023 - IEEE Conference on Computer Communications
      Workshops (INFOCOM WKSHPS)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Kaur2023LiveMO,\n
      author = {Kiranpreet Kaur and Fabrice Michel Guillemin and Fran\u00e7oise Sailhan},\n
      booktitle = {Conference on Computer Communications Workshops},\n journal = {IEEE
      INFOCOM 2023 - IEEE Conference on Computer Communications Workshops (INFOCOM
      WKSHPS)},\n pages = {1-6},\n title = {Live migration of containerized microservices
      between remote Kubernetes Clusters},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2154108499", "name": "Kiranpreet Kaur"}, {"authorId": "145141686", "name":
      "Fabrice Michel Guillemin"}, {"authorId": "3170581", "name": "Fran\u00e7oise
      Sailhan"}]}, {"paperId": "3bea3499ccfed7577ca34b56dc483beaf41fa42c", "externalIds":
      {"CorpusId": 221516645}, "corpusId": 221516645, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/3bea3499ccfed7577ca34b56dc483beaf41fa42c",
      "title": "Linking Stakeholders\u2019 Viewpoint Concerns with Microservices",
      "abstract": "Widespread adoption of agile project management , independent delivery
      with microservices, and automated deployment with DevOps has tremendously speedup
      the systems development. The real game-changer is continuous integration (CI)
      , continuous delivery and continuous deployment (CD) . Organizations can do
      multiple releases a day, shortening the test, release, and deployment cycles
      from weeks to minutes. Maturity of container technologies like Docker and container
      orchestration platforms like Kubernetes has promoted microservices architecture,
      especially in the cloud-native developments. Various tools are available for
      setting up CI/CD pipelines. Organizations are moving away from monolith applications
      and moving towards microservices-based architectures. Organizations can quickly
      accumulate hundreds of such microservices accessible via application programming
      interfaces (APIs). The primary purpose of these modern methodologies is agility,
      speed, and reusability. While DevOps offers speed and time to market, agility
      and reusability may not be guaranteed unless mi-croservices and API\u2019s are
      linked to enterprise-wide stakeholders\u2019 needs. The link between business
      needs and microservices/APIs is not well captured nor adequately defined. In
      this publication, we describe a structured method to create a logical link among
      APIs and microservices-based agile developments with enterprise stakeholders\u2019
      needs and viewpoint concerns . This method enables capturing and documenting
      enterprise-wide stakeholders\u2019 needs, whether these are business owners,
      planners (product owners, architects), designers (developers, DevOps engineers),
      or the partners and subscribers of an enterprise.", "venue": "", "year": 2020,
      "referenceCount": 47, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Business", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Inproceedings{Sultan2020LinkingSV,\n author = {Mujahid Sultan},\n title =
      {Linking Stakeholders\u2019 Viewpoint Concerns with Microservices},\n year =
      {2020}\n}\n"}, "authors": [{"authorId": "2112871881", "name": "Mujahid Sultan"}]},
      {"paperId": "3c08bdac7fdbea383bc192be705978a3d8f6c6cd", "externalIds": {"DBLP":
      "conf/icoin/VanichchanuntYSWP23", "DOI": "10.1109/ICOIN56518.2023.10049000",
      "CorpusId": 257082944}, "corpusId": 257082944, "publicationVenue": {"id": "0e129215-7c25-46c9-b04b-a0e9faabf021",
      "name": "International Conference on Information Networking", "type": "conference",
      "alternate_names": ["Int Conf Inf Netw", "ICOIN"], "url": "http://www.icoin.org/"},
      "url": "https://www.semanticscholar.org/paper/3c08bdac7fdbea383bc192be705978a3d8f6c6cd",
      "title": "Implementation of Edge Servers on an Open 5G Core Network", "abstract":
      "In 5G networks, edge servers play a major role in reducing the latency of services
      that users experience by locating the service processing at the network border
      near the users. This paper aims to implement edge servers on a 5G core network
      by using available open-source software tools. However, there is no open-source
      software tools for implementing an edge server as an Application Function (AF)
      of 5G core network as suggested by European Telecommunications Standards Institute
      (ETSI). To cope with this problem, open-source orchestration platforms based
      on Kubernetes such as MicroK8s and K3sup which support High Availability (HA)
      feature with multi-master, have been explored and employed to create edge servers
      as an additional function to cooperate with 5G core network. In the experiment,
      the performance of the edge servers implemented by MicroK8s and K3sup are measured
      and compared in terms of time delay, delay jitter, upload speed, and download
      speed. From the experiment results, the edge servers created by both platforms
      show no explicit advantage over each other.", "venue": "International Conference
      on Information Networking", "year": 2023, "referenceCount": 15, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2023-01-11", "journal":
      {"name": "2023 International Conference on Information Networking (ICOIN)",
      "pages": "642-645"}, "citationStyles": {"bibtex": "@Article{Vanichchanunt2023ImplementationOE,\n
      author = {P. Vanichchanunt and Ittipon Yamyuan and Pruk Sasithong and L. Wuttisittikulkij
      and Sukritta Paripurana},\n booktitle = {International Conference on Information
      Networking},\n journal = {2023 International Conference on Information Networking
      (ICOIN)},\n pages = {642-645},\n title = {Implementation of Edge Servers on
      an Open 5G Core Network},\n year = {2023}\n}\n"}, "authors": [{"authorId": "1712256",
      "name": "P. Vanichchanunt"}, {"authorId": "2209223269", "name": "Ittipon Yamyuan"},
      {"authorId": "50844002", "name": "Pruk Sasithong"}, {"authorId": "1729307",
      "name": "L. Wuttisittikulkij"}, {"authorId": "2335273", "name": "Sukritta Paripurana"}]},
      {"paperId": "3c2ac07d840d148085dc50dfa5bb9aebd33fabc9", "externalIds": {"DBLP":
      "conf/icse-encycris/BoseRS21", "DOI": "10.1109/EnCyCriS52570.2021.00009", "CorpusId":
      236187325}, "corpusId": 236187325, "publicationVenue": {"id": "2f85bd13-2418-4cf6-ba31-06d9315ccf17",
      "name": "Workshop on Engineering and Cybersecurity of Critical Systems", "type":
      "conference", "alternate_names": ["EnCyCriS", "Workshop Eng Cybersecur Crit
      Syst"]}, "url": "https://www.semanticscholar.org/paper/3c2ac07d840d148085dc50dfa5bb9aebd33fabc9",
      "title": "\u2018Under-reported\u2019 Security Defects in Kubernetes Manifests",
      "abstract": "With the advent of the fourth industrial revolution, industry practitioners
      are moving towards container-based infrastructure for managing their digital
      workloads. Kubernetes, a container orchestration tool, is reported to help industry
      practitioners in automated management of cloud infrastructure and rapid deployment
      of software services. Despite reported benefits, Kubernetes installations are
      susceptible to security defects, as it occurred for Tesla in 2018. Understanding
      how frequently security defects appear in Kubernetes installations can help
      cybersecurity researchers to investigate security-related vulnerabilities for
      Kubernetes and generate security best practices to avoid them. In this position
      paper, we first quantify how frequently security defects appear in Kubernetes
      manifests, i.e., configuration files that are use to install and manage Kubernetes.
      Next, we lay out a list of future research directions that researchers can pursue.We
      apply qualitative analysis on 5,193 commits collected from 38 open source repositories
      and observe that 0.79% of the 5,193 commits are security-related. Based on our
      findings, we posit that security-related defects are under-reported and advocate
      for rigorous research that can systematically identify undiscovered security
      defects that exist in Kubernetes manifests. We predict that the increasing use
      of Kubernetes with unresolved security defects can lead to large-scale security
      breaches.", "venue": "Workshop on Engineering and Cybersecurity of Critical
      Systems", "year": 2021, "referenceCount": 22, "citationCount": 10, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2021-06-01", "journal": {"name": "2021
      IEEE/ACM 2nd International Workshop on Engineering and Cybersecurity of Critical
      Systems (EnCyCriS)", "pages": "9-12"}, "citationStyles": {"bibtex": "@Article{Bose2021UnderreportedSD,\n
      author = {Dibyendu Brinto Bose and A. Rahman and Md. Shazibul Islam Shamim},\n
      booktitle = {Workshop on Engineering and Cybersecurity of Critical Systems},\n
      journal = {2021 IEEE/ACM 2nd International Workshop on Engineering and Cybersecurity
      of Critical Systems (EnCyCriS)},\n pages = {9-12},\n title = {\u2018Under-reported\u2019
      Security Defects in Kubernetes Manifests},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2120330401", "name": "Dibyendu Brinto Bose"}, {"authorId": "39864830",
      "name": "A. Rahman"}, {"authorId": "2066457358", "name": "Md. Shazibul Islam
      Shamim"}]}, {"paperId": "3c2aff2f79980acd89dcc125176bbecd795930da", "externalIds":
      {"DOI": "10.1109/IEEECloudSummit52029.2021.00008", "CorpusId": 245541587}, "corpusId":
      245541587, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3c2aff2f79980acd89dcc125176bbecd795930da",
      "title": "A Case Study on Five Maturity Levels of A Kubernetes Operator", "abstract":
      "Deploying distributed applications using their Operators in a containerized
      platform on the state-of-art cloud orchestration tooling, such as Kubernetes,
      has truly become widely accepted. However, the quality of an Operator has a
      significant impact on a few core metrics of the application, such as its availability,
      consistency, and quality of service. This paper introduces the Kubernetes Operator
      maturity model and its five maturity levels, and then gives a demonstration
      on how a demo Kubernetes Operator is capable of reaching all the five levels
      respectively by using an example Operator named New Visitors Site Operator.
      Finally, an experiment illustrating the capability of the example Operator\u2019s
      auto-scaling functions to improve the application performance is presented.
      This example Operator will enable developers and researchers to design containerized
      applications with more enhanced features. The code is available at https://github.com/ringdrx/visitors-operator.",
      "venue": "2021 IEEE Cloud Summit (Cloud Summit)", "year": 2021, "referenceCount":
      9, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2021-10-01", "journal": {"name": "2021 IEEE Cloud Summit (Cloud Summit)", "pages":
      "1-6"}, "citationStyles": {"bibtex": "@Article{Duan2021ACS,\n author = {Ruxiao
      Duan and Fan Zhang and S. Khan},\n booktitle = {2021 IEEE Cloud Summit (Cloud
      Summit)},\n journal = {2021 IEEE Cloud Summit (Cloud Summit)},\n pages = {1-6},\n
      title = {A Case Study on Five Maturity Levels of A Kubernetes Operator},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "2148231507", "name": "Ruxiao Duan"},
      {"authorId": "47191237", "name": "Fan Zhang"}, {"authorId": "1740261", "name":
      "S. Khan"}]}, {"paperId": "3c3c55670444159c8372abc8e6422fd8b82b6f65", "externalIds":
      {"DBLP": "conf/globecom/CejudoS21", "DOI": "10.1109/GCWkshps52748.2021.9682148",
      "CorpusId": 241005208}, "corpusId": 241005208, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/3c3c55670444159c8372abc8e6422fd8b82b6f65",
      "title": "An Optimization Framework for Edge-to-Cloud Offloading of Kubernetes
      Pods in V2X Scenarios", "abstract": "Vehicle-to-everything V2X applications
      usually have strict latency requirements that can be difficult to meet in traditional
      cloud-centric networks. By pushing resources to edge servers located closer
      to the users, end-to-end latency can be greatly reduced. Task offloading in
      edge-cloud environments refers to the optimization of which tasks should be
      offloaded between the edge and cloud. Moreover, the use of containers to virtualize
      applications can further reduce resource and time consumption and, in turn,
      the latency of V2X applications. Even though Kubernetes has become the de facto
      container orchestrator, the offloading of Kubernetes pods has not been previously
      studied in the literature, to the best of the authors\u2019 knowledge. In this
      paper, a theoretical optimization framework is proposed for edge-to-cloud offloading
      of V2X tasks implemented as Kubernetes pods. First, an utility function is derived
      in terms of the cumulative pod response time, weighted by the priority levels
      and resource usage requirements of pods. Based on the optimal theoretical solution
      to this problem under memory and central processing unit (CPU) constraints,
      an edge-to-cloud offloading decision algorithm (ECODA) is proposed. Numerical
      simulations demonstrate that ECODA outperforms first-in, first-served (FIFS)
      in terms of utility, average pod response time, and occupancy of edge resources.
      Further, ECODA achieves a good trade-off between performance and computational
      complexity, and therefore it can help achieve strict latency requirements of
      V2X applications.", "venue": "2021 IEEE Globecom Workshops (GC Wkshps)", "year":
      2021, "referenceCount": 14, "citationCount": 3, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "https://figshare.com/articles/preprint/An_Optimization_Framework_for_Edge-to-Cloud_Offloading_of_Kubernetes_Pods_in_V2X_Scenarios/16725643/1/files/30964321.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-10-11", "journal":
      {"name": "2021 IEEE Globecom Workshops (GC Wkshps)", "pages": "1-6"}, "citationStyles":
      {"bibtex": "@Article{Cejudo2021AnOF,\n author = {Estela Carmona Cejudo and M.
      S. Siddiqui},\n booktitle = {2021 IEEE Globecom Workshops (GC Wkshps)},\n journal
      = {2021 IEEE Globecom Workshops (GC Wkshps)},\n pages = {1-6},\n title = {An
      Optimization Framework for Edge-to-Cloud Offloading of Kubernetes Pods in V2X
      Scenarios},\n year = {2021}\n}\n"}, "authors": [{"authorId": "35486214", "name":
      "Estela Carmona Cejudo"}, {"authorId": "33675565", "name": "M. S. Siddiqui"}]},
      {"paperId": "3c432d689d60c6845a1328799ba7e7bf3e2bd569", "externalIds": {"MAG":
      "2916627097", "DOI": "10.1109/ICSEE.2018.8646134", "CorpusId": 67875998}, "corpusId":
      67875998, "publicationVenue": {"id": "492c561f-1ad7-4689-b27a-bbfcd778d1b3",
      "name": "IEEE International Conference on Science of Electrical Engineering",
      "type": "conference", "alternate_names": ["International Conference on Intelligent
      Computing for Sustainable Energy and Environment", "Int Conf Intell Comput Sustain
      Energy Environ", "IEEE Int Conf Sci Electr Eng", "ICSEE"]}, "url": "https://www.semanticscholar.org/paper/3c432d689d60c6845a1328799ba7e7bf3e2bd569",
      "title": "Scaling of Cloud Resources-Principal Component Analysis and Random
      Forest Approach", "abstract": "The scaling challenge for a system which constitutes
      multiple clients, which address application servers deployed on the cloud, becomes
      more complicate once the applications\u2019 nature imply consistent communication,
      e.g., video streaming. The effective scaling solution in this case is such that
      it will assure an acceptable client quality of experience (QoE), typically measured
      by video delay. In this paper, we provide a solution to the auto-scaling for
      cloud provider by means of analyzing the impact of various system parameters.
      The parameters which may impact the QoE on the client side include, but not
      limited to, average memory consumption, transmission and reception frequency,
      average CPU consumption on the side of the cloud provider. We perform Principal
      Component Analysis (PCA) in order to find a projection of the parameters, resulting
      in a set of features which can be sorted by their measure of impact. Next, we
      introduce scaling decision mechanism based on Random Forest (RF). Only most
      influencing features are employed for that, which renders the training process
      of the RF to be computationally effective. The proposed approach is novel in
      the sense that the scaling decisions found by the RF are in the projected space
      found by PCA (instead of having threshold derived directly from the original
      parameters), which is not necessarily intuitive. However, these features are
      numerically approved to be the most influencing. Moreover, as long as the features
      in the projected space are uncorrelated, it allows us to base the RF on only
      small subset of them, which would be ineffective in the original measurements
      space, where the correlation is high. In our Kubernetes-based implementation
      which employs this method, the resulting auto-scaler performs better than the
      default auto-scaler.", "venue": "IEEE International Conference on Science of
      Electrical Engineering", "year": 2018, "referenceCount": 9, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2018-12-01",
      "journal": {"name": "2018 IEEE International Conference on the Science of Electrical
      Engineering in Israel (ICSEE)", "pages": "1-5"}, "citationStyles": {"bibtex":
      "@Conference{Anisfeld2018ScalingOC,\n author = {Omer Anisfeld and Erez Biton
      and Ruven Milshtein and M. Shifrin and Omer Gurewitz},\n booktitle = {IEEE International
      Conference on Science of Electrical Engineering},\n journal = {2018 IEEE International
      Conference on the Science of Electrical Engineering in Israel (ICSEE)},\n pages
      = {1-5},\n title = {Scaling of Cloud Resources-Principal Component Analysis
      and Random Forest Approach},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "73776660", "name": "Omer Anisfeld"}, {"authorId": "3262298", "name": "Erez
      Biton"}, {"authorId": "73776683", "name": "Ruven Milshtein"}, {"authorId": "35140084",
      "name": "M. Shifrin"}, {"authorId": "3138604", "name": "Omer Gurewitz"}]}, {"paperId":
      "3c8baa86d137c0270626618aee26c50e8a25eb8f", "externalIds": {"DBLP": "conf/ccgrid/MarcheseT22",
      "DOI": "10.1109/ccgrid54584.2022.00102", "CorpusId": 250711219}, "corpusId":
      250711219, "publicationVenue": {"id": "57f970eb-366a-4bfa-aa06-2ff70d834806",
      "name": "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing",
      "type": "conference", "alternate_names": ["Clust Comput Grid", "CCGRID", "IEEE/ACM
      Int Symp Clust Cloud Grid Comput", "IEEE/ACM International Symposium Cluster,
      Cloud and Grid Computing", "Cluster Computing and the Grid", "IEEE/ACM Int Symp
      Clust Cloud Internet Comput"], "url": "http://www.buyya.com/ccgrid/"}, "url":
      "https://www.semanticscholar.org/paper/3c8baa86d137c0270626618aee26c50e8a25eb8f",
      "title": "Network-Aware Container Placement in Cloud-Edge Kubernetes Clusters",
      "abstract": "With the diffusion of Fog and Edge Computing paradigms, new application
      categories have emerged with specific quality of service requirements, in terms
      of communication latency and throughput. The placement of these applications
      on distributed Cloud-Edge environments is a challenging task, because of the
      continuously varying node-to-node network latency and bandwidth on Edge infrastructure.
      Although Kubernetes is the de-facto standard for container orchestration on
      Cloud data centers, its scheduling strategy is not suitable for the placement
      of time critical applications on Edge environments because it does not take
      into account current network conditions, neither communication requirements
      between microservices during its scheduling decisions. In this work we propose
      a network-aware scheduler plugin that extends the default Kubernetes scheduler,
      in order to deal with variable network conditions on cloud-edge clusters and
      run-time communication requirements of microservices. A custom descheduler is
      also proposed that periodically monitors run-time network state and traffic
      exchanged between microservices and evicts Pods from cluster nodes if better
      placement decisions can be done. An evaluation of our scheduling and descheduling
      strategies has been carried out on a sample microservices-based application
      deployed on a test bed environment.", "venue": "IEEE/ACM International Symposium
      on Cluster, Cloud and Internet Computing", "year": 2022, "referenceCount": 15,
      "citationCount": 8, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-05-01", "journal":
      {"name": "2022 22nd IEEE International Symposium on Cluster, Cloud and Internet
      Computing (CCGrid)", "pages": "859-865"}, "citationStyles": {"bibtex": "@Article{Marchese2022NetworkAwareCP,\n
      author = {Angelo Marchese and O. Tomarchio},\n booktitle = {IEEE/ACM International
      Symposium on Cluster, Cloud and Internet Computing},\n journal = {2022 22nd
      IEEE International Symposium on Cluster, Cloud and Internet Computing (CCGrid)},\n
      pages = {859-865},\n title = {Network-Aware Container Placement in Cloud-Edge
      Kubernetes Clusters},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2106438773",
      "name": "Angelo Marchese"}, {"authorId": "1725309", "name": "O. Tomarchio"}]},
      {"paperId": "3c9214e30f134c8f633f09736d2bc08f18caed00", "externalIds": {"DOI":
      "10.1109/IT57431.2023.10078576", "CorpusId": 257808196}, "corpusId": 257808196,
      "publicationVenue": {"id": "67128bf0-cf99-46bd-8915-1d9a05820d0a", "name": "International
      Conference on Information Technology", "type": "conference", "alternate_names":
      ["Int Conf Inf Technol", "International Conference on Information Technologies",
      "IVUS"]}, "url": "https://www.semanticscholar.org/paper/3c9214e30f134c8f633f09736d2bc08f18caed00",
      "title": "Extreme Gradient Boosting based Anomaly detection for Kubernetes Orchestration",
      "abstract": "Cloud computing was an attractive research area due to provided
      advanced functionalities over the traditional classic computer technologies.
      It allows for easily managing large applications without additional hassles,
      via the various containers and orchestration technologies. The development of
      containerization technology has made it possible for a single server to operate
      numerous services while making more efficient use of the resources available
      to it. However, containerized environments also bring forth additional issues,
      particularly in terms of providing comprehensive monitoring and safety measures.
      This brings an idea to create a new model for evaluating and identifying of
      unexpected anomalies in orchestration platforms in the early stage. In this
      research, we propose an eXtreme Gradient Boosting (XGBoost) based model for
      anomaly detection on the Kubernetes orchestration platform. We compared performance
      of it with a Convolutional neural network (CNN), Linear Support Vector Machine
      (Linear SVM), Random Forest Classifier, Decision Tree Classifier and Artificial
      Neural Networks (ANN). After multiple experiments, better results were observed
      by XGBoost among the others with an accuracy of up to 98.86%.", "venue": "International
      Conference on Information Technology", "year": 2023, "referenceCount": 21, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2023-02-15", "journal":
      {"name": "2023 27th International Conference on Information Technology (IT)",
      "pages": "1-4"}, "citationStyles": {"bibtex": "@Conference{Yolchuyev2023ExtremeGB,\n
      author = {Agil Yolchuyev},\n booktitle = {International Conference on Information
      Technology},\n journal = {2023 27th International Conference on Information
      Technology (IT)},\n pages = {1-4},\n title = {Extreme Gradient Boosting based
      Anomaly detection for Kubernetes Orchestration},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "1516246040", "name": "Agil Yolchuyev"}]}, {"paperId": "3c9b0a74bc6779bfd1b4f96c7b0ec7f4c5f3012d",
      "externalIds": {"DBLP": "journals/fi/PedoneL22", "DOI": "10.3390/fi14060160",
      "CorpusId": 249077322}, "corpusId": 249077322, "publicationVenue": {"id": "c3e5f1c8-9ba7-47e5-acde-53063a69d483",
      "name": "Future Internet", "type": "journal", "issn": "1999-5903", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-156830",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-156830",
      "https://www.mdpi.com/journal/futureinternet"]}, "url": "https://www.semanticscholar.org/paper/3c9b0a74bc6779bfd1b4f96c7b0ec7f4c5f3012d",
      "title": "Quantum Key Distribution in Kubernetes Clusters", "abstract": "Quantum
      Key Distribution (QKD) represents a reasonable countermeasure to the advent
      of Quantum Computing and its impact on current public-key cryptography. So far,
      considerable efforts have been devoted to investigate possible application scenarios
      for QKD in several domains such as Cloud Computing and NFV. This paper extends
      a previous work whose main objective was to propose a new software stack, the
      Quantum Software Stack (QSS), to integrate QKD into software-defined infrastructures.
      The contribution of this paper is twofold: enhancing the previous work adding
      functionalities to the first version of the QSS, and presenting a practical
      integration of the QSS in Kubernetes, which is the de-facto standard for container
      orchestration.", "venue": "Future Internet", "year": 2022, "referenceCount":
      32, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/1999-5903/14/6/160/pdf?version=1653639331",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Physics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-05-25", "journal":
      {"name": "Future Internet", "pages": "160", "volume": "14"}, "citationStyles":
      {"bibtex": "@Article{Pedone2022QuantumKD,\n author = {Ignazio Pedone and A.
      Lioy},\n booktitle = {Future Internet},\n journal = {Future Internet},\n pages
      = {160},\n title = {Quantum Key Distribution in Kubernetes Clusters},\n volume
      = {14},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2085851679", "name":
      "Ignazio Pedone"}, {"authorId": "1865558", "name": "A. Lioy"}]}, {"paperId":
      "3ccc9a78518b5ad86b366d04d3e9914ec56c5ae1", "externalIds": {"MAG": "3042448327",
      "DOI": "10.1109/ITOEC49072.2020.9141858", "CorpusId": 220668359}, "corpusId":
      220668359, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3ccc9a78518b5ad86b366d04d3e9914ec56c5ae1",
      "title": "Knative Autoscaler Optimize Based on Double Exponential Smoothing",
      "abstract": "Knative is a popular Kubernetes-based platform for managing serverless
      workloads with two main components Eventing and Serving. The Serving primitive
      helps to deploy serverless apps as Knative services and automatically scale
      them, even down to zero. However, the serving module uses a moving average method
      to calculate the number of pods, that calculated based on past data and not
      good at accounting for future changes. In this paper, we use double exponential
      smoothing to optimize the calculation of the number of pods. Preliminary experiments
      show that the results are better than the moving average.", "venue": "2020 IEEE
      5th Information Technology and Mechatronics Engineering Conference (ITOEC)",
      "year": 2020, "referenceCount": 6, "citationCount": 5, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2020-06-01", "journal": {"name": "2020 IEEE
      5th Information Technology and Mechatronics Engineering Conference (ITOEC)",
      "pages": "614-617"}, "citationStyles": {"bibtex": "@Conference{Fan2020KnativeAO,\n
      author = {Dayong Fan and Dongzhi He},\n booktitle = {2020 IEEE 5th Information
      Technology and Mechatronics Engineering Conference (ITOEC)},\n journal = {2020
      IEEE 5th Information Technology and Mechatronics Engineering Conference (ITOEC)},\n
      pages = {614-617},\n title = {Knative Autoscaler Optimize Based on Double Exponential
      Smoothing},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2054267626", "name":
      "Dayong Fan"}, {"authorId": "40025714", "name": "Dongzhi He"}]}, {"paperId":
      "3d0652271dcd2d7dae893a65624387d471f17d15", "externalIds": {"DBLP": "conf/ispw/UnverB23",
      "DOI": "10.1109/ICSSP59042.2023.00013", "CorpusId": 259363305}, "corpusId":
      259363305, "publicationVenue": {"id": "6954ba22-4baa-4a90-a231-8d972e643938",
      "name": "International Conference on Software and Systems Process", "type":
      "conference", "alternate_names": ["Int Conf Softw Syst Process", "ICSSP"], "url":
      "https://web.archive.org/web/*/http://www.icsp-conferences.org/"}, "url": "https://www.semanticscholar.org/paper/3d0652271dcd2d7dae893a65624387d471f17d15",
      "title": "Automatic Detection of Security Deficiencies and Refactoring Advises
      for Microservices", "abstract": "The microservice architecture enables organizations
      to shorten development cycles and deliver cloud-native applications rapidly.
      However, it also brings security concerns that need to be addressed by developers.
      Therefore, security testing in microservices becomes even more critical. Recent
      research papers indicate that security testing of microservices is often neglected
      for reasons such as lack of time, lack of experience in the security domain,
      and absence of automated test environments. Even though several security scanning
      tools exist to detect container, containerized workload management (Kubernetes),
      and network issues, none individually is sufficient to cover all security problems
      in microservices. Using multiple scanning tools increases the complexity of
      analyzing findings and mitigating security vulnerabilities. This paper presents
      a fully automated test tool suite that can help developers address security
      issues in microservices and resolve them. It targets to reduce time and effort
      in security activities by encapsulating open-source scanning tools into one
      suite and providing improved feedback. The developed security scanning suite
      is named Pomegranate. To develop Pomegranate, we employed Design Science and
      conducted our investigation in Ericsson. We have evaluated our tool using a
      static approach. The evaluation results indicate that the Pomegranate could
      be helpful to developers by providing simplified and classified outputs for
      security vulnerabilities in microservices. More than half of the practitioners
      who give us feedback found Pomegranate helpful in detecting and mitigating security
      problems in microservices. We conclude that a fully automated test tool suite
      can help developers to address most security issues in microservices. Based
      on the findings in this paper, the direction for future work is to conduct a
      dynamic validation of Pomegranate in a live project.", "venue": "International
      Conference on Software and Systems Process", "year": 2023, "referenceCount":
      14, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://bth.diva-portal.org/smash/get/diva2:1787087/FULLTEXT01",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2023-05-01",
      "journal": {"name": "2023 IEEE/ACM International Conference on Software and
      System Processes (ICSSP)", "pages": "25-34"}, "citationStyles": {"bibtex": "@Article{\u00dcnver2023AutomaticDO,\n
      author = {Burak \u00dcnver and Ricardo Britto},\n booktitle = {International
      Conference on Software and Systems Process},\n journal = {2023 IEEE/ACM International
      Conference on Software and System Processes (ICSSP)},\n pages = {25-34},\n title
      = {Automatic Detection of Security Deficiencies and Refactoring Advises for
      Microservices},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2221248561",
      "name": "Burak \u00dcnver"}, {"authorId": "145517956", "name": "Ricardo Britto"}]},
      {"paperId": "3d221720726eaffa5b620393e2be8aa75ea7dda5", "externalIds": {"DOI":
      "10.1007/978-1-4842-7211-4", "CorpusId": 237284792}, "corpusId": 237284792,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3d221720726eaffa5b620393e2be8aa75ea7dda5",
      "title": "Cloud Native Integration with Apache Camel: Building Agile and Scalable
      Integrations for Kubernetes Platforms", "abstract": null, "venue": "", "year":
      2021, "referenceCount": 0, "citationCount": 3, "influentialCitationCount": 0,
      "isOpenAccess": true, "openAccessPdf": {"url": "https://link.springer.com/content/pdf/bfm:978-1-4842-7211-4/1?pdf=chapter%20toc",
      "status": "GREEN"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Book"], "publicationDate": null, "journal":
      {"name": "Cloud Native Integration with Apache Camel"}, "citationStyles": {"bibtex":
      "@Book{Camposo2021CloudNI,\n author = {Guilherme Camposo},\n journal = {Cloud
      Native Integration with Apache Camel},\n title = {Cloud Native Integration with
      Apache Camel: Building Agile and Scalable Integrations for Kubernetes Platforms},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2124262594", "name": "Guilherme
      Camposo"}]}, {"paperId": "3d28aed18943d69ba77fcfbed631c0b2908d3aef", "externalIds":
      {"MAG": "2582142449", "DOI": "10.1007/978-1-4842-2598-1_15", "CorpusId": 63304986},
      "corpusId": 63304986, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3d28aed18943d69ba77fcfbed631c0b2908d3aef",
      "title": "Using an HA Master with OpenShift", "abstract": null, "venue": "",
      "year": 2017, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "pages": "335-353", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Vohra2017UsingAH,\n author = {Deepak Vohra},\n pages
      = {335-353},\n title = {Using an HA Master with OpenShift},\n year = {2017}\n}\n"},
      "authors": [{"authorId": "3026624", "name": "Deepak Vohra"}]}, {"paperId": "3d4895a59436004073a1e5d7dd5d71d8af5bb1ee",
      "externalIds": {"DOI": "10.1109/ICMCCE51767.2020.00109", "CorpusId": 234500091},
      "corpusId": 234500091, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3d4895a59436004073a1e5d7dd5d71d8af5bb1ee",
      "title": "FPGA virtualization deployment based on Docker container technology",
      "abstract": "FPGA (Field Programmable Gate Array) has special advantages in
      low latency, low power consumption and reconfigurable hardware as compared with
      CPU and GPU. It is deployed as heterogeneous accelerators on a large scale in
      cloud computing centers and research laboratories. Usually., developers operate
      directly on the physical machines and use the FPGA card exclusively. This leads
      to a bad utilization of FPGA resources. This paper proposes to virtualize and
      deploy FPGA resources as lightweight containers by using Docker and Kubernetes
      together. The Docker containers abstract FPGA resources and provide an isolated
      runtime environment for each application. The Kubernetes performs unified and
      automated scaling and scheduling of virtualized FPGA containers. Thus, FPGA
      resources can be safely and effectively shared among multiple local and remote
      applications. Experiments show that the utilization of FPGA resources has been
      improved.", "venue": "2020 5th International Conference on Mechanical, Control
      and Computer Engineering (ICMCCE)", "year": 2020, "referenceCount": 0, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2020-12-01", "journal":
      {"name": "2020 5th International Conference on Mechanical, Control and Computer
      Engineering (ICMCCE)", "pages": "473-476"}, "citationStyles": {"bibtex": "@Conference{Long2020FPGAVD,\n
      author = {Xiangmeng Long and Baohua Liu and Feng Jiang and Qingjie Zhang and
      Xiaoli Zhi},\n booktitle = {2020 5th International Conference on Mechanical,
      Control and Computer Engineering (ICMCCE)},\n journal = {2020 5th International
      Conference on Mechanical, Control and Computer Engineering (ICMCCE)},\n pages
      = {473-476},\n title = {FPGA virtualization deployment based on Docker container
      technology},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2092083418",
      "name": "Xiangmeng Long"}, {"authorId": "49166887", "name": "Baohua Liu"}, {"authorId":
      "2069985891", "name": "Feng Jiang"}, {"authorId": "2107957646", "name": "Qingjie
      Zhang"}, {"authorId": "2848277", "name": "Xiaoli Zhi"}]}, {"paperId": "3d63deb4b0f7fbec68d252c58590b39e41f8a476",
      "externalIds": {"DOI": "10.31224/osf.io/cp3bz", "CorpusId": 241972314}, "corpusId":
      241972314, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3d63deb4b0f7fbec68d252c58590b39e41f8a476",
      "title": "Cluster Of Workstations for cloud foundry based functions and applications",
      "abstract": "In this publication we describe on OpenRAN based cluster of workstations,
      implementing cloud foundry Kubernetes, architecture for AWS inspired Lambdas
      and threads on cloud foundry, implemented on dedicated units as a cluster and
      on robotic segway RMP 440 platforms as HTCondor based thread schedulers, using
      PyMACS integrated with a resident kernel inspired by the shadow process of HT
      Condor. This allows for thread scheduling on idle robotic CPUsKubernetes, Cloud
      Foundry, AWS, VPN, HTCondor.", "venue": "", "year": 2021, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://engrxiv.org/preprint/download/1644/3384",
      "status": "GREEN"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2021-04-28",
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Bheemaiah2021ClusterOW,\n
      author = {Anil Kumar Bheemaiah},\n title = {Cluster Of Workstations for cloud
      foundry based functions and applications},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2124095352", "name": "Anil Kumar Bheemaiah"}]}, {"paperId": "3d6f9615f86a8f653221729ea502f3199019abb8",
      "externalIds": {"MAG": "3100449049", "CorpusId": 232684515}, "corpusId": 232684515,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3d6f9615f86a8f653221729ea502f3199019abb8",
      "title": "Implementasi Failover Dan Autoscaling Kontainer Web Server Nginx Pada
      Docker Menggunakan Kubernetes", "abstract": "Web server merupakan salah satu
      komponen penting didalam proses hosting \nsebuah website. Web server yang baik
      harus mampu melayanai request dari \npengguna selama 24 jam 7 hari dimana jika
      web server mati maka layanan website \nakan berhenti. Kondisi web server tidak
      dapat bekerja atau failure memiki \nbeberapa penyebab seperti putusnya sumber
      daya listrik, malfungsi perangkat \nkeras, crash pada web server, dan kegagalan
      jaringan. NGINX merupakan salah \nsatu web server yang populer digunakan, web
      server tersebut mampu di-deploy \npada komputer server secara virtual menggunakan
      metode kontainer dimana \nvirtualisasi hanya dilakukan pada level sistem operasi,
      hal ini memudahkan proses \ndeployment karena kontainer bersifat lightweight
      dan portabel. Agar web server \nmampu terus melayani request dari pengguna maka
      diperlukan mekanisme \nfailover dan autoscaling. Failover mampu melakukan back
      up layanan untuk \nmemastikan web server terus bekerja, sementara autoscaling
      mampu membuat \nlayanan web server beradaptasi sesuai CPU usage yang dibutuhkan
      untuk \nmenangani request. Kubernetes merupakan perangkat lunak yang memiliki
      \nmekanisme failover dan autoscaling kontainer berbasis Docker. Kubernetes \nmampu
      memanajemen kontainer berjumlah banyak dan bersifat open source \nsehingga biaya
      penelitian mampu diminimalkan. Pada penelitian ini jumlah \nperangkat keras
      yang digunakan adalah tiga server yang membentuk sebuah \ncluster menggunakan
      Kubernetes, dimana satu server akan berperan sebagai \nmaster dan dua server
      sebagai minion. Pengujian yang dilakukan adalah menguji \nfungsionalitas sistem
      seperti menjalankan web server, menguji mekanisme \nfailover dan autoscaling,
      dan non fungsionalitas seperti uji koneksi antar server \npada cluster, rata-rata
      waktu yang dibutuhkan untuk melaksanakan failover dan \nautoscaling serta CPU
      usage yang dihasilkan pada saat scaling. Hasil dari penelitian \ndidapat rata-rata
      waktu yang dibutuhkan untuk failover adalah 264,74s untuk \nnode failure, dan
      3s untuk service failure. Untuk rata-rata waktu autoscaling \nsistem membutuhkan
      45s untuk scale up dan 120s untuk Scale down. Autoscaling \nKubernetes mampu
      mengurangi CPU usage sebesar 0,4% dibanding sistem yang \ntidak menggunakan
      autoscaling. Sistem yang dibangun mampu menjalankan web \nserver secara virtual
      dengan metode clustering.", "venue": "", "year": 2018, "referenceCount": 7,
      "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}], "publicationTypes": null, "publicationDate":
      "2018-08-03", "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex":
      "@Inproceedings{Sumbogo2018ImplementasiFD,\n author = {Yosua Tito Sumbogo},\n
      title = {Implementasi Failover Dan Autoscaling Kontainer Web Server Nginx Pada
      Docker Menggunakan Kubernetes},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "2062288718", "name": "Yosua Tito Sumbogo"}]}, {"paperId": "3d7b31febed55f170ac60118a2f25c763067deb2",
      "externalIds": {"MAG": "2995448668", "CorpusId": 213028168}, "corpusId": 213028168,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3d7b31febed55f170ac60118a2f25c763067deb2",
      "title": "Monitoring a Kubernetes Application", "abstract": null, "venue": "",
      "year": 2019, "referenceCount": 0, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Ritari2019MonitoringAK,\n author = {Olli Ritari},\n
      title = {Monitoring a Kubernetes Application},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "1573617916", "name": "Olli Ritari"}]}, {"paperId": "3d7dd306e96400306c90f822edf5592038687b4c",
      "externalIds": {"DBLP": "conf/icin/DabFRAD20", "MAG": "3015534502", "DOI": "10.1109/ICIN48450.2020.9059340",
      "CorpusId": 215738225}, "corpusId": 215738225, "publicationVenue": {"id": "5e07a437-469d-4072-9d25-ea2d144e1601",
      "name": "Conference on Innovation in Clouds, Internet and Networks", "type":
      "conference", "alternate_names": ["ICIN", "Conf Innov Cloud Internet Netw"]},
      "url": "https://www.semanticscholar.org/paper/3d7dd306e96400306c90f822edf5592038687b4c",
      "title": "An Efficient Traffic Steering for Cloud-Native Service Function Chaining",
      "abstract": "Ahstract-5G stakeholders make every effort to efficiently handle
      the unprecedented services and traffic demand. Particularly, Telco operators
      aim to deploy a cost effective network services within their next generation
      mobile networks. By leveraging cloud-native architectures, the stringent 5G
      services requirements can be satisfied while reducing both CAPEX and OPEX. Concretely,
      the adoption of microservice software design enables the disaggregation of Telco
      applications into small independent cloud-native network functions. Theses microservices,
      deployed as containers, are lightweight and perform in an independent way. However,
      in spite of its various benefits, microservice architecture raises new challenges
      to deal with in the network function virtualization (NFV) ecosystem. Typically,
      the service function chaining (SFC) of cloud-native network functions becomes
      extremely complex and error-prone due to the high number of microservices. In
      this paper, we address the problem of 5G traffic steering for cloud-native SFC
      in microservice based NFV ecosystem. Specifically, we envision and deploy an
      SDNless SFC framework ensuring efficient traffic steering between cloud-native
      network functions. Besides, we propose an optimized network-aware load balancing
      algorithm capable of carrying efficiently the traffic while considering the
      underlying infrastructure network state. Based on robust experiments conducted
      in the deployed Kubernetes-based platform, the results show the efficiency of
      our strategy in terms of deployment time and network performance.", "venue":
      "Conference on Innovation in Clouds, Internet and Networks", "year": 2020, "referenceCount":
      17, "citationCount": 9, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2020-02-01",
      "journal": {"name": "2020 23rd Conference on Innovation in Clouds, Internet
      and Networks and Workshops (ICIN)", "pages": "71-78"}, "citationStyles": {"bibtex":
      "@Article{Dab2020AnET,\n author = {Boutheina Dab and Ilhem Fajjari and Mathieu
      Rohon and Cyril Auboin and Arnaud Diqu\u00e9lou},\n booktitle = {Conference
      on Innovation in Clouds, Internet and Networks},\n journal = {2020 23rd Conference
      on Innovation in Clouds, Internet and Networks and Workshops (ICIN)},\n pages
      = {71-78},\n title = {An Efficient Traffic Steering for Cloud-Native Service
      Function Chaining},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2045632",
      "name": "Boutheina Dab"}, {"authorId": "2636124", "name": "Ilhem Fajjari"},
      {"authorId": "1628967151", "name": "Mathieu Rohon"}, {"authorId": "1629517648",
      "name": "Cyril Auboin"}, {"authorId": "1629358863", "name": "Arnaud Diqu\u00e9lou"}]},
      {"paperId": "3d7e8cb07fa8448c429cd500d669dcb1f9885301", "externalIds": {"MAG":
      "3104282790", "ArXiv": "2004.13284", "DBLP": "journals/corr/abs-2004-13284",
      "DOI": "10.4204/EPTCS.316.2", "CorpusId": 216562369}, "corpusId": 216562369,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3d7e8cb07fa8448c429cd500d669dcb1f9885301",
      "title": "Modeling the Raft Distributed Consensus Protocol in LNT", "abstract":
      "Consensus protocols are crucial for reliable distributed systems as they let
      them cope with network and server failures. For decades, most consensus protocols
      have been designed as variations of the seminal Paxos, yet in 2014 Raft was
      presented as a new, \"understandable\" protocol, meant to be easier to implement
      than the notoriously subtle Paxos family. Raft has since been used in various
      industrial projects, e.g. Hashicorp''s Consul or etcd (used by Google''s Kubernetes).
      The correctness of Raft is established via a manual proof, based on a TLA+ specification
      of the protocol. This paper reports our experience in modeling Raft in the LNT
      process algebra. We found a couple of issues with the original TLA+ specification
      of Raft, which has been corrected since. More generally, this exercise offers
      a great opportunity to discuss how to best use the features of the LNT formal
      language and the associated CADP verification toolbox to model distributed protocols,
      including network and server failures.", "venue": "MARS@ETAPS", "year": 2020,
      "referenceCount": 14, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2004.13284", "status":
      "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-04-26", "journal": {"name": "ArXiv", "pages": "15-39", "volume": "abs/2004.13284"},
      "citationStyles": {"bibtex": "@Article{Evrard2020ModelingTR,\n author = {Hugues
      Evrard},\n booktitle = {MARS@ETAPS},\n journal = {ArXiv},\n pages = {15-39},\n
      title = {Modeling the Raft Distributed Consensus Protocol in LNT},\n volume
      = {abs/2004.13284},\n year = {2020}\n}\n"}, "authors": [{"authorId": "32078908",
      "name": "Hugues Evrard"}]}, {"paperId": "3d7eb0158d887a80100437b2fc024cad7e20fde6",
      "externalIds": {"DBLP": "conf/netsoft/CorinCCMS22", "DOI": "10.1109/NetSoft54395.2022.9844023",
      "CorpusId": 251322747}, "corpusId": 251322747, "publicationVenue": {"id": "8d051ed1-e691-49d8-8a57-d7b4a76c4352",
      "name": "IEEE Conference on Network Softwarization", "type": "conference", "alternate_names":
      ["IEEE Conf Netw Softwarization", "NetSoft"]}, "url": "https://www.semanticscholar.org/paper/3d7eb0158d887a80100437b2fc024cad7e20fde6",
      "title": "Towards Application-Aware Provisioning of Security Services with Kubernetes",
      "abstract": "In network security, Network Function Virtualization can be exploited
      to implement flexible security services tailored to specific user needs. However,
      in practice this is hard to achieve due to the limitations of reference software
      platforms, such as Kubernetes, which are designed to orchestrate cloud-native
      services. In this work, we complement Kubernetes with a state-of-the-art algorithm
      for application-aware provisioning of security services. We demonstrate that
      the proposed solution improves basic provisioning mechanisms, such as the default
      Kubernetes scheduler, in terms of Quality of Service and security guarantees
      for the users.", "venue": "IEEE Conference on Network Softwarization", "year":
      2022, "referenceCount": 6, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-06-27", "journal": {"name": "2022 IEEE 8th International
      Conference on Network Softwarization (NetSoft)", "pages": "284-286"}, "citationStyles":
      {"bibtex": "@Article{Corin2022TowardsAP,\n author = {R. D. Corin and Silvio
      Cretti and T. Catena and Simone Magnani and D. Siracusa},\n booktitle = {IEEE
      Conference on Network Softwarization},\n journal = {2022 IEEE 8th International
      Conference on Network Softwarization (NetSoft)},\n pages = {284-286},\n title
      = {Towards Application-Aware Provisioning of Security Services with Kubernetes},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2773853", "name": "R. D. Corin"},
      {"authorId": "8811077", "name": "Silvio Cretti"}, {"authorId": "52408830", "name":
      "T. Catena"}, {"authorId": "2091306007", "name": "Simone Magnani"}, {"authorId":
      "1989382", "name": "D. Siracusa"}]}, {"paperId": "3da9ab4c73021e3d9eee8f6a126037ec3eea957a",
      "externalIds": {"DBLP": "journals/pvldb/0001BSST23", "DOI": "10.14778/3603581.3603599",
      "CorpusId": 254587585}, "corpusId": 254587585, "publicationVenue": {"id": "fcbcaf18-8ab1-43e1-a973-604bbc7e344e",
      "name": "Proceedings of the VLDB Endowment", "type": "journal", "alternate_names":
      ["Proceedings of The Vldb Endowment", "Proc VLDB Endow", "Proc Vldb Endow"],
      "issn": "2150-8097", "url": "http://dl.acm.org/toc.cfm?id=J1174", "alternate_urls":
      ["http://portal.acm.org/toc.cfm?CFID=21632689&CFTOKEN=99329904&WantType=Affiliated%20Organizations&coll=ACM&dl=ACM&id=J1174&idx=J1174&part=affil&title=VLDB%20Endowment&type=periodical"]},
      "url": "https://www.semanticscholar.org/paper/3da9ab4c73021e3d9eee8f6a126037ec3eea957a",
      "title": "Scaling a Declarative Cluster Manager Architecture with Query Optimization
      Techniques", "abstract": "\n Cluster managers play a crucial role in data centers
      by distributing workloads among infrastructure resources. Declarative Cluster
      Management (DCM) is a new cluster management architecture that enables users
      to express placement policies declaratively using SQL-like queries. This paper
      presents our experiences in scaling this architecture from moderate-sized enterprise
      clusters (10\n 2\n - 10\n 3\n nodes) to hyperscale clusters (10\n 4\n nodes)
      via query optimization techniques. First, we formally specify the syntax and
      semantics of DCM''s declarative language, C-SQL, a SQL variant used to express
      constraint optimization problems. We showcase how constraints on the desired
      state of the cluster system can be succinctly represented as C-SQL programs,
      and how query optimization techniques like incremental view maintenance and
      predicate pushdown can enhance the execution of C-SQL programs. We evaluate
      the effectiveness of our optimizations through a case study of building Kubernetes
      schedulers using C-SQL. Our optimizations demonstrated an almost 3000\u00d7
      speed up in database latency and reduced the size of optimization problems by
      as much as 1/300 of the original, without affecting the quality of the scheduling
      solutions.\n", "venue": "Proceedings of the VLDB Endowment", "year": 2023, "referenceCount":
      78, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-06-01", "journal": {"name": "Proc. VLDB Endow.", "pages":
      "2618-2631", "volume": "16"}, "citationStyles": {"bibtex": "@Article{Rong2023ScalingAD,\n
      author = {Kexin Rong and M. Budiu and Athinagoras Skiadopoulos and L. Suresh
      and Amy Tai},\n booktitle = {Proceedings of the VLDB Endowment},\n journal =
      {Proc. VLDB Endow.},\n pages = {2618-2631},\n title = {Scaling a Declarative
      Cluster Manager Architecture with Query Optimization Techniques},\n volume =
      {16},\n year = {2023}\n}\n"}, "authors": [{"authorId": "7804757", "name": "Kexin
      Rong"}, {"authorId": "1707533", "name": "M. Budiu"}, {"authorId": "1580175613",
      "name": "Athinagoras Skiadopoulos"}, {"authorId": "49060428", "name": "L. Suresh"},
      {"authorId": "37531541", "name": "Amy Tai"}]}, {"paperId": "3de8a9e798ce7ac356d701f73a703f9314215b75",
      "externalIds": {"DBLP": "journals/corr/abs-2007-07366", "MAG": "3043567103",
      "ArXiv": "2007.07366", "CorpusId": 220525796}, "corpusId": 220525796, "publicationVenue":
      {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names":
      ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/3de8a9e798ce7ac356d701f73a703f9314215b75",
      "title": "Serverless inferencing on Kubernetes", "abstract": "Organisations
      are increasingly putting machine learning models into production at scale. The
      increasing popularity of serverless scale-to-zero paradigms presents an opportunity
      for deploying machine learning models to help mitigate infrastructure costs
      when many models may not be in continuous use. We will discuss the KFServing
      project which builds on the KNative serverless paradigm to provide a serverless
      machine learning inference solution that allows a consistent and simple interface
      for data scientists to deploy their models. We will show how it solves the challenges
      of autoscaling GPU based inference and discuss some of the lessons learnt from
      using it in production.", "venue": "arXiv.org", "year": 2020, "referenceCount":
      23, "citationCount": 7, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-07-14", "journal": {"name": "ArXiv", "volume": "abs/2007.07366"}, "citationStyles":
      {"bibtex": "@Article{Cox2020ServerlessIO,\n author = {Clive Cox and Dan Sun
      and Ellis Tarn and Animesh Singh and Rakesh Kelkar and Dave Goodwin},\n booktitle
      = {arXiv.org},\n journal = {ArXiv},\n title = {Serverless inferencing on Kubernetes},\n
      volume = {abs/2007.07366},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "2052347452", "name": "Clive Cox"}, {"authorId": "2027030898", "name": "Dan
      Sun"}, {"authorId": "1816753069", "name": "Ellis Tarn"}, {"authorId": "2111008853",
      "name": "Animesh Singh"}, {"authorId": "1840440948", "name": "Rakesh Kelkar"},
      {"authorId": "2069004562", "name": "Dave Goodwin"}]}, {"paperId": "3e0358b64c1d9a7c3b6ff41c52e6e4b95b18c457",
      "externalIds": {"DBLP": "conf/globecom/MargetisVADPTCH22", "DOI": "10.1109/GCWkshps56602.2022.10008690",
      "CorpusId": 255778180}, "corpusId": 255778180, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/3e0358b64c1d9a7c3b6ff41c52e6e4b95b18c457",
      "title": "Validation of NFV management and orchestration on Kubernetes-based
      5G testbed environment", "abstract": "Prior work has shown that the integration
      of Kubernetes orchestration tools with present Network Functions Virtualization
      infrastructures toward Cloud-based 5G deployments may be the key to unlock beyond
      5G communications. However, before we reach that point, further work is required
      to define, implement and validate practical Cloud-native augmentations that
      will enable virtual network functions management and orchestration via Kubernetes
      architectures in existing 5G platforms. In this paper, we present our approach
      in the context of the 5GEPICENTRE project, drawing from ETSI-compliant reference
      implementation frames in order to enhance an experimental 5G testbed with capacity
      to host containerized network applications. We study how the proposal can be
      used to validate key performance indicators on high-demanding 5G applications,
      such as those characteristic of the Public Protection and Disaster Relief vertical.",
      "venue": "2022 IEEE Globecom Workshops (GC Wkshps)", "year": 2022, "referenceCount":
      26, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-12-04", "journal":
      {"name": "2022 IEEE Globecom Workshops (GC Wkshps)", "pages": "844-849"}, "citationStyles":
      {"bibtex": "@Article{Margetis2022ValidationON,\n author = {George Margetis and
      Barbara Valera-Muros and K. C. Apostolakis and Almudena D\u00edaz Zayas and
      L. Panizo and Pedro Tom\u00e1s and Lu\u00eds Cordeiro and Joao Henriques and
      C. Stephanidis},\n booktitle = {2022 IEEE Globecom Workshops (GC Wkshps)},\n
      journal = {2022 IEEE Globecom Workshops (GC Wkshps)},\n pages = {844-849},\n
      title = {Validation of NFV management and orchestration on Kubernetes-based
      5G testbed environment},\n year = {2022}\n}\n"}, "authors": [{"authorId": "1748008",
      "name": "George Margetis"}, {"authorId": "1416609620", "name": "Barbara Valera-Muros"},
      {"authorId": "2168105", "name": "K. C. Apostolakis"}, {"authorId": "82064010",
      "name": "Almudena D\u00edaz Zayas"}, {"authorId": "3332999", "name": "L. Panizo"},
      {"authorId": "2200548190", "name": "Pedro Tom\u00e1s"}, {"authorId": "144942815",
      "name": "Lu\u00eds Cordeiro"}, {"authorId": "2065428448", "name": "Joao Henriques"},
      {"authorId": "1685903", "name": "C. Stephanidis"}]}, {"paperId": "3e29953dc3b3719885326079434aa373c62c5253",
      "externalIds": {"MAG": "2973128541", "CorpusId": 203432164}, "corpusId": 203432164,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3e29953dc3b3719885326079434aa373c62c5253",
      "title": "Kubernetes: The Second Week", "abstract": null, "venue": "", "year":
      2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [], "publicationTypes": null, "publicationDate": null, "journal": {"name": "",
      "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Rahman2019KubernetesTS,\n
      author = {Mofizur Rahman},\n title = {Kubernetes: The Second Week},\n year =
      {2019}\n}\n"}, "authors": [{"authorId": "47721005", "name": "Mofizur Rahman"}]},
      {"paperId": "3e8877af746915a89e4a2942beace228bc84f55f", "externalIds": {"DBLP":
      "conf/icissp/HaarB21", "DOI": "10.5220/0010340406760683", "CorpusId": 232106490},
      "corpusId": 232106490, "publicationVenue": {"id": "838ca88f-3961-404a-ad64-3a2f95c65615",
      "name": "International Conference on Information Systems Security and Privacy",
      "type": "conference", "alternate_names": ["ICISSP", "Int Conf Inf Syst Secur
      Priv"]}, "url": "https://www.semanticscholar.org/paper/3e8877af746915a89e4a2942beace228bc84f55f",
      "title": "Securing Orchestrated Containers with BSI Module SYS.1.6", "abstract":
      "Orchestrated container virtualization, such as Docker/Kubernetes, is an attractive
      option to transfer complex IT ecosystems into the cloud. However, this is associated
      with new challenges for IT security. A prominent option to secure IT infrastructures
      is to use security guidelines from agencies, such as Germany\u2019s Federal
      Office for Information Security. In this work, we analyze the module \u201dSYS.1.6
      Container\u201d from this agency. We want to find out how suitable this module
      is to secure a typical Kubernetes scenario. Our scenario is a classical 3-tier
      architecture with front end, business logic and database-back end. We show that
      with orchestration, the protection needs for the entire Kubernetes cluster in
      terms of confidentiality, integrity and availability automatically become \u201dhigh\u201d
      as soon as a sensitive data object is processed or stored in any container.
      Our analysis has shown that the SYS.1.6 module is generally suitable. However,
      we have identified three additional threats. Two of them could be exploited
      automatically, as soon as a respective vulnerability appears.", "venue": "International
      Conference on Information Systems Security and Privacy", "year": 2021, "referenceCount":
      29, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "676-683"}, "citationStyles": {"bibtex": "@Article{Haar2021SecuringOC,\n
      author = {Christoph Haar and Erik Buchmann},\n booktitle = {International Conference
      on Information Systems Security and Privacy},\n pages = {676-683},\n title =
      {Securing Orchestrated Containers with BSI Module SYS.1.6},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "119531093", "name": "Christoph Haar"}, {"authorId":
      "1747453", "name": "Erik Buchmann"}]}, {"paperId": "3e8fc2b90b9531e2f100b1c69c9cda8e23eb6da3",
      "externalIds": {"DOI": "10.1109/ACFPE56003.2022.9952265", "CorpusId": 254100168},
      "corpusId": 254100168, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3e8fc2b90b9531e2f100b1c69c9cda8e23eb6da3",
      "title": "A Machine Learning Process-based Training Task Execution Method in
      the Field of Power Grid Regulation", "abstract": "With the rapid development
      of artificial intelligence technology, the power industry has entered the era
      of big data, business data is rapidly accumulated, and the traditional Spring-Boot-based
      microservice architecture raises more and more requirements for hardware resources,
      which can no longer meet our requirements for service invocation performance,
      data consistency, elastic scaling and flexible deployment requirements. In response
      to the above problems, the distributed container technology which is based on
      Kubernetes and Docker is introduced, and a unified JSON-based machine learning
      process description language structure is proposed, some useful configuration
      templates are provided for machine learning training processes, including algorithm
      selection, hyper-parameter setting, loss function, optimization function and
      execution plan. In response to the needs of enterprise business development,
      a machine learning model training task scheduling system adapted to business
      scenarios in the field of power grid regulation is designed and constructed,
      which solves the problems of inability to reuse sample data and waste of resources
      and realizes resource isolation and elastic scaling. By building a visualized
      machine learning task process, implementing model training and evaluation, supporting
      real-time display of the execution status of each algorithm node, the platform
      implements a multi-tenant resource isolation and elastic scaling containerized
      machine learning model training environment. Keywords", "venue": "2022 Asian
      Conference on Frontiers of Power and Energy (ACFPE)", "year": 2022, "referenceCount":
      8, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-10-01",
      "journal": {"name": "2022 Asian Conference on Frontiers of Power and Energy
      (ACFPE)", "pages": "203-210"}, "citationStyles": {"bibtex": "@Conference{Lao2022AML,\n
      author = {Yingying Lao and Wangyu Dong and Ziyun Chen and Yanru Kong and Jialing
      Shen and Hao Li},\n booktitle = {2022 Asian Conference on Frontiers of Power
      and Energy (ACFPE)},\n journal = {2022 Asian Conference on Frontiers of Power
      and Energy (ACFPE)},\n pages = {203-210},\n title = {A Machine Learning Process-based
      Training Task Execution Method in the Field of Power Grid Regulation},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "81858773", "name": "Yingying Lao"},
      {"authorId": "2192832761", "name": "Wangyu Dong"}, {"authorId": "2144251465",
      "name": "Ziyun Chen"}, {"authorId": "2152091824", "name": "Yanru Kong"}, {"authorId":
      "2193352396", "name": "Jialing Shen"}, {"authorId": "144966716", "name": "Hao
      Li"}]}, {"paperId": "3ea181189d400d5d9fec769df02fe8eeb589a5e0", "externalIds":
      {"MAG": "3011839706", "DOI": "10.1109/CSITSS47250.2019.9031028", "CorpusId":
      212703502}, "corpusId": 212703502, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3ea181189d400d5d9fec769df02fe8eeb589a5e0",
      "title": "A Comparative Study of Spark Schedulers'' Performance", "abstract":
      "Big data applications have become an integral part of many intelligent systems,
      enabling better business decision making, by extracting useful information from
      historical data. This involves a large amount of computational tasks and algorithms.
      In such scenarios, the time taken by the processing become an important concern,
      and needs to be optimized. Apache Spark is a high speed big data analytics engine,
      best known for its fast computation speeds, due to the use of in-memory data
      structures and its efficient schedulers. Further optimization to enhance the
      speed of Spark jobs will be valuable. In this paper, the efficiencies of the
      four standard schedulers of Apache Spark i.e., Standalone Scheduler, Mesos,
      YARN(Yet Another Resource Negotiator) and the recently introduced Kubernetes
      Scheduler are compared. The speeds of these schedulers are compared for jobs
      of different sizes, and the best alternative is identified.", "venue": "2019
      4th International Conference on Computational Systems and Information Technology
      for Sustainable Solution (CSITSS)", "year": 2019, "referenceCount": 10, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2019-12-01",
      "journal": {"name": "2019 4th International Conference on Computational Systems
      and Information Technology for Sustainable Solution (CSITSS)", "pages": "1-5",
      "volume": "4"}, "citationStyles": {"bibtex": "@Conference{Raju2019ACS,\n author
      = {Ashmita Raju and Ramya Ramanathan and Dr. Hemavathy},\n booktitle = {2019
      4th International Conference on Computational Systems and Information Technology
      for Sustainable Solution (CSITSS)},\n journal = {2019 4th International Conference
      on Computational Systems and Information Technology for Sustainable Solution
      (CSITSS)},\n pages = {1-5},\n title = {A Comparative Study of Spark Schedulers''
      Performance},\n volume = {4},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2220162068", "name": "Ashmita Raju"}, {"authorId": "2055935030", "name": "Ramya
      Ramanathan"}, {"authorId": "2285057153", "name": "Dr. Hemavathy"}]}, {"paperId":
      "3ee374638570c28544cb74370dda5e87272a85dd", "externalIds": {"DBLP": "conf/icse/DelnatTRLJ18",
      "MAG": "2883990146", "DOI": "10.1145/3194133.3194162", "CorpusId": 50774981},
      "corpusId": 50774981, "publicationVenue": {"id": "a1e5df48-fbe3-4a59-8c15-5ed0ca3513ee",
      "name": "International Symposium on Software Engineering for Adaptive and Self-Managing
      Systems", "type": "conference", "alternate_names": ["Softw Eng Adapt Self-managing
      Syst", "Software Engineering for Adaptive and Self-Managing Systems", "Int Symp
      Softw Eng Adapt Self-managing Syst", "SEAMS"]}, "url": "https://www.semanticscholar.org/paper/3ee374638570c28544cb74370dda5e87272a85dd",
      "title": "K8-Scalar: A Workbench to Compare Autoscalers for Container-Orchestrated
      Database Clusters", "abstract": "Although a considerable amount of research
      exists on auto-scaling of database clusters, the design of an effective auto-scaling
      strategy requires fine-grained tailoring towards the specific application scenario.
      This paper presents an easy-to-use and extensible workbench exemplar, named
      K8-Scalar (Kube-Scalar), which allows researchers to implement and evaluate
      different self-adaptive approaches to autoscaling container-orchestrated services.
      The workbench is based on Docker, a popular technology for easing the deployment
      of containerized software that also has been positioned as an enabler for reproducible
      research. The workbench also relies on a container orchestration framework:
      Kubernetes (K8s), the de-facto industry standard for orchestration and monitoring
      of elastically scalable container-based services. Finally, it integrates and
      extends Scalar, a generic testbed for evaluating the scalability of large-scale
      systems with support for evaluating the performance of autoscalers for database
      clusters. The paper discusses (i) the architecture and implementation of K8-Scalar
      and how a particular autoscaler can be plugged in, (ii) sketches the design
      of a Riemann-based autoscaler for database clusters, (iii) illustrates how to
      design, setup and analyze a series of experiments to configure and evaluate
      the performance of this autoscaler for a particular database (i.e., Cassandra)
      and a particular workload type, and (iv) validates the effectiveness of K8-Scalar
      as a workbench for accurately comparing the performance of different auto-scaling
      strategies.", "venue": "International Symposium on Software Engineering for
      Adaptive and Self-Managing Systems", "year": 2018, "referenceCount": 51, "citationCount":
      18, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://lirias.kuleuven.be/bitstream/123456789/629034/2/seams2018_CR.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2018-05-28", "journal": {"name": "2018 IEEE/ACM 13th International
      Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)",
      "pages": "33-39"}, "citationStyles": {"bibtex": "@Book{Delnat2018K8ScalarAW,\n
      author = {Wito Delnat and E. Truyen and A. Rafique and Dimitri Van Landuyt and
      W. Joosen},\n booktitle = {International Symposium on Software Engineering for
      Adaptive and Self-Managing Systems},\n journal = {2018 IEEE/ACM 13th International
      Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},\n
      pages = {33-39},\n title = {K8-Scalar: A Workbench to Compare Autoscalers for
      Container-Orchestrated Database Clusters},\n year = {2018}\n}\n"}, "authors":
      [{"authorId": "46232202", "name": "Wito Delnat"}, {"authorId": "1743981", "name":
      "E. Truyen"}, {"authorId": "2443017", "name": "A. Rafique"}, {"authorId": "2211794",
      "name": "Dimitri Van Landuyt"}, {"authorId": "1752104", "name": "W. Joosen"}]},
      {"paperId": "3ee65fa05b938d4428e8c172edc487ddcfe6b245", "externalIds": {"MAG":
      "3006400428", "DOI": "10.5121/CSIT.2020.100103", "CorpusId": 214434968}, "corpusId":
      214434968, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3ee65fa05b938d4428e8c172edc487ddcfe6b245",
      "title": "Tensorflow 2.0 and Kubeflow for Scalable and Reproducable Enterprise
      AI", "abstract": "Towards the End of 2015 Google released TensorFlow 1.0, which
      started out as just another numerical library, but has grown to become a de-facto
      standard in AI technologies. TensorFlow received a lot of hype as part of its
      initial release, in no small part because it was released by Google. Despite
      the hype, there have been complaints on usability as well. Especially, for example,
      the fact that debugging was only possible after construction of a static execution
      graph. In addition to that, neural networks needed to be expressed as a set
      of linear algebra operations which was considered as too low level by many practitioners.
      PyTorch and Keras addressed many of the flaws in TensorFlow and gained a lot
      of ground. TensorFlow 2.0 successfully addresses these complaints and promises
      to become the go-to framework for many AI problems. This paper introduces the
      most prominent changes in TensorFlow 2.0 targeted towards ease of use followed
      by introducing TensorFlow Extended Pipelines and KubeFlow in order to illustrate
      the latest TensorFlow and Kubernetes ecosystem movements towards simplification
      for large scale Enterprise AI adoption", "venue": "", "year": 2020, "referenceCount":
      0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2020-01-25", "journal": {"name": "", "pages": "19", "volume": "10"}, "citationStyles":
      {"bibtex": "@Inproceedings{Kienzler2020Tensorflow2A,\n author = {Romeo Kienzler
      and Holger Kyas},\n pages = {19},\n title = {Tensorflow 2.0 and Kubeflow for
      Scalable and Reproducable Enterprise AI},\n volume = {10},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "3074587", "name": "Romeo Kienzler"}, {"authorId":
      "1584316182", "name": "Holger Kyas"}]}, {"paperId": "3ef7cf338dd7d82aefec2120cf74d8f294461305",
      "externalIds": {"MAG": "2971210908", "CorpusId": 202764437}, "corpusId": 202764437,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3ef7cf338dd7d82aefec2120cf74d8f294461305",
      "title": "Processing theta-joins in streaming environments under the micro-batch
      model", "abstract": "Join computations in stream requires support for state
      management since tuple pairs that would generate a result might arrive in distinct
      moments in the application. The solution offered by Stream Processing Systems
      (SPS) like Spark and Storm for state management are windows limited by time
      or size constraint. Published papers (LIN et al., 2015; ELSEIDY et al., 2014)
      offer support for storing tuples without time restriction in the record-at-a-time
      model. In this work, we propose a solution for computing joins in a stream environment
      under the micro-batch model with support for state management to theta-joins.
      The approach stores tuples and uses a broadcast shuffle to run the broadcast
      join algorithm, enumerating the cartesian product between streams and thus allowing
      arbitrary predicates. The model is implemented in Spark Streaming and uses RDDs
      as storages in main memory and Apache Kafka as message-queue for data input,
      besides using HDFS to store results. The methodology focuses on the scalability
      of the solution, using the synthetic benchmark TPC-H and the queries in a left-deep-tree
      model. The experiments investigate the execution time and resources like network
      and memory for a different number of nodes. The evaluation was executed in a
      cluster of virtual machines orchestrated by Kubernetes in Microsoft Azure. The
      results show a performance gain of 40% when we double the resources and high
      network usage as a consequence of Broadcast.", "venue": "", "year": 2019, "referenceCount":
      30, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Perego2019ProcessingTI,\n
      author = {Vin\u00edcius Pittigliani Perego},\n title = {Processing theta-joins
      in streaming environments under the micro-batch model},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "101606218", "name": "Vin\u00edcius Pittigliani Perego"}]},
      {"paperId": "3efb6215ce80752e2e04b1577bbb65ba3cbd9bbc", "externalIds": {"CorpusId":
      266821221}, "corpusId": 266821221, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3efb6215ce80752e2e04b1577bbb65ba3cbd9bbc",
      "title": "An Edge-based Architecture for Phasor Measurements in Smart Grids",
      "abstract": "\u2014This paper investigates the application of Kuber-netes and
      Edge computing technologies to operate IT services in the context of power systems
      and smart grids. Traditional services for grid monitoring such as Phasor Measurement
      Units (PMUs) and Phasor Data Concentrators (PDCs) require a centralized architecture
      and a rigid networking infrastructure in order to properly function, which today
      is only achieved at the High Voltage (HV) transmission level. Furthermore, manual
      intervention is often the only option for PMUs/PDCs maintenance. In this work,
      the traditional PMU/PDC services were deployed as docker-containers in a decentralized
      Kubernetes cluster, which can represent any kind of geographically dispersed
      TCP/IP network. By leveraging remote orchestration, several key benefits are
      achieved: (1) no manual reconfiguration of the PMU-PDC communications upon network
      reconfiguration, (2) automatic PMU traffic redirection in case of PDC service
      redeployment in a different location, and (3) reduced data-loss upon PDC failure
      and enhanced overall system resiliency due to minimized ICT services down-time.",
      "venue": "", "year": null, "referenceCount": 19, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Misc{None,\n author = {Fulvio Risso},\n
      title = {An Edge-based Architecture for Phasor Measurements in Smart Grids}\n}\n"},
      "authors": [{"authorId": "2278270385", "name": "Fulvio Risso"}]}, {"paperId":
      "3efb6c3187ec81f8444844a35ab6140677fac101", "externalIds": {"DOI": "10.15514/ispras-2022-34(2)-10",
      "CorpusId": 251122032}, "corpusId": 251122032, "publicationVenue": {"id": "bcffa3da-5be9-4c53-984f-cc28c1c2c7a1",
      "name": "Proceedings of the Institute for System Programming of RAS", "alternate_names":
      ["Proc Inst Syst Program RA"], "issn": "2079-8156", "url": "https://ispranproceedings.elpub.ru/jour/index",
      "alternate_urls": ["http://www.ispras.ru/ru/proceedings/"]}, "url": "https://www.semanticscholar.org/paper/3efb6c3187ec81f8444844a35ab6140677fac101",
      "title": "Automated Object Storage Management Approach with Operator SDK and
      Custom Resource Definition", "abstract": "The work is devoted to the study of
      automation tools for managing stateful applications in the Kubernetes environment,
      particularly object storage systems. A review of existing management tools capable
      solving the set tasks is made. A comparative description of the considered tools
      based on review is given and a tool is selected that meets the introduced criteria:
      popularity, support form Kubernetes, reactivity of developed operator, additional
      features, and others. An approach to automatic object storage management using
      the Operator SDK and Custom Resource Definition is suggested. As a result of
      comprehensive comparative analysis of tools Kubebuilder, Juju, Metacontroller,
      Kudo and Operator SDK, the last one was chosen as a base of approach implementation.
      The architecture of the system for managing a containerized version of storage
      systems based on the Kubernetes platform and integrating the operator with a
      user monitoring system is proposed. The described approach is implemented in
      a software tool \u2013 an operator of the object data storage system resource.
      The paper describes the details of software implementation, the structure of
      the storage custom resource descriptor, and methods for testing the end system.
      As a result, an object storage management system based on the Kubernetes platform
      was created, which made it possible to reduce both labor costs for supporting
      and maintaining the system, and it\u2019s cost by reducing dependence on hardware.
      Moreover, described approach corresponds to such features of modern object storages
      as multi-tier, erasure coding support, geo-replication, cluster topology that
      is quite innovative among existing automated storage management approaches on
      Kubernetes platforms.", "venue": "Proceedings of the Institute for System Programming
      of RAS", "year": 2022, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ispranproceedings.elpub.ru/jour/article/download/1506/1338",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Review"], "publicationDate": null, "journal": {"name":
      "Proceedings of the Institute for System Programming of the RAS"}, "citationStyles":
      {"bibtex": "@Article{Stonozhenko2022AutomatedOS,\n author = {Kirill Stonozhenko
      and I. Nikiforov and Sergey Ustinov},\n booktitle = {Proceedings of the Institute
      for System Programming of RAS},\n journal = {Proceedings of the Institute for
      System Programming of the RAS},\n title = {Automated Object Storage Management
      Approach with Operator SDK and Custom Resource Definition},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2141610876", "name": "Kirill Stonozhenko"}, {"authorId":
      "153637853", "name": "I. Nikiforov"}, {"authorId": "2164897459", "name": "Sergey
      Ustinov"}]}, {"paperId": "3f1712b4a71f0a072f3996fb98b731a7e5965ef3", "externalIds":
      {"DBLP": "journals/tcc/KhanTAK23", "ArXiv": "2103.08983", "DOI": "10.1109/TCC.2021.3135757",
      "CorpusId": 245227484}, "corpusId": 245227484, "publicationVenue": {"id": "7fca7065-fa6f-490b-923e-3ffc07857f1c",
      "name": "IEEE Transactions on Cloud Computing", "type": "journal", "alternate_names":
      ["IEEE Trans Cloud Comput"], "issn": "2168-7161", "url": "https://www.computer.org/web/tcc",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6245519"]},
      "url": "https://www.semanticscholar.org/paper/3f1712b4a71f0a072f3996fb98b731a7e5965ef3",
      "title": "PerfSim: A Performance Simulator for Cloud Native Microservice Chains",
      "abstract": "Cloud native computing paradigm allows microservice-based applications
      to take advantage of cloud infrastructure in a scalable, reusable, and interoperable
      way. However, in a cloud native system, the vast number of configuration parameters
      and highly granular resource allocation policies can significantly impact the
      performance and deployment cost. For understanding and analyzing these implications
      in an easy, quick, and cost-effective way, we present PerfSim, a discrete-event
      simulator for approximating and predicting the performance of cloud native service
      chains in user-defined scenarios. To this end, we proposed a systematic approach
      for modeling the performance of microservices endpoint functions by collecting
      and analyzing their performance and network traces. With a combination of the
      extracted models and user-defined scenarios, PerfSim can then simulate the performance
      behavior of all services over a given period and provide an approximation for
      system KPIs, such as requests\u2019 average response time. Using the processing
      power of a single laptop, we evaluated both simulation accuracy and speed of
      PerfSim in 104 prevalent scenarios and compared the simulation results with
      the identical deployment in a real Kubernetes cluster. We achieved <inline-formula><tex-math
      notation=\"LaTeX\">$\\scriptstyle \\mathtt {\\sim }$</tex-math><alternatives><mml:math><mml:mstyle
      scriptlevel=\"1\" displaystyle=\"false\"><mml:mo>\u223c</mml:mo></mml:mstyle></mml:math><inline-graphic
      xlink:href=\"gokankhan-ieq1-3135757.gif\"/></alternatives></inline-formula>81-99%
      simulation accuracy in approximating the average response time of incoming requests
      and <inline-formula><tex-math notation=\"LaTeX\">$\\scriptstyle \\mathtt {\\sim
      }$</tex-math><alternatives><mml:math><mml:mstyle scriptlevel=\"1\" displaystyle=\"false\"><mml:mo>\u223c</mml:mo></mml:mstyle></mml:math><inline-graphic
      xlink:href=\"gokankhan-ieq2-3135757.gif\"/></alternatives></inline-formula>16-1200
      times speed-up factor for the simulation.", "venue": "IEEE Transactions on Cloud
      Computing", "year": 2021, "referenceCount": 57, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/6245519/6562694/09652084.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-03-16", "journal":
      {"name": "IEEE Transactions on Cloud Computing", "pages": "1395-1413", "volume":
      "11"}, "citationStyles": {"bibtex": "@Article{Khan2021PerfSimAP,\n author =
      {Michel Gokan Khan and J. Taheri and Auday Al-Dulaimy and A. Kassler},\n booktitle
      = {IEEE Transactions on Cloud Computing},\n journal = {IEEE Transactions on
      Cloud Computing},\n pages = {1395-1413},\n title = {PerfSim: A Performance Simulator
      for Cloud Native Microservice Chains},\n volume = {11},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "3408302", "name": "Michel Gokan Khan"}, {"authorId":
      "2383231", "name": "J. Taheri"}, {"authorId": "1492127297", "name": "Auday Al-Dulaimy"},
      {"authorId": "10281628", "name": "A. Kassler"}]}, {"paperId": "3f2b75b13aa13d94536bd2abcf3b5939088e1880",
      "externalIds": {"DOI": "10.1109/IEEECloudSummit52029.2021.00016", "CorpusId":
      245542087}, "corpusId": 245542087, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3f2b75b13aa13d94536bd2abcf3b5939088e1880",
      "title": "Framework for Analysing a Policy-driven Multi-Tenant Kubernetes Environment",
      "abstract": "Kubernetes (K8s) is gaining adoption in cloud computing for container
      management, deployment automation, and resource scheduling. As K8s matures,
      with increased stability and scalability, it is important to study how it can
      be effectively customized for use in different application scenarios. The focus
      of our work is on studying one of its main core components, kube-scheduler,
      which is in charge of scheduling pods on worker nodes. The K8s default scheduler
      implements the First Come First Serve (FCFS) algorithm as the pods are ordered
      and sequenced for execution based on the timestamp of when tasks arrive, when
      no priority is set to the pods. In this paper, we present a Policy-driven Multi-Tenant
      K8s (PMK) framework to study how policies of multiple tenants on resource requests
      and job arrivals affect fairness for the tenants individually in terms of makespan,
      average waiting time, and average turnaround time. PMK allows re-sequencing
      of tasks, submitted by multiple tenants, via well-known or customized scheduling
      algorithms before they enter the K8s scheduling queue. Our evaluation uses well-known
      algorithms such as Round Robin (RR), FCFS and Dominant Resource Fairness (DRF).
      In addition, we introduce a Cluster-Based Fairness (CBF) scheduling algorithm,
      which is a variation of DRF. CBF considers overall cluster utilization and resource
      availability to determine which task to choose from new requests. Our analysis
      shows that PMK can provide insights to cluster and cloud infrastructure managers
      on the factors affecting fairness and accordingly in some cases obtain 61.0%
      improvement in average waiting time for tenants with homogeneous individual
      demands. In addition, our customized CBF scheduling policy, when used with with
      PMK on K8s, can reduce overall cluster average waiting time by up to 4%.", "venue":
      "2021 IEEE Cloud Summit (Cloud Summit)", "year": 2021, "referenceCount": 16,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-10-01", "journal": {"name":
      "2021 IEEE Cloud Summit (Cloud Summit)", "pages": "49-56"}, "citationStyles":
      {"bibtex": "@Article{Beltre2021FrameworkFA,\n author = {Angel Beltre and Pankaj
      Saha and M. Govindaraju},\n booktitle = {2021 IEEE Cloud Summit (Cloud Summit)},\n
      journal = {2021 IEEE Cloud Summit (Cloud Summit)},\n pages = {49-56},\n title
      = {Framework for Analysing a Policy-driven Multi-Tenant Kubernetes Environment},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "8753780", "name": "Angel Beltre"},
      {"authorId": "2093824280", "name": "Pankaj Saha"}, {"authorId": "1678486", "name":
      "M. Govindaraju"}]}, {"paperId": "3f4537267241e1d4c971d05157e532aaea787d7d",
      "externalIds": {"MAG": "2901693060", "DBLP": "conf/asplos/ShenSSBDRW19", "DOI":
      "10.1145/3297858.3304016", "CorpusId": 88503315}, "corpusId": 88503315, "publicationVenue":
      {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99", "name": "International Conference
      on Architectural Support for Programming Languages and Operating Systems", "type":
      "conference", "alternate_names": ["ASPLOS", "Int Conf Archit Support Program
      Lang Oper Syst", "Archit Support Program Lang Oper Syst", "Architectural Support
      for Programming Languages and Operating Systems"], "url": "http://www.acm.org/sigplan/"},
      "url": "https://www.semanticscholar.org/paper/3f4537267241e1d4c971d05157e532aaea787d7d",
      "title": "X-Containers: Breaking Down Barriers to Improve Performance and Isolation
      of Cloud-Native Containers", "abstract": "\"Cloud-native\" container platforms,
      such as Kubernetes, have become an integral part of production cloud environments.
      One of the principles in designing cloud-native applications is called Single
      Concern Principle, which suggests that each container should handle a single
      responsibility well. In this paper, we propose X-Containers as a new security
      paradigm for isolating single-concerned cloud-native containers. Each container
      is run with a Library OS (LibOS) that supports multi-processing for concurrency
      and compatibility. A minimal exokernel ensures strong isolation with small kernel
      attack surface. We show an implementation of the X-Containers architecture that
      leverages Xen paravirtualization (PV) to turn Linux kernel into a LibOS. Doing
      so results in a highly efficient LibOS platform that does not require hardware-assisted
      virtualization, improves inter-container isolation, and supports binary compatibility
      and multi-processing. By eliminating some security barriers such as seccomp
      and Meltdown patch, X-Containers have up to 27X higher raw system call throughput
      compared to Docker containers, while also achieving competitive or superior
      performance on various benchmarks compared to recent container platforms such
      as Google''s gVisor and Intel''s Clear Containers.", "venue": "International
      Conference on Architectural Support for Programming Languages and Operating
      Systems", "year": 2019, "referenceCount": 50, "citationCount": 67, "influentialCitationCount":
      3, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3297858.3304016",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate":
      "2019-04-04", "journal": {"name": "Proceedings of the Twenty-Fourth International
      Conference on Architectural Support for Programming Languages and Operating
      Systems"}, "citationStyles": {"bibtex": "@Book{Shen2019XContainersBD,\n author
      = {Zhiming Shen and Zhen Sun and Gur-Eyal Sela and Eugene Bagdasaryan and Christina
      Delimitrou and R. V. Renesse and Hakim Weatherspoon},\n booktitle = {International
      Conference on Architectural Support for Programming Languages and Operating
      Systems},\n journal = {Proceedings of the Twenty-Fourth International Conference
      on Architectural Support for Programming Languages and Operating Systems},\n
      title = {X-Containers: Breaking Down Barriers to Improve Performance and Isolation
      of Cloud-Native Containers},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "7333401", "name": "Zhiming Shen"}, {"authorId": "2118238770", "name": "Zhen
      Sun"}, {"authorId": "34741544", "name": "Gur-Eyal Sela"}, {"authorId": "36103467",
      "name": "Eugene Bagdasaryan"}, {"authorId": "3234334", "name": "Christina Delimitrou"},
      {"authorId": "1696746", "name": "R. V. Renesse"}, {"authorId": "1712689", "name":
      "Hakim Weatherspoon"}]}, {"paperId": "3f60fe68ec05c643047d67493da0d9bc73bfd96a",
      "externalIds": {"MAG": "3033173872", "CorpusId": 226815509}, "corpusId": 226815509,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3f60fe68ec05c643047d67493da0d9bc73bfd96a",
      "title": "Dynamic Resources allocation using Priority Aware scheduling in Kubernetes",
      "abstract": "In current IT infrastructure, Microservices based architecture
      provides the loosely coupled services for the development, deployment of the
      application. In a microservice architecture container-based application runs
      on the cloud service provider to achieve business continuity. Hundreds of container-based
      applications are deployed on a daily basis in the service provider. In order
      to manage the containers and also to scale the application, there is a need
      for container orchestrator and currently the leading orchestrator tools in the
      market are Kubernetes, Dockerswarm and ApacheMesos. By default, Kubernetes schedule
      containers use the Bin-packing algorithm. The scheduler allocates the resources
      as per the availability vs demand in First fit first manner. In this research,
      we are trying to explore Application-aware scheduling. The mechanism involves
      allocating the containers based on priority with the custom python-based scheduler
      in Kubernetes architecture. Our results show that priority aware scheduler can
      allocate the resources without affecting the services as well as Kubernetes
      default scheduler.", "venue": "", "year": 2019, "referenceCount": 24, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2019-12-11",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Shelar2019DynamicRA,\n
      author = {Prasad Lahu Shelar},\n title = {Dynamic Resources allocation using
      Priority Aware scheduling in Kubernetes},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "2023601065", "name": "Prasad Lahu Shelar"}]}, {"paperId": "3f61c2b4f3cfe82ccaae17b96c800a1218a711ee",
      "externalIds": {"MAG": "3049730317", "DBLP": "journals/sensors/NguyenYKPK20",
      "PubMedCentral": "7471989", "DOI": "10.3390/s20164621", "CorpusId": 221240122,
      "PubMed": "32824508"}, "corpusId": 221240122, "publicationVenue": {"id": "3dbf084c-ef47-4b74-9919-047b40704538",
      "name": "Italian National Conference on Sensors", "type": "conference", "alternate_names":
      ["SENSORS", "IEEE Sens", "Ital National Conf Sens", "IEEE Sensors", "Sensors"],
      "issn": "1424-8220", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/3f61c2b4f3cfe82ccaae17b96c800a1218a711ee",
      "title": "Horizontal Pod Autoscaling in Kubernetes for Elastic Container Orchestration",
      "abstract": "Kubernetes, an open-source container orchestration platform, enables
      high availability and scalability through diverse autoscaling mechanisms such
      as Horizontal Pod Autoscaler (HPA), Vertical Pod Autoscaler and Cluster Autoscaler.
      Amongst them, HPA helps provide seamless service by dynamically scaling up and
      down the number of resource units, called pods, without having to restart the
      whole system. Kubernetes monitors default Resource Metrics including CPU and
      memory usage of host machines and their pods. On the other hand, Custom Metrics,
      provided by external software such as Prometheus, are customizable to monitor
      a wide collection of metrics. In this paper, we investigate HPA through diverse
      experiments to provide critical knowledge on its operational behaviors. We also
      discuss the essential difference between Kubernetes Resource Metrics (KRM) and
      Prometheus Custom Metrics (PCM) and how they affect HPA\u2019s performance.
      Lastly, we provide deeper insights and lessons on how to optimize the performance
      of HPA for researchers, developers, and system administrators working with Kubernetes
      in the future.", "venue": "Italian National Conference on Sensors", "year":
      2020, "referenceCount": 33, "citationCount": 70, "influentialCitationCount":
      6, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/1424-8220/20/16/4621/pdf?version=1597728858",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science", "Medicine"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Medicine",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2020-08-01", "journal": {"name": "Sensors
      (Basel, Switzerland)", "volume": "20"}, "citationStyles": {"bibtex": "@Article{Nguyen2020HorizontalPA,\n
      author = {Thanh-Tung Nguyen and Yu-Jin Yeom and Taehong Kim and Dae-Heon Park
      and Sehan Kim},\n booktitle = {Italian National Conference on Sensors},\n journal
      = {Sensors (Basel, Switzerland)},\n title = {Horizontal Pod Autoscaling in Kubernetes
      for Elastic Container Orchestration},\n volume = {20},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2214753753", "name": "Thanh-Tung Nguyen"}, {"authorId":
      "116623286", "name": "Yu-Jin Yeom"}, {"authorId": "2338970", "name": "Taehong
      Kim"}, {"authorId": "49777745", "name": "Dae-Heon Park"}, {"authorId": "2758210",
      "name": "Sehan Kim"}]}, {"paperId": "3f6308716589791909d5c193cb4b82639536ab0b",
      "externalIds": {"DBLP": "journals/computation/PanHMA22", "DOI": "10.3390/computation10120221",
      "CorpusId": 254912773}, "corpusId": 254912773, "publicationVenue": {"id": "38e26272-f1d7-470a-a99f-0b5884c9df6e",
      "name": "De Computis", "alternate_names": ["Comput"], "issn": "1886-1881", "url":
      "https://dialnet.unirioja.es/servlet/revista?clave_revista=6205&tipo_busqueda=CODIGO",
      "alternate_urls": ["http://decomputis.org/ojs/", "https://ideas.repec.org/s/dec/articl.html",
      "http://www.decomputis.org/"]}, "url": "https://www.semanticscholar.org/paper/3f6308716589791909d5c193cb4b82639536ab0b",
      "title": "Development of Raspberry Pi 4 B and 3 B+ Micro-Kubernetes Cluster
      and IoT System for Mosquito Research Applications", "abstract": "Detecting infected
      female mosquitoes can be vital when they transmit harmful diseases such as dengue,
      malaria, and others. Infected mosquitoes can lay hundreds of eggs in breeding
      locations, and newborns can transmit diseases to more victims. Hence, gathering
      and monitoring climate data and environmental conditions for mosquito research
      can be valuable in preventing mosquitoes from spreading diseases. To obtain
      microclimate data, users such as mosquito researchers may need weather stations
      in various locations and an inexpensive, effective IoT system for monitoring
      multiple specific locations. We can achieve this in each location by sending
      microclimate data from wireless sensor end-node devices to a nearby middle-node
      aggregator. Each location\u2019s aggregator can send the data to a cluster,
      such as a customized Raspberry Pi-based cluster with Micro-Kubernetes as its
      distributed operating system. The applications, such as the database and web
      server, can be wrapped up by docker containers and deployed as containerized
      applications on the cluster. This cluster can store the data, available to be
      accessed via Android and web applications. The results of this work show that
      the measurement data of the specific locations are more accurate than those
      from nearby third-party weather stations. This proposed IoT cluster system in
      this paper can be used to provide accurate microclimate data for the selected
      locations.", "venue": "De Computis", "year": 2022, "referenceCount": 28, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.mdpi.com/2079-3197/10/12/221/pdf?version=1671604848", "status":
      "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Environmental Science",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2022-12-16", "journal": {"name": "Comput.",
      "pages": "221", "volume": "10"}, "citationStyles": {"bibtex": "@Article{Pan2022DevelopmentOR,\n
      author = {Zhihao Pan and B. Hur and Kevin M Myles and Z. Adelman},\n booktitle
      = {De Computis},\n journal = {Comput.},\n pages = {221},\n title = {Development
      of Raspberry Pi 4 B and 3 B+ Micro-Kubernetes Cluster and IoT System for Mosquito
      Research Applications},\n volume = {10},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2087152029", "name": "Zhihao Pan"}, {"authorId": "31521582",
      "name": "B. Hur"}, {"authorId": "2169407493", "name": "Kevin M Myles"}, {"authorId":
      "5442559", "name": "Z. Adelman"}]}, {"paperId": "3f85da3bfa2779f808e66fc02bbbf89efdcbf25d",
      "externalIds": {"DBLP": "conf/IEEEcloud/KoutsovasilisVG21", "DOI": "10.1109/CLOUD53861.2021.00084",
      "CorpusId": 243943848}, "corpusId": 243943848, "publicationVenue": {"id": "406d9f60-417a-4dc5-a6b7-1fe4689a4ff7",
      "name": "IEEE International Conference on Cloud Computing", "type": "conference",
      "alternate_names": ["Int Conf Cloud Comput [services Soc", "CLOUD", "International
      Conference on Cloud Computing [Services Society]", "IEEE Int Conf Cloud Comput"]},
      "url": "https://www.semanticscholar.org/paper/3f85da3bfa2779f808e66fc02bbbf89efdcbf25d",
      "title": "A Holistic Approach to Data Access for Cloud-Native Analytics and
      Machine Learning", "abstract": "Cloud providers offer a variety of storage solutions
      for hosting data, both in price and in performance. For Analytics and machine
      learning applications, object storage services are the go-to solution for hosting
      the datasets that exceed tens of gigabytes in size. However, such a choice results
      in performance degradation for these applications and requires extra engineering
      effort in the form of code changes to access the data on remote storage. In
      this paper, we present a generic end-to-end solution that offers seamless data
      access for remote object storage services, transparent data caching within the
      compute infrastructure, and data-aware topologies that boost the performance
      of applications deployed in Kubernetes. We introduce a custom-implemented cache
      mechanism that supports all the requirements of the former and we demonstrate
      that our holistic solution leads up to 48% improvement for Spark implementation
      of the TPC-DS benchmark and up to 191% improvement for the training of deep
      learning models from the MLPerf benchmark suite.", "venue": "IEEE International
      Conference on Cloud Computing", "year": 2021, "referenceCount": 29, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2021-09-01", "journal":
      {"name": "2021 IEEE 14th International Conference on Cloud Computing (CLOUD)",
      "pages": "654-659"}, "citationStyles": {"bibtex": "@Article{Koutsovasilis2021AHA,\n
      author = {Panos K. Koutsovasilis and S. Venugopal and Yiannis Gkoufas and Christian
      Pinto},\n booktitle = {IEEE International Conference on Cloud Computing},\n
      journal = {2021 IEEE 14th International Conference on Cloud Computing (CLOUD)},\n
      pages = {654-659},\n title = {A Holistic Approach to Data Access for Cloud-Native
      Analytics and Machine Learning},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "3399212", "name": "Panos K. Koutsovasilis"}, {"authorId": "2291598", "name":
      "S. Venugopal"}, {"authorId": "2695362", "name": "Yiannis Gkoufas"}, {"authorId":
      "143771320", "name": "Christian Pinto"}]}, {"paperId": "3fd579a46dbc15d63e697165ee757f702206ed5a",
      "externalIds": {"CorpusId": 220261194}, "corpusId": 220261194, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/3fd579a46dbc15d63e697165ee757f702206ed5a",
      "title": "XOS: An Extensible Service Control Plane for a Micro-Service Architecture",
      "abstract": "XOS is a logically centralized, model-based service for operating
      micro-service based cloud applications. XOS complements cloud orchestration
      tools like Kubernetes, which manages the set of containers that \u200b implement
      \u200b each micro-service, focusing instead on managing the state necessary
      to \u200b configure and control \u200b the collection of micro-services as a
      whole, and doing so at the granularity of individual subscribers. In this sense,
      XOS can be thought of as augmenting the micro-service based architecture with
      an \u200b Extensible Service Control Plane \u200b . 1", "venue": "", "year":
      null, "referenceCount": 3, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Misc{None,\n title = {XOS: An
      Extensible Service Control Plane for a Micro-Service Architecture}\n}\n"}, "authors":
      []}, {"paperId": "3fdd5f05bc5562f10f7561bc16119a43063aba34", "externalIds":
      {"CorpusId": 261896858}, "corpusId": 261896858, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/3fdd5f05bc5562f10f7561bc16119a43063aba34",
      "title": "Leveraging Containers and OpenStack A Comprehensive Review", "abstract":
      "At CERN, several workloads run within containers provisioned by Magnum, these
      include: Reana/RecastThese tools provide a framework for executing reusable
      workflows in High Energy Physics. Containers offer the ability to package the
      analysis software and data in a single, easily shareable unit as well as easy
      scaling out both on-premises and using external resources. Work is scheduled
      as Kubernetes jobs based on Yadage Workflows supporting analysis and data preservation
      activities. single framework provides for easy views on usage accounting, ownership
      and quota. Manila storage drivers for Kubernetes allow transparent provisioning
      of file shares. This supports both the IT department in capacity planning and
      the experiment resource coordinators in defining the priorities for their working
      groups. Resource management policies such as reassignment or expiry of resources
      on departure of staff are handled in consistent workflows.", "venue": "", "year":
      2022, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Physics",
      "source": "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate":
      null, "journal": null, "citationStyles": {"bibtex": "@Inproceedings{None,\n
      title = {Leveraging Containers and OpenStack A Comprehensive Review},\n year
      = {2022}\n}\n"}, "authors": []}, {"paperId": "3ff6e893d1e79b2596ede28001a0f81629b6bcc1",
      "externalIds": {"MAG": "2952885177", "DBLP": "conf/icde/SabekCM19", "DOI": "10.1109/ICDE.2019.00192",
      "CorpusId": 157063375}, "corpusId": 157063375, "publicationVenue": {"id": "764e3630-ddac-4c21-af4b-9d32ffef082e",
      "name": "IEEE International Conference on Data Engineering", "type": "conference",
      "alternate_names": ["ICDE", "Int Conf Data Eng", "IEEE Int Conf Data Eng", "International
      Conference on Data Engineering"], "url": "http://www.wikicfp.com/cfp/program?id=1331"},
      "url": "https://www.semanticscholar.org/paper/3ff6e893d1e79b2596ede28001a0f81629b6bcc1",
      "title": "CRA: Enabling Data-Intensive Applications in Containerized Environments",
      "abstract": "Today, a modern data center hosts a wide variety of applications
      comprising batch, interactive, machine learning, and streaming applications.
      In this paper, we factor out the commonalities in a large majority of these
      applications, into a generic dataflow layer called Common Runtime for Applications
      (CRA). In parallel, another trend, with containerization technologies (e.g.,
      Docker), has taken a serious hold on cloud-scale data centers, with direct implications
      on building next generation of data center applications. Container orchestrators
      (e.g., Kubernetes) have made deployment a lot easy, and they solve many infrastructure
      level problems, e.g., service discovery, auto-restart, and replication. For
      best in class performance, there is a need to marry the next generation applications
      with containerization technologies. To that end, CRA leverages and builds upon
      the containerization and resource orchestration capabilities of Kubernetes/Docker,
      and makes it easy to build a wide range of cloud-edge applications on top. To
      the best of our knowledge, we are the first to present a cloud native runtime
      for building data center applications. We show the efficiency of CRA through
      various micro-benchmarking experiments.", "venue": "IEEE International Conference
      on Data Engineering", "year": 2019, "referenceCount": 6, "citationCount": 5,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2019-04-08", "journal":
      {"name": "2019 IEEE 35th International Conference on Data Engineering (ICDE)",
      "pages": "1762-1765"}, "citationStyles": {"bibtex": "@Article{Sabek2019CRAED,\n
      author = {Ibrahim Sabek and B. Chandramouli and U. F. Minhas},\n booktitle =
      {IEEE International Conference on Data Engineering},\n journal = {2019 IEEE
      35th International Conference on Data Engineering (ICDE)},\n pages = {1762-1765},\n
      title = {CRA: Enabling Data-Intensive Applications in Containerized Environments},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "2737145", "name": "Ibrahim Sabek"},
      {"authorId": "2241445", "name": "B. Chandramouli"}, {"authorId": "1856878",
      "name": "U. F. Minhas"}]}, {"paperId": "4019b748b1bb097f417951999cd627d0600ebfa5",
      "externalIds": {"DBLP": "conf/raid/SpahnHHKV23", "DOI": "10.1145/3607199.3607205",
      "CorpusId": 260384892}, "corpusId": 260384892, "publicationVenue": {"id": "e3577b87-36a2-4ea4-ad53-88a885af1223",
      "name": "International Symposium on Recent Advances in Intrusion Detection",
      "type": "conference", "alternate_names": ["Recent Adv Intrusion Detect", "Recent
      Advances in Intrusion Detection", "Int Symp Recent Adv Intrusion Detect", "RAID"],
      "url": "http://www.raid-symposium.org/"}, "url": "https://www.semanticscholar.org/paper/4019b748b1bb097f417951999cd627d0600ebfa5",
      "title": "Container Orchestration Honeypot: Observing Attacks in the Wild",
      "abstract": "Containers, a mechanism to package software and its dependencies
      into a single artifact, have helped fuel the rapid pace of technological advancements
      in the last few years. However, it is not always clear what the potential security
      risk of moving to the cloud and container-based technologies is. In this paper,
      we investigate exposed container orchestration services on the Internet: how
      many there are, and the attacks against them. We considered three groups of
      container-based software: Docker, Kubernetes, and workflow tools. In a measurement
      study, we scanned the Internet to identify vulnerable container and container-orchestration
      services running on default ports. Considering the scan data, we then designed
      a high-interaction honeypot to reveal where attackers tend to strike and what
      is being done against exposed instances. The honeypot is based on container
      orchestration tools installed on Ubuntu servers, behind a carefully constructed
      gateway, and using the default ports. Our honeypot attracted attackers within
      minutes of launch. In total, we collected 94 days of attack data and extracted
      associated indicators of compromise (IOCs), which are provided to the research
      community to enable further insights. Our empirical study measures the risk
      associated with container and container orchestration systems exposed on the
      Internet. The assessment is performed by leveraging a novel design for a high-interaction
      honeypot. Using the observed data, we extract fresh insights into malicious
      tools, tactics, and procedures used against exposed host systems. In addition,
      we make available to the research community a rich dataset of unencrypted malicious
      traffic.", "venue": "International Symposium on Recent Advances in Intrusion
      Detection", "year": 2023, "referenceCount": 56, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3607199.3607205",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Book", "JournalArticle", "Conference"], "publicationDate": "2023-10-16", "journal":
      {"name": "Proceedings of the 26th International Symposium on Research in Attacks,
      Intrusions and Defenses"}, "citationStyles": {"bibtex": "@Book{Spahn2023ContainerOH,\n
      author = {Noah Spahn and Christoffer Kruegel and N. Hanke and Thorsten Holz
      and G. Vigna},\n booktitle = {International Symposium on Recent Advances in
      Intrusion Detection},\n journal = {Proceedings of the 26th International Symposium
      on Research in Attacks, Intrusions and Defenses},\n title = {Container Orchestration
      Honeypot: Observing Attacks in the Wild},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2098079519", "name": "Noah Spahn"}, {"authorId": "94901545",
      "name": "Christoffer Kruegel"}, {"authorId": "2145220864", "name": "N. Hanke"},
      {"authorId": "144227650", "name": "Thorsten Holz"}, {"authorId": "1711242",
      "name": "G. Vigna"}]}, {"paperId": "40376eb4a983864a87dfd7de5331741bc8707067",
      "externalIds": {"DBLP": "conf/coins/GerritsKKFV21", "DOI": "10.1109/COINS51742.2021.9524264",
      "CorpusId": 237402730}, "corpusId": 237402730, "publicationVenue": {"id": "9d97da55-0f9c-455e-8459-48e8e36ba2e5",
      "name": "Coins", "type": "conference", "alternate_names": ["COINS", "International
      Conference on Omni-Layer Intelligent Systems", "International Conference Omni-Layer
      Intelligent Systems", "Int Conf Omni-layer Intell Syst"], "issn": "0010-0471"},
      "url": "https://www.semanticscholar.org/paper/40376eb4a983864a87dfd7de5331741bc8707067",
      "title": "A Blockchain cloud architecture deployment for an industrial IoT use
      case", "abstract": "This paper presents a blockchain cloud deployment for an
      industrial vehicle use case. Hyperledger Sawtooth is used as distributed ledger
      with Rancher and Kubernetes as container-orchestration. This paper aims to explore
      the feasibility and scalability of the use case in a real-world scenario cloud
      deployment. Also, the blockchain performances is analyzed by stressing the implementation
      with virtual IoT clients, changing the blockchain settings, number of peer members
      and editing the core software default parameters. Benchmarks will reveal that
      Hyperledger Sawtooth performance can be as high as 25 transaction per seconds
      for a network of 4 nodes with PBFT consensus. Results lead us to discuss the
      possible components reducing throughput and blockchain commit rate.", "venue":
      "Coins", "year": 2021, "referenceCount": 20, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2021-08-23", "journal": {"name": "2021 IEEE International Conference on Omni-Layer
      Intelligent Systems (COINS)", "pages": "1-6"}, "citationStyles": {"bibtex":
      "@Article{Gerrits2021ABC,\n author = {L. Gerrits and Edouard Kilimou and Roland
      Kromes and Lionel Faure and F. Verdier},\n booktitle = {Coins},\n journal =
      {2021 IEEE International Conference on Omni-Layer Intelligent Systems (COINS)},\n
      pages = {1-6},\n title = {A Blockchain cloud architecture deployment for an
      industrial IoT use case},\n year = {2021}\n}\n"}, "authors": [{"authorId": "1471442550",
      "name": "L. Gerrits"}, {"authorId": "2125476557", "name": "Edouard Kilimou"},
      {"authorId": "117943050", "name": "Roland Kromes"}, {"authorId": "2125457815",
      "name": "Lionel Faure"}, {"authorId": "1811723", "name": "F. Verdier"}]}, {"paperId":
      "40695ea0b3e80d4dac74de767f0687718919fa1f", "externalIds": {"DBLP": "conf/supercomputer/ZervasCSKB22",
      "DOI": "10.1007/978-3-031-23220-6_24", "CorpusId": 255547877}, "corpusId": 255547877,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/40695ea0b3e80d4dac74de767f0687718919fa1f",
      "title": "Virtual Clusters: Isolated, Containerized HPC Environments in Kubernetes",
      "abstract": null, "venue": "ISC Workshops", "year": 2022, "referenceCount":
      0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "347-357"}, "citationStyles": {"bibtex": "@Article{Zervas2022VirtualCI,\n
      author = {G. Zervas and A. Chazapis and Yannis Sfakianakis and C. Kozanitis
      and A. Bilas},\n booktitle = {ISC Workshops},\n pages = {347-357},\n title =
      {Virtual Clusters: Isolated, Containerized HPC Environments in Kubernetes},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "49677511", "name": "G. Zervas"},
      {"authorId": "2563159", "name": "A. Chazapis"}, {"authorId": "2801573", "name":
      "Yannis Sfakianakis"}, {"authorId": "3221688", "name": "C. Kozanitis"}, {"authorId":
      "1805177", "name": "A. Bilas"}]}, {"paperId": "40ba39caa94644a7743be7a36a5cd24f3cfaded7",
      "externalIds": {"DBLP": "journals/jip/KudoKGW22", "DOI": "10.2197/ipsjjip.30.626",
      "CorpusId": 252293597}, "corpusId": 252293597, "publicationVenue": {"id": "4c41a35f-a842-4861-9935-edfef1b3cbd0",
      "name": "Journal of Information Processing", "type": "journal", "alternate_names":
      ["J Inf Process"], "issn": "0387-6101", "alternate_issns": ["1882-6652", "0387-5806"],
      "url": "https://www.jstage.jst.go.jp/browse/ipsjjip/list/-char/en"}, "url":
      "https://www.semanticscholar.org/paper/40ba39caa94644a7743be7a36a5cd24f3cfaded7",
      "title": "Application Integrity Protection on Kubernetes cluster based on Manifest
      Signature Verification", "abstract": null, "venue": "Journal of Information
      Processing", "year": 2022, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.jstage.jst.go.jp/article/ipsjjip/30/0/30_626/_pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "J. Inf. Process.", "pages": "626-635", "volume": "30"}, "citationStyles":
      {"bibtex": "@Article{Kudo2022ApplicationIP,\n author = {Ruriko Kudo and Hirokuni
      Kitahara and Kugamoorthy Gajananan and Yuji Watanabe},\n booktitle = {Journal
      of Information Processing},\n journal = {J. Inf. Process.},\n pages = {626-635},\n
      title = {Application Integrity Protection on Kubernetes cluster based on Manifest
      Signature Verification},\n volume = {30},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "40955730", "name": "Ruriko Kudo"}, {"authorId": "2059124149",
      "name": "Hirokuni Kitahara"}, {"authorId": "2282094", "name": "Kugamoorthy Gajananan"},
      {"authorId": "2111725165", "name": "Yuji Watanabe"}]}, {"paperId": "40c4d8336b076e1f3ca3b2fbf7018a0a9acbf9d8",
      "externalIds": {"DOI": "10.1109/JCC56315.2022.00014", "CorpusId": 252557986},
      "corpusId": 252557986, "publicationVenue": {"id": "28aa8a6f-d172-4e36-bd3a-aa9e6fc32a9c",
      "name": "Fall Joint Computer Conference", "type": "conference", "alternate_names":
      ["Fall joint computer conference", "Fall jt comput conf", "Fall Jt Comput Conf",
      "FJCC", "JCC"]}, "url": "https://www.semanticscholar.org/paper/40c4d8336b076e1f3ca3b2fbf7018a0a9acbf9d8",
      "title": "MRASS: Dynamic Task Scheduling enabled High Multi-cluster Resource
      Availability in JointCloud", "abstract": "As the new paradigm of JointCloud
      Computing matures, enterprises are trying to build multiple Kubernetes clusters
      on different clouds to deploy tasks, with the advantages of disaster backup,
      low latency, and avoidance of single vendor lock-in, etc. Tasks in a JointCloud
      environment, always have highly diversified resource demands on CPU, memory,
      disk, and network. However, the mismatch between these tasks and heterogeneous
      clusters can easily cause many resource fragments, resulting in low resource
      availability. Therefore, the task scheduling strategy is the key to solving
      the above problem. The existing task schedule strategies for multi-clusters
      are always aiming at clusters\u2019 load balancing instead of increasing the
      resource availability. In this paper, we propose a dynamic task scheduling framework
      with the design of multi-cluster resource high-availability schedule strategy
      (MRASS) based on historical task resource consumption. MRASS conducts a cooperation
      model between multiple clusters and tasks, and proposes an indicator of resource
      availability, which is used to optimize the proportion of remaining resources
      of the cluster to keep approaching the proportion of resource requirements of
      future tasks, thereby execute more tasks within limited resources. Extensive
      numerical results confirm that the strategy has stable performance and performs
      well with different initial cluster resource setting, task resource type and
      task number. Compared with the existing algorithm, MRASS can place up to 20%
      more tasks, and the success rate of first placement of tasks can reach over
      98%.", "venue": "Fall Joint Computer Conference", "year": 2022, "referenceCount":
      20, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-08-01",
      "journal": {"name": "2022 IEEE International Conference on Joint Cloud Computing
      (JCC)", "pages": "43-50"}, "citationStyles": {"bibtex": "@Conference{Gao2022MRASSDT,\n
      author = {Fei Gao and Huaimin Wang and Peichang Shi and Xiang Fu and Tao Zhong
      and Jinzhu Kong},\n booktitle = {Fall Joint Computer Conference},\n journal
      = {2022 IEEE International Conference on Joint Cloud Computing (JCC)},\n pages
      = {43-50},\n title = {MRASS: Dynamic Task Scheduling enabled High Multi-cluster
      Resource Availability in JointCloud},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2153409165", "name": "Fei Gao"}, {"authorId": "2155242986", "name": "Huaimin
      Wang"}, {"authorId": "40547819", "name": "Peichang Shi"}, {"authorId": "2119032567",
      "name": "Xiang Fu"}, {"authorId": "2073360519", "name": "Tao Zhong"}, {"authorId":
      "47574658", "name": "Jinzhu Kong"}]}, {"paperId": "40e9ecd94713aa6756e6ae128982ed0d572d3951",
      "externalIds": {"DOI": "10.36244/icj.2023.5.11", "CorpusId": 261571707}, "corpusId":
      261571707, "publicationVenue": {"id": "783f64b6-a804-48d9-9263-2f4ece667d3f",
      "name": "Infocommunications journal", "type": "journal", "alternate_names":
      ["Infocommunications j"], "issn": "0018-2028", "url": "https://www.hiradastechnika.hu/"},
      "url": "https://www.semanticscholar.org/paper/40e9ecd94713aa6756e6ae128982ed0d572d3951",
      "title": "Challenges in service discovery for microservices deployed in a Kubernetes
      cluster \u2013 a case stud", "abstract": "With Kubernetes emerging as one of
      the most popular infrastructures in the cloud-native era, the utilization of
      containerization and tools alongside Kubernetes is steadily gaining traction.
      The main goal of this paper is to evaluate the service discovery mechanisms
      and DNS management (CoreDNS) of Kubernetes, and to present a general study of
      an experiment on service discovery challenges. In large scale Kubernetes clusters,
      running pods, services, requests, and workloads can be substantial. The increased
      number of HTTP-requests often result in resource utilization concerns, e.g.,
      spikes of errors [24], [25]. This paper investigates potential optimization
      strategies for enhancing the performance and scalability of CoreDNS in Kubernetes.
      We propose a solution to address the concerns related to CoreDNS and provide
      a detailed explanation of how our implementation enhances service discovery
      functionality. Experimental results in a real-world case show that our solution
      for the CoreDNS ensures consistency of the workload. Compared with the default
      CoreDNS configuration, our customized approach achieves better performance in
      terms of number of errors for requests, average latency of DNS requests, and
      resource usage rate.", "venue": "Infocommunications journal", "year": 2023,
      "referenceCount": 29, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://www.infocommunications.hu/documents/169298/4882687/InfocomJournal_2023_SpecISS_ICAI_11.pdf",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"name": "Infocommunications journal"}, "citationStyles": {"bibtex":
      "@Article{Erdenebat2023ChallengesIS,\n author = {Baasanjargal Erdenebat and
      Bayarjargal Bud and Tam\u00e1s Kozsik},\n booktitle = {Infocommunications journal},\n
      journal = {Infocommunications journal},\n title = {Challenges in service discovery
      for microservices deployed in a Kubernetes cluster \u2013 a case stud},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "1752871161", "name": "Baasanjargal
      Erdenebat"}, {"authorId": "2238104857", "name": "Bayarjargal Bud"}, {"authorId":
      "2269210362", "name": "Tam\u00e1s Kozsik"}]}, {"paperId": "41038cb1ccb0957c4cd17afadb0128715706d88e",
      "externalIds": {"MAG": "2998959533", "DOI": "10.33365/jti.v14i1.501", "CorpusId":
      214368243}, "corpusId": 214368243, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/41038cb1ccb0957c4cd17afadb0128715706d88e",
      "title": "PENGAMANAN CONTAINER ORCHESTRATION BERBASIS KUBERNETES DI LEMBAGA
      PENERBANGAN DAN ANTARIKSA NASIONAL (LAPAN)", "abstract": "Melalui Perpres Nomor
      39 tahun 2019 tentang Satu Data Indonesia, Lembaga Penerbangan dan Antariksa
      Nasional (LAPAN) berkomitmen untuk membangun program Satu Data di lingkungan
      LAPAN, program tersebut dinamakan One Space. Teknologi container platform hadir
      di LAPAN sebagai pembaruan bagi teknologi sebelumnya (monolithic) dan menjadi
      salah satu solusi untuk mendukung komitmen pembangunan One Space. Salah satu
      instrumen didalam teknologi container platform adalah container orchestration,
      dimana perannya adalah melakukan proses otomasi dan pengelolaan container. Container
      orchestration dirancang untuk memberikan kelebihan dalam proses deployment terhadap
      suatu sistem informasi terdistribusi, sehingga menjadi lebih cepat, efisien
      dan tangkas. Penelitian ini bertujuan untuk mengetahui tindakan pengamanan yang
      perlu dilakukan pada container orchestration berbasis Kubernetes. Data kualitatif
      dikumpulkan melalui metode studi literatur, observasi, dan wawancara. Dari hasil
      pengumpulan data, diperoleh 18 tindakan pengamanan untuk berikutnya akan dinilaikan.
      Tahap akhir dilakukan proses prioritasi dengan metode MoSCoW melalui sebuah
      forum group discussion (FGD) bersama dengan para pakar IT dan praktisi IT di
      lingkungan LAPAN untuk mengetahui tingkat rekomendasi pada masing-masing tindakan
      pengamanan yang dapat diterapkan di lingkungan LAPAN dengan memperhastikan beberapa
      parameter. Hasil penelitian ini diperoleh 7 tindakan pengamanan dengan tingkat
      must have, 10 tindakan pengamanan dengan tingkat should have, dan 1 tindakan
      pengamanan dengan tingkat could have.", "venue": "", "year": 2020, "referenceCount":
      0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Physics"], "s2FieldsOfStudy": [{"category":
      "Physics", "source": "external"}], "publicationTypes": null, "publicationDate":
      "2020-01-15", "journal": {"name": "", "pages": "1-8", "volume": "14"}, "citationStyles":
      {"bibtex": "@Inproceedings{Haris2020PENGAMANANCO,\n author = {Arief Indriarto
      Haris and Rd. Angga Ferianda and Budhi Riyanto and Fajar Nugraha and Januar
      Abadi},\n pages = {1-8},\n title = {PENGAMANAN CONTAINER ORCHESTRATION BERBASIS
      KUBERNETES DI LEMBAGA PENERBANGAN DAN ANTARIKSA NASIONAL (LAPAN)},\n volume
      = {14},\n year = {2020}\n}\n"}, "authors": [{"authorId": "89802128", "name":
      "Arief Indriarto Haris"}, {"authorId": "1583645838", "name": "Rd. Angga Ferianda"},
      {"authorId": "1579053199", "name": "Budhi Riyanto"}, {"authorId": "2065248167",
      "name": "Fajar Nugraha"}, {"authorId": "1583621331", "name": "Januar Abadi"}]},
      {"paperId": "4144c2213394ef924b0ee478796b91c663873101", "externalIds": {"DBLP":
      "conf/eurosys/JefferyHM21", "ArXiv": "2104.02423", "DOI": "10.1145/3434770.3459730",
      "CorpusId": 233033937}, "corpusId": 233033937, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4144c2213394ef924b0ee478796b91c663873101",
      "title": "Rearchitecting Kubernetes for the Edge", "abstract": "Recent years
      have seen Kubernetes emerge as a primary choice for container orchestration.
      Kubernetes largely targets the cloud environment but new use cases require performant,
      available and scalable orchestration at the edge. Kubernetes stores all cluster
      state in etcd, a strongly consistent key-value store. We find that at larger
      etcd cluster sizes, offering higher availability, write request latency significantly
      increases and throughput decreases similarly. Coupled with approximately 30%
      of Kubernetes requests being writes, this directly impacts the request latency
      and availability of Kubernetes, reducing its suitability for the edge. We revisit
      the requirement of strong consistency and propose an eventually consistent approach
      instead. This enables higher performance, availability and scalability whilst
      still supporting the broad needs of Kubernetes. This aims to make Kubernetes
      much more suitable for performance-critical, dynamically-scaled edge solutions.",
      "venue": "EdgeSys@EuroSys", "year": 2021, "referenceCount": 39, "citationCount":
      35, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3434770.3459730", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2021-04-06", "journal": {"name":
      "Proceedings of the 4th International Workshop on Edge Systems, Analytics and
      Networking"}, "citationStyles": {"bibtex": "@Article{Jeffery2021RearchitectingKF,\n
      author = {A. Jeffery and H. Howard and R. Mortier},\n booktitle = {EdgeSys@EuroSys},\n
      journal = {Proceedings of the 4th International Workshop on Edge Systems, Analytics
      and Networking},\n title = {Rearchitecting Kubernetes for the Edge},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "2064222200", "name": "A. Jeffery"},
      {"authorId": "143982431", "name": "H. Howard"}, {"authorId": "1679929", "name":
      "R. Mortier"}]}, {"paperId": "4148c8b61db8a5eb90668f1306aac57404e5c6da", "externalIds":
      {"MAG": "3101948310", "DBLP": "journals/corr/abs-2003-00925", "ArXiv": "2003.00925",
      "DOI": "10.1007/s00170-020-06094-z", "CorpusId": 211678433}, "corpusId": 211678433,
      "publicationVenue": {"id": "69c55941-42d0-4d07-bc3f-9a98c51b8fe7", "name": "The
      International Journal of Advanced Manufacturing Technology", "type": "journal",
      "alternate_names": ["Robotersysteme", "Int J Adv Manuf Technol"], "issn": "0268-3768",
      "alternate_issns": ["0178-0026"], "url": "http://www.springer.com/170", "alternate_urls":
      ["https://link.springer.com/journal/170", "http://www.springer.com/engineering/production+eng/journal/170?changeHeader"]},
      "url": "https://www.semanticscholar.org/paper/4148c8b61db8a5eb90668f1306aac57404e5c6da",
      "title": "CAAI\u2014a cognitive architecture to introduce artificial intelligence
      in cyber-physical production systems", "abstract": null, "venue": "The International
      Journal of Advanced Manufacturing Technology", "year": 2020, "referenceCount":
      76, "citationCount": 14, "influentialCitationCount": 1, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://link.springer.com/content/pdf/10.1007/s00170-020-06094-z.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-02-26", "journal":
      {"name": "The International Journal of Advanced Manufacturing Technology", "pages":
      "609 - 626", "volume": "111"}, "citationStyles": {"bibtex": "@Article{Fischbach2020CAAIaCA,\n
      author = {A. Fischbach and Jan Strohschein and Andreas Bunte and J\u00f6rg Stork
      and Heide Faeskorn-Woyke and N. Moriz and T. Bartz-Beielstein},\n booktitle
      = {The International Journal of Advanced Manufacturing Technology},\n journal
      = {The International Journal of Advanced Manufacturing Technology},\n pages
      = {609 - 626},\n title = {CAAI\u2014a cognitive architecture to introduce artificial
      intelligence in cyber-physical production systems},\n volume = {111},\n year
      = {2020}\n}\n"}, "authors": [{"authorId": "98892542", "name": "A. Fischbach"},
      {"authorId": "1411153156", "name": "Jan Strohschein"}, {"authorId": "36810172",
      "name": "Andreas Bunte"}, {"authorId": "33342520", "name": "J\u00f6rg Stork"},
      {"authorId": "1410606319", "name": "Heide Faeskorn-Woyke"}, {"authorId": "2441029",
      "name": "N. Moriz"}, {"authorId": "1393588417", "name": "T. Bartz-Beielstein"}]},
      {"paperId": "4163bdd019beaec6481042813eb4193681e5bf6b", "externalIds": {"DBLP":
      "conf/sc/ChakrabortyMJ20", "DOI": "10.1109/CANOPIEHPC51917.2020.00007", "CorpusId":
      228082513}, "corpusId": 228082513, "publicationVenue": {"id": "2ce8fe1d-969b-4e75-9d3f-897ce25c01e5",
      "name": "International Workshop on Containers and New Orchestration Paradigms
      for Isolated Environments in HPC", "type": "conference", "alternate_names":
      ["CANOPIE-HPC", "Int Workshop Contain New Orch Paradig Isol Environ HPC"]},
      "url": "https://www.semanticscholar.org/paper/4163bdd019beaec6481042813eb4193681e5bf6b",
      "title": "Enabling Seamless Execution of Computational and Data Science Workflows
      on HPC and Cloud with the Popper Container-native Automation Engine", "abstract":
      "The problem of reproducibility and replication in scientific research is quite
      prevalent to date. Researchers working in fields of computational science often
      find it difficult to reproduce experiments from artifacts like code, data, diagrams,
      and results which are left behind by the previous researchers. The code developed
      on one machine often fails to run on other machines due to differences in hardware
      architecture, OS, software dependencies, among others. This is accompanied by
      the difficulty in understanding how artifacts are organized, as well as in using
      them in the correct order. Software containers (also known as Linux containers)
      can be used to address some of these problems, and thus researchers and developers
      have built scientific workflow engines that execute the steps of a workflow
      in separate containers. Existing container-native workflow engines assume the
      availability of infrastructure deployed in the cloud or HPC centers. In this
      paper, we present Popper, a container-native workflow engine that does not assume
      the presence of a Kubernetes cluster or any service other than a container engine
      such as Docker or Podman. We introduce the design and architecture of Popper
      and describe how it abstracts away the complexity of multiple container engines
      and resource managers, enabling users to focus only on writing workflow logic.
      With Popper, researchers can build and validate workflows easily in almost any
      environment of their choice including local machines, Slurm based HPC clusters,
      CI services, or Kubernetes based cloud computing environments. To exemplify
      the suitability of this workflow engine, we present a case study where we take
      an example from machine learning and seamlessly execute it in multiple environments
      by implementing a Popper workflow for it.", "venue": "International Workshop
      on Containers and New Orchestration Paradigms for Isolated Environments in HPC",
      "year": 2020, "referenceCount": 84, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-11-01", "journal": {"name": "2020 2nd International Workshop on Containers
      and New Orchestration Paradigms for Isolated Environments in HPC (CANOPIE-HPC)",
      "pages": "8-18"}, "citationStyles": {"bibtex": "@Article{Chakraborty2020EnablingSE,\n
      author = {Jayjeet Chakraborty and C. Maltzahn and I. Jimenez},\n booktitle =
      {International Workshop on Containers and New Orchestration Paradigms for Isolated
      Environments in HPC},\n journal = {2020 2nd International Workshop on Containers
      and New Orchestration Paradigms for Isolated Environments in HPC (CANOPIE-HPC)},\n
      pages = {8-18},\n title = {Enabling Seamless Execution of Computational and
      Data Science Workflows on HPC and Cloud with the Popper Container-native Automation
      Engine},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2047518962", "name":
      "Jayjeet Chakraborty"}, {"authorId": "3198700", "name": "C. Maltzahn"}, {"authorId":
      "145263954", "name": "I. Jimenez"}]}, {"paperId": "416ce88c7bc3e6300f062b4e8b25cc8fda74eaa4",
      "externalIds": {"CorpusId": 256241491}, "corpusId": 256241491, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/416ce88c7bc3e6300f062b4e8b25cc8fda74eaa4",
      "title": "The Building Operating System (BOS): IoT Devices and Systems Aggregator",
      "abstract": "The Building Operating System (BOS) is a platform to provide standardized
      Web API sets over heterogeneous vendor-specific APIs for controlling and monitoring
      building facilities. The jq-based parser for transforming JSON data and an API
      bridge mechanism provide a method for both direct and indirect access to underlying
      IoT devices or services, allowing existing building facility management systems
      to collaborate with the BOS. The BOS entrusts the third-party OpenID connect
      providers and the access manager of the target facility, for the API user authentication
      and access authorization. The BOS is implemented as microservices and deployed
      on a Kubernetes cluster. Through our case study of applying BOS to heterogeneous
      IoT devices from multiple vendors, we have confirmed that existing devices can
      be accessed via standardized Web API sets by direct API conversions and indirect
      access using the API bridge.", "venue": "2022 TRON Symposium (TRONSHOW)", "year":
      2022, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2022-12-07",
      "journal": {"name": "2022 TRON Symposium (TRONSHOW)", "pages": "1-9"}, "citationStyles":
      {"bibtex": "@Article{Nakamura2022TheBO,\n author = {K. Nakamura and T. Yashiro
      and Jee-Eun Kim and S. Asano and Ken Sakamura},\n booktitle = {2022 TRON Symposium
      (TRONSHOW)},\n journal = {2022 TRON Symposium (TRONSHOW)},\n pages = {1-9},\n
      title = {The Building Operating System (BOS): IoT Devices and Systems Aggregator},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2110884710", "name": "K. Nakamura"},
      {"authorId": "2165641", "name": "T. Yashiro"}, {"authorId": "1922630910", "name":
      "Jee-Eun Kim"}, {"authorId": "2061029168", "name": "S. Asano"}, {"authorId":
      "1931805302", "name": "Ken Sakamura"}]}, {"paperId": "41788d83f189eee1e8f8861b9b8fab8653eb37b2",
      "externalIds": {"MAG": "2582492721", "DOI": "10.1007/978-1-4842-2598-1", "CorpusId":
      63734016}, "corpusId": 63734016, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/41788d83f189eee1e8f8861b9b8fab8653eb37b2",
      "title": "Kubernetes management design patterns", "abstract": null, "venue":
      "", "year": 2017, "referenceCount": 0, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Business", "source": "s2-fos-model"}], "publicationTypes": null,
      "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Vohra2017KubernetesMD,\n author = {Deepak Vohra},\n
      title = {Kubernetes management design patterns},\n year = {2017}\n}\n"}, "authors":
      [{"authorId": "3026624", "name": "Deepak Vohra"}]}, {"paperId": "418adb81474d90d5fe7eea11f9b7aca215a6d310",
      "externalIds": {"DBLP": "conf/gistam/VithlaniDLPMZB20", "MAG": "3027866767",
      "DOI": "10.5220/0009816003180325", "CorpusId": 219324289}, "corpusId": 219324289,
      "publicationVenue": {"id": "c83b79cc-1dd2-4398-b7c0-7aa8dff254c0", "name": "International
      Conference on Geographical Information Systems Theory, Applications and Management",
      "type": "conference", "alternate_names": ["GISTAM", "Int Conf Geogr Inf Syst
      Theory Appl Manag"], "url": "http://www.gistam.org"}, "url": "https://www.semanticscholar.org/paper/418adb81474d90d5fe7eea11f9b7aca215a6d310",
      "title": "Scale Drone Mapping on K8S: Auto-scale Drone Imagery Processing on
      Kubernetes-orchestrated On-premise Cloud-computing Platform", "abstract": ":
      Aerial images acquired using drone-based imaging sensors can be processed by
      photogrammetry toolkits to create geometrically corrected 2D orthophoto and/or
      3D models. This is a crucial step for many of the ever-evolving civil applications
      of drones such as precision agriculture and surveying. Nevertheless, limited
      computational resources become bottleneck in providing these results quickly.
      Cloud computing helps in such scenarios because of its value-added features,
      namely virtualization, elasticity, high performance and distributed computing
      for the web-based image processing. The containerization approach plays a vital
      role in cloud computing by providing operational ef\ufb01ciency. Container orchestration
      engine, Kubernetes, not only provides template-based or GUI-based service deployment
      but also better monitoring, log querying and auto-scaling. The present work
      displays a scalable photogrammetry service, deployed on a Kubernetes-orchestrated
      on-premise cluster. This reference implementation on Kubernetes enables the
      parallel processing of large datasets in less time than a single computer using
      the free and open-source toolkit OpenDroneMap.", "venue": "International Conference
      on Geographical Information Systems Theory, Applications and Management", "year":
      2020, "referenceCount": 17, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Review"], "publicationDate": null, "journal":
      {"pages": "318-325"}, "citationStyles": {"bibtex": "@Article{Vithlani2020ScaleDM,\n
      author = {Hemang Narendra Vithlani and Marcel Dogotari and Olee Hoi Ying Lam
      and M. Pr\u00fcm and B. Melville and Frank Zimmer and R. Becker},\n booktitle
      = {International Conference on Geographical Information Systems Theory, Applications
      and Management},\n pages = {318-325},\n title = {Scale Drone Mapping on K8S:
      Auto-scale Drone Imagery Processing on Kubernetes-orchestrated On-premise Cloud-computing
      Platform},\n year = {2020}\n}\n"}, "authors": [{"authorId": "1572523194", "name":
      "Hemang Narendra Vithlani"}, {"authorId": "79955188", "name": "Marcel Dogotari"},
      {"authorId": "30772740", "name": "Olee Hoi Ying Lam"}, {"authorId": "72125967",
      "name": "M. Pr\u00fcm"}, {"authorId": "47997179", "name": "B. Melville"}, {"authorId":
      "144084779", "name": "Frank Zimmer"}, {"authorId": "2054683725", "name": "R.
      Becker"}]}, {"paperId": "41938faf5485f5af19c6e4129ccea26d5c8649e8", "externalIds":
      {"MAG": "2800508404", "DBLP": "conf/xsede/ZoncaS18", "ArXiv": "1805.04781",
      "DOI": "10.1145/3219104.3219122", "CorpusId": 44124938}, "corpusId": 44124938,
      "publicationVenue": {"id": "b85446b1-9eb7-4d6d-bfde-e2b0c6b2cfb6", "name": "Practice
      and Experience in Advanced Research Computing", "type": "conference", "alternate_names":
      ["PEARC", "Pract Exp Adv Res Comput"], "url": "https://www.pearc.org/"}, "url":
      "https://www.semanticscholar.org/paper/41938faf5485f5af19c6e4129ccea26d5c8649e8",
      "title": "Deploying Jupyter Notebooks at scale on XSEDE resources for Science
      Gateways and workshops", "abstract": "Jupyter Notebooks have become a mainstream
      tool for interactive computing in every field of science. Jupyter Notebooks
      are suitable as companion applications for Science Gateways, providing more
      flexibility and post-processing capability to the users. Moreover they are often
      used in training events and workshops to provide immediate access to a pre-configured
      interactive computing environment. The Jupyter team released the JupyterHub
      web application to provide a platform where multiple users can login and access
      a Jupyter Notebook environment. When the number of users and memory requirements
      are low, it is easy to setup JupyterHub on a single server. However, setup becomes
      more complicated when we need to serve Jupyter Notebooks at scale to tens or
      hundreds of users. In this paper we will present three strategies for deploying
      JupyterHub at scale on XSEDE resources. All options share the deployment of
      JupyterHub on a Virtual Machine on XSEDE Jetstream. In the first scenario, JupyterHub
      connects to a supercomputer and launches a single node job on behalf of each
      user and proxies back the Notebook from the computing node back to the user''s
      browser. In the second scenario, implemented in the context of a XSEDE consultation
      for the IRIS consortium for Seismology, we deploy Docker in Swarm mode to coordinate
      many XSEDE Jetstream virtual machines to provide Notebooks with persistent storage
      and quota. In the last scenario we install the Kubernetes containers orchestration
      framework on Jetstream to provide a fault-tolerant JupyterHub deployment with
      a distributed filesystem and capability to scale to thousands of users. In the
      conclusion section we provide a link to step-by-step tutorials complete with
      all the necessary commands and configuration files to replicate these deployments.",
      "venue": "Practice and Experience in Advanced Research Computing", "year": 2018,
      "referenceCount": 13, "citationCount": 12, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3219104.3219122",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book", "Review"],
      "publicationDate": "2018-05-12", "journal": {"name": "Proceedings of the Practice
      and Experience on Advanced Research Computing"}, "citationStyles": {"bibtex":
      "@Article{Zonca2018DeployingJN,\n author = {A. Zonca and R. Sinkovits},\n booktitle
      = {Practice and Experience in Advanced Research Computing},\n journal = {Proceedings
      of the Practice and Experience on Advanced Research Computing},\n title = {Deploying
      Jupyter Notebooks at scale on XSEDE resources for Science Gateways and workshops},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "103231899", "name": "A. Zonca"},
      {"authorId": "2940708", "name": "R. Sinkovits"}]}, {"paperId": "419467b9b3e675e1c224743f44c3dccd922db60d",
      "externalIds": {"MAG": "3137229879", "DOI": "10.32438/WPE.412021", "CorpusId":
      233670500}, "corpusId": 233670500, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/419467b9b3e675e1c224743f44c3dccd922db60d",
      "title": "A survey on virtualization techniques in Mobile edge computing", "abstract":
      "In the present scenario, the field of Information Technology(IT) is moving
      from physical storage to cloud storage as \"cloud\" providers deliver on-demand
      resources over the Internet. MEC''s key idea is to provide an IT infrastructure
      system and cloud computing services at the mobile network''s edge, within the
      RAN and close to mobile users. MEC expands the idea of cloud computing by taking
      the benefits of the cloud closer to consumers in the form of a network edge,
      resulting in less latency from end to end. It is a decentralized computing infrastructure
      where some applications use signal processing, storage, control and computing
      are distributed between the data source and the cloud in the most effective
      and logical way. Virtualization is the main cloud infrastructure technology
      used in MEC. Virtualization is accomplished by virtualizing the software or
      hardware resource layer. Virtualization in MEC can be done by the hypervisor,
      Virtual machine, Docker Container or by Kubernetes. Hypervisors and VMs are
      the technologies used earlier. Docker is the technology we use nowadays, and
      Kubernetes is the future of Virtualization. In the face of large-scale and highly
      scalable needs, the cloud computing infrastructure is hard to fulfil in a short
      time, and the conventional virtual machine-based cloud host absorbs a lot of
      device resources on its own hence in this paper, we will address Docker as new
      container technology and introduce you to how this technology has solved previous
      problems in Virtualization, including the creation and deployment of large applications.
      The purpose of this paper is to provide a detailed survey of related MEC research
      and technological developments where specifically relevant research and future
      directions are illustrated.", "venue": "", "year": 2021, "referenceCount": 9,
      "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Review"], "publicationDate": "2021-03-13", "journal":
      {"name": "", "pages": "455-468", "volume": ""}, "citationStyles": {"bibtex":
      "@Inproceedings{Chouhan2021ASO,\n author = {Durga Chouhan and Nilima Gautam
      and Gaurav Purohit and Rajesh Bhdada},\n pages = {455-468},\n title = {A survey
      on virtualization techniques in Mobile edge computing},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "151432049", "name": "Durga Chouhan"}, {"authorId":
      "2088128807", "name": "Nilima Gautam"}, {"authorId": "3386534", "name": "Gaurav
      Purohit"}, {"authorId": "2087549053", "name": "Rajesh Bhdada"}]}, {"paperId":
      "41d293f730da7e81448d3e75aec54d6ae0138c13", "externalIds": {"DBLP": "conf/usenix/GraurAKATK22",
      "CorpusId": 267818569}, "corpusId": 267818569, "publicationVenue": {"id": "9448f839-459b-45f3-8573-5eff3f032334",
      "name": "USENIX Annual Technical Conference", "type": "conference", "alternate_names":
      ["USENIX Annu Tech Conf", "USENIX", "USENIX ATC"], "url": "https://www.usenix.org/conferences/byname/131"},
      "url": "https://www.semanticscholar.org/paper/41d293f730da7e81448d3e75aec54d6ae0138c13",
      "title": "Cachew: Machine Learning Input Data Processing as a Service", "abstract":
      "Processing input data plays a vital role in ML training, im-pacting accuracy,
      throughput, and cost. The input pipeline, which is responsible for feeding data-hungry
      GPUs/TPUs with training examples, is a common bottleneck. Alleviating data stalls
      is critical yet challenging for users. While today\u2019s frameworks provide
      mechanisms to maximize input pipeline throughput (e.g., distributing data processing
      on remote CPU workers and/or reusing cached data transformations), leveraging
      these mechanisms to jointly optimize training time and cost is non-trivial.
      Users face two key challenges. First, ML schedulers focus on GPU/TPU resources,
      leaving users on their own to optimize multi-dimensional resource allocations
      for data processing. Second, input pipelines often consume excessive compute
      power to repeatedly transform the same data. Deciding which source or transformed
      data to cache is non-trivial: large datasets are expensive to store, the compute
      time saved by caching is not always the bottleneck for end-to-end training,
      and transformations may not be deterministic, hence reusing transformed data
      can impact accuracy. We propose Cachew, a fully-managed service for ML data
      processing. Cachew dynamically scales distributed resources for data processing
      to avoid stalls in training jobs. The service also automatically applies caching
      when and where it is performance/cost-effective to reuse preprocessed data within
      and across jobs. Our key contributions are autoscaling and autocaching policies,
      which leverage domain-specific metrics collected at data workers and training
      clients (rather than generic resource utilization metrics) to minimize training
      time and cost. Compared to scaling workers with Kubernetes, Cachew\u2019s policies
      reduce training time by up to 4.1 \u00d7 and training cost by 1.1 \u00d7 to
      3.8 \u00d7 . Abstract The artifact consists of the source code of Cachew 2 ,
      the Cachew client binaries 3 , as well as scripts for building wheel files and
      Docker images. We also provide reference scripts for deploying GCE VMs for evaluation
      and for running the some representative experiments 4 . Do note that these scripts
      might not work as they depend on resources that might not be public. In these
      cases, experiment VMs will have to be manually set up. The evaluation focuses
      on reproducing key experiments and their respective results which demonstrate
      how the main contributions of Cachew work:", "venue": "USENIX Annual Technical
      Conference", "year": 2022, "referenceCount": 58, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": null, "journal": {"pages":
      "689-706"}, "citationStyles": {"bibtex": "@Article{Graur2022CachewML,\n author
      = {Dan Graur and Damien Aymon and Dan Kluser and Tanguy Albrici and C. Thekkath
      and Ana Klimovic},\n booktitle = {USENIX Annual Technical Conference},\n pages
      = {689-706},\n title = {Cachew: Machine Learning Input Data Processing as a
      Service},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2285439952", "name":
      "Dan Graur"}, {"authorId": "2187456856", "name": "Damien Aymon"}, {"authorId":
      "2145152776", "name": "Dan Kluser"}, {"authorId": "150317176", "name": "Tanguy
      Albrici"}, {"authorId": "1780447", "name": "C. Thekkath"}, {"authorId": "2285439911",
      "name": "Ana Klimovic"}]}, {"paperId": "41d3aea14865e96d8e32ca653837f162817e64c5",
      "externalIds": {"DBLP": "conf/bigdataconf/KitaharaGW20", "DOI": "10.1109/BigData50022.2020.9377815",
      "CorpusId": 232373064}, "corpusId": 232373064, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/41d3aea14865e96d8e32ca653837f162817e64c5",
      "title": "Highly-Scalable Container Integrity Monitoring for Large-Scale Kubernetes
      Cluster", "abstract": "Container integrity monitoring is defined as key requirements
      for regulatory compliance, such as PCI-DSS, in which any unexpected changes
      such as file updates or program runs must be logged for later audit. Syscall
      monitoring provides comprehensive monitoring of such change events on container,
      while it suffered from large amount of false alarms unless well-defined allowlist
      rules are coordinated before deploying container. Defining such comprehensive
      allowlist is not feasible especially when managing various kinds of application
      workloads in large-scale enterprise cluster. We propose new approach for identifying
      real anomaly of syscall events effectively without relying on any predefined
      allowlist configuration in this paper. Our novel filtering algorithm based on
      the knowledge acquired autonomously from Kubernetes cluster control plane reduces
      99.999 % noise effectively and distilling only abnormal events in real time.
      Our experiment with real applications on more than 4000 containers demonstrates
      its effectiveness even on large-scale cluster.", "venue": "2020 IEEE International
      Conference on Big Data (Big Data)", "year": 2020, "referenceCount": 18, "citationCount":
      5, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2020-12-10", "journal":
      {"name": "2020 IEEE International Conference on Big Data (Big Data)", "pages":
      "449-454"}, "citationStyles": {"bibtex": "@Article{Kitahara2020HighlyScalableCI,\n
      author = {Hirokuni Kitahara and Kugamoorthy Gajananan and Yuji Watanabe},\n
      booktitle = {2020 IEEE International Conference on Big Data (Big Data)},\n journal
      = {2020 IEEE International Conference on Big Data (Big Data)},\n pages = {449-454},\n
      title = {Highly-Scalable Container Integrity Monitoring for Large-Scale Kubernetes
      Cluster},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2059124149", "name":
      "Hirokuni Kitahara"}, {"authorId": "2282094", "name": "Kugamoorthy Gajananan"},
      {"authorId": "2111725165", "name": "Yuji Watanabe"}]}, {"paperId": "41d8c1b7ccade960f21235700667d069be75b7d1",
      "externalIds": {"DBLP": "conf/wosp/Koziolek23", "DOI": "10.1145/3578245.3584350",
      "CorpusId": 257914239}, "corpusId": 257914239, "publicationVenue": {"id": "cd492924-29c4-496b-9535-082805f228d8",
      "name": "International Conference on Performance Engineering", "type": "conference",
      "alternate_names": ["Int Conf Perform Eng", "ICPE"], "url": "http://www.wikicfp.com/cfp/program?id=1445"},
      "url": "https://www.semanticscholar.org/paper/41d8c1b7ccade960f21235700667d069be75b7d1",
      "title": "Performance Engineering Practices for Modern Industrial Applications
      at ABB Research", "abstract": "ABB is developing a vast range of software services
      for process automation applications used in chemical production facilities,
      power plants, and container ships. High responsiveness and resource efficiency
      is important in this domain both for real-time embedded systems and distributed
      containerized systems, but performance engineering can be challenging due to
      system complexity and application domain heterogeneity. This talk provides experiences
      and lessons learned from several selected case studies on performance engineering.
      It illustrates testing performance of OPC UA pub/sub communication, clustered
      MQTT brokers for edge computing, software container online updates, and lightweight
      Kubernetes frameworks while highlighting the applied practices and tools. The
      talk reports on challenges in workload modeling, performance testing, and performance
      modeling.", "venue": "International Conference on Performance Engineering",
      "year": 2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book"], "publicationDate": "2023-04-15", "journal": {"name": "Companion of
      the 2023 ACM/SPEC International Conference on Performance Engineering"}, "citationStyles":
      {"bibtex": "@Article{Koziolek2023PerformanceEP,\n author = {Heiko Koziolek},\n
      booktitle = {International Conference on Performance Engineering},\n journal
      = {Companion of the 2023 ACM/SPEC International Conference on Performance Engineering},\n
      title = {Performance Engineering Practices for Modern Industrial Applications
      at ABB Research},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2566995",
      "name": "Heiko Koziolek"}]}, {"paperId": "41e5d0324de196696f992e4b91fa130037a4854c",
      "externalIds": {"DBLP": "conf/mobicom/LarreaFM23", "DOI": "10.1145/3570361.3592522",
      "CorpusId": 263265832}, "corpusId": 263265832, "publicationVenue": {"id": "5440268e-4691-4fc0-8d0e-dcd6df18e77f",
      "name": "ACM/IEEE International Conference on Mobile Computing and Networking",
      "type": "conference", "alternate_names": ["MOBICOM", "MobiCom", "ACM/IEEE Int
      Conf Mob Comput Netw"], "url": "http://www.acm.org/sigs/sigmobile/"}, "url":
      "https://www.semanticscholar.org/paper/41e5d0324de196696f992e4b91fa130037a4854c",
      "title": "CoreKube: An Efficient, Autoscaling and Resilient Mobile Core System",
      "abstract": "Given the central role mobile core plays in supporting mobile network
      operations, the efficiency, cost-effective dynamic scalability and resilience
      of the core control plane are paramount. Achieving these goals, however, presents
      two main challenges: (i) decoupling core network state from processing; (ii)
      decoupling control plane processing in the core from its interface to the radio
      access network (RAN). To overcome them, we present CoreKube, a novel message
      focused and cloud-native mobile core system design, which features truly stateless
      workers (processing units) that interface with a common database (to hold the
      core network state) and with the RAN through a frontend. The fully stateless
      and generic nature of the workers to process any control plane message enables
      efficient message handling. Orchestration of containerized CoreKube components
      using Kubernetes, allows leveraging the latter''s autoscaling and self-healing
      properties. We develop 4G and 5G standard-compliant CoreKube implementations,
      exploiting the agile development methodology enabled by CoreKube''s message
      focused design. Results from our extensive experimental evaluations over the
      Powder platform relative to prior art show that CoreKube efficiently processes
      control plane messages, scales dynamically while using minimal compute resources
      and recovers seamlessly from failures.", "venue": "ACM/IEEE International Conference
      on Mobile Computing and Networking", "year": 2023, "referenceCount": 58, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.pure.ed.ac.uk/ws/files/340881332/CoreKube_FERGUSON_DOA30032023_AFV_CC_BY.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate":
      "2023-10-02", "journal": {"name": "Proceedings of the 29th Annual International
      Conference on Mobile Computing and Networking"}, "citationStyles": {"bibtex":
      "@Book{Larrea2023CoreKubeAE,\n author = {Jon Larrea and Andrew E. Ferguson and
      Mahesh K. Marina},\n booktitle = {ACM/IEEE International Conference on Mobile
      Computing and Networking},\n journal = {Proceedings of the 29th Annual International
      Conference on Mobile Computing and Networking},\n title = {CoreKube: An Efficient,
      Autoscaling and Resilient Mobile Core System},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2086598337", "name": "Jon Larrea"}, {"authorId": "2249145930",
      "name": "Andrew E. Ferguson"}, {"authorId": "2239266954", "name": "Mahesh K.
      Marina"}]}, {"paperId": "41ecba76caeac90d6c9f8a2b3e311767ca9b0a64", "externalIds":
      {"DBLP": "conf/sbrc/SampaioSVB19", "MAG": "2980526471", "DOI": "10.5753/sbrc_estendido.2019.7774",
      "CorpusId": 207825071}, "corpusId": 207825071, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/41ecba76caeac90d6c9f8a2b3e311767ca9b0a64",
      "title": "Asperathos: Running QoS-Aware Sensitive Batch Applications with Intel
      SGX", "abstract": "The massive amount of information being generated nowadays
      results in the need for efficient data processing frameworks. For sensitive
      information, concerns also emerge regarding data integrity and confidentiality.
      To address such concerns, we present Asperathos, a configurable framework to
      automate the execution of batch applications in cloud environments while complying
      with QoS goals and processing potentially sensitive data. Our demonstration
      leverages tools such as Kubernetes and Intel SGX in a smart grid scenario, computing
      the power consumption from a dataset containing detailed measurements of users.
      We illustrate Asperathos features through the integration with both a command
      line and a web-based interface.", "venue": "SBRC Companion", "year": 2019, "referenceCount":
      7, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://sol.sbc.org.br/index.php/sbrc_estendido/article/download/7774/8229",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-09-26", "journal": {"pages": "89-96"},
      "citationStyles": {"bibtex": "@Article{Sampaio2019AsperathosRQ,\n author = {Lilia
      Sampaio and Clenimar Souza and Gabriel Vinha and Andrey Brito},\n booktitle
      = {SBRC Companion},\n pages = {89-96},\n title = {Asperathos: Running QoS-Aware
      Sensitive Batch Applications with Intel SGX},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "30180753", "name": "Lilia Sampaio"}, {"authorId": "66293695",
      "name": "Clenimar Souza"}, {"authorId": "66282677", "name": "Gabriel Vinha"},
      {"authorId": "1765793", "name": "Andrey Brito"}]}, {"paperId": "41f7d33326e57b489380667320cddd80ed848ad3",
      "externalIds": {"DBLP": "conf/IEEEcloud/MannerW22", "DOI": "10.1109/CLOUD55607.2022.00020",
      "CorpusId": 251773017}, "corpusId": 251773017, "publicationVenue": {"id": "406d9f60-417a-4dc5-a6b7-1fe4689a4ff7",
      "name": "IEEE International Conference on Cloud Computing", "type": "conference",
      "alternate_names": ["Int Conf Cloud Comput [services Soc", "CLOUD", "International
      Conference on Cloud Computing [Services Society]", "IEEE Int Conf Cloud Comput"]},
      "url": "https://www.semanticscholar.org/paper/41f7d33326e57b489380667320cddd80ed848ad3",
      "title": "Resource Scaling Strategies for Open-Source FaaS Platforms compared
      to Commercial Cloud Offerings", "abstract": "Open-source offerings are often
      investigated when comparing their features to commercial cloud offerings. However,
      performance benchmarking is rarely executed for open-source tools hosted on-premise
      nor is it possible to conduct a fair cost comparison due to a lack of resource
      settings equivalent to cloud scaling strategies.Therefore, we firstly list implemented
      resource scaling strategies for public and open-source FaaS platforms. Based
      on this we propose a methodology to calculate an abstract performance measure
      to compare two platforms with each other. Since all open-source platforms suggest
      a Kubernetes deployment, we use this measure for a configuration of open-source
      FaaS platforms based on Kubernetes limits. We tested our approach with CPU intensive
      functions, considering the difference between single-threaded and multi-threaded
      functions to avoid wasting resources. With regard to this, we also address the
      noisy neighbor problem for open-source FaaS platforms by conducting an instance
      parallelization experiment. Our approach to limit resources leads to consistent
      results while avoiding an overbooking of resources.", "venue": "IEEE International
      Conference on Cloud Computing", "year": 2022, "referenceCount": 44, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-07-01", "journal":
      {"name": "2022 IEEE 15th International Conference on Cloud Computing (CLOUD)",
      "pages": "40-48"}, "citationStyles": {"bibtex": "@Article{Manner2022ResourceSS,\n
      author = {Johannes Manner and G. Wirtz},\n booktitle = {IEEE International Conference
      on Cloud Computing},\n journal = {2022 IEEE 15th International Conference on
      Cloud Computing (CLOUD)},\n pages = {40-48},\n title = {Resource Scaling Strategies
      for Open-Source FaaS Platforms compared to Commercial Cloud Offerings},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "37387138", "name": "Johannes Manner"},
      {"authorId": "145889900", "name": "G. Wirtz"}]}, {"paperId": "41faf297666c0d77d365d75f8714c1a5b97438fe",
      "externalIds": {"MAG": "2893221683", "DOI": "10.1109/IMCEC.2018.8469632", "CorpusId":
      52889748}, "corpusId": 52889748, "publicationVenue": {"id": "d50167dd-c59d-48c7-98a9-928f7f8c3223",
      "name": "IEEE Advanced Information Management, Communicates, Electronic and
      Automation Control Conference", "type": "conference", "alternate_names": ["IMCEC",
      "IEEE Adv Inf Manag Commun Electron Autom Control Conf"]}, "url": "https://www.semanticscholar.org/paper/41faf297666c0d77d365d75f8714c1a5b97438fe",
      "title": "System Design and Implementation of Website Construction Course Assignment
      Based on Container Virtualization", "abstract": "Web site construction has become
      a popular course in major colleges and universities. However, most electronic
      submission systems in universities do not support dynamic web page submission.
      From the perspective of improving teaching quality, this paper uses the container
      virtualization technology docker to package the dynamic web page into an application
      and encapsulate it in a container. Then using Kubernetes container management
      technology to schedule the uploaded jobs and developing an electronic job that
      supports dynamic web page submission system to meet the diverse needs of homework.",
      "venue": "IEEE Advanced Information Management, Communicates, Electronic and
      Automation Control Conference", "year": 2018, "referenceCount": 0, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2018-05-01",
      "journal": {"name": "2018 2nd IEEE Advanced Information Management,Communicates,Electronic
      and Automation Control Conference (IMCEC)", "pages": "2535-2538"}, "citationStyles":
      {"bibtex": "@Conference{Xie2018SystemDA,\n author = {Jia Xie and Yang Song and
      Qiang Huang and Mantao Wang},\n booktitle = {IEEE Advanced Information Management,
      Communicates, Electronic and Automation Control Conference},\n journal = {2018
      2nd IEEE Advanced Information Management,Communicates,Electronic and Automation
      Control Conference (IMCEC)},\n pages = {2535-2538},\n title = {System Design
      and Implementation of Website Construction Course Assignment Based on Container
      Virtualization},\n year = {2018}\n}\n"}, "authors": [{"authorId": "2216566312",
      "name": "Jia Xie"}, {"authorId": "2157995547", "name": "Yang Song"}, {"authorId":
      "2111286621", "name": "Qiang Huang"}, {"authorId": "21836351", "name": "Mantao
      Wang"}]}, {"paperId": "420ae1ad219e88880610f29ea093d00b17b2f10b", "externalIds":
      {"MAG": "2946980318", "CorpusId": 192575536}, "corpusId": 192575536, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/420ae1ad219e88880610f29ea093d00b17b2f10b",
      "title": "PERBANDINGAN PERFORMANSI MANAJEMEN CLUSTER ANTARA HYPERVISOR DAN CONTAINER
      MENGGUNAKAN KUBERNETES", "abstract": null, "venue": "", "year": 2019, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}], "publicationTypes":
      null, "publicationDate": "2019-01-03", "journal": {"name": "", "volume": ""},
      "citationStyles": {"bibtex": "@Inproceedings{Wirandana2019PERBANDINGANPM,\n
      author = {Trisna Wirandana},\n title = {PERBANDINGAN PERFORMANSI MANAJEMEN CLUSTER
      ANTARA HYPERVISOR DAN CONTAINER MENGGUNAKAN KUBERNETES},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "148254453", "name": "Trisna Wirandana"}]}, {"paperId":
      "4231ba843157ef90b3f7faef20fea0da6019d2e9", "externalIds": {"MAG": "3080086279",
      "DBLP": "conf/hpcct/FanH20", "DOI": "10.1145/3409501.3409503", "CorpusId": 221299487},
      "corpusId": 221299487, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4231ba843157ef90b3f7faef20fea0da6019d2e9",
      "title": "A Scheduler for Serverless Framework base on Kubernetes", "abstract":
      "This paper mainly studies the optimization of pod scheduling in the large-scale
      concurrent scenario of Serverless framework base on Kubernetes platform. In
      Serverless cloud computing paradigm, rapid deployment and running of pods is
      the most critical step to improve resource efficiency. However, the deployment
      and operation of pods depend on images, and Kubernetes default scheduler currently
      base on pod-by-pod mode for scheduling, it cannot fully meet the needs of Serverless
      in resource scheduling. In view of this problem, we propose an algorithm using
      the same pod simultaneous scheduling to further optimize the efficiency of pod
      scheduling in Serverless cloud paradigm. Through preliminary verification, we
      can greatly reduce the delay of pod start-up while ensuring the balance of node
      resources.", "venue": "HPCCT/BDAI", "year": 2020, "referenceCount": 20, "citationCount":
      6, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2020-07-03", "journal": {"name":
      "Proceedings of the 2020 4th High Performance Computing and Cluster Technologies
      Conference & 2020 3rd International Conference on Big Data and Artificial Intelligence"},
      "citationStyles": {"bibtex": "@Article{Fan2020ASF,\n author = {Dayong Fan and
      Dongzhi He},\n booktitle = {HPCCT/BDAI},\n journal = {Proceedings of the 2020
      4th High Performance Computing and Cluster Technologies Conference & 2020 3rd
      International Conference on Big Data and Artificial Intelligence},\n title =
      {A Scheduler for Serverless Framework base on Kubernetes},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2054267626", "name": "Dayong Fan"}, {"authorId": "40025714",
      "name": "Dongzhi He"}]}, {"paperId": "4238e1f9ab3c73a6a8615b2240b82cf13d3f98f2",
      "externalIds": {"MAG": "2341930484", "CorpusId": 183877151}, "corpusId": 183877151,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4238e1f9ab3c73a6a8615b2240b82cf13d3f98f2",
      "title": "\u300a\u5de5\u4e1a4.0\u4e0e\u4e24\u5316\u878d\u5408\u300b\u8bb2\u5ea7
      \u7b2c\u4e8c\u8bb2 \u4fe1\u606f\u7269\u7406\u7cfb\u7edf\uff08CPS\uff09\u2014\u2014\u65b0\u5de5\u4e1a\u9769\u547d\u7684\u57fa\u7840",
      "abstract": "1\u4fe1\u606f\u7269\u7406\u7cfb\u7edf\u2014\u2014CPS\u91ca\u4e49
      \u4ec0\u4e48\u662fCyber Physical System\uff08\u4fe1\u606f\u7269\u7406\u7cfb\u7edf\uff09,\u8fd9\u8981\u4eceCyber\u8fd9\u4e2a\u82f1\u6587\u5355\u8bcd\u8bf4\u8d77\u3002Cyber\uff08\u8d5b\u535a\uff09\u6e90\u81ea\u5e0c\u814a\u8bed\u5355\u8bcdKubernetes,\u610f\u601d\u662f\u8235\u624b\u3002\u63a7\u5236\u8bba\u521b\u59cb\u4eba\u8bfa\u4f2f\u7279\u00b7\u7ef4\u7eb3\u5728\u300a\u63a7\u5236\u8bba\u300b\u4e2d\u4f7f\u7528Cybernetics\u4e00\u8bcd\u8868\u793a\u8ba1\u7b97\u673a\u63a7\u5236\u3002",
      "venue": "", "year": 2015, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "pages": "68-71", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{\u9b4f\u6653\u4e1c2015\u5de5\u4e1a40\u4e0e\u4e24\u5316\u878d\u5408\u8bb2\u5ea7\u7b2c\u4fe1,\n
      author = {\u9b4f\u6653\u4e1c},\n pages = {68-71},\n title = {\u300a\u5de5\u4e1a4.0\u4e0e\u4e24\u5316\u878d\u5408\u300b\u8bb2\u5ea7
      \u7b2c\u4e8c\u8bb2 \u4fe1\u606f\u7269\u7406\u7cfb\u7edf\uff08CPS\uff09\u2014\u2014\u65b0\u5de5\u4e1a\u9769\u547d\u7684\u57fa\u7840},\n
      year = {2015}\n}\n"}, "authors": [{"authorId": "2094595588", "name": "\u9b4f\u6653\u4e1c"}]},
      {"paperId": "426ebe7b7f8909dbd3b28b572884942eb58cff3b", "externalIds": {"MAG":
      "3016092102", "DBLP": "conf/uic/SukhijaB19", "DOI": "10.1109/SmartWorld-UIC-ATC-SCALCOM-IOP-SCI.2019.00087",
      "CorpusId": 215739978}, "corpusId": 215739978, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/426ebe7b7f8909dbd3b28b572884942eb58cff3b",
      "title": "Towards a Framework for Monitoring and Analyzing High Performance
      Computing Environments Using Kubernetes and Prometheus", "abstract": "The challenge
      of monitoring a computational center grows as the center deploys larger and
      more diverse systems. As system size grows, it becomes harder to discern the
      problem from the noise. Staff often experience alert fatigue, an occurrence
      when so many alerts come in that the actual problem is obscured by false alarms
      or by alarms for issues that are symptoms of the core problem. The National
      Energy Research Scientific Computing Center (NERSC) at the Lawrence Berkeley
      National Laboratory (LBNL) has begun to address this issue by ensuring that
      most alerts are actionable and that multiple alerts for common problems, such
      as node outages, do not arise. However, more work is needed for these solutions
      to be extensible to emerging extreme-scale systems. In this paper, we propose
      a framework for proactively monitoring and managing data center operations,
      capable of scaling to accommodate the heterogeneity and complexity of next-generation
      systems. We describe a new architecture for the Operations Monitoring and Notification
      Infrastructure (OMNI) at NERSC that enables proactive monitoring and management
      at scale by integrating state-of-the-art technology, such as Kubernetes, Prometheus,
      Grafana, and other predictive platforms with data from metrics, sensors, and
      analytics engines. The system will support the operation of the upcoming Perlmutter
      HPC system, to be delivered in late 2020, as well as NERSC''s successive computational
      system deployments. This comprehensive infrastructure will assist in centrally
      orchestrating services and deployments, automatically analyzing streaming data,
      correlating multiple-sourced data, and thresholding alerts to identify core
      issues from a single view.", "venue": "2019 IEEE SmartWorld, Ubiquitous Intelligence
      & Computing, Advanced & Trusted Computing, Scalable Computing & Communications,
      Cloud & Big Data Computing, Internet of People and Smart City Innovation (SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI)",
      "year": 2019, "referenceCount": 25, "citationCount": 24, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2019-08-01", "journal":
      {"name": "2019 IEEE SmartWorld, Ubiquitous Intelligence & Computing, Advanced
      & Trusted Computing, Scalable Computing & Communications, Cloud & Big Data Computing,
      Internet of People and Smart City Innovation (SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI)",
      "pages": "257-262"}, "citationStyles": {"bibtex": "@Article{Sukhija2019TowardsAF,\n
      author = {Nitin Sukhija and Elizabeth Bautista},\n booktitle = {2019 IEEE SmartWorld,
      Ubiquitous Intelligence & Computing, Advanced & Trusted Computing, Scalable
      Computing & Communications, Cloud & Big Data Computing, Internet of People and
      Smart City Innovation (SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI)},\n journal
      = {2019 IEEE SmartWorld, Ubiquitous Intelligence & Computing, Advanced & Trusted
      Computing, Scalable Computing & Communications, Cloud & Big Data Computing,
      Internet of People and Smart City Innovation (SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI)},\n
      pages = {257-262},\n title = {Towards a Framework for Monitoring and Analyzing
      High Performance Computing Environments Using Kubernetes and Prometheus},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "2925606", "name": "Nitin Sukhija"},
      {"authorId": "121542276", "name": "Elizabeth Bautista"}]}, {"paperId": "427a20ace46e7dd749b06d6c39e6ccb85c6eab96",
      "externalIds": {"DBLP": "journals/access/GaoXG23", "DOI": "10.1109/ACCESS.2023.3313643",
      "CorpusId": 261769567}, "corpusId": 261769567, "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26",
      "name": "IEEE Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/427a20ace46e7dd749b06d6c39e6ccb85c6eab96",
      "title": "K-TAHP: A Kubernetes Load Balancing Strategy Base on TOPSIS+AHP",
      "abstract": "Kubernetes is an orchestration platform designed for containerized
      applications,allows the application provider to scale automatically to match
      the flfluctuating intensity of processing demand. Container cluster technology
      is used to encapsulate, isolate, and deploy applications, addressing the issue
      of low system reliability due to interlocking failures. However, after running
      for a long time, Kubernetes clusters often suffer from uneven system load, leading
      to a performance decline. To address this issue, a load balancing strategy called
      K-TAHP, based on TOPSIS and AHP, is proposed. This strategy takes cpu, memory,
      and bandwidth usage as load factors and uses K-TAHP to construct load evaluation.
      By employing a warning module and a migration module, it migrates high-load
      pods from overloaded nodes to nodes with lower loads, thus improving load balancing
      in the Kubernetes cluster and resolving performance degradation caused by load
      imbalance after prolonged cluster operation. The experimental results show that
      the K-TAHP load balancing strategy can improve the load balancing capability
      of Kubernetes clusters by around 60%. It effectively resolves the issue of load
      imbalance that can occur after long periods of operation in Kubernetes clusters.
      Additionally, it ensures uninterrupted pod services during migration, thereby
      maintaining the overall performance of the cluster.", "venue": "IEEE Access",
      "year": 2023, "referenceCount": 27, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/6287639/6514899/10246270.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": null, "journal": {"name": "IEEE Access", "pages": "102132-102139",
      "volume": "11"}, "citationStyles": {"bibtex": "@Article{Gao2023KTAHPAK,\n author
      = {Rong Gao and Xiaolan Xie and Q. Guo},\n booktitle = {IEEE Access},\n journal
      = {IEEE Access},\n pages = {102132-102139},\n title = {K-TAHP: A Kubernetes
      Load Balancing Strategy Base on TOPSIS+AHP},\n volume = {11},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2240000876", "name": "Rong Gao"}, {"authorId": "2239168286",
      "name": "Xiaolan Xie"}, {"authorId": "50770333", "name": "Q. Guo"}]}, {"paperId":
      "4290e0314d13985558002c02cb7a0a067f847c79", "externalIds": {"MAG": "2901334311",
      "DOI": "10.1109/ICSTC.2018.8528695", "CorpusId": 53282560}, "corpusId": 53282560,
      "publicationVenue": {"id": "5dfdcc5e-f28b-42bd-9832-bf3894169b1c", "name": "International
      Conference on Information Control Systems & Technologies", "type": "conference",
      "alternate_names": ["Int Conf Softw Test Verification Valid", "International
      Conference on Software Testing, Verification, and Validation", "Int Conf Inf
      Control Syst  Technol", "Int Conf Sens Technol", "International Conferences
      on Sensing Technology", "International Conference on Sensing Technology", "ICST"],
      "url": "http://www.wikicfp.com/cfp/program?id=1483"}, "url": "https://www.semanticscholar.org/paper/4290e0314d13985558002c02cb7a0a067f847c79",
      "title": "Evaluating Energy Consumption in a Different Virtualization within
      a Cloud System", "abstract": "Cloud computing manages the isolation of processes
      within Virtual Machines by utilizing resources via hypervisor. In the last decade,
      specific application such as Big Data that mostly run in the Virtualized environment
      has attracted many Cloud providers. This opportunity has increased the growth
      of alternative technology such as Docker and Kubernete that made enhancement
      on top of a single host virtualization. However, diverse virtualization technology
      may have different characteristics, which may also affect the consumption of
      energy. This work provides information on the impact of workload into Cloud
      computing services by measuring the energy usage of three different virtualization
      technologies namely Virtual Machine, Docker and Kubernete in an Openstack system,
      Opensource Cloud computing environment. In order to trigger processes in the
      system under measurement, we use a workload technique that simulates incoming
      users to the system. A method of energy measurement without physical powermeter
      for several Virtualized systems is reported. Our experiment result shows that
      using similar workloads, for different virtualization technology, consumes a
      significant distinctive amount of energy.", "venue": "International Conference
      on Information Control Systems & Technologies", "year": 2018, "referenceCount":
      15, "citationCount": 3, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2018-08-01", "journal": {"name": "2018 4th
      International Conference on Science and Technology (ICST)", "pages": "1-6",
      "volume": "1"}, "citationStyles": {"bibtex": "@Conference{Murwantara2018EvaluatingEC,\n
      author = {I. M. Murwantara and P. Yugopuspito},\n booktitle = {International
      Conference on Information Control Systems & Technologies},\n journal = {2018
      4th International Conference on Science and Technology (ICST)},\n pages = {1-6},\n
      title = {Evaluating Energy Consumption in a Different Virtualization within
      a Cloud System},\n volume = {1},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "32858310", "name": "I. M. Murwantara"}, {"authorId": "2203399", "name": "P.
      Yugopuspito"}]}, {"paperId": "42b0e0d620bad9717b5fb57f8a6c1fb02fb7586e", "externalIds":
      {"MAG": "3099589084", "CorpusId": 238539138}, "corpusId": 238539138, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/42b0e0d620bad9717b5fb57f8a6c1fb02fb7586e",
      "title": "Ve\u010dnivojski nadzor in sklepanje na podlagi pravil za prilagajanje
      \u010dasovno-kriti\u010dnih aplikacij v oblaku", "abstract": "Racunalnistvo
      v oblaku se dandanes uporablja za postavitev razlicnih programskih storitev,
      saj omogoca najemanje racunskih virov po potrebi in enostavno nadgradljivost
      aplikacij. Sodobni pristopi programskega in\u017eeniringa omogocajo razvoj casovno-kriticnih
      oblacnih aplikacij na podlagi komponent, ki so namesceni v vsebnikih. Tehnologije
      vsebnikov, kot so na primer Docker, Kubernetes, CoreOS, Swarm, OpenShift Origin
      in podobno, omogocajo razvoj zelo dinamicnih oblacnih aplikacij, pod pogojih
      stalno spreminjajocih obremenitev. Oblacne aplikacije, ki temeljijo na tehnologijah
      vsebnikov zahtevajo prefinjene metode samodejnega prilagajanja, z namenom delovanja
      pod razlicnimi pogoji delovnih obremenitev, na primer pod pogojih drasticnih
      sprememb delovnih obremenitev. \nPredstavljajmo si socialno omre\u017eje, ki
      je oblacna aplikacija in v katerem se dolocena novica zacne bliskovito siriti.
      Po eni strani potrebuje oblacna aplikacija zadosti racunskih virov, se pred
      nastankom delovne obremenitve. Po drugi strani je najem dragih oblacnih infrastruktur
      v daljsem casovnem obdobju nepotreben in zato tudi neza\u017eelen. Izbira metode
      samodejnega prilagajanja oblacne aplikacije tako pomembno vpliva na parametre
      kakovosti storitve, kot sta odzivni cas in stopnja uporabe racunskih virov.
      Obstojeci sistemi za orkestracijo vsebnikov, kot sta npr. Kubernetes in sistem
      Amazon EC2, uporabljajo avtomatska pravila s staticno dolocenimi pragovi, ki
      se zanasajo predvsem na infrastrukturne metrike, kot sta na primer uporaba procesorja
      in pomnilnika. \nV tej doktorski disertaciji predstavljamo novo metodo dinamicnega
      vecstopenjskega (angl. Dynamic Multi-Level, DM) samodejnega prilagajanja oblacnih
      aplikcij, ki uporablja poleg infrastrukturnih metrik tudi aplikacijske metrike
      s spreminjajocimi se pragovi. Novo DM metodo smo vgradili v delujoco arhitekturo
      sistema za samoprilagajanje aplikacij. Novo metodo DM primerjamo s sedmimi obstojecimi
      metodami samodejnega prilagajanja pri razlicnih scenarijih sinteticnih in realne
      delovne obremenitve. Primerljivi pristopi samodejnega prilagajanja vkljucujejo
      metode Kubernetes Horizontal Pod Auto-scaling (HPA), Step Scaling 1 in 2 (SS1,
      SS2), Target Tracking Scaling 1 in 2 (TTS1, TTS2) ter Static Threshold Based
      Scaling 1 in 2 (THRES1, THRES2). Vse obravnavane metode samodejnega prilagajanja
      trenutno stejejo kot zelo napredni pristopi, ki se uporabljajo v proizvodnih
      sistemih, kot so sistemi temeljeci na tehnologijah Kubernetes in Amazon EC2.
      Scenariji delovnih obremenitev, ki jih uporabljamo v tem delu predstavljajo
      vzorce vztrajno narascajocih/padajocih, drasticno spreminjajocih, rahlih sprememb
      ter dejanskih delovnih obremenitev. \nNa podlagi rezultatov poskusov, opravljenih
      za vsak vzorec delovnih obremenitev posebej, smo primerjali vseh osem izbranih
      metod samodejnega prilagajanja glede na odzivni cas in stevilo instanciranih
      vsebnikov. Rezultati kot celota ka\u017eejo, da ima predlagana nova metoda DM
      vecjo splosno samoprilagodljivost v primerjavi s preostalimi metodami. Zaradi
      zadovoljivih rezultatov smo predlagano metodo DM vgradili v sistem SWITCH za
      programski in\u017eeniring casovno-kriticnih oblacnih aplikacij. \nPravila za
      samoprilagajanje aplikacij in druge informacije, kot so na primer lastnosti
      platform za virtualizacijo, trenutne obremenitve aplikacije, ponavljajoce se
      zahteve po visji kakovosti storitev in podobno, se nenehno shranjujejo v obliki
      Resource Description Framework (RDF) trojk v bazi znanja, ki je tudi vkljucena
      v predlagani arhitekturi. Kljucna zahteva za razvoj baze znanja, je omogociti
      vsem dele\u017enikom programske platforme SWITCH, kot so na primer ponudniki
      oblacnih storitev, mo\u017enost integracije informacij, analizo daljsih trendov
      in podporo strateskemu planiranju.", "venue": "", "year": 2018, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Taherizadeh2018Ve\u010dnivojskiNI,\n author = {Salman
      Taherizadeh},\n title = {Ve\u010dnivojski nadzor in sklepanje na podlagi pravil
      za prilagajanje \u010dasovno-kriti\u010dnih aplikacij v oblaku},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "2131689476", "name": "Salman Taherizadeh"}]}, {"paperId":
      "42bb24ba0f1142cfa365d812df2e23c56ad39dde", "externalIds": {"DBLP": "journals/tnsm/MianoRBBL21",
      "DOI": "10.1109/TNSM.2021.3055676", "CorpusId": 232236966}, "corpusId": 232236966,
      "publicationVenue": {"id": "a00fde74-d8df-4613-b825-0fff9f531d3f", "name": "IEEE
      Transactions on Network and Service Management", "type": "journal", "alternate_names":
      ["IEEE Trans Netw Serv Manag"], "issn": "1932-4537", "url": "http://ejournals.ebsco.com/direct.asp?JournalID=714200",
      "alternate_urls": ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=4275028",
      "http://ieeexplore.ieee.org/servlet/opac?punumber=4275028"]}, "url": "https://www.semanticscholar.org/paper/42bb24ba0f1142cfa365d812df2e23c56ad39dde",
      "title": "A Framework for eBPF-Based Network Functions in an Era of Microservices",
      "abstract": "By moving network functionality from dedicated hardware to software
      running on end-hosts, Network Functions Virtualization (NFV) pledges the benefits
      of cloud computing to packet processing. While most of the NFV frameworks today
      rely on kernel-bypass approaches, no attention has been given to kernel packet
      processing, which has always proved hard to evolve and to program. In this article,
      we present Polycube, a software framework whose main goal is to bring the power
      of NFV to in-kernel packet processing applications, enabling a level of flexibility
      and customization that was unthinkable before. Polycube enables the creation
      of arbitrary and complex network function chains, where each function can include
      an efficient in-kernel data plane and a flexible user-space control plane with
      strong characteristics of isolation, persistence, and composability. Polycube
      network functions, called Cubes, can be dynamically generated and injected into
      the kernel networking stack, without requiring custom kernels or specific kernel
      modules, simplifying the debugging and introspection, which are two fundamental
      properties in recent cloud environments. We validate the framework by showing
      significant improvements over existing applications, and we prove the generality
      of the Polycube programming model through the implementation of complex use
      cases such as a network provider for Kubernetes.", "venue": "IEEE Transactions
      on Network and Service Management", "year": 2021, "referenceCount": 75, "citationCount":
      39, "influentialCitationCount": 6, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2021-03-01", "journal": {"name": "IEEE
      Transactions on Network and Service Management", "pages": "133-151", "volume":
      "18"}, "citationStyles": {"bibtex": "@Article{Miano2021AFF,\n author = {S. Miano
      and F. Risso and Mauricio V\u00e1squez Bernal and Matteo Bertrone and Yunsong
      Lu},\n booktitle = {IEEE Transactions on Network and Service Management},\n
      journal = {IEEE Transactions on Network and Service Management},\n pages = {133-151},\n
      title = {A Framework for eBPF-Based Network Functions in an Era of Microservices},\n
      volume = {18},\n year = {2021}\n}\n"}, "authors": [{"authorId": "7677564", "name":
      "S. Miano"}, {"authorId": "2237142983", "name": "F. Risso"}, {"authorId": "3440423",
      "name": "Mauricio V\u00e1squez Bernal"}, {"authorId": "51159719", "name": "Matteo
      Bertrone"}, {"authorId": "23745488", "name": "Yunsong Lu"}]}, {"paperId": "42dbb3df0c0dd80a18fd86141b974f8d20861e82",
      "externalIds": {"DBLP": "journals/grid/AydemirB22", "DOI": "10.1007/s10723-022-09624-z",
      "CorpusId": 253249771}, "corpusId": 253249771, "publicationVenue": {"id": "993eb4fa-4cb7-4aed-980e-20e5298efad0",
      "name": "Journal of Grid Computing", "type": "journal", "alternate_names": ["J
      Grid Comput"], "issn": "1570-7873", "url": "https://www.springer.com/journal/10723",
      "alternate_urls": ["https://link.springer.com/journal/10723", "http://www.springer.com/journal/10723"]},
      "url": "https://www.semanticscholar.org/paper/42dbb3df0c0dd80a18fd86141b974f8d20861e82",
      "title": "Building a Performance Efficient Core Banking System Based on the
      Microservices Architecture", "abstract": null, "venue": "Journal of Grid Computing",
      "year": 2022, "referenceCount": 60, "citationCount": 2, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2022-11-02", "journal": {"name": "Journal
      of Grid Computing", "volume": "20"}, "citationStyles": {"bibtex": "@Article{Aydemir2022BuildingAP,\n
      author = {F. Aydemir and F. Bas\u00e7ift\u00e7i},\n booktitle = {Journal of
      Grid Computing},\n journal = {Journal of Grid Computing},\n title = {Building
      a Performance Efficient Core Banking System Based on the Microservices Architecture},\n
      volume = {20},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2083387002",
      "name": "F. Aydemir"}, {"authorId": "35244329", "name": "F. Bas\u00e7ift\u00e7i"}]},
      {"paperId": "42e9f3611e5c414ad72b2725308e3a2855da24d4", "externalIds": {"DOI":
      "10.1109/IMPACT55510.2022.10029149", "CorpusId": 256463034}, "corpusId": 256463034,
      "publicationVenue": {"id": "d1ccff36-fb09-45ac-9078-cb0225b06c19", "name": "Impact",
      "type": "conference", "alternate_names": ["International Microsystems, Packaging,
      Assembly and Circuits Technology Conference", "IMPACT", "Int Microsystems Packag
      Assem Circuit Technol Conf"], "issn": "0300-4155", "alternate_issns": ["2048-4151",
      "2398-7073", "2058-802X"], "url": "https://issuu.com/orsimpact/docs/impact_1_2/5?e=0/31377521",
      "alternate_urls": ["http://www.philosophy-of-education.org/impact/impact_publications.asp",
      "http://onlinelibrary.wiley.com/journal/10.1111/(ISSN)2048-416X", "https://www.ingentaconnect.com/content/sil/impact"]},
      "url": "https://www.semanticscholar.org/paper/42e9f3611e5c414ad72b2725308e3a2855da24d4",
      "title": "Improving Business deliveries using Continuous Integration and Continuous
      Delivery using Jenkins and an Advanced Version control system for Microservices-based
      system", "abstract": "For enterprise application various software development
      models are available. Out of these available software development models, micro-services
      architecture has gained a lot of popularity. The micro-service architecture
      fits well to an enterprise applications which are usually complex in nature
      and requires out of box scalability along with low latency. Micro-services in
      containerized cloud environment are very useful for enterprise applications.
      From the software development perspective in a software industry it is also
      very crucial to identify and rectify the defects at an early development phase
      rather than at production environment level. Few earlier published works had
      a focus on micro-services while few others on the issues and challenges of Kubernetes.
      However, to the best of our knowledge, the relationship between these two has
      not been worked out earlier. This is the key focus area of this work. This work
      focuses on identifying the defects at an early stage for micro-services that
      are deployed on Kubernetes. Few basic guidelines are proposed for a micro-service
      architecture based on automation, fault design, design philosophy, naming convention,
      monitoring and warning.", "venue": "Impact", "year": 2022, "referenceCount":
      38, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Business", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-11-26",
      "journal": {"name": "2022 5th International Conference on Multimedia, Signal
      Processing and Communication Technologies (IMPACT)", "pages": "1-4"}, "citationStyles":
      {"bibtex": "@Conference{Singh2022ImprovingBD,\n author = {Amarjeet Singh and
      V. Singh and A. Aggarwal and S. Aggarwal},\n booktitle = {Impact},\n journal
      = {2022 5th International Conference on Multimedia, Signal Processing and Communication
      Technologies (IMPACT)},\n pages = {1-4},\n title = {Improving Business deliveries
      using Continuous Integration and Continuous Delivery using Jenkins and an Advanced
      Version control system for Microservices-based system},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2151564273", "name": "Amarjeet Singh"}, {"authorId":
      "2118838171", "name": "V. Singh"}, {"authorId": "2054099392", "name": "A. Aggarwal"},
      {"authorId": "72746907", "name": "S. Aggarwal"}]}, {"paperId": "431262756aa77b15c1e563d89d5b9677448c1f75",
      "externalIds": {"DBLP": "journals/access/OkwuibeHHAY20", "ArXiv": "1905.12959",
      "MAG": "2946905482", "DOI": "10.1109/ACCESS.2020.3045563", "CorpusId": 230510229},
      "corpusId": 230510229, "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26",
      "name": "IEEE Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/431262756aa77b15c1e563d89d5b9677448c1f75",
      "title": "SDN Enhanced Resource Orchestration of Containerized Edge Applications
      for Industrial IoT", "abstract": "With the rise of the Industrial Internet of
      Things (IIoT), there is an intense pressure on resource and performance optimization
      leveraging on existing technologies, such as Software Defined Networking (SDN),
      edge computing, and container orchestration. Industry 4.0 emphasizes the importance
      of lean and efficient operations for sustainable manufacturing. Achieving this
      goal would require engineers to consider all layers of the system, from hardware
      to software, and optimizing for resource efficiency at all levels. This emphasizes
      the need for container-based virtualization tools such as Docker and Kubernetes,
      offering Platform as a Service (PaaS), while simultaneously leveraging on edge
      technologies to reduce related latencies. For network management, SDN is poised
      to offer a cost-effective and dynamic scalability solution by customizing packet
      handling for various edge applications and services. In this paper, we investigate
      the energy and latency trade-offs involved in combining these technologies for
      industrial applications. As a use case, we emulate a 3D-drone-based monitoring
      system aimed at providing real-time visual monitoring of industrial automation.
      We compare a native implementation to a containerized implementation where video
      processing is orchestrated while streaming is handled by an external UE representing
      the IIoT device. We compare these two scenarios for energy utilization, latency,
      and responsiveness. Our test results show that only roughly 16 percent of the
      total power consumption happens on the mobile node when orchestrated. Virtualization
      adds up about 4.5 percent of the total power consumption while the latency difference
      between the two approaches becomes negligible after the streaming session is
      initialized.", "venue": "IEEE Access", "year": 2019, "referenceCount": 56, "citationCount":
      15, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://ieeexplore.ieee.org/ielx7/6287639/6514899/09296769.pdf", "status":
      "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Engineering", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-05-30", "journal": {"name": "IEEE
      Access", "pages": "229117-229131", "volume": "8"}, "citationStyles": {"bibtex":
      "@Article{Okwuibe2019SDNER,\n author = {Jude Okwuibe and Juuso Haavisto and
      E. Harjula and Ijaz Ahmad and M. Ylianttila},\n booktitle = {IEEE Access},\n
      journal = {IEEE Access},\n pages = {229117-229131},\n title = {SDN Enhanced
      Resource Orchestration of Containerized Edge Applications for Industrial IoT},\n
      volume = {8},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2488990", "name":
      "Jude Okwuibe"}, {"authorId": "120012295", "name": "Juuso Haavisto"}, {"authorId":
      "2533670", "name": "E. Harjula"}, {"authorId": "49915341", "name": "Ijaz Ahmad"},
      {"authorId": "1727678", "name": "M. Ylianttila"}]}, {"paperId": "4317e6e6eaf34eb2893531af2c97c1e195be9702",
      "externalIds": {"MAG": "2997790855", "DBLP": "conf/iotsms/RandazzoT19", "DOI":
      "10.1109/iotsms48152.2019.8939164", "CorpusId": 209459267}, "corpusId": 209459267,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4317e6e6eaf34eb2893531af2c97c1e195be9702",
      "title": "Kata Containers: An Emerging Architecture for Enabling MEC Services
      in Fast and Secure Way", "abstract": "New coming applications will be only possible
      through Mobile Edge Servers deployed in proximity of the mobile users. Due to
      the user''s mobility and server''s workload, service migration will be an integral
      part of the services. For this reason, a standardized architecture should be
      designed to accomplish a workload migration in a secure and timely manner. Most
      research done to date has focused on the use of either virtual machine (VM)
      or container or a mix of both recently. A final solution might be an architecture
      only having the advantages of both technologies as the security of the VM and
      the speed of the containers. Custom solutions, actually, by using both technologies,
      need continuous optimization from case to case and not least, any solution is
      not standards-compliant. To this purpose, we present a novel architecture, Kata
      Containers, that is stewarded by the OpenStack Foundation (OSF), which supports
      industry standards including OCI container format, Kubernetes CRI interface,
      as well as legacy virtualization technologies. With this work, we highlight
      its state of the art and the motivations that may make it the right candidate
      for deployment of new MEC services. Additionally, we make a qualitative analysis
      against the most used runtime container, Docker runc, to show what features
      should be still improved or developed from scratch by future research.", "venue":
      "International Conference on Internet of Things: Systems, Management and Security",
      "year": 2019, "referenceCount": 1, "citationCount": 34, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2019-10-01", "journal": {"name": "2019 Sixth International
      Conference on Internet of Things: Systems, Management and Security (IOTSMS)",
      "pages": "209-214"}, "citationStyles": {"bibtex": "@Article{Randazzo2019KataCA,\n
      author = {A. Randazzo and I. Tinnirello},\n booktitle = {International Conference
      on Internet of Things: Systems, Management and Security},\n journal = {2019
      Sixth International Conference on Internet of Things: Systems, Management and
      Security (IOTSMS)},\n pages = {209-214},\n title = {Kata Containers: An Emerging
      Architecture for Enabling MEC Services in Fast and Secure Way},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "153279780", "name": "A. Randazzo"}, {"authorId": "1694370",
      "name": "I. Tinnirello"}]}, {"paperId": "4331737b9d6ffc2eaf947eea9fb31cf4a7507311",
      "externalIds": {"DBLP": "conf/iciis/PriyabhashanaJ19", "MAG": "3015971471",
      "DOI": "10.1109/ICIIS47346.2019.9063284", "CorpusId": 215800037}, "corpusId":
      215800037, "publicationVenue": {"id": "4b1e9464-e30e-4d7b-bc4e-7264830d1188",
      "name": "International Conference on Industrial and Information Systems", "type":
      "conference", "alternate_names": ["ICIIS", "Int Conf Ind Inf Syst"]}, "url":
      "https://www.semanticscholar.org/paper/4331737b9d6ffc2eaf947eea9fb31cf4a7507311",
      "title": "Data Analytics with Deep Neural Networks in Fog Computing Using TensorFlow
      and Google Cloud Platform", "abstract": "Fog computing introduced by Cisco for
      local processing of tasks on edge Internet of Things (IoT) devices known as
      fog devices. Nowadays IoT applications produce a large amount of data and require
      powerful analytical approaches. These data should transmit to cloud data centres
      to extract useful information. In fog computing, these kinds of data handling
      by fog layer. The fog layer consists of geo-allocated servers which are deployed
      on the network periphery. Each fog server can be known as a lightweight version
      of the cloud server. In particular, it is preferred to the expand fog server,
      which reduces data amount before sending them to cloud data centres by using
      TensorFlow, one of the most popular deep learning library, Google Cloud Platform
      (GCP) and Deep Neural Network. Deep neural networks can be known as a computer
      system modelled on the human brain and neural system. In data classification,
      neural network provides fast and efficient results. In this scenario fog server
      known as fog station and focused on implement analytical applications in fog
      stations with the help of Docker and Kubernetes, except implement them in the
      main cloud server. Those applications belong to one or more fog devices. Through
      the research work, studied and compared the effects of using TensorFlow based
      application with multiple hidden layers. TensorFlow library with the help of
      keras used to build the neural network model. The experiment results of Rectified
      Linear Unit (ReLu), Leaky ReLU, Hyperbolic Tangent (tanH), Exponential Linear
      Unit (eLu), sigmoid, softplus, softmax and softsign activation functions have
      been evaluated. The experiment results demonstrate the feasibility, efficiency
      and the applicability of the proposed fog station. Finally, achieved (i) Centralized
      Management using Fog Station, (ii) Dynamic Deployment using Docker, (iii) Efficient
      Management & Resource Monitoring using Kubernetes, (iv) Real-Time Data Analytics
      using TensorFlow and GCP as objectives.", "venue": "International Conference
      on Industrial and Information Systems", "year": 2019, "referenceCount": 12,
      "citationCount": 6, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2019-12-01", "journal":
      {"name": "2019 14th Conference on Industrial and Information Systems (ICIIS)",
      "pages": "34-39"}, "citationStyles": {"bibtex": "@Article{Priyabhashana2019DataAW,\n
      author = {H.M.B. Priyabhashana and K.P.N. Jayasena},\n booktitle = {International
      Conference on Industrial and Information Systems},\n journal = {2019 14th Conference
      on Industrial and Information Systems (ICIIS)},\n pages = {34-39},\n title =
      {Data Analytics with Deep Neural Networks in Fog Computing Using TensorFlow
      and Google Cloud Platform},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2238960798", "name": "H.M.B. Priyabhashana"}, {"authorId": "2238961045", "name":
      "K.P.N. Jayasena"}]}, {"paperId": "4335d0f0a057176ca87c86fc08fcd8b610c67f5a",
      "externalIds": {"CorpusId": 259267165}, "corpusId": 259267165, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/4335d0f0a057176ca87c86fc08fcd8b610c67f5a",
      "title": "Kubernetes Near Real-Time Monitoring and Secure Network Architectures",
      "abstract": "The popularity of cloud deployments for applications has made Kubernetes
      the largest container orchestration system. Given the many benefits and functionalities
      it features, its growth is not showing any signs of stopping. This en masse
      adoption, however, has put Kubernetes\u2019 security flaws on the spotlight,
      as most of its industrial deployments have suffered from security issues, ranging
      from architectural vulnerabilities and insecure default configurations native
      to Kubernetes, to user misconfigurations. As a consequence, multimillion dollar
      losses and several Gigabytes of sensitive user data were stolen as a result
      of attacks. Unfortunately, there is a lack of precise, comprehensive and up
      to date documentation pertaining to Kubernetes security, compiling risks associated
      with vulnerabilities, how to exploit them, how to configure a cluster to be
      as secure as possible and security best practices. This deficit has led to a
      lack of skills on how to design secure Kubernetes architectures. Furthermore,
      there are very few open-source monitoring tools, capable of detecting attacks
      and educating users on attack vectors. The combination of both would help users
      understand in detail how a secure Kubernetes cluster is constructed, from development
      to deployment, while allowing them to explore and visualize simulated or real
      attacks. This dissertation\u2019s aims are twofold. First, to describe in detail
      the most crucial configuration pitfalls, the best practices to follow and the
      common attacks that can be conducted against a Kubernetes cluster. Second, to
      develop a near real time, scalable and fault-tolerant monitoring tool, that
      serves as a baseline for industrial Kubernetes deployments. This tool features
      concepts such as Stream processing, fast indexing and representation using Kafka,
      Elasticsearch and Kibana. Both of these goals were achieved in this dissertation,
      nonetheless, there are improvements (TLS implementation, Kafka topic/broker
      replication or Firewalling), studied in the future work section of this dissertation,
      that should be made to transform the monitoring tool from a prototype to a fully
      functional industrial design.", "venue": "", "year": 2022, "referenceCount":
      54, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{Mu\u00f1oz2022KubernetesNR,\n
      author = {Miguel \u00c1ngel L\u00f3pez Mu\u00f1oz},\n title = {Kubernetes Near
      Real-Time Monitoring and Secure Network Architectures},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2220789162", "name": "Miguel \u00c1ngel L\u00f3pez
      Mu\u00f1oz"}]}, {"paperId": "433ec876f8a68aa97766a833be301b8434d593b7", "externalIds":
      {"MAG": "2971892412", "ArXiv": "1909.03130", "DBLP": "journals/corr/abs-1909-03130",
      "CorpusId": 202539445}, "corpusId": 202539445, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/433ec876f8a68aa97766a833be301b8434d593b7",
      "title": "Automating Cluster Management with Weave", "abstract": "Modern cluster
      management systems like Kubernetes and Openstack grapple with hard combinatorial
      optimization problems: load balancing, placement, scheduling, and configuration.
      Currently, developers tackle these problems by designing custom application-specific
      algorithms---an approach that is proving unsustainable, as ad-hoc solutions
      both perform poorly and introduce overwhelming complexity to the system, making
      it challenging to add important new features. \nWe propose a radically different
      architecture, where programmers drive cluster management tasks declaratively,
      using SQL queries over cluster state stored in a relational database. These
      queries capture in a natural way both constraints on the cluster configuration
      as well as optimization objectives. When a cluster reconfiguration is required
      at runtime, our tool, called Weave, synthesizes an encoding of these queries
      into an optimization model, which it solves using an off-the-shelf solver. \nWe
      demonstrate Weave''s efficacy by powering three production-grade systems with
      it: a Kubernetes scheduler, a virtual machine management solution, and a distributed
      transactional datastore. Using Weave, we expressed complex cluster management
      policies in under 20 lines of SQL, easily added new features to these existing
      systems, and significantly improved placement quality and convergence times.",
      "venue": "arXiv.org", "year": 2019, "referenceCount": 44, "citationCount": 3,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-09-06", "journal": {"name": "ArXiv",
      "volume": "abs/1909.03130"}, "citationStyles": {"bibtex": "@Article{Suresh2019AutomatingCM,\n
      author = {L. Suresh and Jo\u00e3o Loff and Faria Kalim and Nina Narodytska and
      L. Ryzhyk and S. Gamage and B. Oki and Zeeshan Lokhandwala and Mukesh M. Hira
      and Shmuel Sagiv},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title =
      {Automating Cluster Management with Weave},\n volume = {abs/1909.03130},\n year
      = {2019}\n}\n"}, "authors": [{"authorId": "49060428", "name": "L. Suresh"},
      {"authorId": "2279802", "name": "Jo\u00e3o Loff"}, {"authorId": "8124005", "name":
      "Faria Kalim"}, {"authorId": "2701535", "name": "Nina Narodytska"}, {"authorId":
      "3150866", "name": "L. Ryzhyk"}, {"authorId": "145953481", "name": "S. Gamage"},
      {"authorId": "1724602", "name": "B. Oki"}, {"authorId": "32765848", "name":
      "Zeeshan Lokhandwala"}, {"authorId": "3439759", "name": "Mukesh M. Hira"}, {"authorId":
      "1702872", "name": "Shmuel Sagiv"}]}, {"paperId": "435717364d38c379f830e4340b3361c2edfedf28",
      "externalIds": {"DOI": "10.1007/978-1-4842-9729-2", "CorpusId": 265045654},
      "corpusId": 265045654, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/435717364d38c379f830e4340b3361c2edfedf28",
      "title": "Kubernetes Fundamentals: A Step-by-Step Development and Interview
      Guide", "abstract": null, "venue": "", "year": 2023, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes": ["Book"],
      "publicationDate": null, "journal": {"name": "Kubernetes Fundamentals"}, "citationStyles":
      {"bibtex": "@Book{Agrawal2023KubernetesFA,\n author = {Himanshu Agrawal},\n
      journal = {Kubernetes Fundamentals},\n title = {Kubernetes Fundamentals: A Step-by-Step
      Development and Interview Guide},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2265604013", "name": "Himanshu Agrawal"}]}, {"paperId": "435fa17c84a8b994f8ce5b1adebdfc44a28c1806",
      "externalIds": {"DBLP": "conf/infocom/BrunoRAHSCDB23", "DOI": "10.1109/INFOCOMWKSHPS57453.2023.10225753",
      "CorpusId": 261386260}, "corpusId": 261386260, "publicationVenue": {"id": "be267cb9-6411-4126-8b64-4847025171ee",
      "name": "Conference on Computer Communications Workshops", "type": "conference",
      "alternate_names": ["INFOCOM WKSHPS", "Conf Comput Commun Work"]}, "url": "https://www.semanticscholar.org/paper/435fa17c84a8b994f8ce5b1adebdfc44a28c1806",
      "title": "RIC-O: An Orchestrator for the Dynamic Placement of a Disaggregated
      RAN Intelligent Controller", "abstract": "In this demonstration, we present
      the RIC Orchestrator (RIC-O), a system that optimizes the deployment of Near
      Real-time RAN Intelligent Controller (Near-RT RIC) components across cloud and
      edge computing nodes. RIC-O quickly and efficiently adapts to sudden changes
      and redeploys components as needed. We describe small-scale real-world experiments
      using RIC-O and a disaggregated Near-RT RIC within a Kubernetes deployment to
      demonstrate its effectiveness.", "venue": "Conference on Computer Communications
      Workshops", "year": 2023, "referenceCount": 5, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2023-05-20", "journal": {"name": "IEEE INFOCOM 2023 - IEEE
      Conference on Computer Communications Workshops (INFOCOM WKSHPS)", "pages":
      "1-2"}, "citationStyles": {"bibtex": "@Article{Bruno2023RICOAO,\n author = {G.
      Z. Bruno and V. Radhakrishnan and G. M. Almeida and Alexandre Huff and Aloizio
      Pereira da Silva and K. Cardoso and L. Dasilva and C. Both},\n booktitle = {Conference
      on Computer Communications Workshops},\n journal = {IEEE INFOCOM 2023 - IEEE
      Conference on Computer Communications Workshops (INFOCOM WKSHPS)},\n pages =
      {1-2},\n title = {RIC-O: An Orchestrator for the Dynamic Placement of a Disaggregated
      RAN Intelligent Controller},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2142639355", "name": "G. Z. Bruno"}, {"authorId": "2236591685", "name": "V.
      Radhakrishnan"}, {"authorId": "1663911303", "name": "G. M. Almeida"}, {"authorId":
      "2068830567", "name": "Alexandre Huff"}, {"authorId": "2237992382", "name":
      "Aloizio Pereira da Silva"}, {"authorId": "3215994", "name": "K. Cardoso"},
      {"authorId": "1690016", "name": "L. Dasilva"}, {"authorId": "1986311", "name":
      "C. Both"}]}, {"paperId": "439ebd6065db2b6c6fc7664ad21eea1d73c37976", "externalIds":
      {"MAG": "3008746614", "CorpusId": 214516041}, "corpusId": 214516041, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/439ebd6065db2b6c6fc7664ad21eea1d73c37976",
      "title": "Mont\u00e9e en puissance des microservices avec Kubernetes", "abstract":
      null, "venue": "", "year": 2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [], "publicationTypes": null, "publicationDate": null, "journal": {"name": "",
      "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Ferreira2019Mont\u00e9eEP,\n
      author = {Hugo Pereira Ferreira},\n title = {Mont\u00e9e en puissance des microservices
      avec Kubernetes},\n year = {2019}\n}\n"}, "authors": [{"authorId": "1576429881",
      "name": "Hugo Pereira Ferreira"}]}, {"paperId": "43c0f3795ac4af21ef1ee045865718a068d3ec3e",
      "externalIds": {"DBLP": "conf/eucnc/BudigiriBMTJ21", "DOI": "10.1109/EuCNC/6GSummit51104.2021.9482526",
      "CorpusId": 236482497}, "corpusId": 236482497, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/43c0f3795ac4af21ef1ee045865718a068d3ec3e",
      "title": "Network Policies in Kubernetes: Performance Evaluation and Security
      Analysis", "abstract": "5G applications with ultra-high reliability and low
      latency requirements necessitate the adoption of edge computing solutions in
      mobile networks. Container orchestration frameworks like Kubernetes (K8s) have
      further emerged as the preferred standard to dynamically deploy edge applications
      on demand of end-users and third-party companies. Unfortunately, complex networking
      and security concerns have been highlighted as challenges that impede the successful
      adoption of container technology by the industry. The security challenge is
      exacerbated by (mis-)conceptions that secure inter-container communication comes
      at the cost of performance, yet both requirements are vital for 5G edge-computing
      use cases. Pursuing low-overhead security solutions, this paper investigates
      network policies, the K8s concept for controlling network isolation between
      tenants. We evaluate performance overheads of eBPF -based solutions by Calico
      and Cilium, and analyze the security of network policies, highlighting security
      threats to network policies and outline corresponding state-of-the-art solutions.
      Our assessment shows that network policies are a suitable low-overhead security
      solution for low-latency inter-container communication.", "venue": "2021 Joint
      European Conference on Networks and Communications & 6G Summit (EuCNC/6G Summit)",
      "year": 2021, "referenceCount": 0, "citationCount": 13, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://zenodo.org/record/5776322/files/Network%20Policies%20in%20Kubernetes%20Performance%20Evaluation%20and%20Security%20Analysis.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2021-06-08",
      "journal": {"name": "2021 Joint European Conference on Networks and Communications
      & 6G Summit (EuCNC/6G Summit)", "pages": "407-412"}, "citationStyles": {"bibtex":
      "@Article{Budigiri2021NetworkPI,\n author = {Gerald Budigiri and Christoph Baumann
      and J. M\u00fchlberg and E. Truyen and W. Joosen},\n booktitle = {2021 Joint
      European Conference on Networks and Communications & 6G Summit (EuCNC/6G Summit)},\n
      journal = {2021 Joint European Conference on Networks and Communications & 6G
      Summit (EuCNC/6G Summit)},\n pages = {407-412},\n title = {Network Policies
      in Kubernetes: Performance Evaluation and Security Analysis},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "1646653439", "name": "Gerald Budigiri"}, {"authorId":
      "48171671", "name": "Christoph Baumann"}, {"authorId": "2212216", "name": "J.
      M\u00fchlberg"}, {"authorId": "1743981", "name": "E. Truyen"}, {"authorId":
      "1752104", "name": "W. Joosen"}]}, {"paperId": "43c68f7d926bb0fc60b9dda40eb92d37309ee0ac",
      "externalIds": {"DOI": "10.3390/app12010140", "CorpusId": 245484174}, "corpusId":
      245484174, "publicationVenue": {"id": "136edf8d-0f88-4c2c-830f-461c6a9b842e",
      "name": "Applied Sciences", "type": "journal", "alternate_names": ["Appl Sci"],
      "issn": "2076-3417", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-217814",
      "alternate_urls": ["http://www.mathem.pub.ro/apps/", "https://www.mdpi.com/journal/applsci",
      "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-217814"]}, "url":
      "https://www.semanticscholar.org/paper/43c68f7d926bb0fc60b9dda40eb92d37309ee0ac",
      "title": "EdgeX over Kubernetes: Enabling Container Orchestration in EdgeX",
      "abstract": "With the exponential growth of the Internet of Things (IoT), edge
      computing is in the limelight for its ability to quickly and efficiently process
      numerous data generated by IoT devices. EdgeX Foundry is a representative open-source-based
      IoT gateway platform, providing various IoT protocol services and interoperability
      between them. However, due to the absence of container orchestration technology,
      such as automated deployment and dynamic resource management for application
      services, EdgeX Foundry has fundamental limitations of a potential edge computing
      platform. In this paper, we propose EdgeX over Kubernetes, which enables remote
      service deployment and autoscaling to application services by running EdgeX
      Foundry over Kubernetes, which is a product-grade container orchestration tool.
      Experimental evaluation results prove that the proposed platform increases manageability
      through the remote deployment of application services and improves the throughput
      of the system and service quality with real-time monitoring and autoscaling.",
      "venue": "Applied Sciences", "year": 2021, "referenceCount": 19, "citationCount":
      3, "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.mdpi.com/2076-3417/12/1/140/pdf?version=1640673300", "status":
      "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2021-12-23", "journal": {"name": "Applied Sciences"},
      "citationStyles": {"bibtex": "@Article{Lee2021EdgeXOK,\n author = {Seunghwa
      Lee and Linh-An Phan and Dae-Heon Park and Sehan Kim and Taehong Kim},\n booktitle
      = {Applied Sciences},\n journal = {Applied Sciences},\n title = {EdgeX over
      Kubernetes: Enabling Container Orchestration in EdgeX},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2992913", "name": "Seunghwa Lee"}, {"authorId": "151095859",
      "name": "Linh-An Phan"}, {"authorId": "49777745", "name": "Dae-Heon Park"},
      {"authorId": "2758210", "name": "Sehan Kim"}, {"authorId": "2338970", "name":
      "Taehong Kim"}]}, {"paperId": "43c85e782a3cd8182751ab1b2b5647d1bb31d0b9", "externalIds":
      {"DBLP": "conf/sqamia/HennoJM22", "CorpusId": 252919473}, "corpusId": 252919473,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/43c85e782a3cd8182751ab1b2b5647d1bb31d0b9",
      "title": "Handling Software Icebergs", "abstract": "Once upon a time programming
      was done just writing commands of a programming language in a proper order,
      but currently software is created using libraries, API-s (Application Programming
      Interface), frameworks, Dockers, Kubernetes etc. Libraries load other libraries,
      API-s call other API-s and as a result seemingly short and simple programs may
      have amazing depth of code and complexity, what causes for programmers many
      problems, especially for students. For interpreted code this depth could be
      (approximately) measured with the ratio of the visual code vs code in libraries.
      It is shown that the number of LOC (Lines Of Code) in invisible code \u2013
      code in libraries, modules, API-s etc. is even in small practical programs thousands-millions
      times greater than the number of lines in the visible code. Innovations (cloud
      computing, multicore CPU-s etc.) cause introduction of new libraries and modules
      which enable use of new possibilities in existing software ecosystem, but also
      introduce bigger and bigger amounts of invisible code. During the pandemic grow
      student''s use of WWW tutorials, but abundance of code in programming examples/tutorials
      on WWW is sometimes unnecessary, caused by obsolete or unneeded packages and
      libraries and sometimes also by desire to earn on adverting (un-needed, but
      popular) code packages for high-paying customers. In the following are analyzed
      some Python 3 and JavaScript examples.", "venue": "SQAMIA", "year": 2022, "referenceCount":
      17, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Review"], "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Article{Henno2022HandlingSI,\n author = {J. Henno and H. Jaakkola and J. M\u00e4kel\u00e4},\n
      booktitle = {SQAMIA},\n title = {Handling Software Icebergs},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2034517", "name": "J. Henno"}, {"authorId": "2799443",
      "name": "H. Jaakkola"}, {"authorId": "145327230", "name": "J. M\u00e4kel\u00e4"}]},
      {"paperId": "43cb18dcf9c2c18406b9b1b11e0e544e68f52c85", "externalIds": {"DBLP":
      "journals/tnsm/LiHJWL23", "DOI": "10.1109/TNSM.2022.3229675", "CorpusId": 254812464},
      "corpusId": 254812464, "publicationVenue": {"id": "a00fde74-d8df-4613-b825-0fff9f531d3f",
      "name": "IEEE Transactions on Network and Service Management", "type": "journal",
      "alternate_names": ["IEEE Trans Netw Serv Manag"], "issn": "1932-4537", "url":
      "http://ejournals.ebsco.com/direct.asp?JournalID=714200", "alternate_urls":
      ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=4275028", "http://ieeexplore.ieee.org/servlet/opac?punumber=4275028"]},
      "url": "https://www.semanticscholar.org/paper/43cb18dcf9c2c18406b9b1b11e0e544e68f52c85",
      "title": "Kano: Efficient Cloud Native Network Policy Verification", "abstract":
      "Cloud-native computing has become a prevailing paradigm with lightweight runtime-level
      isolation and fast delivery for scalable applications. Cloud-native network
      policies (CNNPs) are used to realize network isolation with respect to security
      and availability. Due to the dynamic environment, CNNPs are label-based instead
      of IP-based and take the form of attribute-based access control (ABAC) to obtain
      good expressivity. To ensure the correctness of network isolation, CNNP verification
      is an essential but challenging problem given the large scale and frequent updates
      of cloud-native environments and the operation automation demand. Thus, we design
      Kano, an efficient, i.e., easy-to-use and fast-to-execute, system for verifying
      large scale CNNPs at runtime. Kano is operation-friendly, with a proposed intent-based
      verification language. A bit matrix model with a prefiltration algorithm and
      a partial-update method is proposed to support fast complete and incremental
      verification. Kano also generates fix plans for violations to assist operators.
      Kano is implemented as a CNNP verification system that is used in ABAC cloud-native
      platforms and is integrated into the popular Kubernetes orchestrator. An evaluation
      on a large scale network of 100k nodes and about 68k policies shows the efficiency
      of Kano, with 12.51 seconds for all reachable invariant verification and 0.299
      milliseconds for policy addition verification.", "venue": "IEEE Transactions
      on Network and Service Management", "year": 2023, "referenceCount": 48, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-09-01", "journal": {"name": "IEEE
      Transactions on Network and Service Management", "pages": "3747-3764", "volume":
      "20"}, "citationStyles": {"bibtex": "@Article{Li2023KanoEC,\n author = {Yifan
      Li and Xiaohe Hu and Chengjun Jia and Kai Wang and Jun Li},\n booktitle = {IEEE
      Transactions on Network and Service Management},\n journal = {IEEE Transactions
      on Network and Service Management},\n pages = {3747-3764},\n title = {Kano:
      Efficient Cloud Native Network Policy Verification},\n volume = {20},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "144893962", "name": "Yifan Li"},
      {"authorId": "2109826250", "name": "Xiaohe Hu"}, {"authorId": "31266068", "name":
      "Chengjun Jia"}, {"authorId": "2116715137", "name": "Kai Wang"}, {"authorId":
      "145409858", "name": "Jun Li"}]}, {"paperId": "43d006166c7ec98e6b7363a7877809885c7e1e92",
      "externalIds": {"DBLP": "conf/nfvsdn/MonacoOPR22", "DOI": "10.1109/NFV-SDN56302.2022.9974828",
      "CorpusId": 254737437}, "corpusId": 254737437, "publicationVenue": {"id": "265e5461-e186-46e6-b95b-6767e39326db",
      "name": "Conference on Network Function Virtualization and Software Defined
      Network", "type": "conference", "alternate_names": ["NFV-SDN", "Conf Netw Funct
      Virtualiz Softw Defin Netw"]}, "url": "https://www.semanticscholar.org/paper/43d006166c7ec98e6b7363a7877809885c7e1e92",
      "title": "Enabling Scalable SFCs in Kubernetes with eBPF-based Cross-Connections",
      "abstract": "Service Function Chains (SFCs) are composed of an ordered set of
      Network Functions (NFs) that provide network services to the handled traffic.
      However, traffic is highly variable over time, thus telco operators need to
      deploy scalable chains that can quickly and easily adapt to the load fluctuations.
      Although Kubernetes has already brought benefits in terms of increased scalability
      and flexibility to general-purpose applications, it is not natively suitable
      for network workloads since it lacks some functionalities required by network
      services. This paper presents a simple, cloud-native architecture that integrates
      SFCs in Kubernetes, with the aim of seamlessly leveraging cloud-native features
      such as horizontal autoscaling. The solution is based on flexible cross-connections,
      namely logical links that connect adjacent network functions, which can promptly
      adapt the distribution of the network traffic to the existing network functions
      in case of scale in/out events affecting the number of NF instances. The architecture
      has been validated with an open-source proof-of-concept implementation based
      on dedicated Kubernetes operators and an eBPF load balancer, demonstrating the
      feasibility and the efficiency of the proposed approach.", "venue": "Conference
      on Network Function Virtualization and Software Defined Network", "year": 2022,
      "referenceCount": 9, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-11-14",
      "journal": {"name": "2022 IEEE Conference on Network Function Virtualization
      and Software Defined Networks (NFV-SDN)", "pages": "33-38"}, "citationStyles":
      {"bibtex": "@Article{Monaco2022EnablingSS,\n author = {Francesco Monaco and
      Giuseppe Ognibene and Federico Parola and Fulvio Risso},\n booktitle = {Conference
      on Network Function Virtualization and Software Defined Network},\n journal
      = {2022 IEEE Conference on Network Function Virtualization and Software Defined
      Networks (NFV-SDN)},\n pages = {33-38},\n title = {Enabling Scalable SFCs in
      Kubernetes with eBPF-based Cross-Connections},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2196231167", "name": "Francesco Monaco"}, {"authorId": "2180406585",
      "name": "Giuseppe Ognibene"}, {"authorId": "2091391653", "name": "Federico Parola"},
      {"authorId": "2240973151", "name": "Fulvio Risso"}]}, {"paperId": "43d0bf2e4158215fa34845e1485a9433f14646d4",
      "externalIds": {"DBLP": "conf/sbac-pad/MedeirosWSP23", "DOI": "10.1109/SBAC-PAD59825.2023.00031",
      "CorpusId": 265054864}, "corpusId": 265054864, "publicationVenue": {"id": "1db2368e-5986-4b06-9137-e63c1aa4f5e1",
      "name": "Symposium on Computer Architecture and High Performance Computing",
      "type": "conference", "alternate_names": ["SBAC-PAD", "Symp Comput Archit High
      Perform Comput"]}, "url": "https://www.semanticscholar.org/paper/43d0bf2e4158215fa34845e1485a9433f14646d4",
      "title": "Kub: Enabling Elastic HPC Workloads on Containerized Environments",
      "abstract": "The conventional model of resource allocation in HPC systems is
      static. Thus, a job cannot leverage newly available resources in the system
      or release underutilized resources during the execution. In this paper, we present
      Kub, a methodology that enables elastic execution of HPC workloads on Kubernetes
      so that the resources allocated to a job can be dynamically scaled during the
      execution. One main optimization of our method is to maximize the reuse of the
      originally allocated resources so that the disruption to the running job can
      be minimized. The scaling procedure is coordinated among nodes through remote
      procedure calls on Kubernetes for deploying workloads in the cloud. We evaluate
      our approach using one synthetic benchmark and two production-level MPI-based
      HPC applications - GRO-MACS and CM1. Our results demonstrate that the benefits
      of adapting the allocated resources depend on the workload characteristics.
      In the tested cases, a properly chosen scaling point for increasing resources
      during execution achieved up to 2x speedup. Also, the overhead of checkpointing
      and data reshuffling significantly influences the selection of optimal scaling
      points and requires application-specific knowledge.", "venue": "Symposium on
      Computer Architecture and High Performance Computing", "year": 2023, "referenceCount":
      14, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-17", "journal":
      {"name": "2023 IEEE 35th International Symposium on Computer Architecture and
      High Performance Computing (SBAC-PAD)", "pages": "219-229"}, "citationStyles":
      {"bibtex": "@Article{Medeiros2023KubEE,\n author = {D. Medeiros and Jacob Wahlgren
      and Gabin Schieffer and Ivy Peng},\n booktitle = {Symposium on Computer Architecture
      and High Performance Computing},\n journal = {2023 IEEE 35th International Symposium
      on Computer Architecture and High Performance Computing (SBAC-PAD)},\n pages
      = {219-229},\n title = {Kub: Enabling Elastic HPC Workloads on Containerized
      Environments},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2226452874",
      "name": "D. Medeiros"}, {"authorId": "123760771", "name": "Jacob Wahlgren"},
      {"authorId": "2226457272", "name": "Gabin Schieffer"}, {"authorId": "2265676235",
      "name": "Ivy Peng"}]}, {"paperId": "43e32d0c6a823bca7aa88f9af22f85799e7e95ce",
      "externalIds": {"DBLP": "conf/ic2e/RaithRPFD22", "DOI": "10.1109/IC2E55432.2022.00010",
      "CorpusId": 253555871}, "corpusId": 253555871, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/43e32d0c6a823bca7aa88f9af22f85799e7e95ce",
      "title": "An End-to-End Framework for Benchmarking Edge-Cloud Cluster Management
      Techniques", "abstract": "This paper presents a framework for defining, performing,
      and analyzing distributed load testing experiments for benchmarking edge-cloud
      clusters. This end-to-end workflow helps researchers build reproducible environments
      to evaluate cluster management techniques. Our implementation extends the open
      source tool Galileo by adding support for distributed execution on Kubernetes
      clusters, additional system monitoring instruments, as well as out-of-the box
      experiment workloads. We focus on providing tools that run across popular CPU
      architectures and provide a set of representative workloads, such as edge AI
      functions. We demonstrate our framework''s capabilities in a set of experiments
      based on use cases commonly found in edge computing systems research. Additionally,
      we show that the resource usage of our system is minimal and that it can run
      on resource-constrained devices.", "venue": "2022 IEEE International Conference
      on Cloud Engineering (IC2E)", "year": 2022, "referenceCount": 22, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-09-01", "journal":
      {"name": "2022 IEEE International Conference on Cloud Engineering (IC2E)", "pages":
      "22-28"}, "citationStyles": {"bibtex": "@Article{Raith2022AnEF,\n author = {Philipp
      Raith and T. Rausch and Paul Pr\u00fcller and Alireza Furutanpey and S. Dustdar},\n
      booktitle = {2022 IEEE International Conference on Cloud Engineering (IC2E)},\n
      journal = {2022 IEEE International Conference on Cloud Engineering (IC2E)},\n
      pages = {22-28},\n title = {An End-to-End Framework for Benchmarking Edge-Cloud
      Cluster Management Techniques},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2090012665", "name": "Philipp Raith"}, {"authorId": "32358791", "name": "T.
      Rausch"}, {"authorId": "2190969883", "name": "Paul Pr\u00fcller"}, {"authorId":
      "2189182112", "name": "Alireza Furutanpey"}, {"authorId": "1691109", "name":
      "S. Dustdar"}]}, {"paperId": "43f28c9b6b9c8ae5d23b2c18f243bc7ba0798ab7", "externalIds":
      {"DBLP": "conf/sigcomm/SagkriotisP22", "DOI": "10.1145/3546037.3546058", "CorpusId":
      253110400}, "corpusId": 253110400, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/43f28c9b6b9c8ae5d23b2c18f243bc7ba0798ab7",
      "title": "Accelerating kubernetes with in-network caching", "abstract": "We
      present a new Kubernetes architecture that leverages in-network caching to accelerate
      one of Kubernetes'' core components, its key-value store. We also identify performance
      limitations of previous in-network caching platforms and propose a new platform
      that demonstrates better throughput and scalability by utilising a different
      replication method.", "venue": "SIGCOMM Posters and Demos", "year": 2022, "referenceCount":
      12, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2022-08-22",
      "journal": {"name": "Proceedings of the SIGCOMM ''22 Poster and Demo Sessions"},
      "citationStyles": {"bibtex": "@Article{Sagkriotis2022AcceleratingKW,\n author
      = {Stefanos G. Sagkriotis and D. Pezaros},\n booktitle = {SIGCOMM Posters and
      Demos},\n journal = {Proceedings of the SIGCOMM ''22 Poster and Demo Sessions},\n
      title = {Accelerating kubernetes with in-network caching},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "51057858", "name": "Stefanos G. Sagkriotis"}, {"authorId":
      "2449975", "name": "D. Pezaros"}]}, {"paperId": "4408054159a704cc642c789f3e4c2cf4fef48e02",
      "externalIds": {"DOI": "10.1109/ICACCS54159.2022.9785124", "CorpusId": 249474283},
      "corpusId": 249474283, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4408054159a704cc642c789f3e4c2cf4fef48e02",
      "title": "Managing Multi-Cloud Deployments on Kubernetes with Istio, Prometheus
      and Grafana", "abstract": "Today, Cloud-native is changing the way applications
      are constructed and being deployed. Traditionally, application development followed
      a waterfall and monolithic approach. Whereas cloud-native follows a microservices
      and agile approach. This cloud-native approach has many advantages over traditional
      approaches. However, relying on a single cloud vendor will create a number of
      issues like single-vendor dependency, the problem of reliability and availability,
      as no single cloud service provider has the best tools for everything. To remove
      this single-vendor dependency, Cloud-Architects use a multi-cloud environment.
      Multi-cloud refers to the use of many cloud providers and services in a single
      cloud network infrastructure. Multi-cloud environments are used to gain all
      benefits from different vendors like distribute computing resources, minimum
      downtime and high data availability. Organizations are using multi-cloud to
      increase their computing power and services availability for a business. In
      recent years, cloud service advances have led to a shift from private clouds
      to multi-tenant clouds and hybrid clouds. This multi-cloud will be a mixed environment
      that will take advantage of many infrastructure environments, such as private
      and public clouds.", "venue": "2022 8th International Conference on Advanced
      Computing and Communication Systems (ICACCS)", "year": 2022, "referenceCount":
      12, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-03-25",
      "journal": {"name": "2022 8th International Conference on Advanced Computing
      and Communication Systems (ICACCS)", "pages": "525-529", "volume": "1"}, "citationStyles":
      {"bibtex": "@Conference{Sharma2022ManagingMD,\n author = {Vivek Sharma},\n booktitle
      = {2022 8th International Conference on Advanced Computing and Communication
      Systems (ICACCS)},\n journal = {2022 8th International Conference on Advanced
      Computing and Communication Systems (ICACCS)},\n pages = {525-529},\n title
      = {Managing Multi-Cloud Deployments on Kubernetes with Istio, Prometheus and
      Grafana},\n volume = {1},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2112607466",
      "name": "Vivek Sharma"}]}, {"paperId": "44368a9989649a34f981974bc87f38195dc1b7d6",
      "externalIds": {"MAG": "2755981872", "DBLP": "conf/icws/LuoPSSYRW17", "DOI":
      "10.1109/ICWS.2017.64", "CorpusId": 4764774}, "corpusId": 4764774, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/44368a9989649a34f981974bc87f38195dc1b7d6",
      "title": "RestSep: Towards a Test-Oriented Privilege Partitioning Approach for
      RESTful APIs", "abstract": "At present, a growing number of web applications
      especially cloud computing systems employ representational state transfer (REST)
      API as the interface to expose their services for simplicity and clarity. For
      security purposes, service providers prefer to control the access to the provided
      interface based on the principle of least privilege. However, how to divide
      the administrative privileges remains a difficulty in practice. In this work,
      we simplify the privilege partitioning problem into a classification problem
      of RESTful functions, so the permission to call a category of functions can
      be granted to a specific administrator. We propose a RESTful API classification
      approach called RestSep based on genetic algorithm. A classification is represented
      as a 2-dimensional matrix, which is used as the chromosome. Customized operators
      of selection, mutation and crossover are designed. The fitness function is designed
      to balance parameters such as number of categories, test case coverage, function
      overlapping, etc. Experiments on popular clouds like OpenStack and Kubernetes
      indicate RestSep can generate a self-explanatory classification result, which
      can serve as a guideline for privilege partitioning. The overhead of test generation
      is at most 13.1% and the overhead of genetic algorithm is at most 183.29s, which
      are acceptable for practical use.", "venue": "2017 IEEE International Conference
      on Web Services (ICWS)", "year": 2017, "referenceCount": 23, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2017-06-01", "journal": {"name": "2017 IEEE International Conference on Web
      Services (ICWS)", "pages": "548-555"}, "citationStyles": {"bibtex": "@Article{Luo2017RestSepTA,\n
      author = {Yang Luo and Tian Puyang and Xiaoning Sun and Qingni Shen and Yahui
      Yang and Anbang Ruan and Zhonghai Wu},\n booktitle = {2017 IEEE International
      Conference on Web Services (ICWS)},\n journal = {2017 IEEE International Conference
      on Web Services (ICWS)},\n pages = {548-555},\n title = {RestSep: Towards a
      Test-Oriented Privilege Partitioning Approach for RESTful APIs},\n year = {2017}\n}\n"},
      "authors": [{"authorId": "2112600769", "name": "Yang Luo"}, {"authorId": "7206666",
      "name": "Tian Puyang"}, {"authorId": "2112322104", "name": "Xiaoning Sun"},
      {"authorId": "40238834", "name": "Qingni Shen"}, {"authorId": "2210002", "name":
      "Yahui Yang"}, {"authorId": "1895851", "name": "Anbang Ruan"}, {"authorId":
      "2109716565", "name": "Zhonghai Wu"}]}, {"paperId": "443a90afaa7b3435f8635e85446415ba0b1d81e2",
      "externalIds": {"CorpusId": 219618876}, "corpusId": 219618876, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/443a90afaa7b3435f8635e85446415ba0b1d81e2",
      "title": "This space should be left blank, except for the name of the first
      author. (The publisher will re-type the main title, author names and addresses.
      Please give this information on a separate page.)", "abstract": "The ATLAS experiment
      at the LHC relies on a complex and distributed Trigger and Data Acquisition
      (TDAQ) system to gather and select particle collision data. The Event Filter
      (EF) component of the TDAQ system is responsible for executing advanced selection
      algorithms, reducing the data rate to a level suitable for recording to permanent
      storage. The EF functionality is provided by a computing farm made up of thousands
      of commodity servers, each executing one or more processes. Moving the EF farm
      management towards a solution based on software containers is one of the main
      theme of the ATLAS TDAQ Phase-II upgrades in the area of the online software;
      it would make it possible to open new possibilities for fault tolerance, reliability
      and scalability. This paper presents the results of an evaluation of Kubernetes
      as a possible orchestrator of the ATLAS TDAQ EF computing farm. Kubernetes is
      a system for advanced management of containerized applications in large clusters.
      This paper will first highlight some of the technical solutions adopted to run
      the offline version of today\u2019s EF software in a Docker container. Then
      it will focus on some scaling performance measurements executed with a cluster
      of 1000 CPU cores. In particular, this paper will report about the way Kubernetes
      scales in deploying containers as a function of the cluster size and show how
      a proper tuning of the Query per Second (QPS) Kubernetes parameter set can improve
      the scaling of applications in terms of running replicas. Finally, an assessment
      will be given about the possibility to use Kubernetes as an orchestrator of
      the EF computing farm in LHC\u2019s Run 4.", "venue": "", "year": 2018, "referenceCount":
      4, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Physics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{Avolio2018ThisSS,\n author
      = {G. Avolio and M. Cadeddu and R. Hauser},\n title = {This space should be
      left blank, except for the name of the first author. (The publisher will re-type
      the main title, author names and addresses. Please give this information on
      a separate page.)},\n year = {2018}\n}\n"}, "authors": [{"authorId": "107966422",
      "name": "G. Avolio"}, {"authorId": "35427174", "name": "M. Cadeddu"}, {"authorId":
      "46908354", "name": "R. Hauser"}]}, {"paperId": "447b2b1602d749e1b144022f1f3c477679776457",
      "externalIds": {"DBLP": "conf/asplos/LiuZQCS21", "DOI": "10.1145/3445814.3446756",
      "CorpusId": 232165450}, "corpusId": 232165450, "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99",
      "name": "International Conference on Architectural Support for Programming Languages
      and Operating Systems", "type": "conference", "alternate_names": ["ASPLOS",
      "Int Conf Archit Support Program Lang Oper Syst", "Archit Support Program Lang
      Oper Syst", "Architectural Support for Programming Languages and Operating Systems"],
      "url": "http://www.acm.org/sigplan/"}, "url": "https://www.semanticscholar.org/paper/447b2b1602d749e1b144022f1f3c477679776457",
      "title": "Automatically detecting and fixing concurrency bugs in go software
      systems", "abstract": "Go is a statically typed programming language designed
      for efficient and reliable concurrent programming. For this purpose, Go provides
      lightweight goroutines and recommends passing messages using channels as a less
      error-prone means of thread communication. Go has become increasingly popular
      in recent years and has been adopted to build many important infrastructure
      software systems. However, a recent empirical study shows that concurrency bugs,
      especially those due to misuse of channels, exist widely in Go. These bugs severely
      hurt the reliability of Go concurrent systems. To fight Go concurrency bugs
      caused by misuse of channels, this paper proposes a static concurrency bug detection
      system, GCatch, and an automated concurrency bug fixing system, GFix. After
      disentangling an input Go program, GCatch models the complex channel operations
      in Go using a novel constraint system and applies a constraint solver to identify
      blocking bugs. GFix automatically patches blocking bugs detected by GCatch using
      Go\u2019s channel-related language features. We apply GCatch and GFix to 21
      popular Go applications, including Docker, Kubernetes, and gRPC. In total, GCatch
      finds 149 previously unknown blocking bugs due to misuse of channels and GFix
      successfully fixes 124 of them. We have reported all detected bugs and generated
      patches to developers. So far, developers have fixed 125 blocking misuse-of-channel
      bugs based on our reporting. Among them, 87 bugs are fixed by applying GFix\u2019s
      patches directly.", "venue": "International Conference on Architectural Support
      for Programming Languages and Operating Systems", "year": 2021, "referenceCount":
      90, "citationCount": 16, "influentialCitationCount": 4, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book", "Conference"], "publicationDate": "2021-04-19", "journal": {"name":
      "Proceedings of the 26th ACM International Conference on Architectural Support
      for Programming Languages and Operating Systems"}, "citationStyles": {"bibtex":
      "@Article{Liu2021AutomaticallyDA,\n author = {Ziheng Liu and Shuofei Zhu and
      Boqin Qin and Hao Chen and Linhai Song},\n booktitle = {International Conference
      on Architectural Support for Programming Languages and Operating Systems},\n
      journal = {Proceedings of the 26th ACM International Conference on Architectural
      Support for Programming Languages and Operating Systems},\n title = {Automatically
      detecting and fixing concurrency bugs in go software systems},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2117942851", "name": "Ziheng Liu"}, {"authorId": "46243281",
      "name": "Shuofei Zhu"}, {"authorId": "72990584", "name": "Boqin Qin"}, {"authorId":
      "2149051756", "name": "Hao Chen"}, {"authorId": "2473596", "name": "Linhai Song"}]},
      {"paperId": "448fb801d2d14c80a264a51fa7aa76bdb1bbfb12", "externalIds": {"MAG":
      "2791313089", "DBLP": "conf/worldcist/BordelRA18", "DOI": "10.1007/978-3-319-77712-2_13",
      "CorpusId": 21122737}, "corpusId": 21122737, "publicationVenue": {"id": "d8fc597b-0223-49d7-9415-3327f07e2bcb",
      "name": "WorldCIST", "type": "conference", "alternate_names": ["World Conf Inf
      Syst Technol", "World Conference on Information Systems and Technologies"]},
      "url": "https://www.semanticscholar.org/paper/448fb801d2d14c80a264a51fa7aa76bdb1bbfb12",
      "title": "Virtualization-Based Techniques for the Design, Management and Implementation
      of Future 5G Systems with Network Slicing", "abstract": null, "venue": "WorldCIST",
      "year": 2018, "referenceCount": 18, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2018-03-27", "journal": {"pages": "133-143"}, "citationStyles": {"bibtex":
      "@Article{Bordel2018VirtualizationBasedTF,\n author = {Borja Bordel and Diego
      S\u00e1nchez de Rivera and R. Alcarria},\n booktitle = {WorldCIST},\n pages
      = {133-143},\n title = {Virtualization-Based Techniques for the Design, Management
      and Implementation of Future 5G Systems with Network Slicing},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "48997081", "name": "Borja Bordel"}, {"authorId": "3340777",
      "name": "Diego S\u00e1nchez de Rivera"}, {"authorId": "50100447", "name": "R.
      Alcarria"}]}, {"paperId": "44992ae2c3dd74f9dfb5b4847df20b17e7e01aeb", "externalIds":
      {"DBLP": "conf/issre/SarwarZMWM20", "DOI": "10.1109/ISSREW51248.2020.00034",
      "CorpusId": 230995090}, "corpusId": 230995090, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/44992ae2c3dd74f9dfb5b4847df20b17e7e01aeb",
      "title": "Multi-label Classification of Commit Messages using Transfer Learning",
      "abstract": "Commit messages are used in the industry by developers to annotate
      changes made to the code. Accurate classification of these messages can help
      monitor the software evolution process and enable better tracking for various
      industrial stakeholders. In this paper, we present a state of the art method
      for commit message classification into categories as per Swanson\u2019s maintenance
      activities i.e. \u201cCorrective\u201d, \u201cPerfective\u201d, and \u201cAdaptive\u201d.
      This is a challenging task because not all commit messages are well written
      and informative. Existing approaches rely on keyword-based techniques to solve
      this problem. However, these approaches are oblivious to the full language model
      and do not recognize the contextual relationship between words. State of the
      art methodology in Natural Language Processing (NLP), is to train a context-aware
      neural network (Transformer) on a very large data set that encompasses the entire
      language and then fine-tunes it for a specific task. In this way, the model
      can learn the language, pay attention to the context, and then transfer that
      knowledge for better performance at the specific task. We use an off-the-shelf
      neural network called DistilBERT and fine-tune it for commit message classification
      task. This step is non-trivial because programming languages and commit messages
      have unique keywords, jargon, and idioms. This paper presents our effort in
      training this model and constructing the data set for this task. We describe
      the rules used to construct the data set. We validate our approach on industrial
      projects from GitHub, such as Kubernetes, Linux, TensorFlow, Spark, TypeScript,
      and PyTorch. We were able to achieve 87% F1-score for the commit message classification
      task, which is an order of magnitude accurate than previous studies.", "venue":
      "2020 IEEE International Symposium on Software Reliability Engineering Workshops
      (ISSREW)", "year": 2020, "referenceCount": 16, "citationCount": 8, "influentialCitationCount":
      2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2020-10-01", "journal": {"name": "2020
      IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)",
      "pages": "37-42"}, "citationStyles": {"bibtex": "@Article{Sarwar2020MultilabelCO,\n
      author = {Muhammad Usman Sarwar and Sarim Zafar and Mohamed Wiem Mkaouer and
      G. Walia and Muhammad Zubair Malik},\n booktitle = {2020 IEEE International
      Symposium on Software Reliability Engineering Workshops (ISSREW)},\n journal
      = {2020 IEEE International Symposium on Software Reliability Engineering Workshops
      (ISSREW)},\n pages = {37-42},\n title = {Multi-label Classification of Commit
      Messages using Transfer Learning},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "2014948906", "name": "Muhammad Usman Sarwar"}, {"authorId": "7641396", "name":
      "Sarim Zafar"}, {"authorId": "1810097", "name": "Mohamed Wiem Mkaouer"}, {"authorId":
      "10100364", "name": "G. Walia"}, {"authorId": "2093196225", "name": "Muhammad
      Zubair Malik"}]}, {"paperId": "44a281a48f3f0ef8d21a9ff86907f28c69d55747", "externalIds":
      {"CorpusId": 53744575}, "corpusId": 53744575, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/44a281a48f3f0ef8d21a9ff86907f28c69d55747",
      "title": "Bitnami Vision The Rise of the Application Examining Trends in Application
      Packaging & Deployment", "abstract": "Bitnami makes it easier to deploy and
      manage server applications by providing trusted, easy to use, modern infrastructure
      stacks across all legacy and cloud-native platforms. Cloud computing has enabled
      a new kind of industrial revolution, allowing the automation of what used to
      be complex, manual tasks performed in traditional enterprise data centers. In
      parallel, modern software development has evolved to adopt new stacks that contain
      language runtimes and third-party dependencies not typically included with the
      base operating system. This \u2018unbundling\u2019 of applications has been
      accelerated by the rise of containers, which allow the mixing and matching of
      stack components without depending on the underlying infrastructure vendor.
      The benefits in the development process have come at an increased operational
      complexity cost, especially when needing to support multiple clouds, container
      platforms or hybrid environments. Bitnami accelerates the adoption of these
      new platforms by providing ready-to-run solutions that are both easy to use
      by developers and suitable for production (\u201cLoved by Devs, Trusted by Ops\u201d).
      Bitnami simplifies the management of multi-cloud, cross-platform environments
      not by trying to abstract differences away, but by providing functionally equivalent,
      platformoptimized application and infrastructure stacks for each of them. This
      allows a degree of standardization across platforms while allowing in-depth
      integration with vendor-specific features and services. Bitnami addresses the
      changing application deployment needs of our customers with three core product
      offerings: an application catalog, a curated catalog of pre-packaged, ready-to-run
      application and infrastructure stacks; a set of Kubernetes projects that are
      driving the application packaging standards; and Stacksmith, a tool for simplifying
      and automating enterprise application migration. The Bitnami application catalog
      is incredibly popular, having millions of on-premise installations and driving
      over 1 billion cloud hours of annual usage for our commercial partners, which
      include AWS, Azure, Oracle, VMWare and Google. The catalog makes it easier to
      stand up application and infrastructure stacks anywhere, from single VMs for
      quick casual testing to complex, productionready clustered setups. Bitnami is
      the author or major contributor to key container-based projects such as the
      Kubeapps application catalog and launcher, the Kubeless serverless solution,
      and the Helm package manager. As the industry evolves and standardizes around
      the Kubernetes platform, Bitnami will continue to drive important parts of the
      Kubernetes ecosystem, focusing primarily around application deployment.", "venue":
      "", "year": 2018, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Stacksmith2018BitnamiVT,\n
      author = {Bitnami Stacksmith},\n title = {Bitnami Vision The Rise of the Application
      Examining Trends in Application Packaging & Deployment},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "2080570091", "name": "Bitnami Stacksmith"}]}, {"paperId":
      "44a2a1eb77f6361fce6fb3f79433ef7c30e785d1", "externalIds": {"DOI": "10.1109/ICE3IS56585.2022.10010300",
      "CorpusId": 255996509}, "corpusId": 255996509, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/44a2a1eb77f6361fce6fb3f79433ef7c30e785d1",
      "title": "Performance Analysis of High Availability Video Conference Service
      with Kubernetes Cluster Across Data Center", "abstract": "Due to increasing
      number of users and network traffics, video conference services can experience
      downtime in case of overloading request to video conference servers. To avoid
      this, an infrastructure that can replicate itself is for mitigating the risk
      of service downtime. The infrastructure is built using a container orchestration
      tool called Kubernetes that runs on Digital Ocean and Linode which functions
      as Cloud Services. This paper discusses the design of a Kubernetes cluster in
      which there are two Data Centers originating from two different countries. The
      Data Center can accommodate several Kubernetes nodes where each node accommodates
      one pod that can run one application through an intermediary service. In addition,
      nodes are equipped with the auto-scaling feature, i.e., ability to replicate
      pods and resize computational resources automatically, which can increase the
      high availability of the infrastructure and mitigate the risk of downtime. As
      for the experiment, The WebRTC service is observed by adjusting several parameters,
      which are QoS (delay, jitter, packet loss), CPU and memory usages, and the number
      of pods. The experimental results show that the number of pods before the existence
      of HPA was one while after the existence of HPA there were four pods. The highest
      number of errors before the HPA was 490 responses/sec, while after the HPA there
      were 11 responses/sec.", "venue": "2022 2nd International Conference on Electronic
      and Electrical Engineering and Intelligent System (ICE3IS)", "year": 2022, "referenceCount":
      11, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-11-04",
      "journal": {"name": "2022 2nd International Conference on Electronic and Electrical
      Engineering and Intelligent System (ICE3IS)", "pages": "164-168"}, "citationStyles":
      {"bibtex": "@Conference{Mubina2022PerformanceAO,\n author = {Basma Fathan Mubina
      and Favian Dewanta and Bagus Aditya},\n booktitle = {2022 2nd International
      Conference on Electronic and Electrical Engineering and Intelligent System (ICE3IS)},\n
      journal = {2022 2nd International Conference on Electronic and Electrical Engineering
      and Intelligent System (ICE3IS)},\n pages = {164-168},\n title = {Performance
      Analysis of High Availability Video Conference Service with Kubernetes Cluster
      Across Data Center},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2202013892",
      "name": "Basma Fathan Mubina"}, {"authorId": "10805639", "name": "Favian Dewanta"},
      {"authorId": "145757790", "name": "Bagus Aditya"}]}, {"paperId": "44b511a30311d5fce33f8169450796ef4938c8f3",
      "externalIds": {"MAG": "3194260424", "DOI": "10.7490/F1000RESEARCH.1118748.1",
      "CorpusId": 238715443}, "corpusId": 238715443, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/44b511a30311d5fce33f8169450796ef4938c8f3",
      "title": "Galaxy development environment: Kubernetes-powered ChatOps", "abstract":
      null, "venue": "", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Environmental
      Science"], "s2FieldsOfStudy": [{"category": "Environmental Science", "source":
      "external"}, {"category": "Physics", "source": "s2-fos-model"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2021-08-19", "journal": {"name": "F1000Research", "volume": "10"}, "citationStyles":
      {"bibtex": "@Article{Mahmoud2021GalaxyDE,\n author = {Alexandru Mahmoud and
      N. Goonasekera and J. Chilton and E. Afgan},\n journal = {F1000Research},\n
      title = {Galaxy development environment: Kubernetes-powered ChatOps},\n volume
      = {10},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2003690282", "name":
      "Alexandru Mahmoud"}, {"authorId": "2776237", "name": "N. Goonasekera"}, {"authorId":
      "144106981", "name": "J. Chilton"}, {"authorId": "2126947", "name": "E. Afgan"}]},
      {"paperId": "44d82ac8a91ca47ea21de3adac9c05c26b272cb6", "externalIds": {"DBLP":
      "journals/tpds/LvWYDYWL22", "DOI": "10.1109/TPDS.2022.3150311", "CorpusId":
      246811638}, "corpusId": 246811638, "publicationVenue": {"id": "7c9d091e-015e-4e5d-a11f-9bc369fcf414",
      "name": "IEEE Transactions on Parallel and Distributed Systems", "type": "journal",
      "alternate_names": ["IEEE Trans Parallel Distrib Syst"], "issn": "1045-9219",
      "url": "http://www.computer.org/tpds", "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=71"]},
      "url": "https://www.semanticscholar.org/paper/44d82ac8a91ca47ea21de3adac9c05c26b272cb6",
      "title": "Microservice Deployment in Edge Computing Based on Deep Q Learning",
      "abstract": "The microservice deployment strategy is promising in reducing the
      overall service response time in the microservice-oriented edge computing platform.
      However, existing works ignore the effect of different interaction frequencies
      among microservices and the decrease in service execution performance caused
      by the increased node loads. In this article, we first model the invocation
      relationships among microservices as an undirected and weighted interaction
      graph to characterize the communication overhead. Then, we propose a multi-objective
      microservice deployment problem (MMDP) in edge computing. MMDP aims to minimize
      the communication overhead while achieving load balance between edge nodes.
      Without the requirement for domain experts, we propose Reward Sharing Deep Q
      Learning (RSDQL), a learning-based algorithm, to solve MMDP and obtain the optimal
      deployment strategy. In addition, to improve the scalability of the services,
      we propose an Elastic Scaling algorithm (ES) based on heuristics to deal with
      the dynamic pressure of requests. Finally, we conduct a series of experiments
      in Kubernetes to evaluate the performance of our approach. Experimental results
      indicate that, compared with interaction-aware strategy and Kubernetes default
      strategy, RSDQL has shorter response times, more balanced resource loads, and
      makes services scale elastically according to the request pressure.", "venue":
      "IEEE Transactions on Parallel and Distributed Systems", "year": 2022, "referenceCount":
      43, "citationCount": 17, "influentialCitationCount": 3, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": null, "journal": {"name": "IEEE Transactions on Parallel
      and Distributed Systems", "pages": "1-1", "volume": "PP"}, "citationStyles":
      {"bibtex": "@Article{Lv2022MicroserviceDI,\n author = {Wenkai Lv and Quan Wang
      and Pengfei Yang and Yunqing Ding and Bijie Yi and Zhenyi Wang and Chengmin
      Lin},\n booktitle = {IEEE Transactions on Parallel and Distributed Systems},\n
      journal = {IEEE Transactions on Parallel and Distributed Systems},\n pages =
      {1-1},\n title = {Microservice Deployment in Edge Computing Based on Deep Q
      Learning},\n volume = {PP},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2151346290", "name": "Wenkai Lv"}, {"authorId": "2117949819", "name": "Quan
      Wang"}, {"authorId": "49731702", "name": "Pengfei Yang"}, {"authorId": "2155806295",
      "name": "Yunqing Ding"}, {"authorId": "2154337938", "name": "Bijie Yi"}, {"authorId":
      "2108306179", "name": "Zhenyi Wang"}, {"authorId": "2155432506", "name": "Chengmin
      Lin"}]}, {"paperId": "44e9f2cf3931feec4cbf727b398417e13a165b0b", "externalIds":
      {"DBLP": "journals/toit/ZhangGD23", "DOI": "10.1145/3617123", "CorpusId": 261494388},
      "corpusId": 261494388, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/44e9f2cf3931feec4cbf727b398417e13a165b0b",
      "title": "Providing Realtime Support for Containerized Edge Services", "abstract":
      "Containers have emerged as a popular technology for edge computing platforms.
      Although there are varieties of container orchestration frameworks, e.g., Kubernetes
      to provide high-reliable services for cloud infrastructure, providing real-time
      support at the containerized edge systems (CESs) remains a challenge. In this
      paper, we propose EdgeMan, a holistic edge service management framework for
      CESs, which consists of (1) a model-assisted event-driven lightweight online
      scheduling algorithm to provide request-level execution plans; (2) a bottleneck-metric-aware
      progressive resource allocation mechanism to improve resource efficiency. We
      then build a testbed that installed three containerized services with different
      latency sensitivities for concrete evaluation. Additionally, we adopt real-world
      data traces from Alibaba and Twitter for large-scale emulations. Extensive experiments
      demonstrate that the deadline miss ratio of time-sensitive services run with
      EdgeMan is reduced by 85.9% on average compared with that of existing methods
      in both industry and academia.", "venue": "ACM Trans. Internet Techn.", "year":
      2023, "referenceCount": 78, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-09-04", "journal": {"name": "ACM Transactions on Internet Technology",
      "pages": "1 - 25", "volume": "23"}, "citationStyles": {"bibtex": "@Article{Zhang2023ProvidingRS,\n
      author = {Wenzhao Zhang and Yi Gao and Wei Dong},\n booktitle = {ACM Trans.
      Internet Techn.},\n journal = {ACM Transactions on Internet Technology},\n pages
      = {1 - 25},\n title = {Providing Realtime Support for Containerized Edge Services},\n
      volume = {23},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2157270430",
      "name": "Wenzhao Zhang"}, {"authorId": "49658142", "name": "Yi Gao"}, {"authorId":
      "2237429280", "name": "Wei Dong"}]}, {"paperId": "44f1d5e78a6ad853b61ad5ecb53482a60ecfc014",
      "externalIds": {"DBLP": "conf/pdp/FolinoGP22", "DOI": "10.1109/pdp55904.2022.00037",
      "CorpusId": 248248979}, "corpusId": 248248979, "publicationVenue": {"id": "d6283871-df25-4880-9c85-46e9830f0d22",
      "name": "International Euromicro Conference on Parallel, Distributed and Network-Based
      Processing", "type": "conference", "alternate_names": ["Int Euromicro Conf Parallel
      Distrib Network-based Process", "PDP", "Parallel Distrib Network-based Process",
      "Parallel, Distributed and Network-Based Processing"], "url": "http://www.euromicro.org/index.html"},
      "url": "https://www.semanticscholar.org/paper/44f1d5e78a6ad853b61ad5ecb53482a60ecfc014",
      "title": "A Scalable Architecture Exploiting Elastic Stack and Meta Ensemble
      of Classifiers for Profiling User Behaviour", "abstract": "Large user and application
      logs are generated and stored by many organisations at a rate that makes it
      really hard to analyse, especially in real-time. In particular, in the field
      of cybersecurity, it is of great interest to analyse fast user logs, coming
      from different and heterogeneous sources, in order to prevent data breach issues
      caused by user behaviour. In addition to these problems, often part of the data
      or some entire sources are missing. To overcome these issues, we propose a framework
      based on the Elastic Stack (ELK) to process and store log data coming from different
      users and applications to generate an ensemble of classifiers, in order to classify
      the user behaviour, and eventually to detect anomalies. The system exploits
      the scalable architecture of ELK by running on top of a Kubernetes platform
      and adopts a distributed evolutionary algorithm for classifying the users, on
      the basis of their digital footprints, derived by many sources of data. Preliminary
      experiments show that the system is effective in classifying the behaviour of
      the different users and that this can be considered as an auxiliary task for
      detecting anomalies in their behaviour, by helping to reduce the number of false
      alarms.", "venue": "International Euromicro Conference on Parallel, Distributed
      and Network-Based Processing", "year": 2022, "referenceCount": 0, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2022-03-01", "journal": {"name": "2022 30th Euromicro International Conference
      on Parallel, Distributed and Network-based Processing (PDP)", "pages": "189-196"},
      "citationStyles": {"bibtex": "@Article{Folino2022ASA,\n author = {G. Folino
      and Carla Otranto Godano and F. S. Pisani},\n booktitle = {International Euromicro
      Conference on Parallel, Distributed and Network-Based Processing},\n journal
      = {2022 30th Euromicro International Conference on Parallel, Distributed and
      Network-based Processing (PDP)},\n pages = {189-196},\n title = {A Scalable
      Architecture Exploiting Elastic Stack and Meta Ensemble of Classifiers for Profiling
      User Behaviour},\n year = {2022}\n}\n"}, "authors": [{"authorId": "1722716",
      "name": "G. Folino"}, {"authorId": "2162886928", "name": "Carla Otranto Godano"},
      {"authorId": "1708290", "name": "F. S. Pisani"}]}, {"paperId": "44fa07d6b70f183c7b0109bf2ed0021134863816",
      "externalIds": {"DBLP": "conf/comsnets/BehlHKS23", "DOI": "10.1109/COMSNETS56262.2023.10041357",
      "CorpusId": 256876485}, "corpusId": 256876485, "publicationVenue": {"id": "6afe5f5f-0d54-4e3a-aa07-ed4778cf1405",
      "name": "International Conference on Communication Systems and Networks", "type":
      "conference", "alternate_names": ["Communication Systems and Networks", "Int
      Conf Commun Syst Netw", "COMSNETS", "Commun Syst Netw"], "url": "http://www.comsnets.org/"},
      "url": "https://www.semanticscholar.org/paper/44fa07d6b70f183c7b0109bf2ed0021134863816",
      "title": "On eBPF extensions to Kubernetes CNI datapath#", "abstract": "The
      combination of expressiveness and access to native Linux kernel capabilities
      explains the wide adoption of extended Berkeley Packet Filter (eBPF) as de-facto
      choice for implementing software based in-kernel network functions. While full
      of potential, it is infeasible to abandon existing (in-kernel) networking infrastructure
      and switch to eBPF based solutions overnight. To this end, we present an evolutionary
      approach for extending existing in-kernel networking infrastructure with eBPF
      modules such that new enhancements and feature replacements can be done to extend
      the present networking infrastructure. We demonstrate feasibility of eBPF based
      feature evolution of in-kernel networking by using Kubernetes CNI as an example.",
      "venue": "International Conference on Communication Systems and Networks", "year":
      2023, "referenceCount": 15, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2023-01-03", "journal": {"name": "2023 15th International
      Conference on COMmunication Systems & NETworkS (COMSNETS)", "pages": "207-209"},
      "citationStyles": {"bibtex": "@Article{Behl2023OnEE,\n author = {Dushyant Behl
      and Hai Huang and Palanivel A. Kodeswaran and Sayandeep Sen},\n booktitle =
      {International Conference on Communication Systems and Networks},\n journal
      = {2023 15th International Conference on COMmunication Systems & NETworkS (COMSNETS)},\n
      pages = {207-209},\n title = {On eBPF extensions to Kubernetes CNI datapath#},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "1402925200", "name": "Dushyant
      Behl"}, {"authorId": "2146284642", "name": "Hai Huang"}, {"authorId": "143922689",
      "name": "Palanivel A. Kodeswaran"}, {"authorId": "1735859", "name": "Sayandeep
      Sen"}]}, {"paperId": "453058f284bc21be86b879ba15c99662d65123ea", "externalIds":
      {"DOI": "10.18485/arhe_apn.2023.19.10", "CorpusId": 266593401}, "corpusId":
      266593401, "publicationVenue": {"id": "16621496-d08b-4c59-af6a-085292e6f030",
      "name": "Arheologija i prirodne nauke", "type": "journal", "alternate_names":
      ["Arheol p\u0159\u00edr nauk"], "issn": "1452-7448"}, "url": "https://www.semanticscholar.org/paper/453058f284bc21be86b879ba15c99662d65123ea",
      "title": "Kubernetes as an Application Management Platform", "abstract": null,
      "venue": "Arheologija i prirodne nauke", "year": 2023, "referenceCount": 0,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      {"url": "http://doi.fil.bg.ac.rs/pdf/journals/arhe_apn/2023/arhe_apn-2023-19-10.pdf",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": null, "journal": {"name": "Arheologija i prirodne nauke"},
      "citationStyles": {"bibtex": "@Article{Kora\u01072023KubernetesAA,\n author
      = {V. Kora\u0107 and Z. Davidovac},\n booktitle = {Arheologija i prirodne nauke},\n
      journal = {Arheologija i prirodne nauke},\n title = {Kubernetes as an Application
      Management Platform},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2101001425",
      "name": "V. Kora\u0107"}, {"authorId": "17152666", "name": "Z. Davidovac"}]},
      {"paperId": "453ae688bf273e0ecb5edcd96e734ea54cc50a6d", "externalIds": {"DBLP":
      "journals/tjs/ShenLTLL23", "DOI": "10.1007/s11227-022-04682-2", "CorpusId":
      250573446}, "corpusId": 250573446, "publicationVenue": {"id": "26ed29a9-64ce-4d6c-9024-8b022fd2fe22",
      "name": "Journal of Supercomputing", "type": "journal", "alternate_names": ["The
      Journal of Supercomputing", "J Supercomput"], "issn": "0920-8542", "url": "http://www.springer.com/computer/programming/journal/11227",
      "alternate_urls": ["https://link.springer.com/journal/11227", "https://www.springer.com/computer/swe/journal/11227?changeHeader"]},
      "url": "https://www.semanticscholar.org/paper/453ae688bf273e0ecb5edcd96e734ea54cc50a6d",
      "title": "KubeGPU: efficient sharing and isolation mechanisms for GPU resource
      management in container cloud", "abstract": null, "venue": "Journal of Supercomputing",
      "year": 2022, "referenceCount": 34, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2022-07-14", "journal": {"name": "The Journal of Supercomputing", "pages":
      "591-625", "volume": "79"}, "citationStyles": {"bibtex": "@Article{Shen2022KubeGPUES,\n
      author = {Wenfeng Shen and Zhengsen Liu and Yunjie Tan and Zhaokai Luo and Zhou
      Lei},\n booktitle = {Journal of Supercomputing},\n journal = {The Journal of
      Supercomputing},\n pages = {591-625},\n title = {KubeGPU: efficient sharing
      and isolation mechanisms for GPU resource management in container cloud},\n
      volume = {79},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2117227040",
      "name": "Wenfeng Shen"}, {"authorId": "2176929813", "name": "Zhengsen Liu"},
      {"authorId": "2164865783", "name": "Yunjie Tan"}, {"authorId": "2177886", "name":
      "Zhaokai Luo"}, {"authorId": "2113455953", "name": "Zhou Lei"}]}, {"paperId":
      "4553a01695a249f623ed9d6d52321c00162ccfef", "externalIds": {"DBLP": "conf/ccgrid/MinnaM22",
      "DOI": "10.1109/ccgrid54584.2022.00086", "CorpusId": 250719026}, "corpusId":
      250719026, "publicationVenue": {"id": "57f970eb-366a-4bfa-aa06-2ff70d834806",
      "name": "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing",
      "type": "conference", "alternate_names": ["Clust Comput Grid", "CCGRID", "IEEE/ACM
      Int Symp Clust Cloud Grid Comput", "IEEE/ACM International Symposium Cluster,
      Cloud and Grid Computing", "Cluster Computing and the Grid", "IEEE/ACM Int Symp
      Clust Cloud Internet Comput"], "url": "http://www.buyya.com/ccgrid/"}, "url":
      "https://www.semanticscholar.org/paper/4553a01695a249f623ed9d6d52321c00162ccfef",
      "title": "An Open-Source Cloud Testbed for Security Experimentation", "abstract":
      "The use of container and orchestration technologies, such as Docker and Kubernetes
      keeps growing every year. For the purpose of security experimentation and reproducibility
      of security attacks and defenses, an open-source testbed would also be an important
      step forward. Yet, while several security experimentation testbeds from web
      application testing to capture-the-flag (CTF) competitions have been proposed,
      a similar solution for cloud experiments is wanting. To fill this gap, we propose
      an open-source cloud testbed that, by using Domain Specific Language (DSL) files
      (e.g. with JSON or YAML syntax), allows defining experimentation scenarios as
      configuration files. Using DSL files allows to create, share, customize, automatically
      deploy, and reproduce different scenarios in a user-friendly manner. We describe
      the design and the corresponding tools and technologies for different implementations.",
      "venue": "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing",
      "year": 2022, "referenceCount": 5, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2022-05-01", "journal": {"name": "2022 22nd IEEE International Symposium on
      Cluster, Cloud and Internet Computing (CCGrid)", "pages": "756-759"}, "citationStyles":
      {"bibtex": "@Article{Minna2022AnOC,\n author = {F. Minna and F. Massacci},\n
      booktitle = {IEEE/ACM International Symposium on Cluster, Cloud and Internet
      Computing},\n journal = {2022 22nd IEEE International Symposium on Cluster,
      Cloud and Internet Computing (CCGrid)},\n pages = {756-759},\n title = {An Open-Source
      Cloud Testbed for Security Experimentation},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "66832895", "name": "F. Minna"}, {"authorId": "1746220", "name":
      "F. Massacci"}]}, {"paperId": "4596e005a53ca03f9b25d32169cc0368d7dc1e77", "externalIds":
      {"MAG": "2883620713", "DBLP": "conf/dsn/BritoF18", "DOI": "10.1109/DSN-W.2018.00026",
      "CorpusId": 265099961}, "corpusId": 265099961, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4596e005a53ca03f9b25d32169cc0368d7dc1e77",
      "title": "SecureCloud: Secure Big Data Processing in Untrusted Clouds", "abstract":
      "This paper describes goals and main achievements of the SecureCloud project.
      The SecureCloud project aims to enable confidentially and integrity of data
      and applications running in potentially untrusted cloud environments. On the
      one hand, the project leverages technologies such as Intel SGX, OpenStack and
      Kubernetes to provide a cloud platform that supports secure applications. On
      the other hand, the project provides tools that help generating cloud-native,
      secure applications and services to be deployed on potentially untrusted clouds.",
      "venue": "2018 48th Annual IEEE/IFIP International Conference on Dependable
      Systems and Networks Workshops (DSN-W)", "year": 2018, "referenceCount": 1,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      {"url": "https://arxiv.org/pdf/1805.01783", "status": "GREEN"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2018-06-01", "journal": {"name": "2018 48th
      Annual IEEE/IFIP International Conference on Dependable Systems and Networks
      Workshops (DSN-W)", "pages": "53-54"}, "citationStyles": {"bibtex": "@Article{Brito2018SecureCloudSB,\n
      author = {Andrey Brito and Christof Fetzer},\n booktitle = {2018 48th Annual
      IEEE/IFIP International Conference on Dependable Systems and Networks Workshops
      (DSN-W)},\n journal = {2018 48th Annual IEEE/IFIP International Conference on
      Dependable Systems and Networks Workshops (DSN-W)},\n pages = {53-54},\n title
      = {SecureCloud: Secure Big Data Processing in Untrusted Clouds},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "2265995815", "name": "Andrey Brito"}, {"authorId":
      "2262810279", "name": "Christof Fetzer"}]}, {"paperId": "45b41fe1cd97f16c8d51cfae0206fa690534be61",
      "externalIds": {"DOI": "10.22266/ijies2023.0630.41", "CorpusId": 258452639},
      "corpusId": 258452639, "publicationVenue": {"id": "ae87fe2c-526b-421a-81ed-dada6c150edd",
      "name": "International Journal of Intelligent Engineering and Systems", "type":
      "journal", "alternate_names": ["Int J Intell Eng Syst"], "issn": "1882-708X"},
      "url": "https://www.semanticscholar.org/paper/45b41fe1cd97f16c8d51cfae0206fa690534be61",
      "title": "Scheduling of Jobs Allocation for Apache Spark Using Kubernetes for
      Efficient Execution of Big Data Application", "abstract": null, "venue": "International
      Journal of Intelligent Engineering and Systems", "year": 2023, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-06-30", "journal": {"name": "International Journal of Intelligent Engineering
      and Systems"}, "citationStyles": {"bibtex": "@Article{None,\n booktitle = {International
      Journal of Intelligent Engineering and Systems},\n journal = {International
      Journal of Intelligent Engineering and Systems},\n title = {Scheduling of Jobs
      Allocation for Apache Spark Using Kubernetes for Efficient Execution of Big
      Data Application},\n year = {2023}\n}\n"}, "authors": []}, {"paperId": "45e605ff11c14d7eb8e4916b2d66e02e8cd257bc",
      "externalIds": {"DOI": "10.1145/3263046", "CorpusId": 52297222}, "corpusId":
      52297222, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/45e605ff11c14d7eb8e4916b2d66e02e8cd257bc",
      "title": "Session details: The 3rd Annual Workshop on Distributed Cloud Computing
      (DCC 2015)", "abstract": "The Third Annual Workshop on Distributed Cloud Computing
      (DCC) was held on June 15, 2015 in conjunction with the ACM SIGMETRICS conference
      in Portland, OR, and was chaired by Marco Canini, Universit\u00e9 catholique
      de Louvain, Belgium, James Kempf, TU Berlin, Germany and Ericsson Research Silicon
      Valley, USA, and Stefan Schmid, TU Berlin and Telkom Innovation Labs, Germany.\n
      The DCC workshop is intended to provide a forum for academic and industrial
      researchers working in the different fields of networking, cloud computing,
      and distributed systems, to meet and exchange their vision and expertise on
      how to plan and manage future research on distributed cloud. After the first
      edition of DCC, which was collocated with a cloud computing conference (namely
      IEEE/ACM Utility and Cloud Computing 2013), and the second edition, which was
      collocated with a networking conference (namely ACM SIGCOMM 2014), we broadened
      the scope further with this year''s third edition, which was collocated with
      the premier conference on performance evaluation.\n The great interest in distributed
      cloud computing is reflected in the number of submissions received. The CFP
      received 31 submissions of which 9 were selected by the Technical Program Committee
      as full papers and 4 as posters. Topics ranged from a new mechanism for auctioning
      off cloud resources to a Markov decision process model for deciding how to handle
      server failures in the cloud. In addition, the US Ignite project presented a
      demo of their distributed collaborative scientific visualization system, which
      allows visualization of large, complex scientific data sets on handheld devices.\n
      A highlight of this year''s DCC workshop was the keynote given by John Wilkes,
      Principle Software Engineer at Google, on Google''s Borg cluster management
      system. John noted that many of the key pieces of Borg have been open sourced
      in the Kubernetes container management software.", "venue": "PERV", "year":
      2015, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3263046?download=true",
      "status": "CLOSED"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{Canini2015SessionDT,\n author
      = {M. Canini and J. Kempf and S. Schmid},\n booktitle = {PERV},\n title = {Session
      details: The 3rd Annual Workshop on Distributed Cloud Computing (DCC 2015)},\n
      year = {2015}\n}\n"}, "authors": [{"authorId": "1709876", "name": "M. Canini"},
      {"authorId": "2413032", "name": "J. Kempf"}, {"authorId": "144594844", "name":
      "S. Schmid"}]}, {"paperId": "45f07f4bcdaac6b16a580faf0c8d5c59e6472501", "externalIds":
      {"MAG": "2751488880", "CorpusId": 195947867}, "corpusId": 195947867, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/45f07f4bcdaac6b16a580faf0c8d5c59e6472501",
      "title": "Kubernetes\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u305f\u5bb9\u5668\u5185\u306e\u72b6\u614b\u6a5f\u68b0\u8907\u88fd\u3010Powered
      by NICT\u3011", "abstract": null, "venue": "", "year": 2017, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "Journal of Systems Architecture",
      "pages": "59", "volume": "73"}, "citationStyles": {"bibtex": "@Article{Hylson2017Kubernetes\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u305f\u5bb9\u5668\u5185\u306e\u72b6\u614b\u6a5f\u68b0\u8907\u88fdPoweredBN,\n
      author = {V. N. Hylson and Lung Lau Cheuk and Correia Miguel and Luiz Aldelir
      Fernando and Sa de Souza Luciana Moreira},\n journal = {Journal of Systems Architecture},\n
      pages = {59},\n title = {Kubernetes\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u305f\u5bb9\u5668\u5185\u306e\u72b6\u614b\u6a5f\u68b0\u8907\u88fd\u3010Powered
      by NICT\u3011},\n volume = {73},\n year = {2017}\n}\n"}, "authors": [{"authorId":
      "150331759", "name": "V. N. Hylson"}, {"authorId": "150185389", "name": "Lung
      Lau Cheuk"}, {"authorId": "66810954", "name": "Correia Miguel"}, {"authorId":
      "152189586", "name": "Luiz Aldelir Fernando"}, {"authorId": "2056765183", "name":
      "Sa de Souza Luciana Moreira"}]}, {"paperId": "45fd39f70614062cdfc59309b64e9d48892d993d",
      "externalIds": {"DBLP": "conf/cscs/Stanciu17", "MAG": "2728360598", "DOI": "10.1109/CSCS.2017.102",
      "CorpusId": 35877334}, "corpusId": 35877334, "publicationVenue": {"id": "36949878-72e1-4ce8-8c7e-444cf4922345",
      "name": "Computer Science in Cars Symposium", "type": "conference", "alternate_names":
      ["CSCS", "Int Conf Control Syst Comput Sci", "Comput Sci Car Symp", "International
      Conference on Control Systems and Computer Science"]}, "url": "https://www.semanticscholar.org/paper/45fd39f70614062cdfc59309b64e9d48892d993d",
      "title": "Blockchain Based Distributed Control System for Edge Computing", "abstract":
      "Edge computing proposes a novel model for providing computational resources
      close to end devices that are connected to the network. It has numerous applications
      in Internet of Things, as well as smart grids, healthcare, smart home, etc.
      This paper presents ongoing research regarding the use of blockchain technology
      as a platform hierarchical and distributed control systems based on IEC 61499
      standard. Hyperledger Fabric was selected as the blockchain solution, where
      function blocks are to be implemented as smart contracts on a supervisor level.
      The integration with the edge nodes that perform on the executive level responsible
      for actual process control is based on a micro-services architecture where Docker
      containers implement function blocks, and Kubernetes platform is used for orchestrating
      the execution of containers across the edge resources.", "venue": "Computer
      Science in Cars Symposium", "year": 2017, "referenceCount": 13, "citationCount":
      197, "influentialCitationCount": 9, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2017-05-29",
      "journal": {"name": "2017 21st International Conference on Control Systems and
      Computer Science (CSCS)", "pages": "667-671"}, "citationStyles": {"bibtex":
      "@Article{Stanciu2017BlockchainBD,\n author = {Alexandru Stanciu},\n booktitle
      = {Computer Science in Cars Symposium},\n journal = {2017 21st International
      Conference on Control Systems and Computer Science (CSCS)},\n pages = {667-671},\n
      title = {Blockchain Based Distributed Control System for Edge Computing},\n
      year = {2017}\n}\n"}, "authors": [{"authorId": "46671126", "name": "Alexandru
      Stanciu"}]}, {"paperId": "45fe7c9ef33358c61bad046eafaedef08bdf732f", "externalIds":
      {"DBLP": "conf/wsdm/ZhouZZSFWW23", "DOI": "10.1145/3539597.3573037", "CorpusId":
      257079764}, "corpusId": 257079764, "publicationVenue": {"id": "ea38228f-6ed3-4222-a3ce-d963d8cc9516",
      "name": "Web Search and Data Mining", "type": "conference", "alternate_names":
      ["Web Search Data Min", "WSDM"], "url": "http://www.wikicfp.com/cfp/program?id=3158"},
      "url": "https://www.semanticscholar.org/paper/45fe7c9ef33358c61bad046eafaedef08bdf732f",
      "title": "ElasticDL: A Kubernetes-native Deep Learning Framework with Fault-tolerance
      and Elastic Scheduling", "abstract": "The power of artificial intelligence (AI)
      models originates with sophisticated model architecture as well as the sheer
      size of the model. These large-scale AI models impose new and challenging system
      requirements regarding scalability, reliability, and flexibility. One of the
      most promising solutions in the industry is to train these large-scale models
      on distributed deep-learning frameworks. With the power of all distributed computations,
      it is desired to achieve a training process with excellent scalability, elastic
      scheduling (flexibility), and fault tolerance (reliability). In this paper,
      we demonstrate the scalability, flexibility, and reliability of our open-source
      Elastic Deep Learning (ElasticDL) framework. Our ElasticDL utilizes an open-source
      system, i.e., Kubernetes, for automating deployment, scaling, and management
      of containerized application features to provide fault tolerance and support
      elastic scheduling for DL tasks.", "venue": "Web Search and Data Mining", "year":
      2023, "referenceCount": 14, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2023-02-27", "journal": {"name": "Proceedings of the Sixteenth
      ACM International Conference on Web Search and Data Mining"}, "citationStyles":
      {"bibtex": "@Book{Zhou2023ElasticDLAK,\n author = {Jun Zhou and Ke Zhang and
      Feng Zhu and Qitao Shi and Wenjing Fang and Lin Wang and Yi Wang},\n booktitle
      = {Web Search and Data Mining},\n journal = {Proceedings of the Sixteenth ACM
      International Conference on Web Search and Data Mining},\n title = {ElasticDL:
      A Kubernetes-native Deep Learning Framework with Fault-tolerance and Elastic
      Scheduling},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2151550753",
      "name": "Jun Zhou"}, {"authorId": "2119059495", "name": "Ke Zhang"}, {"authorId":
      "2075369485", "name": "Feng Zhu"}, {"authorId": "152824863", "name": "Qitao
      Shi"}, {"authorId": "104108744", "name": "Wenjing Fang"}, {"authorId": "2144736678",
      "name": "Lin Wang"}, {"authorId": "2209207345", "name": "Yi Wang"}]}, {"paperId":
      "46030c3822447e1be5bf81c3dbb0c08dfa0c1817", "externalIds": {"DBLP": "conf/globecom/SekigawaST22",
      "DOI": "10.1109/GCWkshps56602.2022.10008579", "CorpusId": 255777436}, "corpusId":
      255777436, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/46030c3822447e1be5bf81c3dbb0c08dfa0c1817",
      "title": "Toward a Cloud-Native Telecom Infrastructure: Analysis and Evaluations
      of Kubernetes Networking", "abstract": "To realize a 6G network, Cloud-Native
      is a key technology for improving the scalability, agility, and resilience of
      telecom networks. Kubernetes is the de-facto standard container orchestrator
      and adaptation to the Cloud-Native Network Function (CNF) infrastructure is
      progressing. However, several discrepancies exist between standard Kubernetes
      networking and CNF networking. In this paper, we analyze the discrepancies and
      clarify the telecom network requirements for Kubernetes. Then, we perform qualitative
      and quantitative evaluations on several network extensions developed as open-source
      software. From the results, we discuss the extensions that satisfy the requirements
      and represent the suitable combinations of network extensions for several CNF
      use cases.", "venue": "2022 IEEE Globecom Workshops (GC Wkshps)", "year": 2022,
      "referenceCount": 18, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-12-04", "journal":
      {"name": "2022 IEEE Globecom Workshops (GC Wkshps)", "pages": "838-843"}, "citationStyles":
      {"bibtex": "@Article{Sekigawa2022TowardAC,\n author = {Shu Sekigawa and C. Sasaki
      and A. Tagami},\n booktitle = {2022 IEEE Globecom Workshops (GC Wkshps)},\n
      journal = {2022 IEEE Globecom Workshops (GC Wkshps)},\n pages = {838-843},\n
      title = {Toward a Cloud-Native Telecom Infrastructure: Analysis and Evaluations
      of Kubernetes Networking},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "46763871", "name": "Shu Sekigawa"}, {"authorId": "34764472", "name": "C. Sasaki"},
      {"authorId": "3242560", "name": "A. Tagami"}]}, {"paperId": "46287d54c1687cadfa2136b2a192b4b57c57658d",
      "externalIds": {"DBLP": "journals/cluster/PhamLN22", "DOI": "10.1007/s10586-022-03636-w",
      "CorpusId": 249443723}, "corpusId": 249443723, "publicationVenue": {"id": "f1d0ef3d-4e90-41e9-b454-f589a933654f",
      "name": "Cluster Computing", "type": "journal", "alternate_names": ["Clust Comput"],
      "issn": "1386-7857", "url": "https://www.springer.com/computer/communication+networks/journal/10586",
      "alternate_urls": ["https://link.springer.com/journal/10586", "http://www.springer.com/computer/communication+networks/journal/10586"]},
      "url": "https://www.semanticscholar.org/paper/46287d54c1687cadfa2136b2a192b4b57c57658d",
      "title": "Multi-level just-enough elasticity for MQTT brokers of Internet of
      Things applications", "abstract": null, "venue": "Cluster Computing", "year":
      2022, "referenceCount": 32, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-06-06", "journal":
      {"name": "Cluster Computing", "pages": "3961 - 3976", "volume": "25"}, "citationStyles":
      {"bibtex": "@Article{Pham2022MultilevelJE,\n author = {L. Pham and N. Le and
      Xuan-Truong Nguyen},\n booktitle = {Cluster Computing},\n journal = {Cluster
      Computing},\n pages = {3961 - 3976},\n title = {Multi-level just-enough elasticity
      for MQTT brokers of Internet of Things applications},\n volume = {25},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "38871595", "name": "L. Pham"}, {"authorId":
      "2044681902", "name": "N. Le"}, {"authorId": "30076217", "name": "Xuan-Truong
      Nguyen"}]}, {"paperId": "46345216db403fdd1a9b99fce9b05425317b8f90", "externalIds":
      {"CorpusId": 247712111}, "corpusId": 247712111, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/46345216db403fdd1a9b99fce9b05425317b8f90",
      "title": "Using open-source cloud technology to manage laser manufacturing software",
      "abstract": "The solution? \u201cWe completely reprogrammed the machine control
      system,\u201d reports Kr\u00f6ger. \u201cThis allowed us to rely on proven open
      source software right from the start, which gives us more compatibility and
      development options for distributed systems.\u201d This way, the institute is
      able to control and optimize laser processing operations that must The solution:
      starting from scratch Moritz Kr\u00f6ger, a research associate at the chair
      for laser technology LLT at RWTH Aachen University, an associated chair at Fraunhofer
      ILT, was faced with precisely this issue: \u201cWith the current programmable
      logic controllers, you can control one device quite well, but hardly a dozen
      or even one hundred at the same time.\u201d In this context \u2013 of controlling
      fifty to one hundred lasers \u2013 conventional concepts would foreseeably not
      be sufficient for installing new software for these systems and evaluating sensor
      data in real time. In the Cluster of Excellence \u201cInternet of Production\u201d
      (IoP), two hundred scientists at RWTH Aachen University in cooperation with
      Fraunhofer ILT have set up a data center for controlling and monitoring industrial
      processes. The concept for this is based on a project for controlling laser
      systems developed at the Fraunhofer Institute for Laser Technology ILT and uses
      the open source software Kubernetes. A corresponding system has been running
      successfully at the institute for two years, and with it the institute can automatically
      and remotely install the software for new lasers in just a few minutes.", "venue":
      "", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "citationStyles": {"bibtex": "@Inproceedings{None,\n
      title = {Using open-source cloud technology to manage laser manufacturing software},\n
      year = {2021}\n}\n"}, "authors": []}, {"paperId": "46448822c7a3b3ad6d0f8b624e649c4406eaa14d",
      "externalIds": {"DOI": "10.1007/s00521-023-08326-1", "CorpusId": 256603520},
      "corpusId": 256603520, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/46448822c7a3b3ad6d0f8b624e649c4406eaa14d",
      "title": "An event-based data processing system using Kafka container cluster
      on Kubernetes environment", "abstract": null, "venue": "Neural computing & applications
      (Print)", "year": 2023, "referenceCount": 20, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-02-04",
      "journal": {"name": "Neural Computing and Applications"}, "citationStyles":
      {"bibtex": "@Article{Liu2023AnED,\n author = {Jung-Chun Liu and Ching-Hsien
      Hsu and Jia-Hao Zhang and Endah Kristiani and Chao-Tung Yang},\n booktitle =
      {Neural computing & applications (Print)},\n journal = {Neural Computing and
      Applications},\n title = {An event-based data processing system using Kafka
      container cluster on Kubernetes environment},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2863290", "name": "Jung-Chun Liu"}, {"authorId": "145377105",
      "name": "Ching-Hsien Hsu"}, {"authorId": "2108294450", "name": "Jia-Hao Zhang"},
      {"authorId": "51107359", "name": "Endah Kristiani"}, {"authorId": "2155847922",
      "name": "Chao-Tung Yang"}]}, {"paperId": "464da53726e0328b8c613f9921254a17279c5c1c",
      "externalIds": {"DBLP": "conf/cloud/ThinakaranGSKD18", "MAG": "2892840087",
      "DOI": "10.1145/3267809.3275466", "CorpusId": 52898165}, "corpusId": 52898165,
      "publicationVenue": {"id": "d13e941e-4cac-4f1d-bdca-77d927e31f1b", "name": "ACM
      Symposium on Cloud Computing", "type": "conference", "alternate_names": ["System-on-Chip
      Conference", "ACM Symp Cloud Comput", "Syst Conf", "Symp Cloud Comput", "Annual
      IEEE International System-on-Chip Conference", "Symposium on Cloud Computing",
      "Annu IEEE Int Syst Conf", "SoCC"], "url": "http://www.ieee-socc.org/"}, "url":
      "https://www.semanticscholar.org/paper/464da53726e0328b8c613f9921254a17279c5c1c",
      "title": "The Curious Case of Container Orchestration and Scheduling in GPU-based
      Datacenters", "abstract": "Modern data centers are increasingly being provisioned
      with compute accelerators such as GPUs, FPGAs and ASIC''s to catch up with the
      workload performance demands and reduce the total cost of ownership (TCO). By
      2021, traffic within hyperscale datacenters is expected to quadruple with 94%
      of workloads moving to cloud-based datacenters according to Cisco''s global
      cloud index. A majority of these workloads include data mining, image processing,
      speech recognition and gaming which uses GPUs for high throughput computing.
      This trend is evident as public cloud operators like Amazon and Microsoft have
      started to offer GPU-based infrastructure services in the recent times. The
      GPU-bound applications in general, can either be batch or latency-sensitive.
      Typically the latency-critical applications subscribe to datacenter resources
      in the form of queries (e.g. inference requests from a DNN model). For example,
      a wearable health monitoring device aggregates several sensor data through a
      mobile application. In case of a data anomaly, inference services can be triggered
      from the mobile device to the cloud, requesting for a deep neural network (DNN)
      model that fits the symptom. Such inference requests which are GPU bound impose
      strict Service Level Agreements (SLAs) that is typically set around 150 to 500ms.
      In contrast to the regular datacenter batch workloads, these user-facing applications
      are typically hosted as services that occur and scale in short bursts. On the
      other hand, batch applications are HPC based compute-bound workloads which are
      throughput oriented. In a typical datacenter, these both applications might
      co-exist on the same device depends on the orchestration and scheduling policy.
      With the expected increase in such workloads, this GPU resource management problem
      is expected to exacerbate. Hence, GPUs/accelerators are on the critical path
      to ensure the performance and meet the end-to-end latency demands of such queries.
      State-of-the-art resource orchestrators are agnostic of GPUs and their resource
      utilization footprints, and thus not equipped to dynamically orchestrate these
      accelerator-bound containers. On the other hand, job schedulers at the datacenter
      are heavily optimized and tuned for CPU-based systems. Kubernetes and Mesos
      by default does uniform task scheduling which statically assigns the GPU resources
      to the applications. The scheduled tasks access the GPUs via PCIe pass-through
      which gives the application complete access to the GPU as seen in Figure 1.
      Hence the resource utilization of the GPU is based on the parallelism of the
      application which is scheduled to run on it. In case of CPUs, Kubernetes has
      support for dynamic orchestration with the features such as node affinity, pod
      affinity, and pod preemption. However, these features cannot be extended for
      GPUs. This is because, it neither has the support for pod preemption nor the
      ability to query the real-time GPU metrics such as memory, symmetric multiprocessor
      (SM) utilization, PCIe bandwidth, etc. Moreover, the containers often overstate
      their GPU resource requirements such as memory, and this leads to severe resource
      underutilization which leads to multiple QoS violations because of queuing delays.
      We identify that by employing CPU-based scheduling policies for GPU-bound workloads
      would fail to yield high accelerator utilization and lead to poor performance
      per watt per query. Motivated by this, we propose a GPU-aware resource orchestration
      layer which enables the resource scheduler to take advantage of the GPUs by
      knowing their real-time utilization. We further discuss the ideal scheduler
      properties for a GPU rich datacenter and list the challenges in developing such
      a production-grade GPU-based datacenter scheduler. Therefore we modify the well-known
      Google''s Kubernetes datacenter-level resource orchestrator by making it GPU-aware
      by exposing GPU driver APIs. Based on our observations from Alibaba''s cluster
      traces and real hardware GPU cluster experiments, we build Knots, a GPU-aware
      resource orchestration layer and integrate it with Kubernetes container orchestrator.
      In addition, we also evaluate three GPU-based scheduling schemes to schedule
      datacenter representative GPU workload mixes through Kube-Knots. Evaluations
      on a ten node GPU cluster demonstrate that Knots together with our proposed
      GPU-aware scheduling scheme improves the cluster-wide GPU utilization while
      significantly reducing the cluster-wide power consumption across three different
      workload mixes when compared against Kubernetes''s default uniform scheduler.",
      "venue": "ACM Symposium on Cloud Computing", "year": 2018, "referenceCount":
      0, "citationCount": 10, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3267809.3275466",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2018-10-11",
      "journal": {"name": "Proceedings of the ACM Symposium on Cloud Computing"},
      "citationStyles": {"bibtex": "@Book{Thinakaran2018TheCC,\n author = {P. Thinakaran
      and J. Gunasekaran and Bikash Sharma and M. Kandemir and C. Das},\n booktitle
      = {ACM Symposium on Cloud Computing},\n journal = {Proceedings of the ACM Symposium
      on Cloud Computing},\n title = {The Curious Case of Container Orchestration
      and Scheduling in GPU-based Datacenters},\n year = {2018}\n}\n"}, "authors":
      [{"authorId": "2950806", "name": "P. Thinakaran"}, {"authorId": "47882166",
      "name": "J. Gunasekaran"}, {"authorId": "46528221", "name": "Bikash Sharma"},
      {"authorId": "145879376", "name": "M. Kandemir"}, {"authorId": "8948708", "name":
      "C. Das"}]}, {"paperId": "467522a1cca7a7f852f50c46f6dc47ef4ddc8287", "externalIds":
      {"DBLP": "journals/access/RuizPMMT22", "DOI": "10.1109/ACCESS.2022.3158743",
      "CorpusId": 247405070}, "corpusId": 247405070, "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26",
      "name": "IEEE Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/467522a1cca7a7f852f50c46f6dc47ef4ddc8287",
      "title": "Autoscaling pods on an on-premise Kubernetes infrastructure QoS-aware",
      "abstract": "Cloud systems and microservices are becoming powerful tools for
      businesses. The evidence of the advantages of offering infrastructure, hardware
      or software as a service (IaaS, PaaS, SaaS) is overwhelming. Microservices and
      decoupled applications are increasingly popular. These architectures, based
      on containers, have facilitated the efficient development of complex SaaS applications.
      A big challenge is to manage and design microservices with a massive range of
      different facilities, from processing and data storage to computing predictive
      and prescriptive analytics. Computing providers are mainly based on data centers
      formed of massive and heterogeneous virtualized systems, which are continuously
      growing and diversifying over time. Moreover, these systems require integrating
      into current systems while meeting the Quality of Service (QoS) constraints.
      The primary purpose of this work is to present an on-premise architecture based
      on Kubernetes and docker containers aimed at improving QoS regarding resource
      usage and service level objectives (SLOs). The main contribution of this proposal
      is its dynamic autoscaling capabilities to adjust system resources to the current
      workload while improving QoS.", "venue": "IEEE Access", "year": 2022, "referenceCount":
      35, "citationCount": 8, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/6287639/9668973/09732997.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "IEEE Access", "pages": "1-1", "volume": "PP"}, "citationStyles": {"bibtex":
      "@Article{Ru\u00edz2022AutoscalingPO,\n author = {Llu\u00eds Mas Ru\u00edz and
      P\u00e9rez Pueyo and J. Mateo-Forn\u00e9s and Jordi Vilaplana Mayoral and Francesc
      Solsona Teh\u00e0s},\n booktitle = {IEEE Access},\n journal = {IEEE Access},\n
      pages = {1-1},\n title = {Autoscaling pods on an on-premise Kubernetes infrastructure
      QoS-aware},\n volume = {PP},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2160743714", "name": "Llu\u00eds Mas Ru\u00edz"}, {"authorId": "2095299960",
      "name": "P\u00e9rez Pueyo"}, {"authorId": "1412137948", "name": "J. Mateo-Forn\u00e9s"},
      {"authorId": "2160745011", "name": "Jordi Vilaplana Mayoral"}, {"authorId":
      "133982603", "name": "Francesc Solsona Teh\u00e0s"}]}, {"paperId": "4682f7334414a590898fb81da6f85e30c099928c",
      "externalIds": {"ArXiv": "2201.11851", "DBLP": "journals/corr/abs-2201-11851",
      "MAG": "3097929708", "DOI": "10.23919/MIPRO48935.2020.9245290", "CorpusId":
      226855313}, "corpusId": 226855313, "publicationVenue": {"id": "25710d4b-a2d9-4b6c-9f28-154866d9fbbe",
      "name": "International Convention on Information and Communication Technology,
      Electronics and Microelectronics", "type": "conference", "alternate_names":
      ["Int Conv Inf Commun Technol Electron Microelectron", "MIPRO"], "url": "http://www.mipro.hr/"},
      "url": "https://www.semanticscholar.org/paper/4682f7334414a590898fb81da6f85e30c099928c",
      "title": "Enhancing Performance of Cloud-based Software Applications with GraalVM
      and Quarkus", "abstract": "Increased complexity of network-based software solutions
      and the ever-rising number of concurrent users forced a shift of the IT industry
      to cloud computing. Conventional network software systems commonly based on
      monolithic application stack running on costly physical single-purpose servers
      are affected by significant problems of resource management, computing power
      distribution, and scalability. Such implementation is restricting applications
      to be reduced to smaller, independent services that can be more easily deployed,
      managed, and scaled dynamically; therefore, embellishing environmental uniformity
      across development, testing, and production. Current cloud-based infrastructure
      frequently runs on containers placed in Kubernetes or Docker-based cluster,
      and the system configuration is considerably different compared to the environment
      prevailed with common virtualizations. This paper discusses the usage of GraalVM,
      a polyglot high-performance virtual machine for JVM-based and other languages,
      combined with new Kubernetes native Java tailored stacked framework named Quarkus,
      formed from enhanced Java libraries. Moreover, our research explores GraalVM\u2019s
      creation of native images using Ahead-Of-Time (AOT) compilation and Quarkus\u2019
      deployment to Kubernetes. Furthermore, we examined the architectures of given
      systems, various performance variables, and differing memory usage cases within
      our academic testing environment and presented the comparison results of selected
      performance measures with other traditional and contemporary solutions.", "venue":
      "International Convention on Information and Communication Technology, Electronics
      and Microelectronics", "year": 2020, "referenceCount": 19, "citationCount":
      10, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/2201.11851", "status": "GREEN"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-09-28", "journal": {"name": "2020 43rd International Convention on Information,
      Communication and Electronic Technology (MIPRO)", "pages": "1746-1751"}, "citationStyles":
      {"bibtex": "@Article{Sipek2020EnhancingPO,\n author = {M. Sipek and D. Muharemagic
      and B. Mihaljevi\u0107 and Aleksander Radovan},\n booktitle = {International
      Convention on Information and Communication Technology, Electronics and Microelectronics},\n
      journal = {2020 43rd International Convention on Information, Communication
      and Electronic Technology (MIPRO)},\n pages = {1746-1751},\n title = {Enhancing
      Performance of Cloud-based Software Applications with GraalVM and Quarkus},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "1644121137", "name": "M. Sipek"},
      {"authorId": "1644121152", "name": "D. Muharemagic"}, {"authorId": "145890864",
      "name": "B. Mihaljevi\u0107"}, {"authorId": "144734263", "name": "Aleksander
      Radovan"}]}, {"paperId": "468b4dca2568651f2cdbaa97ce90066b6200ea48", "externalIds":
      {"MAG": "3119212243", "DOI": "10.1007/978-981-15-9343-7_58", "CorpusId": 234145622},
      "corpusId": 234145622, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/468b4dca2568651f2cdbaa97ce90066b6200ea48",
      "title": "Implementation of a Container-Based Interactive Environment for Big-Data
      Analysis on Supercomputer", "abstract": null, "venue": "", "year": 2021, "referenceCount":
      3, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2021-01-05", "journal": {"name": "", "pages": "421-425",
      "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Lee2021ImplementationOA,\n
      author = {Seungmin Lee and Ju-Won Park and Kimoon Jeong and Jaegyoon Hahm},\n
      pages = {421-425},\n title = {Implementation of a Container-Based Interactive
      Environment for Big-Data Analysis on Supercomputer},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2108169731", "name": "Seungmin Lee"}, {"authorId":
      "1757614", "name": "Ju-Won Park"}, {"authorId": "3257832", "name": "Kimoon Jeong"},
      {"authorId": "47326365", "name": "Jaegyoon Hahm"}]}, {"paperId": "46aeff64618ed8d4306f52b3c2842145f394bd15",
      "externalIds": {"DBLP": "journals/tnsm/TokaDFS21", "DOI": "10.1109/TNSM.2021.3052837",
      "CorpusId": 232237085}, "corpusId": 232237085, "publicationVenue": {"id": "a00fde74-d8df-4613-b825-0fff9f531d3f",
      "name": "IEEE Transactions on Network and Service Management", "type": "journal",
      "alternate_names": ["IEEE Trans Netw Serv Manag"], "issn": "1932-4537", "url":
      "http://ejournals.ebsco.com/direct.asp?JournalID=714200", "alternate_urls":
      ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=4275028", "http://ieeexplore.ieee.org/servlet/opac?punumber=4275028"]},
      "url": "https://www.semanticscholar.org/paper/46aeff64618ed8d4306f52b3c2842145f394bd15",
      "title": "Machine Learning-Based Scaling Management for Kubernetes Edge Clusters",
      "abstract": "Kubernetes, the container orchestrator for cloud-deployed applications,
      offers automatic scaling for the application provider in order to meet the ever-changing
      intensity of processing demand. This auto-scaling feature can be customized
      with a parameter set, but those management parameters are static while incoming
      Web request dynamics often change, not to mention the fact that scaling decisions
      are inherently reactive, instead of being proactive. We set the ultimate goal
      of making cloud-based applications\u2019 management easier and more effective.
      We propose a Kubernetes scaling engine that makes the auto-scaling decisions
      apt for handling the actual variability of incoming requests. In this engine
      various machine learning forecast methods compete with each other via a short-term
      evaluation loop in order to always give the lead to the method that suits best
      the actual request dynamics. We also introduce a compact management parameter
      for the cloud-tenant application provider to easily set their sweet spot in
      the resource over-provisioning vs. SLA violation trade-off. We motivate our
      scaling solution with analytical modeling and evaluation of the current Kubernetes
      behavior. The multi-forecast scaling engine and the proposed management parameter
      are evaluated both in simulations and with measurements on our collected Web
      traces to show the improved quality of fitting provisioned resources to service
      demand. We find that with just a few, but fundamentally different, and competing
      forecast methods, our auto-scaler engine, implemented in Kubernetes, results
      in significantly fewer lost requests with just slightly more provisioned resources
      compared to the default baseline.", "venue": "IEEE Transactions on Network and
      Service Management", "year": 2021, "referenceCount": 35, "citationCount": 56,
      "influentialCitationCount": 3, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-03-01", "journal": {"name": "IEEE Transactions on Network and Service
      Management", "pages": "958-972", "volume": "18"}, "citationStyles": {"bibtex":
      "@Article{Toka2021MachineLS,\n author = {L\u00e1szl\u00f3 Toka and Gergely Dobreff
      and Bal\u00e1zs Fodor and Bal\u00e1zs Sonkoly},\n booktitle = {IEEE Transactions
      on Network and Service Management},\n journal = {IEEE Transactions on Network
      and Service Management},\n pages = {958-972},\n title = {Machine Learning-Based
      Scaling Management for Kubernetes Edge Clusters},\n volume = {18},\n year =
      {2021}\n}\n"}, "authors": [{"authorId": "2955111", "name": "L\u00e1szl\u00f3
      Toka"}, {"authorId": "1820938878", "name": "Gergely Dobreff"}, {"authorId":
      "2065166600", "name": "Bal\u00e1zs Fodor"}, {"authorId": "1771457", "name":
      "Bal\u00e1zs Sonkoly"}]}, {"paperId": "46c22dc0a689415c0750382d9d746a2aea445efd",
      "externalIds": {"MAG": "2938389166", "CorpusId": 186739456}, "corpusId": 186739456,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/46c22dc0a689415c0750382d9d746a2aea445efd",
      "title": "Docker und Kubernetes", "abstract": null, "venue": "", "year": 2018,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Zastrow2018DockerUK,\n author
      = {Thomas Zastrow},\n title = {Docker und Kubernetes},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "2075526571", "name": "Thomas Zastrow"}]}, {"paperId":
      "4744383e961f73fdaaaa503a1ad370335bd971ec", "externalIds": {"DOI": "10.1109/ITC-CSCC58803.2023.10212432",
      "CorpusId": 260933539}, "corpusId": 260933539, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4744383e961f73fdaaaa503a1ad370335bd971ec",
      "title": "Two Autoscaling Approaches on Kubernetes Clusters Against Data Streaming
      Applications", "abstract": "This paper is aimed to study the performance comparison
      of two autoscaling approaches against data streaming and visualization applications
      under Kubernetes clusters. In particular, vertical and horizontal scaling methods
      are focused. The experimental setup has been done extensively based on the architecture
      stack which includes Apache Kafka, Apache Spark, Filebeat, Logstash, Elasticsearch,
      Kibana, Prometheus, and Grafana. The performance and resource utilization of
      the data flow display system in Kubernetes clusters are evaluated using Apache
      JMeter. Three metrics: CPU utilization, response time, throughput, and error
      rate are used. The experimental results show that on average, the CPU utilization
      of the horizontally scaled system is higher by 18.48% compared to the non-scaling
      system, while the vertically scaled system uses 49.45% using less CPU resources
      than the non-scaling system. The average response time of the horizontally scaled
      system is 65.60% lower than the non-scaling system, while the vertically scaled
      system is 1.19% lower than the non-scaling system. The error rate of the horizontally
      scaled system is 0.04%, but the error rate of the vertically scaled system is
      as high as 15.16%.", "venue": "2023 International Technical Conference on Circuits/Systems,
      Computers, and Communications (ITC-CSCC)", "year": 2023, "referenceCount": 12,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2023-06-25", "journal": {"name": "2023 International Technical Conference on
      Circuits/Systems, Computers, and Communications (ITC-CSCC)", "pages": "1-6"},
      "citationStyles": {"bibtex": "@Conference{Choonhaklai2023TwoAA,\n author = {Papon
      Choonhaklai and C. Chantrapornchai},\n booktitle = {2023 International Technical
      Conference on Circuits/Systems, Computers, and Communications (ITC-CSCC)},\n
      journal = {2023 International Technical Conference on Circuits/Systems, Computers,
      and Communications (ITC-CSCC)},\n pages = {1-6},\n title = {Two Autoscaling
      Approaches on Kubernetes Clusters Against Data Streaming Applications},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2231798129", "name": "Papon Choonhaklai"},
      {"authorId": "2871912", "name": "C. Chantrapornchai"}]}, {"paperId": "474d0f308269c14292122ab900c3a8489207b5be",
      "externalIds": {"DBLP": "journals/ejasp/SharmaBCCAHJ21", "DOI": "10.1186/s13634-021-00754-2",
      "CorpusId": 236096523}, "corpusId": 236096523, "publicationVenue": {"id": "63f2d4cb-31e9-465e-a09f-a48b034b7210",
      "name": "EURASIP Journal on Advances in Signal Processing", "type": "journal",
      "alternate_names": ["EURASIP J Adv Signal Process"], "issn": "1687-6172", "url":
      "http://asp.eurasipjournals.com/", "alternate_urls": ["https://asp-eurasipjournals.springeropen.com/"]},
      "url": "https://www.semanticscholar.org/paper/474d0f308269c14292122ab900c3a8489207b5be",
      "title": "Benchmarking geospatial database on Kubernetes cluster", "abstract":
      null, "venue": "EURASIP Journal on Advances in Signal Processing", "year": 2021,
      "referenceCount": 28, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://asp-eurasipjournals.springeropen.com/track/pdf/10.1186/s13634-021-00754-2",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Geography", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2021-07-19", "journal": {"name": "EURASIP
      Journal on Advances in Signal Processing", "pages": "1-29", "volume": "2021"},
      "citationStyles": {"bibtex": "@Article{Sharma2021BenchmarkingGD,\n author =
      {Bharti Sharma and Poonam Bansal and Mohak Chugh and Adisakshya Chauhan and
      Prateek Anand and Qiaozhi Hua and Achin Jain},\n booktitle = {EURASIP Journal
      on Advances in Signal Processing},\n journal = {EURASIP Journal on Advances
      in Signal Processing},\n pages = {1-29},\n title = {Benchmarking geospatial
      database on Kubernetes cluster},\n volume = {2021},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "46528223", "name": "Bharti Sharma"}, {"authorId":
      "151504742", "name": "Poonam Bansal"}, {"authorId": "2120066660", "name": "Mohak
      Chugh"}, {"authorId": "2120067802", "name": "Adisakshya Chauhan"}, {"authorId":
      "29103536", "name": "Prateek Anand"}, {"authorId": "36862923", "name": "Qiaozhi
      Hua"}, {"authorId": "2148305265", "name": "Achin Jain"}]}, {"paperId": "474f226a9391eed0ec492a8d04a433bf48016a17",
      "externalIds": {"DOI": "10.3389/frsc.2021.690660", "CorpusId": 235825605}, "corpusId":
      235825605, "publicationVenue": {"id": "acd759b3-bdf2-49d7-96c1-f5750716422e",
      "name": "Frontiers in Sustainable Cities", "type": "journal", "alternate_names":
      ["Front Sustain City"], "issn": "2624-9634", "url": "https://www.frontiersin.org/journals/sustainable-cities#"},
      "url": "https://www.semanticscholar.org/paper/474f226a9391eed0ec492a8d04a433bf48016a17",
      "title": "PAPS: A Serverless Platform for Edge Computing Infrastructures", "abstract":
      "Edge computing infrastructures are often employed to run applications with
      low latency requirements. Users can exploits nodes that are close to their physical
      positions so that the delay of sending computations and data to the Cloud is
      mitigated. Since users frequently change their locations, and the resources
      available in the Edge are limited, the management of these infrastructures poses
      new, difficult challenges. This paper presents PAPS (Partitioning, Allocation,
      Placement, and Scaling), a framework for the efficient, automated and scalable
      management of large-scale Edge topologies. PAPS acts as a serveless platform
      for the Edge. Service providers can upload applications as compositions of lightweight
      and stateless functions along with latency constraints. At runtime, PAPS manages
      these applications by executing them in containers, it changes their placement
      in the Edge topology according to the geographical distribution of the workload,
      and efficiently allocates resources according to their needs. This paper also
      presents the architecture of a PAPS prototype built atop Kubernetes and OpenFaaS.
      The assessment shows both the feasibility of the approach and the ability of
      efficiently managing hundreds of serverless concurrent functions and of dealing
      with intense and unpredictable workload variations.", "venue": "Frontiers in
      Sustainable Cities", "year": 2021, "referenceCount": 34, "citationCount": 8,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.frontiersin.org/articles/10.3389/frsc.2021.690660/pdf", "status":
      "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-07-15", "journal": {"volume":
      "3"}, "citationStyles": {"bibtex": "@Inproceedings{Baresi2021PAPSAS,\n author
      = {L. Baresi and G. Quattrocchi},\n booktitle = {Frontiers in Sustainable Cities},\n
      title = {PAPS: A Serverless Platform for Edge Computing Infrastructures},\n
      volume = {3},\n year = {2021}\n}\n"}, "authors": [{"authorId": "1704858", "name":
      "L. Baresi"}, {"authorId": "1500419986", "name": "G. Quattrocchi"}]}, {"paperId":
      "47c1bea82351e4ab2cfbfab6bee44f6cfb1f0b3e", "externalIds": {"MAG": "2968559463",
      "DOI": "10.1088/1757-899X/569/5/052091", "CorpusId": 201887626}, "corpusId":
      201887626, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/47c1bea82351e4ab2cfbfab6bee44f6cfb1f0b3e",
      "title": "Design and Implementation of School Ticket Ticketing Service Platform
      Based on Kubernetes Container Self-Scalable Technology", "abstract": "The current
      system of line colonel tickets booking in colleges and universities is not able
      to predict the high and low peak of student booking flow in time, which leads
      to the unreasonable allocation of computer resources. In order to optimize the
      online booking experience of campus students, this paper proposes a design scheme
      of the school bus ticket booking service platform based on Kubernetes container
      self-expanding technology. The experiment shows that the platform can monitor
      and predict the booking situation of students, timely respond to the high and
      low peak period of student booking on campus, ensure the smooth experience of
      students booking online, which reflects the advantages of the platform.", "venue":
      "IOP Conference Series: Materials Science and Engineering", "year": 2019, "referenceCount":
      7, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Physics", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Physics", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2019-08-09", "journal":
      {"name": "IOP Conference Series: Materials Science and Engineering", "volume":
      "569"}, "citationStyles": {"bibtex": "@Conference{Huang2019DesignAI,\n author
      = {Yiting Huang and Mantao Wang and L. Zou and Anqi Zhao and Yu Yao and F. Yao},\n
      booktitle = {IOP Conference Series: Materials Science and Engineering},\n journal
      = {IOP Conference Series: Materials Science and Engineering},\n title = {Design
      and Implementation of School Ticket Ticketing Service Platform Based on Kubernetes
      Container Self-Scalable Technology},\n volume = {569},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "2130487997", "name": "Yiting Huang"}, {"authorId":
      "21836351", "name": "Mantao Wang"}, {"authorId": "2055449915", "name": "L. Zou"},
      {"authorId": "2125260333", "name": "Anqi Zhao"}, {"authorId": "2116471772",
      "name": "Yu Yao"}, {"authorId": "2068476645", "name": "F. Yao"}]}, {"paperId":
      "47faa53900ae413de7f9786b18b4a6abe1709085", "externalIds": {"MAG": "2998880652",
      "CorpusId": 212865581}, "corpusId": 212865581, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/47faa53900ae413de7f9786b18b4a6abe1709085",
      "title": "Serverless Architectures with Kubernetes", "abstract": "Deploy, orchestrate,
      and monitor serverless applications using Kubernetes\nKey Features\n\nGet hands-on
      experience with frameworks, such as Kubeless, Apache OpenWhisk, and Funktion\nMaster
      the basics of Kubernetes and prepare yourself for challenging technical assessments\nLearn
      how to launch Kubernetes both locally and in a public cloud\n\nBook Description\nKubernetes
      has established itself as the standard platform for container management, orchestration,
      and deployment. By learning Kubernetes, you''ll be able to design your own serverless
      architecture by implementing the function-as-a-service (FaaS) model.\nAfter
      an accelerated, hands-on overview of the serverless architecture and various
      Kubernetes concepts, you''ll cover a wide range of real-world development challenges
      faced by real-world developers, and explore various techniques to overcome them.
      You''ll learn how to create production-ready Kubernetes clusters and run serverless
      applications on them. You''ll see how Kubernetes platforms and serverless frameworks
      such as Kubeless, Apache OpenWhisk and OpenFaaS provide the tooling to help
      you develop serverless applications on Kubernetes. You''ll also learn ways to
      select the appropriate framework for your upcoming project.\nBy the end of this
      book, you''ll have the skills and confidence to design your own serverless applications
      using the power and flexibility of Kubernetes.\nWhat you will learn\n\nDeploy
      a Kubernetes cluster locally with Minikube\nGet familiar with AWS Lambda and
      Google Cloud Functions\nCreate, build, and deploy a webpage generated by the
      serverless functions in the cloud\nCreate a Kubernetes cluster running on the
      virtual kubelet hardware abstraction\nCreate, test, troubleshoot, and delete
      an OpenFaaS function\nCreate a sample Slackbot with Apache OpenWhisk actions\n\nWho
      this book is for\nThis book is for software developers and DevOps engineers
      who have basic or intermediate knowledge about Kubernetes and want to learn
      how to create serverless applications that run on Kubernetes. Those who want
      to design and create serverless applications running on the cloud, or on-premise
      Kubernetes clusters will also find this book useful.", "venue": "", "year":
      2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate":
      "2019-11-29", "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex":
      "@Inproceedings{Y\u0131lmaz2019ServerlessAW,\n author = {Onurhan Y\u0131lmaz
      and S. Sarathchandra},\n title = {Serverless Architectures with Kubernetes},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "1411332855", "name": "Onurhan
      Y\u0131lmaz"}, {"authorId": "103840832", "name": "S. Sarathchandra"}]}, {"paperId":
      "4804351ddb9f1b28817c6dced7c00b644da48f1a", "externalIds": {"MAG": "3004140385",
      "DBLP": "conf/cloudcom/NguyenHPHHLJJHT19", "DOI": "10.1109/CloudCom.2019.00066",
      "CorpusId": 210970969}, "corpusId": 210970969, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4804351ddb9f1b28817c6dced7c00b644da48f1a",
      "title": "Performance Analysis of Data Parallelism Technique in Machine Learning
      for Human Activity Recognition Using LSTM", "abstract": "Human activity recognition
      (HAR), driven by large deep learning models, has received a lot of attention
      in recent years due to its high applicability in diverse application domains,
      manipulate time-series data to speculate on activities. Meanwhile, the cloud
      term \"as-a-service\" has essentially revolutionized the information technology
      industry market over the last ten years. These two trends somehow are incorporating
      to inspire a new model for the assistive living application: HAR as a service
      in the cloud. However, with frequently updates deep learning frameworks in open
      source communities as well as various new hardware features release, which make
      a significant software management challenge for deep learning model developers.
      To address this problem, container techniques are widely employed to facilitate
      the deep learning software development cycle. In addition, models and the available
      datasets are being larger and more complicated, and so, an expanding amount
      of computing resources is desired so that these models are trained in a feasible
      amount of time. This requires an emerging distributed training approach, called
      data parallelism, to achieve low resource utilization and faster execution in
      training time. Therefore, in this paper, we apply the data parallelism to build
      an assistive living HAR application using LSTM model, deploying in containers
      within a Kubernetes cluster to enable the real-time recognition as well as prediction
      of changes in human activity patterns. We then systematically measure the influence
      of this technique on the performance of the HAR application. Firstly, we evaluate
      our system performance with regard to CPU and GPU when deployed in containers
      and host environment, then analyze the outcomes to verify the difference in
      terms of the model learning performance. Through the experiments, we figure
      out that data parallelism strategy is efficient for improving model learning
      performance. In addition, this technique helps to increase the scaling efficiency
      in our system.", "venue": "2019 IEEE International Conference on Cloud Computing
      Technology and Science (CloudCom)", "year": 2019, "referenceCount": 13, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2019-12-01", "journal": {"name": "2019 IEEE International Conference on Cloud
      Computing Technology and Science (CloudCom)", "pages": "387-391"}, "citationStyles":
      {"bibtex": "@Article{Nguyen2019PerformanceAO,\n author = {Tri D. T. Nguyen and
      Eui-nam Huh and Jae Ho Park and Md. Imtiaz Hossain and M. Hossain and Seung-Jin
      Lee and Jin Woong Jang and Seo Hui Jo and Luan N. T. Huynh and Trong Khanh Tran},\n
      booktitle = {2019 IEEE International Conference on Cloud Computing Technology
      and Science (CloudCom)},\n journal = {2019 IEEE International Conference on
      Cloud Computing Technology and Science (CloudCom)},\n pages = {387-391},\n title
      = {Performance Analysis of Data Parallelism Technique in Machine Learning for
      Human Activity Recognition Using LSTM},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "144058515", "name": "Tri D. T. Nguyen"}, {"authorId": "1705900", "name": "Eui-nam
      Huh"}, {"authorId": "2116020620", "name": "Jae Ho Park"}, {"authorId": "9369513",
      "name": "Md. Imtiaz Hossain"}, {"authorId": "153080552", "name": "M. Hossain"},
      {"authorId": "40507007", "name": "Seung-Jin Lee"}, {"authorId": "2149619902",
      "name": "Jin Woong Jang"}, {"authorId": "2146863596", "name": "Seo Hui Jo"},
      {"authorId": "143682164", "name": "Luan N. T. Huynh"}, {"authorId": "2154432770",
      "name": "Trong Khanh Tran"}]}, {"paperId": "480846bb2752dbdbaa3382c33c82b8affb1e5437",
      "externalIds": {"MAG": "3004039831", "DBLP": "journals/internet/DouglisN19",
      "DOI": "10.1109/mic.2019.2955784", "CorpusId": 211038268}, "corpusId": 211038268,
      "publicationVenue": {"id": "2e2fed97-17e5-488e-9efa-833a387a842d", "name": "IEEE
      Internet Computing", "type": "journal", "alternate_names": ["IEEE Internet Comput"],
      "issn": "1089-7801", "url": "http://www.computer.org/internet/", "alternate_urls":
      ["https://ieeexplore.ieee.org/servlet/opac?punumber=4236"]}, "url": "https://www.semanticscholar.org/paper/480846bb2752dbdbaa3382c33c82b8affb1e5437",
      "title": "Microservices and Containers", "abstract": "The articles in this special
      section focus on microservices and containers. These services allow an application
      to be comprised of many independently operating and scalable components, have
      become a common service paradigm. The ability to construct an application by
      provisioning these interoperating components has various advantages, including
      the isolation and independent development of tools such as key-value stores,
      authentication, logging, and many others. Containers are one type of system
      infrastructure that is commonly used to support microservices. With container
      management systems like Docker and orchestration systems like Kubernetes to
      control applications and dynamically provision their resources, cloud services
      can be extremely scalable, reliable, and reactive. However, other systems beyond
      containers can be used to support microservices, and many applications other
      than microservices benefit from containerization.", "venue": "IEEE Internet
      Computing", "year": 2019, "referenceCount": 0, "citationCount": 26, "influentialCitationCount":
      2, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2019-11-01", "journal": {"name": "IEEE Internet Comput.", "pages": "5-6", "volume":
      "23"}, "citationStyles": {"bibtex": "@Article{Douglis2019MicroservicesAC,\n
      author = {F. Douglis and Jason Nieh},\n booktitle = {IEEE Internet Computing},\n
      journal = {IEEE Internet Comput.},\n pages = {5-6},\n title = {Microservices
      and Containers},\n volume = {23},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "1782350", "name": "F. Douglis"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
      {"paperId": "4811c7222e67b5b7fdb5ee31c94674ffc40bc542", "externalIds": {"DBLP":
      "conf/hotedge/FuMZR20", "MAG": "3042802890", "CorpusId": 220544686}, "corpusId":
      220544686, "publicationVenue": {"id": "9cc7b942-db97-4c30-bfa9-44f51f7addeb",
      "name": "USENIX Workshop on Hot Topics in Edge Computing", "type": "conference",
      "alternate_names": ["HotEdge", "USENIX Workshop Hot Top Edge Comput"]}, "url":
      "https://www.semanticscholar.org/paper/4811c7222e67b5b7fdb5ee31c94674ffc40bc542",
      "title": "Fast and Efficient Container Startup at the Edge via Dependency Scheduling",
      "abstract": "Containers are becoming the canonical way of deploying compute
      tasks at the edge. Unfortunately, container startup latency and overhead remain
      high, limiting responsiveness and resource efficiency of edge deployments. This
      latency comes mostly from fetching container dependencies including system libraries,
      tools, configuration files, and data files. To address this, we propose that
      schedulers in container orchestrators take into account a task\u2019s dependencies.
      Hence, in dependency scheduling, the scheduler tries to place a task at a node
      that has the maximum number of the task\u2019s dependencies stored locally.
      We implement dependency scheduling within Kubernetes and evaluate it through
      extensive experiments and measurement-driven simulations. We show that, for
      typical scenarios, dependency scheduling improves task startup latency by 1.4-2.3x
      relative to current dependency-agnostic schedulers. Our implementation of dependency
      scheduling has been adopted into the mainline Kubernetes codebase.", "venue":
      "USENIX Workshop on Hot Topics in Edge Computing", "year": 2020, "referenceCount":
      24, "citationCount": 26, "influentialCitationCount": 3, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Article{Fu2020FastAE,\n author = {Silvery Fu and R. Mittal and
      Lei Zhang and S. Ratnasamy},\n booktitle = {USENIX Workshop on Hot Topics in
      Edge Computing},\n title = {Fast and Efficient Container Startup at the Edge
      via Dependency Scheduling},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "32302537", "name": "Silvery Fu"}, {"authorId": "3350658", "name": "R. Mittal"},
      {"authorId": "1452981772", "name": "Lei Zhang"}, {"authorId": "1699297", "name":
      "S. Ratnasamy"}]}, {"paperId": "4828eb75799a6290f6dc53872a230539acb7d3fc", "externalIds":
      {"MAG": "2997230262", "CorpusId": 213222652}, "corpusId": 213222652, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/4828eb75799a6290f6dc53872a230539acb7d3fc",
      "title": "Hands-On Microservices with Spring Boot and Spring Cloud", "abstract":
      "Apply microservices patterns to build resilient and scalable distributed systems\nKey
      Features\nUnderstand the challenges of building large-scale microservice landscapes\n\nBuild
      cloud-native production-ready microservices with this comprehensive guide\n\nDiscover
      how to get the best out of Spring Cloud, Kubernetes, and Istio when used together\nBook
      Description\nMicroservices architecture allows developers to build and maintain
      applications with ease, and enterprises are rapidly adopting it to build software
      using Spring Boot as their default framework. With this book, you''ll learn
      how to efficiently build and deploy microservices using Spring Boot. \n\nThis
      microservices book will take you through tried and tested approaches to building
      distributed systems and implementing microservices architecture in your organization.
      Starting with a set of simple cooperating microservices developed using Spring
      Boot, you''ll learn how you can add functionalities such as persistence, make
      your microservices reactive, and describe their APIs using Swagger/OpenAPI.
      As you advance, you''ll understand how to add different services from Spring
      Cloud to your microservice system. The book also demonstrates how to deploy
      your microservices using Kubernetes and manage them with Istio for improved
      security and traffic management. Finally, you''ll explore centralized log management
      using the EFK stack and monitor microservices using Prometheus and Grafana.\n\nBy
      the end of this book, you''ll be able to build microservices that are scalable
      and robust using Spring Boot and Spring Cloud.\nWhat you will learn\nBuild reactive
      microservices using Spring Boot\n\nDevelop resilient and scalable microservices
      using Spring Cloud\n\nUse OAuth 2.0/OIDC and Spring Security to protect public
      APIs\n\nImplement Docker to bridge the gap between development, testing, and
      production\n\nDeploy and manage microservices using Kubernetes\n\nApply Istio
      for improved security, observability, and traffic management\nWho this book
      is for\nThis book is for Java and Spring developers and architects who want
      to learn how to break up their existing monoliths into microservices and deploy
      them either on-premises or in the cloud using Kubernetes as a container orchestrator
      and Istio as a service Mesh. No familiarity with microservices architecture
      is required to get started with this book.", "venue": "", "year": 2019, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2019-09-20", "journal": {"name":
      "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Larsson2019HandsOnMW,\n
      author = {M. Larsson},\n title = {Hands-On Microservices with Spring Boot and
      Spring Cloud},\n year = {2019}\n}\n"}, "authors": [{"authorId": "144709679",
      "name": "M. Larsson"}]}, {"paperId": "483748279ded3facfba2a6e889e1e39579acd765",
      "externalIds": {"DOI": "10.2507/32nd.daaam.proceedings.011", "CorpusId": 245174853},
      "corpusId": 245174853, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/483748279ded3facfba2a6e889e1e39579acd765",
      "title": "Optimizing Kubernetes Performance, Efficiency and Energy Footprint
      In Heterogenous HPC Environments", "abstract": null, "venue": "Proceedings of
      the 32nd International DAAAM Symposium 2021", "year": 2021, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "Proceedings
      of the 32nd International DAAAM Symposium 2021"}, "citationStyles": {"bibtex":
      "@Article{Dakic2021OptimizingKP,\n author = {V. Dakic and M. Kova\u010d and
      Jasmin Redzepagic},\n booktitle = {Proceedings of the 32nd International DAAAM
      Symposium 2021},\n journal = {Proceedings of the 32nd International DAAAM Symposium
      2021},\n title = {Optimizing Kubernetes Performance, Efficiency and Energy Footprint
      In Heterogenous HPC Environments},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "1382237545", "name": "V. Dakic"}, {"authorId": "144269430", "name": "M. Kova\u010d"},
      {"authorId": "1871766", "name": "Jasmin Redzepagic"}]}, {"paperId": "485786ba04fab26ef7f2d2dec962c0f9e145674a",
      "externalIds": {"DOI": "10.12720/jait.14.3.501-509", "CorpusId": 259798491},
      "corpusId": 259798491, "publicationVenue": {"id": "f4784c7b-6592-49eb-a116-7290e0398868",
      "name": "Journal of Advances in Information Technology", "type": "journal",
      "alternate_names": ["J Adv Inf Technol"], "issn": "1798-2340", "url": "http://academypublisher.com/jait/index.html",
      "alternate_urls": ["http://www.jait.us/"]}, "url": "https://www.semanticscholar.org/paper/485786ba04fab26ef7f2d2dec962c0f9e145674a",
      "title": "Automated Resource Management System Based upon Container Orchestration
      Tools Comparison", "abstract": "\u2014The goal of this article is to study and
      analyze the container orchestration technology Kubernetes, Docker Swarm, and
      Apache Mesos by performing performance evaluations and inspecting how many requests
      and responses the server can handle. Due to the fact that managing information
      system resources is a challenge in terms of performance, usability, reliability,
      and the cost of information resources. Some orchestration tools cannot automatically
      allocate resources depending on the scope of the information system resource
      management. This leads to allocating resources more than the needs of system
      requirements, resulting in excessive costs. Therefore, this article proposed
      testing the system by measuring its effectiveness using a structured process
      by examining measurement variables such as the number of requests per second,
      number of responses to requests, and resource extension period using all three-orchestration
      technology. From the testing and analysis of all three variables as mentioned,
      it is possible to know the efficiency of the Kubernetes technology in such a
      similar environment and compared it with other orchestration tools like Docker
      Swarm and Apache Mesos orchestrator. For Kubernetes, Docker Swarm, and Apache
      Mesos, the mean value of its handling average request per minute is 30,677.25/min,
      33,688.67/min, and 29,682.6/min, respectively. Swarm performed better in aspects
      of handling requests per minute by 9.35% of the difference when compared to
      Kubernetes and by 12.64% when compared to Apache Mesos. However, there are several
      things which should be taken into consideration because each orchestration tool
      has its own strong and weak points. The testing experiment could display a piece
      of information on the dashboard for visualization and analytic purposes and
      there is an elaboration at the end of when to use which container orchestration
      tool to suit the business proposes the most .", "venue": "Journal of Advances
      in Information Technology", "year": 2023, "referenceCount": 16, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"name": "Journal of Advances in Information Technology"},
      "citationStyles": {"bibtex": "@Article{Purahong2023AutomatedRM,\n author = {B.
      Purahong and J. Sithiyopasakul and P. Sithiyopasakul and A. Lasakul and C. Benjangkaprasert},\n
      booktitle = {Journal of Advances in Information Technology},\n journal = {Journal
      of Advances in Information Technology},\n title = {Automated Resource Management
      System Based upon Container Orchestration Tools Comparison},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2834932", "name": "B. Purahong"}, {"authorId": "2047941040",
      "name": "J. Sithiyopasakul"}, {"authorId": "2047940213", "name": "P. Sithiyopasakul"},
      {"authorId": "2301748", "name": "A. Lasakul"}, {"authorId": "2113644027", "name":
      "C. Benjangkaprasert"}]}, {"paperId": "486994a8c2908ddab94e893325dba98de51d92be",
      "externalIds": {"DBLP": "journals/corr/abs-1903-06802", "MAG": "2966425878",
      "ArXiv": "1903.06802", "DOI": "10.1109/IPDPSW.2019.00142", "CorpusId": 81979272},
      "corpusId": 81979272, "publicationVenue": {"id": "7ddefda0-174f-499a-9dce-855879dd01b7",
      "name": "IEEE International Symposium on Parallel & Distributed Processing,
      Workshops and Phd Forum", "type": "conference", "alternate_names": ["IPDPSW",
      "IEEE Int Symp Parallel  Distrib Process Work Phd Forum"]}, "url": "https://www.semanticscholar.org/paper/486994a8c2908ddab94e893325dba98de51d92be",
      "title": "Workflow-Driven Distributed Machine Learning in CHASE-CI: A Cognitive
      Hardware and Software Ecosystem Community Infrastructure", "abstract": "The
      advances in data, computing and networking over the last two decades led to
      a shift in many application domains that includes machine learning on big data
      as a part of the scientific process, requiring new capabilities for integrated
      and distributed hardware and software infrastructure. This paper contributes
      a workflow-driven approach for dynamic data-driven application development on
      top of a new kind of networked Cyberinfrastructure called CHASE-CI. In particular,
      we present: 1) The architecture for CHASE-CI, a network of distributed fast
      GPU appliances for machine learning and storage managed through Kubernetes on
      the high-speed (10-100Gbps) Pacific Research Platform (PRP); 2) A machine learning
      software containerization approach and libraries required for turning such a
      network into a distributed computer for big data analysis; 3) An atmospheric
      science case study that can only be made scalable with an infrastructure like
      CHASE-CI; 4) Capabilities for virtual cluster management for data communication
      and analysis in a dynamically scalable fashion, and visualization across the
      network in specialized visualization facilities in near real-time; and, 5) A
      step-by-step workflow and performance measurement approach that enables taking
      advantage of the dynamic architecture of the CHASE-CI network and container
      management infrastructure.", "venue": "IEEE International Symposium on Parallel
      & Distributed Processing, Workshops and Phd Forum", "year": 2019, "referenceCount":
      24, "citationCount": 12, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/1903.06802", "status": "GREEN"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-02-26", "journal": {"name": "2019
      IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)",
      "pages": "865-873"}, "citationStyles": {"bibtex": "@Article{Altintas2019WorkflowDrivenDM,\n
      author = {I. Altintas and Kyle Marcus and Isaac Nealey and S. Sellars and John
      Graham and D. Mishin and Joel Polizzi and Daniel Crawl and T. DeFanti and L.
      Smarr},\n booktitle = {IEEE International Symposium on Parallel & Distributed
      Processing, Workshops and Phd Forum},\n journal = {2019 IEEE International Parallel
      and Distributed Processing Symposium Workshops (IPDPSW)},\n pages = {865-873},\n
      title = {Workflow-Driven Distributed Machine Learning in CHASE-CI: A Cognitive
      Hardware and Software Ecosystem Community Infrastructure},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "1729053", "name": "I. Altintas"}, {"authorId": "1578800079",
      "name": "Kyle Marcus"}, {"authorId": "2238498188", "name": "Isaac Nealey"},
      {"authorId": "24870154", "name": "S. Sellars"}, {"authorId": "2074471196", "name":
      "John Graham"}, {"authorId": "2113808276", "name": "D. Mishin"}, {"authorId":
      "87888463", "name": "Joel Polizzi"}, {"authorId": "2813797", "name": "Daniel
      Crawl"}, {"authorId": "2029117", "name": "T. DeFanti"}, {"authorId": "2097021579",
      "name": "L. Smarr"}]}, {"paperId": "486e1e8a14dcea2c8680949a5440a0164a191eab",
      "externalIds": {"DOI": "10.33965/ciawi_ciaca2021_202110l001", "CorpusId": 254910268},
      "corpusId": 254910268, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/486e1e8a14dcea2c8680949a5440a0164a191eab",
      "title": "AN\u00c1LISE DAS TECNOLOGIAS FIREBASE E KUBERNETES PARA IMPLEMENTA\u00c7\u00c3O
      DE MICROSSERVI\u00c7OS NA ABORDAGEM BPM", "abstract": null, "venue": "Proceedings
      of the  Ibero American Conferences on WWW/Internet 2021 and Computa\u00e7\u00e3o
      Aplicada 2021", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://www.iadisportal.org/components/com_booklibrary/ebooks/202110L001.pdf",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      ["Conference"], "publicationDate": "2021-11-18", "journal": {"name": "Proceedings
      of the  Ibero American Conferences on WWW/Internet 2021 and Computa\u00e7\u00e3o
      Aplicada 2021"}, "citationStyles": {"bibtex": "@Conference{None,\n booktitle
      = {Proceedings of the  Ibero American Conferences on WWW/Internet 2021 and Computa\u00e7\u00e3o
      Aplicada 2021},\n journal = {Proceedings of the  Ibero American Conferences
      on WWW/Internet 2021 and Computa\u00e7\u00e3o Aplicada 2021},\n title = {AN\u00c1LISE
      DAS TECNOLOGIAS FIREBASE E KUBERNETES PARA IMPLEMENTA\u00c7\u00c3O DE MICROSSERVI\u00c7OS
      NA ABORDAGEM BPM},\n year = {2021}\n}\n"}, "authors": []}, {"paperId": "4875df04220d8432b09eb5d531504c129e80f86f",
      "externalIds": {"MAG": "3187797287", "DOI": "10.1007/978-1-4842-7192-6_9", "CorpusId":
      238967300}, "corpusId": 238967300, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4875df04220d8432b09eb5d531504c129e80f86f",
      "title": "Azure Arc\u2013Enabled Data Services and High Availability for SQL
      Server on Kubernetes", "abstract": null, "venue": "SQL Server on Kubernetes",
      "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "SQL Server on Kubernetes"}, "citationStyles": {"bibtex":
      "@Article{Nocentino2021AzureAD,\n author = {Anthony E. Nocentino and Benjamin
      Weissman},\n booktitle = {SQL Server on Kubernetes},\n journal = {SQL Server
      on Kubernetes},\n title = {Azure Arc\u2013Enabled Data Services and High Availability
      for SQL Server on Kubernetes},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2047576954", "name": "Anthony E. Nocentino"}, {"authorId": "145400508", "name":
      "Benjamin Weissman"}]}, {"paperId": "48f9aec3bfbd1c0ec1f72f97fadcb3acb175a0a1",
      "externalIds": {"MAG": "2463789012", "DOI": "10.1007/978-1-4842-1907-2_4", "CorpusId":
      57239988}, "corpusId": 57239988, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/48f9aec3bfbd1c0ec1f72f97fadcb3acb175a0a1",
      "title": "Using MySQL Database", "abstract": null, "venue": "", "year": 2016,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "97-114", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Vohra2016UsingMD,\n
      author = {Deepak Vohra},\n pages = {97-114},\n title = {Using MySQL Database},\n
      year = {2016}\n}\n"}, "authors": [{"authorId": "3026624", "name": "Deepak Vohra"}]},
      {"paperId": "4912f382c6d27cc2baf410e30b29f8cfd44f5063", "externalIds": {"DBLP":
      "conf/ccgrid/ZhaoU22", "ArXiv": "2203.00592", "DOI": "10.1109/CCGrid54584.2022.00026",
      "CorpusId": 247188086}, "corpusId": 247188086, "publicationVenue": {"id": "57f970eb-366a-4bfa-aa06-2ff70d834806",
      "name": "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing",
      "type": "conference", "alternate_names": ["Clust Comput Grid", "CCGRID", "IEEE/ACM
      Int Symp Clust Cloud Grid Comput", "IEEE/ACM International Symposium Cluster,
      Cloud and Grid Computing", "Cluster Computing and the Grid", "IEEE/ACM Int Symp
      Clust Cloud Internet Comput"], "url": "http://www.buyya.com/ccgrid/"}, "url":
      "https://www.semanticscholar.org/paper/4912f382c6d27cc2baf410e30b29f8cfd44f5063",
      "title": "Tiny Autoscalers for Tiny Workloads: Dynamic CPU Allocation for Serverless
      Functions", "abstract": "In serverless computing, applications are executed
      under lightweight virtualization and isolation environments, such as containers
      or micro virtual machines. Typically, their memory allocation is set by the
      user before deployment. All other resources, such as CPU, are allocated by the
      provider statically and proportionally to memory allocations. This contributes
      to either under-utilization or throttling. The former significantly impacts
      the provider, while the latter impacts the client. To solve this problem and
      accommodate both clients and providers, a solution is dynamic CPU allocation
      achieved through autoscaling. Autoscaling has been investigated for long-running
      applications using history-based techniques and prediction. However, serverless
      applications are short-running workloads, where such techniques are not well
      suited. In this paper, we investigate tiny autoscalers and how dy-namic CPU
      allocation techniques perform for short-running serverless workloads. We experiment
      with Kubernetes as the underlying platform and implement using its vertical
      pod au-toscaler several dynamic CPU rightsizing techniques. We compare these
      techniques using state-of-the-art serverless workloads. Our experiments show
      that dynamic CPU allocation for short-running serverless functions is feasible
      and can be achieved with lightweight algorithms that offer good performance.",
      "venue": "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing",
      "year": 2022, "referenceCount": 56, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2203.00592",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-03-01", "journal":
      {"name": "2022 22nd IEEE International Symposium on Cluster, Cloud and Internet
      Computing (CCGrid)", "pages": "170-179"}, "citationStyles": {"bibtex": "@Article{Zhao2022TinyAF,\n
      author = {Yuxuan Zhao and Alexandru Uta},\n booktitle = {IEEE/ACM International
      Symposium on Cluster, Cloud and Internet Computing},\n journal = {2022 22nd
      IEEE International Symposium on Cluster, Cloud and Internet Computing (CCGrid)},\n
      pages = {170-179},\n title = {Tiny Autoscalers for Tiny Workloads: Dynamic CPU
      Allocation for Serverless Functions},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2154700861", "name": "Yuxuan Zhao"}, {"authorId": "2860260", "name": "Alexandru
      Uta"}]}, {"paperId": "491bd8a4340c595a5985e36acb0adc4e61896f96", "externalIds":
      {"DOI": "10.1007/978-1-4842-9277-8", "CorpusId": 266058695}, "corpusId": 266058695,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/491bd8a4340c595a5985e36acb0adc4e61896f96",
      "title": "Deploy Container Applications Using Kubernetes: Implementations with
      microk8s and AWS EKS", "abstract": null, "venue": "", "year": 2023, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Book"], "publicationDate": null, "journal":
      {"name": "Deploy Container Applications Using Kubernetes"}, "citationStyles":
      {"bibtex": "@Book{Subramanian2023DeployCA,\n author = {Shiva Subramanian},\n
      journal = {Deploy Container Applications Using Kubernetes},\n title = {Deploy
      Container Applications Using Kubernetes: Implementations with microk8s and AWS
      EKS},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2271482323", "name":
      "Shiva Subramanian"}]}, {"paperId": "491e135e43b64e73131a132d6262e99c673637c1",
      "externalIds": {"DBLP": "conf/IEEEcloud/RattihalliHDFEBMM23", "DOI": "10.1109/CLOUD60044.2023.00014",
      "CorpusId": 262960608}, "corpusId": 262960608, "publicationVenue": {"id": "406d9f60-417a-4dc5-a6b7-1fe4689a4ff7",
      "name": "IEEE International Conference on Cloud Computing", "type": "conference",
      "alternate_names": ["Int Conf Cloud Comput [services Soc", "CLOUD", "International
      Conference on Cloud Computing [Services Society]", "IEEE Int Conf Cloud Comput"]},
      "url": "https://www.semanticscholar.org/paper/491e135e43b64e73131a132d6262e99c673637c1",
      "title": "Fine-Grained Heterogeneous Execution Framework with Energy Aware Scheduling",
      "abstract": "The growing convergence of high-performance, data analytics, and
      machine-learning applications is increasingly pushing computing systems toward
      heterogeneous processors and specialized hardware accelerators. Hardware heterogeneity,
      in turn, leads to finer-grained workflows. State-of-the-art server-less computing
      resource managers do not currently provide efficient scheduling of such fine-grained
      tasks on systems with heterogeneous CPUs and specialized hardware accelerators
      (e.g., GPUs and FPGAs). Working with fine-grained tasks presents an opportunity
      for more efficient energy use via new scheduling models. Our proposed scheduler
      enables technologies like Nvidia''s Multi-Process Service (MPS) to pack multiple
      fine-grained tasks on GPUs efficiently. Its advantages include better co-location
      of jobs and better sharing of hardware resources such as GPUs that were not
      previously possible on container orchestration systems. We propose a Kubernetes-native
      energy-aware scheduler that integrates with our heterogeneous framework. Combining
      fine-grained resource scheduling on heterogeneous hardware and energy-aware
      scheduling results in up to 17.6% improvement in makespan, up to 20.16% reduction
      in energy consumption for CPU workloads, and up to 58.15% improvement in makespan,
      and up to 28.92% reduction in energy consumption for GPU workloads.", "venue":
      "IEEE International Conference on Cloud Computing", "year": 2023, "referenceCount":
      41, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2023-07-01", "journal":
      {"name": "2023 IEEE 16th International Conference on Cloud Computing (CLOUD)",
      "pages": "35-44"}, "citationStyles": {"bibtex": "@Article{Rattihalli2023FineGrainedHE,\n
      author = {Gourav Rattihalli and Ninad Hogade and Aditya Dhakal and Eitan Frachtenberg
      and R. P. H. Enriquez and P. Bruel and Alok Mishra and D. Milojicic},\n booktitle
      = {IEEE International Conference on Cloud Computing},\n journal = {2023 IEEE
      16th International Conference on Cloud Computing (CLOUD)},\n pages = {35-44},\n
      title = {Fine-Grained Heterogeneous Execution Framework with Energy Aware Scheduling},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "8776771", "name": "Gourav Rattihalli"},
      {"authorId": "52141406", "name": "Ninad Hogade"}, {"authorId": "2247626342",
      "name": "Aditya Dhakal"}, {"authorId": "1430784159", "name": "Eitan Frachtenberg"},
      {"authorId": "2248809084", "name": "R. P. H. Enriquez"}, {"authorId": "35479075",
      "name": "P. Bruel"}, {"authorId": "2247830928", "name": "Alok Mishra"}, {"authorId":
      "1712405", "name": "D. Milojicic"}]}, {"paperId": "4923b3ff3e0312d72dbd6158eb249e04ffdd23c7",
      "externalIds": {"DBLP": "conf/iiot-nets/RosaGP023", "DOI": "10.1145/3609389.3610566",
      "CorpusId": 260971367}, "corpusId": 260971367, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4923b3ff3e0312d72dbd6158eb249e04ffdd23c7",
      "title": "Supporting vPLC Networking over TSN with Kubernetes in Industry 4.0",
      "abstract": "The shift in the industrial ecosystem from closed and specialized
      technologies to the open and general-purpose vision of Industry 4.0 faces numerous
      challenges. The absence of viable solutions to replace Programmable Logic Controllers
      (PLCs), vital components in control infrastructures, with their virtual equivalent
      (vPLCs) embodies those difficulties. In this paper, we introduce a framework
      that aims at truly materializing the integration between Operational (OT) and
      Information Technologies (IT) by defining an open, general ecosystem around
      vPLCs. Previous work either could not meet the performance and determinism requirements
      of the OT or did so by sacrificing the generality of IT. Building on these experiences,
      our framework provides both flexibility and efficiency by clearly separating
      the data path for OT and IT communications. To do that, we integrate tools from
      both domains: techniques to ensure low network performance and variability (TSN),
      to ease portability (OPC-UA), and to enhance management and deployment (Kubernetes).
      Experiments on a real testbed show that vPLCs within our framework can meet
      strict performance requirements and yet provide the same flexibility as cloud-based
      applications.", "venue": "IIoT-NETs@SIGCOMM", "year": 2023, "referenceCount":
      6, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3609389.3610566",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2023-09-10",
      "journal": {"name": "Proceedings of the 1st Workshop on Enhanced Network Techniques
      and Technologies for the Industrial IoT to Cloud Continuum"}, "citationStyles":
      {"bibtex": "@Book{Rosa2023SupportingVN,\n author = {Lorenzo Rosa and Andrea
      Garbugli and Lorenzo Patera and L. Foschini},\n booktitle = {IIoT-NETs@SIGCOMM},\n
      journal = {Proceedings of the 1st Workshop on Enhanced Network Techniques and
      Technologies for the Industrial IoT to Cloud Continuum},\n title = {Supporting
      vPLC Networking over TSN with Kubernetes in Industry 4.0},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2130976172", "name": "Lorenzo Rosa"}, {"authorId":
      "2120210224", "name": "Andrea Garbugli"}, {"authorId": "150191823", "name":
      "Lorenzo Patera"}, {"authorId": "1748978", "name": "L. Foschini"}]}, {"paperId":
      "493ec53e9d8e39b7bee202203462773a12df4a61", "externalIds": {"MAG": "2962027130",
      "DOI": "10.1007/978-1-4842-4828-7_5", "CorpusId": 199230406}, "corpusId": 199230406,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/493ec53e9d8e39b7bee202203462773a12df4a61",
      "title": "Azure Kubernetes Service", "abstract": null, "venue": "Building Microservices
      Applications on Microsoft Azure", "year": 2019, "referenceCount": 0, "citationCount":
      13, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "Building Microservices Applications on Microsoft Azure"}, "citationStyles":
      {"bibtex": "@Article{Chawla2019AzureKS,\n author = {Harsh Chawla and Hemant
      Kathuria},\n booktitle = {Building Microservices Applications on Microsoft Azure},\n
      journal = {Building Microservices Applications on Microsoft Azure},\n title
      = {Azure Kubernetes Service},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "38823842", "name": "Harsh Chawla"}, {"authorId": "151024167", "name": "Hemant
      Kathuria"}]}, {"paperId": "497f8953bf150bd956e4431be0a1e95567fdf704", "externalIds":
      {"DOI": "10.1109/ICSTSN53084.2022.9761317", "CorpusId": 248407300}, "corpusId":
      248407300, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/497f8953bf150bd956e4431be0a1e95567fdf704",
      "title": "Enhanced Load Balancing in Kubernetes Cluster By Minikube", "abstract":
      "Kubernetes is a container orchestration tool for configuring and managing containerized
      applications in different deployment environments. The orchestration means that
      defined workflow procedure that leads to running of applications in various
      isolated environments. This containerizing environment leads to an OS level
      virtualization and from that we can run multiple services on single host. This
      Kubernetes helps to scheduling and managing clusters. that act as an ecosystem
      for managing cluster of containers. This Kubernetes environment have a manual
      load balancing for providing high availability.so efforts should be taken to
      manage load balancing of cluster and monitoring of each deployment.", "venue":
      "2022 International Conference on Smart Technologies and Systems for Next Generation
      Computing (ICSTSN)", "year": 2022, "referenceCount": 0, "citationCount": 3,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2022-03-25", "journal":
      {"name": "2022 International Conference on Smart Technologies and Systems for
      Next Generation Computing (ICSTSN)", "pages": "1-5"}, "citationStyles": {"bibtex":
      "@Conference{Khalel2022EnhancedLB,\n author = {M. M. Khalel and M. Arul Pugazhendhi
      and G. Raj},\n booktitle = {2022 International Conference on Smart Technologies
      and Systems for Next Generation Computing (ICSTSN)},\n journal = {2022 International
      Conference on Smart Technologies and Systems for Next Generation Computing (ICSTSN)},\n
      pages = {1-5},\n title = {Enhanced Load Balancing in Kubernetes Cluster By Minikube},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2163627915", "name": "M. M.
      Khalel"}, {"authorId": "2163139081", "name": "M. Arul Pugazhendhi"}, {"authorId":
      "2006763874", "name": "G. Raj"}]}, {"paperId": "49a666d1ea1ad2924672998230b3820a6f75470e",
      "externalIds": {"DBLP": "conf/iccomm/BotezIID20", "MAG": "3043048799", "DOI":
      "10.1109/COMM48946.2020.9142014", "CorpusId": 220668720}, "corpusId": 220668720,
      "publicationVenue": {"id": "e129ba4e-afc8-4202-b0e1-1b8b40af0151", "name": "International
      Conference on Communications", "type": "conference", "alternate_names": ["COMM",
      "Int Conf Commun"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1800074/all-proceedings"},
      "url": "https://www.semanticscholar.org/paper/49a666d1ea1ad2924672998230b3820a6f75470e",
      "title": "Deploying a Dockerized Application With Kubernetes on Google Cloud
      Platform", "abstract": "The fast development of IoT networks and the integration
      of these scenarios in everyday life has also led to great diversity of SD-WAN
      solutions. With the advent of 5G, more and more devices will be connected, which
      requires careful monitoring especially in crucial situations such as transport
      scenarios. This paper presents the implementation of a web application based
      on microservices, each of them running in a dedicated Docker container, which
      gathers information in real-time from two vehicles. These standalone executable
      packages of software are orchestrated by Kubernetes and hosted on Google Cloud
      Platform. The data used during the execution of the project is stored into a
      Cloud SQL instance. All the necessary resources in order to build the project
      can be monitored with Stackdriver.", "venue": "International Conference on Communications",
      "year": 2020, "referenceCount": 10, "citationCount": 5, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2020-06-01",
      "journal": {"name": "2020 13th International Conference on Communications (COMM)",
      "pages": "471-476"}, "citationStyles": {"bibtex": "@Article{Botez2020DeployingAD,\n
      author = {Robert Botez and Calin-Marian Iurian and I. Ivanciu and V. Dobrota},\n
      booktitle = {International Conference on Communications},\n journal = {2020
      13th International Conference on Communications (COMM)},\n pages = {471-476},\n
      title = {Deploying a Dockerized Application With Kubernetes on Google Cloud
      Platform},\n year = {2020}\n}\n"}, "authors": [{"authorId": "1825768393", "name":
      "Robert Botez"}, {"authorId": "2874830", "name": "Calin-Marian Iurian"}, {"authorId":
      "2659896", "name": "I. Ivanciu"}, {"authorId": "1680160", "name": "V. Dobrota"}]},
      {"paperId": "49aed5307f86a9600b0526ca44bd0f5b75fbbb75", "externalIds": {"DBLP":
      "conf/smartcomp/DimolitsasSDZP23", "DOI": "10.1109/SMARTCOMP58114.2023.00074",
      "CorpusId": 260715554}, "corpusId": 260715554, "publicationVenue": {"id": "e37581a5-dfe0-4f8f-8068-b423503fce67",
      "name": "International Conference on Smart Computing", "type": "conference",
      "alternate_names": ["IEEE Int Conf Smart Comput", "SMARTCOMP", "IEEE International
      Conference on Smart Computing", "Int Conf Smart Comput"], "url": "http://www.smart-comp.org/"},
      "url": "https://www.semanticscholar.org/paper/49aed5307f86a9600b0526ca44bd0f5b75fbbb75",
      "title": "Multi-Application Hierarchical Autoscaling for Kubernetes Edge Clusters",
      "abstract": "The dynamic workload demands of smart city applications hosted
      on edge infrastructures require the development of advanced scaling mechanisms.
      Recent studies proposed single-application autoscaling solutions based on various
      technical approaches. However, for edge infrastructures with limited resource
      availability, it is essential to simultaneously manage heterogeneous application
      requirements, aiming at optimal resource allocation and minimal operational
      costs. This study introduces a multi-application hierarchical autoscaling framework
      for Kubernetes Edge Clusters. An application-based mechanism nominates the best
      applications\u2019 deployments based on workload prediction and several criteria
      that guarantee the application\u2019s performance while minimizing the infrastructure
      provider\u2019s cost. For the joint application orchestration, an aggregation
      mechanism composes the candidate scaling solutions for the cluster. Then, a
      cluster autoscaling mechanism, based on the Analytic Hierarchy Process, undertakes
      the cluster\u2019s scaling decision to optimize the resource allocation and
      energy consumption of the cluster. The evaluation illustrates the benefits of
      the proposed scaling strategy, achieving significant improvement in the average
      allocated resources and energy consumption compared to single-application approaches.",
      "venue": "International Conference on Smart Computing", "year": 2023, "referenceCount":
      17, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2023-06-01", "journal":
      {"name": "2023 IEEE International Conference on Smart Computing (SMARTCOMP)",
      "pages": "291-296"}, "citationStyles": {"bibtex": "@Article{Dimolitsas2023MultiApplicationHA,\n
      author = {Ioannis Dimolitsas and Dimitrios Spatharakis and Dimitrios Dechouniotis
      and Anastasios Zafeiropoulos and S. Papavassiliou},\n booktitle = {International
      Conference on Smart Computing},\n journal = {2023 IEEE International Conference
      on Smart Computing (SMARTCOMP)},\n pages = {291-296},\n title = {Multi-Application
      Hierarchical Autoscaling for Kubernetes Edge Clusters},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "1411234556", "name": "Ioannis Dimolitsas"}, {"authorId":
      "73769210", "name": "Dimitrios Spatharakis"}, {"authorId": "1890827", "name":
      "Dimitrios Dechouniotis"}, {"authorId": "2079782191", "name": "Anastasios Zafeiropoulos"},
      {"authorId": "1699526", "name": "S. Papavassiliou"}]}, {"paperId": "49f7aca65d170525b403a92ad8dfc7a8d875c6ed",
      "externalIds": {"ArXiv": "2312.12809", "DBLP": "journals/corr/abs-2312-12809",
      "DOI": "10.48550/arXiv.2312.12809", "CorpusId": 266374519}, "corpusId": 266374519,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/49f7aca65d170525b403a92ad8dfc7a8d875c6ed",
      "title": "Gecko: Automated Feature Degradation for Cloud Resilience", "abstract":
      "Cloud resilience is crucial for cloud operators and the myriad of applications
      that rely on the cloud. Today, we lack a mechanism that allows cloud operators
      to gracefully degrade application performance in public clouds. In this paper,
      we put forward a vision for automated feature degradation with a three-pronged
      approach. First, we introduce the idea of diagonal scaling -- pruning an application''s
      dependency graphs during capacity crunch scenarios -- to maximize the availability
      of critical services. Second, we propose the use of simple and expressive Criticality
      Tags on microservices to convey an application developer''s resilience intent
      to the cloud provider without any application modifications. Third, we design
      Gecko, an automated cloud resilience management system that maximizes critical
      service availability of applications while also taking into account operator
      objectives, thereby improving the overall resilience of the infrastructure during
      failures. Using extensive experiments, we show that the Gecko controller running
      atop Kubernetes can maximize the overall resilience of applications and infrastructure
      under a broad range of failure scenarios. We also demonstrate that diagonal
      scaling with Gecko aligns well with microservice architecture using experiments
      with a real-world application.", "venue": "arXiv.org", "year": 2023, "referenceCount":
      64, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-12-20", "journal":
      {"name": "ArXiv", "volume": "abs/2312.12809"}, "citationStyles": {"bibtex":
      "@Article{Agrawal2023GeckoAF,\n author = {Kapil Agrawal and S. Jyothi},\n booktitle
      = {arXiv.org},\n journal = {ArXiv},\n title = {Gecko: Automated Feature Degradation
      for Cloud Resilience},\n volume = {abs/2312.12809},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "6903521", "name": "Kapil Agrawal"}, {"authorId": "37541666",
      "name": "S. Jyothi"}]}, {"paperId": "4a5127405d01397c66b647c88a07684a65b825d8",
      "externalIds": {"DBLP": "journals/iotj/WanZYY22", "DOI": "10.1109/JIOT.2022.3168085",
      "CorpusId": 248248960}, "corpusId": 248248960, "publicationVenue": {"id": "228761ec-c40a-479b-8309-9dcbe9851bcd",
      "name": "IEEE Internet of Things Journal", "type": "journal", "alternate_names":
      ["IEEE Internet Thing J"], "issn": "2327-4662", "url": "https://www.ieee.org/membership-catalog/productdetail/showProductDetailPage.html?product=PER288-ELE",
      "alternate_urls": ["https://ieeexplore.ieee.org/servlet/opac?punumber=6488907",
      "https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=6488907", "http://ieee-iotj.org/#"]},
      "url": "https://www.semanticscholar.org/paper/4a5127405d01397c66b647c88a07684a65b825d8",
      "title": "KFIML: Kubernetes-Based Fog Computing IoT Platform for Online Machine
      Learning", "abstract": "The massive onsite data produced by the Internet of
      Things (IoT) can bring valuable information and immense potentials, thus empowering
      a new wave of emerging applications. However, with the rapid increase of onsite
      IoT data streams, it has become extremely challenging to develop a scalable
      computing platform and provide a comprehensive workflow for processing IoT data
      streams with lower latency and more intelligence. To this end, we present a
      Kubernetes-based scalable fog computing platform (KFIML), integrating big data
      streaming processing with machine learning (ML)-based applications. We also
      provide a comprehensive IoT data processing workflow, including data access
      and transfer, big data processing, online ML, long-term storage, and monitoring.
      The platform is feasibly validated on a clustered testbed, which comprises a
      master node, IoT broker servers, worker nodes, and a local database server.
      By leveraging the lightweight orchestration system, namely Kubernetes, we can
      readily scale and manage containerized software frameworks on our testbed. The
      big data processing layer utilizes the advanced data flow frameworks such as
      Apache Flink, to support both streaming processing and statistical analysis
      with low latency. In addition, the specified long short-term memory (LSTM)-based
      ML pipelines are employed on the online ML layer, to enable the real-time predictive
      analysis of IoT data streams. The experiments on a real-world smart grid use
      case demonstrate that the container-based KFIML platform can be well-scaled
      with Kubernetes to efficiently perform big data processing increased onsite
      IoT data streams with lower latency and conduct ML-based applications.", "venue":
      "IEEE Internet of Things Journal", "year": 2022, "referenceCount": 38, "citationCount":
      11, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Environmental Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2022-10-01", "journal": {"name": "IEEE Internet of Things
      Journal", "pages": "19463-19476", "volume": "9"}, "citationStyles": {"bibtex":
      "@Article{Wan2022KFIMLKF,\n author = {Ziyu Wan and Zheng Zhang and Rui Yin and
      Guanding Yu},\n booktitle = {IEEE Internet of Things Journal},\n journal = {IEEE
      Internet of Things Journal},\n pages = {19463-19476},\n title = {KFIML: Kubernetes-Based
      Fog Computing IoT Platform for Online Machine Learning},\n volume = {9},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "66892346", "name": "Ziyu Wan"}, {"authorId":
      "2148905956", "name": "Zheng Zhang"}, {"authorId": "145350728", "name": "Rui
      Yin"}, {"authorId": "1703118", "name": "Guanding Yu"}]}, {"paperId": "4a59e01a614645c53603e1c57aa86bff1301bbe3",
      "externalIds": {"DBLP": "journals/csur/RejibaC23", "DOI": "10.1145/3544788",
      "CorpusId": 249993349}, "corpusId": 249993349, "publicationVenue": {"id": "7b2adce0-d53f-49d6-8784-b0645604fe62",
      "name": "ACM Computing Surveys", "type": "journal", "alternate_names": ["ACM
      Comput Surv"], "issn": "0360-0300", "url": "http://www.acm.org/pubs/surveys/",
      "alternate_urls": ["http://portal.acm.org/csur", "https://csur.acm.org/", "http://csur.acm.org/"]},
      "url": "https://www.semanticscholar.org/paper/4a59e01a614645c53603e1c57aa86bff1301bbe3",
      "title": "Custom Scheduling in Kubernetes: A Survey on Common Problems and Solution
      Approaches", "abstract": "Since its release in 2014, Kubernetes has become a
      popular choice for orchestrating containerized workloads at scale. To determine
      the most appropriate node to host a given workload, Kubernetes makes use of
      a scheduler that takes into account a set of hard and soft constraints defined
      by workload owners and cluster administrators. Despite being highly configurable,
      the default Kubernetes scheduler cannot fully meet the requirements of emerging
      applications, such as machine/deep learning workloads and edge computing applications.
      This has led to different proposals of custom Kubernetes schedulers that focus
      on addressing the requirements of the aforementioned applications. Since the
      related literature is growing in this area, we aimed, in this survey, to provide
      a classification of the related literature based on multiple criteria, including
      scheduling objectives as well as the types of considered workloads and environments.
      Additionally, we provide an overview of the main approaches that have been adopted
      to achieve each objective. Finally, we highlight a set of gaps that could be
      leveraged by academia or the industry to drive further research and development
      activities in the area of custom scheduling in Kubernetes.", "venue": "ACM Computing
      Surveys", "year": 2022, "referenceCount": 110, "citationCount": 15, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Review"], "publicationDate": "2022-06-24", "journal": {"name":
      "ACM Computing Surveys", "pages": "1 - 37", "volume": "55"}, "citationStyles":
      {"bibtex": "@Article{Rejiba2022CustomSI,\n author = {Zeineb Rejiba and Javad
      Chamanara},\n booktitle = {ACM Computing Surveys},\n journal = {ACM Computing
      Surveys},\n pages = {1 - 37},\n title = {Custom Scheduling in Kubernetes: A
      Survey on Common Problems and Solution Approaches},\n volume = {55},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "3363541", "name": "Zeineb Rejiba"},
      {"authorId": "2840853", "name": "Javad Chamanara"}]}, {"paperId": "4aba63ac2558820dadd1f9b6ae5aed0c199c86d8",
      "externalIds": {"MAG": "2998421508", "CorpusId": 214315432}, "corpusId": 214315432,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4aba63ac2558820dadd1f9b6ae5aed0c199c86d8",
      "title": "The DevOps 2.5 Toolkit", "abstract": "An advanced exploration of the
      skills and knowledge required for operating Kubernetes clusters, with a focus
      on metrics gathering and alerting, with the goal of making clusters and applications
      inside them autonomous through self-healing and self-adaptation.\nKey Features\nThe
      sixth book of DevOps expert Viktor Farcic''s bestselling DevOps Toolkit series,
      with an overview of advanced core Kubernetes techniques,-oriented towards monitoring
      and alerting.\n\nTakes a deep dive into monitoring, alerting, logging, auto-scaling,
      and other subjects aimed at making clusters resilient, self-sufficient, and
      self-adaptive\n\nDiscusses how to customise and create dashboards and alerts\nBook
      Description\nBuilding on The DevOps 2.3 Toolkit: Kubernetes, and The DevOps
      2.4 Toolkit: Continuous Deployment to Kubernetes, Viktor Farcic brings his latest
      exploration of the Docker technology as he records his journey to monitoring,
      logging, and autoscaling Kubernetes.\n\n\nThe DevOps 2.5 Toolkit: Monitoring,
      Logging, and Auto-Scaling Kubernetes: Making Resilient, Self-Adaptive, And Autonomous
      Kubernetes Clusters is the latest book in Viktor Farcic''s series that helps
      you build a full DevOps Toolkit. This book helps readers develop the necessary
      skillsets needed to be able to operate Kubernetes clusters, with a focus on
      metrics gathering and alerting with the goal of making clusters and applications
      inside them autonomous through self-healing and self-adaptation.\n\n\nWork with
      Viktor and dive into the creation of self-adaptive and self-healing systems
      within Kubernetes.\nWhat you will learn\nAutoscaling Deployments and Statefulsets
      based on resource usage\n\nAutoscaling nodes of a Kubernetes cluster\n\nDebugging
      issues discovered through metrics and alerts\n\nExtending HorizontalPodAutoscaler
      with custom metrics\n\nVisualizing metrics and alerts\n\nCollecting and querying
      logs\nWho this book is for\nReaders with an advanced-level understanding of
      Kubernetes and hands-on experience.", "venue": "", "year": 2019, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Review"], "publicationDate": "2019-11-29", "journal":
      {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Farcic2019TheD2,\n
      author = {Viktor Farcic},\n title = {The DevOps 2.5 Toolkit},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "70451877", "name": "Viktor Farcic"}]}, {"paperId":
      "4ad7513358457adc4d0f38ee7fc6fcd15a1c3088", "externalIds": {"ArXiv": "2308.00446",
      "DBLP": "journals/corr/abs-2308-00446", "DOI": "10.5121/csit.2023.131325", "CorpusId":
      260237748}, "corpusId": 260237748, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4ad7513358457adc4d0f38ee7fc6fcd15a1c3088",
      "title": "Complexity evaluation of network configurations and abstractions",
      "abstract": "Computer networks have been traditionally configured by humans
      using command-line interfaces. Some network abstractions have emerged in the
      last 10 years, but there is no easy way of comparing them to each other objectively.
      Therefore, there is no consensus in the industry of what direction should modern
      network abstractions take, and the adoption of these abstractions lags. In this
      paper I propose a comparison framework using metrics derived from graph structures
      to evaluate the simplicity, efficiency, and effectiveness of different network
      abstraction models. The result of this comparison is that while some of the
      existing network abstractions are quite efficient to store network policy (such
      as the Kubernetes or the Cisco Application Centric Infrastructure models), others
      (notably public cloud) are still very infrastructure-centric and suffer from
      excessive complexity.", "venue": "Advanced Computer Science and Information
      Technology Trends", "year": 2023, "referenceCount": 30, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://doi.org/10.5121/csit.2023.131325", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-07-29", "journal": {"name": "ArXiv",
      "volume": "abs/2308.00446"}, "citationStyles": {"bibtex": "@Article{Moreno2023ComplexityEO,\n
      author = {J. Moreno},\n booktitle = {Advanced Computer Science and Information
      Technology Trends},\n journal = {ArXiv},\n title = {Complexity evaluation of
      network configurations and abstractions},\n volume = {abs/2308.00446},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "152353421", "name": "J. Moreno"}]},
      {"paperId": "4b0b168c779956cac1aa5fcc203f2ca033dde947", "externalIds": {"DBLP":
      "conf/icws/DingH21", "DOI": "10.1109/ICWS53863.2021.00061", "CorpusId": 244043260},
      "corpusId": 244043260, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4b0b168c779956cac1aa5fcc203f2ca033dde947",
      "title": "COPA: A Combined Autoscaling Method for Kubernetes", "abstract": "Autoscaling
      is one of the major features of Cloud Computing aiming to improve the Quality-of-Service(QoS)
      in response to fluctuating workloads. Existing state-of-the-art autoscaling
      methods for Kubernetes focus on single scaling mode, that is, only horizontal
      scaling and only vertical scaling. For horizontal scaling, a high resource usage
      rate cannot be guaranteed sometimes; and for vertical scaling, microservice
      instances appear a performance ceiling that does not grow indefinitely as the
      supply of resources increases. In this paper, we propose a novel combined scaling
      method called COPA. Based on the collected microservice performance data, real-time
      workload, expected response time, and microservice instances scheme at runtime,
      COPA uses the queuing network model to calculate a combined scaling scheme that
      aims to minimize the default cost and resource cost. We evaluated our approach
      in a Kubernetes cluster, and compare it with existing state-of-the-art autoscaling
      methods under four different workload types. Such experiments show a reduction
      of \u00d71.22 for resource cost while ensuring the QoS as compared to the baseline
      method.", "venue": "2021 IEEE International Conference on Web Services (ICWS)",
      "year": 2021, "referenceCount": 0, "citationCount": 10, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2021-09-01", "journal":
      {"name": "2021 IEEE International Conference on Web Services (ICWS)", "pages":
      "416-425"}, "citationStyles": {"bibtex": "@Article{Ding2021COPAAC,\n author
      = {Zhijun Ding and Qichen Huang},\n booktitle = {2021 IEEE International Conference
      on Web Services (ICWS)},\n journal = {2021 IEEE International Conference on
      Web Services (ICWS)},\n pages = {416-425},\n title = {COPA: A Combined Autoscaling
      Method for Kubernetes},\n year = {2021}\n}\n"}, "authors": [{"authorId": "34368858",
      "name": "Zhijun Ding"}, {"authorId": "2148260307", "name": "Qichen Huang"}]},
      {"paperId": "4b0d52da48d315e52fa5b0b48120d57d21e368da", "externalIds": {"DBLP":
      "conf/syscon/ShimDDUPP23", "DOI": "10.1109/SysCon53073.2023.10131106", "CorpusId":
      258912311}, "corpusId": 258912311, "publicationVenue": {"id": "92e50051-bc20-49bb-9a4a-24dd922b146f",
      "name": "IEEE Systems Conference", "type": "conference", "alternate_names":
      ["SysCon", "IEEE Syst Conf"]}, "url": "https://www.semanticscholar.org/paper/4b0d52da48d315e52fa5b0b48120d57d21e368da",
      "title": "Predictive Auto-scaler for Kubernetes Cloud", "abstract": "One of
      the basic requirements with adapting to cloud technology is to find an optimal
      resource allocation based on the dynamic workload. The default functioning of
      Kubernetes Horizontal Pod Auto-scaling in cloud is scaling of its pods only
      when the threshold of the cluster/application is crossed in order to adapt to
      increasing workload. Rather we want to deploy a proactive provisioning framework
      based on machine learning based predictions. We have demonstrated a novel deep
      learning framework based on a transformer in the area of dynamic workload predictions
      and showed how to apply the results to a custom auto-scaler in cloud. Our Framework
      builds time-series predictive models in machine learning such as ARIMA, LSTM,
      Bi-LSTM and transformer models. The dynamic scaling framework applies machine
      learning algorithms and presents recommendations to make proactive and smart
      decisions. Though the transformer model has been used in NLP and Vision applications
      mostly, we showed that the transformer based model can produce the most effective
      results in cloud workload predictions.", "venue": "IEEE Systems Conference",
      "year": 2023, "referenceCount": 14, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2023-04-17", "journal": {"name": "2023 IEEE International
      Systems Conference (SysCon)", "pages": "1-8"}, "citationStyles": {"bibtex":
      "@Article{Shim2023PredictiveAF,\n author = {Simon Shim and Ankit Dhokariya and
      Devangi Doshi and Sarvesh Upadhye and Varun Patwari and Ji-Yong Park},\n booktitle
      = {IEEE Systems Conference},\n journal = {2023 IEEE International Systems Conference
      (SysCon)},\n pages = {1-8},\n title = {Predictive Auto-scaler for Kubernetes
      Cloud},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2149932279", "name":
      "Simon Shim"}, {"authorId": "2218326668", "name": "Ankit Dhokariya"}, {"authorId":
      "2218338200", "name": "Devangi Doshi"}, {"authorId": "2067138016", "name": "Sarvesh
      Upadhye"}, {"authorId": "2218299703", "name": "Varun Patwari"}, {"authorId":
      "2218369675", "name": "Ji-Yong Park"}]}, {"paperId": "4b2c093ea0fbae7bb7a17a9c03b89810289500a0",
      "externalIds": {"MAG": "2602866381", "CorpusId": 67253668}, "corpusId": 67253668,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4b2c093ea0fbae7bb7a17a9c03b89810289500a0",
      "title": "A curated Domain centric shared Docker registry linked to the Galaxy
      toolshed", "abstract": "Nowadays, Docker containers are used to ease application
      deployment, from command lines tools to cluster management1. This technology
      has a strong impact in bioinformatics where specialized software can often require
      multiple dependencies. It is a long term preservation solution for legacy and
      unmaintained tools and it enables a better process isolation in a multi-user
      environment. Docker as a way to quickly integrate new tools is already used
      with Galaxy. We have setup a functional prototype of a web registry of Docker
      images, BioShaDock,2 dedicated to bioinformatics tools and utilities. We created
      a set of tools descriptors based on Docker images available in our toolshed3.
      Even if a general purpose registry can be used to hold shared Docker containers,
      we think that a domain centric registry, e.g. for the French life science community
      through a registry linked to the cloud of the French Institute of Bioinformatics
      (IFB8), would have a significant impact on bioinformatician productivity and
      help to spread best practices. With a clear open source and domain orientation,
      it could federate container providers4,5 more easily. It would also be able
      to include validation and curation to eliminate redundant tools, organize versioning
      and standardize documentation. Future works will concern advanced searching
      capabilities, possible referencing within the ELIXIR Tools and Data Services
      Registry6 and in the IFB one (as the ELIXIR French node). We want also to contribute
      to standardize containers7 and evaluate if benchmarks5 could be produced from
      a meta-data enriched, Docker registry. \n \nReferences: \n1 Google Kubernetes,
      Docker container cluster management : kubernetes.io \n2 BioShaDock, a Bioinformatics
      Shared Docker registry : http://docker-ui.genouest.org \n3 GUGGO Galaxy Tooshed
      : http://toolshed.genouest.org \n4 Hexabio Docker repository : http://biodocker.github.io
      \n5 Nucleotid.es, continuous, objective and reproducible evaluation of genome
      assemblers using docker containers : http://nucleotid.es \n6 ELIXIR Tools and
      Data Services Registry : https://elixir-registry.cbs.dtu.dk \n7 Bioboxes, a
      standard for creating interchangable bioinformatics software containers : http://bioboxes.org
      \n8 IFB academic Cloud : http://www.france-bioinformatique.fr/?q=en/core/e-infrastructure-team/ifb-cloud",
      "venue": "", "year": 2015, "referenceCount": 0, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Biology",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2015-07-06",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Moreews2015ACD,\n
      author = {Fran\u00e7ois Moreews and Olivier Sallou and Y. L. Bras and Grosjean
      Marie and Cyril Monjeaud and T. Darde and O. Collin and Christophe Blanchet},\n
      title = {A curated Domain centric shared Docker registry linked to the Galaxy
      toolshed},\n year = {2015}\n}\n"}, "authors": [{"authorId": "2100106", "name":
      "Fran\u00e7ois Moreews"}, {"authorId": "3189822", "name": "Olivier Sallou"},
      {"authorId": "8674482", "name": "Y. L. Bras"}, {"authorId": "73714516", "name":
      "Grosjean Marie"}, {"authorId": "2141762", "name": "Cyril Monjeaud"}, {"authorId":
      "3409943", "name": "T. Darde"}, {"authorId": "2193723", "name": "O. Collin"},
      {"authorId": "40297339", "name": "Christophe Blanchet"}]}, {"paperId": "4b3569477b4bdc854d770b071976e721f4d9efc1",
      "externalIds": {"ArXiv": "2305.18778", "DBLP": "journals/corr/abs-2305-18778",
      "DOI": "10.48550/arXiv.2305.18778", "CorpusId": 258967239}, "corpusId": 258967239,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/4b3569477b4bdc854d770b071976e721f4d9efc1",
      "title": "CN2F: A Cloud-Native Cellular Network Framework", "abstract": "Upcoming
      5G and Beyond 5G (B5G) cellular networks aim to improve the efficiency and flexibility
      of mobile networks by incorporating various technologies, such as Software Defined
      Networking (SDN), Network Function Virtualization (NFV), and Network Slicing
      (NS). In this paper, we share our findings, accompanied by a comprehensive online
      codebase, about the best practice of using different open-source projects in
      order to realize a flexible testbed for academia and industrial Research and
      Development (R&D) activities on the future generation of cellular networks.
      In particular, a Cloud-Native Cellular Network Framework (CN2F) is presented
      which uses OpenAirInterface''s codebase to generate cellular Virtual Network
      Functions (VNFs) and deploys Kubernetes to disperse and manage them among some
      worker nodes. Moreover, CN2F leverages ONOS and Mininet to emulate the effect
      of the IP transport networks in the fronthaul and backhaul of real cellular
      networks. In this paper, we also showcase two use cases of CN2F to demonstrate
      the importance of Edge Computing (EC) and the capability of Radio Access Network
      (RAN) slicing.", "venue": "arXiv.org", "year": 2023, "referenceCount": 31, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "http://arxiv.org/pdf/2305.18778", "status": "CLOSED"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-05-30", "journal": {"name": "ArXiv", "volume": "abs/2305.18778"}, "citationStyles":
      {"bibtex": "@Article{Ganji2023CN2FAC,\n author = {Sepehr Ganji and Shirin Behnaminia
      and Ali Ahangarpour and E. Mazaheri and Sara Baradaran and Zeinab Zali and M.
      R. Heidarpour and Ali Rakhshan and Mahsa Faraji Shoyari},\n booktitle = {arXiv.org},\n
      journal = {ArXiv},\n title = {CN2F: A Cloud-Native Cellular Network Framework},\n
      volume = {abs/2305.18778},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2219234630", "name": "Sepehr Ganji"}, {"authorId": "2219303808", "name": "Shirin
      Behnaminia"}, {"authorId": "2219304182", "name": "Ali Ahangarpour"}, {"authorId":
      "2203889653", "name": "E. Mazaheri"}, {"authorId": "2173822593", "name": "Sara
      Baradaran"}, {"authorId": "2092005", "name": "Zeinab Zali"}, {"authorId": "2510828",
      "name": "M. R. Heidarpour"}, {"authorId": "3142623", "name": "Ali Rakhshan"},
      {"authorId": "2091486339", "name": "Mahsa Faraji Shoyari"}]}, {"paperId": "4b368cd60ed71e637acd4fc3da102243eb6fc6d3",
      "externalIds": {"PubMedCentral": "8434349", "DBLP": "journals/sensors/MutichiroT021",
      "DOI": "10.3390/s21175797", "CorpusId": 237445510, "PubMed": "34502688"}, "corpusId":
      237445510, "publicationVenue": {"id": "3dbf084c-ef47-4b74-9919-047b40704538",
      "name": "Italian National Conference on Sensors", "type": "conference", "alternate_names":
      ["SENSORS", "IEEE Sens", "Ital National Conf Sens", "IEEE Sensors", "Sensors"],
      "issn": "1424-8220", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/4b368cd60ed71e637acd4fc3da102243eb6fc6d3",
      "title": "QoS-Based Service-Time Scheduling in the IoT-Edge Cloud", "abstract":
      "In edge computing, scheduling heterogeneous workloads with diverse resource
      requirements is challenging. Besides limited resources, the servers may be overwhelmed
      with computational tasks, resulting in lengthy task queues and congestion occasioned
      by unusual network traffic patterns. Additionally, Internet of Things (IoT)/Edge
      applications have different characteristics coupled with performance requirements,
      which become determinants if most edge applications can both satisfy deadlines
      and each user\u2019s QoS requirements. This study aims to address these restrictions
      by proposing a mechanism that improves the cluster resource utilization and
      Quality of Service (QoS) in an edge cloud cluster in terms of service time.
      Containerization can provide a way to improve the performance of the IoT-Edge
      cloud by factoring in task dependencies and heterogeneous application resource
      demands. In this paper, we propose STaSA, a service time aware scheduler for
      the edge environment. The algorithm automatically assigns requests onto different
      processing nodes and then schedules their execution under real-time constraints,
      thus minimizing the number of QoS violations. The effectiveness of our scheduling
      model is demonstrated through implementation on KubeEdge, a container orchestration
      platform based on Kubernetes. Experimental results show significantly fewer
      violations in QoS during scheduling and improved performance compared to the
      state of the art.", "venue": "Italian National Conference on Sensors", "year":
      2021, "referenceCount": 33, "citationCount": 6, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/1424-8220/21/17/5797/pdf?version=1630383664",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science", "Medicine"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Medicine",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2021-08-28", "journal": {"name": "Sensors (Basel, Switzerland)",
      "volume": "21"}, "citationStyles": {"bibtex": "@Article{Mutichiro2021QoSBasedSS,\n
      author = {Briytone Mutichiro and Minh-Ngoc Tran and Young-Han Kim},\n booktitle
      = {Italian National Conference on Sensors},\n journal = {Sensors (Basel, Switzerland)},\n
      title = {QoS-Based Service-Time Scheduling in the IoT-Edge Cloud},\n volume
      = {21},\n year = {2021}\n}\n"}, "authors": [{"authorId": "40997923", "name":
      "Briytone Mutichiro"}, {"authorId": "1557385933", "name": "Minh-Ngoc Tran"},
      {"authorId": "2145732799", "name": "Young-Han Kim"}]}, {"paperId": "4b47271a1ad5b0b609227017fb81921beb5c79bb",
      "externalIds": {"DBLP": "conf/cloud/ZhangJHYDG22", "DOI": "10.1145/3542929.3563462",
      "CorpusId": 253385776}, "corpusId": 253385776, "publicationVenue": {"id": "d13e941e-4cac-4f1d-bdca-77d927e31f1b",
      "name": "ACM Symposium on Cloud Computing", "type": "conference", "alternate_names":
      ["System-on-Chip Conference", "ACM Symp Cloud Comput", "Syst Conf", "Symp Cloud
      Comput", "Annual IEEE International System-on-Chip Conference", "Symposium on
      Cloud Computing", "Annu IEEE Int Syst Conf", "SoCC"], "url": "http://www.ieee-socc.org/"},
      "url": "https://www.semanticscholar.org/paper/4b47271a1ad5b0b609227017fb81921beb5c79bb",
      "title": "KOLE: breaking the scalability barrier for managing far edge nodes
      in cloud", "abstract": "In edge computing, the trend is moving towards leveraging
      cloud native technologies and platforms such as con-tainerization and Kubernetes
      to manage edge applications to improve operation efficiency. Unfortunately,
      the supported number of nodes per cluster is only several thousand in Kubernetes
      which is much less than what typical far edge use cases require. In this paper,
      we propose KOLE, a framework that extends the upstream Kubernetes for supporting
      a large number of far edge nodes. It replaces the existing apiserver-to-node
      communication mechanism in Kubernetes with a MQTT messaging system. The MQTT
      broker completely offloads the overhead of keeping numerous HTTP connections
      for nodes in the apiserver. In KOLE, we avoid creating numerous individual objects
      in the apiserver by maintaining them in a cloud state cache. The cache is snapshotted
      periodically for disaster recovery. Overall, KOLE achieves outstanding scalability
      by sacrificing the manageability of having individual objects, which we believe
      is a reasonable trade-off for far edge use cases. The experiment results show
      that KOLE is scalable and can support up to one million nodes.", "venue": "ACM
      Symposium on Cloud Computing", "year": 2022, "referenceCount": 41, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2022-11-07", "journal": {"name":
      "Proceedings of the 13th Symposium on Cloud Computing"}, "citationStyles": {"bibtex":
      "@Article{Zhang2022KOLEBT,\n author = {Jie Zhang and Chen Jin and Yuqi Huang
      and Li Yi and Yu Ding and Fei Guo},\n booktitle = {ACM Symposium on Cloud Computing},\n
      journal = {Proceedings of the 13th Symposium on Cloud Computing},\n title =
      {KOLE: breaking the scalability barrier for managing far edge nodes in cloud},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "40964476", "name": "Jie Zhang"},
      {"authorId": "50077775", "name": "Chen Jin"}, {"authorId": "2190151001", "name":
      "Yuqi Huang"}, {"authorId": "2190114096", "name": "Li Yi"}, {"authorId": "2180229366",
      "name": "Yu Ding"}, {"authorId": "2065452417", "name": "Fei Guo"}]}, {"paperId":
      "4b6762139b6a27844a2cccd0037a8e9e9263c40b", "externalIds": {"CorpusId": 237397334},
      "corpusId": 237397334, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4b6762139b6a27844a2cccd0037a8e9e9263c40b",
      "title": "Survey on Container Systems and Their Efficient Orchestration Algorithms",
      "abstract": "Containerization is the way toward bundling a software with all
      of its essentially required runtime-libraries, frameworks and system-configuration
      files so that it can be executed proficiently in a variety of computing environments
      [1]. Containers do not put a strain on the system, requiring only the bare minimum
      of resources to operate the solution without the need to replicate an entire
      operating system. Since the program requires less resources to run, it can run
      a greater number of applications on the same hardware, lowering costs as compared
      to virtual machines which require separate guest OS for isolating the environment
      for the program libraries. Docker is one of the platforms for containerization
      and has many orchestration programs for the efficiency. This paper focus on
      the different algorithms proposed for allocation of resources and talks about
      their results obtained. Index Terms cloud-based computing, Kubernetes Docker-containers,
      Docker, container-orchestration, virtual machine, microservices", "venue": "",
      "year": 2021, "referenceCount": 20, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Review"], "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Inproceedings{Jangra2021SurveyOC,\n author = {Pratham Jangra and A. Anand
      and A. Tyagi},\n title = {Survey on Container Systems and Their Efficient Orchestration
      Algorithms},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2125435135",
      "name": "Pratham Jangra"}, {"authorId": "2125485771", "name": "A. Anand"}, {"authorId":
      "49192132", "name": "A. Tyagi"}]}, {"paperId": "4b74de5ba7f6832aab8e3778d66c02d5f813806f",
      "externalIds": {"MAG": "2947952334", "DOI": "10.1109/ICCCBDA.2019.8725658",
      "CorpusId": 171096021}, "corpusId": 171096021, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4b74de5ba7f6832aab8e3778d66c02d5f813806f",
      "title": "Performance and Scalability Testing Strategy Based on Kubemark", "abstract":
      "The technology of container orchestration dramatically speeds up the extension
      of applications architected on microservices. As the complexity of those applications
      continues to increase, the orchestration system needs to resolve performance
      challenge to deploy thousands of coexisting applications to work cooperatively,
      and to reach the requirements of efficiency and scalability of microservices
      architectures. The Kubernetes is an open source project to implement container
      orchestration, and more popular than the others. For performance testing, the
      Kubernetes provides Kubemark as a deployment tool, which can simulate a large-
      scale Kubenetes clusters. Kubemark supports the performance evaluation of cluster
      scale much larger than the real cluster scale. This paper addresses performance
      issues of microservices structure, describes the architecture of Kubernetes
      to implement schedule of resource, and finally proposes a method of performance
      testing with Kubemark.", "venue": "2019 IEEE 4th International Conference on
      Cloud Computing and Big Data Analysis (ICCCBDA)", "year": 2019, "referenceCount":
      3, "citationCount": 9, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2019-04-01", "journal":
      {"name": "2019 IEEE 4th International Conference on Cloud Computing and Big
      Data Analysis (ICCCBDA)", "pages": "511-516"}, "citationStyles": {"bibtex":
      "@Conference{Lei2019PerformanceAS,\n author = {Qing Lei and W. Liao and Yingtao
      Jiang and Mei Yang and Haifeng Li},\n booktitle = {2019 IEEE 4th International
      Conference on Cloud Computing and Big Data Analysis (ICCCBDA)},\n journal =
      {2019 IEEE 4th International Conference on Cloud Computing and Big Data Analysis
      (ICCCBDA)},\n pages = {511-516},\n title = {Performance and Scalability Testing
      Strategy Based on Kubemark},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2066204822", "name": "Qing Lei"}, {"authorId": "2889183", "name": "W. Liao"},
      {"authorId": "36260294", "name": "Yingtao Jiang"}, {"authorId": "47345536",
      "name": "Mei Yang"}, {"authorId": "2108565219", "name": "Haifeng Li"}]}, {"paperId":
      "4b769ea4bba488df4553618d226dd6d400744304", "externalIds": {"DBLP": "journals/jnsm/KjorveziroskiF23",
      "DOI": "10.1007/s10922-023-09753-0", "CorpusId": 259377392}, "corpusId": 259377392,
      "publicationVenue": {"id": "f7486b96-a794-4d6f-9c59-ceb96c3200a8", "name": "Journal
      of Network and Systems Management", "type": "journal", "alternate_names": ["J
      Netw Syst Manag"], "issn": "1064-7570", "url": "https://link.springer.com/journal/10922"},
      "url": "https://www.semanticscholar.org/paper/4b769ea4bba488df4553618d226dd6d400744304",
      "title": "WebAssembly Orchestration in the Context of Serverless Computing",
      "abstract": null, "venue": "Journal of Network and Systems Management", "year":
      2023, "referenceCount": 61, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-07-01", "journal": {"name": "Journal of Network and Systems Management",
      "pages": "1-24", "volume": "31"}, "citationStyles": {"bibtex": "@Article{Kjorveziroski2023WebAssemblyOI,\n
      author = {Vojdan Kjorveziroski and S. Filiposka},\n booktitle = {Journal of
      Network and Systems Management},\n journal = {Journal of Network and Systems
      Management},\n pages = {1-24},\n title = {WebAssembly Orchestration in the Context
      of Serverless Computing},\n volume = {31},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "66295721", "name": "Vojdan Kjorveziroski"}, {"authorId": "2405761",
      "name": "S. Filiposka"}]}, {"paperId": "4b9ecb71f70f847d700c12c7e193466586889121",
      "externalIds": {"CorpusId": 198971582}, "corpusId": 198971582, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/4b9ecb71f70f847d700c12c7e193466586889121",
      "title": "Job-queuing and Auto-scaling in Container-based Cloud Environments",
      "abstract": "Many applications process large quantities of data that takes significant
      time and requires big amount of computational resources. Optimising the execution
      of such applications in a cloud computing environment by keeping costs at minimum
      but still completing the task by a set deadline has paramount importance. As
      container-based technologies are becoming more widespread, support for job-queuing
      and auto-scaling in such environments is becoming important. Current container
      technologies, such as Docker or Kubernetes provide limited support in this area.
      This paper presents JQueuer and CAutoScaler, a couple of cloud-independent solutions
      that offer job-queuing and automated scalability at the level of containers.
      Applying these solutions leads to more cloud-aware applications providing transparent
      auto-scaling for end-users and optimising execution time and costs. Business
      and science gateways will benefit from using an orchestrator combined with JQueuer
      and CAutoScaler since it will provide the layers needed to auto-scale the containers
      and to batch/sweep the jobs from a queue depending on a userdefined policy.
      Keywords\u2014cloud computing, container technologies, Docker Swarm, JQueuer,
      autoscaler, MiCADO", "venue": "", "year": null, "referenceCount": 4, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Misc{None,\n author = {Abu Oun},\n title = {Job-queuing and Auto-scaling
      in Container-based Cloud Environments}\n}\n"}, "authors": [{"authorId": "2079271794",
      "name": "Abu Oun"}]}, {"paperId": "4ba8d08d67eb8503f83109ec8362856400fffab9",
      "externalIds": {"MAG": "3195017164", "DOI": "10.1051/epjconf/202125102011",
      "CorpusId": 238918299}, "corpusId": 238918299, "publicationVenue": {"id": "f2cc63fa-90cb-413d-92ce-003d5244a1e8",
      "name": "EPJ Web of Conferences", "type": "journal", "alternate_names": ["EPJ
      Web Conf", "Epj Web of Conferences", "Epj Web Conf"], "issn": "2100-014X", "url":
      "https://web.archive.org/web/*/https:/www.epj-conferences.org/component/issues/",
      "alternate_urls": ["https://www.epj-conferences.org/", "https://web.archive.org/web/20161128151311/http:/www.epj-conferences.org:80/",
      "https://www.epj-conferences.org/component/issues/"]}, "url": "https://www.semanticscholar.org/paper/4ba8d08d67eb8503f83109ec8362856400fffab9",
      "title": "Anomaly detection in the CERN cloud infrastructure", "abstract": "Anomaly
      detection in the CERN OpenStack cloud is a challenging task due to the large
      scale of the computing infrastructure and, consequently, the large volume of
      monitoring data to analyse. The current solution to spot anomalous servers in
      the cloud infrastructure relies on a threshold-based alarming system carefully
      set by the system managers on the performance metrics of each infrastructure\u2019s
      component. This contribution explores fully automated, unsupervised machine
      learning solutions in the anomaly detection field for time series metrics, by
      adapting both traditional and deep learning approaches. The paper describes
      a novel end-to-end data analytics pipeline implemented to digest the large amount
      of monitoring data and to expose anomalies to the system managers. The pipeline
      relies solely on open-source tools and frameworks, such as Spark, Apache Airflow,
      Kubernetes, Grafana, Elasticsearch. In addition, an approach to build annotated
      datasets from the CERN cloud monitoring data is reported. Finally, a preliminary
      performance of a number of anomaly detection algorithms is evaluated by using
      the aforementioned annotated datasets.", "venue": "EPJ Web of Conferences",
      "year": 2021, "referenceCount": 20, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      null, "journal": {"name": "EPJ Web of Conferences"}, "citationStyles": {"bibtex":
      "@Conference{Giordano2021AnomalyDI,\n author = {D. Giordano and Matteo Paltenghi
      and Stiven Metaj and A. Dvor\u030ca\u0301k},\n booktitle = {EPJ Web of Conferences},\n
      journal = {EPJ Web of Conferences},\n title = {Anomaly detection in the CERN
      cloud infrastructure},\n year = {2021}\n}\n"}, "authors": [{"authorId": "98215628",
      "name": "D. Giordano"}, {"authorId": "2265272316", "name": "Matteo Paltenghi"},
      {"authorId": "2133032683", "name": "Stiven Metaj"}, {"authorId": "2071833698",
      "name": "A. Dvor\u030ca\u0301k"}]}, {"paperId": "4bd4190c3b283cba97873aa406311384d77c1f9e",
      "externalIds": {"DBLP": "conf/ic2e/HuangXW20", "MAG": "3027517615", "DOI": "10.1109/IC2E48712.2020.00019",
      "CorpusId": 218833968}, "corpusId": 218833968, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4bd4190c3b283cba97873aa406311384d77c1f9e",
      "title": "RLSK: A Job Scheduler for Federated Kubernetes Clusters based on Reinforcement
      Learning", "abstract": "Job scheduling in cluster is often considered as a difficult
      online decision-making problem, and its solution depends largely on the understanding
      of the workload and environment. People usually first propose a simple heuristic
      scheduling algorithm, and then perform repeated and tedious manual tests and
      adjustments based on the characteristics of the workload to gradually improve
      the algorithm. In this work, focusing on multi-cluster environments, load balancing
      and efficient scheduling, we present RLSK, a deep reinforcement learning based
      job scheduler for scheduling independent batch jobs among multiple federated
      cloud computing clusters adaptively. By directly specifying high-level scheduling
      targets, RLSK interacts with the system environment and automatically learns
      scheduling strategies from experience without any prior knowledge assumed over
      the underlying multi-cluster environment and human instructions, which avoids
      people\u2019s tedious testing and tuning work. We implement our scheduler based
      on Kubernetes, and conduct simulations to evaluate the performance of our design.
      The results show that, RLSK can outperform traditional scheduling algorithms.",
      "venue": "2020 IEEE International Conference on Cloud Engineering (IC2E)", "year":
      2020, "referenceCount": 20, "citationCount": 25, "influentialCitationCount":
      2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2020-04-01", "journal": {"name": "2020 IEEE International
      Conference on Cloud Engineering (IC2E)", "pages": "116-123"}, "citationStyles":
      {"bibtex": "@Article{Huang2020RLSKAJ,\n author = {Jiaming Huang and C. Xiao
      and Weigang Wu},\n booktitle = {2020 IEEE International Conference on Cloud
      Engineering (IC2E)},\n journal = {2020 IEEE International Conference on Cloud
      Engineering (IC2E)},\n pages = {116-123},\n title = {RLSK: A Job Scheduler for
      Federated Kubernetes Clusters based on Reinforcement Learning},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2182604583", "name": "Jiaming Huang"}, {"authorId":
      "1490906777", "name": "C. Xiao"}, {"authorId": "2110007290", "name": "Weigang
      Wu"}]}, {"paperId": "4be5aadd4278c4cd675480f4db2b5a0b03bd2503", "externalIds":
      {"DBLP": "conf/netsoft/BreitgandLBWGTC21", "DOI": "10.1109/NetSoft51509.2021.9492716",
      "CorpusId": 236481549}, "corpusId": 236481549, "publicationVenue": {"id": "8d051ed1-e691-49d8-8a57-d7b4a76c4352",
      "name": "IEEE Conference on Network Softwarization", "type": "conference", "alternate_names":
      ["IEEE Conf Netw Softwarization", "NetSoft"]}, "url": "https://www.semanticscholar.org/paper/4be5aadd4278c4cd675480f4db2b5a0b03bd2503",
      "title": "Dynamic Slice Scaling Mechanisms for 5G Multi-domain Environments",
      "abstract": "Network slicing is an essential 5G innovation whereby the network
      is partitioned into logical segments, so that Communication Service Providers
      (CSPs) can offer differentiated services for verticals and use cases. In many
      5G use cases, network requirements vary over time and CSPs must dynamically
      adapt network slices to satisfy the contractual network slice QoS, cooperating
      and using each others\u2019 resources, e.g. when resources of a single CSP are
      not sufficient or suitable to maintain all it\u2019s current SLAs. While this
      need for dynamic cross-CSP cooperation is widely recognized, realization of
      this need is not yet possible due to gaps both in business processes and in
      technical capabilities.In this paper, we present a 5GZORRO approach to dynamic
      cross-CSP slice scaling. Our approach both enables CSPs to collaborate, providing
      security and trust with smart multi-party contracts, and facilitates thus achieved
      collaboration to enable resource sharing across multiple administrative domains,
      either during slice establishment or when already existing slice needs to expand
      or shrink. Our approach allows automating both business and technical processes
      involved in dynamic lifecycle management of cross-CSP network slices, following
      ETSI\u2019s Zero-Touch Network and Service Management (ZSM) closed-loop architecture,
      and relying on resource-sharing Marketplace, Distributed Ledger (DL), and Operational
      Data Lake. We show how this approach is realized in truly Cloud Naive way, with
      Kubernetes as both business and technical cross-domain orchestrator. We then
      showcase applicability of the proposed solution for dynamic scaling of Content
      Delivery Network (CDN) service.", "venue": "IEEE Conference on Network Softwarization",
      "year": 2021, "referenceCount": 0, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2021-06-28", "journal": {"name": "2021 IEEE 7th International
      Conference on Network Softwarization (NetSoft)", "pages": "56-62"}, "citationStyles":
      {"bibtex": "@Article{Breitgand2021DynamicSS,\n author = {David Breitgand and
      A. Lekidis and Rasoul Behravesh and A. Weit and P. Giardina and V. Theodorou
      and C. Costa and K. Barabash},\n booktitle = {IEEE Conference on Network Softwarization},\n
      journal = {2021 IEEE 7th International Conference on Network Softwarization
      (NetSoft)},\n pages = {56-62},\n title = {Dynamic Slice Scaling Mechanisms for
      5G Multi-domain Environments},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2811236", "name": "David Breitgand"}, {"authorId": "2815110", "name": "A. Lekidis"},
      {"authorId": "9005954", "name": "Rasoul Behravesh"}, {"authorId": "2949715",
      "name": "A. Weit"}, {"authorId": "46914346", "name": "P. Giardina"}, {"authorId":
      "3054847", "name": "V. Theodorou"}, {"authorId": "32340121", "name": "C. Costa"},
      {"authorId": "3037313", "name": "K. Barabash"}]}, {"paperId": "4bf54bb43d2dbd72ccf644868d0ea375a13a1838",
      "externalIds": {"MAG": "2921533607", "CorpusId": 88494384}, "corpusId": 88494384,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4bf54bb43d2dbd72ccf644868d0ea375a13a1838",
      "title": "Construction of a Kubernetes cluster in the CERN Technical Network
      and automating its deployment with Ansible", "abstract": "This report describes
      how the cluster deployed in the Technical Network works and how to deploy it
      in other machines. Firstly, the base technologies such as Docker, Kubernetes,
      and Ansible are explained. Secondly, the methodology followed during the development
      of the project is described. Thirdly, how it works and the Ansible play-books
      structure, and fourthly, the manual in which how to install the cluster and
      do some usual operations is explained. Finally, the results showing the improvement
      in time, and the difficulties found during the project.", "venue": "", "year":
      2018, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2018-08-31",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Millan2018ConstructionOA,\n
      author = {M. Millan},\n title = {Construction of a Kubernetes cluster in the
      CERN Technical Network and automating its deployment with Ansible},\n year =
      {2018}\n}\n"}, "authors": [{"authorId": "89660702", "name": "M. Millan"}]},
      {"paperId": "4c01bbde5aed0a037418afca925c7ce6a678f4e4", "externalIds": {"DOI":
      "10.1109/CCGE50943.2021.9776450", "CorpusId": 249049271}, "corpusId": 249049271,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4c01bbde5aed0a037418afca925c7ce6a678f4e4",
      "title": "Creating Helm Charts to ease deployment of Enterprise Application
      and its related Services in Kubernetes", "abstract": "Modern day software applications
      are required to have high availability and performance capabilities to ensure
      highly productive features and a smooth user experience. It becomes increasingly
      difficult for organizations to innovate with rapid building, testing and deployment
      of systems in static, monolithic environments. In order to ascertain the development
      of resilient applications, Kubernetes is widely used for distributed systems
      for workload scalability and orchestration of containers. The management of
      the system using Kubernetes becomes progressively inconvenient with increasing
      size and complexity. In order to make the process of Kubernetes configuration
      simpler and faster, Helm charts are used to preconfigure applications and automate
      the processes of development, testing and production. This paper proposes a
      method to ease the deployment of the enterprise application in Kubernetes using
      Helm charts. Our study shows that deployment of Kubernetes resources is simplified
      using Helm such that applications can be defined as a set of components in the
      minikube Kubernetes cluster. The experimental results of the proposed method
      show that there is 6.185 times speed improvement in the deployment process by
      using Helm. This makes it extremely influential for DevOps teams to improve
      their cluster management.", "venue": "2021 International Conference on Computing,
      Communication and Green Engineering (CCGE)", "year": 2021, "referenceCount":
      0, "citationCount": 5, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2021-09-23",
      "journal": {"name": "2021 International Conference on Computing, Communication
      and Green Engineering (CCGE)", "pages": "1-5"}, "citationStyles": {"bibtex":
      "@Conference{Gokhale2021CreatingHC,\n author = {Shivani Gokhale and Reetika
      Poosarla and Sanjeevani Tikar and Swapnali Gunjawate and Aparna Hajare and Shilpa
      Deshpande and Sourabh Gupta and Kanchan Karve},\n booktitle = {2021 International
      Conference on Computing, Communication and Green Engineering (CCGE)},\n journal
      = {2021 International Conference on Computing, Communication and Green Engineering
      (CCGE)},\n pages = {1-5},\n title = {Creating Helm Charts to ease deployment
      of Enterprise Application and its related Services in Kubernetes},\n year =
      {2021}\n}\n"}, "authors": [{"authorId": "2166244929", "name": "Shivani Gokhale"},
      {"authorId": "2166245817", "name": "Reetika Poosarla"}, {"authorId": "2166244977",
      "name": "Sanjeevani Tikar"}, {"authorId": "2166245544", "name": "Swapnali Gunjawate"},
      {"authorId": "2131074838", "name": "Aparna Hajare"}, {"authorId": "2143608469",
      "name": "Shilpa Deshpande"}, {"authorId": "2166333297", "name": "Sourabh Gupta"},
      {"authorId": "2166246084", "name": "Kanchan Karve"}]}, {"paperId": "4c0dba7ce0e25a07d16d49c14e9aa5a5d88bf531",
      "externalIds": {"DBLP": "conf/ccnc/Slamnik-Krijestorac21", "DOI": "10.1109/CCNC49032.2021.9369622",
      "CorpusId": 232266004}, "corpusId": 232266004, "publicationVenue": {"id": "7cd7bf33-3c9a-4b3f-8b1a-177673c6ca73",
      "name": "Consumer Communications and Networking Conference", "type": "conference",
      "alternate_names": ["CCNC", "Consum Commun Netw Conf"], "url": "http://ieee-ccnc.org/"},
      "url": "https://www.semanticscholar.org/paper/4c0dba7ce0e25a07d16d49c14e9aa5a5d88bf531",
      "title": "Unraveling Edge-based in-vehicle infotainment using the Smart Highway
      testbed", "abstract": "With the advancements in SDN and NFV, both applications
      and network functions can be re-designed, and deployed at more appropriate locations.
      Thanks to the MEC platforms, cloud-alike service deployments are offered to
      the users/vehicles at closer proximity. However, MEC deployments are usually
      i) constrained in resources, ii) contain heterogeneous and distributed network
      and computing resources, and iii) cover narrower region that constrains service
      continuity due to the high mobility of vehicles. Thus, in this paper, we present
      our approach on collocating MEC platforms with roadside infrastructure (i.e.,
      RSUs) in order to improve the QoS of infotainment services for vehicles on the
      smart highway. We tackle both challenges presented above by deploying MEC platforms
      along the highway, thereby having distributed control over each MEC host in
      the form of Kubernetes master nodes, and one powerful and yet centralized orchestrator
      in the cloud. Our approach is one of the earliest attempts to collocate MEC
      with the RSU, and to test the benefits of the smart application placement in
      a realistic vehicular environment.", "venue": "Consumer Communications and Networking
      Conference", "year": 2021, "referenceCount": 11, "citationCount": 5, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2021-01-09", "journal": {"name": "2021 IEEE 18th Annual Consumer Communications
      & Networking Conference (CCNC)", "pages": "1-4"}, "citationStyles": {"bibtex":
      "@Article{Slamnik-Krije\u0161torac2021UnravelingEI,\n author = {Nina Slamnik-Krije\u0161torac
      and J. M\u00e1rquez-Barja},\n booktitle = {Consumer Communications and Networking
      Conference},\n journal = {2021 IEEE 18th Annual Consumer Communications & Networking
      Conference (CCNC)},\n pages = {1-4},\n title = {Unraveling Edge-based in-vehicle
      infotainment using the Smart Highway testbed},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "1418053219", "name": "Nina Slamnik-Krije\u0161torac"}, {"authorId":
      "1404349274", "name": "J. M\u00e1rquez-Barja"}]}, {"paperId": "4c251b4d14c64a0363c44df752055d392923e6ed",
      "externalIds": {"CorpusId": 248133039}, "corpusId": 248133039, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/4c251b4d14c64a0363c44df752055d392923e6ed",
      "title": "Redis Enterprise Software on Kubernetes architecture", "abstract":
      "Kubernetes is an excellent orchestration tool, but it was not designed to deal
      with all the nuances associated with operating Redis Enterprise. Therefore,
      it can fail to react accurately to internal Redis Enterprise edge cases or failure
      conditions. Also, Kubernetes orchestration runs outside the Redis Cluster deployment
      and may fail to trigger failover events, for example, in split network scenarios.",
      "venue": "", "year": 2022, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{None,\n title
      = {Redis Enterprise Software on Kubernetes architecture},\n year = {2022}\n}\n"},
      "authors": []}, {"paperId": "4c293031beeb3fac377a17f8b85f0475b6e8f9ef", "externalIds":
      {"MAG": "2974737924", "DOI": "10.1051/epjconf/201921407032", "CorpusId": 204262697},
      "corpusId": 204262697, "publicationVenue": {"id": "f2cc63fa-90cb-413d-92ce-003d5244a1e8",
      "name": "EPJ Web of Conferences", "type": "journal", "alternate_names": ["EPJ
      Web Conf", "Epj Web of Conferences", "Epj Web Conf"], "issn": "2100-014X", "url":
      "https://web.archive.org/web/*/https:/www.epj-conferences.org/component/issues/",
      "alternate_urls": ["https://www.epj-conferences.org/", "https://web.archive.org/web/20161128151311/http:/www.epj-conferences.org:80/",
      "https://www.epj-conferences.org/component/issues/"]}, "url": "https://www.semanticscholar.org/paper/4c293031beeb3fac377a17f8b85f0475b6e8f9ef",
      "title": "CVMFS: Stratum 0 in Kubernetes", "abstract": "IceCube is a cubic kilometer
      neutrino detector located at the south pole. CVMFS is a key component to IceCube\u2019s
      Distributed High Throughput Computing analytics workflow for sharing 500GB of
      software across datacenters worldwide. Building the IceCube software suite across
      multiple platforms and deploying it into CVMFS has until recently been a manual,
      time consuming task that doesn\u2019t fit well within an agile continuous delivery
      framework. Within the last 2 years a plethora of tooling around microservices
      has created an opportunity to upgrade the IceCube software build and deploy
      pipeline. We present a framework using Kubernetes to deploy Buildbot. The Buildbot
      pipeline is a set of pods (docker containers) in the Kubernetes cluster that
      builds the IceCube software across multiple platforms, tests the new software
      for critical errors, syncs the software to a containerized CVMFS server, and
      finally executes a publish. The time from code commit to CVMFS publish has been
      greatly reduced and has enabled the capability of publishing nightly builds
      to CVMFS.", "venue": "EPJ Web of Conferences", "year": 2019, "referenceCount":
      4, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.epj-conferences.org/articles/epjconf/pdf/2019/19/epjconf_chep2018_07032.pdf",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Physics", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": null, "journal": {"name": "EPJ Web of Conferences"},
      "citationStyles": {"bibtex": "@Conference{Schultz2019CVMFSS0,\n author = {D.
      Schultz and Heath Skarlupka and V. Brik and G. Merino},\n booktitle = {EPJ Web
      of Conferences},\n journal = {EPJ Web of Conferences},\n title = {CVMFS: Stratum
      0 in Kubernetes},\n year = {2019}\n}\n"}, "authors": [{"authorId": "1391065133",
      "name": "D. Schultz"}, {"authorId": "103349981", "name": "Heath Skarlupka"},
      {"authorId": "2083392", "name": "V. Brik"}, {"authorId": "2065236293", "name":
      "G. Merino"}]}, {"paperId": "4c380fddd38cbd16def4024eb62a4cca52f85f71", "externalIds":
      {"MAG": "2884115798", "DBLP": "conf/icisa/KristianiYWH18", "DOI": "10.1007/978-981-13-1056-0_66",
      "CorpusId": 69546713}, "corpusId": 69546713, "publicationVenue": {"id": "8b4d6cae-9de1-4f50-8a10-e6a0758a064d",
      "name": "International Conference on Information Science and Applications",
      "type": "conference", "alternate_names": ["ICISA", "Int Conf Inf Sci Appl"]},
      "url": "https://www.semanticscholar.org/paper/4c380fddd38cbd16def4024eb62a4cca52f85f71",
      "title": "Implementation of an Edge Computing Architecture Using OpenStack and
      Kubernetes", "abstract": null, "venue": "International Conference on Information
      Science and Applications", "year": 2018, "referenceCount": 12, "citationCount":
      28, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2018-06-25", "journal": {"pages": "675-685"},
      "citationStyles": {"bibtex": "@Article{Kristiani2018ImplementationOA,\n author
      = {Endah Kristiani and Chao-Tung Yang and Yuan-Ting Wang and Chin-Yin Huang},\n
      booktitle = {International Conference on Information Science and Applications},\n
      pages = {675-685},\n title = {Implementation of an Edge Computing Architecture
      Using OpenStack and Kubernetes},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "51107359", "name": "Endah Kristiani"}, {"authorId": "144373463", "name": "Chao-Tung
      Yang"}, {"authorId": "13045527", "name": "Yuan-Ting Wang"}, {"authorId": "40311574",
      "name": "Chin-Yin Huang"}]}, {"paperId": "4c624e0e04bbdf585bc8712e25400a6d64a0fd39",
      "externalIds": {"DBLP": "conf/iscit/RenAFN23", "DOI": "10.1109/ISCIT57293.2023.10376046",
      "CorpusId": 266745923}, "corpusId": 266745923, "publicationVenue": {"id": "cb4cad41-2375-4efe-b205-7ce789c1b8af",
      "name": "International Symposium on Communications and Information Technologies",
      "type": "conference", "alternate_names": ["Int Symp Commun Inf Technol", "ISCIT"]},
      "url": "https://www.semanticscholar.org/paper/4c624e0e04bbdf585bc8712e25400a6d64a0fd39",
      "title": "Recursive Service Function Chain Orchestration.", "abstract": "Current
      orchestration platforms are more than ca-pable of scheduling microservices but
      the scheduling Service Function Chains (SFC) of network service are not well
      addressed. In this paper, we focus on the SFC scheduling for microservices and
      aim to achieve the recursive usage of microservices which is a single microservice
      serving multiple SFC simultaneously. We propose an extension to the ESTI MANO
      stack based on a hierarchical Monte Carlo Tree Search algorithm. It allows microservices
      to serve multiple SFCs simultaneously in an environment similar to the popular
      container orchestration platform Kubernetes without interfering with existing
      horizontal scalers. We developed our simulation based on the popular cloud computing
      simulation tool CloudSim Plus and benchmarked our algorithm against the other
      four simple algorithms inspired by existing works. The results show our proposed
      algorithm guarantees the feasibility of generated schedule. With the sacrifice
      of latency for individual SFC, the overall completion time and power usage of
      the host can be reduced up to 43%.", "venue": "International Symposium on Communications
      and Information Technologies", "year": 2023, "referenceCount": 15, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-16", "journal": {"name": "2023 22nd International Symposium on Communications
      and Information Technologies (ISCIT)", "pages": "1-6"}, "citationStyles": {"bibtex":
      "@Article{Ren2023RecursiveSF,\n author = {Yifei Ren and Himanshu Agrawal and
      Nasim Ferdosian and R. Nejabati},\n booktitle = {International Symposium on
      Communications and Information Technologies},\n journal = {2023 22nd International
      Symposium on Communications and Information Technologies (ISCIT)},\n pages =
      {1-6},\n title = {Recursive Service Function Chain Orchestration.},\n year =
      {2023}\n}\n"}, "authors": [{"authorId": "2274200499", "name": "Yifei Ren"},
      {"authorId": "2223390565", "name": "Himanshu Agrawal"}, {"authorId": "2271579518",
      "name": "Nasim Ferdosian"}, {"authorId": "2322265", "name": "R. Nejabati"}]},
      {"paperId": "4c789f88176e2e2964fd2cf45d8818a3d775fc52", "externalIds": {"DBLP":
      "conf/mascots/TamiruPTE20", "MAG": "3084099965", "DOI": "10.1109/MASCOTS50786.2020.9285934",
      "CorpusId": 224982410}, "corpusId": 224982410, "publicationVenue": {"id": "99e98681-158c-48ca-8f86-386d75770b50",
      "name": "IEEE/ACM International Symposium on Modeling, Analysis, and Simulation
      On Computer and Telecommunication Systems", "type": "conference", "alternate_names":
      ["IEEE/ACM Int Symp Model Anal Simul Comput Telecommun Syst", "Model Anal Simul
      Comput Telecommun Syst", "Modeling, Analysis, and Simulation On Computer and
      Telecommunication Systems", "MASCOTS"], "url": "http://www.mascots-conference.org/"},
      "url": "https://www.semanticscholar.org/paper/4c789f88176e2e2964fd2cf45d8818a3d775fc52",
      "title": "Instability in Geo-Distributed Kubernetes Federation: Causes and Mitigation",
      "abstract": "As resources in geo-distributed environments are typically located
      in remote sites characterized by high latency and intermittent network connectivity,
      delays and transient network failures are common between the management layer
      and the remote resources. In this paper, we show that delays and transient network
      failures coupled with static configuration, including the default configuration
      parameter values, can lead to instability of application deployments in Kubernetes
      Federation, making applications unavailable for long periods of time. Leveraging
      on the benefits of configuration tuning, we propose a feedback controller to
      dynamically adjust the concerned configuration parameter to improve the stability
      of application deployments without slowing down the detection of hard failures.
      We show the effectiveness of our approach in a geo-distributed setup across
      five sites of Grid''5000, bringing system stability from 83-92% with no controller
      to 99.5-100% using the controller.", "venue": "IEEE/ACM International Symposium
      on Modeling, Analysis, and Simulation On Computer and Telecommunication Systems",
      "year": 2020, "referenceCount": 30, "citationCount": 8, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://hal.inria.fr/hal-02934475/file/main.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-11-17", "journal":
      {"name": "2020 28th International Symposium on Modeling, Analysis, and Simulation
      of Computer and Telecommunication Systems (MASCOTS)", "pages": "1-8"}, "citationStyles":
      {"bibtex": "@Article{Tamiru2020InstabilityIG,\n author = {Mulugeta Ayalew Tamiru
      and G. Pierre and Johan Tordsson and E. Elmroth},\n booktitle = {IEEE/ACM International
      Symposium on Modeling, Analysis, and Simulation On Computer and Telecommunication
      Systems},\n journal = {2020 28th International Symposium on Modeling, Analysis,
      and Simulation of Computer and Telecommunication Systems (MASCOTS)},\n pages
      = {1-8},\n title = {Instability in Geo-Distributed Kubernetes Federation: Causes
      and Mitigation},\n year = {2020}\n}\n"}, "authors": [{"authorId": "151139369",
      "name": "Mulugeta Ayalew Tamiru"}, {"authorId": "145074982", "name": "G. Pierre"},
      {"authorId": "2548512", "name": "Johan Tordsson"}, {"authorId": "1685517", "name":
      "E. Elmroth"}]}, {"paperId": "4c9b804dd489fd099955df16365f6949d52f84c0", "externalIds":
      {"ArXiv": "2110.12770", "DBLP": "journals/corr/abs-2110-12770", "CorpusId":
      239769186}, "corpusId": 239769186, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/4c9b804dd489fd099955df16365f6949d52f84c0",
      "title": "DP-XGBoost: Private Machine Learning at Scale", "abstract": "The big-data
      revolution announced ten years ago does not seem to have fully happened at the
      expected scale. One of the main obstacle to this, has been the lack of data
      circulation. And one of the many reasons people and organizations did not share
      as much as expected is the privacy risk associated with data sharing operations.
      There has been many works on practical systems to compute statistical queries
      with Differential Privacy (DP). There have also been practical implementations
      of systems to train Neural Networks with DP, but relatively little efforts have
      been dedicated to designing scalable classical Machine Learning (ML) models
      providing DP guarantees. In this work we describe and implement a DP fork of
      a battle tested ML model: XGBoost. Our approach beats by a large margin previous
      attempts at the task, in terms of accuracy achieved for a given privacy budget.
      It is also the only DP implementation of boosted trees that scales to big data
      and can run in distributed environments such as: Kubernetes, Dask or Apache
      Spark.", "venue": "arXiv.org", "year": 2021, "referenceCount": 35, "citationCount":
      6, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-10-25", "journal": {"name": "ArXiv", "volume": "abs/2110.12770"}, "citationStyles":
      {"bibtex": "@Article{Grislain2021DPXGBoostPM,\n author = {Nicolas Grislain and
      Joan Gonzalvez},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {DP-XGBoost:
      Private Machine Learning at Scale},\n volume = {abs/2110.12770},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2477843", "name": "Nicolas Grislain"}, {"authorId":
      "122090135", "name": "Joan Gonzalvez"}]}, {"paperId": "4cb398b2d53d0f19ec1d1dbf50a8908e1f0e5139",
      "externalIds": {"DBLP": "conf/ica3pp/YeungBYFHG20", "MAG": "3080985349", "DOI":
      "10.1007/978-3-030-60239-0_33", "CorpusId": 221020680}, "corpusId": 221020680,
      "publicationVenue": {"id": "24e5c42b-e7ca-4f5a-8ab0-a1933aaeee30", "name": "International
      Conference on Algorithms and Architectures for Parallel Processing", "type":
      "conference", "alternate_names": ["ICA3PP", "Int Conf Algorithm Archit Parallel
      Process"], "url": "http://www.wikicfp.com/cfp/program?id=1266"}, "url": "https://www.semanticscholar.org/paper/4cb398b2d53d0f19ec1d1dbf50a8908e1f0e5139",
      "title": "Horus: An Interference-Aware Resource Manager for Deep Learning Systems",
      "abstract": null, "venue": "International Conference on Algorithms and Architectures
      for Parallel Processing", "year": 2020, "referenceCount": 37, "citationCount":
      7, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://eprints.lancs.ac.uk/id/eprint/145713/1/ICA3PP_Horus_Yeung_Accepted_.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-10-02", "journal":
      {"pages": "492-508"}, "citationStyles": {"bibtex": "@Article{Yeung2020HorusAI,\n
      author = {G. Yeung and Damian Borowiec and Renyu Yang and A. Friday and R. Harper
      and P. Garraghan},\n booktitle = {International Conference on Algorithms and
      Architectures for Parallel Processing},\n pages = {492-508},\n title = {Horus:
      An Interference-Aware Resource Manager for Deep Learning Systems},\n year =
      {2020}\n}\n"}, "authors": [{"authorId": "1840336659", "name": "G. Yeung"}, {"authorId":
      "1840438428", "name": "Damian Borowiec"}, {"authorId": "1894612", "name": "Renyu
      Yang"}, {"authorId": "8133458", "name": "A. Friday"}, {"authorId": "81873563",
      "name": "R. Harper"}, {"authorId": "3052818", "name": "P. Garraghan"}]}, {"paperId":
      "4cce01bc752ebcb6db39befa64bbae2af728a9fb", "externalIds": {"DBLP": "conf/uic/YangWYC22",
      "DOI": "10.1109/SmartWorld-UIC-ATC-ScalCom-DigitalTwin-PriComp-Metaverse56740.2022.00238",
      "CorpusId": 260254675}, "corpusId": 260254675, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4cce01bc752ebcb6db39befa64bbae2af728a9fb",
      "title": "Technology for embedded GPU virtualization in the edge computing environment",
      "abstract": "With the rapid development of Internet of Things technology, the
      requirements for edge node data processing capability are increasing, and GPU
      processors are becoming more widely applied in edge nodes. Current research
      on GPU virtualization technology mainly focuses on cloud data centers, with
      little research on embedded GPU virtualization in scenarios with limited edge
      node resources. In contrast to cloud data centers, embedded GPUs in edge nodes
      typically do not have access to GPU utilization and video memory usage within
      each container. As a result, traditional GPU virtualization technologies are
      ineffective for resource virtualization on embedded devices. This paper presents
      a method to virtualize embedded GPU resources in an edge computing environment,
      called sGPU. We integrated edge nodes with embedded GPUs into Kubernetes via
      the device-plugin mechanism. Users can package GPU applications in containers
      and deploy them using Kubernetes on edge nodes with embedded GPUs. sGPU allows
      containers to share embedded GPU computing resources and divides a physical
      GPU into multiple virtual GPUs that can be allocated to containers on demand.
      To achieve GPU computing power division, we proposed a multi-container sharing
      GPU algorithm and implemented it in sGPU, which ensures the most accurate computing
      power segmentation under the competition of computing resources of a GPU used
      by multiple containers at the same time. According to the experimental results,
      the average overhead of sGPU is 3.28%. The accuracy of computing power segmentation
      is 92.7% when a single container uses GPU.", "venue": "2022 IEEE Smartworld,
      Ubiquitous Intelligence & Computing, Scalable Computing & Communications, Digital
      Twin, Privacy Computing, Metaverse, Autonomous & Trusted Vehicles (SmartWorld/UIC/ScalCom/DigitalTwin/PriComp/Meta)",
      "year": 2022, "referenceCount": 15, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2022-12-01", "journal": {"name": "2022 IEEE Smartworld, Ubiquitous Intelligence
      & Computing, Scalable Computing & Communications, Digital Twin, Privacy Computing,
      Metaverse, Autonomous & Trusted Vehicles (SmartWorld/UIC/ScalCom/DigitalTwin/PriComp/Meta)",
      "pages": "1657-1663"}, "citationStyles": {"bibtex": "@Article{Yang2022TechnologyFE,\n
      author = {Xinyu Yang and Xin Wang and Lei Yan and Suzhi Cao},\n booktitle =
      {2022 IEEE Smartworld, Ubiquitous Intelligence & Computing, Scalable Computing
      & Communications, Digital Twin, Privacy Computing, Metaverse, Autonomous & Trusted
      Vehicles (SmartWorld/UIC/ScalCom/DigitalTwin/PriComp/Meta)},\n journal = {2022
      IEEE Smartworld, Ubiquitous Intelligence & Computing, Scalable Computing & Communications,
      Digital Twin, Privacy Computing, Metaverse, Autonomous & Trusted Vehicles (SmartWorld/UIC/ScalCom/DigitalTwin/PriComp/Meta)},\n
      pages = {1657-1663},\n title = {Technology for embedded GPU virtualization in
      the edge computing environment},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2213800608", "name": "Xinyu Yang"}, {"authorId": "2214090587", "name": "Xin
      Wang"}, {"authorId": "2110133208", "name": "Lei Yan"}, {"authorId": "14761946",
      "name": "Suzhi Cao"}]}, {"paperId": "4cf8546f87bc835588cbac9dafd366faab672e09",
      "externalIds": {"CorpusId": 254685264}, "corpusId": 254685264, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/4cf8546f87bc835588cbac9dafd366faab672e09",
      "title": "Model-Driven Approach to Blockchain-Enabled MLOps", "abstract": "\u2014In
      recent years, machine learning has reached quite sophisticated level of usability
      within applications across various domains \u2013 ranging from booking reservations
      and media content delivery to business and healthcare. However, the deployment
      of machine learning models, together with parameter tuning and periodic training,
      which are necessary to maintain satisfiable performance, represent time consuming
      processes, requiring various types of skills - both DevOps and data analysis-related.
      In this paper, we leverage model-driven approach in synergy with code generation
      with aim to automatize the so-called MLOps activities, relying on ZenML framework
      for pipeline automation and Kubernetes for containerized task orchestration.
      On top of that, we leverage Blockchain for infrastructure provisioning. Our
      goal is to reduce the cognitive load of infrastructure and services management
      within systems relying on machine learning. The framework is evaluated in scenarios
      using PyTorch-based deep learning predictive models. According to the results,
      the proposed approach reduces both the time and skill required for successful
      MLOps activities.", "venue": "", "year": null, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Misc{None,\n title = {Model-Driven
      Approach to Blockchain-Enabled MLOps}\n}\n"}, "authors": []}, {"paperId": "4cff5986f1857a151c6cbf14cf9bdb94fcc5f279",
      "externalIds": {"DOI": "10.61173/d3x2qc90", "CorpusId": 260879954}, "corpusId":
      260879954, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4cff5986f1857a151c6cbf14cf9bdb94fcc5f279",
      "title": "Exploring the Power of GKE Networking: An In-depth Analysis ofKubernetes
      Node and Pod Communication in Google Kubernetes", "abstract": "This paper analyzes
      the communication between Kubernetes nodes and pods in Google Kubernetes Engine
      (GKE). Weexplore the structure and features of GKE networking, including communication
      between nodes, nodes, and pods, andpods themselves. We also consider the network
      security and performance aspects. In addition, we analyze commonnetworking issues
      such as latency, packet loss, and network failures and provide solutions. Through
      our experimentalresults, we demonstrate the effectiveness of our proposed solutions
      and offer insights for future research in this area.This paper provides valuable
      insights for developers and operators who use GKE and want to optimize their
      networkingconfiguration.", "venue": "Science and Technology of Engineering,
      Chemistry and Environmental Protection", "year": 2023, "referenceCount": 7,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-06-01", "journal":
      {"name": "Science and Technology of Engineering, Chemistry and Environmental
      Protection"}, "citationStyles": {"bibtex": "@Article{Ou2023ExploringTP,\n author
      = {Yining Ou},\n booktitle = {Science and Technology of Engineering, Chemistry
      and Environmental Protection},\n journal = {Science and Technology of Engineering,
      Chemistry and Environmental Protection},\n title = {Exploring the Power of GKE
      Networking: An In-depth Analysis ofKubernetes Node and Pod Communication in
      Google Kubernetes},\n year = {2023}\n}\n"}, "authors": [{"authorId": "50051866",
      "name": "Yining Ou"}]}, {"paperId": "4d37c00ba7f79c4c2265ff35879e42ecb64721f2",
      "externalIds": {"DBLP": "conf/IEEEcloud/ChoochotkaewCTY22", "DOI": "10.1109/CLOUD55607.2022.00053",
      "CorpusId": 251773202}, "corpusId": 251773202, "publicationVenue": {"id": "406d9f60-417a-4dc5-a6b7-1fe4689a4ff7",
      "name": "IEEE International Conference on Cloud Computing", "type": "conference",
      "alternate_names": ["Int Conf Cloud Comput [services Soc", "CLOUD", "International
      Conference on Cloud Computing [Services Society]", "IEEE Int Conf Cloud Comput"]},
      "url": "https://www.semanticscholar.org/paper/4d37c00ba7f79c4c2265ff35879e42ecb64721f2",
      "title": "AutoDECK: Automated Declarative Performance Evaluation and Tuning
      Framework on Kubernetes", "abstract": "Containerization and application variety
      bring many challenges in automating evaluations for performance tuning and comparison
      among infrastructure choices. Due to the tightly-coupled design of benchmarks
      and evaluation tools, the present automated tools on Kubernetes are limited
      to trivial microbenchmarks and cannot be extended to complex cloudnative architectures
      such as microservices and serverless, which are usually managed by customized
      operators for setting up workload dependencies. In this paper, we propose AutoDECK,
      a performance evaluation framework with a fully declarative manner. The proposed
      framework automates configuring, deploying, evaluating, summarizing, and visualizing
      the benchmarking workload. It seamlessly integrates mature Kubernetes-native
      systems and extends multiple functionalities such as tracking the image-build
      pipeline, and auto-tuning. We present five use cases of evaluations and analysis
      through various kinds of bench-marks including microbenchmarks and HPC/AI benchmarks.
      The evaluation results can also differentiate characteristics such as resource
      usage behavior and parallelism effectiveness between different clusters. Furthermore,
      the results demonstrate the benefit of integrating an auto-tuning feature in
      the proposed framework, as shown by the 10% transferred memory bytes in the
      Sysbench benchmark.", "venue": "IEEE International Conference on Cloud Computing",
      "year": 2022, "referenceCount": 18, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-07-01", "journal": {"name": "2022 IEEE 15th International
      Conference on Cloud Computing (CLOUD)", "pages": "309-314"}, "citationStyles":
      {"bibtex": "@Article{Choochotkaew2022AutoDECKAD,\n author = {Sunyanan Choochotkaew
      and Tatsuhiro Chiba and Scott Trent and Takeshi Yoshimura and Marcelo Amaral},\n
      booktitle = {IEEE International Conference on Cloud Computing},\n journal =
      {2022 IEEE 15th International Conference on Cloud Computing (CLOUD)},\n pages
      = {309-314},\n title = {AutoDECK: Automated Declarative Performance Evaluation
      and Tuning Framework on Kubernetes},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2091372", "name": "Sunyanan Choochotkaew"}, {"authorId": "32518736", "name":
      "Tatsuhiro Chiba"}, {"authorId": "144684152", "name": "Scott Trent"}, {"authorId":
      "2057829111", "name": "Takeshi Yoshimura"}, {"authorId": "144330701", "name":
      "Marcelo Amaral"}]}, {"paperId": "4d4080e1a2e26fe1ead433741602ab6eccc22b72",
      "externalIds": {"MAG": "2921080878", "DOI": "10.1109/ICSESS.2018.8663784", "CorpusId":
      77386890}, "corpusId": 77386890, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4d4080e1a2e26fe1ead433741602ab6eccc22b72",
      "title": "An Auto Scaling System for API Gateway Based on Kubernetes", "abstract":
      "The micro-service approach is a new term in software architecture patterns
      which is gaining popularity due to its flexibility, granular approach and loosely
      coupled services [1]. In this paper, first, we present an API Gateway System
      as the entrance to backend services. It can effectively decrease the amount
      of remote calls between applications and backend services, and simplify the
      complexity of internal services calling each other. Secondly this paper designs
      an auto scaling system for API Gateway System based on Kubernetes and Prometheus
      which can dynamically adjust the number of application instances according to
      its own load. It can improve the utilization of system resources while ensuing
      the high availability and quality of the application''s service.", "venue":
      "2018 IEEE 9th International Conference on Software Engineering and Service
      Science (ICSESS)", "year": 2018, "referenceCount": 9, "citationCount": 16, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2018-11-01", "journal": {"name": "2018 IEEE
      9th International Conference on Software Engineering and Service Science (ICSESS)",
      "pages": "109-112"}, "citationStyles": {"bibtex": "@Conference{Song2018AnAS,\n
      author = {Meina Song and Chengcheng Zhang and E. Haihong},\n booktitle = {2018
      IEEE 9th International Conference on Software Engineering and Service Science
      (ICSESS)},\n journal = {2018 IEEE 9th International Conference on Software Engineering
      and Service Science (ICSESS)},\n pages = {109-112},\n title = {An Auto Scaling
      System for API Gateway Based on Kubernetes},\n year = {2018}\n}\n"}, "authors":
      [{"authorId": "1701530", "name": "Meina Song"}, {"authorId": "2200136449", "name":
      "Chengcheng Zhang"}, {"authorId": "2347748", "name": "E. Haihong"}]}, {"paperId":
      "4d559a36bbfde9429fb2f5f35feaf864ac9255a7", "externalIds": {"DBLP": "journals/access/ZhangLWCS21",
      "DOI": "10.1109/ACCESS.2021.3100082", "CorpusId": 236523137}, "corpusId": 236523137,
      "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26", "name": "IEEE
      Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/4d559a36bbfde9429fb2f5f35feaf864ac9255a7",
      "title": "Zeus: Improving Resource Efficiency via Workload Colocation for Massive
      Kubernetes Clusters", "abstract": "With the popularity of container-based microservices
      and cloud-native architectures, Kubernetes has established itself as the de
      facto standard for container orchestration. Kubernetes is known for its advantage
      in easy deployment and operations for applications; however, it suffers from
      low resource utilization, incurring high server provisioning and operational
      costs, due to following reasons. First, it is common practice for latency-sensitive
      services to be over-provisioned for the peak load: Kubernetes might consider
      such peak-load provisioning as constant, even though the actual resource utilization
      is low. Second, the isolation between different containers is poor and cannot
      prevent performance degradation when best-effort jobs and latency-sensitive
      services run together. Users may have to run these two classes of workloads
      on separate machines to avoid interference, resulting in higher provisioning
      costs. This paper presents a highly scalable cluster scheduling system named
      Zeus, which is designed based on Kubernetes extension mechanisms. Zeus achieves
      safe colocation of best-effort jobs and latency-sensitive services. Furthermore,
      Zeus schedules best-effort jobs based on the real server utilization and can
      adaptively allocate resources between the two classes of workloads. In addition,
      Zeus enhances container isolation by coordinating software and hardware isolation
      features. As a result, Zeus can effectively improve the resource utilization
      of Kubernetes clusters. We discuss the design and implementation of Zeus and
      evaluate its effectiveness using latency-sensitive services and best-effort
      jobs in a massive production environment. The results show that by colocating
      latency-sensitive services with best-effort jobs, Zeus can increase the average
      CPU utilization from 15% to 60% without SLO violations.", "venue": "IEEE Access",
      "year": 2021, "referenceCount": 28, "citationCount": 8, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/6287639/9312710/09496625.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "IEEE Access", "pages": "105192-105204", "volume": "9"}, "citationStyles":
      {"bibtex": "@Article{Zhang2021ZeusIR,\n author = {Xiaolong Zhang and Lanqing
      Li and Yuan Wang and E. Chen and L. Shou},\n booktitle = {IEEE Access},\n journal
      = {IEEE Access},\n pages = {105192-105204},\n title = {Zeus: Improving Resource
      Efficiency via Workload Colocation for Massive Kubernetes Clusters},\n volume
      = {9},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2118045956", "name":
      "Xiaolong Zhang"}, {"authorId": "2111917951", "name": "Lanqing Li"}, {"authorId":
      "2156167426", "name": "Yuan Wang"}, {"authorId": "2150974108", "name": "E. Chen"},
      {"authorId": "144128216", "name": "L. Shou"}]}, {"paperId": "4d88d4a20b07bbdb9373881d3301d86015235090",
      "externalIds": {"CorpusId": 245827627}, "corpusId": 245827627, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/4d88d4a20b07bbdb9373881d3301d86015235090",
      "title": "Evaluating dynamic load balancing of ECM workload pattern employed
      in cloud environments managed by a Kubernetes / Docker eco-system", "abstract":
      "The transition to cloud-based ECM solutions requires adaptation and enhancements
      for dynamic cloud environment. Cloud computing and containerization offer key
      concepts to create solutions for this task. They also open new opportunities
      to benefit from cloud usage by leveraging the pay-asyou-go model. Cloud users
      and providers both benefit from the increased efficiency of dynamic applications.
      But legacy applications are not yet able to leverage the benefits provided by
      cloud orchestration. This thesis, therefore researches the feasibility of a
      dynamic load balancing approach applied to an ECM application deployed into
      a cloud environment. To evaluate the approach, a prototype using open-source
      software is created on a Kubernetes orchestrated cluster. Previous work included
      the port of the containerized ECM application into the Kubernetes environment.
      The present prototype builds up on this approach by enhancing the ECM application
      components with metrics export capabilities. A monitoring system based on Prometheus
      is introduced to gather these metrics from the ECM application and other system
      components. Information provided by these metrics are used to add elasticity
      to application components. The prototype proves that dynamic load balancing
      of the ECM application in the cloud is feasible. Two major challenges for an
      efficient deployment of the application were identified, (1) the generation
      of useful metrics and (2) removing dependencies from individual components.
      Further research into optimizations of stateful service components is required.
      This further ensures an efficient usage in cloud based elastic topologies, especially
      considering stateful database applications.", "venue": "", "year": 2021, "referenceCount":
      45, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{Hagemann2021EvaluatingDL,\n
      author = {Pascal Hagemann},\n title = {Evaluating dynamic load balancing of
      ECM workload pattern employed in cloud environments managed by a Kubernetes
      / Docker eco-system},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2149321159",
      "name": "Pascal Hagemann"}]}, {"paperId": "4d8c5d667ea8e66ae365222538a7f345892155cf",
      "externalIds": {"MAG": "2997287884", "DOI": "10.1109/CSCI46756.2018.00187",
      "CorpusId": 209854599}, "corpusId": 209854599, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4d8c5d667ea8e66ae365222538a7f345892155cf",
      "title": "Towards Dynamic On-Demand Fog Computing Formation Based On Containerization
      Technology", "abstract": "The advantage of having fog nodes near IOT devices
      can be seen by bringing intelligence near the edge. Fogs form storage place,
      real time processing for the tremendous amount of data generated by sensors,
      host for users'' services to provide a better quality of service with a fast
      response time, and most importantly saving the IOT devices energy. If a fog
      is not present near an IOT device, its advantage will simply be eliminated.
      The current fogs in the literature are preconfigured in specific locations having
      some specific services running on them all the time which limits their diverse
      availabilities and prevent dynamic update and context adaptation. In this paper,
      we address the aforementioned limitations by proposing on-demand fog formation
      to create and manage fog devices and services on the fly. Our approach benefits
      from the containerization technology like Docker to build fog environment on-demand
      with the least initialization costs possible using volunteering devices and
      Kubernetes utility called Kubeadm, which allows monitoring fog nodes and orchestrates
      their services in a highly dynamic environment. A testing strategy composed
      of real devices is used and promising results are presented illustrating the
      ability and efficiency of initializing fog devices on the fly anywhere and whenever
      needed.", "venue": "2018 International Conference on Computational Science and
      Computational Intelligence (CSCI)", "year": 2018, "referenceCount": 13, "citationCount":
      11, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Environmental Science", "source": "s2-fos-model"}], "publicationTypes": ["Conference"],
      "publicationDate": "2018-12-01", "journal": {"name": "2018 International Conference
      on Computational Science and Computational Intelligence (CSCI)", "pages": "960-965"},
      "citationStyles": {"bibtex": "@Conference{Sami2018TowardsDO,\n author = {Hani
      Sami and A. Mourad},\n booktitle = {2018 International Conference on Computational
      Science and Computational Intelligence (CSCI)},\n journal = {2018 International
      Conference on Computational Science and Computational Intelligence (CSCI)},\n
      pages = {960-965},\n title = {Towards Dynamic On-Demand Fog Computing Formation
      Based On Containerization Technology},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "1476824854", "name": "Hani Sami"}, {"authorId": "144378341", "name": "A. Mourad"}]},
      {"paperId": "4dbf08d89574de0b9bbf08996905340d504e9b3c", "externalIds": {"MAG":
      "2898996627", "DBLP": "conf/icccsec/XieZGWL18", "DOI": "10.1007/978-3-030-00006-6_40",
      "CorpusId": 53298923}, "corpusId": 53298923, "publicationVenue": {"id": "da18ef0b-933e-4678-b2fa-4290baf6970a",
      "name": "International Conference on Communication, Computing & Security", "type":
      "conference", "alternate_names": ["Int Conf Commun Comput  Secur", "International
      Conference Communication and Computing Systems", "ICCCS", "International Conference
      on Computer and Communication Systems", "Int Conf Comput Commun Syst", "Int
      Conf Commun Comput Syst"]}, "url": "https://www.semanticscholar.org/paper/4dbf08d89574de0b9bbf08996905340d504e9b3c",
      "title": "Design and Research on B2B Trading Platform Based on Consortium Blockchains",
      "abstract": null, "venue": "International Conference on Communication, Computing
      & Security", "year": 2018, "referenceCount": 14, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2018-06-08", "journal": {"pages": "436-447"},
      "citationStyles": {"bibtex": "@Article{Xie2018DesignAR,\n author = {X. Xie and
      Qiangqing Zheng and Zhihong Guo and Qi Wang and Xinrong Li},\n booktitle = {International
      Conference on Communication, Computing & Security},\n pages = {436-447},\n title
      = {Design and Research on B2B Trading Platform Based on Consortium Blockchains},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "97595432", "name": "X. Xie"},
      {"authorId": "2114173064", "name": "Qiangqing Zheng"}, {"authorId": "1476723125",
      "name": "Zhihong Guo"}, {"authorId": "2151572777", "name": "Qi Wang"}, {"authorId":
      "2116134779", "name": "Xinrong Li"}]}, {"paperId": "4dd87a9c10e8eb661b67f3592e52079641355968",
      "externalIds": {"DOI": "10.1109/I2CT51068.2021.9418203", "CorpusId": 234479301},
      "corpusId": 234479301, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4dd87a9c10e8eb661b67f3592e52079641355968",
      "title": "Building A Zero Trust Architecture Using Kubernetes", "abstract":
      "In the twenty-first century, trust has become an influential factor in people
      and organizations. As the world is advancing digitally, mobile and cloud services
      have become the principal drivers of this era. The conventional frameworks to
      protect such an environment have dissolved. There existed a period where organization
      resources were put away inside the secure perimeter and regarded as safe. Moreover,
      the recent work-from-home culture provides attackers with a rather significant
      opportunity to breach security controls. Everybody is deemed trustworthy inside
      the network, allowing an intruder to gain escalated access inside the perimeter.
      These fortresses currently permit clients to get sustained information from
      outside the fortification since everybody is \u2018trusted excessively.\u2019
      making our current foundation defenseless to attackers. This paper proves \u2018Zero
      Trust\u2019 as another worldview of online protection. It explores the previous
      work related to Zero Trust implementation and its research. It discusses Zero
      Trust as a potential for future network security. It uses containers to implement
      the architecture, which responds to various types of attacks. It focuses on
      security at every OSI model layer and the advantages and disadvantages of Zero
      Trust Architecture.", "venue": "2021 6th International Conference for Convergence
      in Technology (I2CT)", "year": 2021, "referenceCount": 24, "citationCount":
      17, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2021-04-02", "journal":
      {"name": "2021 6th International Conference for Convergence in Technology (I2CT)",
      "pages": "1-8"}, "citationStyles": {"bibtex": "@Conference{D''Silva2021BuildingAZ,\n
      author = {Daniel D''Silva and D. Ambawade},\n booktitle = {2021 6th International
      Conference for Convergence in Technology (I2CT)},\n journal = {2021 6th International
      Conference for Convergence in Technology (I2CT)},\n pages = {1-8},\n title =
      {Building A Zero Trust Architecture Using Kubernetes},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2091855126", "name": "Daniel D''Silva"}, {"authorId":
      "7369281", "name": "D. Ambawade"}]}, {"paperId": "4df9fbffb5580023cae2ae22970606d7ae9f76f4",
      "externalIds": {"ArXiv": "1802.10375", "DBLP": "journals/corr/abs-1802-10375",
      "MAG": "2789214223", "CorpusId": 3551413}, "corpusId": 3551413, "publicationVenue":
      {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names":
      ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/4df9fbffb5580023cae2ae22970606d7ae9f76f4",
      "title": "i2kit: A Tool for Immutable Infrastructure Deployments based on Lightweight
      Virtual Machines specialized to run Containers", "abstract": "Container technologies,
      like Docker, are becoming increasingly popular. Containers provide exceptional
      developer experience because containers offer lightweight isolation and ease
      of software distribution. Containers are also widely used in production environments,
      where a different set of challenges arise such as security, networking, service
      discovery and load balancing. Container cluster management tools, such as Kubernetes,
      attempt to solve these problems by introducing a new control layer with the
      container as the unit of deployment. However, adding a new control layer is
      an extra configuration step and an additional potential source of runtime errors.
      The virtual machine technology offered by cloud providers is more mature and
      proven in terms of security, networking, service discovery and load balancing.
      However, virtual machines are heavier than containers for local development,
      are less flexible for resource allocation, and suffer longer boot times. This
      paper presents an alternative to containers that enjoy the best features of
      both approaches: (1) the use of mature, proven cloud vendor technology; (2)
      no need for a new control layer; and (3) as lightweight as containers. Our solution
      is i2kit, a deployment tool based on the immutable infrastructure pattern, where
      the virtual machine is the unit of deployment. The i2kit tool accepts a simplified
      format of Kubernetes Deployment Manifests in order to reuse Kubernetes'' most
      successful principles, but it creates a lightweight virtual machine for each
      Pod using Linuxkit. Linuxkit alleviates the drawback in size that using virtual
      machines would otherwise entail, because the footprint of Linuxkit is approximately
      60MB. Finally, the attack surface of the system is reduced since Linuxkit only
      installs the minimum set of OS dependencies to run containers, and different
      Pods are isolated by hypervisor technology.", "venue": "arXiv.org", "year":
      2018, "referenceCount": 21, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2018-02-28", "journal": {"name": "ArXiv", "volume": "abs/1802.10375"}, "citationStyles":
      {"bibtex": "@Article{Guzm\u00e1n2018i2kitAT,\n author = {P. Guzm\u00e1n and
      Felipe Gorostiaga and C\u00e9sar S\u00e1nchez},\n booktitle = {arXiv.org},\n
      journal = {ArXiv},\n title = {i2kit: A Tool for Immutable Infrastructure Deployments
      based on Lightweight Virtual Machines specialized to run Containers},\n volume
      = {abs/1802.10375},\n year = {2018}\n}\n"}, "authors": [{"authorId": "2402446",
      "name": "P. Guzm\u00e1n"}, {"authorId": "11526381", "name": "Felipe Gorostiaga"},
      {"authorId": "145979956", "name": "C\u00e9sar S\u00e1nchez"}]}, {"paperId":
      "4dffbe98902163a99abae59c2bd19d2db5721de8", "externalIds": {"MAG": "2981377923",
      "CorpusId": 208118513}, "corpusId": 208118513, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4dffbe98902163a99abae59c2bd19d2db5721de8",
      "title": "Digital Torque Transformation", "abstract": "The Equipment Installment
      Plan (EIP) was a game changer in telecom industry and is an integral part of
      T-Mobile\u2019s Un-carrier strategy. The EIP system is a home-grown system based
      on Java/J2EE and a combination of client-server and SOA architecture principles.
      The application runs on Bea Web Logic servers with Oracle DB with multiple batch
      jobs. As the system grew in size, operational challenges surfaced which includes
      multiple physical server security updates and maintenance cost. (DTT)\u201d
      was the answer to address these challenges. The method employed PaaS Pivotal
      Container Services (PKS). Enterprise PKS uses the latest stable OSS distribution
      of Kubernetes\u2014with no proprietary extensions. PKS is widely expansible
      to other applications in T-Mobile ecosystem as PKS can be deployed On-premises
      as a PaaS. GJCST-B Classification: C.2.1 DigitalTorqueTransformation Global
      Journal of Computer Science and Technology: B Cloud and Distributed Strictly
      as per the compliance and regulations of: Online ISSN: 0975-4172 & Print ISSN:
      0975-4350 Digital Torque Transformation", "venue": "", "year": 2019, "referenceCount":
      3, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2019-05-08", "journal": {"name":
      "", "volume": "4"}, "citationStyles": {"bibtex": "@Inproceedings{Reddy2019DigitalTT,\n
      author = {Boddam Linga Reddy},\n title = {Digital Torque Transformation},\n
      volume = {4},\n year = {2019}\n}\n"}, "authors": [{"authorId": "2150900700",
      "name": "Boddam Linga Reddy"}]}, {"paperId": "4e1c12643bc5c47a4d07f6bcfbfa14ccc1a00642",
      "externalIds": {"DOI": "10.1007/978-1-4842-2415-1", "CorpusId": 33807478}, "corpusId":
      33807478, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4e1c12643bc5c47a4d07f6bcfbfa14ccc1a00642",
      "title": "Deploying Rails with Docker, Kubernetes and ECS", "abstract": null,
      "venue": "Apress", "year": 2016, "referenceCount": 0, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://link.springer.com/content/pdf/bfm:978-1-4842-2415-1/1?pdf=chapter%20toc",
      "status": "GREEN"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Acu\u00f1a2016DeployingRW,\n
      author = {Pablo Acu\u00f1a},\n booktitle = {Apress},\n title = {Deploying Rails
      with Docker, Kubernetes and ECS},\n year = {2016}\n}\n"}, "authors": [{"authorId":
      "2073407284", "name": "Pablo Acu\u00f1a"}]}, {"paperId": "4e1d3ea4fec2db6da95519644f702f7cabaadb6c",
      "externalIds": {"DBLP": "conf/cnsm/SantosVDWVT23", "DOI": "10.23919/CNSM59352.2023.10327792",
      "CorpusId": 265499715}, "corpusId": 265499715, "publicationVenue": {"id": "7a0ab88e-224a-475b-9ea6-e66a6b3448c8",
      "name": "Conference on Network and Service Management", "type": "conference",
      "alternate_names": ["Conf Netw Serv Manag", "CNSM"], "url": "http://www.cnsm-conf.org/"},
      "url": "https://www.semanticscholar.org/paper/4e1d3ea4fec2db6da95519644f702f7cabaadb6c",
      "title": "Performance Impact of Queue Sorting in Container-Based Application
      Scheduling", "abstract": "Containerization has revolutionized application deployments
      in current cloud platforms, enabling the flexible instantiation of loosely-coupled
      microservices and enhancing operational efficacy. However, optimizing the performance
      of container-based applications remains a challenge and a major topic in cloud
      research. This paper studies the impact of queue sorting in application scheduling,
      focused on complex inter-dependencies among microservices. Queue sorting determines
      the deployment order of containers in the infrastructure, typically based on
      container priorities and resource requests. Optimizing these algorithms directly
      influences scheduling efficiency and overall application performance. This paper
      compares several schedulers and sorting algorithms, leveraging extensive benchmark
      tests conducted on the widely-used Kubernetes (K8s) platform. The evaluation
      includes a novel sorting algorithm named Topological-Sort, designed to prioritize
      containers for application scheduling focused on microservice inter-dependencies.
      Results show the significant impact of queue sorting on application performance,
      with TopologicalSort algorithms outperforming default mechanisms, yielding an
      average increase of 20 % in throughput and reducing response time by at least
      15 %. These results highlight the importance of considering microservice inter-dependencies
      for effective application deployment in modern container-based environments.",
      "venue": "Conference on Network and Service Management", "year": 2023, "referenceCount":
      40, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2023-10-30",
      "journal": {"name": "2023 19th International Conference on Network and Service
      Management (CNSM)", "pages": "1-9"}, "citationStyles": {"bibtex": "@Article{Santos2023PerformanceIO,\n
      author = {Jos\u00e9 Santos and Miel Verkerken and Laurens D\u2019hooge and T.
      Wauters and B. Volckaert and F. Turck},\n booktitle = {Conference on Network
      and Service Management},\n journal = {2023 19th International Conference on
      Network and Service Management (CNSM)},\n pages = {1-9},\n title = {Performance
      Impact of Queue Sorting in Container-Based Application Scheduling},\n year =
      {2023}\n}\n"}, "authors": [{"authorId": "2115681922", "name": "Jos\u00e9 Santos"},
      {"authorId": "2221110373", "name": "Miel Verkerken"}, {"authorId": "1414010294",
      "name": "Laurens D\u2019hooge"}, {"authorId": "145115855", "name": "T. Wauters"},
      {"authorId": "1803683", "name": "B. Volckaert"}, {"authorId": "1715957", "name":
      "F. Turck"}]}, {"paperId": "4e6cb5375f6365ccd5dac0571829647a301e6055", "externalIds":
      {"MAG": "2885691948", "ArXiv": "1808.03753", "DBLP": "journals/corr/abs-1808-03753",
      "CorpusId": 51974812}, "corpusId": 51974812, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/4e6cb5375f6365ccd5dac0571829647a301e6055",
      "title": "MARVIN: An Open Machine Learning Corpus and Environment for Automated
      Machine Learning Primitive Annotation and Execution", "abstract": "In this demo
      paper, we introduce the DARPA D3M program for automatic machine learning (ML)
      and JPL''s MARVIN tool that provides an environment to locate, annotate, and
      execute machine learning primitives for use in ML pipelines. MARVIN is a web-based
      application and associated back-end interface written in Python that enables
      composition of ML pipelines from hundreds of primitives from the world of Scikit-Learn,
      Keras, DL4J and other widely used libraries. MARVIN allows for the creation
      of Docker containers that run on Kubernetes clusters within DARPA to provide
      an execution environment for automated machine learning. MARVIN currently contains
      over 400 datasets and challenge problems from a wide array of ML domains including
      routine classification and regression to advanced video/image classification
      and remote sensing.", "venue": "arXiv.org", "year": 2018, "referenceCount":
      17, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2018-08-11", "journal": {"name": "ArXiv", "volume": "abs/1808.03753"}, "citationStyles":
      {"bibtex": "@Article{Mattmann2018MARVINAO,\n author = {C. Mattmann and Sujen
      Shah and Brian Wilson},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title
      = {MARVIN: An Open Machine Learning Corpus and Environment for Automated Machine
      Learning Primitive Annotation and Execution},\n volume = {abs/1808.03753},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "1725551", "name": "C. Mattmann"},
      {"authorId": "19568137", "name": "Sujen Shah"}, {"authorId": "2070628403", "name":
      "Brian Wilson"}]}, {"paperId": "4e959f89eab1ff2779b3f4ea2ca9418096fa2d11", "externalIds":
      {"DBLP": "conf/ictc/LeeKC21a", "DOI": "10.1109/ICTC52510.2021.9621144", "CorpusId":
      244956331}, "corpusId": 244956331, "publicationVenue": {"id": "9aa57e01-2dc2-4422-93b7-2b628326f78c",
      "name": "Information and Communication Technology Convergence", "type": "conference",
      "alternate_names": ["International Conference on Information and Communication
      Technology Convergence", "Inf Commun Technol Converg", "Int Conf Inf Commun
      Technol Converg", "ICTC"]}, "url": "https://www.semanticscholar.org/paper/4e959f89eab1ff2779b3f4ea2ca9418096fa2d11",
      "title": "mIoTwins: Design and Evaluation of mIoT Framework for Private Edge
      Networks", "abstract": "In this paper, we proposed a massive IoT framework for
      private edge networks with Eclipse Hono/Ditto and Kubernetes. It features adaptation
      to heterogeneous IoT protocols and synchronization of status information of
      IoT devices to digital twins. To validate the performance of the proposed framework,
      we generated traffic comparable to the Mobile Robot use case presented by 3GPP.
      The experimental results confirmed the actual capacity of the Hono adapter and
      the Ditto connectivity component that could be used for capacity planning in
      private edge networks.", "venue": "Information and Communication Technology
      Convergence", "year": 2021, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2021-10-20", "journal": {"name": "2021 International Conference
      on Information and Communication Technology Convergence (ICTC)", "pages": "1882-1884"},
      "citationStyles": {"bibtex": "@Article{Lee2021mIoTwinsDA,\n author = {Junhee
      Lee and Sungjoo Kang and In-Geol Chun},\n booktitle = {Information and Communication
      Technology Convergence},\n journal = {2021 International Conference on Information
      and Communication Technology Convergence (ICTC)},\n pages = {1882-1884},\n title
      = {mIoTwins: Design and Evaluation of mIoT Framework for Private Edge Networks},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2108454728", "name": "Junhee
      Lee"}, {"authorId": "2802613", "name": "Sungjoo Kang"}, {"authorId": "2064701271",
      "name": "In-Geol Chun"}]}, {"paperId": "4ea92c54e510ef61a3cf25d144624de1d15afdb2",
      "externalIds": {"MAG": "2952374574", "DBLP": "conf/hotedge/ZhouWTD19", "CorpusId":
      196193755}, "corpusId": 196193755, "publicationVenue": {"id": "9cc7b942-db97-4c30-bfa9-44f51f7addeb",
      "name": "USENIX Workshop on Hot Topics in Edge Computing", "type": "conference",
      "alternate_names": ["HotEdge", "USENIX Workshop Hot Top Edge Comput"]}, "url":
      "https://www.semanticscholar.org/paper/4ea92c54e510ef61a3cf25d144624de1d15afdb2",
      "title": "Distributing Deep Neural Networks with Containerized Partitions at
      the Edge", "abstract": "Deploying machine learning on edge devices is becoming
      increasingly important, driven by new applications such as smart homes, smart
      cities, and autonomous vehicles. Unfortunately, it is challenging to deploy
      deep neural networks (DNNs) on resource-constrained devices. These workloads
      are computationally intensive and often require cloud-like resources. Prior
      solutions attempted to address these challenges by either sacrificing accuracy
      or by relying on cloud resources for assistance. In this paper, we propose a
      containerized partition-based runtime adaptive convolutional neural network
      (CNN) acceleration framework for Internet of Things (IoT) environments. The
      framework leverages spatial partitioning techniques through convolution layer
      fusion to dynamically select the optimal partition according to the availability
      of computational resources and network conditions. By containerizing each partition,
      we simplify the model update and deployment with Docker and Kubernetes to efficiently
      handle runtime resource management and scheduling of containers.", "venue":
      "USENIX Workshop on Hot Topics in Edge Computing", "year": 2019, "referenceCount":
      26, "citationCount": 57, "influentialCitationCount": 8, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Article{Zhou2019DistributingDN,\n author
      = {Li Zhou and Hao Wen and R. Teodorescu and D. Du},\n booktitle = {USENIX Workshop
      on Hot Topics in Edge Computing},\n title = {Distributing Deep Neural Networks
      with Containerized Partitions at the Edge},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "2116635379", "name": "Li Zhou"}, {"authorId": "2075348460", "name":
      "Hao Wen"}, {"authorId": "3084320", "name": "R. Teodorescu"}, {"authorId": "145804199",
      "name": "D. Du"}]}, {"paperId": "4ed436701b1741ba373518b8450872b1872d8259",
      "externalIds": {"DOI": "10.1007/s11334-023-00548-9", "CorpusId": 267533287},
      "corpusId": 267533287, "publicationVenue": {"id": "a8bb8488-3e7d-4741-baad-24cc574b5336",
      "name": "Innovations in Systems and Software Engineering", "type": "journal",
      "alternate_names": ["Innov Syst Softw Eng"], "issn": "1614-5046", "url": "https://www.springer.com/computer/swe/journal/11334",
      "alternate_urls": ["https://link.springer.com/journal/11334", "http://www.springer.com/computer/swe/journal/11334"]},
      "url": "https://www.semanticscholar.org/paper/4ed436701b1741ba373518b8450872b1872d8259",
      "title": "A holistic approach to environmentally sustainable computing", "abstract":
      null, "venue": "Innovations in Systems and Software Engineering", "year": 2024,
      "referenceCount": 36, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://link.springer.com/content/pdf/10.1007/s11334-023-00548-9.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Environmental Science", "source": "s2-fos-model"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2024-02-06", "journal":
      {"name": "Innovations in Systems and Software Engineering"}, "citationStyles":
      {"bibtex": "@Article{Pazienza2024AHA,\n author = {Andrea Pazienza and Giovanni
      Baselli and Daniele Carlo Vinci and Maria Vittoria Trussoni},\n booktitle =
      {Innovations in Systems and Software Engineering},\n journal = {Innovations
      in Systems and Software Engineering},\n title = {A holistic approach to environmentally
      sustainable computing},\n year = {2024}\n}\n"}, "authors": [{"authorId": "2283211088",
      "name": "Andrea Pazienza"}, {"authorId": "2283210907", "name": "Giovanni Baselli"},
      {"authorId": "2283211215", "name": "Daniele Carlo Vinci"}, {"authorId": "2283211106",
      "name": "Maria Vittoria Trussoni"}]}, {"paperId": "4ee5bf1be6319d34729157de063f9977f2a72b09",
      "externalIds": {"DOI": "10.1109/eStream53087.2021.9431489", "CorpusId": 235077512},
      "corpusId": 235077512, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4ee5bf1be6319d34729157de063f9977f2a72b09",
      "title": "On Recent Advances on Stateful Orchestrated Container Reliability",
      "abstract": "Thanks to its flexibility and light weight, containers are becoming
      the primary platform to run microservices. Container orchestration frameworks
      - like Kubernetes or Docker Swarm - enable companies to stay on competitive
      edge by keeping the velocity of code deploys high. While containers are ideal
      for stateless workloads, using orchestrated containers for stateful services
      is also an option. Being a commodity and crucial to any business, state or,
      in other words, data has to be protected and be available. This research raises
      questions on what the reliability challenges of running stateful microservices
      are, and what are the recent approaches to increase reliability of stateful
      services in orchestrated container systems. A literature review was performed
      to answer the questions.", "venue": "2021 IEEE Open Conference of Electrical,
      Electronic and Information Sciences (eStream)", "year": 2021, "referenceCount":
      27, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference", "Review"], "publicationDate":
      "2021-04-22", "journal": {"name": "2021 IEEE Open Conference of Electrical,
      Electronic and Information Sciences (eStream)", "pages": "1-6"}, "citationStyles":
      {"bibtex": "@Conference{Pakrijauskas2021OnRA,\n author = {Kestutis Pakrijauskas
      and D. Ma\u017eeika},\n booktitle = {2021 IEEE Open Conference of Electrical,
      Electronic and Information Sciences (eStream)},\n journal = {2021 IEEE Open
      Conference of Electrical, Electronic and Information Sciences (eStream)},\n
      pages = {1-6},\n title = {On Recent Advances on Stateful Orchestrated Container
      Reliability},\n year = {2021}\n}\n"}, "authors": [{"authorId": "1658937752",
      "name": "Kestutis Pakrijauskas"}, {"authorId": "18128719", "name": "D. Ma\u017eeika"}]},
      {"paperId": "4efa529566b0f6de58dd4032b233e968c3d010d2", "externalIds": {"MAG":
      "3108911051", "DOI": "10.1007/978-1-4842-6494-2", "CorpusId": 227217793}, "corpusId":
      227217793, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4efa529566b0f6de58dd4032b233e968c3d010d2",
      "title": "Kubernetes: Preparing for the CKA and CKAD Certifications", "abstract":
      null, "venue": "", "year": 2021, "referenceCount": 6, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://link.springer.com/content/pdf/bfm%3A978-1-4842-6494-2%2F1",
      "status": "GREEN"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Education", "source": "s2-fos-model"}, {"category": "Business", "source": "s2-fos-model"}],
      "publicationTypes": ["Book"], "publicationDate": null, "journal": {"name": "Kubernetes"},
      "citationStyles": {"bibtex": "@Book{Martin2021KubernetesPF,\n author = {Philippe
      Martin},\n journal = {Kubernetes},\n title = {Kubernetes: Preparing for the
      CKA and CKAD Certifications},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "31242076", "name": "Philippe Martin"}]}, {"paperId": "4f005efd52334f68cace00980c69fba6326e79f8",
      "externalIds": {"DBLP": "conf/cloud/XiangLRJXGXSLLS23", "DOI": "10.1145/3620678.3624663",
      "CorpusId": 264899936}, "corpusId": 264899936, "publicationVenue": {"id": "d13e941e-4cac-4f1d-bdca-77d927e31f1b",
      "name": "ACM Symposium on Cloud Computing", "type": "conference", "alternate_names":
      ["System-on-Chip Conference", "ACM Symp Cloud Comput", "Syst Conf", "Symp Cloud
      Comput", "Annual IEEE International System-on-Chip Conference", "Symposium on
      Cloud Computing", "Annu IEEE Int Syst Conf", "SoCC"], "url": "http://www.ieee-socc.org/"},
      "url": "https://www.semanticscholar.org/paper/4f005efd52334f68cace00980c69fba6326e79f8",
      "title": "G\u00f6del: Unified Large-Scale Resource Management and Scheduling
      at ByteDance", "abstract": "Over the last few years, at ByteDance, our compute
      infrastructure scale has been expanding significantly due to expedited business
      growth. In this journey, to meet hyper-scale growth, some business groups resorted
      to managing their own compute infrastructure stack running different scheduling
      systems such as Kubernetes, YARN which created two major pain points: the increasing
      resource fragmentation across different business groups and the inadequate resource
      elasticity between workloads of different business priorities. Isolation across
      different business groups (and their compute infrastructure management) leads
      to inefficient compute resource utilization and prevents us from serving the
      business growth needs in the long run. To meet these challenges, we propose
      a resource management and scheduling system named G\u00f6del, which provides
      a unified compute infrastructure for all business groups to run their diverse
      workloads under a unified resource pool. It co-locates various workloads on
      every machine to achieve better resource utilization and elasticity. G\u00f6del
      is built upon Kubernetes, the de facto open-source container orchestration system,
      but with significant components replaced or enhanced to accommodate various
      workloads at a large scale. In production, it manages clusters with tens of
      thousands of machines, achieves high overall resource utilization of over 60%,
      and scheduling throughput of up to 5000 pods per second. This paper reports
      on our design and implementation with G\u00f6del. Moreover, it discusses the
      lessons and best practices we learned in developing and operating it in production
      at ByteDance''s scale.", "venue": "ACM Symposium on Cloud Computing", "year":
      2023, "referenceCount": 30, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book"],
      "publicationDate": "2023-10-30", "journal": {"name": "Proceedings of the 2023
      ACM Symposium on Cloud Computing"}, "citationStyles": {"bibtex": "@Article{Xiang2023G\u00f6delUL,\n
      author = {Wu Xiang and Yakun Li and Yuquan Ren and Fan Jiang and Chaohui Xin
      and Varun Gupta and Chao Xiang and Xinyi Song and Meng Liu and Bing Li and Kaiyang
      Shao and Chen Xu and Wei Shao and Yuqi Fu and Wilson Wang and Cong Xu and Wei
      Xu and Caixue Lin and Rui Shi and Yuming Liang},\n booktitle = {ACM Symposium
      on Cloud Computing},\n journal = {Proceedings of the 2023 ACM Symposium on Cloud
      Computing},\n title = {G\u00f6del: Unified Large-Scale Resource Management and
      Scheduling at ByteDance},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2264095835",
      "name": "Wu Xiang"}, {"authorId": "2264927590", "name": "Yakun Li"}, {"authorId":
      "2264559863", "name": "Yuquan Ren"}, {"authorId": "2185373954", "name": "Fan
      Jiang"}, {"authorId": "2264106319", "name": "Chaohui Xin"}, {"authorId": "2264254224",
      "name": "Varun Gupta"}, {"authorId": "2264327971", "name": "Chao Xiang"}, {"authorId":
      "2265239853", "name": "Xinyi Song"}, {"authorId": "2264036182", "name": "Meng
      Liu"}, {"authorId": "2264709973", "name": "Bing Li"}, {"authorId": "2264177846",
      "name": "Kaiyang Shao"}, {"authorId": "2272208174", "name": "Chen Xu"}, {"authorId":
      "2263820425", "name": "Wei Shao"}, {"authorId": "2264220521", "name": "Yuqi
      Fu"}, {"authorId": "2108425944", "name": "Wilson Wang"}, {"authorId": "2271474342",
      "name": "Cong Xu"}, {"authorId": "2265180267", "name": "Wei Xu"}, {"authorId":
      "2116808158", "name": "Caixue Lin"}, {"authorId": "2056571982", "name": "Rui
      Shi"}, {"authorId": "2265221161", "name": "Yuming Liang"}]}, {"paperId": "4f043304f6769c7f86e768f9e256111b81a67216",
      "externalIds": {"DBLP": "conf/nof/BreitgandENRW21", "DOI": "10.1109/NoF52522.2021.9609908",
      "CorpusId": 244272289}, "corpusId": 244272289, "publicationVenue": {"id": "966ed49f-abb2-4051-a7e7-c966d9426b85",
      "name": "International Conference on Network of the Future", "type": "conference",
      "alternate_names": ["Int Conf Netw Future", "NoF", "NOF", "International Conference
      on Network of Future"]}, "url": "https://www.semanticscholar.org/paper/4f043304f6769c7f86e768f9e256111b81a67216",
      "title": "Toward True Cloud Native NFV MANO", "abstract": "The telecommunication
      industry is making a major shift towards cloud native Network Functions Virtualization.
      However, being cloud native implies more than just replacing Virtual Machines
      with containers. The cloud native approach changes the way virtual network functions
      are being composed, deployed, and configured as network services and how these
      services are being orchestrated and managed at run time. Traditional Network
      Management and Orchestration (MANO) frameworks are implemented via specialized
      engines that have been conceived prior to the cloud native era. Thus, they inherit
      many traits, which impede pivoting to cloud native. In this paper we focus on
      some fundamental challenges and propose a novel cloud native MANO architecture
      that exploits advantages of Kubernetes (K8s) a de facto industry standard for
      container orchestration.", "venue": "International Conference on Network of
      the Future", "year": 2021, "referenceCount": 27, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2021-10-06", "journal": {"name": "2021 12th International
      Conference on Network of the Future (NoF)", "pages": "1-5"}, "citationStyles":
      {"bibtex": "@Article{Breitgand2021TowardTC,\n author = {David Breitgand and
      Vadim Eisenberg and Nir Naaman and Nir Rozenbaum and A. Weit},\n booktitle =
      {International Conference on Network of the Future},\n journal = {2021 12th
      International Conference on Network of the Future (NoF)},\n pages = {1-5},\n
      title = {Toward True Cloud Native NFV MANO},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2811236", "name": "David Breitgand"}, {"authorId": "34547133",
      "name": "Vadim Eisenberg"}, {"authorId": "36135256", "name": "Nir Naaman"},
      {"authorId": "2120385033", "name": "Nir Rozenbaum"}, {"authorId": "2949715",
      "name": "A. Weit"}]}, {"paperId": "4f10f008bebd4aed1d7f01f6b51facbdbe7b79dd",
      "externalIds": {"DBLP": "conf/closer/MarcheseT22", "DOI": "10.5220/0011049300003200",
      "CorpusId": 248625273}, "corpusId": 248625273, "publicationVenue": {"id": "229ff272-1128-48a4-94eb-2ea4041eadff",
      "name": "International Conference on Cloud Computing and Services Science",
      "type": "conference", "alternate_names": ["CLOSER", "Int Conf Cloud Comput Serv
      Sci"], "url": "http://closer.scitevents.org/"}, "url": "https://www.semanticscholar.org/paper/4f10f008bebd4aed1d7f01f6b51facbdbe7b79dd",
      "title": "Communication Aware Scheduling of Microservices-based Applications
      on Kubernetes Clusters", "abstract": null, "venue": "International Conference
      on Cloud Computing and Services Science", "year": 2022, "referenceCount": 0,
      "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "190-198"}, "citationStyles": {"bibtex": "@Article{Marchese2022CommunicationAS,\n
      author = {Angelo Marchese and O. Tomarchio},\n booktitle = {International Conference
      on Cloud Computing and Services Science},\n pages = {190-198},\n title = {Communication
      Aware Scheduling of Microservices-based Applications on Kubernetes Clusters},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2106438773", "name": "Angelo
      Marchese"}, {"authorId": "1725309", "name": "O. Tomarchio"}]}, {"paperId": "4f1a80c1c999e3363071db61eccdbda0f73474dd",
      "externalIds": {"DOI": "10.33395/sinkron.v7i3.11522", "CorpusId": 251561854},
      "corpusId": 251561854, "publicationVenue": {"id": "d0d49d6f-212a-445d-a93a-87a97f150ec2",
      "name": "SinkrOn", "type": "journal", "issn": "2541-044X", "alternate_issns":
      ["2541-2019"], "url": "https://jurnal.polgan.ac.id/index.php/sinkron"}, "url":
      "https://www.semanticscholar.org/paper/4f1a80c1c999e3363071db61eccdbda0f73474dd",
      "title": "Api Service Infrastructure Using Kubernetes And Terraform Based On
      Microservices Ngoorder.Id", "abstract": "The growing number of ngorder.id service
      users causes traffic to Api Ngorder to be higher, so a new infrastructure is
      needed in order to maintain Api Ngorder uptime during high traffic and also
      maintain service stability. In the implementation process, Api scripts that
      are currently running on a monolith cluster will be divided into several categories
      and will be split into several kubernetes clusters. To support autoscale, a
      Horizontal Pod Autoscaler was added, and to route traffic it would use the Api
      Gateway from Amazon Web Service. In this infrastructure test, it is done by
      testing the logic script function using Katalon Studio and testing at the infrastructure
      level by doing a crash test in the form of failing to deploy and terminating
      the pod, as well as performing a stress test to test autoscaling in the cluster,
      the entire test can be run by performing a stress test on the php service pods.
      by setting the autoscaler parameter Memory Utilization Percentage 125%, 150%
      and 250%, proving that the HorizontalPodAutoscaler (HPA) as an autoscaler handler
      can function according to the targets and parameters that have been determined.",
      "venue": "SinkrOn", "year": 2022, "referenceCount": 19, "citationCount": 1,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://jurnal.polgan.ac.id/index.php/sinkron/article/download/11522/991",
      "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2022-07-30",
      "journal": {"name": "SinkrOn"}, "citationStyles": {"bibtex": "@Article{Habibi2022ApiSI,\n
      author = {A. Habibi},\n booktitle = {SinkrOn},\n journal = {SinkrOn},\n title
      = {Api Service Infrastructure Using Kubernetes And Terraform Based On Microservices
      Ngoorder.Id},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2061642070",
      "name": "A. Habibi"}]}, {"paperId": "4f3363ec6a68063c6f60e7729897e4c95e640dbd",
      "externalIds": {"MAG": "2889698016", "DBLP": "conf/netsoft/FreitasBCMRCC18",
      "DOI": "10.1109/NETSOFT.2018.8459990", "CorpusId": 51990663}, "corpusId": 51990663,
      "publicationVenue": {"id": "8d051ed1-e691-49d8-8a57-d7b4a76c4352", "name": "IEEE
      Conference on Network Softwarization", "type": "conference", "alternate_names":
      ["IEEE Conf Netw Softwarization", "NetSoft"]}, "url": "https://www.semanticscholar.org/paper/4f3363ec6a68063c6f60e7729897e4c95e640dbd",
      "title": "Slicing and Allocation of Transformable Resources for the Deployment
      of Multiple Virtualized Infrastructure Managers (VIMs)", "abstract": "In the
      context of 5G networks, the concept of network slicing allows network providers
      to flexibly share infrastructures with mobile service providers and verticals.
      While this concept has been widely investigated considering mostly the network
      issues, in this work we focus on a slice as a service model that takes into
      account the data center (DC) perspective. In particular, we propose an architecture
      where DC slices are created over transformable (compute and storage) resources,
      which can be virtualized or de-virtualized on-demand. Then, on top of each slice,
      an on-demand VIM is instantiated to control the allocated resources. As a realization
      of this architecture, we introduce the DC Slice Controller, a system able to
      deploy and delivery full operational VIMs based on generic templates. We evaluate
      the effectiveness of the proposed system deploying three VIMs (VLSP, Kubernetes,
      and OpenStack) over commodity hardware. Experimental results show that the DC
      Slice Controller can timely provide a slice even when dealing with sophisticated
      VIMs such as OpenStack. As an example, we were able to delivery a fully functional
      OpenStack in four nodes in less than 10 minutes.", "venue": "IEEE Conference
      on Network Softwarization", "year": 2018, "referenceCount": 26, "citationCount":
      17, "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://discovery.ucl.ac.uk/10076033/7/Clayman_Slicing%20and%20Allocation%20of%20Transformable%20Resources%20for%20the%20Deployment%20of%20Multiple%20Virtualized%20Infrastructure%20Managers%20%28VIMs%29_AAM.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2018-06-01",
      "journal": {"name": "2018 4th IEEE Conference on Network Softwarization and
      Workshops (NetSoft)", "pages": "424-432"}, "citationStyles": {"bibtex": "@Article{Freitas2018SlicingAA,\n
      author = {L. A. Freitas and Vin\u00edcius G. Braga and S. Correa and L. Mamatas
      and Christian Esteve Rothenberg and S. Clayman and K. Cardoso},\n booktitle
      = {IEEE Conference on Network Softwarization},\n journal = {2018 4th IEEE Conference
      on Network Softwarization and Workshops (NetSoft)},\n pages = {424-432},\n title
      = {Slicing and Allocation of Transformable Resources for the Deployment of Multiple
      Virtualized Infrastructure Managers (VIMs)},\n year = {2018}\n}\n"}, "authors":
      [{"authorId": "22622815", "name": "L. A. Freitas"}, {"authorId": "32409733",
      "name": "Vin\u00edcius G. Braga"}, {"authorId": "143970316", "name": "S. Correa"},
      {"authorId": "2176645", "name": "L. Mamatas"}, {"authorId": "2797716", "name":
      "Christian Esteve Rothenberg"}, {"authorId": "3128593", "name": "S. Clayman"},
      {"authorId": "3215994", "name": "K. Cardoso"}]}, {"paperId": "4fa5ca2b9caeb670717401684245134e555decea",
      "externalIds": {"MAG": "3049665468", "DBLP": "conf/netsoft/HiraiTSY20", "DOI":
      "10.1109/netsoft48620.2020.9165343", "CorpusId": 221119666}, "corpusId": 221119666,
      "publicationVenue": {"id": "8d051ed1-e691-49d8-8a57-d7b4a76c4352", "name": "IEEE
      Conference on Network Softwarization", "type": "conference", "alternate_names":
      ["IEEE Conf Netw Softwarization", "NetSoft"]}, "url": "https://www.semanticscholar.org/paper/4fa5ca2b9caeb670717401684245134e555decea",
      "title": "Automated Provisioning of Cloud-Native Network Functions in Multi-Cloud
      Environments", "abstract": "Cloud-native Network Functions (CNFs), which are
      an advanced form of Virtualized Network Functions (VNFs), are expected to optimize
      network slicing and make the development and deployment cycle of network services
      faster than VNFs by using a container-based microservices architecture. However,
      to satisfy the requirements for high reliability and performance assurance unique
      to network services, additional functions specific to the Kubernetes-based CNF
      platform are required. In this demonstration, we propose an automated CNF provisioning
      engine that optimizes the hardware resources of CNFs in multi-cloud environments
      on the basis of performance prediction and demonstrate its effectiveness by
      implementing it on Kubernetes as a core function of the future CNF platform.",
      "venue": "IEEE Conference on Network Softwarization", "year": 2020, "referenceCount":
      3, "citationCount": 8, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2020-06-01",
      "journal": {"name": "2020 6th IEEE Conference on Network Softwarization (NetSoft)",
      "pages": "1-3"}, "citationStyles": {"bibtex": "@Article{Hirai2020AutomatedPO,\n
      author = {Shiku Hirai and Takuya Tojo and S. Seto and S. Yasukawa},\n booktitle
      = {IEEE Conference on Network Softwarization},\n journal = {2020 6th IEEE Conference
      on Network Softwarization (NetSoft)},\n pages = {1-3},\n title = {Automated
      Provisioning of Cloud-Native Network Functions in Multi-Cloud Environments},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "104144914", "name": "Shiku Hirai"},
      {"authorId": "1813576", "name": "Takuya Tojo"}, {"authorId": "2224615", "name":
      "S. Seto"}, {"authorId": "2260043", "name": "S. Yasukawa"}]}, {"paperId": "4fa63dda4b6c928d7784b17e1a8f2c5e44de8bea",
      "externalIds": {"MAG": "2980130103", "CorpusId": 208128731}, "corpusId": 208128731,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4fa63dda4b6c928d7784b17e1a8f2c5e44de8bea",
      "title": "Cloud Native DevOps mit Kubernetes", "abstract": null, "venue": "",
      "year": 2019, "referenceCount": 0, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"}],
      "publicationTypes": null, "publicationDate": "2019-09-02", "journal": {"name":
      "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Arundel2019CloudND,\n
      author = {J. Arundel and Justin Domingus},\n title = {Cloud Native DevOps mit
      Kubernetes},\n year = {2019}\n}\n"}, "authors": [{"authorId": "119891945", "name":
      "J. Arundel"}, {"authorId": "1418344889", "name": "Justin Domingus"}]}, {"paperId":
      "4faa0d2106b7776f87e52f8409c61ea4f0882be1", "externalIds": {"PubMedCentral":
      "10058403", "DOI": "10.3390/mi14030651", "CorpusId": 257539952, "PubMed": "36985058"},
      "corpusId": 257539952, "publicationVenue": {"id": "8ecc7f6b-513e-420d-9531-255b48a99a8a",
      "name": "Micromachines", "type": "journal", "issn": "2072-666X", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-165882",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-165882",
      "https://www.mdpi.com/journal/micromachines"]}, "url": "https://www.semanticscholar.org/paper/4faa0d2106b7776f87e52f8409c61ea4f0882be1",
      "title": "K8sSim: A Simulation Tool for Kubernetes Schedulers and Its Applications
      in Scheduling Algorithm Optimization", "abstract": "In recent years, Kubernetes
      (K8s) has become a dominant resource management and scheduling system in the
      cloud. In practical scenarios, short-running cloud workloads are usually scheduled
      through different scheduling algorithms provided by Kubernetes. For example,
      artificial intelligence (AI) workloads are scheduled through different Volcano
      scheduling algorithms, such as GANG_MRP, GANG_LRP, and GANG_BRA. One key challenge
      is that the selection of scheduling algorithms has considerable impacts on job
      performance results. However, it takes a prohibitively long time to select the
      optimal algorithm because applying one algorithm in one single job may take
      a few minutes to complete. This poses the urgent requirement of a simulator
      that can quickly evaluate the performance impacts of different algorithms, while
      also considering scheduling-related factors, such as cluster resources, job
      structures and scheduler configurations. In this paper, we design and implement
      a Kubernetes simulator called K8sSim, which incorporates typical Kubernetes
      and Volcano scheduling algorithms for both generic and AI workloads, and provides
      an accurate simulation of their scheduling process in real clusters. We use
      real cluster traces from Alibaba to evaluate the effectiveness of K8sSim, and
      the evaluation results show that (i) compared to the real cluster, K8sSim can
      accurately evaluate the performance of different scheduling algorithms with
      similar CloseRate (a novel metric we define to intuitively show the simulation
      accuracy), and (ii) it can also quickly obtain the scheduling results of different
      scheduling algorithms by accelerating the scheduling time by an average of 38.56\u00d7.",
      "venue": "Micromachines", "year": 2023, "referenceCount": 35, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.mdpi.com/2072-666X/14/3/651/pdf?version=1678767805", "status":
      "GOLD"}, "fieldsOfStudy": ["Medicine"], "s2FieldsOfStudy": [{"category": "Medicine",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-03-01", "journal":
      {"name": "Micromachines", "volume": "14"}, "citationStyles": {"bibtex": "@Article{Wen2023K8sSimAS,\n
      author = {Shilin Wen and Rui Han and K. Qiu and Xiaoxin Ma and Zeqing Li and
      Hongjie Deng and C. Liu},\n booktitle = {Micromachines},\n journal = {Micromachines},\n
      title = {K8sSim: A Simulation Tool for Kubernetes Schedulers and Its Applications
      in Scheduling Algorithm Optimization},\n volume = {14},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "48242595", "name": "Shilin Wen"}, {"authorId": "2066468959",
      "name": "Rui Han"}, {"authorId": "65729817", "name": "K. Qiu"}, {"authorId":
      "2115722012", "name": "Xiaoxin Ma"}, {"authorId": "2211678185", "name": "Zeqing
      Li"}, {"authorId": "2188322579", "name": "Hongjie Deng"}, {"authorId": "144212455",
      "name": "C. Liu"}]}, {"paperId": "4fc7185bc7cc01fe443cdef3cd1cd43598e45254",
      "externalIds": {"MAG": "3095995204", "DBLP": "conf/ccsw-ws/ShringarputaleM20",
      "DOI": "10.1145/3411495.3421357", "CorpusId": 226254972}, "corpusId": 226254972,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4fc7185bc7cc01fe443cdef3cd1cd43598e45254",
      "title": "Co-residency Attacks on Containers are Real", "abstract": "Public
      clouds are inherently multi-tenant: applications deployed by different parties
      (including malicious ones) may reside on the same physical machines and share
      various hardware resources. With the introduction of newer hypervisors, containerization
      frameworks like Docker, and managed/orchestrated clusters using systems like
      Kubernetes, cloud providers downplay the feasibility of co-tenant attacks by
      marketing a belief that applications do not operate on shared hardware. In this
      paper, we challenge the conventional wisdom that attackers cannot confirm co-residency
      with a victim application from inside state-of-the-art containers running on
      virtual machines. We analyze the degree of vulnerability present in containers
      running on various systems including within a broad range of commercially utilized
      orchestrators. Our results show that on commercial cloud environments including
      AWS and Azure, we can obtain over 90% success rates for co-residency detection
      using real-life workloads. Our investigation confirms that co-residency attacks
      are a significant concern on containers running on modern orchestration systems.",
      "venue": "CCSW@CCS", "year": 2020, "referenceCount": 41, "citationCount": 13,
      "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"], "publicationDate":
      "2020-11-09", "journal": {"name": "Proceedings of the 2020 ACM SIGSAC Conference
      on Cloud Computing Security Workshop"}, "citationStyles": {"bibtex": "@Book{Shringarputale2020CoresidencyAO,\n
      author = {S. Shringarputale and P. Mcdaniel and Kevin R. B. Butler and T. L.
      Porta},\n booktitle = {CCSW@CCS},\n journal = {Proceedings of the 2020 ACM SIGSAC
      Conference on Cloud Computing Security Workshop},\n title = {Co-residency Attacks
      on Containers are Real},\n year = {2020}\n}\n"}, "authors": [{"authorId": "101489475",
      "name": "S. Shringarputale"}, {"authorId": "144061974", "name": "P. Mcdaniel"},
      {"authorId": "1784947", "name": "Kevin R. B. Butler"}, {"authorId": "145063891",
      "name": "T. L. Porta"}]}, {"paperId": "5009b205d940e92f392448b3ba53ebdc8e632b4d",
      "externalIds": {"MAG": "3003858201", "DOI": "10.5335/RBCA.V12I3.10993", "CorpusId":
      213324569}, "corpusId": 213324569, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5009b205d940e92f392448b3ba53ebdc8e632b4d",
      "title": "An\u00e1lise de desempenho de Rolling Updates do Kubernetes em ambientes
      de estresse", "abstract": "Este trabalho visa analisar o desempenho de Rolling
      Updates do Kubernetes em ambientes com diferentes tipos de estresse nas maquinas
      do cluster. Alem disso, buscou-se veri\ufb01car o impacto que tal estresse durante
      a atualizacao gerou para os usuarios dos servicos instanciados no sistema. Para
      isto, foram propostos ambientes de testes, cenarios possiveis e par\u00e2metros
      a serem alterados para a coleta de dados. Apos a exposicao dos dados coletados,
      foi realizada uma analise dos resultados obtidos, e uma discussao sobre o impacto
      que os tipos de estresse aplicados num sistema podem gerar no momento de uma
      atualizacao.", "venue": "", "year": 2020, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Physics"], "s2FieldsOfStudy": [{"category": "Physics", "source":
      "external"}], "publicationTypes": null, "publicationDate": "2020-08-08", "journal":
      {"name": "", "pages": "70-84", "volume": "12"}, "citationStyles": {"bibtex":
      "@Inproceedings{Vassoler2020An\u00e1liseDD,\n author = {Gabriel Vassoler and
      Marco Aur\u00e9lio Spohn},\n pages = {70-84},\n title = {An\u00e1lise de desempenho
      de Rolling Updates do Kubernetes em ambientes de estresse},\n volume = {12},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "1579622309", "name": "Gabriel
      Vassoler"}, {"authorId": "2075983534", "name": "Marco Aur\u00e9lio Spohn"}]},
      {"paperId": "5012d213f9dfb0c330e326dd4c25f863fd777696", "externalIds": {"DBLP":
      "journals/access/FloraGTA22", "DOI": "10.1109/ACCESS.2022.3231191", "CorpusId":
      255031083}, "corpusId": 255031083, "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26",
      "name": "IEEE Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/5012d213f9dfb0c330e326dd4c25f863fd777696",
      "title": "A Study on the Aging and Fault Tolerance of Microservices in Kubernetes",
      "abstract": "Microservice-based applications are increasingly being adopted
      along with cloud service models, and nowadays serve millions of customers daily.
      They are supported by container-based architectures which are managed by orchestration
      platforms, such as Kubernetes, that monitor, manage, and automate most of the
      tasks. Although these tools provide failover capabilities, it is not yet studied
      how effective they are in dealing with diverse types of faults. Fault injection
      is an effective methodology for validating components that are supposed to detect
      the malfunctions and report/correct them. This paper studies the effectiveness
      of Kubernetes in dealing with faults and aging in microservices, and on the
      possibility of using faults to accelerate aging effects for testing purposes.
      For this, we conducted an analysis of the implementation and tuning of Kubernetes
      probes, followed by experiments with varying load and fault injection into two
      distinct and representative microservice testbeds to analyze the capacity of
      probes in detecting issues in applications. The goal is to improve the knowledge
      of researchers and developers on whether Kubernetes can detect different faults
      and aging issues. Also, even though some services tend to accumulate aging effects,
      with increasing resource consumption, Kubernetes does not detect them nor acts
      on them, indicating that probes may be insufficient for aging scenarios. Results
      also showed that fault injection is useful to accelerate aging effects for the
      testing and evaluation purposes.", "venue": "IEEE Access", "year": 2022, "referenceCount":
      37, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/6287639/6514899/09996355.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "IEEE Access", "pages": "132786-132799", "volume": "10"}, "citationStyles":
      {"bibtex": "@Article{Flora2022ASO,\n author = {Jos\u00e9 Flora and Paulo Gon\u00e7alves
      and Miguel Teixeira and Nuno Antunes},\n booktitle = {IEEE Access},\n journal
      = {IEEE Access},\n pages = {132786-132799},\n title = {A Study on the Aging
      and Fault Tolerance of Microservices in Kubernetes},\n volume = {10},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "1404326007", "name": "Jos\u00e9 Flora"},
      {"authorId": "2154381985", "name": "Paulo Gon\u00e7alves"}, {"authorId": "2146855534",
      "name": "Miguel Teixeira"}, {"authorId": "143725286", "name": "Nuno Antunes"}]},
      {"paperId": "504ef73fa65b3b375fc56a018d1a564810117e4f", "externalIds": {"DBLP":
      "conf/esocc/MuntoniSB20", "DOI": "10.1007/978-3-030-71906-7_9", "CorpusId":
      232289023}, "corpusId": 232289023, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/504ef73fa65b3b375fc56a018d1a564810117e4f",
      "title": "Mining the Architecture of Microservice-Based Applications from their
      Kubernetes Deployment", "abstract": null, "venue": "ESOCC Workshops", "year":
      2020, "referenceCount": 9, "citationCount": 10, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"pages": "103-115"}, "citationStyles": {"bibtex": "@Article{Muntoni2020MiningTA,\n
      author = {Giuseppe Muntoni and J. Soldani and Antonio Brogi},\n booktitle =
      {ESOCC Workshops},\n pages = {103-115},\n title = {Mining the Architecture of
      Microservice-Based Applications from their Kubernetes Deployment},\n year =
      {2020}\n}\n"}, "authors": [{"authorId": "2055765812", "name": "Giuseppe Muntoni"},
      {"authorId": "2265546", "name": "J. Soldani"}, {"authorId": "1787701", "name":
      "Antonio Brogi"}]}, {"paperId": "508915e3b93bdf98f4604c7c9ad626ef8a173876",
      "externalIds": {"DBLP": "conf/csndsp/LeiterHGLSKB22", "DOI": "10.1109/CSNDSP54353.2022.9908059",
      "CorpusId": 252756775}, "corpusId": 252756775, "publicationVenue": {"id": "a5260579-a1c2-45e6-ac07-37d8f6b3f8bd",
      "name": "International Symposium on Communication Systems, Networks and Digital
      Signal Processing", "type": "conference", "alternate_names": ["CSNDSP", "Int
      Symp Commun Syst Netw Digit Signal Process", "Commun Syst Netw Digit Signal
      Process", "Communication Systems Networks and Digital Signal Processing"], "url":
      "http://www.wikicfp.com/cfp/program?id=608"}, "url": "https://www.semanticscholar.org/paper/508915e3b93bdf98f4604c7c9ad626ef8a173876",
      "title": "Cloud-native IP-based mobility management: a MIPv6 Home Agent standalone
      microservice design", "abstract": "The ever-increasing traffic and mobility
      events impose an unprecedented load on mobile networks. Meanwhile, the number
      of connected users and devices has been growing continuously; hence IPv6 is
      necessary to serve them. The mobility extension of IPv6 (Mobile IPv6) can also
      support and handle the rising demand for mobility management in the IP layer.
      At the same time, concepts like Network Function Virtualization, Software Defined
      Networks, and microservice architectures have changed the landscape of telecommunication
      services. In this paper, our prototype implementation is measured and evaluated:
      what containerization causes in case of different MIPv6-re1ated traffic types
      on the top of Kubernetes. Additionally, Kubernetes Container Network Interface
      types are compared for a microservice and container-based standalone Home Agent
      entity of a cloud-native Mobile IPv6 implementation.", "venue": "International
      Symposium on Communication Systems, Networks and Digital Signal Processing",
      "year": 2022, "referenceCount": 30, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2022-07-20", "journal": {"name": "2022 13th International Symposium on Communication
      Systems, Networks and Digital Signal Processing (CSNDSP)", "pages": "252-257"},
      "citationStyles": {"bibtex": "@Article{Leiter2022CloudnativeIM,\n author = {\u00c1kos
      Leiter and D\u00e1niel Huszti and N\u00e1ndor Galambosi and Edina Lami and Mohamad
      Saleh Salah and P\u00e9ter Kulics and L. Bokor},\n booktitle = {International
      Symposium on Communication Systems, Networks and Digital Signal Processing},\n
      journal = {2022 13th International Symposium on Communication Systems, Networks
      and Digital Signal Processing (CSNDSP)},\n pages = {252-257},\n title = {Cloud-native
      IP-based mobility management: a MIPv6 Home Agent standalone microservice design},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "51899499", "name": "\u00c1kos
      Leiter"}, {"authorId": "2187169050", "name": "D\u00e1niel Huszti"}, {"authorId":
      "8696426", "name": "N\u00e1ndor Galambosi"}, {"authorId": "2169672838", "name":
      "Edina Lami"}, {"authorId": "2180860414", "name": "Mohamad Saleh Salah"}, {"authorId":
      "2178508412", "name": "P\u00e9ter Kulics"}, {"authorId": "1709324", "name":
      "L. Bokor"}]}, {"paperId": "50ba960b2df697b3a612a823a7ac08d7eddca426", "externalIds":
      {"DBLP": "conf/eurosys/WangFC21", "DOI": "10.1145/3437984.3458831", "CorpusId":
      233384402}, "corpusId": 233384402, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/50ba960b2df697b3a612a823a7ac08d7eddca426",
      "title": "Predicting CPU usage for proactive autoscaling", "abstract": "Private
      and public clouds require users to specify requests for resources such as CPU
      and memory (RAM) to be provisioned for their applications. The values of these
      requests do not necessarily relate to the application''s run-time requirements,
      but only help the cloud infrastructure resource manager to map requested resources
      to physical resources. If an application exceeds these values, it might be throttled
      or even terminated. As a consequence, requested values are often overestimated,
      resulting in poor resource utilization in the cloud infrastructure. Autoscaling
      is a technique used to overcome these problems. We observed that Kubernetes
      Vertical Pod Autoscaler (VPA) might be using an autoscaling strategy that performs
      poorly on workloads that periodically change. Our experimental results show
      that compared to VPA, predictive methods based on Holt-Winters exponential smoothing
      (HW) and Long Short-Term Memory (LSTM) can decrease CPU slack by over 40% while
      avoiding CPU insufficiency for various CPU workloads. Furthermore, LSTM has
      been shown to generate stabler predictions compared to that of HW, which allowed
      for more robust scaling decisions.", "venue": "EuroMLSys@EuroSys", "year": 2021,
      "referenceCount": 28, "citationCount": 10, "influentialCitationCount": 2, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book"], "publicationDate": "2021-04-26", "journal": {"name": "Proceedings of
      the 1st Workshop on Machine Learning and Systems"}, "citationStyles": {"bibtex":
      "@Article{Wang2021PredictingCU,\n author = {Thomas Wang and Simone Ferlin Oliveira
      and Marco Chiesa},\n booktitle = {EuroMLSys@EuroSys},\n journal = {Proceedings
      of the 1st Workshop on Machine Learning and Systems},\n title = {Predicting
      CPU usage for proactive autoscaling},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2115978610", "name": "Thomas Wang"}, {"authorId": "2768856", "name": "Simone
      Ferlin Oliveira"}, {"authorId": "48242253", "name": "Marco Chiesa"}]}, {"paperId":
      "50d3b9844d949bae37810dea1beed05e28365f6f", "externalIds": {"MAG": "3202292173",
      "DOI": "10.5753/sbseg_estendido.2021.17349", "CorpusId": 244204575}, "corpusId":
      244204575, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/50d3b9844d949bae37810dea1beed05e28365f6f",
      "title": "An\u00e1lise de seguran\u00e7a dos orquestradores Kubernetes, Docker
      Swarm e Apache Mesos baseada no CVE / MITRE", "abstract": "O uso de cont\u00eaineres
      est\u00e1 crescendo expressivamente nos\u00faltimos anos. Aplica\u00e7\u00f5es
      conteinerizadas consistem em uma quantidade expressiva de cont\u00eaineres que
      necessita ser gerenciada. Neste contexto, a orquestra\u00e7\u00e3o de cont\u00eaineres
      \u00e9 essencial para que aplica\u00e7\u00f5es possam ter seus cont\u00eaineres
      administrados eficientemente. Entretanto, os orquestradores trazem novos elementos
      que podem introduzir novas vulnerabilidades. Assim, uma an\u00e1lise de aspectos
      de seguran\u00e7a dos orquestradores \u00e9 essencial. Este artigo faz uma an\u00e1lise
      de seguran\u00e7a nos tr\u00eas principais orquestradores: Docker Swarm, Kubernetes
      e Apache Mesos. A an\u00e1lise \u00e9 baseada em dados dos reposit\u00f3rio
      das CVEs que s\u00e3o correlacionadas com as principais amea\u00e7as relacionadas
      pelo MITRE. Como resultado \u00e9 apresentada uma matriz que correlaciona as
      CVEs com as amea\u00e7as MITRE, indicando os principais impactos que devem ser
      considerados na mitiga\u00e7\u00e3o dos riscos.", "venue": "Anais Estendidos
      do XXI Simp\u00f3sio Brasileiro de Seguran\u00e7a da Informa\u00e7\u00e3o e
      de Sistemas Computacionais (SBSeg Estendido 2021)", "year": 2021, "referenceCount":
      28, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      null, "publicationDate": "2021-10-04", "journal": {"name": "Anais Estendidos
      do XXI Simp\u00f3sio Brasileiro de Seguran\u00e7a da Informa\u00e7\u00e3o e
      de Sistemas Computacionais (SBSeg Estendido 2021)"}, "citationStyles": {"bibtex":
      "@Article{Jensen2021An\u00e1liseDS,\n author = {Nikolas Jensen and C. Miers},\n
      booktitle = {Anais Estendidos do XXI Simp\u00f3sio Brasileiro de Seguran\u00e7a
      da Informa\u00e7\u00e3o e de Sistemas Computacionais (SBSeg Estendido 2021)},\n
      journal = {Anais Estendidos do XXI Simp\u00f3sio Brasileiro de Seguran\u00e7a
      da Informa\u00e7\u00e3o e de Sistemas Computacionais (SBSeg Estendido 2021)},\n
      title = {An\u00e1lise de seguran\u00e7a dos orquestradores Kubernetes, Docker
      Swarm e Apache Mesos baseada no CVE / MITRE},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2100558197", "name": "Nikolas Jensen"}, {"authorId": "2035629156",
      "name": "C. Miers"}]}, {"paperId": "5117366fd8005948177e45f555c0410c52f713b4",
      "externalIds": {"DOI": "10.22323/1.378.0020", "CorpusId": 239556235}, "corpusId":
      239556235, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5117366fd8005948177e45f555c0410c52f713b4",
      "title": "Distributed filesystems (GPFS, CephFS and Lustre-ZFS) deployment on
      Kubernetes/Docker clusters", "abstract": "Nowadays Kubernetes has become a powerful
      tool to deploy and manage containerized applications. Modern datacenters need
      distributed \ufb01lesystems to provide user applications with access to stored
      data on a large number of nodes. The possibility to mount a distributed \ufb01lesystem
      and exploit its native application programming interfaces in a Docker container,
      combined with the advanced orchestration features provided by Kubernetes, may
      enhance \ufb02exibility in data man-agement, installation, running and monitoring
      of transfer services. Moreover, it would allow the execution of dedicated services
      on di\ufb00erent nodes, in isolated and automatically replicable environments,
      so to improve deployment e\ufb03ciency and fail-safeness. The goal of this work
      is to demonstrate the feasibility of using Kubernetes and Docker to setup clients
      capable to access a distributed \ufb01lesystem from existing clusters and to
      create clusters based on containerized servers. Despite being just a proof of
      concept, the e\ufb00ort has shown the possibility of using di\ufb00erent types
      of distributed \ufb01lesystems (GPFS, CephFS, Lustre-ZFS) with equally positive
      results.", "venue": "Proceedings of International Symposium on Grids & Clouds
      2021 \u2014 PoS(ISGC2021)", "year": 2021, "referenceCount": 1, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://pos.sissa.it/378/020/pdf", "status": "HYBRID"}, "fieldsOfStudy": null,
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2021-10-22", "journal": {"name": "Proceedings of International
      Symposium on Grids & Clouds 2021 \u2014 PoS(ISGC2021)"}, "citationStyles": {"bibtex":
      "@Article{Fornari2021DistributedF,\n author = {Federico Fornari and A. Cavalli
      and D. Cesini and A. Falabella and E. Fattibene and L. Morganti and A. Prosperini
      and V. Sapunenko},\n booktitle = {Proceedings of International Symposium on
      Grids & Clouds 2021 \u2014 PoS(ISGC2021)},\n journal = {Proceedings of International
      Symposium on Grids & Clouds 2021 \u2014 PoS(ISGC2021)},\n title = {Distributed
      filesystems (GPFS, CephFS and Lustre-ZFS) deployment on Kubernetes/Docker clusters},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2058387319", "name": "Federico
      Fornari"}, {"authorId": "152753179", "name": "A. Cavalli"}, {"authorId": "2641540",
      "name": "D. Cesini"}, {"authorId": "5482670", "name": "A. Falabella"}, {"authorId":
      "3274392", "name": "E. Fattibene"}, {"authorId": "3383078", "name": "L. Morganti"},
      {"authorId": "49486213", "name": "A. Prosperini"}, {"authorId": "2865271", "name":
      "V. Sapunenko"}]}, {"paperId": "5122b9b525f18a353f0a519e680a55c638ccbe41", "externalIds":
      {"ArXiv": "2108.03044", "DBLP": "journals/corr/abs-2108-03044", "CorpusId":
      236950433}, "corpusId": 236950433, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/5122b9b525f18a353f0a519e680a55c638ccbe41",
      "title": "Molecule Generation Experience: An Open Platform of Material Design
      for Public Users", "abstract": "Artificial Intelligence (AI)-driven material
      design has been attracting great attentions as a groundbreaking technology across
      a wide spectrum of industries. Molecular design is particularly important owing
      to its broad application domains and boundless creativity attributed to progresses
      in generative models. The recent maturity of molecular generative models has
      stimulated expectations for practical use among potential users, who are not
      necessarily familiar with coding or scripting, such as experimental engineers
      and students in chemical domains. However, most of the existing molecular generative
      models are Python libraries on GitHub, that are accessible for only IT-savvy
      users. To fill this gap, we newly developed a graphical user interface (GUI)-based
      web application of molecular generative models, Molecule Generation Experience,
      that is open to the general public. This is the first web application of molecular
      generative models enabling users to work with built-in datasets to carry out
      molecular design. In this paper, we describe the background technology extended
      from our previous work. Our new online evaluation and structural filtering algorithms
      significantly improved the generation speed by 30 to 1,000 times with a wider
      structural variety, satisfying chemical stability and synthetic reality. We
      also describe in detail our Kubernetes-based scalable cloud architecture and
      user-oriented GUI that are necessary components to achieve a public service.
      Finally, we present actual use cases in industrial research to design new photoacid
      generators (PAGs) as well as release cases in educational events.", "venue":
      "arXiv.org", "year": 2021, "referenceCount": 23, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Materials Science", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Chemistry", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-08-06", "journal":
      {"name": "ArXiv", "volume": "abs/2108.03044"}, "citationStyles": {"bibtex":
      "@Article{Takeda2021MoleculeGE,\n author = {Seiji Takeda and T. Hama and Hsiang-Han
      Hsu and Akihiro Kishimoto and Makoto Kogoh and Takumi Hongo and Kumiko Fujieda
      and Hideaki Nakashika and D. Zubarev and Daniel P. Sanders and J. Pitera and
      Junta Fuchiwaki and D. Nakano},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n
      title = {Molecule Generation Experience: An Open Platform of Material Design
      for Public Users},\n volume = {abs/2108.03044},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "152346742", "name": "Seiji Takeda"}, {"authorId": "2172833",
      "name": "T. Hama"}, {"authorId": "1410277341", "name": "Hsiang-Han Hsu"}, {"authorId":
      "1710401", "name": "Akihiro Kishimoto"}, {"authorId": "116971102", "name": "Makoto
      Kogoh"}, {"authorId": "1656710479", "name": "Takumi Hongo"}, {"authorId": "2122908872",
      "name": "Kumiko Fujieda"}, {"authorId": "1656713115", "name": "Hideaki Nakashika"},
      {"authorId": "35312152", "name": "D. Zubarev"}, {"authorId": "2053354913", "name":
      "Daniel P. Sanders"}, {"authorId": "2143555", "name": "J. Pitera"}, {"authorId":
      "92409071", "name": "Junta Fuchiwaki"}, {"authorId": "2221244", "name": "D.
      Nakano"}]}, {"paperId": "5136bf4d46f3525efa72da28a9df3b0d7456d2c7", "externalIds":
      {"DBLP": "conf/infocom/LiuSSLZLW22", "DOI": "10.1109/infocomwkshps54753.2022.9798112",
      "CorpusId": 249910878}, "corpusId": 249910878, "publicationVenue": {"id": "be267cb9-6411-4126-8b64-4847025171ee",
      "name": "Conference on Computer Communications Workshops", "type": "conference",
      "alternate_names": ["INFOCOM WKSHPS", "Conf Comput Commun Work"]}, "url": "https://www.semanticscholar.org/paper/5136bf4d46f3525efa72da28a9df3b0d7456d2c7",
      "title": "Computing Power Network: A Testbed and Applications with Edge Intelligence",
      "abstract": "Computing Power Network (CPN) is a novel evolution of multi-access
      edge computing, which is expected to apply ubiquitous computing resources with
      intelligence and flexibility. In this paper, we implement the prototype testbed
      of CPN based on Kubernetes with microservice architecture, realizing key enabling
      technologies of CPN including computing modelling, computing awareness, computing
      announcement and computing offloading. We evaluate the performance of the testbed
      with typical Internet services with intelligent inferences, which are delay-sensitive
      and compute-intensive. Experimental results reveal that our CPN testbed can
      realize shorter response latency and better load balancing performance in comparison
      with traditional edge computing paradigm.", "venue": "Conference on Computer
      Communications Workshops", "year": 2022, "referenceCount": 0, "citationCount":
      12, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-05-02", "journal":
      {"name": "IEEE INFOCOM 2022 - IEEE Conference on Computer Communications Workshops
      (INFOCOM WKSHPS)", "pages": "1-2"}, "citationStyles": {"bibtex": "@Article{Liu2022ComputingPN,\n
      author = {Junlin Liu and Yukun Sun and Junqi Su and Zhaojiang Li and Xing Zhang
      and Bo Lei and Wenbo Wang},\n booktitle = {Conference on Computer Communications
      Workshops},\n journal = {IEEE INFOCOM 2022 - IEEE Conference on Computer Communications
      Workshops (INFOCOM WKSHPS)},\n pages = {1-2},\n title = {Computing Power Network:
      A Testbed and Applications with Edge Intelligence},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2109104966", "name": "Junlin Liu"}, {"authorId": "2163051784",
      "name": "Yukun Sun"}, {"authorId": "2171986670", "name": "Junqi Su"}, {"authorId":
      "2172342940", "name": "Zhaojiang Li"}, {"authorId": "2153647726", "name": "Xing
      Zhang"}, {"authorId": "2141745843", "name": "Bo Lei"}, {"authorId": "40007645",
      "name": "Wenbo Wang"}]}, {"paperId": "5162ec791d94bebe7daee8207c49e6b00e217068",
      "externalIds": {"MAG": "3177317912", "DOI": "10.1007/978-1-4842-6998-5_5", "CorpusId":
      238010127}, "corpusId": 238010127, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5162ec791d94bebe7daee8207c49e6b00e217068",
      "title": "Debugging Dapr Applications", "abstract": null, "venue": "Introducing
      Distributed Application Runtime (Dapr)", "year": 2021, "referenceCount": 0,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "Introducing
      Distributed Application Runtime (Dapr)"}, "citationStyles": {"bibtex": "@Article{Gatev2021DebuggingDA,\n
      author = {Radoslav Gatev},\n booktitle = {Introducing Distributed Application
      Runtime (Dapr)},\n journal = {Introducing Distributed Application Runtime (Dapr)},\n
      title = {Debugging Dapr Applications},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2115173130", "name": "Radoslav Gatev"}]}, {"paperId": "5164a6dbf21e88945dccd4da65857f411cfd05a4",
      "externalIds": {"MAG": "3162070641", "DOI": "10.1007/978-1-4842-5611-4_1", "CorpusId":
      236828611}, "corpusId": 236828611, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5164a6dbf21e88945dccd4da65857f411cfd05a4",
      "title": "Software Platform and the API", "abstract": null, "venue": "", "year":
      2020, "referenceCount": 0, "citationCount": 1, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Engineering"],
      "s2FieldsOfStudy": [{"category": "Engineering", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "", "pages": "1-31", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Johnston2020SoftwarePA,\n
      author = {Craig Johnston},\n pages = {1-31},\n title = {Software Platform and
      the API},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2067498591", "name":
      "Craig Johnston"}]}, {"paperId": "516ffe3ee52348736b77b1539a1990468c29f6f6",
      "externalIds": {"DBLP": "conf/sac/TruyenJVBLJ20", "MAG": "3023801029", "DOI":
      "10.1145/3341105.3374034", "CorpusId": 214694104}, "corpusId": 214694104, "publicationVenue":
      {"id": "d80d58be-58fc-4181-a397-5ac6fd976a47", "name": "ACM Symposium on Applied
      Computing", "type": "conference", "alternate_names": ["Sel Area Cryptogr", "Int
      Conf Sel area Cryptogr", "International Conference on Selected areas in Cryptography",
      "ACM Symp Appl Comput", "Selected Areas in Cryptography", "Symposium on Applied
      Computing", "SAC", "Symp Appl Comput"], "url": "https://www.acm.org/publications",
      "alternate_urls": ["http://sacworkshop.org/"]}, "url": "https://www.semanticscholar.org/paper/516ffe3ee52348736b77b1539a1990468c29f6f6",
      "title": "Feasibility of container orchestration for adaptive performance isolation
      in multi-tenant SaaS applications", "abstract": "SaaS application instances
      typically serve multiple tenants to improve cost-efficiency. This results in
      the need for adaptive performance isolation between tenants in order to guarantee
      custom service level objectives (SLOs) about request latency or throughput.
      Current solutions, which are based on request scheduling algorithms, suffer
      from SLO instability under globally varying workloads. This means that the configuration
      for an SLO has to be recalibrated when total workload patterns change such as
      an increase or decrease in the number of subscribed tenants, or the application
      becomes co-located with other types of resource-intensive applications. Lately
      container technology such as Docker and container orchestration frameworks like
      Kubernetes have been used to increase cost-efficiency, multi-tenancy and elasticity.
      This paper investigates if the problem of adaptive performance isolation can
      be mapped to resource management concepts of Kubernetes through a series of
      experiments. These experiments show that Kubernetes provides good support for
      QoS differentiation and adaptive resource allocation by grouping tenants according
      to their SLO class (e.g gold vs bronze) in different containers. Moreover, SLO
      instability does not occur when co-locating these containers with other container-based
      applications provided that a few interferences between CPU-, memory- and disk-io
      intensive applications are taken into account. However SLO instability does
      occur when the number of subscribed tenants changes. This latter problem is
      not caused by the replication and auto-scaling concepts of Kubernetes, but by
      a non-linear resource scaling phenomenon that is inherent when the goal is to
      meet multiple custom SLOs in a cost-optimal way.", "venue": "ACM Symposium on
      Applied Computing", "year": 2020, "referenceCount": 27, "citationCount": 3,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://lirias.kuleuven.be/bitstream/123456789/649927/2/sac2020-cr.pdf", "status":
      "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2020-03-29",
      "journal": {"name": "Proceedings of the 35th Annual ACM Symposium on Applied
      Computing"}, "citationStyles": {"bibtex": "@Book{Truyen2020FeasibilityOC,\n
      author = {E. Truyen and Andr\u00e9 Jacobs and Stef Verreydt and Emad Heydari
      Beni and B. Lagaisse and W. Joosen},\n booktitle = {ACM Symposium on Applied
      Computing},\n journal = {Proceedings of the 35th Annual ACM Symposium on Applied
      Computing},\n title = {Feasibility of container orchestration for adaptive performance
      isolation in multi-tenant SaaS applications},\n year = {2020}\n}\n"}, "authors":
      [{"authorId": "1743981", "name": "E. Truyen"}, {"authorId": "1597393690", "name":
      "Andr\u00e9 Jacobs"}, {"authorId": "1404233186", "name": "Stef Verreydt"}, {"authorId":
      "2995854", "name": "Emad Heydari Beni"}, {"authorId": "1796744", "name": "B.
      Lagaisse"}, {"authorId": "1752104", "name": "W. Joosen"}]}, {"paperId": "518fb8e0ff3a2e39bb6286c49d4f71e3c359cf97",
      "externalIds": {"DBLP": "conf/ofc/GiorgettiSCAMAS22", "DOI": "10.1364/ofc.2022.m3z.3",
      "CorpusId": 248131107}, "corpusId": 248131107, "publicationVenue": {"id": "3cf29406-26d3-4e57-920e-379597d4bbcb",
      "name": "Optical Fiber Communications Conference and Exhibition", "type": "conference",
      "alternate_names": ["Opt Fiber Commun Conf Exhib", "Opt Fiber Commun Conf",
      "OFC", "Optical Fiber Communication Conference"]}, "url": "https://www.semanticscholar.org/paper/518fb8e0ff3a2e39bb6286c49d4f71e3c359cf97",
      "title": "Kubernetes Orchestration in SDN-based Edge Network Infrastructure",
      "abstract": "This demo presents a comprehensive framework providing effective
      cooperation among K8s scheduler, SDN controller, telemetry system, and SLA broker.
      The framework enables orchestrated provisioning and adaptation in distributed
      edge resources across a metro optical network. \u00a9 2022 The Author(s)", "venue":
      "Optical Fiber Communications Conference and Exhibition", "year": 2022, "referenceCount":
      1, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.iris.sssup.it/bitstream/11382/546571/1/Kubernetes_Orchestration_in_SDN-based_Edge_Network_Infrastructure.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-03-01",
      "journal": {"name": "2022 Optical Fiber Communications Conference and Exhibition
      (OFC)", "pages": "1-3"}, "citationStyles": {"bibtex": "@Article{Giorgetti2022KubernetesOI,\n
      author = {A. Giorgetti and Davide Scano and Javad Chamanara and Mustafa Al-Bado
      and E. Marx and Sean Ahearne and A. Sgambelluri and F. Paolucci and F. Cugini},\n
      booktitle = {Optical Fiber Communications Conference and Exhibition},\n journal
      = {2022 Optical Fiber Communications Conference and Exhibition (OFC)},\n pages
      = {1-3},\n title = {Kubernetes Orchestration in SDN-based Edge Network Infrastructure},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "1738987", "name": "A. Giorgetti"},
      {"authorId": "1658941077", "name": "Davide Scano"}, {"authorId": "2840853",
      "name": "Javad Chamanara"}, {"authorId": "1405690781", "name": "Mustafa Al-Bado"},
      {"authorId": "2162249610", "name": "E. Marx"}, {"authorId": "51231699", "name":
      "Sean Ahearne"}, {"authorId": "3298092", "name": "A. Sgambelluri"}, {"authorId":
      "12305288", "name": "F. Paolucci"}, {"authorId": "1793878", "name": "F. Cugini"}]},
      {"paperId": "51b51ae8bbdf0abd7ef64fa2778f45358f061088", "externalIds": {"MAG":
      "3040158967", "DOI": "10.30534/ijatcse/2020/52932020", "CorpusId": 225793117},
      "corpusId": 225793117, "publicationVenue": {"id": "5334d34c-deab-4ef6-8460-abd4cd569f74",
      "name": "International Journal of Advanced Trends in Computer Science and Engineering",
      "type": "journal", "alternate_names": ["Int J Adv Trends Comput Sci Eng"], "issn":
      "2278-3091", "url": "http://warse.org/ijatcse_current.html"}, "url": "https://www.semanticscholar.org/paper/51b51ae8bbdf0abd7ef64fa2778f45358f061088",
      "title": "Landmark Classification Service Using Convolutional Neural Network
      and Kubernetes", "abstract": "The use of Deep Learning for the image classification
      process has developed rapidly, one of which is in a method called Convolutional
      Neural Network (CNN). One use of the CNN method is to classify images. This
      study uses the CNN method to classify image datasets that have landmark categories.
      The results show that each model has an accuracy level with the highest value
      of 95% and the lowest value of 92%. The method for this research to produce
      a service that can be used by other services and or can be implemented in other
      resources so that the classification function can be used or developed. We show
      that our deployment method has good results seen with ResNet50 Model using 1200
      concurrent users which response rates were smaller by 4,92% using autoscaling
      pods with one minimum pod and 6 maximum pods that had an error value of 26,58%
      compared with the best result from the other method.", "venue": "International
      Journal of Advanced Trends in Computer Science and Engineering", "year": 2020,
      "referenceCount": 18, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2020-06-25", "journal": {"name": "International Journal of Advanced Trends
      in Computer Science and Engineering"}, "citationStyles": {"bibtex": "@Article{Aji2020LandmarkCS,\n
      author = {Indra Prasetya Aji},\n booktitle = {International Journal of Advanced
      Trends in Computer Science and Engineering},\n journal = {International Journal
      of Advanced Trends in Computer Science and Engineering},\n title = {Landmark
      Classification Service Using Convolutional Neural Network and Kubernetes},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "2085536186", "name": "Indra
      Prasetya Aji"}]}, {"paperId": "51d1c1272b6c87e2fe5106d28007a8a584c2b8d6", "externalIds":
      {"MAG": "2983030283", "DBLP": "conf/ancs/MianoBRBLPS19", "DOI": "10.1109/ANCS.2019.8901880",
      "CorpusId": 266239464}, "corpusId": 266239464, "publicationVenue": {"id": "d004c406-1bed-49fd-a0b1-e46b928f0754",
      "name": "Symposium on Architectures for Networking and Communications Systems",
      "type": "conference", "alternate_names": ["Symp Archit Netw Commun Syst", "Architectures
      for Networking and Communications Systems", "ANCS", "Archit Netw Commun Syst"],
      "url": "http://www.wikicfp.com/cfp/program?id=171"}, "url": "https://www.semanticscholar.org/paper/51d1c1272b6c87e2fe5106d28007a8a584c2b8d6",
      "title": "A Service-Agnostic Software Framework for Fast and Efficient in-Kernel
      Network Services", "abstract": "This paper presents Polycube, an open-source
      software framework based on eBPF, that enables the creation of arbitrary and
      complex network function chains. Each function can include an efficient in-kernel
      data plane and a flexible user-space control plane with strong characteristics
      of isolation, persistence (e.g., across server reboots)and composability. In
      addition, a generic model for the control and management plane of each network
      function simplifies the manageability and accelerates the development of new
      network services. We validate the framework by creating different network services
      and benchmarking their performance in a complex scenario, namely a network provider
      for Kubernetes. Results show that Polycube programs are about 20x shorter than
      equivalent programs implemented with vanilla-eBPF.", "venue": "Symposium on
      Architectures for Networking and Communications Systems", "year": 2019, "referenceCount":
      19, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://zenodo.org/records/3414532/files/19ANCS-Polycube.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2019-09-01", "journal":
      {"name": "2019 ACM/IEEE Symposium on Architectures for Networking and Communications
      Systems (ANCS)", "pages": "1-9"}, "citationStyles": {"bibtex": "@Article{Miano2019ASS,\n
      author = {Sebastiano Miano and Matteo Bertrone and F. Risso and Mauricio V\u00e1squez
      Bernal and Yunsong Lu and Jianwen Pi and Aasif Shaikh},\n booktitle = {Symposium
      on Architectures for Networking and Communications Systems},\n journal = {2019
      ACM/IEEE Symposium on Architectures for Networking and Communications Systems
      (ANCS)},\n pages = {1-9},\n title = {A Service-Agnostic Software Framework for
      Fast and Efficient in-Kernel Network Services},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "2280355234", "name": "Sebastiano Miano"}, {"authorId": "2280355229",
      "name": "Matteo Bertrone"}, {"authorId": "2063070699", "name": "F. Risso"},
      {"authorId": "2280355470", "name": "Mauricio V\u00e1squez Bernal"}, {"authorId":
      "23745488", "name": "Yunsong Lu"}, {"authorId": "71061389", "name": "Jianwen
      Pi"}, {"authorId": "2282499888", "name": "Aasif Shaikh"}]}, {"paperId": "51e2cba5a013cbd11f2ab760a4e3906cfff44780",
      "externalIds": {"PubMedCentral": "6394392", "DBLP": "journals/bioinformatics/NovellaKHWCBKS19",
      "MAG": "2950563407", "DOI": "10.1101/299032", "CorpusId": 51968878, "PubMed":
      "30101309"}, "corpusId": 51968878, "publicationVenue": {"id": "027ffd21-ebb0-4af8-baf5-911124292fd0",
      "name": "bioRxiv", "type": "journal", "url": "http://biorxiv.org/"}, "url":
      "https://www.semanticscholar.org/paper/51e2cba5a013cbd11f2ab760a4e3906cfff44780",
      "title": "Container-based bioinformatics with Pachyderm", "abstract": "Motivation:
      Computational biologists face many challenges related to data size, and they
      need to manage complicated analyses often including multiple stages and multiple
      tools, all of which must be deployed to modern infrastructures. To address these
      challenges and maintain reproducibility of results, researchers need (i) a reliable
      way to run processing stages in any computational environment, (ii) a well-defined
      way to orchestrate those processing stages, and (iii) a data management layer
      that tracks data as it moves through the processing pipeline. Results: Pachyderm
      is an open-source workflow system and data management framework that fulfills
      these needs by creating a data pipelining and data versioning layer on top of
      projects from the container ecosystem, having Kubernetes as the backbone for
      container orchestration. We adapted Pachyderm and demonstrated its attractive
      properties in bioinformatics. A Helm Chart was created so that researchers can
      use Pachyderm in multiple scenarios. The Pachyderm File System was extended
      to support block storage. A wrapper for initiating Pachyderm on cloud-agnostic
      virtual infrastructures was created. The benefits of Pachyderm are illustrated
      via a large metabolomics workflow, demonstrating that Pachyderm enables efficient
      and sustainable data science workflows while maintaining reproducibility and
      scalability. Availability: Pachyderm is available from https://github.com/pachyderm/pachyderm.
      The Pachyderm Helm Chart is available from https://github.com/kubernetes/charts/tree/master/stable/pachyderm.
      Pachyderm is available out-of-the-box from the PhenoMeNal VRE (https://github.com/phnmnl/KubeNow-plugin)
      and general Kubernetes environments instantiated via KubeNow. The code of the
      workflow used for the analysis is available on GitHub (https://github.com/pharmbio/LC-MS-Pachyderm).
      Contact: jon.novella@farmbio.uu.se", "venue": "bioRxiv", "year": 2018, "referenceCount":
      43, "citationCount": 41, "influentialCitationCount": 2, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://academic.oup.com/bioinformatics/article-pdf/35/5/839/27994814/bty699.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science", "Medicine", "Biology"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Medicine", "source": "external"}, {"category": "Biology", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Biology", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2018-04-18", "journal": {"name": "Bioinformatics", "pages":
      "839 - 846", "volume": "35"}, "citationStyles": {"bibtex": "@Article{Novella2018ContainerbasedBW,\n
      author = {J. Novella and P. E. Khoonsari and Stephanie Herman and Daniel Whitenack
      and Marco Capuccini and J. Burman and K. Kultima and O. Spjuth},\n booktitle
      = {bioRxiv},\n journal = {Bioinformatics},\n pages = {839 - 846},\n title =
      {Container-based bioinformatics with Pachyderm},\n volume = {35},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "46176198", "name": "J. Novella"}, {"authorId": "8369149",
      "name": "P. E. Khoonsari"}, {"authorId": "38441575", "name": "Stephanie Herman"},
      {"authorId": "51177390", "name": "Daniel Whitenack"}, {"authorId": "2885797",
      "name": "Marco Capuccini"}, {"authorId": "145245194", "name": "J. Burman"},
      {"authorId": "6590379", "name": "K. Kultima"}, {"authorId": "1776762", "name":
      "O. Spjuth"}]}, {"paperId": "51e4c1d13f8383bb807698f49ab6adbcd15f5a78", "externalIds":
      {"MAG": "3088740809", "DOI": "10.1088/1742-6596/1631/1/012166", "CorpusId":
      225234898}, "corpusId": 225234898, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/51e4c1d13f8383bb807698f49ab6adbcd15f5a78",
      "title": "Architecture Design of Teenager Mental Health Evaluation System Based
      on High Concurrency and High Availability", "abstract": "In order to solve the
      problem of high concurrency and stability of real-time collection and analysis
      of teenager mental health data, this paper proposes a high concurrency and high
      availability system architecture based on Docker container, choreography and
      deployment technology and artificial fish swarm algorithm. To solve the problem
      of low efficiency of Kubernetes default scheduling algorithm, this paper designs
      a parallel scheduling algorithm using artificial fish swarm algorithm. The experimental
      results show that the parallel scheduling algorithm is effective. For the complexity
      of container redundant operation, this paper designs a microservice rank scheme.
      Combined with AFS-FCM algorithm, the microservice rank of the system platform
      is determined, so that the redundant equipment can be automatically optimized
      for high availability.", "venue": "Journal of Physics: Conference Series", "year":
      2020, "referenceCount": 13, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Physics"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Physics", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Medicine", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2020-09-01", "journal":
      {"name": "Journal of Physics: Conference Series", "volume": "1631"}, "citationStyles":
      {"bibtex": "@Conference{Zhang2020ArchitectureDO,\n author = {Yongxiong Zhang
      and Xiangzheng Huang and Liangming Wang},\n booktitle = {Journal of Physics:
      Conference Series},\n journal = {Journal of Physics: Conference Series},\n title
      = {Architecture Design of Teenager Mental Health Evaluation System Based on
      High Concurrency and High Availability},\n volume = {1631},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "49889189", "name": "Yongxiong Zhang"}, {"authorId":
      "2118347623", "name": "Xiangzheng Huang"}, {"authorId": "2144697097", "name":
      "Liangming Wang"}]}, {"paperId": "51fc506c604233773fafb75d739ae8f21f1640f9",
      "externalIds": {"DOI": "10.23919/cisti54924.2022.9820103", "CorpusId": 250575341},
      "corpusId": 250575341, "publicationVenue": {"id": "b63861a6-ab0a-47a4-9f6c-accf03b5a180",
      "name": "Iberian Conference on Information Systems and Technologies", "type":
      "conference", "alternate_names": ["CISTI", "Iber Conf Inf Syst Technol"]}, "url":
      "https://www.semanticscholar.org/paper/51fc506c604233773fafb75d739ae8f21f1640f9",
      "title": "Intrusion Detection in Container Orchestration Clusters : A framework
      proposal based on real-time system call analysis with machine learning for anomaly
      detection", "abstract": "Despite the benefits containerization brings, threats
      and risks of attacks against containerized technology have grown in equal proportion
      to its adoption. Intrusion Detection Systems (IDS) have been employed to secure
      cloud and container environments. However, the inherent characteristics of these
      environments have presented new challenges to ensuring an adequate level of
      security. In this paper, a framework is proposed for implementing a Host-based
      Intrusion Detection System (HIDS) by analyzing system calls with machine learning
      on a Kubernetes container orchestration cluster. The presented framework prevents
      the overhead of the cluster nodes from processing focused on intrusion detection
      through a distributed and scalable architecture. Alerts generated in the occurrence
      of detected anomalies can be used as a complementary source of information for
      decision making and action by the Security Operations Center (SOC) team to deal
      with an eventual security incident. The proposed architecture was implemented
      in the GNS3 software, emulating a corporate network environment to demonstrate
      the feasibility of implementing the framework in a real environment.", "venue":
      "Iberian Conference on Information Systems and Technologies", "year": 2022,
      "referenceCount": 0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-06-22",
      "journal": {"name": "2022 17th Iberian Conference on Information Systems and
      Technologies (CISTI)", "pages": "1-4"}, "citationStyles": {"bibtex": "@Conference{Rocha2022IntrusionDI,\n
      author = {Savio Levy Rocha and Georges Daniel Amvame Nze and F\u00e1bio L\u00facio
      Lopes de Mendon\u00e7a},\n booktitle = {Iberian Conference on Information Systems
      and Technologies},\n journal = {2022 17th Iberian Conference on Information
      Systems and Technologies (CISTI)},\n pages = {1-4},\n title = {Intrusion Detection
      in Container Orchestration Clusters : A framework proposal based on real-time
      system call analysis with machine learning for anomaly detection},\n year =
      {2022}\n}\n"}, "authors": [{"authorId": "2176443331", "name": "Savio Levy Rocha"},
      {"authorId": "40700670", "name": "Georges Daniel Amvame Nze"}, {"authorId":
      "70155186", "name": "F\u00e1bio L\u00facio Lopes de Mendon\u00e7a"}]}, {"paperId":
      "520fc62111dd4bbb88af06dc08d6ef509a564bdc", "externalIds": {"MAG": "2989958043",
      "DBLP": "conf/ispan/FathoniYCH19", "DOI": "10.1007/978-3-030-30143-9_25", "CorpusId":
      208334856}, "corpusId": 208334856, "publicationVenue": {"id": "f6bdbc0a-f005-423a-8c03-e9f756159ec7",
      "name": "International Symposium on Parallel Architectures, Algorithms and Networks",
      "type": "conference", "alternate_names": ["International Symposium on Parallel
      Architectures, Algorithms, and Networks", "i-span", "Int Symp Parallel Archit
      Algorithm Netw", "ISPAN"]}, "url": "https://www.semanticscholar.org/paper/520fc62111dd4bbb88af06dc08d6ef509a564bdc",
      "title": "Performance Comparison of Lightweight Kubernetes in Edge Devices",
      "abstract": null, "venue": "International Symposium on Parallel Architectures,
      Algorithms and Networks", "year": 2019, "referenceCount": 12, "citationCount":
      23, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-09-16", "journal": {"pages": "304-309"},
      "citationStyles": {"bibtex": "@Article{Fathoni2019PerformanceCO,\n author =
      {H. Fathoni and Chao-Tung Yang and Chih-Hung Chang and Chin-Yin Huang},\n booktitle
      = {International Symposium on Parallel Architectures, Algorithms and Networks},\n
      pages = {304-309},\n title = {Performance Comparison of Lightweight Kubernetes
      in Edge Devices},\n year = {2019}\n}\n"}, "authors": [{"authorId": "145606513",
      "name": "H. Fathoni"}, {"authorId": "144373463", "name": "Chao-Tung Yang"},
      {"authorId": "1705670", "name": "Chih-Hung Chang"}, {"authorId": "40311574",
      "name": "Chin-Yin Huang"}]}, {"paperId": "524158eaf4a733b6a9df1465af581dc90e65b0f1",
      "externalIds": {"DBLP": "conf/bench/GenkinDNZ18", "MAG": "2980653475", "DOI":
      "10.1007/978-3-030-32813-9_11", "CorpusId": 204832092}, "corpusId": 204832092,
      "publicationVenue": {"id": "38736343-5f03-46fa-a189-62e39337e408", "name": "BenchCouncil
      International Symposium", "type": "conference", "alternate_names": ["Bench",
      "Benchcouncil Int Symp"]}, "url": "https://www.semanticscholar.org/paper/524158eaf4a733b6a9df1465af581dc90e65b0f1",
      "title": "Machine-Learning Based Spark and Hadoop Workload Classification Using
      Container Performance Patterns", "abstract": null, "venue": "BenchCouncil International
      Symposium", "year": 2018, "referenceCount": 13, "citationCount": 6, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2018-12-10", "journal": {"pages": "118-130"},
      "citationStyles": {"bibtex": "@Article{Genkin2018MachineLearningBS,\n author
      = {Mikhail Genkin and F. Dehne and Pablo Navarro and Siyu Zhou},\n booktitle
      = {BenchCouncil International Symposium},\n pages = {118-130},\n title = {Machine-Learning
      Based Spark and Hadoop Workload Classification Using Container Performance Patterns},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "2027316023", "name": "Mikhail
      Genkin"}, {"authorId": "1683481", "name": "F. Dehne"}, {"authorId": "2071527860",
      "name": "Pablo Navarro"}, {"authorId": "2108885517", "name": "Siyu Zhou"}]},
      {"paperId": "5249b537746c6cd9486fe5f8c87b5cafbc3657da", "externalIds": {"MAG":
      "3127363065", "DOI": "10.1145/3376930.3376960", "CorpusId": 235147630}, "corpusId":
      235147630, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5249b537746c6cd9486fe5f8c87b5cafbc3657da",
      "title": "Optimizing the Cost of Executing Mixed Interactive and Batch Workloads
      on Transient VMs", "abstract": "Container Orchestration Platforms (COPs), such
      as Kubernetes, are increasingly used to manage large-scale clusters by automating
      resource allocation between applications encapsulated in containers....", "venue":
      "", "year": 2019, "referenceCount": 2, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2019-12-17", "journal": {"name": "Sigmetrics Performance
      Evaluation Review", "volume": ""}, "citationStyles": {"bibtex": "@Article{AmbatiPradeep2019OptimizingTC,\n
      author = {AmbatiPradeep and IrwinDavid},\n journal = {Sigmetrics Performance
      Evaluation Review},\n title = {Optimizing the Cost of Executing Mixed Interactive
      and Batch Workloads on Transient VMs},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2104388968", "name": "AmbatiPradeep"}, {"authorId": "150137624", "name": "IrwinDavid"}]},
      {"paperId": "524c8e928d3e1d49c497f7ef8f5dc5494a4a4704", "externalIds": {"DOI":
      "10.1109/cac57257.2022.10055963", "CorpusId": 257526527}, "corpusId": 257526527,
      "publicationVenue": {"id": "bfa6e440-6762-47f0-b1b9-2a43c02d9f62", "name": "ACM
      Cloud and Autonomic Computing Conference", "type": "conference", "alternate_names":
      ["ACM Cloud Auton Comput Conf", "Chinese Automation Congress", "Chin Autom Congr",
      "CAC"]}, "url": "https://www.semanticscholar.org/paper/524c8e928d3e1d49c497f7ef8f5dc5494a4a4704",
      "title": "A resource scheduling algorithm in edge computing for smart factory
      applications", "abstract": "Resource scheduling is essential to improve the
      efficiency of edge computing. This paper studies the resource scheduling problem
      for smart factory applications. Considering the task execution is constrained
      by the strict production process in plant field, the resource scheduling problem
      is formalized taking both task execution time and resource balance as the optimization
      objectives. Then an improved NSGA-II algorithm is proposed and deployed in Kubernetes
      tools. The simulation results based on the simulation microservice of sock shop
      factory showed that, compared with the baseline algorithms, the proposed algorithm
      can effectively reduce the task execution time and improve the resource balance
      between edge nodes.", "venue": "ACM Cloud and Autonomic Computing Conference",
      "year": 2022, "referenceCount": 5, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2022-11-25",
      "journal": {"name": "2022 China Automation Congress (CAC)", "pages": "4071-4076"},
      "citationStyles": {"bibtex": "@Article{Zhang2022ARS,\n author = {Zhenxuan Zhang
      and Lei Zhang and Xin Li},\n booktitle = {ACM Cloud and Autonomic Computing
      Conference},\n journal = {2022 China Automation Congress (CAC)},\n pages = {4071-4076},\n
      title = {A resource scheduling algorithm in edge computing for smart factory
      applications},\n year = {2022}\n}\n"}, "authors": [{"authorId": "48806190",
      "name": "Zhenxuan Zhang"}, {"authorId": "1452981772", "name": "Lei Zhang"},
      {"authorId": "2153899843", "name": "Xin Li"}]}, {"paperId": "526191084bcbefc63f62aff720adb08b040871aa",
      "externalIds": {"MAG": "3082308958", "DBLP": "conf/edcc/BozokiSPKPSK20", "DOI":
      "10.1007/978-3-030-58462-7_15", "CorpusId": 225043118}, "corpusId": 225043118,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/526191084bcbefc63f62aff720adb08b040871aa",
      "title": "Application of Extreme Value Analysis for Characterizing the Execution
      Time of Resilience Supporting Mechanisms in Kubernetes", "abstract": null, "venue":
      "EDCC Workshops", "year": 2020, "referenceCount": 16, "citationCount": 5, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-09-07", "journal": {"pages": "185-199"}, "citationStyles": {"bibtex":
      "@Article{Boz\u00f3ki2020ApplicationOE,\n author = {Szil\u00e1rd Boz\u00f3ki
      and Jeno Szalontai and D. Petho and I. Kocsis and A. Pataricza and P\u00e9ter
      Suskovics and Benedek Kov\u00e1cs},\n booktitle = {EDCC Workshops},\n pages
      = {185-199},\n title = {Application of Extreme Value Analysis for Characterizing
      the Execution Time of Resilience Supporting Mechanisms in Kubernetes},\n year
      = {2020}\n}\n"}, "authors": [{"authorId": "2855896", "name": "Szil\u00e1rd Boz\u00f3ki"},
      {"authorId": "2000982706", "name": "Jeno Szalontai"}, {"authorId": "2082142588",
      "name": "D. Petho"}, {"authorId": "21804998", "name": "I. Kocsis"}, {"authorId":
      "1730071", "name": "A. Pataricza"}, {"authorId": "1423712275", "name": "P\u00e9ter
      Suskovics"}, {"authorId": "19266472", "name": "Benedek Kov\u00e1cs"}]}, {"paperId":
      "5268d4818faa43845ec715c46b07eed747db4bb7", "externalIds": {"DBLP": "conf/ieeesec/HsuBG22",
      "DOI": "10.1109/SEC54971.2022.00037", "CorpusId": 255417451}, "corpusId": 255417451,
      "publicationVenue": {"id": "c60f6e64-434b-4c82-931d-faefcb362d4c", "name": "IFIP
      International Information Security Conference", "type": "conference", "alternate_names":
      ["Symp Edge Comput", "Symposium on Edge Computing", "Inf Secur", "Information
      Security", "IFIP Int Inf Secur Conf", "SEC"], "url": "http://www.tc11.uni-frankfurt.de/",
      "alternate_urls": ["https://acm-ieee-sec.org"]}, "url": "https://www.semanticscholar.org/paper/5268d4818faa43845ec715c46b07eed747db4bb7",
      "title": "Poster: Fine-grained Control Plane Container Profiler for MEC", "abstract":
      "Today, the edge computing system stack is built by leveraging the current cloud
      technologies, such as the containers, Kubernetes, etc., because, like the cloud,
      the edge is multi-tenant infrastructure. However, edge applications have more
      latency-critical SLAs and the infrastructure itself resource-constrained. That
      puts additional burdens on its control plane, which are not addressed by the
      cloud control plain tools. At the edge, if deployments aren''t specified accurately,
      edge providers will face the dilemma between the waste of resource due to overcommitment
      vs. SLA violations. However, we observed that it is not feasible to rely on
      the existing monitoring tools, designed for the cloud, to glean that information
      from workloads with varying use of resources, at the needed fine granularity.
      Trying to do that with brute-forcing cloud solutions turns out to be extremely
      demanding on the resources allocated to the control plane. We present a new
      control plane tool, Colibri, aimed at addressing those conflicting requirements.
      Colibri can be dispatched dynamically, when needed, and enables characterization
      of containers deployed using Kubernetes across CPU, memory and network resource
      usage patterns at millisecond scale. The preliminary results demonstrate the
      effectiveness of out approach in reducing SLA violations by up to 98% for representative
      edge workloads.", "venue": "IFIP International Information Security Conference",
      "year": 2022, "referenceCount": 21, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2022-12-01", "journal": {"name": "2022 IEEE/ACM 7th Symposium on Edge Computing
      (SEC)", "pages": "296-298"}, "citationStyles": {"bibtex": "@Article{Hsu2022PosterFC,\n
      author = {K. Hsu and Ketan Bhardwaj and Ada Gavrilovska},\n booktitle = {IFIP
      International Information Security Conference},\n journal = {2022 IEEE/ACM 7th
      Symposium on Edge Computing (SEC)},\n pages = {296-298},\n title = {Poster:
      Fine-grained Control Plane Container Profiler for MEC},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2754253", "name": "K. Hsu"}, {"authorId": "35006405",
      "name": "Ketan Bhardwaj"}, {"authorId": "1691551", "name": "Ada Gavrilovska"}]},
      {"paperId": "529f91bfdd6b73419b84fdf76ae9c309a928c685", "externalIds": {"ArXiv":
      "2109.02967", "DBLP": "conf/sigcomm/SerracantaPCCRW21", "DOI": "10.1145/3472727.3472797",
      "CorpusId": 236475507}, "corpusId": 236475507, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/529f91bfdd6b73419b84fdf76ae9c309a928c685",
      "title": "Wide Area Network Autoscaling for Cloud Applications", "abstract":
      "Modern cloud orchestrators like Kubernetes provide a versatile and robust way
      to host applications at scale. One of their key features is autoscaling, which
      automatically adjusts cloud resources (compute, memory, storage) in order to
      adapt to the demands of applications. However, the scope of cloud autoscaling
      is limited to the datacenter hosting the cloud and it doesn''t apply uniformly
      to the allocation of network resources. In I/O-constrained or data-in-motion
      use cases this can lead to severe performance degradation for the application.
      For example, when the load on a cloud service increases and the Wide Area Network
      (WAN) connecting the datacenter to the Internet becomes saturated, the application
      flows experience an increase in delay and loss. In many cases this is dealt
      with overprovisioning network capacity, which introduces additional costs and
      inefficiencies. On the other hand, thanks to the concept of \"Network as Code\",
      the WAN exposes a set of APIs that can be used to dynamically allocate and de-allocate
      capacity on-demand. In this paper we propose extending the concept of cloud
      autoscaling into the network to address this limitation. This way, applications
      running in the cloud can communicate their networking requirements, like bandwidth
      or traffic profile, to a Software-Defined Networking (SDN) controller or Network
      as a Service (NaaS) platform. Moreover, we aim to define the concepts of vertical
      and horizontal autoscaling applied to networking. We present a prototype that
      automatically allocates bandwidth to the underlay network, according to the
      requirements of the applications hosted in Kubernetes. Finally, we discuss open
      research challenges.", "venue": "NAI@SIGCOMM", "year": 2021, "referenceCount":
      23, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://upcommons.upc.edu/bitstream/2117/380740/1/Wide_Area_Network_Autoscaling_for_Cloud_Applications.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2021-08-23",
      "journal": {"name": "Proceedings of the ACM SIGCOMM 2021 Workshop on Network-Application
      Integration"}, "citationStyles": {"bibtex": "@Book{Serracanta2021WideAN,\n author
      = {Berta Serracanta and Jordi Pailliss\u00e9 and A. Cabellos-Aparicio and Anna
      Claiborne and Alberto Rodr\u00edguez-Natal and David Ward and F. Maino},\n booktitle
      = {NAI@SIGCOMM},\n journal = {Proceedings of the ACM SIGCOMM 2021 Workshop on
      Network-Application Integration},\n title = {Wide Area Network Autoscaling for
      Cloud Applications},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2121343024",
      "name": "Berta Serracanta"}, {"authorId": "19288683", "name": "Jordi Pailliss\u00e9"},
      {"authorId": "1398658334", "name": "A. Cabellos-Aparicio"}, {"authorId": "2121333775",
      "name": "Anna Claiborne"}, {"authorId": "1398658352", "name": "Alberto Rodr\u00edguez-Natal"},
      {"authorId": "2056913383", "name": "David Ward"}, {"authorId": "3056189", "name":
      "F. Maino"}]}, {"paperId": "52dadd92c17ba8a6308c3654c079e1f455480ed3", "externalIds":
      {"DBLP": "conf/wcnc/CejudoIS22", "DOI": "10.36227/techrxiv.19169021.v1", "CorpusId":
      247065958}, "corpusId": 247065958, "publicationVenue": {"id": "27235614-bd3e-4d6b-be38-5ede18f4e209",
      "name": "IEEE Wireless Communications and Networking Conference", "type": "conference",
      "alternate_names": ["IEEE Wirel Commun Netw Conf", "WCNC", "Wireless Communications
      and Networking Conference", "Wirel Commun Netw Conf"], "url": "http://www.ieee-wcnc.org/"},
      "url": "https://www.semanticscholar.org/paper/52dadd92c17ba8a6308c3654c079e1f455480ed3",
      "title": "Optimal Offloading of Kubernetes Pods in Three-Tier Networks", "abstract":
      "By pushing resources to far-edge servers located in the proximity of users,
      edge computing can greatly reduce end-to-end transmission delays. Task offloading
      in multi-tier networks refers to the optimization of which tasks should be offloaded
      from the far-edge to the edge and the cloud. Moreover, the containerization
      of applications can further reduce resource and time consumption and, in turn,
      the latency of such applications. Even though Kubernetes has become the de facto
      container orchestrator, not many works have considered the offloading of containerized
      applications in Kubernetes clusters spanning from cloud to far-edge. In this
      work, the problem of offloading Kubernetes tasks (or pods) in three-tier networks
      is formulated and optimized. First, a utility function is presented in terms
      of the cumulative weighted pod response time, and a utility minimization problem
      with central processing unit (CPU) constraints is presented. Based on the optimal
      theoretical solution to this problem, a three-tier offloading decision algorithm
      (TTODA) is developed. Horizontal scaling is considered, and specific hardware
      capabilities of each node are taken into account by setting specific SLAs that
      are fed back to the algorithm. Numerical results show that TTODA outperforms
      a typical Kubernetes QoS model based on first-in, first-served algorithm (FIFSA)
      in terms of utility, average pod response time, and usage of far-edge CPU. Further,
      TTODA achieves an excellent trade-off between performance and computational
      complexity, and thus it can help achieve the requirements of latency-sensitive
      applications. Moreover, TTODA can easily be extended to scenarios with joint
      memory and CPU constraints.", "venue": "IEEE Wireless Communications and Networking
      Conference", "year": 2022, "referenceCount": 0, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-02-22", "journal": {"name": "2022 IEEE Wireless Communications
      and Networking Conference (WCNC)", "pages": "280-285"}, "citationStyles": {"bibtex":
      "@Article{Cejudo2022OptimalOO,\n author = {Estela Carmona Cejudo and Francesco
      Iadanza and M. S. Siddiqui},\n booktitle = {IEEE Wireless Communications and
      Networking Conference},\n journal = {2022 IEEE Wireless Communications and Networking
      Conference (WCNC)},\n pages = {280-285},\n title = {Optimal Offloading of Kubernetes
      Pods in Three-Tier Networks},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "35486214", "name": "Estela Carmona Cejudo"}, {"authorId": "50828656", "name":
      "Francesco Iadanza"}, {"authorId": "33675565", "name": "M. S. Siddiqui"}]},
      {"paperId": "532ca7f2403f6bba1cda622f4af3355806f27679", "externalIds": {"DOI":
      "10.47750/pnr.2022.13.s04.185", "CorpusId": 252881509}, "corpusId": 252881509,
      "publicationVenue": {"id": "3f4e1caf-45e3-4eca-8e26-21fba1856053", "name": "Journal
      of Pharmaceutical Negative Results", "type": "journal", "alternate_names": ["J
      Pharm Negat Result"], "issn": "0976-9234", "url": "http://www.pnrjournal.com/"},
      "url": "https://www.semanticscholar.org/paper/532ca7f2403f6bba1cda622f4af3355806f27679",
      "title": "Multi Cluster Monitoring for Fault Detection Using Novel Kubernetes
      with Prometheus over Docker Container", "abstract": null, "venue": "Journal
      of Pharmaceutical Negative Results", "year": 2022, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Engineering", "source":
      "s2-fos-model"}, {"category": "Medicine", "source": "s2-fos-model"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2022-01-01", "journal": {"name": "Journal of Pharmaceutical Negative Results"},
      "citationStyles": {"bibtex": "@Article{None,\n booktitle = {Journal of Pharmaceutical
      Negative Results},\n journal = {Journal of Pharmaceutical Negative Results},\n
      title = {Multi Cluster Monitoring for Fault Detection Using Novel Kubernetes
      with Prometheus over Docker Container},\n year = {2022}\n}\n"}, "authors": []},
      {"paperId": "5332ae18db5c0844af1d5a09a7d0ade3b79733f4", "externalIds": {"DBLP":
      "conf/imis/SuranthaI19", "MAG": "2951143201", "DOI": "10.1007/978-3-030-22263-5_34",
      "CorpusId": 195353359}, "corpusId": 195353359, "publicationVenue": {"id": "5d534e15-4842-45fd-b9a1-14c0d7963055",
      "name": "International Conference on Innovative Mobile and Internet Services
      in Ubiquitous Computing", "type": "conference", "alternate_names": ["Int Conf
      Innov Mob Internet Serv Ubiquitous Comput", "Innov Mob Internet Serv Ubiquitous
      Comput", "Innovative Mobile and Internet Services in Ubiquitous Computing",
      "IMIS"], "url": "http://www.wikicfp.com/cfp/program?id=1586"}, "url": "https://www.semanticscholar.org/paper/5332ae18db5c0844af1d5a09a7d0ade3b79733f4",
      "title": "Secure Kubernetes Networking Design Based on Zero Trust Model: A Case
      Study of Financial Service Enterprise in Indonesia", "abstract": null, "venue":
      "International Conference on Innovative Mobile and Internet Services in Ubiquitous
      Computing", "year": 2019, "referenceCount": 7, "citationCount": 9, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Business",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2019-07-03", "journal": {"pages": "348-361"}, "citationStyles": {"bibtex":
      "@Article{Surantha2019SecureKN,\n author = {N. Surantha and Felix Ivan},\n booktitle
      = {International Conference on Innovative Mobile and Internet Services in Ubiquitous
      Computing},\n pages = {348-361},\n title = {Secure Kubernetes Networking Design
      Based on Zero Trust Model: A Case Study of Financial Service Enterprise in Indonesia},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "2510146", "name": "N. Surantha"},
      {"authorId": "69056143", "name": "Felix Ivan"}]}, {"paperId": "5369dfe32c6286bf544134882636c0b8b0a85cc9",
      "externalIds": {"DBLP": "conf/eurosys/ElkhatibP23", "DOI": "10.1145/3578354.3592867",
      "CorpusId": 258333676}, "corpusId": 258333676, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/5369dfe32c6286bf544134882636c0b8b0a85cc9",
      "title": "An Evaluation of Service Mesh Frameworks for Edge Systems", "abstract":
      "Service Mesh Technologies (SMTs) are increasingly popular in simplifying the
      networking between microservices. They allow one to declaratively and programmatically
      define service-to-service policies and interactions, and take all sorts of network
      management logic (e.g., traffic splitting, request tracing, security, reliability)
      out of the application. This simplifies the development of microservice architectures,
      which are widely used in cloud and edge applications. However, the suitability
      for different SMTs for use in edge applications is unclear. Thus, this work
      compares the two most popular SMTs (Istio and Linkerd) in terms of performance
      and overhead for resource-constrained devices. Through extensive experimentation
      and comparing with a baseline of standard networking in a Kubernetes cluster,
      we identify that Linkerd offers a more edge-friendly SMT option in contrast
      to Istio. Overall, Istio''s communications are \u224810% slower than Linkerd
      at an increased 1.2--1.4x more memory and \u22481.2x more CPU utilization.",
      "venue": "EdgeSys@EuroSys", "year": 2023, "referenceCount": 22, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3578354.3592867", "status": "HYBRID"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book"], "publicationDate": "2023-05-08", "journal": {"name": "Proceedings of
      the 6th International Workshop on Edge Systems, Analytics and Networking"},
      "citationStyles": {"bibtex": "@Article{Elkhatib2023AnEO,\n author = {Yehia Elkhatib
      and Jose Povedano Poyato},\n booktitle = {EdgeSys@EuroSys},\n journal = {Proceedings
      of the 6th International Workshop on Edge Systems, Analytics and Networking},\n
      title = {An Evaluation of Service Mesh Frameworks for Edge Systems},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2215524371", "name": "Yehia Elkhatib"},
      {"authorId": "2215530450", "name": "Jose Povedano Poyato"}]}, {"paperId": "537aefad81b4890a74000111a76f38e348b93ea6",
      "externalIds": {"ArXiv": "2211.13995", "DBLP": "journals/corr/abs-2211-13995",
      "DOI": "10.1109/CSCN57023.2022.10051036", "CorpusId": 254018276}, "corpusId":
      254018276, "publicationVenue": {"id": "6789583b-0377-4fff-b260-aad266d5b67a",
      "name": "IEEE Conference on Standards for Communications and Networking", "type":
      "conference", "alternate_names": ["CSCN", "IEEE Conf Stand Commun Netw"]}, "url":
      "https://www.semanticscholar.org/paper/537aefad81b4890a74000111a76f38e348b93ea6",
      "title": "Mobile Edge Vertical Applications Using ETSI MEC APIs and Sandbox",
      "abstract": "MEC Sandbox is an excellent tool that simulates wireless networks
      and deploys ETSI Multi-access Edge Computing (MEC) APIs on top of the simulated
      wireless network. In this demo, we consume these APIs using a decision engine
      (DE) to scale a video-on-demand (VoD) application located on the network edge.Specifically,
      the developed DE uses the ETSI MEC Location API and retrieves the number of
      users in a given zone. The DE then takes actions at the microservice scaling
      level and executes them through a custom-made Kubernetes-based OpenAPI.", "venue":
      "IEEE Conference on Standards for Communications and Networking", "year": 2022,
      "referenceCount": 5, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2211.13995", "status":
      "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-11-25",
      "journal": {"name": "2022 IEEE Conference on Standards for Communications and
      Networking (CSCN)", "pages": "209-209"}, "citationStyles": {"bibtex": "@Article{Nikbakht2022MobileEV,\n
      author = {Rasoul Nikbakht and Michail Dalgitsis and Sergio Barrachina-Mu\u00f1oz
      and Sarang Kahvazadeh},\n booktitle = {IEEE Conference on Standards for Communications
      and Networking},\n journal = {2022 IEEE Conference on Standards for Communications
      and Networking (CSCN)},\n pages = {209-209},\n title = {Mobile Edge Vertical
      Applications Using ETSI MEC APIs and Sandbox},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "73775548", "name": "Rasoul Nikbakht"}, {"authorId": "2271071532",
      "name": "Michail Dalgitsis"}, {"authorId": "1388334557", "name": "Sergio Barrachina-Mu\u00f1oz"},
      {"authorId": "24782187", "name": "Sarang Kahvazadeh"}]}, {"paperId": "53c40490f01c3f239f741c4a6b7a6ef45a45a6db",
      "externalIds": {"DOI": "10.1002/phvs.202170410", "CorpusId": 240660185}, "corpusId":
      240660185, "publicationVenue": {"id": "601a2f22-07f1-4b46-baf3-37c185a292a2",
      "name": "PhotonicsViews", "type": "journal", "alternate_names": ["PhotonicsViews"],
      "issn": "2626-1294", "url": "https://onlinelibrary.wiley.com/journal/26261308"},
      "url": "https://www.semanticscholar.org/paper/53c40490f01c3f239f741c4a6b7a6ef45a45a6db",
      "title": "Controlling 100 lasers automatically via the cloud", "abstract": "In
      the Cluster of Excellence \u201cInternet of Production\u201d (IoP), two hundred
      scientists at RWTH Aachen University in cooperation with Fraunhofer ILT have
      set up a data center for controlling and monitoring industrial processes. The
      concept for this is based on a project for controlling laser systems developed
      at the Fraunhofer Institute for Laser Technology ILT and uses the open source
      software Kubernetes. A corresponding system has been running successfully at
      the institute for two years, and with it the institute can automatically and
      remotely install the software for new lasers in just a few minutes.", "venue":
      "PhotonicsViews", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://onlinelibrary.wiley.com/doi/pdfdirect/10.1002/phvs.202170410",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Physics", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-08-01", "journal": {"name":
      "PhotonicsViews", "volume": "18"}, "citationStyles": {"bibtex": "@Article{None,\n
      booktitle = {PhotonicsViews},\n journal = {PhotonicsViews},\n title = {Controlling
      100 lasers automatically via the cloud},\n volume = {18},\n year = {2021}\n}\n"},
      "authors": []}, {"paperId": "53cd4913e91c39d9f7d968093b8e7b217bd296ba", "externalIds":
      {"DBLP": "journals/ijnm/HoyeWTV22", "DOI": "10.1002/nem.2194", "CorpusId": 245604754},
      "corpusId": 245604754, "publicationVenue": {"id": "e89d54f9-c8d2-426e-8e48-5ebfa0c8da4c",
      "name": "International Journal of Network Management", "type": "journal", "alternate_names":
      ["Int J Netw Manag"], "issn": "1055-7148", "url": "http://www3.interscience.wiley.com/cgi-bin/jhome/5703",
      "alternate_urls": ["https://onlinelibrary.wiley.com/journal/10991190", "http://www.acm.org/pubs/contents/journals/ijnm/"]},
      "url": "https://www.semanticscholar.org/paper/53cd4913e91c39d9f7d968093b8e7b217bd296ba",
      "title": "A secure cross\u2010organizational container deployment approach to
      enable ad hoc collaborations", "abstract": "When organizations need to collaborate
      urgently, for example, in the case of an emergency situation, it is needed to
      deploy software components into the different domains in order to allow crucial
      data to be exchanged. The ad hoc aspect is important as it does not allow the
      participating organizations to negotiate entire workflows and/or contracts upfront.
      To enable these ad hoc cross\u2010organizational collaborations, a container
      orchestration platform, like Kubernetes, can be used to quickly deploy pods
      of containers in a cross\u2010organizational overlay network, even fully automated.
      Although this is technically feasible, there may be a trust issue from the perspective
      of a participating organization when an external organization is capable of
      deploying any software inside its network domain. This concern is examined and
      resolved in this article, by proposing an extension to the existing deployment
      scheme used in vanilla Kubernetes. It allows the participating organizations
      to assess whether a suggested deployment conforms to the goal of the project
      and to maintain an overview of all activities related to a single collaboration.
      This intermediate step prevents an honest organization against potentially malicious
      behaviour of external entities, either the orchestrator and/or the other organizations,
      solving the aforementioned trust issue. Evaluation of the implemented prototype
      shows that a secure collaboration, which requires at most tens of containers,
      can be attained with sub\u2010second deployment overheads per container, apart
      from the required manual interventions for trust management purposes.", "venue":
      "International Journal of Network Management", "year": 2021, "referenceCount":
      17, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Review"], "publicationDate": "2021-12-30",
      "journal": {"name": "International Journal of Network Management", "volume":
      "32"}, "citationStyles": {"bibtex": "@Article{Hoye2021ASC,\n author = {L. Hoye
      and T. Wauters and F. Turck and B. Volckaert},\n booktitle = {International
      Journal of Network Management},\n journal = {International Journal of Network
      Management},\n title = {A secure cross\u2010organizational container deployment
      approach to enable ad hoc collaborations},\n volume = {32},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "134305100", "name": "L. Hoye"}, {"authorId": "145115855",
      "name": "T. Wauters"}, {"authorId": "1715957", "name": "F. Turck"}, {"authorId":
      "1803683", "name": "B. Volckaert"}]}, {"paperId": "53d3c1750647ed79bc2a28fb1794069b4918f874",
      "externalIds": {"DOI": "10.1109/CCAI55564.2022.9807784", "CorpusId": 250183704},
      "corpusId": 250183704, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/53d3c1750647ed79bc2a28fb1794069b4918f874",
      "title": "Research on Network Element Management Model Based on Cloud Native
      Technology", "abstract": "With the promotion and development of cloud-native
      ideas and technologies, cloud-native has gradually matured and entered the application
      stage, and cloud-native technologies have also received extensive attention
      from operators. In this context, based on cloud native technology, this paper
      proposes a management model for CNF (Cloud Native Network Function). The model
      is based on cloud native ideas, using cloud native declarative API features,
      Kubernetes\u2019 CRD (Custom Resource Definition) and the Controller mechanism
      and the Side-Car design mode to realize the automatic management of cloud-native
      network functions. This management method is consistent with the deployment
      and arrangement of network functions in the form of API, providing better user
      experience and more efficient use.", "venue": "2022 IEEE 2nd International Conference
      on Computer Communication and Artificial Intelligence (CCAI)", "year": 2022,
      "referenceCount": 10, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-05-06",
      "journal": {"name": "2022 IEEE 2nd International Conference on Computer Communication
      and Artificial Intelligence (CCAI)", "pages": "17-20"}, "citationStyles": {"bibtex":
      "@Conference{Wu2022ResearchON,\n author = {Yuting Wu and Xuliang Wang},\n booktitle
      = {2022 IEEE 2nd International Conference on Computer Communication and Artificial
      Intelligence (CCAI)},\n journal = {2022 IEEE 2nd International Conference on
      Computer Communication and Artificial Intelligence (CCAI)},\n pages = {17-20},\n
      title = {Research on Network Element Management Model Based on Cloud Native
      Technology},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2107939157",
      "name": "Yuting Wu"}, {"authorId": "47119814", "name": "Xuliang Wang"}]}, {"paperId":
      "53eca1bbff933f2461cc364004ebac40baaab299", "externalIds": {"DBLP": "conf/icc/BollaBDLM23",
      "DOI": "10.1109/ICCWorkshops57953.2023.10283755", "CorpusId": 264445035}, "corpusId":
      264445035, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/53eca1bbff933f2461cc364004ebac40baaab299",
      "title": "Analyzing the Power Consumption in Cloud-Native 5/6G Ecosystems",
      "abstract": "The Fifth generation(5G) technology moves a step forward from the
      previous generations by natively supporting vertical applications with real
      time and low latency requirements. However, the resultant increase of computing
      resources will cause a consequent increase in the energy requirement and an
      impact on the carbon footprint. To this end, it is of paramount importance to
      involve all the stakeholders leveraging on the 5/6G ecosystem, by making them
      aware of the impact of their applications and network services on the underlying
      hardware infrastructure and promote, through economic incentives, a new value
      chain that puts energy efficiency in the spotlight. To achieve this goal, monitoring
      tools are required to measure the performance and resource consumption at the
      infrastructure level and map it to the virtual images on top of it to infer
      the consumption ascribable to a vertical application or a network function.
      Specifically, this paper analyzes the resource and power consumption of a Kubernetes
      container, focusing on the breakdown of CPU usage, wakeups and power consumed
      by the individual kernel processes in the presence of traffic varying in load
      and composition. Experimental results compare an application by itself with
      its containerized counterpart and show that the latter requires much more time
      and effort to process data, and uses more resources compared to a stand-alone
      application.", "venue": "2023 IEEE International Conference on Communications
      Workshops (ICC Workshops)", "year": 2023, "referenceCount": 21, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2023-05-28", "journal": {"name": "2023 IEEE
      International Conference on Communications Workshops (ICC Workshops)", "pages":
      "611-617"}, "citationStyles": {"bibtex": "@Article{Bolla2023AnalyzingTP,\n author
      = {R. Bolla and R. Bruschi and F. Davoli and C. Lombardo and Nicole Simone Martinelli},\n
      booktitle = {2023 IEEE International Conference on Communications Workshops
      (ICC Workshops)},\n journal = {2023 IEEE International Conference on Communications
      Workshops (ICC Workshops)},\n pages = {611-617},\n title = {Analyzing the Power
      Consumption in Cloud-Native 5/6G Ecosystems},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "3174413", "name": "R. Bolla"}, {"authorId": "145649910", "name":
      "R. Bruschi"}, {"authorId": "2706777", "name": "F. Davoli"}, {"authorId": "36722236",
      "name": "C. Lombardo"}, {"authorId": "2261434504", "name": "Nicole Simone Martinelli"}]},
      {"paperId": "53ee2ccacea092f242856a90121419a780b7964e", "externalIds": {"MAG":
      "3037443413", "DBLP": "journals/corr/abs-2006-14887", "ArXiv": "2006.14887",
      "CorpusId": 220128306}, "corpusId": 220128306, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/53ee2ccacea092f242856a90121419a780b7964e",
      "title": "Ensemble Transfer Learning for Emergency Landing Field Identification
      on Moderate Resource Heterogeneous Kubernetes Cluster", "abstract": "The full
      loss of thrust of an aircraft requires fast and reliable decisions of the pilot.
      If no published landing field is within reach, an emergency landing field must
      be selected. The choice of a suitable emergency landing field denotes a crucial
      task to avoid unnecessary damage of the aircraft, risk for the civil population
      as well as the crew and all passengers on board. Especially in case of instrument
      meteorological conditions it is indispensable to use a database of suitable
      emergency landing fields. Thus, based on public available digital orthographic
      photos and digital surface models, we created various datasets with different
      sample sizes to facilitate training and testing of neural networks. Each dataset
      consists of a set of data layers. The best compositions of these data layers
      as well as the best performing transfer learning models are selected. Subsequently,
      certain hyperparameters of the chosen models for each sample size are optimized
      with Bayesian and Bandit optimization. The hyperparameter tuning is performed
      with a self-made Kubernetes cluster. The models outputs were investigated with
      respect to the input data by the utilization of layer-wise relevance propagation.
      With optimized models we created an ensemble model to improve the segmentation
      performance. Finally, an area around the airport of Arnsberg in North Rhine-Westphalia
      was segmented and emergency landing fields are identified, while the verification
      of the final approach''s obstacle clearance is left unconsidered. These emergency
      landing fields are stored in a PostgreSQL database.", "venue": "arXiv.org",
      "year": 2020, "referenceCount": 43, "citationCount": 2, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-06-26", "journal": {"name": "ArXiv", "volume": "abs/2006.14887"}, "citationStyles":
      {"bibtex": "@Article{Klos2020EnsembleTL,\n author = {Andreas Klos and Marius
      Rosenbaum and W. Schiffmann},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n
      title = {Ensemble Transfer Learning for Emergency Landing Field Identification
      on Moderate Resource Heterogeneous Kubernetes Cluster},\n volume = {abs/2006.14887},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "47279141", "name": "Andreas
      Klos"}, {"authorId": "1738695600", "name": "Marius Rosenbaum"}, {"authorId":
      "1774458", "name": "W. Schiffmann"}]}, {"paperId": "5439ea55d13ee3e9b8613481f0b68b5ac73773df",
      "externalIds": {"DOI": "10.1109/ICOSEC58147.2023.10276313", "CorpusId": 264187320},
      "corpusId": 264187320, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5439ea55d13ee3e9b8613481f0b68b5ac73773df",
      "title": "An Architecture-based Self-Typing Service for Cloud Native Applications",
      "abstract": "This research study analyzes Kubow, a service that automatically
      adjusts to new circumstances, built on a modular framework for cloud-native
      applications. To accommodate Kubernetes and Docker containers, the Rainbow self-adaptation
      framework was upgraded to become Kubow. This research provides an overview of
      Kubow''s architecture, highlights its main design decisions, and illustrates
      it with a simple example of how to set it up and utilize it. It takes more than
      just installing software on virtual machines to get apps running in the cloud.
      Cloud applications need continuous management so that they can 1) adjust their
      resources according to the demand, and 2) respond to temporary challenges by
      duplicating and restarting the components to offer resilience on unstable infrastructure.
      To give programmed and responsive responses to disappointments (wellbeing the
      board) and changing natural conditions (auto-scaling), and framework boundaries.",
      "venue": "2023 4th International Conference on Smart Electronics and Communication
      (ICOSEC)", "year": 2023, "referenceCount": 21, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference", "Review"], "publicationDate":
      "2023-09-20", "journal": {"name": "2023 4th International Conference on Smart
      Electronics and Communication (ICOSEC)", "pages": "562-566"}, "citationStyles":
      {"bibtex": "@Conference{Mandalapu2023AnAS,\n author = {S. Mandalapu and Kalaimagal
      Sivamuni and Chitra Devi D and U. Aswal and S. Sherly and N. Balaji},\n booktitle
      = {2023 4th International Conference on Smart Electronics and Communication
      (ICOSEC)},\n journal = {2023 4th International Conference on Smart Electronics
      and Communication (ICOSEC)},\n pages = {562-566},\n title = {An Architecture-based
      Self-Typing Service for Cloud Native Applications},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "97359904", "name": "S. Mandalapu"}, {"authorId": "31387281",
      "name": "Kalaimagal Sivamuni"}, {"authorId": "2226509063", "name": "Chitra Devi
      D"}, {"authorId": "102487869", "name": "U. Aswal"}, {"authorId": "2173052358",
      "name": "S. Sherly"}, {"authorId": "2258998375", "name": "N. Balaji"}]}, {"paperId":
      "5440d05f660eb4de05bbe23ed8bbce40ec0968f3", "externalIds": {"DOI": "10.17586/2226-1494-2023-23-3-538-546",
      "CorpusId": 259891371}, "corpusId": 259891371, "publicationVenue": {"id": "8caa4947-c161-4adb-82a1-c68415c90e3c",
      "name": "Scientific and Technical Journal of Information Technologies, Mechanics
      and Optics", "type": "journal", "alternate_names": ["Sci Tech J Inf Technol
      Mech Opt"]}, "url": "https://www.semanticscholar.org/paper/5440d05f660eb4de05bbe23ed8bbce40ec0968f3",
      "title": "A novel approach to feature collection for anomaly detection in Kubernetes
      environment and agent for metrics collection from Kubernetes nodes", "abstract":
      null, "venue": "Scientific and Technical Journal of Information Technologies,
      Mechanics and Optics", "year": 2023, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://ntv.ifmo.ru/file/article/22055.pdf", "status": "GOLD"}, "fieldsOfStudy":
      null, "s2FieldsOfStudy": [{"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-06-01", "journal": {"name": "Scientific
      and Technical Journal of Information Technologies, Mechanics and Optics"}, "citationStyles":
      {"bibtex": "@Article{Darwesh2023ANA,\n author = {G. Darwesh and J. Hammoud and
      A. A. Vorobeva},\n booktitle = {Scientific and Technical Journal of Information
      Technologies, Mechanics and Optics},\n journal = {Scientific and Technical Journal
      of Information Technologies, Mechanics and Optics},\n title = {A novel approach
      to feature collection for anomaly detection in Kubernetes environment and agent
      for metrics collection from Kubernetes nodes},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2166803790", "name": "G. Darwesh"}, {"authorId": "123364195",
      "name": "J. Hammoud"}, {"authorId": "2071675598", "name": "A. A. Vorobeva"}]},
      {"paperId": "54481acf7db64a6cc9dd45ae2f9057960592a1a8", "externalIds": {"DBLP":
      "conf/apnoms/TsaiHCH17", "MAG": "2765234087", "DOI": "10.1109/APNOMS.2017.8094194",
      "CorpusId": 13174216}, "corpusId": 13174216, "publicationVenue": {"id": "fec9c8ab-68cf-40e4-8236-4baaf5c6ffa5",
      "name": "Asia-Pacific Network Operations and Management Symposium", "type":
      "conference", "alternate_names": ["Asia-pacific Netw Oper Manag Symp", "APNOMS"],
      "url": "http://www.apnoms.org/"}, "url": "https://www.semanticscholar.org/paper/54481acf7db64a6cc9dd45ae2f9057960592a1a8",
      "title": "Distributed analytics in fog computing platforms using tensorflow
      and kubernetes", "abstract": "Modern Internet-of-Things (IoT) applications produce
      large amount of data and require powerful analytics approaches, such as Deep
      Learning to extract useful information. Existing IoT applications transmit the
      data to resource-rich data centers for analytics. However, it may congest networks,
      overload data centers, and increase security vulnerability. In this paper, we
      implement a platform, which integrates resources from data centers (servers)
      to end devices (IoT devices). We launch distributed analytics applications among
      the devices without sending everything to the data centers. We analyze challenges
      to implement such a platform and carefully adopt popular open-source projects
      to overcome the challenges. We then conduct comprehensive experiments on the
      implemented platform. The results show: (i) the benefits/limitations of distributed
      analytics, (ii) the importance of decisions on distributing an application across
      multiple devices, and (iii) the overhead caused by different components in our
      platform.", "venue": "Asia-Pacific Network Operations and Management Symposium",
      "year": 2017, "referenceCount": 10, "citationCount": 46, "influentialCitationCount":
      3, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2017-11-01", "journal":
      {"name": "2017 19th Asia-Pacific Network Operations and Management Symposium
      (APNOMS)", "pages": "145-150"}, "citationStyles": {"bibtex": "@Article{Tsai2017DistributedAI,\n
      author = {P. Tsai and Hua-Jun Hong and A. Cheng and Cheng-Hsin Hsu},\n booktitle
      = {Asia-Pacific Network Operations and Management Symposium},\n journal = {2017
      19th Asia-Pacific Network Operations and Management Symposium (APNOMS)},\n pages
      = {145-150},\n title = {Distributed analytics in fog computing platforms using
      tensorflow and kubernetes},\n year = {2017}\n}\n"}, "authors": [{"authorId":
      "145969493", "name": "P. Tsai"}, {"authorId": "40657306", "name": "Hua-Jun Hong"},
      {"authorId": "26921530", "name": "A. Cheng"}, {"authorId": "1806563", "name":
      "Cheng-Hsin Hsu"}]}, {"paperId": "545d5b0cc9057f7bd98fe60ea9504034ee6d22e8",
      "externalIds": {"MAG": "2945224429", "CorpusId": 181509889}, "corpusId": 181509889,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/545d5b0cc9057f7bd98fe60ea9504034ee6d22e8",
      "title": "Multi-level monitoring and rule based reasoning in the adaptation
      of time-critical cloud applications", "abstract": "Nowadays, different types
      of online services are often deployed and operated on the cloud since it offers
      a convenient on-demand model for renting resources and easy-to-use elastic infrastructures.
      Moreover, the modern software engineering discipline provides means to design
      time-critical services based on a set of components running in containers. Container
      technologies, such as Docker, Kubernetes, CoreOS, Swarm, OpenShift Origin, etc.
      are enablers of highly dynamic cloud-based services capable to address continuously
      varying workloads. Due to their lightweight nature, they can be instantiated,
      terminated and managed very dynamically. Container-based cloud applications
      require sophisticated auto-scaling methods in order to operate under different
      workload conditions, such as drastically changing workload scenarios. \nImagine
      a cloud-based social media network website in which a piece of news suddenly
      becomes viral. On the one hand, in order to ensure the users\u2019 experience,
      it is necessary to allocate enough computational resources before the workload
      intensity surges at runtime. On the other hand, renting expensive cloud-based
      resources can be unaffordable over a prolonged period of time. Therefore, the
      choice of an auto-scaling method may significantly affect important service
      quality parameters, such as response time and resource utilisation. Current
      cloud providers, such as Amazon EC2 and container orchestration systems, such
      as Kubernetes employ auto-scaling rules with static thresholds and rely mainly
      on infrastructure-related monitoring data, such as CPU and memory utilisation.
      \nThis thesis presents a new Dynamic Multi-Level (DM) auto-scaling method with
      dynamically changing thresholds used in auto-scaling rules which exploit not
      only infrastructure, but also application-level monitoring data. The new DM
      method is implemented to be employed according to our proposed innovative viable
      architecture for auto-scaling containerised applications. The new DM method
      is compared with seven existing auto-scaling methods in different synthetic
      and real-world workload scenarios. These auto-scaling approaches include Kubernetes
      Horizontal Pod Auto-scaling (HPA), 1\\textsuperscript{st} method of Step Scaling
      (SS1), 2\\textsuperscript{nd} method of Step Scaling (SS2), 1\\textsuperscript{st}
      method of Target Tracking Scaling (TTS1), 2\\textsuperscript{nd} method of Target
      Tracking Scaling (TTS2), 1\\textsuperscript{st} method of static THRESHOLD-based
      scaling (THRES1), and 2\\textsuperscript{nd} method of static Threshold-based
      scaling (THRES2). All investigated auto-scaling methods are currently considered
      as advanced approaches, which are used in production systems such as Kubernetes,
      Amazon EC2, etc. Workload scenarios which are examined in this work also consist
      of slowly rising/falling workload pattern, drastically changing workload pattern,
      on-off workload pattern, gently shaking workload pattern, and real-world workload
      pattern. \nBased on experimental results achieved for each workload pattern,
      all eight auto-scaling methods are compared according to the response time and
      the number of instantiated containers. The results as a whole show that the
      proposed DM method has better overall performance under varied amount of workloads
      than the other auto-scaling methods. Due to satisfactory results, the proposed
      DM method is implemented in the SWITCH software engineering system for time-critical
      cloud-based applications. Auto-scaling rules along with other properties, such
      as characteristics of virtualisation platforms, current workload, periodic QoS
      fluctuations and similar, are continuously stored as Resource Description Framework
      (RDF) triples in a Knowledge Base (KB), which is included in the proposed architecture.
      The primary reason to maintain the KB is to address different requirements of
      the SWITCH solution stakeholders, such as those of cloud-based service providers,
      allowing for seamless information integration, which can be used for long-term
      trends analysis and support to strategic planning.", "venue": "", "year": 2018,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2018-09-27", "journal": {"name":
      "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Taherizadeh2018MultilevelMA,\n
      author = {S. Taherizadeh},\n title = {Multi-level monitoring and rule based
      reasoning in the adaptation of time-critical cloud applications},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "2483329", "name": "S. Taherizadeh"}]}, {"paperId":
      "5467e8883bc8720e2126dd0dce27ac2b44722bdd", "externalIds": {"DBLP": "conf/hpdc/BlasiTGT22",
      "DOI": "10.1145/3526059.3533619", "CorpusId": 249960339}, "corpusId": 249960339,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5467e8883bc8720e2126dd0dce27ac2b44722bdd",
      "title": "A Minicloud Specification Enabling the Federation of Heterogeneous
      Edge Resources for Latency Sensitive Applications'' Requirements", "abstract":
      "We assume a computing infrastructure that implements a cloud-to-edge continuum
      by federating heterogeneous resources. This infrastructure enables next generation
      (nextgen) QoE-intensive applications, by facilitating one of their critical
      requirements: latency. As such each node is identified primarily in terms of
      latency and secondarily in terms of, more traditional, computational capacity
      and availability characteristics. Since this infrastructure is dependent on
      the existing, local, and potentially third-party owned resources, we must address
      the pertinent problem of resource heterogeneity. This paper delineates the technical
      specifications of the solution that was designed to tackle the problem, creating
      a software stack that comprises a complete environment for the orchestration
      of containerized and VM-based workflows. The solution, dubbed \"Minicloud\",
      allows the underlying resource to be federated from a higher-level continuum
      management layer and be used for the deployment of nextgen apps based on latency
      requirements. Based on lightweight Kubernetes-oriented technologies and tools,
      it maintains minimum dependencies allowing a wide range of underlying OSs and
      system architectures to be supported.", "venue": "FRAME@HPDC", "year": 2022,
      "referenceCount": 10, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2022-07-01",
      "journal": {"name": "Proceedings of the 2nd Workshop on Flexible Resource and
      Application Management on the Edge"}, "citationStyles": {"bibtex": "@Article{Blasi2022AMS,\n
      author = {Lorenzo Blasi and Andrea Toro and M. Girolamo and K. Tserpes},\n booktitle
      = {FRAME@HPDC},\n journal = {Proceedings of the 2nd Workshop on Flexible Resource
      and Application Management on the Edge},\n title = {A Minicloud Specification
      Enabling the Federation of Heterogeneous Edge Resources for Latency Sensitive
      Applications'' Requirements},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "3162937", "name": "Lorenzo Blasi"}, {"authorId": "2172378113", "name": "Andrea
      Toro"}, {"authorId": "2822733", "name": "M. Girolamo"}, {"authorId": "1771972",
      "name": "K. Tserpes"}]}, {"paperId": "5476d9664134ef05e217a1a5a87df39a7f73e699",
      "externalIds": {"DBLP": "journals/toit/ZhongB20", "MAG": "3021735597", "DOI":
      "10.1145/3378447", "CorpusId": 210171249}, "corpusId": 210171249, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5476d9664134ef05e217a1a5a87df39a7f73e699",
      "title": "A Cost-Efficient Container Orchestration Strategy in Kubernetes-Based
      Cloud Computing Infrastructures with Heterogeneous Resources", "abstract": "Containers,
      as a lightweight application virtualization technology, have recently gained
      immense popularity in mainstream cluster management systems like Google Borg
      and Kubernetes. Prevalently adopted by these systems for task deployments of
      diverse workloads such as big data, web services, and IoT, they support agile
      application deployment, environmental consistency, OS distribution portability,
      application-centric management, and resource isolation. Although most of these
      systems are mature with advanced features, their optimization strategies are
      still tailored to the assumption of a static cluster. Elastic compute resources
      would enable heterogeneous resource management strategies in response to the
      dynamic business volume for various types of workloads. Hence, we propose a
      heterogeneous task allocation strategy for cost-efficient container orchestration
      through resource utilization optimization and elastic instance pricing with
      three main features. The first one is to support heterogeneous job configurations
      to optimize the initial placement of containers into existing resources by task
      packing. The second one is cluster size adjustment to meet the changing workload
      through autoscaling algorithms. The third one is a rescheduling mechanism to
      shut down underutilized VM instances for cost saving and reallocate the relevant
      jobs without losing task progress. We evaluate our approach in terms of cost
      and performance on the Australian National Cloud Infrastructure (Nectar). Our
      experiments demonstrate that the proposed strategy could reduce the overall
      cost by 23% to 32% for different types of cloud workload patterns when compared
      to the default Kubernetes framework.", "venue": "ACM Trans. Internet Techn.",
      "year": 2020, "referenceCount": 51, "citationCount": 70, "influentialCitationCount":
      3, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-04-13", "journal":
      {"name": "ACM Transactions on Internet Technology (TOIT)", "pages": "1 - 24",
      "volume": "20"}, "citationStyles": {"bibtex": "@Article{Zhong2020ACC,\n author
      = {Zhiheng Zhong and R. Buyya},\n booktitle = {ACM Trans. Internet Techn.},\n
      journal = {ACM Transactions on Internet Technology (TOIT)},\n pages = {1 - 24},\n
      title = {A Cost-Efficient Container Orchestration Strategy in Kubernetes-Based
      Cloud Computing Infrastructures with Heterogeneous Resources},\n volume = {20},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "1716215392", "name": "Zhiheng
      Zhong"}, {"authorId": "1709598", "name": "R. Buyya"}]}, {"paperId": "54839a8af130571d1d9ca53317d4403d4cc65544",
      "externalIds": {"DBLP": "journals/corr/abs-2010-11307", "MAG": "3093580137",
      "ArXiv": "2010.11307", "DOI": "10.1109/JSYST.2021.3129974", "CorpusId": 225040281},
      "corpusId": 225040281, "publicationVenue": {"id": "38a8edf0-2998-4daf-93f7-16f34689e228",
      "name": "IEEE Systems Journal", "type": "journal", "alternate_names": ["IEEE
      Syst J"], "issn": "1932-8184", "url": "http://ieeexplore.ieee.org/servlet/opac?punumber=4267003",
      "alternate_urls": ["http://www.systemsjournal.org/"]}, "url": "https://www.semanticscholar.org/paper/54839a8af130571d1d9ca53317d4403d4cc65544",
      "title": "Speculative Container Scheduling for Deep Learning Applications in
      a Kubernetes Cluster", "abstract": "In the past decade, we have witnessed a
      dramatically increasing volume of data collected from various sources. To maximize
      utilization, various machine and deep learning models have been developed to
      study data. While data-driven applications improve countless products, hyperparameter
      tuning for the models is still a time-consuming and resource-intensive process.
      Cloud computing provides infrastructure support for the training of deep learning
      applications. The cloud service providers create an isolated virtual environment
      for clients who share physical resources, e.g., CPU and memory. On the cloud,
      resource management schemes are implemented to enable better sharing among users
      and boost system-wide performance. However, general scheduling approaches, such
      as spread priority and balanced resource schedulers, do not work well with deep
      learning workloads. In this article, we propose SpeCon, a novel container scheduler
      optimized for short-lived deep learning applications. Based on virtualized containers,
      such as Kubernetes and Docker, SpeCon analyzes the typical characteristics of
      training processes. We design a suite of algorithms to monitor the training\u2019s
      progress and speculatively migrate the slow-growing models to release resources
      for fast-growing ones. Specifically, the extensive experiments demonstrate that
      SpeCon improves an individual job\u2019s completion time by up to 41.5%, 14.8%
      system-wide, and 24.7% in terms of makespan.", "venue": "IEEE Systems Journal",
      "year": 2020, "referenceCount": 57, "citationCount": 20, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-10-21", "journal": {"name": "IEEE Systems Journal", "pages": "3770-3781",
      "volume": "16"}, "citationStyles": {"bibtex": "@Article{Mao2020SpeculativeCS,\n
      author = {Ying Mao and Yuqi Fu and Wenjia Zheng and Long Cheng and Qingzhi Liu
      and Dingwen Tao},\n booktitle = {IEEE Systems Journal},\n journal = {IEEE Systems
      Journal},\n pages = {3770-3781},\n title = {Speculative Container Scheduling
      for Deep Learning Applications in a Kubernetes Cluster},\n volume = {16},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "144655483", "name": "Ying Mao"},
      {"authorId": "102752124", "name": "Yuqi Fu"}, {"authorId": "1443742668", "name":
      "Wenjia Zheng"}, {"authorId": "143778806", "name": "Long Cheng"}, {"authorId":
      "150270519", "name": "Qingzhi Liu"}, {"authorId": "3058378", "name": "Dingwen
      Tao"}]}, {"paperId": "54b6b766069d50220462dc53f9eca1314822cb28", "externalIds":
      {"DOI": "10.3390/drones7010035", "CorpusId": 255688874}, "corpusId": 255688874,
      "publicationVenue": {"id": "20f4c07b-44b3-4e7d-8546-e3c11620a21c", "name": "Drones",
      "issn": "2504-446X", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-1077192",
      "alternate_urls": ["https://www.mdpi.com/journal/drones", "https://www.mdpi.com/journal/drones/about",
      "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-1077192"]}, "url":
      "https://www.semanticscholar.org/paper/54b6b766069d50220462dc53f9eca1314822cb28",
      "title": "Software Aging Effects on Kubernetes in Container Orchestration Systems
      for Digital Twin Cloud Infrastructures of Urban Air Mobility", "abstract": "It
      is necessary to develop a vehicle digital twin (DT) for urban air mobility (UAM)
      that uses an accurate, physics-based emulator to model the statics and dynamics
      of a vehicle. This is because the use of digital twins in the operation and
      control of UAM vehicles is essential for the UAM operational digital twin infrastructure
      (UAM-ODT). There are several issues that need to be addressed in this process:
      (i) the lack of digital twin engines for the digitalization (twinization) of
      the dynamics and control of UAM vehicles at the core of UAM-ODT systems; (ii)
      the lack of back-end system engineering in the development of UAM vehicle DTs;
      and (iii) the lack of fault-tolerant mechanisms for the DT cloud back-end system
      to run uninterrupted operations 24/7. On the other hand, software aging and
      rejuvenation are becoming increasingly important in a variety of computing scenarios
      as the demand for reliable and available services increases. With the increasing
      use of containerized systems, there is also a need for an orchestrator to support
      easy management and reduce operational costs. In this paper, an operational
      digital twin (ODT) of a typical urban air mobility (UAM) infrastructure is developed
      on a private cloud system based on Kubernetes using a proposed cloud-in-the-loop
      simulation approach. To ensure the ODT can provide uninterrupted operational
      control and services in UAM around the clock, we propose a methodology for investigating
      software aging in Kubernetes-based containerized clouds. We evaluate the behavior
      of Kubernetes software using the Nginx and K3S tools while they manage pods
      in an accelerated lifetime experiment. We continuously execute operations for
      creating and terminating pods, allowing us to observe the utilization of computing
      resources (e.g., CPU, memory, and I/O), the performance of the Nginx and K3S
      environments, and the response time of an application hosted in those environments.
      In some conditions and for specific metrics, such as virtual memory usage, we
      observed the effects of software aging, including a memory leak that is not
      fully cleared when the cluster is stopped. These issues could lead to system
      performance degradation and eventually compromise the reliability and availability
      of the system when it crashes due to memory space exhaustion or full utilization
      of swap space on the hard disk. This study helps with the deployment and maintenance
      of virtualized environments from the standpoint of system dependability in digital
      twin computing infrastructures where a large number of services are running
      under strict continuity requirements.", "venue": "Drones", "year": 2023, "referenceCount":
      9, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/2504-446X/7/1/35/pdf?version=1672737942",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2023-01-03", "journal": {"name":
      "Drones"}, "citationStyles": {"bibtex": "@Article{Costa2023SoftwareAE,\n author
      = {J. Costa and R. Matos and J. Araujo and Jueying Li and Eunmi Choi and T.
      Nguyen and Jae-Woo Lee and Dugki Min},\n booktitle = {Drones},\n journal = {Drones},\n
      title = {Software Aging Effects on Kubernetes in Container Orchestration Systems
      for Digital Twin Cloud Infrastructures of Urban Air Mobility},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "152700221", "name": "J. Costa"}, {"authorId": "1808023",
      "name": "R. Matos"}, {"authorId": "143974575", "name": "J. Araujo"}, {"authorId":
      "2136077661", "name": "Jueying Li"}, {"authorId": "143691244", "name": "Eunmi
      Choi"}, {"authorId": "2157416142", "name": "T. Nguyen"}, {"authorId": "2108480751",
      "name": "Jae-Woo Lee"}, {"authorId": "144241878", "name": "Dugki Min"}]}, {"paperId":
      "54e1656ad846f1a9c3db539d5cb67802907c2fda", "externalIds": {"DBLP": "conf/ucc/HuangBLDCVDX22",
      "DOI": "10.1109/UCC56403.2022.00022", "CorpusId": 257536254}, "corpusId": 257536254,
      "publicationVenue": {"id": "d03a5bfe-db75-4dc9-95f3-ae92b081f42c", "name": "International
      Conference on Utility and Cloud Computing", "type": "conference", "alternate_names":
      ["IEEE/ACM Int Conf Util Cloud Comput", "Utility and Cloud Computing", "Int
      Conf Util Cloud Comput", "Util Cloud Comput", "UCC", "IEEE/ACM International
      Conference Utility and Cloud Computing"]}, "url": "https://www.semanticscholar.org/paper/54e1656ad846f1a9c3db539d5cb67802907c2fda",
      "title": "Arktos: A Hyperscale Cloud Infrastructure for Building Distributed
      Cloud", "abstract": "Scalability and management cost in cloud computing are
      few of the top challenges for the cloud providers and large enterprises. In
      this paper, we present Arktos, a cloud infrastructure platform for managing
      large-scale compute clusters and running millions of application instances as
      containers and/or virtual machines (VM). Arktos is envisioned as a stepping-stone
      from current \u201c single-region\u201d focused cloud infrastructure towards
      next generation distributed infrastructure in the public and/or private cloud
      environments. We present details related to the Arktos system architecture and
      features, important design decisions, and the results and analysis of the performance
      benchmark testing. Arktos achieves high scalability by partitioning its architecture
      into two independent components, the resource partition (RP) and the tenant
      workload partition (TP), with each component scaling independently. Our performance
      testing using a benchmark tool demonstrates that Arktos with just two RPs and
      two TPs system setting can already manage a cluster of 50K compute nodes and
      is able to run 1.5 million workload containers with 5 times system throughput
      (QPS)1 compared with an existing container management system. Three key characteristics
      differentiate Arktos from other open source cloud platforms such as OpenStack
      and Kubernetes. Firstly, Arktos architecture is a truly scalable architecture
      that supports a very large cluster by scaling to more RPs and TPs in the system,
      Secondly, it unifies the runtime infrastructure to run and manage both VM and
      container applications natively, therefore eliminating the cost of managing
      separate technology stacks for VMs and containers. Lastly, Arktos has a unique
      \u201c virtual cluster\u201d style multi-tenancy design that provides both strong
      tenancy isolation, including network isolation and transparent resource view.",
      "venue": "International Conference on Utility and Cloud Computing", "year":
      2022, "referenceCount": 42, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-12-01", "journal": {"name": "2022 IEEE/ACM 15th International
      Conference on Utility and Cloud Computing (UCC)", "pages": "112-122"}, "citationStyles":
      {"bibtex": "@Article{Huang2022ArktosAH,\n author = {Ying Huang and Yunwen Bai
      and FengE Li and Xiaoning Ding and Qian Chen and D. Vij and Peng Du and Ying
      Xiong},\n booktitle = {International Conference on Utility and Cloud Computing},\n
      journal = {2022 IEEE/ACM 15th International Conference on Utility and Cloud
      Computing (UCC)},\n pages = {112-122},\n title = {Arktos: A Hyperscale Cloud
      Infrastructure for Building Distributed Cloud},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2212058355", "name": "Ying Huang"}, {"authorId": "2211819975",
      "name": "Yunwen Bai"}, {"authorId": "2211647577", "name": "FengE Li"}, {"authorId":
      "34645435", "name": "Xiaoning Ding"}, {"authorId": "2157954146", "name": "Qian
      Chen"}, {"authorId": "49838274", "name": "D. Vij"}, {"authorId": "50435851",
      "name": "Peng Du"}, {"authorId": "2112719003", "name": "Ying Xiong"}]}, {"paperId":
      "55276df4c69f518bc2b90e4f15eea4a79e7eb8e3", "externalIds": {"ArXiv": "1911.03600",
      "DBLP": "journals/tsc/ZhaoDLYD22", "MAG": "2986016759", "DOI": "10.1109/TSC.2020.3013600",
      "CorpusId": 244143809}, "corpusId": 244143809, "publicationVenue": {"id": "e2742a49-1b55-4a31-b319-7455fa5e12d4",
      "name": "IEEE Transactions on Services Computing", "type": "journal", "alternate_names":
      ["IEEE Trans Serv Comput"], "issn": "1939-1374", "url": "http://www.computer.org/tsc",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=4629386"]},
      "url": "https://www.semanticscholar.org/paper/55276df4c69f518bc2b90e4f15eea4a79e7eb8e3",
      "title": "Distributed Redundant Placement for Microservice-based Applications
      at the Edge", "abstract": "Multi-access edge computing (MEC) is booming as a
      promising paradigm to push the computation and communication resources from
      cloud to the network edge to provide services and to perform computations. With
      container technologies, mobile devices with small memory footprint can run composite
      microservice-based applications without time-consuming backbone. Service placement
      at the edge is of importance to put MEC from theory into practice. However,
      current state-of-the-art research does not sufficiently take the composite property
      of services into consideration. Besides, although Kubernetes has certain abilities
      to heal container failures, high availability cannot be ensured due to heterogeneity
      and variability of edge sites. To deal with these problems, we propose a distributed
      redundant placement framework SAA-RP and a GA-based Server Selection (GASS)
      algorithm for microservice-based applications with sequential combinatorial
      structure. We formulate a stochastic optimization problem with the uncertainty
      of microservice request considered, and then decide for each microservice, how
      it should be deployed and with how many instances as well as on which edge sites
      to place them. Benchmark policies are implemented in two scenarios, where redundancy
      is allowed and not, respectively. Numerical results based on a real-world dataset
      verify that GASS significantly outperforms all the benchmark policies.", "venue":
      "IEEE Transactions on Services Computing", "year": 2019, "referenceCount": 52,
      "citationCount": 52, "influentialCitationCount": 4, "isOpenAccess": true, "openAccessPdf":
      {"url": "http://arxiv.org/pdf/1911.03600", "status": "GREEN"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2019-11-09", "journal": {"name": "IEEE Transactions on Services
      Computing", "pages": "1732-1745", "volume": "15"}, "citationStyles": {"bibtex":
      "@Article{Zhao2019DistributedRP,\n author = {Hailiang Zhao and Shuiguang Deng
      and Zijie Liu and Jianwei Yin and S. Dustdar},\n booktitle = {IEEE Transactions
      on Services Computing},\n journal = {IEEE Transactions on Services Computing},\n
      pages = {1732-1745},\n title = {Distributed Redundant Placement for Microservice-based
      Applications at the Edge},\n volume = {15},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "144030613", "name": "Hailiang Zhao"}, {"authorId": "145590434",
      "name": "Shuiguang Deng"}, {"authorId": "152613987", "name": "Zijie Liu"}, {"authorId":
      "1734105", "name": "Jianwei Yin"}, {"authorId": "1691109", "name": "S. Dustdar"}]},
      {"paperId": "555590dfeb41a1ee289c549487cf4d45f48f9b35", "externalIds": {"MAG":
      "2609989329", "CorpusId": 67298517}, "corpusId": 67298517, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/555590dfeb41a1ee289c549487cf4d45f48f9b35",
      "title": "Multi-Instance Quotation System (SaaS) Based on Docker Containerizing
      Platform", "abstract": "Author Anass Shekhamis Title Multi-Instance Quotation
      System (SaaS) Based on Docker Containerizing Platform. Year 2016 Language English
      Pages 133 Name of Supervisor Jukka Matila This thesis covers the development
      of a quotation system that is built as a multi-instance SaaS. Quotation systems
      usually come as part in customer relationship management systems, but not necessarily
      included. They also tend to have invoicing alongside the original functionality;
      creating quotations for customers. The system uses Microservices Architecture
      were each service is a replaceable and upgradeable component that achieve certain
      functionality and easily integrate with other third-party applications such
      as invoicing and team management systems through their API. The thesis discusses
      the purpose of building such system which is directed specifically towards in-house
      construction and maintenance companies. Then, the difference between multi-tenant
      and multi-instance when building SaaS in the cloud and the practice of building
      a REST API that could be easily integrated with external web service and third-party
      software and APIs. After that, the web security principles and software containerization
      concepts were introduced. Next, the process of collecting the system requirements,
      analyzing them, and design the solution supported by the UML diagrams and the
      system architecture description. Then, the solution structure and the technology
      stack were introduced followed by the system implementation of the back-end
      as API and the front-end web application as a single-page application that consumes
      that API. Furthermore, the implementation of authorization access on the user
      and the API level was discussed. Finally, the deployment using Docker and Kubernetes
      was explained briefly. It can be concluded that the implemented has a well-designed
      architecture, and met the expectation of the current customers and the sponsor.
      Moreover, the system could be improved and optimized, and more features could
      be added.", "venue": "", "year": 2016, "referenceCount": 1, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Shekhamis2016MultiInstanceQS,\n
      author = {Anass Shekhamis},\n title = {Multi-Instance Quotation System (SaaS)
      Based on Docker Containerizing Platform},\n year = {2016}\n}\n"}, "authors":
      [{"authorId": "71717001", "name": "Anass Shekhamis"}]}, {"paperId": "55c0802806a8371a7468e30d2e6934546e264fa8",
      "externalIds": {"MAG": "2501990945", "DOI": "10.1007/978-1-4613-3938-0_8", "CorpusId":
      151668919}, "corpusId": 151668919, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/55c0802806a8371a7468e30d2e6934546e264fa8",
      "title": "Saying Play: Communication Studies", "abstract": null, "venue": "",
      "year": 1978, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Sociology"],
      "s2FieldsOfStudy": [{"category": "Sociology", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "", "pages": "210-247", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Schwartzman1978SayingPC,\n author = {H. Schwartzman},\n
      pages = {210-247},\n title = {Saying Play: Communication Studies},\n year =
      {1978}\n}\n"}, "authors": [{"authorId": "4980735", "name": "H. Schwartzman"}]},
      {"paperId": "55d551bca55140405aa2f19c7239bdebe951ec5b", "externalIds": {"MAG":
      "3106636132", "DBLP": "conf/mobiwac/LeiterBK20", "DOI": "10.1145/3416012.3424633",
      "CorpusId": 227129018}, "corpusId": 227129018, "publicationVenue": {"id": "7cadc9ef-5d1a-43cd-8d47-e8dbedf15484",
      "name": "ACM International Workshop on Mobility Management and Wireless Access",
      "type": "conference", "alternate_names": ["ACM Int Workshop Mobil Manag Wirel
      Access", "MOBIWAC", "Mobility Management and Wireless Access", "Mobil Manag
      Wirel Access"]}, "url": "https://www.semanticscholar.org/paper/55d551bca55140405aa2f19c7239bdebe951ec5b",
      "title": "An Evolution of Mobile IPv6 to the Cloud", "abstract": "The disruptions
      caused by Network Function Virtualization (NFV) and Software Defined Networking
      (SDN) introduce severe impacts also on mobility management. In this work, we
      will show how IP-based mobility management, especially Mobile IPv6 (MIPv6),
      can be redesigned to fit into the new environment. We will present an evolutionary
      procedure on how MIPv6 can arrive in the cloud. At the end of the process, the
      unique architecture of MIPv6 can run on the top of Kubernetes and OpenStack
      while keeping compatibility with the existing standards. Orchestration is also
      an environmental change, comes with cloud, where MIPv6 should be aligned with
      closed-loop orchestration support.", "venue": "ACM International Workshop on
      Mobility Management and Wireless Access", "year": 2020, "referenceCount": 24,
      "citationCount": 6, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      {"url": "https://dl.acm.org/doi/pdf/10.1145/3416012.3424633", "status": "BRONZE"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2020-11-16", "journal": {"name":
      "Proceedings of the 18th ACM Symposium on Mobility Management and Wireless Access"},
      "citationStyles": {"bibtex": "@Article{Leiter2020AnEO,\n author = {\u00c1kos
      Leiter and L. Bokor and I. Kisp\u00e1l},\n booktitle = {ACM International Workshop
      on Mobility Management and Wireless Access},\n journal = {Proceedings of the
      18th ACM Symposium on Mobility Management and Wireless Access},\n title = {An
      Evolution of Mobile IPv6 to the Cloud},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "51899499", "name": "\u00c1kos Leiter"}, {"authorId": "1709324", "name": "L.
      Bokor"}, {"authorId": "69062004", "name": "I. Kisp\u00e1l"}]}, {"paperId": "564148d1018a1f4fe017db28e01b7f851f85eaa2",
      "externalIds": {"DBLP": "conf/hpec/GrabillPC21", "DOI": "10.1109/HPEC49654.2021.9622843",
      "CorpusId": 244777287}, "corpusId": 244777287, "publicationVenue": {"id": "e247eac1-f527-41a3-af6d-bc6a6fc69de9",
      "name": "IEEE Conference on High Performance Extreme Computing", "type": "conference",
      "alternate_names": ["HPEC", "IEEE High Perform Extreme Comput Conf", "IEEE Conf
      High Perform Extreme Comput", "IEEE High Performance Extreme Computing Conference"]},
      "url": "https://www.semanticscholar.org/paper/564148d1018a1f4fe017db28e01b7f851f85eaa2",
      "title": "Scaling of Evolutionary Search of Algorithm Space to Speed-Up Scientific
      Image Understanding Workflows", "abstract": "Scientific image understanding
      is an integral part of many research workflows. Studies in everything from self-driving
      cars to the makeup of cells rely on image understanding through computer vision
      techniques. Unfortunately, almost every new scientific question requires a new
      algorithm to be developed by researchers. Exploring the possible algorithms
      (and their parameters) to find one that fits a particular scientific problem
      requires time and a broad understanding of the many options available. For this
      reason, many scientists resort to making measurements \"by hand\" instead of
      making the considerable investment required to develop a tool that can automate
      their specialized workflow. This paper explores the scaling of a tool (SEE-Segment)
      that searches the \"algorithm space\" of possible image segmentation algorithms
      and their parameters for solutions to unique scientific problems. The goal is
      to have the researchers do this manual annotation of their images (\"measure
      by hand\") using a Graphical User Interface front end while the SEE-Segment
      program searches through the algorithms and their parameters on the back end.
      In the best case, the SEE-Segment tool finds a good candidate algorithm that
      can be used on the remaining images in the researcher\u2019s data-set. In the
      worst case, the researchers annotate their images as they would without the
      tool. Unfortunately, the search space for different segmentation algorithms
      and their parameters is quite large and nonlinear. This research leverages the
      pleasantly parallel nature of Genetic Algorithms and explores the use of large-scale
      computing to speed up the search both on a local HPC and on the cloud using
      Kubernetes.", "venue": "IEEE Conference on High Performance Extreme Computing",
      "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2021-09-20", "journal":
      {"name": "2021 IEEE High Performance Extreme Computing Conference (HPEC)", "pages":
      "1-6"}, "citationStyles": {"bibtex": "@Article{Grabill2021ScalingOE,\n author
      = {Nicholas Grabill and Kai Pinckard and D. Colbry},\n booktitle = {IEEE Conference
      on High Performance Extreme Computing},\n journal = {2021 IEEE High Performance
      Extreme Computing Conference (HPEC)},\n pages = {1-6},\n title = {Scaling of
      Evolutionary Search of Algorithm Space to Speed-Up Scientific Image Understanding
      Workflows},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2142750287", "name":
      "Nicholas Grabill"}, {"authorId": "2142750285", "name": "Kai Pinckard"}, {"authorId":
      "2205218", "name": "D. Colbry"}]}, {"paperId": "564b5b241d60e76ed5fd7fbff972840880bdd0a0",
      "externalIds": {"DBLP": "journals/corr/abs-2209-02551", "ArXiv": "2209.02551",
      "DOI": "10.1109/CloudNet55617.2022.9978781", "CorpusId": 252089946}, "corpusId":
      252089946, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/564b5b241d60e76ed5fd7fbff972840880bdd0a0",
      "title": "Graph-PHPA: Graph-based Proactive Horizontal Pod Autoscaling for Microservices
      using LSTM-GNN", "abstract": "Microservice-based architecture has become prevalent
      for cloud-native applications. With an increasing number of applications being
      deployed on cloud platforms every day leveraging this architecture, more research
      efforts are required to understand how different strategies can be applied to
      effectively manage various cloud resources at scale. A large body of research
      has deployed automatic resource allocation algorithms using reactive and proactive
      autoscaling policies. However, there is still a gap in the efficiency of current
      algorithms in capturing the important features of microservices from their architecture
      and deployment environment, for example, lack of consideration of graphical
      dependency. To address this challenge, we propose Graph-PHPA, a graph-based
      proactive horizontal pod autoscaling strategy for allocating cloud resources
      to microservices leveraging long short-term memory (LSTM) and graph neural network
      (GNN) based prediction methods. We evaluate the performance of Graph-PHPA using
      the Bookinfo microservices deployed in a dedicated testing environment with
      real-time workloads generated based on realistic datasets. We demonstrate the
      efficacy of Graph-PHPA by comparing it with the rule-based resource allocation
      scheme in Kubernetes as our baseline. Extensive experiments have been implemented
      and our results illustrate the superiority of our proposed approach in resource
      savings over the reactive rule-based baseline algorithm in different testing
      scenarios.", "venue": "2022 IEEE 11th International Conference on Cloud Networking
      (CloudNet)", "year": 2022, "referenceCount": 21, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2209.02551",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-09-06",
      "journal": {"name": "2022 IEEE 11th International Conference on Cloud Networking
      (CloudNet)", "pages": "237-241"}, "citationStyles": {"bibtex": "@Article{Nguyen2022GraphPHPAGP,\n
      author = {H. X. Nguyen and Shaoshu Zhu and Mingming Liu},\n booktitle = {2022
      IEEE 11th International Conference on Cloud Networking (CloudNet)},\n journal
      = {2022 IEEE 11th International Conference on Cloud Networking (CloudNet)},\n
      pages = {237-241},\n title = {Graph-PHPA: Graph-based Proactive Horizontal Pod
      Autoscaling for Microservices using LSTM-GNN},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2184202657", "name": "H. X. Nguyen"}, {"authorId": "2184225210",
      "name": "Shaoshu Zhu"}, {"authorId": "2112314186", "name": "Mingming Liu"}]},
      {"paperId": "56572d80a6eb0af6a083c3e07d75ef9e9a134851", "externalIds": {"DBLP":
      "journals/corr/abs-2309-01805", "DOI": "10.48550/arXiv.2309.01805", "CorpusId":
      261530359}, "corpusId": 261530359, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/56572d80a6eb0af6a083c3e07d75ef9e9a134851",
      "title": "From Kubernetes to Knactor: A State-Centric Rethink of Service Integration",
      "abstract": "Microservices are increasingly used in modern applications, leading
      to a growing need for effective service integration solutions. However, we argue
      that traditional API-centric integration mechanisms ( e.g., RPC, REST, and Pub/Sub)
      hamper the modularity of microservices. These mechanisms introduce rigid code-level
      coupling, scatter integration logic, and hinder visibility into cross-service
      state exchanges. Ul-timately, these limitations complicate the maintenance and
      evolution of microservice-based applications. In response, we propose a rethinking
      of service integration and present Knactor, a new state-centric integration
      framework to restore the modularity that microservices were intended to offer.
      Knactor decouples service integration from service development, allowing integration
      to be implemented as explicit state exchanges among multiple services. Our initial
      case study suggests that Knactor simplifies service integration and creates
      new opportunities for optimizations.", "venue": "arXiv.org", "year": 2023, "referenceCount":
      51, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/2309.01805", "status": "CLOSED"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"name": "ArXiv", "volume": "abs/2309.01805"}, "citationStyles":
      {"bibtex": "@Article{Fu2023FromKT,\n author = {Silvery Fu and Hong Zhang and
      Ryan Teoh and Taras Priadka and Sylvia Ratnasamy},\n booktitle = {arXiv.org},\n
      journal = {ArXiv},\n title = {From Kubernetes to Knactor: A State-Centric Rethink
      of Service Integration},\n volume = {abs/2309.01805},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "32302537", "name": "Silvery Fu"}, {"authorId": "2237868996",
      "name": "Hong Zhang"}, {"authorId": "2237799662", "name": "Ryan Teoh"}, {"authorId":
      "2237801474", "name": "Taras Priadka"}, {"authorId": "2237799626", "name": "Sylvia
      Ratnasamy"}]}, {"paperId": "566340aa17c088ca8bbb0152dcc823f69b62da0c", "externalIds":
      {"DBLP": "conf/sose/TheodoropoulosMKT23", "DOI": "10.1109/SOSE58276.2023.00023",
      "CorpusId": 262973376}, "corpusId": 262973376, "publicationVenue": {"id": "a59db0cb-8287-4db4-9378-0eb4c692f830",
      "name": "International Symposium on Service Oriented Software Engineering",
      "type": "conference", "alternate_names": ["IEEE International Conference on
      System of Systems Engineering", "Int Symp Serv Oriented Softw Eng", "International
      Conference on System of Systems Engineering", "SoSE", "Service Oriented Software
      Engineering", "Serv Oriented Softw Eng", "Int Conf Syst Syst Eng", "IEEE Int
      Conf Syst Syst Eng", "SOSE"]}, "url": "https://www.semanticscholar.org/paper/566340aa17c088ca8bbb0152dcc823f69b62da0c",
      "title": "GreenKube: Towards Greener Container Orchestration using Artificial
      Intelligence", "abstract": "This paper introduces the GreenKube framework, which
      aims to reduce energy consumption while meeting Quality of Service (QoS) requirements
      through the use of various AI methodologies such as deep learning time-series
      forecasting, deep reinforcement learning, and graph neural networks. The paper
      also explores the limitations of contemporary container orchestration frameworks,
      including Kubernetes, and describes how GreenKube aims to progress beyond them.
      Additionally, the paper presents a prototype of the GreenKube framework that
      was evaluated in an extensive simulation using CloudSim Plus, and compares its
      performance to Kubernetes'' Horizontal Pod Autoscaler. The results demonstrate
      that GreenKube outperforms Kubernetes in terms of latency and task execution
      time while requiring fewer computational resources.", "venue": "International
      Symposium on Service Oriented Software Engineering", "year": 2023, "referenceCount":
      18, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2023-07-01", "journal":
      {"name": "2023 IEEE International Conference on Service-Oriented System Engineering
      (SOSE)", "pages": "135-139"}, "citationStyles": {"bibtex": "@Article{Theodoropoulos2023GreenKubeTG,\n
      author = {T. Theodoropoulos and Antonios Makris and Ioannis Korontanis and Konstantinos
      Tserpes},\n booktitle = {International Symposium on Service Oriented Software
      Engineering},\n journal = {2023 IEEE International Conference on Service-Oriented
      System Engineering (SOSE)},\n pages = {135-139},\n title = {GreenKube: Towards
      Greener Container Orchestration using Artificial Intelligence},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "47189527", "name": "T. Theodoropoulos"}, {"authorId":
      "50526299", "name": "Antonios Makris"}, {"authorId": "2113611013", "name": "Ioannis
      Korontanis"}, {"authorId": "2247680156", "name": "Konstantinos Tserpes"}]},
      {"paperId": "566470a50b897c135091d68ea757f5dffa2d78d1", "externalIds": {"DBLP":
      "conf/isncc/SamridhiLAAPC20", "DOI": "10.1109/ISNCC49221.2020.9297314", "CorpusId":
      229703846}, "corpusId": 229703846, "publicationVenue": {"id": "022430e1-ff7e-4441-8457-affe82b3bd65",
      "name": "International Symposium on Networks, Computers and Communications",
      "type": "conference", "alternate_names": ["Int Symp Netw Comput Commun", "ISNCC"]},
      "url": "https://www.semanticscholar.org/paper/566470a50b897c135091d68ea757f5dffa2d78d1",
      "title": "Failure Scenarios for SIP/RTP services in Container Orchestration
      Clusters", "abstract": "This paper discusses the issue with scaling SIP/RTP
      services in a container orchestration cluster such as Kubernetes. In order to
      run SIP/RTP services in the Kubernetes platform, we require that state and affinity
      between the two ends, be maintained by the container orchestration cluster.
      Currently Kubernetes primarily supports stateless services like HTTP. The paper
      explains the challenge of the Kubernetes overlay network for SIP/RTP services
      by presenting four failure scenarios with the objective to validate the failure
      scenarios and present viable solutions. Two of the four failure scenarios have
      been validated and our approach to counter these failures are presented. One
      proposed solution is based on a SIP back-to-back user agent or proxy integrated
      with the Kubernetes environment and a second that leverages the Kubernetes Ingress
      architecture and services. A third probable solution discussed are the service
      meshes.", "venue": "International Symposium on Networks, Computers and Communications",
      "year": 2020, "referenceCount": 11, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-10-20", "journal": {"name": "2020 International Symposium on Networks,
      Computers and Communications (ISNCC)", "pages": "1-6"}, "citationStyles": {"bibtex":
      "@Article{Samridhi2020FailureSF,\n author = {Samridhi and R. Liscano and Akramul
      Azim and A. Abedin and Brian Pulito and Yee-Kang Chang},\n booktitle = {International
      Symposium on Networks, Computers and Communications},\n journal = {2020 International
      Symposium on Networks, Computers and Communications (ISNCC)},\n pages = {1-6},\n
      title = {Failure Scenarios for SIP/RTP services in Container Orchestration Clusters},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "70590522", "name": "Samridhi"},
      {"authorId": "1681715", "name": "R. Liscano"}, {"authorId": "2452210", "name":
      "Akramul Azim"}, {"authorId": "2042718218", "name": "A. Abedin"}, {"authorId":
      "2042722952", "name": "Brian Pulito"}, {"authorId": "71638085", "name": "Yee-Kang
      Chang"}]}, {"paperId": "566a0aa2546081847d77f08498fc54a691266fbf", "externalIds":
      {"MAG": "2918663542", "DBLP": "conf/cascon/MagalhaesJ08", "CorpusId": 67751848},
      "corpusId": 67751848, "publicationVenue": {"id": "ca2cf7d7-0fd9-4338-b72f-48b0a5d6412c",
      "name": "Conference of the Centre for Advanced Studies on Collaborative Research",
      "type": "conference", "alternate_names": ["Conf Cent Adv Stud Collab Res", "CASCON"],
      "url": "http://cas.ibm.com/"}, "url": "https://www.semanticscholar.org/paper/566a0aa2546081847d77f08498fc54a691266fbf",
      "title": "Come learn how to deploy open liberty applications using Docker, Kubernetes,
      Helm and MicroProfile!", "abstract": "Application modernization is in everyone''s
      mind - but what environment do you migrate your legacy application into? Can
      that environment also host your new cloud-native applications?", "venue": "Conference
      of the Centre for Advanced Studies on Collaborative Research", "year": 2018,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2018-10-29", "journal":
      {"pages": "356"}, "citationStyles": {"bibtex": "@Article{Magalhaes2018ComeLH,\n
      author = {A. D. Magalhaes and Leo Christy Jesuraj},\n booktitle = {Conference
      of the Centre for Advanced Studies on Collaborative Research},\n pages = {356},\n
      title = {Come learn how to deploy open liberty applications using Docker, Kubernetes,
      Helm and MicroProfile!},\n year = {2018}\n}\n"}, "authors": [{"authorId": "143959994",
      "name": "A. D. Magalhaes"}, {"authorId": "32153032", "name": "Leo Christy Jesuraj"}]},
      {"paperId": "5676cd0e11e03173d1fc32e36cf11853ddace29a", "externalIds": {"DOI":
      "10.5753/sbrc_estendido.2022.223438", "CorpusId": 252658565}, "corpusId": 252658565,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5676cd0e11e03173d1fc32e36cf11853ddace29a",
      "title": "SARIK - framework para automatizar a seguranc\u0327a em ambientes
      de orquestrac\u0327a\u0303o kubernetes", "abstract": "Este artigo apresenta
      o SARIK, um framework de seguranc\u0327a automa\u0301tica de regras de Iptables
      em ambientes de orquestrac\u0327a\u0303o Kubernetes. O SARIK foi desenvolvido
      em shell script e foi utilizada o IDE Microsoft Visual Studio como ferramenta
      para codificac\u0327a\u0303o do software, a escolha da linguagem esta\u0301
      relacionada por sua presenc\u0327a na maioria das plataformas de cloud. Portanto,
      na\u0303o havera\u0301 a necessidade de instalac\u0327a\u0303o de depende\u0302ncia
      para que o framework funcione. O SARIK possibilita a ra\u0301pida protec\u0327a\u0303o
      da camada node atrave\u0301s da configurac\u0327a\u0303o automa\u0301tica de
      regras de firewall nos inu\u0301meros PODs (Pods sa\u0303o os menores e mais
      ba\u0301sicos objetos implanta\u0301veis no Kubernetes) contidos em um cluster.
      Por meio de bloqueio e abertura de portas, o SARIK realiza uma inspec\u0327a\u0303o
      em cada node, armazenando suas portas e bloqueando aquelas que podem trazer
      riscos aos containers. Em outras palavras, o desenvolvedor na\u0303o precisa
      proteger seus containers, essa tarefa e\u0301 feita pelo SARIK. O funcionamento
      do SARIK e\u0301 avaliado em um ambiente controlado com minikube e uma aplicac\u0327a\u0303o
      de votac\u0327a\u0303o contendo deployment, namespace e services. Com a utilizac\u0327a\u0303o
      do SARIK, desenvolvedores alcanc\u0327am a reduc\u0327a\u0303o de trabalho manual
      devido a automatizac\u0327a\u0303o das regras de iptables e com isso, a protec\u0327a\u0303o
      da camada node e\u0301 garantida.", "venue": "Anais Estendidos do XL Simp\u00f3sio
      Brasileiro de Redes de Computadores e Sistemas Distribu\u00eddos (SBRC Estendido
      2022)", "year": 2022, "referenceCount": 9, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://sol.sbc.org.br/index.php/sbrc_estendido/article/download/21419/21243",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      null, "publicationDate": "2022-05-23", "journal": {"name": "Anais Estendidos
      do XL Simp\u00f3sio Brasileiro de Redes de Computadores e Sistemas Distribu\u00eddos
      (SBRC Estendido 2022)"}, "citationStyles": {"bibtex": "@Article{Santos2022SARIKF,\n
      author = {J. G. P. D. Santos and Geraldo P. Rocha Filho and V. P. Gon\u00e7alves},\n
      booktitle = {Anais Estendidos do XL Simp\u00f3sio Brasileiro de Redes de Computadores
      e Sistemas Distribu\u00eddos (SBRC Estendido 2022)},\n journal = {Anais Estendidos
      do XL Simp\u00f3sio Brasileiro de Redes de Computadores e Sistemas Distribu\u00eddos
      (SBRC Estendido 2022)},\n title = {SARIK - framework para automatizar a seguranc\u0327a
      em ambientes de orquestrac\u0327a\u0303o kubernetes},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2115681433", "name": "J. G. P. D. Santos"}, {"authorId":
      "2126455097", "name": "Geraldo P. Rocha Filho"}, {"authorId": "2112214187",
      "name": "V. P. Gon\u00e7alves"}]}, {"paperId": "56931ce18dc7ba6652255158169776e67ba42530",
      "externalIds": {"DBLP": "journals/corr/abs-2309-13780", "ArXiv": "2309.13780",
      "DOI": "10.48550/arXiv.2309.13780", "CorpusId": 262466289}, "corpusId": 262466289,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/56931ce18dc7ba6652255158169776e67ba42530",
      "title": "Modern Software Development for JUNO offline software", "abstract":
      "The Jiangmen Underground Neutrino Observatory (JUNO), under construction in
      South China, primarily aims to determine the neutrino mass hierarchy and to
      precise measure the neutrino oscillation parameters. The data-taking is expected
      to start in 2024 and the detector plans to run for more than 20 years. The development
      of the JUNO offline software (JUNOSW) started in 2012, and it is quite challenging
      to maintain the JUNOSW for such a long time. In the last ten years, tools such
      as Subversion, Trac, and CMT had been adopted for software development. However,
      new stringent requirements came out, such as how to reduce the building time
      for the whole project, how to deploy offline algorithms to an online environment,
      and how to improve the code quality with code review and continuous integration.
      To meet the further requirements of software development, modern development
      tools are evaluated for JUNOSW, such as Git, GitLab, CMake, Docker, and Kubernetes.
      This contribution will present the software development system based on these
      modern tools for JUNOSW and the functionalities achieved: CMake macros are developed
      to simplify the build instructions for users; CMake generator expressions are
      used to control the build flags for the online and offline environments; a tool
      named git-junoenv is developed to help users partially checkout and build the
      software; a script is used to build and deploy the software on the CVMFS server;
      a Docker image with CVMFS client installed is created for continuous integration;
      a GitLab agent is set up to manage GitLab runners in Kubernetes with all the
      configurations in a GitLab repository.", "venue": "arXiv.org", "year": 2023,
      "referenceCount": 3, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2309.13780", "status":
      "CLOSED"}, "fieldsOfStudy": ["Computer Science", "Physics"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Physics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Physics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Review"], "publicationDate": "2023-09-25", "journal": {"name": "ArXiv", "volume":
      "abs/2309.13780"}, "citationStyles": {"bibtex": "@Article{Lin2023ModernSD,\n
      author = {Tao Lin},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title
      = {Modern Software Development for JUNO offline software},\n volume = {abs/2309.13780},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2109640902", "name": "Tao Lin"}]},
      {"paperId": "569fac670c35ccefadccb4b67a14133977b9c4bc", "externalIds": {"CorpusId":
      258835667}, "corpusId": 258835667, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/569fac670c35ccefadccb4b67a14133977b9c4bc",
      "title": "PROACTIVE AUTOMATIC UP-SCALING FOR KUBERNETES", "abstract": ": Container
      management systems are widely used in cloud computing. The leader of the market
      is Kubernetes. There no ability to configure a proactive scaling for your service
      using Kubernetes. The research presents an autoscaling technique based on a
      proactive approach to scale services in Kubernetes.", "venue": "", "year": 2023,
      "referenceCount": 11, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{Gutman2023PROACTIVEAU,\n
      author = {D. Gutman and O. Syrota},\n title = {PROACTIVE AUTOMATIC UP-SCALING
      FOR KUBERNETES},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2059402488",
      "name": "D. Gutman"}, {"authorId": "115250669", "name": "O. Syrota"}]}, {"paperId":
      "56bc185ba10a93c3df0e1d450a81c985030a964e", "externalIds": {"DBLP": "journals/tjs/FolinoGP23",
      "DOI": "10.1007/s11227-023-05049-x", "CorpusId": 256174620}, "corpusId": 256174620,
      "publicationVenue": {"id": "26ed29a9-64ce-4d6c-9024-8b022fd2fe22", "name": "Journal
      of Supercomputing", "type": "journal", "alternate_names": ["The Journal of Supercomputing",
      "J Supercomput"], "issn": "0920-8542", "url": "http://www.springer.com/computer/programming/journal/11227",
      "alternate_urls": ["https://link.springer.com/journal/11227", "https://www.springer.com/computer/swe/journal/11227?changeHeader"]},
      "url": "https://www.semanticscholar.org/paper/56bc185ba10a93c3df0e1d450a81c985030a964e",
      "title": "An ensemble-based framework for user behaviour anomaly detection and
      classification for cybersecurity", "abstract": null, "venue": "Journal of Supercomputing",
      "year": 2023, "referenceCount": 33, "citationCount": 6, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://link.springer.com/content/pdf/10.1007/s11227-023-05049-x.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-01-17", "journal": {"name": "The Journal of Supercomputing",
      "pages": "1-24", "volume": ""}, "citationStyles": {"bibtex": "@Article{Folino2023AnEF,\n
      author = {G. Folino and Carla Otranto Godano and F. S. Pisani},\n booktitle
      = {Journal of Supercomputing},\n journal = {The Journal of Supercomputing},\n
      pages = {1-24},\n title = {An ensemble-based framework for user behaviour anomaly
      detection and classification for cybersecurity},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "1722716", "name": "G. Folino"}, {"authorId": "2162886928", "name":
      "Carla Otranto Godano"}, {"authorId": "1708290", "name": "F. S. Pisani"}]},
      {"paperId": "56defd677d486400b10aafeea9027bcebb1505f8", "externalIds": {"MAG":
      "2904233089", "CorpusId": 209043352}, "corpusId": 209043352, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/56defd677d486400b10aafeea9027bcebb1505f8",
      "title": "Overcoming the Challenges of Centralizing Container and Kubernetes
      Operations", "abstract": null, "venue": "", "year": 2018, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Business",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Chunikhin2018OvercomingTC,\n author = {O. Chunikhin},\n
      title = {Overcoming the Challenges of Centralizing Container and Kubernetes
      Operations},\n year = {2018}\n}\n"}, "authors": [{"authorId": "3146483", "name":
      "O. Chunikhin"}]}, {"paperId": "5714af6ee49c861955f0e0a9f1cff6c8af04b3aa", "externalIds":
      {"DOI": "10.22533/at.ed.99721211011", "CorpusId": 239487405}, "corpusId": 239487405,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5714af6ee49c861955f0e0a9f1cff6c8af04b3aa",
      "title": "DOCKER Y KUBERNETES, DIFERENCIAS Y SIMILITUDES: USO Y APORTACIONES
      EN EL MANEJO DE BIG DATA", "abstract": null, "venue": "Ci\u00eancia, tecnologia
      e inova\u00e7\u00e3o: Fatores de progresso e de desenvolvimento", "year": 2021,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [],
      "publicationTypes": null, "publicationDate": "2021-10-21", "journal": {"name":
      "Ci\u00eancia, tecnologia e inova\u00e7\u00e3o: Fatores de progresso e de desenvolvimento"},
      "citationStyles": {"bibtex": "@Article{Ayala2021DOCKERYK,\n author = {Jos\u00e9
      D. Ruiz Ayala and A. Barrag\u00e1n and L. Mu\u00f1oz and Silvana Flores Barajas},\n
      booktitle = {Ci\u00eancia, tecnologia e inova\u00e7\u00e3o: Fatores de progresso
      e de desenvolvimento},\n journal = {Ci\u00eancia, tecnologia e inova\u00e7\u00e3o:
      Fatores de progresso e de desenvolvimento},\n title = {DOCKER Y KUBERNETES,
      DIFERENCIAS Y SIMILITUDES: USO Y APORTACIONES EN EL MANEJO DE BIG DATA},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "134131142", "name": "Jos\u00e9 D.
      Ruiz Ayala"}, {"authorId": "2078279038", "name": "A. Barrag\u00e1n"}, {"authorId":
      "2060578556", "name": "L. Mu\u00f1oz"}, {"authorId": "2134632865", "name": "Silvana
      Flores Barajas"}]}, {"paperId": "572b6913ec90fdc2188339a06db91c74829cc2f8",
      "externalIds": {"MAG": "3089817500", "DOI": "10.11591/IJECE.V11I2.PP1812-1822",
      "CorpusId": 233737642}, "corpusId": 233737642, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/572b6913ec90fdc2188339a06db91c74829cc2f8",
      "title": "A review on orchestration distributed systems for IoT smart services
      in fog computing", "abstract": "This paper provides a review of orchestration
      distributed systems for IoT smart services in fog computing. The cloud infrastructure
      alone cannot handle the flow of information with the abundance of data, devices
      and interactions. Thus, fog computing becomes a new paradigm to overcome the
      problem. One of the first challenges was to build the orchestration systems
      to activate the clouds and to execute tasks throughout the whole system that
      has to be considered to the situation in the large scale of geographical distance,
      heterogeneity and low latency to support the limitation of cloud computing.
      Some problems exist for orchestration distributed in fog computing are to fulfil
      with high reliability and low-delay requirements in the IoT applications system
      and to form a larger computer network like a fog network, at different geographic
      sites. This paper reviewed approximately 68 articles on orchestration distributed
      system for fog computing. The result shows the orchestration distribute system
      and some of the evaluation criteria for fog computing that have been compared
      in terms of Borg, Kubernetes, Swarm, Mesos, Aurora, heterogeneity, QoS management,
      scalability, mobility, federation, and interoperability. The significance of
      this study is to support the researcher in developing orchestration distributed
      systems for IoT smart services in fog computing focus on IR4.0 national agenda",
      "venue": "", "year": 2021, "referenceCount": 69, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://ijece.iaescore.com/index.php/IJECE/article/download/22694/14722",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Review"], "publicationDate": "2021-04-01", "journal": {"name": "International
      Journal of Electrical and Computer Engineering", "pages": "1812-1822", "volume":
      "11"}, "citationStyles": {"bibtex": "@Article{Pakhrudin2021ARO,\n author = {Nor
      Syazwani Mohd Pakhrudin and M. Kassim and A. Idris},\n journal = {International
      Journal of Electrical and Computer Engineering},\n pages = {1812-1822},\n title
      = {A review on orchestration distributed systems for IoT smart services in fog
      computing},\n volume = {11},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2173713478", "name": "Nor Syazwani Mohd Pakhrudin"}, {"authorId": "1895014",
      "name": "M. Kassim"}, {"authorId": "2089425", "name": "A. Idris"}]}, {"paperId":
      "5739ef5430b249829fda33ee180018a3f9f271d8", "externalIds": {"ArXiv": "2207.03890",
      "CorpusId": 250407820}, "corpusId": 250407820, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/5739ef5430b249829fda33ee180018a3f9f271d8",
      "title": "ENCODE: Encoding NetFlows for Network Anomaly Detection", "abstract":
      "NetFlow data is a popular network log format used by many network analysts
      and researchers. The advantages of using NetFlow over deep packet inspection
      are that it is easier to collect and process, and it is less privacy intrusive.
      Many works have used machine learning to detect network attacks using NetFlow
      data. The first step for these machine learning pipelines is to pre-process
      the data before it is given to the machine learning algorithm. Many approaches
      exist to pre-process NetFlow data; however, these simply apply existing methods
      to the data, not considering the specific properties of network data. We argue
      that for data originating from software systems, such as NetFlow or software
      logs, similarities in frequency and contexts of feature values are more important
      than similarities in the value itself. In this work, we propose an encoding
      algorithm that directly takes the frequency and the context of the feature values
      into account when the data is being processed. Different types of network behaviours
      can be clustered using this encoding, thus aiding the process of detecting anomalies
      within the network. We train several machine learning models for anomaly detection
      using the data that has been encoded with our encoding algorithm. We evaluate
      the effectiveness of our encoding on a new dataset that we created for network
      attacks on Kubernetes clusters and two well-known public NetFlow datasets. We
      empirically demonstrate that the machine learning models benefit from using
      our encoding for anomaly detection.", "venue": "", "year": 2022, "referenceCount":
      32, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2022-07-08", "journal": null,
      "citationStyles": {"bibtex": "@Inproceedings{Cao2022ENCODEEN,\n author = {Clinton
      Cao and Annibale Panichella and S. Verwer and Agathe Blaise and Filippo Rebecchi},\n
      title = {ENCODE: Encoding NetFlows for Network Anomaly Detection},\n year =
      {2022}\n}\n"}, "authors": [{"authorId": "9728897", "name": "Clinton Cao"}, {"authorId":
      "3013302", "name": "Annibale Panichella"}, {"authorId": "1682757", "name": "S.
      Verwer"}, {"authorId": "5860038", "name": "Agathe Blaise"}, {"authorId": "34941448",
      "name": "Filippo Rebecchi"}]}, {"paperId": "5743ad98803bafc3f73f02be147a0cf7e6025193",
      "externalIds": {"DOI": "10.1109/ICAIA57370.2023.10169765", "CorpusId": 259363167},
      "corpusId": 259363167, "publicationVenue": {"id": "4c2adfef-ad33-433a-bbd6-83f59d8cf828",
      "name": "International conference on Artificial intelligence and applications",
      "type": "conference", "alternate_names": ["AIA IASTED", "Int conf Artif intell
      appl"]}, "url": "https://www.semanticscholar.org/paper/5743ad98803bafc3f73f02be147a0cf7e6025193",
      "title": "Spark-based Distributed Intelligent Network Intrusion Detection System
      for Unified Dataset", "abstract": "The proliferation of cloud computing is directly
      responsible for the current transformation phase that the information technology
      sector is going through. The concept of cloud computing is still in its infancy,
      yet it is altering the information technology industry. Due to the distributed
      and open nature of cloud services, they are vulnerable to various threats, including
      malicious activities and intrusions. Cloud services are also prone to be hacked.
      Conventional network intrusion detection systems (NIDS) are ineffective against
      today\u2019s high-volume network traffic because they are trained using a single
      dataset. The infrastructure and application pose limitations, making processing
      enormous network traffic in real-time challenging. To protect the cloud from
      the numerous cloud-based dangers that exist, it is essential to embody Network
      intrusion detection systems (NIDS) which are equipped with intelligence. This
      research presents a solution to a modern problem: the development of a distributed
      and sophisticated NIDS framework using cloud-based solutions. An intelligent
      NIDS for cloud platforms is proposed in this article, along with an orchestration
      of a Docker-based Spark cluster over Kubernetes, which is hosted on AWS EC2
      instances. The ANN-based NIDS that has been proposed attains an accuracy of
      96.3% and encourages Precision scores of 97.2%, Recall scores of 97.5%, and
      F1-scores of 97.3%.", "venue": "International conference on Artificial intelligence
      and applications", "year": 2023, "referenceCount": 39, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2023-04-21", "journal": {"name": "2023 International Conference on Artificial
      Intelligence and Applications (ICAIA) Alliance Technology Conference (ATCON-1)",
      "pages": "1-6"}, "citationStyles": {"bibtex": "@Conference{Verma2023SparkbasedDI,\n
      author = {J. Verma and A. Bhandari and Gurpreet Singh},\n booktitle = {International
      conference on Artificial intelligence and applications},\n journal = {2023 International
      Conference on Artificial Intelligence and Applications (ICAIA) Alliance Technology
      Conference (ATCON-1)},\n pages = {1-6},\n title = {Spark-based Distributed Intelligent
      Network Intrusion Detection System for Unified Dataset},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2004992166", "name": "J. Verma"}, {"authorId": "47458072",
      "name": "A. Bhandari"}, {"authorId": "2117056577", "name": "Gurpreet Singh"}]},
      {"paperId": "57879c72c7a1a27ab1165e161d416ac8e5d7e479", "externalIds": {"MAG":
      "2910358019", "DBLP": "conf/ucc/AtaideVSB18", "DOI": "10.1109/UCC-Companion.2018.00065",
      "CorpusId": 57762836}, "corpusId": 57762836, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/57879c72c7a1a27ab1165e161d416ac8e5d7e479",
      "title": "Implementing Quality of Service and Confidentiality for Batch Processing
      Applications", "abstract": "With a massive volume of information generated from
      many kinds of sources and for many different purposes comes the need for processing
      systems that help digest these data. One approach for efficient processing of
      data is to batch process larger sets of data. For example, periodically, recent
      data can be analyzed and filtered, having as a result actions, updated models,
      or cleaned versions of the data uploaded to databases. Increasingly often, such
      applications have strong requirements regarding data security, quality of service,
      and scalability. While scalability is typically addressed by leveraging the
      abundant resources and fair pricing of cloud computing techniques, using a shared
      environment triggers resistance from developers regarding data security and
      quality of service. In this work, we present a system that combines a novel
      technology for data protection, Intel SGX, with a popular, open source tool
      for managing interactive and data processing applications, Kubernetes, to provide
      a batch processing system that is easy to use while still providing quality
      of service and strong confidentiality guarantees. Our evaluation shows that
      independent tasks that consume data from scalable storages can be implemented
      in a controllable, secure fashion, without added complexity or considerable
      performance or resource overheads.", "venue": "2018 IEEE/ACM International Conference
      on Utility and Cloud Computing Companion (UCC Companion)", "year": 2018, "referenceCount":
      15, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2018-12-01", "journal": {"name": "2018 IEEE/ACM
      International Conference on Utility and Cloud Computing Companion (UCC Companion)",
      "pages": "258-265"}, "citationStyles": {"bibtex": "@Article{Ataide2018ImplementingQO,\n
      author = {Igor Ataide and Gabriel Vinha and Clenimar Souza and Andrey Brito},\n
      booktitle = {2018 IEEE/ACM International Conference on Utility and Cloud Computing
      Companion (UCC Companion)},\n journal = {2018 IEEE/ACM International Conference
      on Utility and Cloud Computing Companion (UCC Companion)},\n pages = {258-265},\n
      title = {Implementing Quality of Service and Confidentiality for Batch Processing
      Applications},\n year = {2018}\n}\n"}, "authors": [{"authorId": "66297958",
      "name": "Igor Ataide"}, {"authorId": "66282677", "name": "Gabriel Vinha"}, {"authorId":
      "66293695", "name": "Clenimar Souza"}, {"authorId": "1765793", "name": "Andrey
      Brito"}]}, {"paperId": "579b8f3f44d85a3997569c82583fe9663cbe54b4", "externalIds":
      {"DBLP": "conf/hoti/LiJHL20", "MAG": "3083881008", "DOI": "10.1109/HOTI51249.2020.00024",
      "CorpusId": 221590790}, "corpusId": 221590790, "publicationVenue": {"id": "1b93e7d6-4289-4bac-8b13-666e584afd3c",
      "name": "IEEE Symposium on High-Performance Interconnects", "type": "conference",
      "alternate_names": ["IEEE Symposium on High Performance Interconnects", "IEEE
      Symp High-performance Interconnects", "High Performance Interconnects", "High
      Perform Interconnects", "IEEE Symp High Perform Interconnects", "HOTI"], "issn":
      "1550-4794", "url": "http://csdl2.computer.org/persagen/ProceedingByFilter.jsp?filter=H",
      "alternate_urls": ["http://ieeexplore.ieee.org/xpl/conhome.jsp?punumber=1000326",
      "http://www.wikicfp.com/cfp/program?id=1210"]}, "url": "https://www.semanticscholar.org/paper/579b8f3f44d85a3997569c82583fe9663cbe54b4",
      "title": "Kano: Efficient Container Network Policy Verification", "abstract":
      "Container technology is a light weight back-end virtualization solution which
      copes with the growing demand for internet service concurrency. For security
      and availability, network isolation is essential in container network. Label
      based network access control policies are employed as a network isolation solution
      by the famous container orchestrator, Kubernetes. The large scale and flexibility
      of container networks implies a prohibitive complexity, whereas the constant
      changes of policies and containers demand a short response time, thus the policy
      verification needs to be efficient. However, there is no existing tool that
      solves the verification problem of label based network access control policies.
      Kano is proposed as the first system to cover container network policy verification,
      including incremental verification. It leverages on a prefiltration algorithm
      to reduce the time complexity of reachability matrix calculation from O(n2)
      to O(n). With predefined and user-defined constraints which can be verified
      quickly with the reachability matrix, Kano removes potential risk from the container
      network. Based on the verification result, Kano provides advices to reinforce
      the security and availability of the container network.", "venue": "IEEE Symposium
      on High-Performance Interconnects", "year": 2020, "referenceCount": 20, "citationCount":
      2, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-08-01", "journal": {"name": "2020 IEEE Symposium on High-Performance Interconnects
      (HOTI)", "pages": "63-70"}, "citationStyles": {"bibtex": "@Article{Li2020KanoEC,\n
      author = {Yifan Li and Chengjun Jia and Xiaohe Hu and Jun Li},\n booktitle =
      {IEEE Symposium on High-Performance Interconnects},\n journal = {2020 IEEE Symposium
      on High-Performance Interconnects (HOTI)},\n pages = {63-70},\n title = {Kano:
      Efficient Container Network Policy Verification},\n year = {2020}\n}\n"}, "authors":
      [{"authorId": "144893962", "name": "Yifan Li"}, {"authorId": "31266068", "name":
      "Chengjun Jia"}, {"authorId": "2109826250", "name": "Xiaohe Hu"}, {"authorId":
      "2152747079", "name": "Jun Li"}]}, {"paperId": "57a2582c2b3b49ae40bf688fe6988d02cebc608b",
      "externalIds": {"DBLP": "journals/concurrency/MavridisK23", "MAG": "3165207904",
      "DOI": "10.1002/cpe.6365", "CorpusId": 236357580}, "corpusId": 236357580, "publicationVenue":
      {"id": "312ca99c-9149-490d-813e-c60d5e949f65", "name": "Concurrency and Computation",
      "type": "journal", "alternate_names": ["Concurr Comput Pract Exp", "Concurrency
      and Computation: Practice and Experience", "Concurr Comput"], "issn": "1532-0626",
      "url": "http://www3.interscience.wiley.com/cgi-bin/jhome/77004395?CRETRY=1&SRETRY=0",
      "alternate_urls": ["http://www3.interscience.wiley.com/cgi-bin/jtoc?ID=77004395",
      "http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)1532-0634"]}, "url": "https://www.semanticscholar.org/paper/57a2582c2b3b49ae40bf688fe6988d02cebc608b",
      "title": "Orchestrated sandboxed containers, unikernels, and virtual machines
      for isolation\u2010enhanced multitenant workloads and serverless computing in
      cloud", "abstract": "Containers emerge as the prevalent virtualization technology
      in cloud computing. Containers are more light\u2010weight and agile compared
      to traditional virtual machines (VMs), since they provide virtualization at
      the operating system level. There are specific factors driving the container
      adoption in cloud, however, the main disadvantage of container\u2010based virtualization
      technologies is poor isolation. To address isolation and security\u2010related
      issues, new container runtimes appeared. In this study we present and evaluate
      the most common security\u2010oriented runtimes, Kata, gVisor and Nabla, running
      with Docker, Containerd, and CRI\u2010O. We deploy containers for all the aforementioned
      container solutions, as well as the default Kubernetes runtime runc, on a Kubernetes
      cluster and additionally on a Docker node. Moreover, in a similar way to containers,
      we deploy and evaluate unikernels and security\u2010oriented lightweight Linux\u2010based
      VMs running on Kubernetes cluster. To evaluate container runtimes, we take under
      consideration Firecracker microVM too. To automate the deployment of high isolated
      containers and VMs on Kubernetes clusters, we have developed our own tool. Finally,
      we recognize the increasing interest on Function\u2010as\u2010a\u2010Service
      and other serverless architectures. In the same direction with these emerging
      cloud computing services, we have extended the Kubeless serverless framework
      to support security\u2010oriented container runtimes.", "venue": "Concurrency
      and Computation", "year": 2021, "referenceCount": 21, "citationCount": 12, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-05-24", "journal": {"name": "Concurrency and Computation: Practice and
      Experience", "volume": "35"}, "citationStyles": {"bibtex": "@Article{Mavridis2021OrchestratedSC,\n
      author = {I. Mavridis and H. Karatza},\n booktitle = {Concurrency and Computation},\n
      journal = {Concurrency and Computation: Practice and Experience},\n title =
      {Orchestrated sandboxed containers, unikernels, and virtual machines for isolation\u2010enhanced
      multitenant workloads and serverless computing in cloud},\n volume = {35},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "40275916", "name": "I. Mavridis"},
      {"authorId": "1718715", "name": "H. Karatza"}]}, {"paperId": "57d19f05819095295f37f464fb1f5a62caf81d0f",
      "externalIds": {"DBLP": "conf/idaacs/TelenykSZN21", "DOI": "10.1109/IDAACS53288.2021.9660392",
      "CorpusId": 245706614}, "corpusId": 245706614, "publicationVenue": {"id": "03335338-b34c-473a-86a8-42ae9227ac0d",
      "name": "International Conference on Intelligent Data Acquisition and Advanced
      Computing Systems: Technology and Applications", "type": "conference", "alternate_names":
      ["Int Conf Intell Data Acquis Adv Comput Syst Technol Appl", "Intelligent Data
      Acquisition and Advanced Computing Systems: Technology and Applications", "IDAACS",
      "Intell Data Acquis Adv Comput Syst Technol Appl"], "url": "http://www.wikicfp.com/cfp/program?id=1518"},
      "url": "https://www.semanticscholar.org/paper/57d19f05819095295f37f464fb1f5a62caf81d0f",
      "title": "A Comparison of Kubernetes and Kubernetes-Compatible Platforms", "abstract":
      "Nowadays, Kubernetes is an advanced container orchestration tool due to its
      high reliability, scalability and fault tolerance. However, Kubernetes requires
      a significant number of resources for its work. Therefore, to ensure the operation
      of Kubernetes in conditions of limited resources, lightweight analogues such
      as MicroKubernetes and K3S were created. These platforms provide easier deployment
      and support. In this paper, the authors analyze performance metrics for orchestration
      actions such as adding/removing nodes and starting/stopping deployments in terms
      of resource utilization, cluster startup speed, and consumed time for lightweight
      platforms and original Kubernetes. The results show that the original Kubernetes
      outperforms MicroKubernetes and K3S in many tests, but K3S demonstrates better
      disk utilization. On the other hand, MicroKubernetes demonstrates worst results
      in the performed tests.", "venue": "International Conference on Intelligent
      Data Acquisition and Advanced Computing Systems: Technology and Applications",
      "year": 2021, "referenceCount": 0, "citationCount": 6, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2021-09-22", "journal":
      {"name": "2021 11th IEEE International Conference on Intelligent Data Acquisition
      and Advanced Computing Systems: Technology and Applications (IDAACS)", "pages":
      "313-317", "volume": "1"}, "citationStyles": {"bibtex": "@Article{Telenyk2021ACO,\n
      author = {S. Telenyk and Oleksii Sopov and E. Zharikov and Grzegorz Nowakowski},\n
      booktitle = {International Conference on Intelligent Data Acquisition and Advanced
      Computing Systems: Technology and Applications},\n journal = {2021 11th IEEE
      International Conference on Intelligent Data Acquisition and Advanced Computing
      Systems: Technology and Applications (IDAACS)},\n pages = {313-317},\n title
      = {A Comparison of Kubernetes and Kubernetes-Compatible Platforms},\n volume
      = {1},\n year = {2021}\n}\n"}, "authors": [{"authorId": "3205613", "name": "S.
      Telenyk"}, {"authorId": "2148648206", "name": "Oleksii Sopov"}, {"authorId":
      "9035885", "name": "E. Zharikov"}, {"authorId": "2058303883", "name": "Grzegorz
      Nowakowski"}]}, {"paperId": "57eca603f1cec894dee5e39fa02920cf4f6d4693", "externalIds":
      {"DOI": "10.5753/eradrs.2022.19159", "CorpusId": 247828711}, "corpusId": 247828711,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/57eca603f1cec894dee5e39fa02920cf4f6d4693",
      "title": "Proposta de an\u00e1lise de desempenho no uso de pol\u00edticas seguran\u00e7a
      de rede nativas Kubernetes vs. SPIFFE", "abstract": "A preocupa\u00e7\u00e3o
      com a seguran\u00e7a em ambientes de nuvem \u00e9 constante, mas tamb\u00e9m
      h\u00e1 a necessidade de um bom desempenho. Sendo assim, o Kubernetes oferece
      a solu\u00e7\u00e3o de pol\u00edticas de rede para tratar estes aspectos, a
      qual possui dificuldades ao atender diversos endere\u00e7os IP. Com isso, o
      SPIFFE busca oferecer mais seguran\u00e7a \u00e0s aplica\u00e7\u00f5es em nuvem
      e com mais efici\u00eancia, oferecendo um servi\u00e7o de autentica\u00e7\u00e3o
      para componentes de software. Este trabalho a presenta a proposta inicial de
      uma an\u00e1lise comparativa de desempenho entre pol\u00edticas nativas do Kubernetes
      e a nova proposta do SPIFFE.", "venue": "Anais da XXII Escola Regional de Alto
      Desempenho da Regi\u00e3o Sul (ERAD-RS 2022)", "year": 2022, "referenceCount":
      4, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      null, "publicationDate": "2022-04-18", "journal": {"name": "Anais da XXII Escola
      Regional de Alto Desempenho da Regi\u00e3o Sul (ERAD-RS 2022)"}, "citationStyles":
      {"bibtex": "@Article{Jensen2022PropostaDA,\n author = {Nikolas Jensen and C.
      Miers},\n booktitle = {Anais da XXII Escola Regional de Alto Desempenho da Regi\u00e3o
      Sul (ERAD-RS 2022)},\n journal = {Anais da XXII Escola Regional de Alto Desempenho
      da Regi\u00e3o Sul (ERAD-RS 2022)},\n title = {Proposta de an\u00e1lise de desempenho
      no uso de pol\u00edticas seguran\u00e7a de rede nativas Kubernetes vs. SPIFFE},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2100558197", "name": "Nikolas
      Jensen"}, {"authorId": "2035629156", "name": "C. Miers"}]}, {"paperId": "5815f70e6d8ecc42c7d4bca071e940673b4d8ebb",
      "externalIds": {"CorpusId": 250209504}, "corpusId": 250209504, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5815f70e6d8ecc42c7d4bca071e940673b4d8ebb",
      "title": "This paper is included in the Proceedings of the 2022 USENIX Annual
      Technical Conference.", "abstract": "Processing input data plays a vital role
      in ML training, impacting accuracy, throughput, and cost. The input pipeline,
      which is responsible for feeding data-hungry GPUs/TPUs with training examples,
      is a common bottleneck. Alleviating data stalls is critical yet challenging
      for users. While today\u2019s frameworks provide mechanisms to maximize input
      pipeline throughput (e.g., distributing data processing on remote CPU workers
      and/or reusing cached data transformations), leveraging these mechanisms to
      jointly optimize training time and cost is non-trivial. Users face two key challenges.
      First, ML schedulers focus on GPU/TPU resources, leaving users on their own
      to optimize multi-dimensional resource allocations for data processing. Second,
      input pipelines often consume excessive compute power to repeatedly transform
      the same data. Deciding which source or transformed data to cache is non-trivial:
      large datasets are expensive to store, the compute time saved by caching is
      not always the bottleneck for end-to-end training, and transformations may not
      be deterministic, hence reusing transformed data can impact accuracy. We propose
      Cachew, a fully-managed service for ML data processing. Cachew dynamically scales
      distributed resources for data processing to avoid stalls in training jobs.
      The service also automatically applies caching when and where it is performance/cost-effective
      to reuse preprocessed data within and across jobs. Our key contributions are
      autoscaling and autocaching policies, which leverage domain-specific metrics
      collected at data workers and training clients (rather than generic resource
      utilization metrics) to minimize training time and cost. Compared to scaling
      workers with Kubernetes, Cachew\u2019s policies reduce training time by up to
      4.1 \u00d7 and training cost by 1.1 \u00d7 to 3.8 \u00d7 .", "venue": "", "year":
      null, "referenceCount": 66, "citationCount": 16, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Misc{None,\n author = {D. Graur and Damien Aymon and Dan Kluser and Tanguy
      Albrici and Chandramohan A. Thekkath Google and Ana Klimovic and Eth Zurich},\n
      title = {This paper is included in the Proceedings of the 2022 USENIX Annual
      Technical Conference.}\n}\n"}, "authors": [{"authorId": "2997351", "name": "D.
      Graur"}, {"authorId": "2187456856", "name": "Damien Aymon"}, {"authorId": "2145152776",
      "name": "Dan Kluser"}, {"authorId": "150317176", "name": "Tanguy Albrici"},
      {"authorId": "2285453455", "name": "Chandramohan A. Thekkath Google"}, {"authorId":
      "2285439911", "name": "Ana Klimovic"}, {"authorId": "2264355937", "name": "Eth
      Zurich"}]}, {"paperId": "58566154a79b75933014d1302bdd70e2de8b3267", "externalIds":
      {"DOI": "10.1109/ICTC57116.2023.10154849", "CorpusId": 259236097}, "corpusId":
      259236097, "publicationVenue": {"id": "9aa57e01-2dc2-4422-93b7-2b628326f78c",
      "name": "Information and Communication Technology Convergence", "type": "conference",
      "alternate_names": ["International Conference on Information and Communication
      Technology Convergence", "Inf Commun Technol Converg", "Int Conf Inf Commun
      Technol Converg", "ICTC"]}, "url": "https://www.semanticscholar.org/paper/58566154a79b75933014d1302bdd70e2de8b3267",
      "title": "Design of Log Collection Architecture Based on Cloud Native Technology",
      "abstract": "With the continuous expansion of the Internet business, the enterprise
      technology architecture has been transformed into a large and medium-sized platform
      model. The emergence of the middle stage avoids the contradiction between the
      fast pace of innovation and change in the front stage and the slow pace of stable
      development and change in the back stage, and maximizes the efficiency of cooperation
      between the front stage and the back stage. The core technology of the mid-platform
      architecture is Kubernetes, which can be used to automatically deploy, expand
      and manage the open source system of container applications. It combines the
      containers that make up the application into logical units for easy monitoring
      and management. This paper takes the design of Kubernetes cluster log collection
      architecture as the starting point, and studies and designs a central platform
      architecture based on cloud native technology, which is of great significance
      for improving the efficiency of enterprise research and development and realizing
      digital and intelligent transformation.", "venue": "Information and Communication
      Technology Convergence", "year": 2023, "referenceCount": 15, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2023-05-17", "journal": {"name": "2023 4th Information Communication Technologies
      Conference (ICTC)", "pages": "311-315"}, "citationStyles": {"bibtex": "@Conference{Chen2023DesignOL,\n
      author = {Tao Chen and Haiyan Suo and Wenqian Xu},\n booktitle = {Information
      and Communication Technology Convergence},\n journal = {2023 4th Information
      Communication Technologies Conference (ICTC)},\n pages = {311-315},\n title
      = {Design of Log Collection Architecture Based on Cloud Native Technology},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2189448055", "name": "Tao Chen"},
      {"authorId": "2189468685", "name": "Haiyan Suo"}, {"authorId": "2211979958",
      "name": "Wenqian Xu"}]}, {"paperId": "585ddadef49f855efe668e1933cf6a338d1a75c5",
      "externalIds": {"DOI": "10.35784/jcsi.3823", "CorpusId": 266679195}, "corpusId":
      266679195, "publicationVenue": {"id": "e5e19f49-709f-4c65-98da-4f19c0d45f34",
      "name": "Journal of Computer Sciences Institute", "type": "journal", "alternate_names":
      ["J Comput Sci Inst"], "issn": "2544-0764", "url": "http://www.jcsi.pollub.pl/"},
      "url": "https://www.semanticscholar.org/paper/585ddadef49f855efe668e1933cf6a338d1a75c5",
      "title": "Comparison of application container orchestration platforms", "abstract":
      "This article presents a comparative analysis of three well-known container
      orchestration platforms: Docker Swarm, Kubernetes and Apache Mesos, focusing
      on the deployment of a test application and measuring parameters such as deployment
      time, memory, CPU and disk utilization, application response time and the time
      to restore a replica of the application using an auto-recovery mechanism. The
      aim of the research is to verify the performance and efficiency of the analyzed
      platforms, facilitating informed decisions while choosing an orchestrator for
      containerized applications. Two research hypotheses have been stated. The first
      one assumes that the time required to launch an application using the Docker
      Swarm tool is the shortest among the analyzed platforms. The second hypothesis
      is that Kubernetes provides the most efficient results in terms of load scheduling
      and application scaling. The analysis performed on the Jenkins application showed
      the superiority of the Docker Swarm platform over the other studied tools in
      terms of performance.", "venue": "Journal of Computer Sciences Institute", "year":
      2023, "referenceCount": 13, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ph.pollub.pl/index.php/jcsi/article/download/3823/4275",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-12-29", "journal": {"name": "Journal of Computer Sciences
      Institute"}, "citationStyles": {"bibtex": "@Article{Pankowski2023ComparisonOA,\n
      author = {Adam Pankowski and Pawe\u0142 Powro\u017anik},\n booktitle = {Journal
      of Computer Sciences Institute},\n journal = {Journal of Computer Sciences Institute},\n
      title = {Comparison of application container orchestration platforms},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2277125342", "name": "Adam Pankowski"},
      {"authorId": "2277121356", "name": "Pawe\u0142 Powro\u017anik"}]}, {"paperId":
      "585e4b881819ba27e90901d3b3b7fc3f1aaef2cf", "externalIds": {"DBLP": "conf/acsos/BurroughsDZPGMP21",
      "DOI": "10.1109/ACSOS-C52956.2021.00073", "CorpusId": 244406231}, "corpusId":
      244406231, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/585e4b881819ba27e90901d3b3b7fc3f1aaef2cf",
      "title": "Towards Autoscaling with Guarantees on Kubernetes Clusters", "abstract":
      "Autoscaling is used by cloud providers, microser-vices, and edge computing
      applications to respond to dynamic load fluctuations. A critical direction of
      research has focused on providing guarantees under uncertainty that the auto
      scaling system will work as intended-both at design-time and more importantly,
      at runtime. In this work, we evaluate the efficacy of three complementary methods:
      A) deterministic finite automata, B) probabilistic process algebra and C) Proportional-Integral-Derivative
      (PID) control. We experimentally evaluate their efficacy in modelling and verify
      autoscaling on clusters managed by Kubernetes. Our results suggest that deterministic
      modelling can provide theoretically optimal guarantees for small deployments;
      probabilistic algebras are able to capture stochastic behaviours, but benefit
      from deterministic templates; and control theory benefits by providing a black-box
      approach for modelling, verification and control.", "venue": "2021 IEEE International
      Conference on Autonomic Computing and Self-Organizing Systems Companion (ACSOS-C)",
      "year": 2021, "referenceCount": 0, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2021-09-01", "journal": {"name": "2021 IEEE International
      Conference on Autonomic Computing and Self-Organizing Systems Companion (ACSOS-C)",
      "pages": "295-296"}, "citationStyles": {"bibtex": "@Article{Burroughs2021TowardsAW,\n
      author = {Stephen Burroughs and Helge Dickel and M. V. Zijl and Vladimir Podolskiy
      and M. Gerndt and R. Malik and Panos Patros},\n booktitle = {2021 IEEE International
      Conference on Autonomic Computing and Self-Organizing Systems Companion (ACSOS-C)},\n
      journal = {2021 IEEE International Conference on Autonomic Computing and Self-Organizing
      Systems Companion (ACSOS-C)},\n pages = {295-296},\n title = {Towards Autoscaling
      with Guarantees on Kubernetes Clusters},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2141350746", "name": "Stephen Burroughs"}, {"authorId": "116665226",
      "name": "Helge Dickel"}, {"authorId": "70643716", "name": "M. V. Zijl"}, {"authorId":
      "39309392", "name": "Vladimir Podolskiy"}, {"authorId": "3240465", "name": "M.
      Gerndt"}, {"authorId": "40154140", "name": "R. Malik"}, {"authorId": "151473641",
      "name": "Panos Patros"}]}, {"paperId": "586eed511d05cb786522cf5c9542b991f834780b",
      "externalIds": {"CorpusId": 204923808}, "corpusId": 204923808, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/586eed511d05cb786522cf5c9542b991f834780b",
      "title": "Migrating Java to the Cloud", "abstract": "ions exist that help us
      deal with the complexity of enterprise-scale infrastructure. More traditional
      VM infrastructure might have \u201cinstance groups\u201d that boot machines
      from \u201cinstance templates,\u201d while container orchestration platforms
      such as DC/OS and Kubernetes completely abstract away infrastructure from our
      applications and services. Both paths are viable\u2014it\u2019s up to you and
      your organization to decide what works the best. A lot of innovation has gone
      into container deployments and related clustering platforms, so it would be
      advisa\u2010 ble to consider them even if they are unfamiliar in your organiza\u2010
      tion. 58 | Chapter 4: Getting Cloud-Native Deployments Right Infrastructure
      Automation Before you deploy your applications, you should consider how your
      infrastructure is managed. Building, scaling, and removing servers should not
      be a human task. Whether you\u2019re leaning towards hypervisors or container
      manage\u2010 ment platforms, your best bet is to manage infrastructure the same
      way as you manage code. This might seem counterintuitive in a world where operations
      and developers live in their own worlds, but the emerging DevOps culture has
      created an \u201corganizational Venn diagram\u201d where the two disciplines
      overlap and collaborate. If you\u2019re logging on to servers and making manual
      changes, then you\u2019ll certainly introduce \u201cconfiguration drift\u201d
      through human error. Even if you maintain servers for a long time, if you stop
      servers from being updated by hand, it\u2019s possible to get very close to
      reason\u2010 ably maintaining the same servers for a very long time without
      drift by using \u201cidempotent updates\u201d of the servers. Tools like Ansible
      are incredibly easy to pick up and learn for people of varying skill levels,
      and the resulting playbooks can be reviewed like code. \u201cPull requests\u201d
      are made against infrastructure and configuration man\u2010 agement code bases,
      where all stakeholders have a chance to review and catch any issues before they
      are promoted to live environments. \u201cImmutable servers\u201d are preferred
      where servers are regularly decommissioned and rebuilt instead of simply updating
      the running infrastructure. As discussed, this type of approach will ensure
      beyond any doubt that the running servers accurately reflect the configuration
      that has been committed. Tools like DC/OS and Kubernetes can make these approaches
      clearer by ensuring that the container is mostly isolated from the environment.
      The only variants between two instances of the same contained packaged application
      are: \u2022 The configuration of the application inside the container (immutable
      application configuration) \u2022 The configuration of the container itself
      (e.g., the configuration expressed in a Dockerfile) Deployment Pipeline | 59
      Both variants are clearly expressed in code when working with con\u2010 tainers
      and container management tools like DC/OS or Kubernetes, which means there should
      no potential of configuration drift. Expressing infrastructure as code should
      be a top priority for teams in complex environments, especially as additional
      resources are pro\u2010 visioned to expand the capacity of the cluster. Configuration
      in the Environment It\u2019s tempting to treat configuration as an afterthought.
      After all, it\u2019s not the hottest area of modern computing, but it\u2019s
      an important one. A look at post-mortems shows that configuration is a common
      cause of incidents. Best practices related to distributed systems are outlined
      in The Twelve-Factor App. Twelve-Factor Apps pass configuration to the application
      from the environment. For instance, the IP of the data\u2010 base is not added
      to the application\u2019s configuration, but instead it is added to the environment
      and referenced from a variable. Success is measurable. For instance, can the
      same artifact running in a preproduction environment be copied to the production
      servers? If the answer is no, explore what decisions have been made that limit
      this portability, and research if environment variables can mitigate the issue.
      For example, in DC/OS and Kubernetes, it\u2019s quite easy to create and reference
      environment variables. The Typesafe Config library can be declared to use a
      variable in the environment or else fall back to development mode variables
      (Example 4-1). Example 4-1. Typesafe Config library example of using environment
      variables along with a fallback mechanism to use development mode configuration
      if the environment variables are not present. hostname = \"127.0.0.1\" hostname
      = ${?HOST} The second variable is noted as optional with the ? character. 127.0.0.1
      will be used if no $HOST variable is present in the envi\u2010 ronment. This
      allows a developer to boot the application locally in test mode, while allowing
      a startup script installed in the environ\u2010 ment or container management
      task scheduling tool such as Mara\u2010 60 | Chapter 4: Getting Cloud-Native
      Deployments Right thon to pass in variables. As long as tooling in the deployment
      chain considers these qualities, it\u2019s possible to use environment variables
      for configuration. Artifacts from Continuous Integration The build artifacts
      need to be stored somewhere for deployment. The decision to use either containers
      or traditional virtualization infrastructure will change how the artifacts are
      stored and deployed. If you\u2019re using VMs, you\u2019ll likely store the
      application build artifacts after successful builds in your continuous integration
      (CI) tool such as Jenkins or Bamboo. After building the application, it\u2019s
      common to have an automatic deployment into a test environment. From there,
      it\u2019s easy to take the artifact and \u201cpromote\u201d it to further environments
      \u2014eventually to QA. Assuming the configuration is stored in the environment,
      you never need to build an artifact specifically for pro\u2010 duction. As mentioned,
      if you\u2019re using traditional VM infrastructure, we rec\u2010 ommend destroying
      and recreating servers with a tool such as Ter\u2010 raform instead of trying
      to manage the servers over multiple releases with a tool such as Ansible alone.
      Ansible promises idempo\u2010 tent changes, but there is a risk of \u201cdrift\u201d
      that may have some impact eventually. If you\u2019re using Kubernetes or DC/OS,
      then the process is slightly dif\u2010 ferent: 1. The end of the build process
      from CI pushes the container to a private Docker registry. 2. The cluster task\u2014for
      example, Marathon configuration or Pod definition\u2014is modified with the
      new docker image from the build task. 3. The platform will note that the state
      of the configuration is dif\u2010 ferent than the running task so it will begin
      a rolling restart. Promotion of an artifact is done by updating the Marathon
      or Pod definition in the next environment.", "venue": "", "year": 2017, "referenceCount":
      3, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["Review"],
      "publicationDate": null, "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Webber2017MigratingJT,\n
      author = {Kevin Webber and J. Goodwin and Modernize},\n title = {Migrating Java
      to the Cloud},\n year = {2017}\n}\n"}, "authors": [{"authorId": "108628513",
      "name": "Kevin Webber"}, {"authorId": "143766598", "name": "J. Goodwin"}, {"authorId":
      "2102846792", "name": "Modernize"}]}, {"paperId": "5880e31796d2b24ad492bc873da5981c3046fe5b",
      "externalIds": {"MAG": "2979820130", "DOI": "10.1109/ICOEI.2019.8862654", "CorpusId":
      204231062}, "corpusId": 204231062, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5880e31796d2b24ad492bc873da5981c3046fe5b",
      "title": "Docker Swarm and Kubernetes in Cloud Computing Environment", "abstract":
      "Distributed computing is a technology which contributes new stack of computing
      placed on virtualization of assets. With the most recent pattern of building
      up the applications on cloud, which empower the customer to get to it in an
      expanding way, by this the heap climbing quickly on the servers. Due to this
      sense of growing the stack on the servers, the resources are not efficiently
      exploited. So this is the logic why it has been brought in this era. The main
      ambition of us is to balance the work on each & every nodes. This will help
      to distribute the work on different nodes by remembering that no hubs ought
      to be overloaded. Thus this paper include what is docker and container by this
      clear cut ideas will helps us out to understand the docker swarm and kubernetes
      technology. Finally the paper shows how the services is been access by the node
      in a cluster with the help out docker swarm and kubernetes and also it provide
      the difference between them.", "venue": "2019 3rd International Conference on
      Trends in Electronics and Informatics (ICOEI)", "year": 2019, "referenceCount":
      15, "citationCount": 37, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2019-04-01", "journal":
      {"name": "2019 3rd International Conference on Trends in Electronics and Informatics
      (ICOEI)", "pages": "179-184"}, "citationStyles": {"bibtex": "@Conference{Marathe2019DockerSA,\n
      author = {Nikhil Marathe and Ankita Gandhi and Jaimeel M. Shah},\n booktitle
      = {2019 3rd International Conference on Trends in Electronics and Informatics
      (ICOEI)},\n journal = {2019 3rd International Conference on Trends in Electronics
      and Informatics (ICOEI)},\n pages = {179-184},\n title = {Docker Swarm and Kubernetes
      in Cloud Computing Environment},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "1396422933", "name": "Nikhil Marathe"}, {"authorId": "3284326", "name": "Ankita
      Gandhi"}, {"authorId": "35636528", "name": "Jaimeel M. Shah"}]}, {"paperId":
      "589026cdcf041f420b8788ce6d6472c0f453e2ac", "externalIds": {"MAG": "3170869416",
      "DOI": "10.26240/HEAL.NTUA.21046", "CorpusId": 236538791}, "corpusId": 236538791,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/589026cdcf041f420b8788ce6d6472c0f453e2ac",
      "title": "Efficient workload co-location on a Kubernetes cluster", "abstract":
      null, "venue": "", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2021-04-15",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{\u039a\u03b1\u03bd\u03b5\u03bb\u03bb\u03cc\u03c0\u03bf\u03c5\u03bb\u03bf\u03c22021EfficientWC,\n
      author = {\u0393\u03b5\u03ce\u03c1\u03b3\u03b9\u03bf\u03c2 \u039a\u03b1\u03bd\u03b5\u03bb\u03bb\u03cc\u03c0\u03bf\u03c5\u03bb\u03bf\u03c2
      and G. Kanellopoulos},\n title = {Efficient workload co-location on a Kubernetes
      cluster},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2121586385", "name":
      "\u0393\u03b5\u03ce\u03c1\u03b3\u03b9\u03bf\u03c2 \u039a\u03b1\u03bd\u03b5\u03bb\u03bb\u03cc\u03c0\u03bf\u03c5\u03bb\u03bf\u03c2"},
      {"authorId": "143667701", "name": "G. Kanellopoulos"}]}, {"paperId": "5895d7547aaca9c1a865f9831d31fa295d81e9bb",
      "externalIds": {"DOI": "10.1109/CSNT51715.2021.9509553", "CorpusId": 237001446},
      "corpusId": 237001446, "publicationVenue": {"id": "8dff82c6-607a-4f61-9efa-a66d43226f8f",
      "name": "International Conference on Communication Systems and Network Technologies",
      "type": "conference", "alternate_names": ["CSNT", "Int Conf Commun Syst Netw
      Technol"]}, "url": "https://www.semanticscholar.org/paper/5895d7547aaca9c1a865f9831d31fa295d81e9bb",
      "title": "Performance Evaluation Using Execution Time Aware Bio-Inspired Virtual
      Machine Placement Strategy", "abstract": "In the generation of computing, technology,
      and communication, cloud computing plays a prominent role. The utility computing
      paradigm which provides resources as a service is known as cloud computing.
      Cloud computing provides efficient use of cloud resources using a scalable simulation
      and modeling process. This work focuses on the performance evaluation of task
      assignments on virtual machine execution using a bio-inspired strategy. The
      quality of service is evaluated using average waiting time and average completion
      time (ms) of tasks assigned to the virtual machines using heavy-duty virtualization.
      An integrated architecture is proposed which inculcates the features of the
      bio-inspired technique and Kubernetes-based orchestration of container or lightweight
      virtual machine. The presented results are compared against static approaches,
      i.e., time shared and first come first serve techniques.", "venue": "International
      Conference on Communication Systems and Network Technologies", "year": 2021,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2021-06-18",
      "journal": {"name": "2021 10th IEEE International Conference on Communication
      Systems and Network Technologies (CSNT)", "pages": "853-859"}, "citationStyles":
      {"bibtex": "@Conference{Rawat2021PerformanceEU,\n author = {P. Rawat and Robin
      Singh Bhadoria},\n booktitle = {International Conference on Communication Systems
      and Network Technologies},\n journal = {2021 10th IEEE International Conference
      on Communication Systems and Network Technologies (CSNT)},\n pages = {853-859},\n
      title = {Performance Evaluation Using Execution Time Aware Bio-Inspired Virtual
      Machine Placement Strategy},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "29874672", "name": "P. Rawat"}, {"authorId": "2123094024", "name": "Robin Singh
      Bhadoria"}]}, {"paperId": "58adc0f0c7e54f92649dbfba658b29f458dcfd67", "externalIds":
      {"MAG": "3041015778", "CorpusId": 226187124}, "corpusId": 226187124, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/58adc0f0c7e54f92649dbfba658b29f458dcfd67",
      "title": "Master thesis : How Kubernetes can support cloud native application
      development ?", "abstract": null, "venue": "", "year": 2020, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2020-01-23", "journal": {"name":
      "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Stappers2020MasterT,\n
      author = {Micha\u00ebl Stappers},\n title = {Master thesis : How Kubernetes
      can support cloud native application development ?},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2007512867", "name": "Micha\u00ebl Stappers"}]}, {"paperId":
      "590e703c6121ff1792fea9099f0424a12fd1072b", "externalIds": {"DOI": "10.1109/IVMEM51402.2020.00017",
      "CorpusId": 232062550}, "corpusId": 232062550, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/590e703c6121ff1792fea9099f0424a12fd1072b",
      "title": "Architecture and deployment details of scalable Jupyter environment
      at Kurchatov Institute supercomputing centre", "abstract": "Jupyter notebook
      is a popular framework for interactive application development and data analysis.
      Deployment of JupyterHub on a supercomputer infrastructure would allow to combine
      high computing power and large storage capacity with convenience and ease of
      use for end users. In this work we present the architecture and deployment details
      of Jupyter framework in Kurchatov Institute computing infrastructure. In our
      setup we combined JupyterHub with CEPHfs storage system, FreeIPA user management
      system, customized CUDA-compatible image with worker applications and used Kubernetes
      as a component orchestrator.", "venue": "2020 Ivannikov Memorial Workshop (IVMEM)",
      "year": 2020, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2020-09-01", "journal": {"name":
      "2020 Ivannikov Memorial Workshop (IVMEM)", "pages": "59-61"}, "citationStyles":
      {"bibtex": "@Article{Teslyuk2020ArchitectureAD,\n author = {A. Teslyuk and S.
      Bobkov and Alexander Belyaev and Alexander Filippov and K. Izotov and I. Lyalin
      and Andrey Shitov and Leonid Yasnopolsky and V. Velikhov},\n booktitle = {2020
      Ivannikov Memorial Workshop (IVMEM)},\n journal = {2020 Ivannikov Memorial Workshop
      (IVMEM)},\n pages = {59-61},\n title = {Architecture and deployment details
      of scalable Jupyter environment at Kurchatov Institute supercomputing centre},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "4627157", "name": "A. Teslyuk"},
      {"authorId": "49249255", "name": "S. Bobkov"}, {"authorId": "2061600748", "name":
      "Alexander Belyaev"}, {"authorId": "2063964983", "name": "Alexander Filippov"},
      {"authorId": "2051654538", "name": "K. Izotov"}, {"authorId": "69897972", "name":
      "I. Lyalin"}, {"authorId": "2079514792", "name": "Andrey Shitov"}, {"authorId":
      "2051655471", "name": "Leonid Yasnopolsky"}, {"authorId": "35320447", "name":
      "V. Velikhov"}]}, {"paperId": "592edcf8d9409a426f9b75d8cf61e0f300fb3551", "externalIds":
      {"MAG": "2988263526", "DBLP": "conf/socc/XuI19", "DOI": "10.1145/3357223.3365759",
      "CorpusId": 207945727}, "corpusId": 207945727, "publicationVenue": {"id": "d13e941e-4cac-4f1d-bdca-77d927e31f1b",
      "name": "ACM Symposium on Cloud Computing", "type": "conference", "alternate_names":
      ["System-on-Chip Conference", "ACM Symp Cloud Comput", "Syst Conf", "Symp Cloud
      Comput", "Annual IEEE International System-on-Chip Conference", "Symposium on
      Cloud Computing", "Annu IEEE Int Syst Conf", "SoCC"], "url": "http://www.ieee-socc.org/"},
      "url": "https://www.semanticscholar.org/paper/592edcf8d9409a426f9b75d8cf61e0f300fb3551",
      "title": "Isopod: An Expressive DSL for Kubernetes Configuration", "abstract":
      "Kubernetes is an open-source cluster orchestration system for containerized
      workloads to reduce idiosyncrasy across cloud vendors [2]. Using Kubernetes,
      Cruise has built a multi-tenant platform with thousands of cores and tens of
      terabytes of memory. Such a scale is possible in part thanks to the declarative
      abstraction of Kubernetes, where desired states are described in YAML manifests
      [5]. However, YAML as a data serialization format is unfit for workload specification.
      Structured data in YAML are untyped and prone to wrong indents and missing fields.
      Due to poor meta-programming support, composing YAML with control logic---loops
      and branches---suffers from YAML fragmentation and indentation tracking (example
      at bit.ly/yml-hell). Moreover, YAML manifests are often generated by filling
      a shared template with cluster-specific parameters---the image tag and the replica
      count might differ in development and production environments. Existing templating
      tools---Helm [11], Kustomize [9], Kapitan [7] and the likes---assume these parameters
      are statically known and use CLIs to query dynamic ones, such as secrets stored
      in HashiCorp Vault [10]. Such scheme is hard to test, since side effects escape
      through CLIs, and highly depends on the execution environment, since CLI versions
      vary across machines or might not exist. Not least, YAML manifests describe
      the eventual state but not how existing workloads will be affected. Blindly
      applying the manifest---for example, from a stale version of code---can be disastrous
      and cause unexpected outages. Isopod presents an alternative configuration paradigm
      by treating Kubernetes objects as first-class citizens. Without intermediate
      YAML artifacts, Isopod renders Kubernetes objects directly in Protocol Buffers
      [8], so they are strongly typed and consumed directly by the Kubernetes API.
      With Isopod, configurations are scripted in Starlark [3], a Python dialect by
      Google also used by Bazel [1] and Buck [4] build systems. To replace CLI dependencies,
      Isopod extends Starlark with runtime built-ins to access services and utilities
      such as Vault, Kubernetes apiserver, Base64 encoder, and UUID generator, etc.
      Isopod uses a separate runtime for unit tests to mock all built-ins, providing
      test coverage that was not possible before. Isopod is also hermetic and secure.
      The common reliance on the kubeconfig file for cluster authentication leaks
      secrets to disk, a security risk if working from a shared host, such as a cluster
      node or CICD worker. Instead, Isopod builds Oauth2 tokens [6] to the target
      cluster using the Identity & Access Management (IAM) service of the cloud vendor.
      Application secrets are stored in Vault and queried at runtime. Hence, no secrets
      escape to the disk. In fact, Isopod prohibits disk IO except for loading Starlark
      modules from other scripts. No external libraries can be loaded unless explicitly
      implemented as an Isopod built-in. Distributed as a single binary, Isopod is
      self-contained with all dependencies. Finally, Isopod is extensible. Protobuf
      packages of Kubernetes API groups added in the future can be loaded in the same
      way. Because built-ins are modular and pluggable, users can easily implement
      and register new built-ins with the Isopod runtime to support any Kubernetes
      vendors. Isopod offers many other features, such as object life cycle management
      and parallel rollout to multiple clusters, which is impossible if using kubeconfig.
      In dry-run mode, Isopod displays intended actions from the current code change
      as a YAML diff against live objects in the cluster to avoid unexpected configuration
      change. Since the adoption of Isopod, the PaaS team at Cruise has migrated 14
      applications and added another 16 without outage or regression, totaling around
      10,000 lines of Starlark. The migration results in up to 60% reduction in code
      size and 80% faster rollout due to code reuse, cluster parallelism, and the
      removal of YAML intermediaries. All unit tests take less than 10 secs to finish.
      Isopod is open source at github.com/cruise-automation/isopod.", "venue": "ACM
      Symposium on Cloud Computing", "year": 2019, "referenceCount": 12, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"], "publicationDate":
      "2019-11-20", "journal": {"name": "Proceedings of the ACM Symposium on Cloud
      Computing"}, "citationStyles": {"bibtex": "@Book{Xu2019IsopodAE,\n author =
      {Charles Xu and Dmitry Ilyevskiy},\n booktitle = {ACM Symposium on Cloud Computing},\n
      journal = {Proceedings of the ACM Symposium on Cloud Computing},\n title = {Isopod:
      An Expressive DSL for Kubernetes Configuration},\n year = {2019}\n}\n"}, "authors":
      [{"authorId": "2115473646", "name": "Charles Xu"}, {"authorId": "1404269139",
      "name": "Dmitry Ilyevskiy"}]}, {"paperId": "593eaf39d002d3bcf3e8d42b6f1d2c68ea5ab01e",
      "externalIds": {"DBLP": "conf/asiaccs/LeAWJ23", "DOI": "10.1145/3579856.3582835",
      "CorpusId": 259328003}, "corpusId": 259328003, "publicationVenue": {"id": "87fc9c3c-cc7f-42aa-ba71-2700729a6788",
      "name": "ACM Asia Conference on Computer and Communications Security", "type":
      "conference", "alternate_names": ["AsiaCCS", "ACM Asia Conf Comput Commun Secur",
      "ACM Symposium on Information, Computer and Communications Security", "ACM Symp
      Inf Comput Commun Secur", "ASIACCS"], "url": "https://dl.acm.org/conference/asia-ccs"},
      "url": "https://www.semanticscholar.org/paper/593eaf39d002d3bcf3e8d42b6f1d2c68ea5ab01e",
      "title": "Securing Container-based Clouds with Syscall-aware Scheduling", "abstract":
      "Container-based clouds\u2014in which containers are the basic unit of isolation\u2014face
      security concerns because, unlike Virtual Machines, containers directly interface
      with the underlying highly privileged kernel through the wide and vulnerable
      system call interface. Regardless of whether a container itself requires dangerous
      system calls, a compromised or malicious container sharing the host (a bad neighbor)
      can compromise the host kernel using a vulnerable syscall, thereby compromising
      all other containers sharing the host. In this paper, rather than attempting
      to eliminate host compromise, we limit the effectiveness of attacks by bad neighbors
      to a subset of the cluster. To do this, we propose a new metric dubbed Extraneous
      System call Exposure (ExS). Scheduling containers to minimize ExS reduces the
      number of nodes that expose a vulnerable system call and as a result the number
      of affected containers in the cluster. Experimenting with 42 popular containers
      on SySched, our greedy scheduler implementation in Kubernetes, we demonstrate
      that SySched can reduce up to 46% more victim nodes and up to 48% more victim
      containers compared to the Kubernetes default scheduling while also reducing
      overall host attack surface by 20%.", "venue": "ACM Asia Conference on Computer
      and Communications Security", "year": 2023, "referenceCount": 57, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3579856.3582835", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Book", "JournalArticle", "Conference"], "publicationDate": "2023-07-10", "journal":
      {"name": "Proceedings of the 2023 ACM Asia Conference on Computer and Communications
      Security"}, "citationStyles": {"bibtex": "@Book{Le2023SecuringCC,\n author =
      {Michael V. Le and Salman Ahmed and Dan Williams and H. Jamjoom},\n booktitle
      = {ACM Asia Conference on Computer and Communications Security},\n journal =
      {Proceedings of the 2023 ACM Asia Conference on Computer and Communications
      Security},\n title = {Securing Container-based Clouds with Syscall-aware Scheduling},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "144292186", "name": "Michael
      V. Le"}, {"authorId": "2206369686", "name": "Salman Ahmed"}, {"authorId": "30904419",
      "name": "Dan Williams"}, {"authorId": "2704919", "name": "H. Jamjoom"}]}, {"paperId":
      "59544980c17f1455259422118f003967a775c4a4", "externalIds": {"ArXiv": "1910.08547",
      "MAG": "2980980299", "DBLP": "journals/corr/abs-1910-08547", "CorpusId": 204800484},
      "corpusId": 204800484, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/59544980c17f1455259422118f003967a775c4a4",
      "title": "CDAG: A Serialized blockDAG for Permissioned Blockchain", "abstract":
      "Blockchain is maintained as a global log between a network of nodes and uses
      cryptographic distributed protocols to synchronize the updates. As adopted by
      Bitcoin and Ethereum these update operations to the ledger are serialized, and
      executed in batches. To safeguard the system against the generation of conflicting
      sets of updates and maintain the consistency of the ledger, the frequency of
      the updates is controlled, which severely affects the performance of the system.
      \nThis paper presents Converging Directed Acyclic Graph (CDAG), as a substitute
      for the chain and DAG structures used in other blockchain protocols. CDAG allows
      multiple parallel updates to the ledger and converges them at the next step
      providing finality to the blocks. It partitions the updates into non-intersecting
      buckets of transactions to prevent the generation of conflicting blocks and
      divide the time into slots to provide enough time for them to propagate in the
      network. Multiple simultaneous updates improve the throughput of CDAG, and the
      converging step helps to finalize them faster, even in the presence of conflicts.
      Moreover, CDAG provides a total order among the blocks of the ledger to support
      smart contracts, unlike some of the other blockDAG protocols. \nWe evaluate
      the performance of CDAG on Google Cloud Platform using Google Kubernetes Engine,
      simulating a real-time network. Experimental results show that CDAG achieves
      a throughput of more than 2000 transactions per second and confirms them well
      in under 2 minutes. Also, the protocol scales well in comparison to other permissioned
      protocols, and the capacity of the network only limits the performance.", "venue":
      "arXiv.org", "year": 2019, "referenceCount": 29, "citationCount": 11, "influentialCitationCount":
      3, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-10-18", "journal": {"name": "ArXiv",
      "volume": "abs/1910.08547"}, "citationStyles": {"bibtex": "@Article{Gupta2019CDAGAS,\n
      author = {H. Gupta and D. Janakiram},\n booktitle = {arXiv.org},\n journal =
      {ArXiv},\n title = {CDAG: A Serialized blockDAG for Permissioned Blockchain},\n
      volume = {abs/1910.08547},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2055613637", "name": "H. Gupta"}, {"authorId": "70271329", "name": "D. Janakiram"}]},
      {"paperId": "597a71692c668d1a3cfbc77639fa71f11313541e", "externalIds": {"MAG":
      "3169211524", "DOI": "10.29100/JIPI.V6I1.1908", "CorpusId": 237822259}, "corpusId":
      237822259, "publicationVenue": {"id": "94d52a09-6024-4a1d-8ee4-c4592e9e63a8",
      "name": "JIPI (Jurnal Ilmiah Penelitian dan Pembelajaran Informatika)", "alternate_names":
      ["JIPI (jurnal Ilm Penelit dan Pembelajaran Inform"], "issn": "2540-8984", "url":
      "https://jurnal.stkippgritulungagung.ac.id/index.php/jipi/", "alternate_urls":
      ["https://jurnal.stkippgritulungagung.ac.id/index.php/jipi/index"]}, "url":
      "https://www.semanticscholar.org/paper/597a71692c668d1a3cfbc77639fa71f11313541e",
      "title": "CLOUD STORAGE DENGAN TEKNOLOGI KUBERNETES UNTUK PLATFORM COLLABORATIVE
      RESEARCH", "abstract": "Memberikan model alternatif untuk penerapan penelitian
      kolaboratif melalui layanan teknologi komputasi awan yang diim- plementasikan
      di lingkungan komputer lokal atau untuk menampung penyimpanan file di luar lokasi,
      penggunaan berbagi file\u00a0 cloud sangat bermanfaat dan mudah. Penggunaan
      teknologi ini harus diimplementasikan dan diuji keandalannya dalam skala\u00a0\u00a0\u00a0
      yang baik sehingga jika akan dikembangkan lebih lanjut dapat segera diimplementasikan
      dan sesuai dengan lingkungan dan\u00a0 sumber daya jaringan yang ada. Penelitian
      ini berfokus pada implementasi dan pengujian performa kecepatan dan user request\u00a0
      yang menghasilkan nilai A pada uji kecepatan pada GTMetrix dan load peak tertinggi
      connection time 0-5ms. Solusi terhadap penurunan performa dapat disolusikan
      dengan menggunakan model scaling dikombinasikan dengan proxy, dan load balancing.",
      "venue": "JIPI (Jurnal Ilmiah Penelitian dan Pembelajaran Informatika)", "year":
      2021, "referenceCount": 11, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [], "publicationTypes": null, "publicationDate": "2021-05-31", "journal": {"name":
      "JIPI (Jurnal Ilmiah Penelitian dan Pembelajaran Informatika)"}, "citationStyles":
      {"bibtex": "@Article{Nugroho2021CLOUDSD,\n author = {M. A. Nugroho and Rikie
      Kartadie},\n booktitle = {JIPI (Jurnal Ilmiah Penelitian dan Pembelajaran Informatika)},\n
      journal = {JIPI (Jurnal Ilmiah Penelitian dan Pembelajaran Informatika)},\n
      title = {CLOUD STORAGE DENGAN TEKNOLOGI KUBERNETES UNTUK PLATFORM COLLABORATIVE
      RESEARCH},\n year = {2021}\n}\n"}, "authors": [{"authorId": "2066408676", "name":
      "M. A. Nugroho"}, {"authorId": "2104094015", "name": "Rikie Kartadie"}]}, {"paperId":
      "5987ad9867b954e7a1cf2bfb40df2a0f8c442433", "externalIds": {"MAG": "2587745698",
      "CorpusId": 63368334}, "corpusId": 63368334, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/5987ad9867b954e7a1cf2bfb40df2a0f8c442433",
      "title": "DevOps for VMware Administrators", "abstract": "DevOps for VMware
      Administrators is the first book focused on using DevOps tools and practices
      with VMware technologies. The authors introduce high-value tools from third
      parties and VMware itself, and guide you through using them to improve the performance
      of all your virtualized systems and applications. Youll walk through automating
      and optimizing configuration management, provisioning, log management, continuous
      integration, and more. The authors also offer step-by-step coverage of deploying
      and managing applications at scale with Docker containers and Google Kubernetes.
      They conclude with an up-to-the-minute discussion of VMwares newest DevOps initiatives,
      including VMware vRealize Automation and VMware vRealize Code Stream. Coverage
      includes Understanding the challenges that DevOps tools and practices can help
      VMware administrators to solve Using Vagrant to quickly deploy Dev and Test
      environments that match production system specifications Writing Chef recipes
      that streamline server configuration and maintenance Simplifying Unix/Linux
      configuration management and orchestration with Ansible Implementing Docker
      containers for faster and easier application management Automating provisioning
      across the full lifecycle with Razor Integrating Microsoft PowerShell Desired
      State Configuration (DSC) and VMware PowerCLI to automate key Windows Server
      and vSphere VM admin tasks Using Puppet to automate infrastructure provisioning,
      configuration, orchestration, and reporting Supercharging log management with
      ELK (Elasticsearch, Logstash, Kibana) Supporting DevOps source code management
      with Git and continuous integration practices with Jenkins Achieving continuous
      integration, delivery, and deployment with VMwares vRealize Code Stream", "venue":
      "", "year": 2015, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2015-03-19", "journal": {"name": "", "volume": ""},
      "citationStyles": {"bibtex": "@Inproceedings{Roberts2015DevOpsFV,\n author =
      {Trevor A. Roberts and Josh Atwell and Egle Sigler and Yvo van Doorn},\n title
      = {DevOps for VMware Administrators},\n year = {2015}\n}\n"}, "authors": [{"authorId":
      "2053044808", "name": "Trevor A. Roberts"}, {"authorId": "72022787", "name":
      "Josh Atwell"}, {"authorId": "69880757", "name": "Egle Sigler"}, {"authorId":
      "71472875", "name": "Yvo van Doorn"}]}, {"paperId": "59a37037a289b528282c175b7fe1614024a4a3b3",
      "externalIds": {"MAG": "3152244295", "DBLP": "journals/ijgi/ErlacherAJPB21",
      "DOI": "10.3390/IJGI10040244", "CorpusId": 233534980}, "corpusId": 233534980,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/59a37037a289b528282c175b7fe1614024a4a3b3",
      "title": "A Framework for Cloud-Based Spatially-Explicit Uncertainty and Sensitivity
      Analysis in Spatial Multi-Criteria Models", "abstract": "Global sensitivity
      analysis, like variance-based methods for massive raster datasets, is especially
      computationally costly and memory-intensive, limiting its applicability for
      commodity cluster computing. The computational effort depends mainly on the
      number of model runs, the spatial, spectral, and temporal resolutions, the number
      of criterion maps, and the model complexity. The current Spatially-Explicit
      Uncertainty and Sensitivity Analysis (SEUSA) approach employs a cluster-based
      parallel and distributed Python\u2013Dask solution for large-scale spatial problems,
      which validates and quantifies the robustness of spatial model solutions. This
      paper presents the design of a framework to perform SEUSA as a Service in a
      cloud-based environment scalable to very large raster datasets and applicable
      to various domains, such as landscape assessment, site selection, risk assessment,
      and land-use management. It incorporates an automated Kubernetes service for
      container virtualization, comprising a set of microservices to perform SEUSA
      as a Service. Implementing the proposed framework will contribute to a more
      robust assessment of spatial multi-criteria decision-making applications, facilitating
      a broader access to SEUSA by the research community and, consequently, leading
      to higher quality decision analysis.", "venue": "ISPRS Int. J. Geo Inf.", "year":
      2021, "referenceCount": 77, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/2220-9964/10/4/244/pdf?version=1617941251",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2021-04-01", "journal": {"name": "ISPRS
      Int. J. Geo Inf.", "pages": "244", "volume": "10"}, "citationStyles": {"bibtex":
      "@Article{Erlacher2021AFF,\n author = {Christoph Erlacher and Karl-Heinrich
      Anders and P. Jankowski and Gernot Paulus and T. Blaschke},\n booktitle = {ISPRS
      Int. J. Geo Inf.},\n journal = {ISPRS Int. J. Geo Inf.},\n pages = {244},\n
      title = {A Framework for Cloud-Based Spatially-Explicit Uncertainty and Sensitivity
      Analysis in Spatial Multi-Criteria Models},\n volume = {10},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "72417063", "name": "Christoph Erlacher"}, {"authorId":
      "37727716", "name": "Karl-Heinrich Anders"}, {"authorId": "144187147", "name":
      "P. Jankowski"}, {"authorId": "50377115", "name": "Gernot Paulus"}, {"authorId":
      "50594282", "name": "T. Blaschke"}]}, {"paperId": "59ada53b62bdacbf22f6200ff38e802efb49f0e0",
      "externalIds": {"DBLP": "conf/bwcca/PilyaiIZNHT23", "DOI": "10.1007/978-3-031-46784-4_5",
      "CorpusId": 267637644}, "corpusId": 267637644, "publicationVenue": {"id": "cbae9745-c845-4b89-93a3-aa343665ca0a",
      "name": "Broadband and Wireless Computing, Communication and Applications",
      "type": "conference", "alternate_names": ["Broadband Wirel Comput Commun Appl",
      "BWCCA"], "url": "http://www.wikicfp.com/cfp/program?id=334"}, "url": "https://www.semanticscholar.org/paper/59ada53b62bdacbf22f6200ff38e802efb49f0e0",
      "title": "Implementation and Benchmarking of Kubernetes Horizontal Pod Autoscaling
      Method to Event-Driven Messaging System", "abstract": null, "venue": "Broadband
      and Wireless Computing, Communication and Applications", "year": 2023, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "45-56"}, "citationStyles": {"bibtex": "@Article{Pilyai2023ImplementationAB,\n
      author = {Xavier Pilyai and Rafsanjani Nurul Irsyad and Ikhwan Nashir Zaini
      and R. Negara and S. N. Hertiana and Rohmat Tulloh},\n booktitle = {Broadband
      and Wireless Computing, Communication and Applications},\n pages = {45-56},\n
      title = {Implementation and Benchmarking of Kubernetes Horizontal Pod Autoscaling
      Method to Event-Driven Messaging System},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2283940470", "name": "Xavier Pilyai"}, {"authorId": "2283939909",
      "name": "Rafsanjani Nurul Irsyad"}, {"authorId": "2211002140", "name": "Ikhwan
      Nashir Zaini"}, {"authorId": "9434115", "name": "R. Negara"}, {"authorId": "9126641",
      "name": "S. N. Hertiana"}, {"authorId": "2073826137", "name": "Rohmat Tulloh"}]},
      {"paperId": "59bea0b764f11b4a0c816b841c53733ba8c2b945", "externalIds": {"ArXiv":
      "2112.02267", "DBLP": "journals/corr/abs-2112-02267", "CorpusId": 245124048},
      "corpusId": 245124048, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/59bea0b764f11b4a0c816b841c53733ba8c2b945",
      "title": "Integration of FogBus2 Framework with Container Orchestration Tools
      in Cloud and Edge Computing Environments", "abstract": "Currently, due to the
      advantages of light weight, simple deployment, multi-environment support, short
      startup time, scalability, and easy migration, container technology has been
      widely used in both cloud and edge/fog computing, and addresses the problem
      of device heterogeneity in different computing environments. On this basis,
      as one of the most popular container orchestration and management systems, Kubernetes
      almost dominates the cloud environment. However, since it is primarily designed
      for centralized resource management scenarios where computing resources are
      sufficient, the system is unstable in edge environments due to hardware limitations.
      Therefore, in order to realize container orchestration in the cloud and edge/fog
      hybrid computing environment, we propose a feasible approach to build a hybrid
      clustering based on K3s, which solves the problem that virtual instances in
      different environments cannot be connected due to IP addresses. We also propose
      three design patterns for deploying the FogBus2 framework into hybrid environments,
      including 1) Host Network Mode, 2) Proxy Server, and 3) Environment Variable.",
      "venue": "arXiv.org", "year": 2021, "referenceCount": 21, "citationCount": 1,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Environmental Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2021-12-04", "journal": {"name": "ArXiv", "volume": "abs/2112.02267"},
      "citationStyles": {"bibtex": "@Article{Wang2021IntegrationOF,\n author = {Zhiyu
      Wang and R. Buyya},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title
      = {Integration of FogBus2 Framework with Container Orchestration Tools in Cloud
      and Edge Computing Environments},\n volume = {abs/2112.02267},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2109045973", "name": "Zhiyu Wang"}, {"authorId": "1709598",
      "name": "R. Buyya"}]}, {"paperId": "59d86dfcaab4d4710485af0ed90685f57902db54",
      "externalIds": {"DBLP": "conf/nof/RamosLS23", "DOI": "10.1109/NoF58724.2023.10302754",
      "CorpusId": 264976121}, "corpusId": 264976121, "publicationVenue": {"id": "966ed49f-abb2-4051-a7e7-c966d9426b85",
      "name": "International Conference on Network of the Future", "type": "conference",
      "alternate_names": ["Int Conf Netw Future", "NoF", "NOF", "International Conference
      on Network of Future"]}, "url": "https://www.semanticscholar.org/paper/59d86dfcaab4d4710485af0ed90685f57902db54",
      "title": "Flight mission-based service orchestration in UAVs", "abstract": "Drones
      proliferation into multiple areas has become apparent, due to their ability
      to go anywhere without having to worry about terrain constraints and dangerous
      substances, and their offering of advantageous points of view. One area in which
      their use is being vastly explored is aiding in emergency situations, like supporting
      emergency infrastructures. In these scenarios they are used to deploy a plenitude
      of services, such as video streaming, communications access points, sensor gathering.
      All these services need to be maintained as a mission progresses. There is,
      however, a separation between the management of these services and the system
      that controls the drones. This lack of synchronization between all systems involved
      leads to more time being splurged on prepping the services, with the deployments
      having to be done manually.This paper proposes to bridge these systems together.
      It uses a mission planning framework that is able to control fleets of drones.
      The service management is done through Kubernetes, and the synchronization is
      achieved via an intermediary entity that allows the mission planning framework
      to interact with the Kubernetes cluster. With this approach, the setup of the
      services can be performed dynamically and according to the mission requirements,
      which can change over time. The proposed approach is evaluated both with respect
      to its scalability and to the Kubernetes performance, including the costs associated
      to its use. The results show that the approach is scalable and can indeed improve
      the downtime of the services.", "venue": "International Conference on Network
      of the Future", "year": 2023, "referenceCount": 14, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2023-10-04", "journal": {"name": "2023 14th
      International Conference on Network of the Future (NoF)", "pages": "132-140"},
      "citationStyles": {"bibtex": "@Article{Ramos2023FlightMS,\n author = {Joaquim
      Ramos and Miguel Lu\u00eds and Susana Sargento},\n booktitle = {International
      Conference on Network of the Future},\n journal = {2023 14th International Conference
      on Network of the Future (NoF)},\n pages = {132-140},\n title = {Flight mission-based
      service orchestration in UAVs},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2265242714", "name": "Joaquim Ramos"}, {"authorId": "144045624", "name": "Miguel
      Lu\u00eds"}, {"authorId": "2264966652", "name": "Susana Sargento"}]}, {"paperId":
      "59dc7f786a0499b739ac1323ba1eda7ac860c63e", "externalIds": {"DBLP": "conf/wcre/FloraTA23",
      "DOI": "10.1109/SANER56733.2023.00084", "CorpusId": 258722557}, "corpusId":
      258722557, "publicationVenue": {"id": "d8655d54-1311-417a-91f7-c5c6daf8fba2",
      "name": "IEEE International Conference on Software Analysis, Evolution, and
      Reengineering", "type": "conference", "alternate_names": ["IEEE Int Conf Softw
      Anal Evol Reengineering", "SANER"], "url": "http://www.informatik.uni-stuttgart.de/ifi/ps/reengineering/"},
      "url": "https://www.semanticscholar.org/paper/59dc7f786a0499b739ac1323ba1eda7ac860c63e",
      "title": "\u00b5Detector: Automated Intrusion Detection for Microservices",
      "abstract": "The recent adoption of microservice-based applications divides
      an application into small independent services that communicate using lightweight
      mechanisms, improving flexibility and scalability in dynamic DevOps environments
      that leverage containers and orchestration tools such as Kubernetes. However,
      this growing popularity raises concerns related to their dependability and security,
      aggravated by several attacks and the lack of intrusion detection tools that
      target microservices. Thus, developing solutions that can be deployed in real-world
      scenarios and whose purpose is to keep applications and businesses secure is
      of the utmost importance. This paper presents \u00b5Detector, an intrusion detection
      tool for microservice-based applications. This tool uses intrusion detection
      techniques from previous research and automates their functioning for Kubernetes
      and KubeEdge deployments. The user provides a configuration file and the tool
      uses monitoring agents to collect system calls from the containers and transfers
      them over to the IDS module that performs anomaly-based intrusion detection.
      Anomalous activity will trigger alarms indicating a possible intrusion. The
      user can interact with the tool and its monitoring capabilities through a command-line
      interface or a web dashboard. \u00b5Detector was validated using functional
      testing and performance and scalability tests. Results show that \u00b5Detector
      performs well and does not impact the proper functioning of the microservices:
      in scenarios with over 100 000 system calls being collected per second, the
      CPU and memory usage of the worker nodes did not exceed 10% of the total resources
      available.The source code repository can be accessed here: https://github.com/micro-sec/detector.",
      "venue": "IEEE International Conference on Software Analysis, Evolution, and
      Reengineering", "year": 2023, "referenceCount": 22, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2023-03-01", "journal": {"name": "2023 IEEE International
      Conference on Software Analysis, Evolution and Reengineering (SANER)", "pages":
      "748-752"}, "citationStyles": {"bibtex": "@Article{Flora2023\u00b5DetectorAI,\n
      author = {Jos\u00e9 Flora and Miguel Teixeira and Nuno Antunes},\n booktitle
      = {IEEE International Conference on Software Analysis, Evolution, and Reengineering},\n
      journal = {2023 IEEE International Conference on Software Analysis, Evolution
      and Reengineering (SANER)},\n pages = {748-752},\n title = {\u00b5Detector:
      Automated Intrusion Detection for Microservices},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "1404326007", "name": "Jos\u00e9 Flora"}, {"authorId": "2146855534",
      "name": "Miguel Teixeira"}, {"authorId": "143725286", "name": "Nuno Antunes"}]},
      {"paperId": "59e9bce277f8731ec25d370081329c3fda43e43f", "externalIds": {"DOI":
      "10.17577/ijertv9is120230", "CorpusId": 233264644}, "corpusId": 233264644, "publicationVenue":
      {"id": "a02c05c9-9eb9-4fb4-bf69-debe5435ed11", "name": "International Journal
      of Engineering Research", "type": "journal", "alternate_names": ["International
      Journal of Engineering Research and", "International journal of engineering
      research and technology", "Int j eng res technol", "Int J Eng Res"], "issn":
      "2319-6890", "alternate_issns": ["2278-0181"], "url": "http://www.ijer.in/",
      "alternate_urls": ["https://www.ijert.org/"]}, "url": "https://www.semanticscholar.org/paper/59e9bce277f8731ec25d370081329c3fda43e43f",
      "title": "Driver Drowsiness Detection using Microservices and Convolutional
      Neural Network", "abstract": "Road accidents are one of the main contributors
      to net fatality rates in India. According to a recent survey in 2020, 43% of
      road accidents come from drowsy driving. Driving over hours and being in the
      same state makes the driver feel exhausted and fatigue leading them to drowsiness.
      A report from Road Transport of India stated that on average 5210 tragedies
      occur each year alone on the highways of India. A primary system to measure
      and alert the driver must be mandatory for any moving vehicle. In this paper,
      a modern approach is proposed for real-time drowsiness detection. A production-grade
      application with microservice architecture is one of the main focus of this
      paper. The process of building up the data, augmenting it to a desired level
      and finally labeling is presented. The customized state of art model is proposed
      that can achieve an accuracy of 83.65%. Keywords\u2014Deeplearning; microservices;
      drowsiness detection system; real-time application; kubernetes", "venue": "International
      Journal of Engineering Research", "year": 2020, "referenceCount": 5, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Review"], "publicationDate": "2020-12-31", "journal":
      {"name": "International Journal of Engineering Research and"}, "citationStyles":
      {"bibtex": "@Article{Shah2020DriverDD,\n author = {Shrut Shah},\n booktitle
      = {International Journal of Engineering Research},\n journal = {International
      Journal of Engineering Research and},\n title = {Driver Drowsiness Detection
      using Microservices and Convolutional Neural Network},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2136749564", "name": "Shrut Shah"}]}, {"paperId":
      "5a07230f05d4e2379624c8be6d68f3e03bcbf916", "externalIds": {"MAG": "3000089781",
      "CorpusId": 212831711}, "corpusId": 212831711, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/5a07230f05d4e2379624c8be6d68f3e03bcbf916",
      "title": "Kubernetes : Ma\u00eetrisez l''orchestrateur des infrastructures du
      futur", "abstract": "Google deploie 2 millions d''applications sur containers
      par semaine. Kubernetes, cree a l''origine par Google, est un logiciel qui permet
      d\u2019automatiser la montee en charge et la gestion d\u2019applications informatiques
      sur des infrastructures virtuelles (containers). Kubernetes est complementaire
      de Docker : ce dernier permet de gerer le cycle de vie des conteneurs, alors
      que Kubernetes se charge de l\u2019orchestration et de la gestion d\u2019un
      grand nombre de conteneurs.Ce guide vous explique comment Kubernetes et la technologie
      des containers peut vous aider a atteindre de meilleurs niveaux de vitesse d\u2019agilite
      de fiabilite et d\u2019efficacite avec vos infrastructures virtuelles.", "venue":
      "", "year": 2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [], "publicationTypes": null, "publicationDate": null, "journal": {"name": "",
      "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Hightower2019KubernetesM,\n
      author = {Kelsey Hightower and Brendan D. Burns and Joseph S. Beda},\n title
      = {Kubernetes : Ma\u00eetrisez l''orchestrateur des infrastructures du futur},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "2105590345", "name": "Kelsey
      Hightower"}, {"authorId": "2056947502", "name": "Brendan D. Burns"}, {"authorId":
      "66571160", "name": "Joseph S. Beda"}]}, {"paperId": "5a71893b4478bded61bd70d7b5cc4b10e49fc6ac",
      "externalIds": {"MAG": "2883395154", "DOI": "10.3139/9783446456020.023", "CorpusId":
      187522675}, "corpusId": 187522675, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5a71893b4478bded61bd70d7b5cc4b10e49fc6ac",
      "title": "Anhang E: Kubernetes-Ressourcen in diesem Buch", "abstract": null,
      "venue": "Kubernetes in Action", "year": 2018, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes": null, "publicationDate":
      "2018-07-09", "journal": {"name": "Kubernetes in Action"}, "citationStyles":
      {"bibtex": "@Article{Luk\u0161a2018AnhangEK,\n author = {Marko Luk\u0161a},\n
      booktitle = {Kubernetes in Action},\n journal = {Kubernetes in Action},\n title
      = {Anhang E: Kubernetes-Ressourcen in diesem Buch},\n year = {2018}\n}\n"},
      "authors": [{"authorId": "79519972", "name": "Marko Luk\u0161a"}]}, {"paperId":
      "5a8b3cd46f7d895447a3bde20428a230f224a756", "externalIds": {"DBLP": "conf/colcom/ZhangWLD22",
      "DOI": "10.1007/978-3-031-24383-7_18", "CorpusId": 256461501}, "corpusId": 256461501,
      "publicationVenue": {"id": "970da7e6-9566-441b-835a-5ca5db7c4deb", "name": "International
      Conference on Collaborative Computing", "type": "conference", "alternate_names":
      ["Collaborative Computing", "Int Conf Collab Comput", "Collab Comput", "CollaborateCom"],
      "url": "http://www.collaboratecom.org/"}, "url": "https://www.semanticscholar.org/paper/5a8b3cd46f7d895447a3bde20428a230f224a756",
      "title": "An Efficient Scheduling Strategy for Containers Based on Kubernetes",
      "abstract": null, "venue": "International Conference on Collaborative Computing",
      "year": 2022, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": null, "journal": {"pages": "326-342"}, "citationStyles":
      {"bibtex": "@Article{Zhang2022AnES,\n author = {Xurong Zhang and Xiaofeng Wang
      and Yuan Liu and Zhaohong Deng},\n booktitle = {International Conference on
      Collaborative Computing},\n pages = {326-342},\n title = {An Efficient Scheduling
      Strategy for Containers Based on Kubernetes},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2130051080", "name": "Xurong Zhang"}, {"authorId": "2133421676",
      "name": "Xiaofeng Wang"}, {"authorId": "2143861946", "name": "Yuan Liu"}, {"authorId":
      "2075351897", "name": "Zhaohong Deng"}]}, {"paperId": "5a99836fc7d81952e5011415a03abb1ac0382c2c",
      "externalIds": {"MAG": "2997005626", "DBLP": "conf/ictc/ZhaoL0L19", "DOI": "10.1109/ictc46691.2019.8939932",
      "CorpusId": 209497975}, "corpusId": 209497975, "publicationVenue": {"id": "9aa57e01-2dc2-4422-93b7-2b628326f78c",
      "name": "Information and Communication Technology Convergence", "type": "conference",
      "alternate_names": ["International Conference on Information and Communication
      Technology Convergence", "Inf Commun Technol Converg", "Int Conf Inf Commun
      Technol Converg", "ICTC"]}, "url": "https://www.semanticscholar.org/paper/5a99836fc7d81952e5011415a03abb1ac0382c2c",
      "title": "Predictive Container Auto-Scaling for Cloud-Native Applications",
      "abstract": "In the past decade, cloud computing has become an essential technology
      in many areas such as Internet of Things, artificial intelligence, and social
      media. In the cloud-computing environment, the auto-scaling capability of services
      is important to optimize cloud operating costs and Quality of Service. Therefore,
      there is a need for auto-scaling technology that is able to dynamically adjust
      resource allocation to cloud services based on incoming workload. In this paper,
      we present a predictive auto-scaler for Kubernetes clusters to improve the efficiency
      of container auto-scaling. Being based on a predictive algorithm, our auto-scaling
      scheme simplifies the architecture of existing auto-scaling system for more
      efficient service offerings. In addition, we present experimental evaluation
      results of our proposed scheme.", "venue": "Information and Communication Technology
      Convergence", "year": 2019, "referenceCount": 7, "citationCount": 9, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2019-10-01", "journal": {"name": "2019 International Conference
      on Information and Communication Technology Convergence (ICTC)", "pages": "1280-1282"},
      "citationStyles": {"bibtex": "@Article{Zhao2019PredictiveCA,\n author = {Hanqing
      Zhao and H. Lim and Muhammad Hanif and Choonhwa Lee},\n booktitle = {Information
      and Communication Technology Convergence},\n journal = {2019 International Conference
      on Information and Communication Technology Convergence (ICTC)},\n pages = {1280-1282},\n
      title = {Predictive Container Auto-Scaling for Cloud-Native Applications},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "1471640445", "name": "Hanqing
      Zhao"}, {"authorId": "2110708100", "name": "H. Lim"}, {"authorId": "145917478",
      "name": "Muhammad Hanif"}, {"authorId": "92671954", "name": "Choonhwa Lee"}]},
      {"paperId": "5ab050fd52a9ef3ff00c552c4479a09de717a2d5", "externalIds": {"MAG":
      "2968885912", "DBLP": "conf/fmec/SamirP19a", "DOI": "10.1109/FMEC.2019.8795322",
      "CorpusId": 201067298}, "corpusId": 201067298, "publicationVenue": {"id": "9846de51-dadf-4086-9e40-62466a7e2c87",
      "name": "International Conference on Fog and Mobile Edge Computing", "type":
      "conference", "alternate_names": ["FMEC", "Int Conf Fog Mob Edge Comput"]},
      "url": "https://www.semanticscholar.org/paper/5ab050fd52a9ef3ff00c552c4479a09de717a2d5",
      "title": "Self-Adaptive Healing for Containerized Cluster Architectures with
      Hidden Markov Models", "abstract": "Edge cloud environments are often build
      as virtualized coordinated clusters of possibly heterogeneous devices. In the
      emerging of cluster platforms like Kubernetes or Docker Swarm, scalability is
      based on resource utilization. Resource utilization has been used for capacity
      planning and for forecasting resource demand. However, due to the large scale
      and complex structure of these architectures, analyzing large amount of monitoring
      data may cause a huge resource overhead that affects the performance of anomaly
      detection and the accuracy of anomaly location. To address such challenges,
      we propose a self-adaptive healing approach that detects, identifies, predicts
      and recovers anomalies in clustered architectures. The approach will be evaluated
      to assess the accuracy of the mechanism.", "venue": "International Conference
      on Fog and Mobile Edge Computing", "year": 2019, "referenceCount": 24, "citationCount":
      7, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2019-06-01", "journal":
      {"name": "2019 Fourth International Conference on Fog and Mobile Edge Computing
      (FMEC)", "pages": "68-73"}, "citationStyles": {"bibtex": "@Article{Samir2019SelfAdaptiveHF,\n
      author = {Areeg Samir and C. Pahl},\n booktitle = {International Conference
      on Fog and Mobile Edge Computing},\n journal = {2019 Fourth International Conference
      on Fog and Mobile Edge Computing (FMEC)},\n pages = {68-73},\n title = {Self-Adaptive
      Healing for Containerized Cluster Architectures with Hidden Markov Models},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "2552537", "name": "Areeg Samir"},
      {"authorId": "8516149", "name": "C. Pahl"}]}, {"paperId": "5af522c68678a6396520eb747d1c0d39bb394820",
      "externalIds": {"MAG": "2767046593", "CorpusId": 33687730}, "corpusId": 33687730,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5af522c68678a6396520eb747d1c0d39bb394820",
      "title": "Kubernetes as an approach for solving bioinformatic problems.", "abstract":
      "The cluster orchestration tool Kubernetes enables easy deployment andreproducibility
      of life science research by utilizing the advantagesof the container technology.
      The container technology allows ...", "venue": "", "year": 2017, "referenceCount":
      32, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Biology",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Markstedt2017KubernetesAA,\n
      author = {Olof Markstedt},\n title = {Kubernetes as an approach for solving
      bioinformatic problems.},\n year = {2017}\n}\n"}, "authors": [{"authorId": "2104205360",
      "name": "Olof Markstedt"}]}, {"paperId": "5b4970bee173a39a712260be6071890c90be1ab5",
      "externalIds": {"MAG": "2919615655", "DBLP": "conf/aciids/MerclSM19", "DOI":
      "10.1007/978-3-030-14132-5_33", "CorpusId": 68243138}, "corpusId": 68243138,
      "publicationVenue": {"id": "71f507dc-47e4-4ca7-afb6-488858869826", "name": "Asian
      Conference on Intelligent Information and Database Systems", "type": "conference",
      "alternate_names": ["ACIIDS", "Asian Conf Intell Inf Database Syst"], "url":
      "http://www.wikicfp.com/cfp/program?id=30"}, "url": "https://www.semanticscholar.org/paper/5b4970bee173a39a712260be6071890c90be1ab5",
      "title": "Design of Reactive Systems for Control Network Traffic on the Kubernetes
      Platform", "abstract": null, "venue": "Asian Conference on Intelligent Information
      and Database Systems", "year": 2019, "referenceCount": 16, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://link.springer.com/content/pdf/10.1007%2F978-3-030-14132-5_33.pdf",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2019-04-08", "journal":
      {"pages": "409-421"}, "citationStyles": {"bibtex": "@Article{Mercl2019DesignOR,\n
      author = {Lubos Mercl and V. Sobeslav and P. Mikuleck\u00fd},\n booktitle =
      {Asian Conference on Intelligent Information and Database Systems},\n pages
      = {409-421},\n title = {Design of Reactive Systems for Control Network Traffic
      on the Kubernetes Platform},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "25064450", "name": "Lubos Mercl"}, {"authorId": "2691631", "name": "V. Sobeslav"},
      {"authorId": "2434359", "name": "P. Mikuleck\u00fd"}]}, {"paperId": "5b6b024e67e8a64aef87a0f875d9bb6ebbd002b3",
      "externalIds": {"CorpusId": 195257748}, "corpusId": 195257748, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5b6b024e67e8a64aef87a0f875d9bb6ebbd002b3",
      "title": "DataScience 4 NPA Data Science Service for Non-Programmers", "abstract":
      "With the emergence of Big Data, the scarcity of data scientists to analyse
      all the data being produced in different domains became evident. Moreover, the
      processing of such amounts of data also is challenging due to current technologies
      in use. With this in mind, the DataScience4NP aims to explore the use of visual
      programming paradigms to enable non-programmers to be part of the data science
      workforce at a faster pace and at the same time to provide a scalable data science
      service. By observing the common process employed by data scientists in the
      extraction of knowledge from data, which includes data insertion, preprocessing,
      transformation, data mining and interpretation/evaluation of results, we envisioned
      a system to perform all these steps without requiring users to program. Thus,
      our solution aims to provide an intuitive user interface where users can build
      personalized sequential data science workflows that are consequently processed
      by a back-end service. The back-end service translates the received workflows
      to a lower-level representation, enabling the execution of the translated tasks
      by separate scalable and distributed data science services in parallel. The
      entire system is composed of different services containerized with Docker and
      orchestrated with Kubernetes, allowing it to be easily deployed in different
      clusters. To evaluate our tool, and particularly to verify if the concept we
      envisioned for the creation and execution of data science tasks was intuitive,
      we conducted preliminary usability tests with two different groups of people,
      where we observed a high level of user satisfaction. Concluding, from the feedback
      obtained, it was clear that this concept of sequential workflows would bring
      added value to both novice and advanced data scientists.", "venue": "", "year":
      2018, "referenceCount": 12, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "citationStyles": {"bibtex":
      "@Inproceedings{Lopes2018DataScience4N,\n author = {B. Lopes and A. Pedroso
      and Jaime Correia and Filipe Ara\u00fajo and Jorge and Cardoso and Rui Pedro
      Paiva},\n title = {DataScience 4 NPA Data Science Service for Non-Programmers},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "51385321", "name": "B. Lopes"},
      {"authorId": "41029697", "name": "A. Pedroso"}, {"authorId": "143735886", "name":
      "Jaime Correia"}, {"authorId": "145694721", "name": "Filipe Ara\u00fajo"}, {"authorId":
      "2072754085", "name": "Jorge"}, {"authorId": "2068843470", "name": "Cardoso"},
      {"authorId": "144977038", "name": "Rui Pedro Paiva"}]}, {"paperId": "5b6cc985d757fd92e1b0b500ff404a0abae3aee5",
      "externalIds": {"DOI": "10.3390/app13148363", "CorpusId": 260011422}, "corpusId":
      260011422, "publicationVenue": {"id": "136edf8d-0f88-4c2c-830f-461c6a9b842e",
      "name": "Applied Sciences", "type": "journal", "alternate_names": ["Appl Sci"],
      "issn": "2076-3417", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-217814",
      "alternate_urls": ["http://www.mathem.pub.ro/apps/", "https://www.mdpi.com/journal/applsci",
      "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-217814"]}, "url":
      "https://www.semanticscholar.org/paper/5b6cc985d757fd92e1b0b500ff404a0abae3aee5",
      "title": "OpenFog-Compliant Application-Aware Platform: A Kubernetes Extension",
      "abstract": "Distributed computing paradigms have evolved towards low latency
      and highly virtualized environments. Fog Computing, as its latest iteration,
      enables the usage of Cloud-like services closer to the generators and consumers
      of data. The processing in this layer is performed by Fog Applications, which
      are decomposed into smaller components following the microservice paradigm and
      encapsulated into containers. Current state-of-the-art container orchestrators
      can manage hundreds of simultaneous containers. However, Kubernetes, being the
      de facto standard, does not consider the application itself as a top-level entity,
      which limits its orchestration capabilities. This raises the need to rearchitect
      Kubernetes to benefit from application-awareness, which refers to an orchestration
      method optimized for managing the applications and the set of components that
      comprise them. Thus, this paper proposes an application-aware and OpenFog-compliant
      architecture that manages applications as first-level entities during their
      lifecycle. Furthermore, the proposed architecture allows the definition of organizational
      structures to group subordinated applications based on user-defined hierarchies.
      This logical structuring makes it possible to outline how orchestration should
      be shaped to reflect the operating model of a system or an organization. The
      proposed architecture is implemented as a Kubernetes extension and provided
      as an operator.", "venue": "Applied Sciences", "year": 2023, "referenceCount":
      23, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/2076-3417/13/14/8363/pdf?version=1689838237",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-07-19", "journal": {"name": "Applied
      Sciences"}, "citationStyles": {"bibtex": "@Article{Cuadra2023OpenFogCompliantAP,\n
      author = {Julen Cuadra and Ekaitz Hurtado and F. P\u00e9rez and O. Casquero
      and A. Armentia},\n booktitle = {Applied Sciences},\n journal = {Applied Sciences},\n
      title = {OpenFog-Compliant Application-Aware Platform: A Kubernetes Extension},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2224150294", "name": "Julen
      Cuadra"}, {"authorId": "2224150753", "name": "Ekaitz Hurtado"}, {"authorId":
      "145770692", "name": "F. P\u00e9rez"}, {"authorId": "2464073", "name": "O. Casquero"},
      {"authorId": "46427456", "name": "A. Armentia"}]}, {"paperId": "5b82e953657b04ddf3ee327662f217da945a93d4",
      "externalIds": {"MAG": "2965063991", "DBLP": "conf/xsede/HusodoCGPG19", "DOI":
      "10.1145/3332186.3332214", "CorpusId": 199379514}, "corpusId": 199379514, "publicationVenue":
      {"id": "b85446b1-9eb7-4d6d-bfde-e2b0c6b2cfb6", "name": "Practice and Experience
      in Advanced Research Computing", "type": "conference", "alternate_names": ["PEARC",
      "Pract Exp Adv Res Comput"], "url": "https://www.pearc.org/"}, "url": "https://www.semanticscholar.org/paper/5b82e953657b04ddf3ee327662f217da945a93d4",
      "title": "Slicing and Dicing OpenHPC Infrastructure: Virtual Clusters in OpenStack",
      "abstract": "University research computing centers are increasingly faced with
      the need to support applications that are better suited for cloud infrastructure
      than HPC infrastructure. A common approach is to shoehorn cloud-based applications
      onto the university''s existing HPC system, which has been done with varying
      levels of success. Another approach as been to create stand-alone HPC systems
      and private cloud systems, resulting in ineffective use of resources. A more
      recent approach has been to use hybrid systems where the HPC system \"bursts\"
      excess jobs to private cloud nodes configured as bare-metal nodes built from
      the same (expensive) hardware as the HPC system. This paper explores another
      model, namely the use of private cloud infrastructure (built from inexpensive
      commodity networks and storage systems) to host both HPC jobs and VMs simultaneously
      Utilizing VMs allows these emerging applications to leverage cloud frameworks
      specifically designed for them (e.g., OpenStack, Kubernetes, Mesos, Hadoop,
      and Spark), while at the same time effectively supporting a growing percentage
      of the HPC jobs (e.g., single node jobs, and embarrassingly parallel jobs).
      Because the system can be constructed from commodity cloud networks and storage,
      it makes cost-effective use of the resources as opposed to HPC systems used
      to run jobs that do not use (waste) its expensive resources. To demonstrate
      the advantages of using cloud infrastructure for both cloud applications and
      HPC applications, we describe a system that can dynamically launch OpenHPC systems
      on commodity OpenStack infrastructure. Moreover, users can use the system to
      deploy \"personal\" OpenHPC clusters, customized to their application''s needs
      (e.g., number of nodes, cores per node, memory per node). We have used the system
      to effectively run OpenHPC work-loads on a cluster of large memory OpenStack
      nodes, allowing users to create, for example, a large memory HPC-style cluster
      of 500 GB nodes running OpenHPC, and a cluster of 1TB VMs operating simultaneously.
      Performance degradation due to virtualization has been insignificant, particularly
      when compared to the advantages of being able to use optimized frameworks running
      on cost-effective hardware.", "venue": "Practice and Experience in Advanced
      Research Computing", "year": 2019, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2019-07-28", "journal": {"name":
      "Proceedings of the Practice and Experience in Advanced Research Computing on
      Rise of the Machines (learning)"}, "citationStyles": {"bibtex": "@Article{Husodo2019SlicingAD,\n
      author = {Satrio Husodo and Jacob Chappell and Vikram Gazula and Lowell Pike
      and J. Griffioen},\n booktitle = {Practice and Experience in Advanced Research
      Computing},\n journal = {Proceedings of the Practice and Experience in Advanced
      Research Computing on Rise of the Machines (learning)},\n title = {Slicing and
      Dicing OpenHPC Infrastructure: Virtual Clusters in OpenStack},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "3755810", "name": "Satrio Husodo"}, {"authorId": "49214904",
      "name": "Jacob Chappell"}, {"authorId": "122869168", "name": "Vikram Gazula"},
      {"authorId": "147354234", "name": "Lowell Pike"}, {"authorId": "145626837",
      "name": "J. Griffioen"}]}, {"paperId": "5b8627d2aa9a9a805450d1831897b5a39e4656e8",
      "externalIds": {"MAG": "3003380681", "DBLP": "conf/eidwt/HsiehHTL19", "DOI":
      "10.1007/978-3-030-39746-3_37", "CorpusId": 212749204}, "corpusId": 212749204,
      "publicationVenue": {"id": "70c7f378-81c2-43f5-b397-87169bbfe393", "name": "International
      Conference on Emerging Intelligent Data and Web Technologies", "type": "conference",
      "alternate_names": ["Int Conf Emerg Intell Data Web Technol", "EIDWT"]}, "url":
      "https://www.semanticscholar.org/paper/5b8627d2aa9a9a805450d1831897b5a39e4656e8",
      "title": "Usage-Oriented Resource Allocation Strategy in Edge Computing Environments",
      "abstract": null, "venue": "International Conference on Emerging Intelligent
      Data and Web Technologies", "year": 2020, "referenceCount": 6, "citationCount":
      1, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2020-02-24", "journal": {"pages": "351-360"},
      "citationStyles": {"bibtex": "@Article{Hsieh2020UsageOrientedRA,\n author =
      {Tsu-Hao Hsieh and Kuan-Yu Ho and Meng-Yo Tsai and Kuan-Chou Lai},\n booktitle
      = {International Conference on Emerging Intelligent Data and Web Technologies},\n
      pages = {351-360},\n title = {Usage-Oriented Resource Allocation Strategy in
      Edge Computing Environments},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "1380946498", "name": "Tsu-Hao Hsieh"}, {"authorId": "2105595119", "name": "Kuan-Yu
      Ho"}, {"authorId": "1382530330", "name": "Meng-Yo Tsai"}, {"authorId": "2720461",
      "name": "Kuan-Chou Lai"}]}, {"paperId": "5b8f5a218ceecf164886135741a7416553dce7e2",
      "externalIds": {"DBLP": "conf/cloud/WangYYWLSHZ21", "DOI": "10.1145/3472883.3486987",
      "CorpusId": 239890145}, "corpusId": 239890145, "publicationVenue": {"id": "d13e941e-4cac-4f1d-bdca-77d927e31f1b",
      "name": "ACM Symposium on Cloud Computing", "type": "conference", "alternate_names":
      ["System-on-Chip Conference", "ACM Symp Cloud Comput", "Syst Conf", "Symp Cloud
      Comput", "Annual IEEE International System-on-Chip Conference", "Symposium on
      Cloud Computing", "Annu IEEE Int Syst Conf", "SoCC"], "url": "http://www.ieee-socc.org/"},
      "url": "https://www.semanticscholar.org/paper/5b8f5a218ceecf164886135741a7416553dce7e2",
      "title": "Morphling: Fast, Near-Optimal Auto-Configuration for Cloud-Native
      Model Serving", "abstract": "Machine learning models are widely deployed in
      production cloud to provide online inference services. Efficiently deploying
      inference services requires careful tuning of hardware and runtime configurations
      (e.g., GPU type, GPU memory, batch size), which can significantly improve the
      model serving performance and reduce cost. However, existing autoconfiguration
      approaches for general workloads, such as Bayesian optimization and white-box
      prediction, are inefficient in navigating the high-dimensional configuration
      space of model serving, incurring high sampling cost. In this paper, we present
      Morphling, a fast, near-optimal auto-configuration framework for cloud-native
      model serving. Morphling employs model-agnostic meta-learning to navigate the
      large configuration space. It trains a metamodel offline to capture the general
      performance trend under varying configurations. Morphling quickly adapts the
      metamodel to a new inference service by sampling a small number of configurations
      and uses it to find the optimal one. We have implemented Morphling as an auto-configuration
      service in Kubernetes, and evaluate its performance with popular CV and NLP
      models, as well as the production inference services in Alibaba. Compared with
      existing approaches, Morphling reduces the median search cost by 3x-22x, quickly
      converging to the optimal configuration by sampling only 30 candidates in a
      large search space consisting of 720 options.", "venue": "ACM Symposium on Cloud
      Computing", "year": 2021, "referenceCount": 61, "citationCount": 21, "influentialCitationCount":
      2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2021-11-01", "journal": {"name":
      "Proceedings of the ACM Symposium on Cloud Computing"}, "citationStyles": {"bibtex":
      "@Article{Wang2021MorphlingFN,\n author = {Luping Wang and Lingyun Yang and
      Yinghao Yu and Wen Wang and Bo Li and Xianchao Sun and Jian He and Liping Zhang},\n
      booktitle = {ACM Symposium on Cloud Computing},\n journal = {Proceedings of
      the ACM Symposium on Cloud Computing},\n title = {Morphling: Fast, Near-Optimal
      Auto-Configuration for Cloud-Native Model Serving},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "2153517307", "name": "Luping Wang"}, {"authorId":
      "2146415615", "name": "Lingyun Yang"}, {"authorId": "101206716", "name": "Yinghao
      Yu"}, {"authorId": "47825073", "name": "Wen Wang"}, {"authorId": null, "name":
      "Bo Li"}, {"authorId": "2143570103", "name": "Xianchao Sun"}, {"authorId": "2153098113",
      "name": "Jian He"}, {"authorId": "2117808384", "name": "Liping Zhang"}]}, {"paperId":
      "5b9f296f00e524bbd270541d1e326b27a2e94e54", "externalIds": {"CorpusId": 14674551},
      "corpusId": 14674551, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5b9f296f00e524bbd270541d1e326b27a2e94e54",
      "title": "RETROSPECTIVE: Bubble-Flux: Precise Online QoS Management for Increased
      Utilization in Warehouse Scale Computers", "abstract": "The Bubble-Flux paper,
      published at the International Symposium on Computer Architecture (ISCA) in
      2013, sought to address the challenge of microarchitectural resource contention
      between co-located applications and its effect on Quality of Service in data
      centers. During this period, the field of data center computing was in its nascent
      stages, with a particular focus on holistic Warehouse-Scale Computers (WSCs)
      architecture and design. Indeed, this was a time when technologies that have
      since become the norm in this domain, such as Kubernetes, were in their experimental
      phase and largely restricted to in-house operations at tech giants like Google.
      During this era, the new performance indicator known as quality of service (QoS)
      had emerged in the realm of datacenter computing and was swiftly recognized
      as the key metric for evaluating performance in this domain. Ensuring the QoS
      for latency-sensitive applications was critical for optimizing server utilization
      and curtailing costs, especially when considering multiple user-facing applications
      run on the same server in WSCs. Bubble-Flux aimed to precisely predict contention
      and QoS at scale and in real time. The conceptualization of Bubble-Flux, along
      with its predecessor Bubble-Up [1], was driven by Jason Mars over the course
      of two summers. Initially, as a research intern at Google, Mars formulated Bubble-Up,
      which was later published at Micro 2011 and was selected as a MICRO Top Picks
      in the community. Bubble-up represented a proof of concept the provided a controlled
      static profiling analysis for precise prediction. The technique was evaluated
      using production Google workloads. However Mars then developed the idea further
      into Bubble-Flux during a subsequent summer as a visiting scholar at Google
      after his appointment as an assistant professor at the University of California,
      San Diego (UCSD). Bubble-Flux was an real-time scale out solution that continuously
      ran on 1000s of machines as a service reporting contention and forecasting QoS
      as workloads change over the diurnal pattern in data-centers. Historically,
      performance predictability in the context of microarchitectural resource contention
      had been an academic focal point since 2008 through a variety of techniques
      spanning compiler and OS solutions for isolation, among others. However, the
      distinguishing feature and key insight of BubbleFlux and Bubble-Up was the recognition
      of the intractability of precise predictions using the modeling approach the
      community had been working on, given the inherent complexity of real world microarchitecture.
      Multiple applications can contend for numerous disparate microarchitectural
      resources, and these resources change every generation of processor released.
      In response to this, Jason Mars, in collaboration with Lingjia Tang and colleagues,
      developed a range of novel techniques that are capable of operating at scale
      across thousands of machines, saving companies like Google millions of dollars
      in practice.", "venue": "", "year": 2023, "referenceCount": 1, "citationCount":
      259, "influentialCitationCount": 17, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Yang2023RETROSPECTIVEBP,\n
      author = {Hailong Yang and Alex D. Breslow and Jason Mars and Lingjia Tang},\n
      title = {RETROSPECTIVE: Bubble-Flux: Precise Online QoS Management for Increased
      Utilization in Warehouse Scale Computers},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "46402263", "name": "Hailong Yang"}, {"authorId": "30438892",
      "name": "Alex D. Breslow"}, {"authorId": "144603405", "name": "Jason Mars"},
      {"authorId": "2235128", "name": "Lingjia Tang"}]}, {"paperId": "5bd849dbdade5be3cf9346bad814aa1555d73fb9",
      "externalIds": {"MAG": "3176808620", "DOI": "10.1007/978-1-4842-6998-5_4", "CorpusId":
      238016406}, "corpusId": 238016406, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5bd849dbdade5be3cf9346bad814aa1555d73fb9",
      "title": "Running Dapr in Kubernetes Mode", "abstract": null, "venue": "Introducing
      Distributed Application Runtime (Dapr)", "year": 2021, "referenceCount": 0,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "Introducing
      Distributed Application Runtime (Dapr)"}, "citationStyles": {"bibtex": "@Article{Gatev2021RunningDI,\n
      author = {Radoslav Gatev},\n booktitle = {Introducing Distributed Application
      Runtime (Dapr)},\n journal = {Introducing Distributed Application Runtime (Dapr)},\n
      title = {Running Dapr in Kubernetes Mode},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2115173130", "name": "Radoslav Gatev"}]}, {"paperId": "5bdaec1060dc98dbbbcd30f569de72605e768c42",
      "externalIds": {"DBLP": "conf/pdp/CovielloRVMBC23", "DOI": "10.1109/PDP59025.2023.00025",
      "CorpusId": 259029081}, "corpusId": 259029081, "publicationVenue": {"id": "d6283871-df25-4880-9c85-46e9830f0d22",
      "name": "International Euromicro Conference on Parallel, Distributed and Network-Based
      Processing", "type": "conference", "alternate_names": ["Int Euromicro Conf Parallel
      Distrib Network-based Process", "PDP", "Parallel Distrib Network-based Process",
      "Parallel, Distributed and Network-Based Processing"], "url": "http://www.euromicro.org/index.html"},
      "url": "https://www.semanticscholar.org/paper/5bdaec1060dc98dbbbcd30f569de72605e768c42",
      "title": "Content-aware auto-scaling of stream processing applications on container
      orchestration platforms", "abstract": "Modern applications are designed as an
      interacting set of microservices, and these applications are typically deployed
      on container orchestration platforms like Kubernetes. Several attractive features
      in Kubernetes make it a popular choice for deploying applications, and automatic
      scaling is one such feature. The default horizontal scaling technique in Kubernetes
      is the Horizontal Pod Autoscaler (HPA). It scales each microservice independently
      while ignoring the interactions among the microservices in an application. In
      this paper, we show that ignoring such interactions by HPA leads to inefficient
      scaling, and the optimal scaling of different microservices in the application
      varies as the stream content changes. To automatically adapt to variations in
      stream content, we present a novel system called DataX AutoScaler that leverages
      knowledge of the entire stream processing application pipeline to efficiently
      auto-scale different microservices by taking into account their complex interactions.
      Through experiments on real-world video analytics applications, such as face
      recognition and pose classification, we show that DataX AutoScaler adapts to
      variations in stream content and achieves up to 43% improvement in overall application
      performance compared to a baseline system that uses HPA.", "venue": "International
      Euromicro Conference on Parallel, Distributed and Network-Based Processing",
      "year": 2023, "referenceCount": 14, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2023-03-01", "journal":
      {"name": "2023 31st Euromicro International Conference on Parallel, Distributed
      and Network-Based Processing (PDP)", "pages": "114-118"}, "citationStyles":
      {"bibtex": "@Article{Coviello2023ContentawareAO,\n author = {G. Coviello and
      Kunal Rao and Ciro Giuseppe De Vita and Gennaro Mellone and Priscilla Benedetti
      and S. Chakradhar},\n booktitle = {International Euromicro Conference on Parallel,
      Distributed and Network-Based Processing},\n journal = {2023 31st Euromicro
      International Conference on Parallel, Distributed and Network-Based Processing
      (PDP)},\n pages = {114-118},\n title = {Content-aware auto-scaling of stream
      processing applications on container orchestration platforms},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "3067277", "name": "G. Coviello"}, {"authorId": "38170711",
      "name": "Kunal Rao"}, {"authorId": "2179118552", "name": "Ciro Giuseppe De Vita"},
      {"authorId": "50661168", "name": "Gennaro Mellone"}, {"authorId": "1978665526",
      "name": "Priscilla Benedetti"}, {"authorId": "1752242", "name": "S. Chakradhar"}]},
      {"paperId": "5bec8d5f981f875520f1cccde2f94844b142ac5c", "externalIds": {"DBLP":
      "conf/esorics/KokolakisNKAAI22", "DOI": "10.1007/978-3-031-25460-4_18", "CorpusId":
      257053300}, "corpusId": 257053300, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5bec8d5f981f875520f1cccde2f94844b142ac5c",
      "title": "HoneyChart: Automated Honeypot Management over Kubernetes", "abstract":
      null, "venue": "CyberICPS/SECPRE/SPOSE/CPS4CIP/CDT&SECOMAN/EIS/SecAssure@ESORICS",
      "year": 2022, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://zenodo.org/records/7193579/files/honeychart-cps4cip-2022.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "321-328"}, "citationStyles": {"bibtex": "@Article{Kokolakis2022HoneyChartAH,\n
      author = {G. Kokolakis and Grigoris Ntousakis and Irodotos Karatsoris and S.
      Antonatos and M. Athanatos and S. Ioannidis},\n booktitle = {CyberICPS/SECPRE/SPOSE/CPS4CIP/CDT&SECOMAN/EIS/SecAssure@ESORICS},\n
      pages = {321-328},\n title = {HoneyChart: Automated Honeypot Management over
      Kubernetes},\n year = {2022}\n}\n"}, "authors": [{"authorId": "40626768", "name":
      "G. Kokolakis"}, {"authorId": "2123635411", "name": "Grigoris Ntousakis"}, {"authorId":
      "2208984075", "name": "Irodotos Karatsoris"}, {"authorId": "2104365", "name":
      "S. Antonatos"}, {"authorId": "9386766", "name": "M. Athanatos"}, {"authorId":
      "144148478", "name": "S. Ioannidis"}]}, {"paperId": "5bfa00873be625280fd8ff357a6320ec8f755be2",
      "externalIds": {"CorpusId": 265467971}, "corpusId": 265467971, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5bfa00873be625280fd8ff357a6320ec8f755be2",
      "title": "ANALISIS PERFORMANSI PROSES SCALING PADA KUBERNETES DAN DOCKER SWARM
      MENGGUNAKAN METODE HORIZONTAL SCALER", "abstract": "Container is a technology
      that is widely used lately because of the additional features that are very
      easy and convenient to use, especially for development and operations (dev ops),
      with Container making it easy for system administrators to manage applications
      including building, processing and running applications on Container servers.
      Container Orchestration is one of Container technology. With Container Orchestration,
      the process of making and using the system will be easier, but along with too
      many user requests, the service will not run optimally. Therefore, Container
      Orchestration", "venue": "", "year": null, "referenceCount": 17, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Misc{None,\n author = {Bayu Arifat Firdaus and Vera Suryani and
      S. Karimah},\n title = {ANALISIS PERFORMANSI PROSES SCALING PADA KUBERNETES
      DAN DOCKER SWARM MENGGUNAKAN METODE HORIZONTAL SCALER}\n}\n"}, "authors": [{"authorId":
      "2268502241", "name": "Bayu Arifat Firdaus"}, {"authorId": "2024252124", "name":
      "Vera Suryani"}, {"authorId": "1389821225", "name": "S. Karimah"}]}, {"paperId":
      "5bfd32fda579e090b1325878d6502e3a54dc1041", "externalIds": {"DBLP": "journals/queue/Schwarzkopf17",
      "MAG": "2774328828", "DOI": "10.1145/3155112.3173558", "CorpusId": 19939160},
      "corpusId": 19939160, "publicationVenue": {"id": "4bd27ad1-f6fa-4340-9d9d-c62ac5be6fc0",
      "name": "Queue", "type": "journal", "alternate_names": ["ACM Queue"], "issn":
      "1542-7730", "url": "http://portal.acm.org/queue", "alternate_urls": ["http://www.acmqueue.org/"]},
      "url": "https://www.semanticscholar.org/paper/5bfd32fda579e090b1325878d6502e3a54dc1041",
      "title": "Cluster Scheduling for Data Centers", "abstract": "This installment
      of Research for Practice features a curated selection from Malte Schwarzkopf,
      who takes us on a tour of distributed cluster scheduling, from research to practice,
      and back again. With the rise of elastic compute resources, cluster management
      has become an increasingly hot topic in systems R&D, and a number of competing
      cluster managers including Kubernetes, Mesos, and Docker are currently jockeying
      for the crown in this space.", "venue": "Queue", "year": 2017, "referenceCount":
      0, "citationCount": 6, "influentialCitationCount": 1, "isOpenAccess": true,
      "openAccessPdf": {"url": "http://dl.acm.org/ft_gateway.cfm?id=3173558&type=pdf",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2017-10-01", "journal":
      {"name": "Queue", "pages": "78 - 89", "volume": "15"}, "citationStyles": {"bibtex":
      "@Article{Schwarzkopf2017ClusterSF,\n author = {Malte Schwarzkopf},\n booktitle
      = {Queue},\n journal = {Queue},\n pages = {78 - 89},\n title = {Cluster Scheduling
      for Data Centers},\n volume = {15},\n year = {2017}\n}\n"}, "authors": [{"authorId":
      "1962485", "name": "Malte Schwarzkopf"}]}, {"paperId": "5c3329e3f309ea6c2f8caa827abaa49dc6fb1efa",
      "externalIds": {"MAG": "3008355680", "DOI": "10.3846/mla.2020.11454", "CorpusId":
      212700649}, "corpusId": 212700649, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5c3329e3f309ea6c2f8caa827abaa49dc6fb1efa",
      "title": "OVERVIEW OF KUBERNETES CNI PLUGINS PERFORMANCE", "abstract": "Containerisation
      and microservices architecture are getting momentum in nowadays ICT field. Containers
      are deployed in both public and private cloud environments and usually for flexibility
      purposes are deployed in VM (Virtual Machines) environment. Microservices have
      a demand on a high number of containers which requires orchestration and Kubernetes
      is one of the most popular choice. However, Kubernetes does not offer networking
      solution and it is provided by CNI (Container Networking Interface) and its\u2019
      plugins. In order to choose best plugin their performance needs to be evaluated.
      In this paper nine most popular CNI plugins TCP and HTTP protocols performance
      is evaluated in virtualised VMware ESXi and physical data centre environment.
      The results help to choose which CNI plugins to use either in virtualised or
      physical data centre environment.", "venue": "", "year": 2020, "referenceCount":
      7, "citationCount": 10, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://journals.vgtu.lt/index.php/MLA/article/download/11454/9757",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate":
      "2020-02-19", "journal": {"name": "Mokslas - Lietuvos Ateitis", "pages": "1-5",
      "volume": "12"}, "citationStyles": {"bibtex": "@Article{Kapo\u010dius2020OVERVIEWOK,\n
      author = {Nar\u016bnas Kapo\u010dius},\n journal = {Mokslas - Lietuvos Ateitis},\n
      pages = {1-5},\n title = {OVERVIEW OF KUBERNETES CNI PLUGINS PERFORMANCE},\n
      volume = {12},\n year = {2020}\n}\n"}, "authors": [{"authorId": "1573528916",
      "name": "Nar\u016bnas Kapo\u010dius"}]}, {"paperId": "5c5cb5ee76302f18fd0005cfe9288129428fb1c4",
      "externalIds": {"DBLP": "journals/darts/DelnatHJPRTL18", "MAG": "2807902853",
      "DOI": "10.4230/DARTS.4.1.2", "CorpusId": 47019804}, "corpusId": 47019804, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5c5cb5ee76302f18fd0005cfe9288129428fb1c4",
      "title": "K8-Scalar: a workbench to compare autoscalers for container-orchestrated
      services (Artifact)", "abstract": "This artifact is an easy-to-use and extensible
      workbench exemplar, named K8-Scalar, which allows researchers to implement and
      evaluate different self-adaptive approaches to autoscaling container-orchestrated
      services. The workbench is based on Docker, a popular technology for easing
      the deployment of containerized software that also has been positioned as an
      enabler for reproducible research. The workbench also relies on a container
      orchestration framework: Kubernetes (K8s), the de-facto industry standard for
      orchestration and monitoring of elastically scalable container-based services.
      Finally, it integrates and extends Scalar, a generic testbed for evaluating
      the scalability of large-scale systems with support for evaluating the performance
      of autoscalers for database clusters. \n \nThe associated scholarly paper presents
      (i) the architecture and implementation of K8-Scalar and how a particular autoscaler
      can be plugged in, (ii) sketches the design of a Riemann-based autoscaler for
      database clusters, (iii) illustrates how to design, setup and analyze a series
      of experiments to configure and evaluate the performance of this autoscaler
      for a particular database (i.e., Cassandra) and a particular workload type,
      (iv) and validates the effectiveness of K8-scalar as a workbench for accurately
      comparing the performance of different auto-scaling strategies. Future work
      includes extending K8-Scalar with an improved research data management repository.",
      "venue": "Dagstuhl Artifacts Ser.", "year": 2018, "referenceCount": 9, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "Dagstuhl Artifacts
      Ser.", "pages": "03:1-03:6", "volume": "4"}, "citationStyles": {"bibtex": "@Article{Delnat2018K8ScalarAW,\n
      author = {Wito Delnat and Thomas Heyman and W. Joosen and Davy Preuveneers and
      A. Rafique and E. Truyen and Dimitri Van Landuyt},\n booktitle = {Dagstuhl Artifacts
      Ser.},\n journal = {Dagstuhl Artifacts Ser.},\n pages = {03:1-03:6},\n title
      = {K8-Scalar: a workbench to compare autoscalers for container-orchestrated
      services (Artifact)},\n volume = {4},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "46232202", "name": "Wito Delnat"}, {"authorId": "47416832", "name": "Thomas
      Heyman"}, {"authorId": "1752104", "name": "W. Joosen"}, {"authorId": "1722184",
      "name": "Davy Preuveneers"}, {"authorId": "2443017", "name": "A. Rafique"},
      {"authorId": "1743981", "name": "E. Truyen"}, {"authorId": "2211794", "name":
      "Dimitri Van Landuyt"}]}, {"paperId": "5c85f503ffc98d08733e2f18ac64decb07adcb8b",
      "externalIds": {"DOI": "10.1109/ICSEC56337.2022.10049369", "CorpusId": 257157172},
      "corpusId": 257157172, "publicationVenue": {"id": "6ffd3030-fbaa-4915-9ec8-888f211c7b73",
      "name": "International Computer Science and Engineering Conference", "type":
      "conference", "alternate_names": ["ICSEC", "Int Comput Sci Eng Conf"]}, "url":
      "https://www.semanticscholar.org/paper/5c85f503ffc98d08733e2f18ac64decb07adcb8b",
      "title": "An Implementation of DNS Operator and Network Guideline for Migrating
      Virtual Machine to KubeVirt", "abstract": "We created a customize DNS operator
      to address the shortcoming of CoreDNS in Kubernetes. While Kubernetes is gaining
      popularity in orchestrating containers, many organizations with Virtual Machine
      (VM) based legacy applications still struggle to containerize. Rehost strategy
      seems to be a faster method. On Kubernetes, KubeVirt can be used to manage rehosted
      VM. However, there is a huge difference between the long-term use of the VMs
      and containers. For example, container IP addresses change over time is problematic
      for VMs that need a static IP. In addition, some VM-based applications may require
      multiple network interfaces or a specific domain name for service discovery.
      These issues prevent some VMs from functioning properly after the migration
      to KubeVirt. We developed an operator framework to solve network problems that
      arise in the application layer such as DNS queries. In addition, we provide
      a guideline on how to use open-source projects like the Multus Container Network
      Interface, NMState to enable the migration of VMs with applications related
      to network function properly. Our operator and guideline allow most VMs to function
      properly with few modifications (to none) after migrating to KubeVirt. This
      facilitated the adoption of Kubernetes in more organizations.", "venue": "International
      Computer Science and Engineering Conference", "year": 2022, "referenceCount":
      10, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["Conference"],
      "publicationDate": "2022-12-21", "journal": {"name": "2022 26th International
      Computer Science and Engineering Conference (ICSEC)", "pages": "84-89"}, "citationStyles":
      {"bibtex": "@Conference{Trakulmaiphol2022AnIO,\n author = {Supakorn Trakulmaiphol
      and K. Piromsopa},\n booktitle = {International Computer Science and Engineering
      Conference},\n journal = {2022 26th International Computer Science and Engineering
      Conference (ICSEC)},\n pages = {84-89},\n title = {An Implementation of DNS
      Operator and Network Guideline for Migrating Virtual Machine to KubeVirt},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2209645808", "name": "Supakorn
      Trakulmaiphol"}, {"authorId": "1696509", "name": "K. Piromsopa"}]}, {"paperId":
      "5c8f0db7b3c6a45179fbfbd5a92929accf4601b7", "externalIds": {"MAG": "3099447598",
      "DOI": "10.1101/213603", "CorpusId": 67236094}, "corpusId": 67236094, "publicationVenue":
      {"id": "027ffd21-ebb0-4af8-baf5-911124292fd0", "name": "bioRxiv", "type": "journal",
      "url": "http://biorxiv.org/"}, "url": "https://www.semanticscholar.org/paper/5c8f0db7b3c6a45179fbfbd5a92929accf4601b7",
      "title": "Interoperable and scalable metabolomics data analysis with microservices",
      "abstract": "Developing a robust and performant data analysis workflow that
      integrates all necessary components whilst still being able to scale over multiple
      compute nodes is a challenging task. We introduce a generic method based on
      the microservice architecture, where software tools are encapsulated as Docker
      containers that can be connected into scientific workflows and executed in parallel
      using the Kubernetes container orchestrator. The access point is a virtual research
      environment which can be launched on-demand on cloud resources and desktop computers.
      IT-expertise requirements on the user side are kept to a minimum, and established
      workflows can be re-used effortlessly by any novice user. We validate our method
      in the field of metabolomics on two mass spectrometry studies, one nuclear magnetic
      resonance spectroscopy study and one fluxomics study, showing that the method
      scales dynamically with increasing availability of computational resources.
      We achieved a complete integration of the major software suites resulting in
      the first turn-key workflow encompassing all steps for mass-spectrometry-based
      metabolomics including preprocessing, multivariate statistics, and metabolite
      identification. Microservices is a generic methodology that can serve any scientific
      discipline and opens up for new types of large-scale integrative science.",
      "venue": "bioRxiv", "year": 2017, "referenceCount": 55, "citationCount": 7,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://academic.oup.com/bioinformatics/article-pdf/35/19/3752/30061666/btz160.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Biology", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Biology", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Chemistry", "source": "s2-fos-model"}], "publicationTypes": null,
      "publicationDate": "2017-11-03", "journal": {"name": "bioRxiv"}, "citationStyles":
      {"bibtex": "@Article{Khoonsari2017InteroperableAS,\n author = {P. E. Khoonsari
      and P. Moreno and S. Bergmann and J. Burman and Marco Capuccini and M. Carone
      and M. Cascante and P. D. Atauri and Zdenka Dudov\u00e1 and C. Foguet and Alejandra
      N. Gonz\u00e1lez-Beltr\u00e1n and T. Hankemeier and Kenneth Haug and Sijin He
      and Stephanie Herman and David Johnson and Namrata Kale and Anders Larsson and
      R. Salek and S. Neumann and Kristian Peters and L. Pireddu and P. Rocca-Serra
      and Pierrick Roger and R. Rueedi and Christoph Ruttkies and Noureddin M. Sadawi
      and Susanna-Assunta Sansone and Daniel Schober and V. Selivanov and E. Th\u00e9venot
      and M. Vliet and G. Zanetti and C. Steinbeck and K. Kultima and O. Spjuth},\n
      booktitle = {bioRxiv},\n journal = {bioRxiv},\n title = {Interoperable and scalable
      metabolomics data analysis with microservices},\n year = {2017}\n}\n"}, "authors":
      [{"authorId": "8369149", "name": "P. E. Khoonsari"}, {"authorId": "47690379",
      "name": "P. Moreno"}, {"authorId": "145671573", "name": "S. Bergmann"}, {"authorId":
      "145245194", "name": "J. Burman"}, {"authorId": "2885797", "name": "Marco Capuccini"},
      {"authorId": "46183453", "name": "M. Carone"}, {"authorId": "1800967", "name":
      "M. Cascante"}, {"authorId": "3006824", "name": "P. D. Atauri"}, {"authorId":
      "89267370", "name": "Zdenka Dudov\u00e1"}, {"authorId": "8054715", "name": "C.
      Foguet"}, {"authorId": "1401553965", "name": "Alejandra N. Gonz\u00e1lez-Beltr\u00e1n"},
      {"authorId": "3255958", "name": "T. Hankemeier"}, {"authorId": "26976237", "name":
      "Kenneth Haug"}, {"authorId": "33217007", "name": "Sijin He"}, {"authorId":
      "38441575", "name": "Stephanie Herman"}, {"authorId": "2150446362", "name":
      "David Johnson"}, {"authorId": "144866363", "name": "Namrata Kale"}, {"authorId":
      "2070963974", "name": "Anders Larsson"}, {"authorId": "2143634", "name": "R.
      Salek"}, {"authorId": "144479714", "name": "S. Neumann"}, {"authorId": "2018730053",
      "name": "Kristian Peters"}, {"authorId": "1689341", "name": "L. Pireddu"}, {"authorId":
      "1397958214", "name": "P. Rocca-Serra"}, {"authorId": "40222537", "name": "Pierrick
      Roger"}, {"authorId": "3373730", "name": "R. Rueedi"}, {"authorId": "3364826",
      "name": "Christoph Ruttkies"}, {"authorId": "3331007", "name": "Noureddin M.
      Sadawi"}, {"authorId": "1760490", "name": "Susanna-Assunta Sansone"}, {"authorId":
      "46413423", "name": "Daniel Schober"}, {"authorId": "33584277", "name": "V.
      Selivanov"}, {"authorId": "3289067", "name": "E. Th\u00e9venot"}, {"authorId":
      "26646230", "name": "M. Vliet"}, {"authorId": "48867403", "name": "G. Zanetti"},
      {"authorId": "1714873", "name": "C. Steinbeck"}, {"authorId": "6590379", "name":
      "K. Kultima"}, {"authorId": "1776762", "name": "O. Spjuth"}]}, {"paperId": "5cab398d2ed3c286354b95ec7acd1ce0cc3ef8f3",
      "externalIds": {"DOI": "10.1117/12.2671433", "CorpusId": 258421164}, "corpusId":
      258421164, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5cab398d2ed3c286354b95ec7acd1ce0cc3ef8f3",
      "title": "Preemptive resource scheduling strategy of cloud video based on Kubernetes",
      "abstract": "In the current cloud-native usage scenario, the default algorithm
      is single. When the cluster resources are insufficient, the service guarantee
      is generally achieved by the expansion of the cluster, and preemptive scheduling
      cannot be achieved during the scheduling process. Therefore, the original strategy
      cannot guarantee the operation of important services. Cloud video system provides
      video conference, online education, video office and other services. Cloud video
      consists of different pods like Nginx, MySQL, Tomcat, etc. This article sets
      pod priorities by dividing the categories of Cloud video Pods. Aiming at resource-constrained
      scenarios, the Preemptive resource scheduling strategy based on Cloud video
      Pod priority is proposed, and cluster experiments are carried out. Experiments
      show that the algorithm can effectively guarantee the operation of pods with
      high priority.", "venue": "International Conference on Artificial Intelligence
      and Computer Engineering (ICAICE 2022)", "year": 2023, "referenceCount": 12,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Engineering"], "s2FieldsOfStudy": [{"category": "Engineering",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2023-04-28", "journal":
      {"pages": "126102Q - 126102Q-6", "volume": "12610"}, "citationStyles": {"bibtex":
      "@Conference{Huo2023PreemptiveRS,\n author = {Qizheng Huo and Shaonan Li and
      Chengyang Li and Yongqiang Xie and Zhongbo Li},\n booktitle = {International
      Conference on Artificial Intelligence and Computer Engineering (ICAICE 2022)},\n
      pages = {126102Q - 126102Q-6},\n title = {Preemptive resource scheduling strategy
      of cloud video based on Kubernetes},\n volume = {12610},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2169680418", "name": "Qizheng Huo"}, {"authorId":
      "2210987007", "name": "Shaonan Li"}, {"authorId": "2128663795", "name": "Chengyang
      Li"}, {"authorId": "49290936", "name": "Yongqiang Xie"}, {"authorId": "46947599",
      "name": "Zhongbo Li"}]}, {"paperId": "5cb5f6158a62dfb2570f2380bc9b0372d1aec025",
      "externalIds": {"DBLP": "conf/ictc/VitumbikoK23", "DOI": "10.1109/ICTC58733.2023.10393081",
      "CorpusId": 267204584}, "corpusId": 267204584, "publicationVenue": {"id": "9aa57e01-2dc2-4422-93b7-2b628326f78c",
      "name": "Information and Communication Technology Convergence", "type": "conference",
      "alternate_names": ["International Conference on Information and Communication
      Technology Convergence", "Inf Commun Technol Converg", "Int Conf Inf Commun
      Technol Converg", "ICTC"]}, "url": "https://www.semanticscholar.org/paper/5cb5f6158a62dfb2570f2380bc9b0372d1aec025",
      "title": "Heterogeneous Wireless Device Management in Edge Computing Systems
      for IoT Services", "abstract": "In a heterogeneous Internet of Things (IoT)
      setup, it is impractical and requires human intervention to deploy workloads
      for every device after enrolment, especially considering the diverse range of
      wireless technologies involved. Furthermore, it is extremely complex to design
      and develop a large-scale system that can accommodate and integrate heterogeneous
      wireless technologies to achieve interoperability between the devices. As the
      number of devices increases, it is necessary to dynamically adjust workloads
      to accommodate the growing demand and maintain quality of service. In this paper
      we employ a state-of-art solution called Project-Flotta, which is utilized for
      managing edge devices and edge workloads. However, Project-Flotta does not provide
      a way of automating and managing heterogeneous wireless technologies for an
      IoT service. Therefore, we propose a system based on Project-Flotta leveraging
      its kubernetes custom resources by extending its functionality to adapt diverse
      wireless technologies.", "venue": "Information and Communication Technology
      Convergence", "year": 2023, "referenceCount": 22, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2023-10-11",
      "journal": {"name": "2023 14th International Conference on Information and Communication
      Technology Convergence (ICTC)", "pages": "616-618"}, "citationStyles": {"bibtex":
      "@Article{Vitumbiko2023HeterogeneousWD,\n author = {Mafeni Vitumbiko and Younghan
      Kim},\n booktitle = {Information and Communication Technology Convergence},\n
      journal = {2023 14th International Conference on Information and Communication
      Technology Convergence (ICTC)},\n pages = {616-618},\n title = {Heterogeneous
      Wireless Device Management in Edge Computing Systems for IoT Services},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2280951369", "name": "Mafeni Vitumbiko"},
      {"authorId": "2281064281", "name": "Younghan Kim"}]}, {"paperId": "5cb802583cd093fd8b70a093b2ecd7bb6f81b895",
      "externalIds": {"DBLP": "conf/iccS/BalisBS22", "DOI": "10.1007/978-3-031-08754-7_5",
      "CorpusId": 250076645}, "corpusId": 250076645, "publicationVenue": {"id": "46990654-eb6c-4674-96bc-ba905dab2a86",
      "name": "International Conference on Conceptual Structures", "type": "conference",
      "alternate_names": ["IEEE Int Conf Commun Syst", "International Conference on
      Computational Science", "ICCS", "International Conference on Curves and Surfaces",
      "Int Conf Concept Struct", "Int Conf Curve Surf", "IEEE International Conference
      on Complex Systems", "IEEE International Conference on Communication Systems",
      "Int Conf Comput Sci", "IEEE Int Conf Complex Syst"], "url": "http://www.wikicfp.com/cfp/program?id=1321",
      "alternate_urls": ["https://link.springer.com/conference/iccs-computsci"]},
      "url": "https://www.semanticscholar.org/paper/5cb802583cd093fd8b70a093b2ecd7bb6f81b895",
      "title": "Auto-scaling of Scientific Workflows in Kubernetes", "abstract": null,
      "venue": "International Conference on Conceptual Structures", "year": 2022,
      "referenceCount": 10, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "33-40"}, "citationStyles": {"bibtex": "@Article{Bali\u015b2022AutoscalingOS,\n
      author = {B. Bali\u015b and A. Bronski and Mateusz Szarek},\n booktitle = {International
      Conference on Conceptual Structures},\n pages = {33-40},\n title = {Auto-scaling
      of Scientific Workflows in Kubernetes},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "1960359", "name": "B. Bali\u015b"}, {"authorId": "95790281", "name": "A. Bronski"},
      {"authorId": "98286943", "name": "Mateusz Szarek"}]}, {"paperId": "5cd58a5ee776818ad16981e13c633ae67eb4489a",
      "externalIds": {"DBLP": "journals/tmm/XiangTHYXSXHBGQG24", "DOI": "10.1109/TMM.2023.3274303",
      "CorpusId": 258580971}, "corpusId": 258580971, "publicationVenue": {"id": "10e76a35-58d6-443c-9683-fc16f2dd0a92",
      "name": "IEEE transactions on multimedia", "type": "journal", "alternate_names":
      ["IEEE Transactions on Multimedia", "IEEE Trans Multimedia", "IEEE trans multimedia"],
      "issn": "1520-9210", "url": "http://ieeexplore.ieee.org/servlet/opac?punumber=6046"},
      "url": "https://www.semanticscholar.org/paper/5cd58a5ee776818ad16981e13c633ae67eb4489a",
      "title": "CARE: Cloudified Android With Optimized Rendering Platform", "abstract":
      "Due to the excellent rendering capabilities, GPUs are mainstream accelerators
      in the Cloud-rendering industry. However, current Cloud-rendering systems suffer
      from a CPU-GPU workload imbalance that not only degrades application performance
      but also causes a significant waste of GPU resources. Recent proposals (such
      as API-forwarding and c-GPU) for improving CPU-GPU balance are promising but
      fail to solve system-resource redundancy issues (i.e., each instance tends to
      occupy all resources, exceeding its requirements). Such behavior will increase
      CPU load and lower effective GPU utilization. To demonstrate the severity of
      the issue, we evaluated real-world applications and results show that in most
      cases, nearly 50% of resources are useless. To solve this problem, we present
      CARE, the first framework intended to reduce the system-level redundancy by
      cloudifying the system from monolithic to Cloud-native. To allow users to configure
      required services, CARE puts forward a functional unit called Configurable Android
      (CA). To allow multiple instances to share certain types of resources, CARE
      innovates Sharing Resource (SR). To reduce the unused services, CARE introduces
      Pruning Resources (PR). To further alleviate the CPU pressure and achieve CPU-GPU
      balance, we propose rShare, a system aiming at enhancing CPU effective utilization
      and increasing Android instance density of the Cloud-rendering platform. Based
      on Kubernetes, rShare divides all the CPUs into non-overlapping shared CPU pools,
      allocates instances to pools within milliseconds, and dynamically migrates them
      by tracking their QoS status. So far, CARE primarily focuses on Android systems
      and can handle 60 heavyweight instances (e.g., KOG (King of Glory)) on Intel
      SG1. rShare can apply instance allocation within milliseconds and increase the
      platform density by 39.4%.", "venue": "IEEE transactions on multimedia", "year":
      2024, "referenceCount": 37, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"name": "IEEE Transactions on Multimedia", "pages": "958-971",
      "volume": "26"}, "citationStyles": {"bibtex": "@Article{Xiang2024CARECA,\n author
      = {Yuxin Xiang and Dongjie Tang and Rui Huang and Yong Yao and Chao Xie and
      Qiming Shi and Randy Xu and M. Haghighat and Cathy Bao and Yicheng Gu and Zhengwei
      Qi and Haibing Guan},\n booktitle = {IEEE transactions on multimedia},\n journal
      = {IEEE Transactions on Multimedia},\n pages = {958-971},\n title = {CARE: Cloudified
      Android With Optimized Rendering Platform},\n volume = {26},\n year = {2024}\n}\n"},
      "authors": [{"authorId": "2216646918", "name": "Yuxin Xiang"}, {"authorId":
      "1753591546", "name": "Dongjie Tang"}, {"authorId": "2216709391", "name": "Rui
      Huang"}, {"authorId": "2110254816", "name": "Yong Yao"}, {"authorId": "2152297580",
      "name": "Chao Xie"}, {"authorId": "2153817808", "name": "Qiming Shi"}, {"authorId":
      "2945773", "name": "Randy Xu"}, {"authorId": "143887564", "name": "M. Haghighat"},
      {"authorId": "2060106520", "name": "Cathy Bao"}, {"authorId": "2216653602",
      "name": "Yicheng Gu"}, {"authorId": "1689026", "name": "Zhengwei Qi"}, {"authorId":
      "145676478", "name": "Haibing Guan"}]}, {"paperId": "5ce75e13eca4487f06d9a33226dde0da1b2fef90",
      "externalIds": {"DBLP": "conf/IEEEcloud/GovindarajanGV22", "DOI": "10.1109/CLOUD55607.2022.00063",
      "CorpusId": 251773393}, "corpusId": 251773393, "publicationVenue": {"id": "406d9f60-417a-4dc5-a6b7-1fe4689a4ff7",
      "name": "IEEE International Conference on Cloud Computing", "type": "conference",
      "alternate_names": ["Int Conf Cloud Comput [services Soc", "CLOUD", "International
      Conference on Cloud Computing [Services Society]", "IEEE Int Conf Cloud Comput"]},
      "url": "https://www.semanticscholar.org/paper/5ce75e13eca4487f06d9a33226dde0da1b2fef90",
      "title": "Network Aware Container Orchestration for Telco Workloads", "abstract":
      "In recent years, with the maturation of container orchestration platforms like
      Kubernetes, containers are now becoming the default way to deploy cloud-native
      applications, designed as microservices, on public and private clouds. These
      trends have also spread to the field of Telecommunications, boosted by the onset
      of 5G. Network functions processing millions of packets per second, earlier
      run as proprietary physical boxes, are now being realized as disaggregated container
      based microservices (CNFs) running on commodity clusters managed by orchestrators,
      like Kubernetes, on Telco clouds. While container orchestrators have evolved
      to meet the needs of enterprise applications, Telco workloads still remain a
      second class citizen, as the orchestrator is presently unaware of the networking
      needs of CNFs and cannot guarantee QoS of network intensive functions. In this
      work, we examine orchestration of network sensitive functions and identify the
      key networking requirements of containerized Telco workloads from the orchestration
      platform. We design and propose NACO - Network Aware Container Orchestration,
      a minimal, cloud-native and scalable extension to the Kubernetes platform to
      address these requirements and provide first class lifecycle management of CNFs
      used in Telco workloads. We implement a prototype of the system and demonstrate
      that we can achieve network aware container orchestration with minimal operation
      times.", "venue": "IEEE International Conference on Cloud Computing", "year":
      2022, "referenceCount": 12, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-07-01", "journal": {"name": "2022 IEEE 15th International
      Conference on Cloud Computing (CLOUD)", "pages": "397-406"}, "citationStyles":
      {"bibtex": "@Article{Govindarajan2022NetworkAC,\n author = {Kavya Govindarajan
      and Chander Govindarajan and Mudit Verma},\n booktitle = {IEEE International
      Conference on Cloud Computing},\n journal = {2022 IEEE 15th International Conference
      on Cloud Computing (CLOUD)},\n pages = {397-406},\n title = {Network Aware Container
      Orchestration for Telco Workloads},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2142548183", "name": "Kavya Govindarajan"}, {"authorId": "3390226", "name":
      "Chander Govindarajan"}, {"authorId": "151500192", "name": "Mudit Verma"}]},
      {"paperId": "5cf7cfe2e697416f6fa4d2e23d530d5461791798", "externalIds": {"MAG":
      "3013921229", "ArXiv": "2003.13174", "DBLP": "journals/corr/abs-2003-13174",
      "CorpusId": 214714433}, "corpusId": 214714433, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/5cf7cfe2e697416f6fa4d2e23d530d5461791798",
      "title": "MIP An AI Distributed Architectural Model to Introduce Cognitive computing
      capabilities in Cyber Physical Systems (CPS)", "abstract": "This paper introduces
      the MIP Platform architecture model, a novel AI-based cognitive computing platform
      architecture. The goal of the proposed application of MIP is to reduce the implementation
      burden for the usage of AI algorithms applied to cognitive computing and fluent
      HMI interactions within the manufacturing process in a cyber-physical production
      system. The cognitive inferencing engine of MIP is a deterministic cognitive
      module that processes declarative goals, identifies Intents and Entities, selects
      suitable actions and associated algorithms, and invokes for the execution a
      processing logic (Function) configured in the internal Function-as-aService
      or Connectivity Engine. Constant observation and evaluation against performance
      criteria assess the performance of Lambda(s) for many and varying scenarios.
      The modular design with well-defined interfaces enables the reusability and
      extensibility of FaaS components. An integrated BigData platform implements
      this modular design supported by technologies such as Docker, Kubernetes for
      virtualization and orchestration of the individual components and their communication.
      The implementation of the architecture is evaluated using a real-world use case
      later discussed in this paper.", "venue": "arXiv.org", "year": 2020, "referenceCount":
      14, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-03-30", "journal":
      {"name": "ArXiv", "volume": "abs/2003.13174"}, "citationStyles": {"bibtex":
      "@Article{Giampa2020MIPAA,\n author = {P. Giampa and Massimiliano Dibitonto},\n
      booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {MIP An AI Distributed
      Architectural Model to Introduce Cognitive computing capabilities in Cyber Physical
      Systems (CPS)},\n volume = {abs/2003.13174},\n year = {2020}\n}\n"}, "authors":
      [{"authorId": "1598473791", "name": "P. Giampa"}, {"authorId": "1776639", "name":
      "Massimiliano Dibitonto"}]}, {"paperId": "5cf85a0c91d85cae87abdb9128bf509a412b0fc8",
      "externalIds": {"DBLP": "conf/inista/SoussiaBI23", "DOI": "10.1109/INISTA59065.2023.10310316",
      "CorpusId": 265354653}, "corpusId": 265354653, "publicationVenue": {"id": "1d2c7a35-82d0-41d7-8df3-d900f292008e",
      "name": "International Symposium on INnovations in Intelligent SysTems and Applications",
      "type": "conference", "alternate_names": ["INISTA", "Int Symp Innov Intell Syst
      Appl", "International Symposium on Innovations in Intelligent SysTems and Applications"],
      "url": "http://www.inista.org"}, "url": "https://www.semanticscholar.org/paper/5cf85a0c91d85cae87abdb9128bf509a412b0fc8",
      "title": "Deep Reinforcement Learning-based Load Balancer using Kubernetes",
      "abstract": "The performance of irregular scientific applications can be easily
      affected by an uneven distribution of loads between computing resources. In
      this context, load balancing is one of the most important solutions to improve
      resource utilization. Yet many heuristic and metaheuristic algorithms have been
      proposed in the literature for dynamic load balancing, choosing the best performing
      load balancing algorithm for a given application is not a trivial task especially
      in situations where applications have a dynamic behavior.This paper proposes
      a new approach of Load Balancing using Deep Reinforcement Learning. The proposed
      agent schedules tasks to the cluster\u2019s node using state of the art scheduling
      algorithms. Based on the user\u2019s tasks and the available nodes, the agent
      must choose an efficient scheduling algorithm as an action from the action space
      and use it to schedule the pending tasks to cluster\u2019s nodes. The agent\u2019s
      action space is composed of state of the art scheduling algorithms. This approach
      optimizes both the average execution time and the resource utilization while
      keeping a low Imbalance Degree in the cluster.", "venue": "International Symposium
      on INnovations in Intelligent SysTems and Applications", "year": 2023, "referenceCount":
      29, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2023-09-20",
      "journal": {"name": "2023 International Conference on Innovations in Intelligent
      Systems and Applications (INISTA)", "pages": "1-7"}, "citationStyles": {"bibtex":
      "@Article{Soussia2023DeepRL,\n author = {Moenes Ben Soussia and Khadija Bousselmi
      and H. Idoudi},\n booktitle = {International Symposium on INnovations in Intelligent
      SysTems and Applications},\n journal = {2023 International Conference on Innovations
      in Intelligent Systems and Applications (INISTA)},\n pages = {1-7},\n title
      = {Deep Reinforcement Learning-based Load Balancer using Kubernetes},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2267754203", "name": "Moenes Ben
      Soussia"}, {"authorId": "48884210", "name": "Khadija Bousselmi"}, {"authorId":
      "2014299", "name": "H. Idoudi"}]}, {"paperId": "5cfd046e69d4cb2a4c9c5fd028fe4c3e2c2d10dc",
      "externalIds": {"MAG": "2479960154", "DOI": "10.1007/978-1-4842-1907-2_14",
      "CorpusId": 64429243}, "corpusId": 64429243, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/5cfd046e69d4cb2a4c9c5fd028fe4c3e2c2d10dc",
      "title": "Installing Kubernetes on a Multi-Node Cluster", "abstract": null,
      "venue": "", "year": 2016, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "pages": "399-427", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Vohra2016InstallingKO,\n author = {Deepak Vohra},\n
      pages = {399-427},\n title = {Installing Kubernetes on a Multi-Node Cluster},\n
      year = {2016}\n}\n"}, "authors": [{"authorId": "3026624", "name": "Deepak Vohra"}]},
      {"paperId": "5d0db9077fc8a2dd9671d4eb76ffcf6ee697d500", "externalIds": {"CorpusId":
      249119231}, "corpusId": 249119231, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5d0db9077fc8a2dd9671d4eb76ffcf6ee697d500",
      "title": "Redis Enterprise for Kubernetes", "abstract": null, "venue": "", "year":
      2022, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Business",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{None,\n title
      = {Redis Enterprise for Kubernetes},\n year = {2022}\n}\n"}, "authors": []},
      {"paperId": "5d17d6a3941e438eeb64a6e65440d9e3441134c5", "externalIds": {"DOI":
      "10.1109/ICCUBEA58933.2023.10391973", "CorpusId": 267098186}, "corpusId": 267098186,
      "publicationVenue": {"id": "9213b848-c171-4f98-8c0b-e69f0b41941b", "name": "International
      Conference on Computing Communication Control and automation", "type": "conference",
      "alternate_names": ["ICCUBEA", "Int Conf Comput Commun Control autom"]}, "url":
      "https://www.semanticscholar.org/paper/5d17d6a3941e438eeb64a6e65440d9e3441134c5",
      "title": "Kubernetes Cluster Disaster Recovery Using AWS", "abstract": "As applications
      in IT have been spanning multiple containers across servers, kubernetes is being
      used extensively for automating software deployment, scaling and management.
      Kubernetes eases the container tasks and also other activities like horizontal
      scaling and canary development. To run cloud-native applications, kubernetes
      has become the de facto standard for container orchestration, regardless of
      the underlying platform. This makes it very crucial to have a disaster recovery
      plan for kubernetes environments. This paper proposes a system for backup and
      restore of a kubernetes cluster using the snapshot method along with the Public
      Key Infrastructure (PKI) certificates of a cluster. It also focuses on automating
      the backup and restore operations using microservices. Furthermore, it makes
      use of Amazon Web Services (AWS) tools for the reliability, scalability and
      the automation of backup and restore operations. The user can run the proposed
      microservices to backup and restore the cluster from any specific timestamp
      before the disaster. The experimental results demonstrate the effective performance
      of the proposed method in terms of efficiently restoring the kubernetes cluster
      in optimal time.", "venue": "International Conference on Computing Communication
      Control and automation", "year": 2023, "referenceCount": 16, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2023-08-18", "journal": {"name": "2023 7th
      International Conference On Computing, Communication, Control And Automation
      (ICCUBEA)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Conference{Bhavsar2023KubernetesCD,\n
      author = {Simran Bhavsar and Apoorva Agrawal and Tanvi Ropalkar and Pranjali
      Kamdi and Aparna Hajare and Shilpa Deshpande and Rahul Rathi and Devendra Garg},\n
      booktitle = {International Conference on Computing Communication Control and
      automation},\n journal = {2023 7th International Conference On Computing, Communication,
      Control And Automation (ICCUBEA)},\n pages = {1-6},\n title = {Kubernetes Cluster
      Disaster Recovery Using AWS},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2280389330", "name": "Simran Bhavsar"}, {"authorId": "2280394038", "name":
      "Apoorva Agrawal"}, {"authorId": "2280381286", "name": "Tanvi Ropalkar"}, {"authorId":
      "2280374763", "name": "Pranjali Kamdi"}, {"authorId": "2131074838", "name":
      "Aparna Hajare"}, {"authorId": "2143608469", "name": "Shilpa Deshpande"}, {"authorId":
      "2216335320", "name": "Rahul Rathi"}, {"authorId": "2280387303", "name": "Devendra
      Garg"}]}, {"paperId": "5d2230979f67c5497f6933611a4805856aede8ce", "externalIds":
      {"MAG": "2810996105", "CorpusId": 64494845}, "corpusId": 64494845, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5d2230979f67c5497f6933611a4805856aede8ce",
      "title": "Oracle WebLogic Server", "abstract": "\u2022 Simplified provisioning
      to Oracle Cloud \u2022 Full compatibility with onpremises deployments \u2022
      Universal Credits and BYOL pricing models \u2022 Multiple Editions o Enterprise
      Edition (UCM) o Suite (UCM) o Standard Edition (BYOL) o Enterprise Edition (BYOL)
      o Suite (BYOL) Oracle WebLogic Server is the #1 Java application server, offering
      standardsbased APIs and tooling for application innovation on a proven mission
      critical runtime. Oracle WebLogic Server applications may be deployed on physical
      systems, VMs or cloud native Kubernetes environments hosted on-premises or in
      public clouds. Oracle WebLogic Server is integrated with Oracle\u2019s full
      product and cloud service portfolio, and is available in multiple editions.",
      "venue": "", "year": 2011, "referenceCount": 0, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2011-05-19",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Server2011OracleWS,\n
      author = {Weblogic Server},\n title = {Oracle WebLogic Server},\n year = {2011}\n}\n"},
      "authors": [{"authorId": "2242515609", "name": "Weblogic Server"}]}, {"paperId":
      "5d227d8cbe920fcafa6b36936a912e5760417694", "externalIds": {"MAG": "2801919239",
      "DBLP": "journals/cj/TaherizadehS19", "DOI": "10.1093/COMJNL/BXY043", "CorpusId":
      64662426}, "corpusId": 64662426, "publicationVenue": {"id": "aa746a02-d187-42c2-bdf9-df6a5d4e648c",
      "name": "Computer/law journal", "type": "journal", "alternate_names": ["Computer
      journal", "The Computer Journal", "Comput j", "Comput J"], "issn": "0164-8756",
      "alternate_issns": ["0010-4620"], "url": "https://repository.jmls.edu/jitpl/all_issues.html",
      "alternate_urls": ["http://comjnl.oxfordjournals.org/"]}, "url": "https://www.semanticscholar.org/paper/5d227d8cbe920fcafa6b36936a912e5760417694",
      "title": "Dynamic Multi-level Auto-scaling Rules for Containerized Applications",
      "abstract": "Container-based cloud applications require sophisticated auto-scaling
      methods in order to operate under different workload conditions. The choice
      of an auto-scaling method may significantly affect important service quality
      parameters, such as response time and resource utilization. Current container
      orchestration systems such as Kubernetes and cloud providers such as Amazon
      EC2 employ auto-scaling rules with static thresholds and rely mainly on infrastructure-related
      monitoring data, such as CPU and memory utilization. This paper presents a new
      dynamic multi-level (DM) auto-scaling method with dynamically changing thresholds,
      which uses not only infrastructure, but also application-level monitoring data.
      The new method is compared with seven existing auto-scaling methods in different
      synthetic and real-world workload scenarios. Based on experimental results,
      all eight auto-scaling methods are compared according to the response time and
      the number of instantiated containers. The results show that the proposed DM
      method has better overall performance under varied amount of workloads than
      the other auto-scaling methods. Due to satisfactory results, the proposed DM
      method is implemented in the SWITCH software engineering system for time-critical
      cloud applications.", "venue": "Computer/law journal", "year": 2019, "referenceCount":
      17, "citationCount": 63, "influentialCitationCount": 7, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://academic.oup.com/comjnl/article-pdf/62/2/174/27736749/bxy043.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2019-02-01", "journal": {"name": "Comput. J.", "pages":
      "174-197", "volume": "62"}, "citationStyles": {"bibtex": "@Article{Taherizadeh2019DynamicMA,\n
      author = {S. Taherizadeh and V. Stankovski},\n booktitle = {Computer/law journal},\n
      journal = {Comput. J.},\n pages = {174-197},\n title = {Dynamic Multi-level
      Auto-scaling Rules for Containerized Applications},\n volume = {62},\n year
      = {2019}\n}\n"}, "authors": [{"authorId": "2483329", "name": "S. Taherizadeh"},
      {"authorId": "3034012", "name": "V. Stankovski"}]}, {"paperId": "5d33e915fd23a001120b6c2ca60319872c5b1984",
      "externalIds": {"MAG": "2989604207", "CorpusId": 213414754}, "corpusId": 213414754,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5d33e915fd23a001120b6c2ca60319872c5b1984",
      "title": "Integraci\u00f3n de clusters ad-hoc en Jupyter y Kubernetes", "abstract":
      null, "venue": "", "year": 2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"}],
      "publicationTypes": null, "publicationDate": "2019-10-18", "journal": {"name":
      "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Amarillo2019Integraci\u00f3nDC,\n
      author = {David \u00c1lvez Amarillo},\n title = {Integraci\u00f3n de clusters
      ad-hoc en Jupyter y Kubernetes},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "1580383983", "name": "David \u00c1lvez Amarillo"}]}, {"paperId": "5d3b69c530aae56558e11c31f4147d81c54a4a78",
      "externalIds": {"CorpusId": 237560424}, "corpusId": 237560424, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5d3b69c530aae56558e11c31f4147d81c54a4a78",
      "title": "MARKA: A Microservice Architecture-Based Application Performance Comparison
      Between Docker Swarm and Kubernetes", "abstract": "Container-based distributed
      programming techniques are used to make applications effective and scalable.
      Microservice architecture is an approach that has been on the rise among software
      developers in recent years. This paper presents a case study comparing the performance
      of two commonly used container orchestrators, Docker Swarm and Kubernetes, over
      a Web application developed by using the microservices architecture. We compare
      the performances of Docker Swarm and Kubernetes under load by increasing the
      number of users. The aim of this study is to give an idea to researchers and
      practitioners about the performances of Docker Swarm and Kubernetes in applications
      developed in the proposed microservice architecture. The Web application developed
      by the authors is a kind of loyalty application, that is to say, it gives a
      free item in exchange for a certain number of purchased items. With this study,
      it was concluded that the Docker Swarm is more efficient as the number of users
      increases compared to Kubernetes. Keywords\u2013Microservice Architecture; Performance
      Evaluation; Docker Swarm; Kubernetes; JMeter.", "venue": "", "year": 2020, "referenceCount":
      12, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "citationStyles": {"bibtex": "@Inproceedings{G\u00fcnaydin2020MARKAAM,\n
      author = {Tugba G\u00fcnaydin},\n title = {MARKA: A Microservice Architecture-Based
      Application Performance Comparison Between Docker Swarm and Kubernetes},\n year
      = {2020}\n}\n"}, "authors": [{"authorId": "51129279", "name": "Tugba G\u00fcnaydin"}]},
      {"paperId": "5d4ea964fa12efdd172cf509bb1b1e126b915d70", "externalIds": {"MAG":
      "2909213022", "ArXiv": "1901.05463", "DBLP": "journals/corr/abs-1901-05463",
      "CorpusId": 58014593}, "corpusId": 58014593, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/5d4ea964fa12efdd172cf509bb1b1e126b915d70",
      "title": "Fundamentals of effective cloud management for the new NASA Astrophysics
      Data System", "abstract": "The new NASA Astrophysics Data System (ADS) is designed
      with a serviceoriented architecture (SOA) that consists of multiple customized
      Apache Solr search engine instances plus a collection of microservices, containerized
      using Docker, and deployed in Amazon Web Services (AWS). For complex systems,
      like the ADS, this loosely coupled architecture can lead to a more scalable,
      reliable and resilient system if some fundamental questions are addressed. After
      having experimented with different AWS environments and deployment methods,
      we decided in December 2017 to go with Kubernetes as our container orchestration.
      Defining the best strategy to properly setup Kubernetes has shown to be challenging:
      automatic scaling services and load balancing traffic can lead to errors whose
      origin is difficult to identify, monitoring and logging the activity that happens
      across multiple layers for a single request needs to be carefully addressed,
      and the best workflow for a Continuous Integration and Delivery (CI/CD) system
      is not self-evident. We present here how we tackle these challenges and our
      plans for the future.", "venue": "arXiv.org", "year": 2019, "referenceCount":
      1, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Physics"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Physics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Physics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2019-01-16", "journal": {"name": "ArXiv", "volume": "abs/1901.05463"},
      "citationStyles": {"bibtex": "@Article{Blanco-Cuaresma2019FundamentalsOE,\n
      author = {S. Blanco-Cuaresma and A. Accomazzi and Michael J. Kurtz and E. Henneken
      and Carolyn Stern-Grant and Donna M. Thompson and Roman Chyla and Stephen McDonald
      and Golnaz Shapurian and Timothy W. Hostetler and M. Templeton and Kelly E.
      Lockhart and Kris Bukovi and Nathan Rapport},\n booktitle = {arXiv.org},\n journal
      = {ArXiv},\n title = {Fundamentals of effective cloud management for the new
      NASA Astrophysics Data System},\n volume = {abs/1901.05463},\n year = {2019}\n}\n"},
      "authors": [{"authorId": "1388393761", "name": "S. Blanco-Cuaresma"}, {"authorId":
      "2751757", "name": "A. Accomazzi"}, {"authorId": "2673629", "name": "Michael
      J. Kurtz"}, {"authorId": "2856411", "name": "E. Henneken"}, {"authorId": "1403850397",
      "name": "Carolyn Stern-Grant"}, {"authorId": "9813714", "name": "Donna M. Thompson"},
      {"authorId": "2938401", "name": "Roman Chyla"}, {"authorId": "2056011375", "name":
      "Stephen McDonald"}, {"authorId": "8064327", "name": "Golnaz Shapurian"}, {"authorId":
      "27714833", "name": "Timothy W. Hostetler"}, {"authorId": "32985953", "name":
      "M. Templeton"}, {"authorId": "67133788", "name": "Kelly E. Lockhart"}, {"authorId":
      "66369093", "name": "Kris Bukovi"}, {"authorId": "66793635", "name": "Nathan
      Rapport"}]}, {"paperId": "5d7264f8d44c959a9722f2934d9f01f3a194d148", "externalIds":
      {"MAG": "2954562837", "CorpusId": 209217202}, "corpusId": 209217202, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5d7264f8d44c959a9722f2934d9f01f3a194d148",
      "title": "Continious Delivery Devsecops with Kubernetes: Stay Safe at the Speed
      of Light", "abstract": null, "venue": "", "year": 2018, "referenceCount": 0,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Medicine"], "s2FieldsOfStudy": [{"category": "Medicine",
      "source": "external"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Gonzalez2018ContiniousDD,\n
      author = {David Gonzalez},\n title = {Continious Delivery Devsecops with Kubernetes:
      Stay Safe at the Speed of Light},\n year = {2018}\n}\n"}, "authors": [{"authorId":
      "2064913679", "name": "David Gonzalez"}]}, {"paperId": "5d7d5816219db408b256ebbcb7b9b070fc03935c",
      "externalIds": {"MAG": "2737545459", "CorpusId": 186555380}, "corpusId": 186555380,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5d7d5816219db408b256ebbcb7b9b070fc03935c",
      "title": "NOI APLICA\u0162II DE CALCUL PENTRU IDENTIFICAREA SISTEMELOR", "abstract":
      "A set of applications for identification of linear multivariable systems is
      presented. The incorporated algorithms use subspace-based techniques (MOESP,
      N4SID, or their combination) to find a standard discrete-time state-space description,
      and optionally, the covariance matrices and predictor gain matrix, using input
      and output (I/O) trajectories. For flexibility, separate applications are offered
      for computing the processed upper triangular factor of the block-Hankel-block
      matrix of I/O data (using fast or standard QR factorization algorithms), for
      computing the system matrices, predictor gain matrix, for estimating the initial
      state of the system, and for its simulation. The applications are encapsulated
      in Docker containers which are managed by the Kubernetes platform. This ensures
      greater flexibility, enhanced security, and fast execution. The services to
      be implemented are part of a cloud-based open platform for process control applications.",
      "venue": "", "year": 2017, "referenceCount": 20, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Sima2017NOIAD,\n
      author = {Vasile Sima and Florin Hartescu and Alexandru Stanciu},\n title =
      {NOI APLICA\u0162II DE CALCUL PENTRU IDENTIFICAREA SISTEMELOR},\n year = {2017}\n}\n"},
      "authors": [{"authorId": "2073859620", "name": "Vasile Sima"}, {"authorId":
      "2083586693", "name": "Florin Hartescu"}, {"authorId": "2075700681", "name":
      "Alexandru Stanciu"}]}, {"paperId": "5db9e064b7ff4a45c31cc4168a74059e87e47fa4",
      "externalIds": {"CorpusId": 237290112}, "corpusId": 237290112, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5db9e064b7ff4a45c31cc4168a74059e87e47fa4",
      "title": "An Architecture for Machine Learning-based Fault Prediction and Migration
      In Cloud Service Systems", "abstract": "A cloud system typically contains a
      huge number of computing nodes with numerous containers running on. Nodes can
      fail in practice, leading to the downtime of services. Therefore, it is necessary
      to archive migration work to guarantee service availability in container-based
      environments. The ability to predict failure nodes acts as a mechanism, allowing
      container-based services to be migrated to healthy nodes, increasing service
      availability. To handle this problem, this paper proposes an architecture, which
      enables correct fault prediction of nodes by using machine learning and a migration
      module taking suitable action to maintain automatically services on Kubernetes
      platform", "venue": "", "year": 2021, "referenceCount": 2, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "citationStyles":
      {"bibtex": "@Inproceedings{Vu2021AnAF,\n author = {D. Vu and Young Han Kim},\n
      title = {An Architecture for Machine Learning-based Fault Prediction and Migration
      In Cloud Service Systems},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2124374654", "name": "D. Vu"}, {"authorId": "2285307280", "name": "Young Han
      Kim"}]}, {"paperId": "5dbb846e79a304ed98f779ed5f1ba29caf64a04b", "externalIds":
      {"MAG": "2972546903", "CorpusId": 203538995}, "corpusId": 203538995, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5dbb846e79a304ed98f779ed5f1ba29caf64a04b",
      "title": "Our Journey of Implementing {TLS} at Scale for Services on Kubernetes",
      "abstract": null, "venue": "", "year": 2019, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "citationStyles":
      {"bibtex": "@Inproceedings{Gaat2019OurJO,\n author = {Tilottama Gaat and Akshay
      Chitneni},\n title = {Our Journey of Implementing {TLS} at Scale for Services
      on Kubernetes},\n year = {2019}\n}\n"}, "authors": [{"authorId": "1397141012",
      "name": "Tilottama Gaat"}, {"authorId": "1397141008", "name": "Akshay Chitneni"}]},
      {"paperId": "5dda3e31f6b1c48437020565928e98aa552de7a5", "externalIds": {"MAG":
      "3195991019", "DOI": "10.1007/978-1-4842-7211-4_6", "CorpusId": 238960826},
      "corpusId": 238960826, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5dda3e31f6b1c48437020565928e98aa552de7a5",
      "title": "Deploying Applications to Kubernetes", "abstract": null, "venue":
      "Cloud Native Integration with Apache Camel", "year": 2021, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "Cloud Native Integration with Apache Camel"}, "citationStyles": {"bibtex":
      "@Article{Camposo2021DeployingAT,\n author = {Guilherme Camposo},\n booktitle
      = {Cloud Native Integration with Apache Camel},\n journal = {Cloud Native Integration
      with Apache Camel},\n title = {Deploying Applications to Kubernetes},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "2124262594", "name": "Guilherme Camposo"}]},
      {"paperId": "5de2e2ca5082a55c05f52042db1a19b9af56357d", "externalIds": {"MAG":
      "3184498084", "DBLP": "journals/ieeesp/MinnaBR0M21", "DOI": "10.1109/msec.2021.3094726",
      "CorpusId": 237402902}, "corpusId": 237402902, "publicationVenue": {"id": "efbc9e5f-59e1-4d6d-bcf5-1100bf12f8fb",
      "name": "IEEE Security and Privacy", "type": "journal", "alternate_names": ["IEEE
      Secur Priv", "IEEE Security & Privacy", "IEEE Secur  Priv"], "issn": "1540-7993",
      "alternate_issns": ["1558-4046"], "url": "http://www.computer.org/security",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=8013"]},
      "url": "https://www.semanticscholar.org/paper/5de2e2ca5082a55c05f52042db1a19b9af56357d",
      "title": "Understanding the Security Implications of Kubernetes Networking",
      "abstract": "Container-orchestration software such as Kubernetes make it easy
      to deploy and manage modern cloud applications based on microservices. Yet,
      its network abstractions pave the way for \"unexpected attacks\" if we approach
      cloud network security with the same mental model of traditional network security.",
      "venue": "IEEE Security and Privacy", "year": 2021, "referenceCount": 0, "citationCount":
      21, "influentialCitationCount": 2, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://ieeexplore.ieee.org/ielx7/8013/9529122/09497237.pdf", "status": "HYBRID"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2021-09-01", "journal": {"name": "IEEE
      Security & Privacy", "pages": "46-56", "volume": "19"}, "citationStyles": {"bibtex":
      "@Article{Minna2021UnderstandingTS,\n author = {F. Minna and Agathe Blaise and
      Filippo Rebecchi and B. Chandrasekaran and F. Massacci},\n booktitle = {IEEE
      Security and Privacy},\n journal = {IEEE Security & Privacy},\n pages = {46-56},\n
      title = {Understanding the Security Implications of Kubernetes Networking},\n
      volume = {19},\n year = {2021}\n}\n"}, "authors": [{"authorId": "66832895",
      "name": "F. Minna"}, {"authorId": "5860038", "name": "Agathe Blaise"}, {"authorId":
      "34941448", "name": "Filippo Rebecchi"}, {"authorId": "2102739", "name": "B.
      Chandrasekaran"}, {"authorId": "1746220", "name": "F. Massacci"}]}, {"paperId":
      "5debe2c4baff5c165be843a699fd8a69b3d16936", "externalIds": {"MAG": "3000374705",
      "DOI": "10.1109/CANOPIE-HPC49598.2019.00007", "CorpusId": 210692582}, "corpusId":
      210692582, "publicationVenue": {"id": "2ce8fe1d-969b-4e75-9d3f-897ce25c01e5",
      "name": "International Workshop on Containers and New Orchestration Paradigms
      for Isolated Environments in HPC", "type": "conference", "alternate_names":
      ["CANOPIE-HPC", "Int Workshop Contain New Orch Paradig Isol Environ HPC"]},
      "url": "https://www.semanticscholar.org/paper/5debe2c4baff5c165be843a699fd8a69b3d16936",
      "title": "Enabling HPC Workloads on Cloud Infrastructure Using Kubernetes Container
      Orchestration Mechanisms", "abstract": "Containers offer a broad array of benefits,
      including a consistent lightweight runtime environment through OS-level virtualization,
      as well as low overhead to maintain and scale applications with high efficiency.
      Moreover, containers are known to package and deploy applications consistently
      across varying infrastructures. Container orchestrators manage a large number
      of containers for microservices based cloud applications. However, the use of
      such service orchestration frameworks towards HPC workloads remains relatively
      unexplored. In this paper we study the potential use of Kubernetes on HPC infrastructure
      for use by the scientific community. We directly compare both its features and
      performance against Docker Swarm and bare metal execution of HPC applications.
      Herein, we detail the configurations required for Kubernetes to operate with
      containerized MPI applications, specifically accounting for operations such
      as (1) underlying device access, (2) inter-container communication across different
      hosts, and (3) configuration limitations. This evaluation quantifies the performance
      difference between representative MPI workloads running both on bare metal and
      containerized orchestration frameworks with Kubernetes, operating over both
      Ethernet and InfiniBand interconnects. Our results show that Kubernetes and
      Docker Swarm can achieve near bare metal performance over RDMA communication
      when high performance transports are enabled. Our results also show that Kubernetes
      presents overheads for several HPC applications over TCP/IP protocol. However,
      Docker Swarm''s throughput is near bare metal performance for the same applications.",
      "venue": "International Workshop on Containers and New Orchestration Paradigms
      for Isolated Environments in HPC", "year": 2019, "referenceCount": 25, "citationCount":
      33, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Environmental Science", "source": "s2-fos-model"}], "publicationTypes": null,
      "publicationDate": "2019-11-01", "journal": {"name": "2019 IEEE/ACM International
      Workshop on Containers and New Orchestration Paradigms for Isolated Environments
      in HPC (CANOPIE-HPC)", "pages": "11-20"}, "citationStyles": {"bibtex": "@Article{Beltre2019EnablingHW,\n
      author = {Angel Beltre and Pankaj Saha and M. Govindaraju and A. Younge and
      Ryan E. Grant},\n booktitle = {International Workshop on Containers and New
      Orchestration Paradigms for Isolated Environments in HPC},\n journal = {2019
      IEEE/ACM International Workshop on Containers and New Orchestration Paradigms
      for Isolated Environments in HPC (CANOPIE-HPC)},\n pages = {11-20},\n title
      = {Enabling HPC Workloads on Cloud Infrastructure Using Kubernetes Container
      Orchestration Mechanisms},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "8753780", "name": "Angel Beltre"}, {"authorId": "2093824280", "name": "Pankaj
      Saha"}, {"authorId": "1678486", "name": "M. Govindaraju"}, {"authorId": "145491609",
      "name": "A. Younge"}, {"authorId": "3021644", "name": "Ryan E. Grant"}]}, {"paperId":
      "5e12953317fa18191207e56cf3163c1e904d397d", "externalIds": {"MAG": "2995133426",
      "CorpusId": 214381665}, "corpusId": 214381665, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/5e12953317fa18191207e56cf3163c1e904d397d",
      "title": "Dise\u00f1o de una infraestructura Cloud de Blockchain mediante el
      uso de contenedores", "abstract": "Este trabajo se ha modelado a partir de un
      proyecto real de empresa realizado durante la realizacion del Practicum de la
      universidad. El proyecto real tiene un rango muy amplio, donde han intervenido
      un alto numero de personas y departamentos, por lo que este trabajo solo se
      centrara en una pequena parte de dicho proyecto, la cual es la que he realizado
      personalmente. Por motivos de confidencialidad, no se mostraran datos sensibles
      del proyecto real ni informacion del cliente. Este trabajo ha sido supervisado
      adicionalmente por personal del equipo dentro del proyecto real. El trabajo
      que se va a desarrollar se trata de la creacion y el despliegue de una infraestructura
      Cloud orquestada en contenedores, en este caso utilizando Docker y Kubernetes,
      para crear un servicio que utilice Blockchain para la encriptacion de datos.
      Esta infraestructura Cloud podria ser utilizada para diferentes tipos de aplicaciones
      que requieran de servicios de Blockchain y se monten en Cloud. Sin embargo,
      para dar contexto a todo lo que se va a realizar, se utilizara para gestionar
      con Blockchain la trazabilidad de los routeres desde su fabricacion hasta la
      instalacion en las casas del cliente, teniendo en cuenta posibles casos de reemplazo,
      reparacion o desecho de estos.---ABSTRACT---This assignment has been carried
      out based on a real business project accomplished during the university internship
      Practicum. The real project had a wide range where a huge amount of people where
      involved so, therefore, this assignment will focus on the tiny part of the project
      which I had personally done. For confidentiality reasons, sensitive data from
      the real project and client information will not be displayed. Additionally,
      this work has been supervised by staff from the project team. The assignment
      to be developed is about the creation and deployment of a Cloud infrastructure
      orchestrated in containers, using Docker and Kubernetes, to launch a Blockchain
      service for the data encryption. This Cloud infrastructure could be exploited
      for different type of applications, which require the use of Blockchain and
      Cloud services. But nevertheless, to give some context about what is going to
      be done, the service for this assignment will be one for obtain the traceability
      of the supply chain for routers since their elaboration until the delivery to
      the customer, taking into consider possible scenarios like router replacements,
      reparations and discards.", "venue": "", "year": 2019, "referenceCount": 0,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Political Science"], "s2FieldsOfStudy": [{"category":
      "Political Science", "source": "external"}], "publicationTypes": null, "publicationDate":
      "2019-06-01", "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex":
      "@Inproceedings{Ayala2019Dise\u00f1oDU,\n author = {Javier De Ayala},\n title
      = {Dise\u00f1o de una infraestructura Cloud de Blockchain mediante el uso de
      contenedores},\n year = {2019}\n}\n"}, "authors": [{"authorId": "1576686624",
      "name": "Javier De Ayala"}]}, {"paperId": "5e2306e323fa6811b99160a45b74378844880a2b",
      "externalIds": {"DBLP": "journals/sncs/SoldaniKB23", "DOI": "10.1007/s42979-023-01721-4",
      "CorpusId": 257902926}, "corpusId": 257902926, "publicationVenue": {"id": "7a7dc89b-e1a6-44df-a496-46c330a87840",
      "name": "SN Computer Science", "type": "journal", "alternate_names": ["SN Comput
      Sci"], "issn": "2661-8907", "alternate_issns": ["2662-995X"], "url": "https://link.springer.com/journal/42979"},
      "url": "https://www.semanticscholar.org/paper/5e2306e323fa6811b99160a45b74378844880a2b",
      "title": "Offline Mining of Microservice-Based Architectures (Extended Version)",
      "abstract": null, "venue": "SN Computer Science", "year": 2023, "referenceCount":
      20, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://link.springer.com/content/pdf/10.1007/s42979-023-01721-4.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-04-01", "journal":
      {"name": "SN Computer Science", "pages": "1-17", "volume": "4"}, "citationStyles":
      {"bibtex": "@Article{Soldani2023OfflineMO,\n author = {J. Soldani and Javad
      Khalili and Antonio Brogi},\n booktitle = {SN Computer Science},\n journal =
      {SN Computer Science},\n pages = {1-17},\n title = {Offline Mining of Microservice-Based
      Architectures (Extended Version)},\n volume = {4},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2265546", "name": "J. Soldani"}, {"authorId": "80195265", "name":
      "Javad Khalili"}, {"authorId": "1787701", "name": "Antonio Brogi"}]}, {"paperId":
      "5e2b922328dde9adb6c48893bb9c26d1dafc807a", "externalIds": {"DBLP": "conf/hpcc/MartNPC20",
      "DOI": "10.1109/HPCC-SmartCity-DSS50907.2020.00071", "CorpusId": 233434852},
      "corpusId": 233434852, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5e2b922328dde9adb6c48893bb9c26d1dafc807a",
      "title": "Observability in Kubernetes Cluster: Automatic Anomalies Detection
      using Prometheus", "abstract": "Kubernetes is a portable, extensible, open-source
      platform for managing containers. It comes with features such as automatic scaling,
      service discovery, load balancing, fault tolerance, etc. Being such a complex
      system, which has a lot of internal services and with the ability to manage
      a lot more user services, Kubernetes comes with a monitoring system, which provides
      metrics and logs for every service in the cluster. However, most of the time,
      the monitoring system needs human intervention for detection and troubleshooting
      defects. Human intervention usually occurs when it is too late, when a defect
      appears. We think that detecting anomalies in metrics provided by the monitoring
      system will help to prevent defects. In this paper, we analyze current solutions
      for automatic anomaly detection and alerting, and also we propose a new solution
      that will help system administrators to catch and predict anomalies earlier,
      which may lead to defects. Our solution, which is a technical one, is developed
      around Prometheus, an open-source monitoring system for metrics.", "venue":
      "2020 IEEE 22nd International Conference on High Performance Computing and Communications;
      IEEE 18th International Conference on Smart City; IEEE 6th International Conference
      on Data Science and Systems (HPCC/SmartCity/DSS)", "year": 2020, "referenceCount":
      6, "citationCount": 6, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2020-12-01",
      "journal": {"name": "2020 IEEE 22nd International Conference on High Performance
      Computing and Communications; IEEE 18th International Conference on Smart City;
      IEEE 6th International Conference on Data Science and Systems (HPCC/SmartCity/DSS)",
      "pages": "565-570"}, "citationStyles": {"bibtex": "@Article{Mart2020ObservabilityIK,\n
      author = {Octavian Mart and Catalin Negru and Florin Pop and Aniello Castiglione},\n
      booktitle = {2020 IEEE 22nd International Conference on High Performance Computing
      and Communications; IEEE 18th International Conference on Smart City; IEEE 6th
      International Conference on Data Science and Systems (HPCC/SmartCity/DSS)},\n
      journal = {2020 IEEE 22nd International Conference on High Performance Computing
      and Communications; IEEE 18th International Conference on Smart City; IEEE 6th
      International Conference on Data Science and Systems (HPCC/SmartCity/DSS)},\n
      pages = {565-570},\n title = {Observability in Kubernetes Cluster: Automatic
      Anomalies Detection using Prometheus},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "2086795060", "name": "Octavian Mart"}, {"authorId": "1772043", "name": "Catalin
      Negru"}, {"authorId": "144512429", "name": "Florin Pop"}, {"authorId": "143935013",
      "name": "Aniello Castiglione"}]}, {"paperId": "5e3a2a29d19afc41e4b3c192d2d3cad05d077d1f",
      "externalIds": {"DBLP": "conf/ro/Filgueira19", "DOI": "10.5281/zenodo.3357806",
      "CorpusId": 220557251}, "corpusId": 220557251, "publicationVenue": {"id": "74ceb356-690a-4978-a720-dcd3a1fcacf9",
      "name": "Workshop on Research Objects", "type": "conference", "alternate_names":
      ["Workshop Research Objects", "RO", "Workshop Res Object"], "url": "http://www.researchobject.org"},
      "url": "https://www.semanticscholar.org/paper/5e3a2a29d19afc41e4b3c192d2d3cad05d077d1f",
      "title": "DARE Platform: Enabling Easy Data-Intensive Workflow Composition and
      Deployment", "abstract": "\u2014This work presents the DARE platform and working
      environment for enabling easy data-intensive work\ufb02ow composition and deployment
      on clouds systems. DAREs technology translates scientists methods to concrete
      scienti\ufb01c work\ufb02ows that can be portable and reproducible on different
      computing envi- ronments without making any (or little) changes. For achieving
      this, we have combined the strengths of dispel4py and CWL sci- enti\ufb01c work\ufb02ows,
      Docker containers, Kubernetes infrastructure orchestration, Jupyter notebooks,
      and Cloud platforms.", "venue": "Workshop on Research Objects", "year": 2019,
      "referenceCount": 6, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Article{Filgueira2019DAREPE,\n author =
      {Rosa Filgueira},\n booktitle = {Workshop on Research Objects},\n title = {DARE
      Platform: Enabling Easy Data-Intensive Workflow Composition and Deployment},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "1698908", "name": "Rosa Filgueira"}]},
      {"paperId": "5e507b028674708a5931f7c949437166d9b5a715", "externalIds": {"DBLP":
      "conf/sigsoft/LomioBMH020", "MAG": "3097464003", "DOI": "10.1145/3416505.3423560",
      "CorpusId": 226263397}, "corpusId": 226263397, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/5e507b028674708a5931f7c949437166d9b5a715",
      "title": "RARE: a labeled dataset for cloud-native memory anomalies", "abstract":
      "Anomaly detection has been attracting interest from both the industry and the
      research community for many years, as the number of published papers and services
      adopted grew exponentially over the last decade. One of the reasons behind this
      is the wide adoption of cloud systems from the majority of players in multiple
      industries, such as online shopping, advertisement or remote computing. In this
      work we propose a Dataset foR cloud-nAtive memoRy anomaliEs: RARE. It includes
      labelled anomaly time-series data, comprising of over 900 unique metrics. This
      dataset has been generated using a microservice for injecting artificial byte
      stream in order to overload the nodes, provoking memory anomalies, which in
      some cases resulted in a crash. The system was built using a Kafka server deployed
      on a Kubernetes system. Moreover, in order to get access and download the metrics
      related to the server, we utilised Prometheus. In this paper we present a dataset
      that can be used coupled with machine learning algorithms for detecting anomalies
      in a cloud based system. The dataset will be available in the form of CSV file
      through an online repository. Moreover, we also included an example of application
      using a Random Forest algorithm for classifying the data as anomalous or not.
      The goal of the RARE dataset is to help in the development of more accurate
      and reliable machine learning methods for anomaly detection in cloud based systems.",
      "venue": "MaLTeSQuE@ESEC/SIGSOFT FSE", "year": 2020, "referenceCount": 15, "citationCount":
      5, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Book", "JournalArticle"], "publicationDate": "2020-11-06", "journal": {"name":
      "Proceedings of the 4th ACM SIGSOFT International Workshop on Machine-Learning
      Techniques for Software-Quality Evaluation"}, "citationStyles": {"bibtex": "@Book{Lomio2020RAREAL,\n
      author = {Francesco Lomio and Diego Mart\u00ednez Baselga and Sergio Moreschini
      and H. Huttunen and D. Taibi},\n booktitle = {MaLTeSQuE@ESEC/SIGSOFT FSE},\n
      journal = {Proceedings of the 4th ACM SIGSOFT International Workshop on Machine-Learning
      Techniques for Software-Quality Evaluation},\n title = {RARE: a labeled dataset
      for cloud-native memory anomalies},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "51213491", "name": "Francesco Lomio"}, {"authorId": "2008176445", "name": "Diego
      Mart\u00ednez Baselga"}, {"authorId": "2008202884", "name": "Sergio Moreschini"},
      {"authorId": "1847889", "name": "H. Huttunen"}, {"authorId": "1766982", "name":
      "D. Taibi"}]}, {"paperId": "5e620a3f2211053a39a0a48a717dc65133d3a0ac", "externalIds":
      {"MAG": "2984934191", "DBLP": "conf/teletraffic/GroBmannK17", "DOI": "10.23919/ITC.2017.8064348",
      "CorpusId": 12694848}, "corpusId": 12694848, "publicationVenue": {"id": "3a9e0ec4-25fc-4a07-8b5c-b1500b7babaa",
      "name": "International Test Conference", "type": "conference", "alternate_names":
      ["ITC", "Conf Information-theoretic Cryptogr", "Conference on Information-Theoretic
      Cryptography", "Int Teletraffic Congr", "International Teletraffic Congress",
      "Int Test Conf"], "url": "http://www.itctestweek.org/", "alternate_urls": ["http://www.wikicfp.com/cfp/program?id=1778",
      "https://itcrypto.github.io/"]}, "url": "https://www.semanticscholar.org/paper/5e620a3f2211053a39a0a48a717dc65133d3a0ac",
      "title": "Monitoring Container Services at the Network Edge", "abstract": "Recent
      developments induced by the Internet of Things (IoT) force a paradigm shift
      to deploy on demand services to a broad range of different computing architectures.
      Mainly single board computers (SBCs) gained a lot of attraction in recent years,
      shifting highly available processing power to service consumers and IoT devices.
      Simultaneously, container virtualization achieved a breakthrough by the well
      known Docker environment that became a key competitor to the utilization of
      virtual machines. Nevertheless, spreading containers at small scale needs a
      proper allocation of resources available on SBCs.,, As a first step, we developed
      a multi-architecture framework \"PyMon\" to monitor different computing architectures
      with a small footprint. PyMon itself is based on the recent version of \"monit\"
      and a \"Django\" application to collect monitoring data. It is delivered by
      several Docker images and allows monitoring with a reasonable processing overhead.
      Our demonstration shows the statistics of either processes or containers running
      on a cluster of SBCs, where each member is monitored. Furthermore, we evaluated
      the resource usage of the two key competitors for container cluster management
      on SBCs, Kubernetes and Docker Swarm, with PyMon.", "venue": "International
      Test Conference", "year": 2017, "referenceCount": 2, "citationCount": 41, "influentialCitationCount":
      4, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2017-09-01", "journal": {"name": "2017 29th International Teletraffic Congress
      (ITC 29)", "pages": "130-133", "volume": "1"}, "citationStyles": {"bibtex":
      "@Article{Gro\u00dfmann2017MonitoringCS,\n author = {Marcel Gro\u00dfmann and
      C. Klug},\n booktitle = {International Test Conference},\n journal = {2017 29th
      International Teletraffic Congress (ITC 29)},\n pages = {130-133},\n title =
      {Monitoring Container Services at the Network Edge},\n volume = {1},\n year
      = {2017}\n}\n"}, "authors": [{"authorId": "145106717", "name": "Marcel Gro\u00dfmann"},
      {"authorId": "2081113810", "name": "C. Klug"}]}, {"paperId": "5e8fe482360c9ff71c320d2ef1c0fa832153c9a6",
      "externalIds": {"MAG": "3011027734", "DOI": "10.1109/ICSESS47205.2019.9040740",
      "CorpusId": 214596832}, "corpusId": 214596832, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/5e8fe482360c9ff71c320d2ef1c0fa832153c9a6",
      "title": "An Microservices-Based Openstack Monitoring Tool", "abstract": "Monitoring
      of openstack clouds is an imperative necessity for cloud providers and administrators
      to analyze and discover what is happening in the cloud. In this paper, a microservices-based
      openstack monitoring system, namely openstack-reporter, is proposed, aiming
      at monitoring openstack clouds and providing a convenient tool for the administrators.
      Openstack-reporter adopting microservices architecture consists of three constituent
      components where each component is responsible for a single aspect. The connection
      among these components is implemented with the help of kubernetes DNS-based
      service discovery and Role-based access control (RBAC) mechanisms. The management
      of these three components is performed by kubernetes which is devoted to automate
      rollouts, rollbacks. We have released the openstack-reporter, docker images
      and kubernetes configurations which can be accessed publicly. One can easily
      build the openstack monitoring system just by deploying the openstack-reporter
      in our kubernetes cluster. To validate the performance of the proposed monitoring
      system, an openstack platform and openstack-reporter have been built in our
      datacenter and the management center respectively, and the results are displayed.",
      "venue": "2019 IEEE 10th International Conference on Software Engineering and
      Service Science (ICSESS)", "year": 2019, "referenceCount": 12, "citationCount":
      6, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2019-10-01", "journal": {"name": "2019 IEEE
      10th International Conference on Software Engineering and Service Science (ICSESS)",
      "pages": "706-709"}, "citationStyles": {"bibtex": "@Conference{Yang2019AnMO,\n
      author = {M. Yang and Ming Huang},\n booktitle = {2019 IEEE 10th International
      Conference on Software Engineering and Service Science (ICSESS)},\n journal
      = {2019 IEEE 10th International Conference on Software Engineering and Service
      Science (ICSESS)},\n pages = {706-709},\n title = {An Microservices-Based Openstack
      Monitoring Tool},\n year = {2019}\n}\n"}, "authors": [{"authorId": "152790160",
      "name": "M. Yang"}, {"authorId": "2196586351", "name": "Ming Huang"}]}, {"paperId":
      "5e95cb4cba30f63f139baaa58339e050ce00d4ac", "externalIds": {"DOI": "10.3390/electronics12010240",
      "CorpusId": 255692829}, "corpusId": 255692829, "publicationVenue": {"id": "ccd8e532-73c6-414f-bc91-271bbb2933e2",
      "name": "Electronics", "type": "journal", "issn": "1450-5843", "alternate_issns":
      ["2079-9292", "0883-4989"], "url": "http://www.electronics.etfbl.net/", "alternate_urls":
      ["http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-247562", "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-247562",
      "https://www.mdpi.com/journal/electronics"]}, "url": "https://www.semanticscholar.org/paper/5e95cb4cba30f63f139baaa58339e050ce00d4ac",
      "title": "HetSev: Exploiting Heterogeneity-Aware Autoscaling and Resource-Efficient
      Scheduling for Cost-Effective Machine-Learning Model Serving", "abstract": "To
      accelerate the inference of machine-learning (ML) model serving, clusters of
      machines require the use of expensive hardware accelerators (e.g., GPUs) to
      reduce execution time. Advanced inference serving systems are needed to satisfy
      latency service-level objectives (SLOs) in a cost-effective manner. Novel autoscaling
      mechanisms that greedily minimize the number of service instances while ensuring
      SLO compliance are helpful. However, we find that it is not adequate to guarantee
      cost effectiveness across heterogeneous GPU hardware, and this does not maximize
      resource utilization. In this paper, we propose HetSev to address these challenges
      by incorporating heterogeneity-aware autoscaling and resource-efficient scheduling
      to achieve cost effectiveness. We develop an autoscaling mechanism which accounts
      for SLO compliance and GPU heterogeneity, thus provisioning the appropriate
      type and number of instances to guarantee cost effectiveness. We leverage multi-tenant
      inference to improve GPU resource utilization, while alleviating inter-tenant
      interference by avoiding the co-location of identical ML instances on the same
      GPU during placement decisions. HetSev is integrated into Kubernetes and deployed
      onto a heterogeneous GPU cluster. We evaluated the performance of HetSev using
      several representative ML models. Compared with default Kubernetes, HetSev reduces
      resource cost by up to 2.15\u00d7 while meeting SLO requirements.", "venue":
      "Electronics", "year": 2023, "referenceCount": 18, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.mdpi.com/2079-9292/12/1/240/pdf?version=1672735461",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2023-01-03", "journal": {"name": "Electronics"}, "citationStyles": {"bibtex":
      "@Article{Mo2023HetSevEH,\n author = {Hao Mo and Ligu Zhu and Lei Shi and Songfu
      Tan and Suping Wang},\n booktitle = {Electronics},\n journal = {Electronics},\n
      title = {HetSev: Exploiting Heterogeneity-Aware Autoscaling and Resource-Efficient
      Scheduling for Cost-Effective Machine-Learning Model Serving},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2110313317", "name": "Hao Mo"}, {"authorId": "2838530",
      "name": "Ligu Zhu"}, {"authorId": "2117205408", "name": "Lei Shi"}, {"authorId":
      "84116695", "name": "Songfu Tan"}, {"authorId": "2116429811", "name": "Suping
      Wang"}]}, {"paperId": "5e9c8af354b67be7b939091dc378589bc17e9678", "externalIds":
      {"DOI": "10.15562/bmj.v11i3.3540", "CorpusId": 254813435}, "corpusId": 254813435,
      "publicationVenue": {"id": "3395b5c3-99ac-4927-9458-6a169908a52d", "name": "Bali
      Medical Journal", "type": "journal", "alternate_names": ["Bali Medika Jurnal",
      "Bali Med J"], "issn": "2089-1180", "alternate_issns": ["2614-6517"], "url":
      "http://www.balimedicaljournal.org/", "alternate_urls": ["https://balimedikajurnal.com/"]},
      "url": "https://www.semanticscholar.org/paper/5e9c8af354b67be7b939091dc378589bc17e9678",
      "title": "Blockchain integration for hospital information system management",
      "abstract": "Introduction: A lot of hospital management systems, especially
      open-source ones, still lack interoperability which is holding back the effectiveness
      of administration. This happens due to different regulations from hospital organizations.
      Therefore, there must be a system that facilitates interoperability. Blockchain
      is a decentralized ledger system, to insert the data from the blockchain all
      parties must agree that the data is valid thus the data can be inserted so,
      all the data are immutable thus every change can be audited.\nMethods: We integrate
      the Hyperledger fabric network, an open-source modular blockchain platform,
      into an open-source hospital management system, openEMR. We take the changed
      data using debezium connect and Kafka and inserted it into the blockchain.\nResults:
      Based on our test, we managed to get average read latency at 27ms, average read
      throughput at 36 Read per Second, average transaction latency at 45ms, average
      transaction throughput at 22 Transaction per Second, and average integrated
      system data transfer at 111.36ms.\nConclusions: All services deployed successfully
      at the Kubernetes without any error. All services work as they should be. One
      service can integrate through the internal network of the Kubernetes and from
      the outside cluster using ingress. OpenEMR can be used normally as indicated
      in the official documentation and the data change is stored in the blockchain.",
      "venue": "Bali Medical Journal", "year": 2022, "referenceCount": 0, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://balimedicaljournal.org/index.php/bmj/article/download/3540/2231", "status":
      "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Medicine",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2022-09-14", "journal": {"name":
      "Bali Medical Journal"}, "citationStyles": {"bibtex": "@Article{Satrio2022BlockchainIF,\n
      author = {Naufal Adi Satrio and Sritrusta Sukaridhoto and M. Udin Harun Al Rasyid
      and Rizqi Putri Nourma Budiarti and Ilham Achmad Al-Hafidz and Evianita Dewi
      Fajrianti},\n booktitle = {Bali Medical Journal},\n journal = {Bali Medical
      Journal},\n title = {Blockchain integration for hospital information system
      management},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2197391340",
      "name": "Naufal Adi Satrio"}, {"authorId": "2197389310", "name": "Sritrusta
      Sukaridhoto"}, {"authorId": "2124297874", "name": "M. Udin Harun Al Rasyid"},
      {"authorId": "2197391376", "name": "Rizqi Putri Nourma Budiarti"}, {"authorId":
      "2197424463", "name": "Ilham Achmad Al-Hafidz"}, {"authorId": "2197380566",
      "name": "Evianita Dewi Fajrianti"}]}, {"paperId": "5edd96e34703b9a2654976f47f7249e3a0a10d5c",
      "externalIds": {"DBLP": "conf/sosp/GuSZJWVLX23", "DOI": "10.1145/3600006.3613161",
      "CorpusId": 263609749}, "corpusId": 263609749, "publicationVenue": {"id": "6c6fcaa9-fd25-488b-8050-995227ac671c",
      "name": "Symposium on Operating Systems Principles", "type": "conference", "alternate_names":
      ["Symp Oper Syst Princ", "SOSP"], "url": "http://sosp.org/"}, "url": "https://www.semanticscholar.org/paper/5edd96e34703b9a2654976f47f7249e3a0a10d5c",
      "title": "Acto: Automatic End-to-End Testing for Operation Correctness of Cloud
      System Management", "abstract": "Cloud systems are increasingly being managed
      by operation programs termed operators, which automate tedious, human-based
      operations. Operators of modern management platforms like Kubernetes, Twine,
      and ECS implement declarative interfaces based on the state-reconciliation principle.
      An operation declares a desired system state and the operator automatically
      reconciles the system to that declared state. Operator correctness is critical,
      given the impacts on system operations---bugs in operator code put systems in
      un-desired or error states, with severe consequences. However, validating operator
      correctness is challenging due to the enormous system-state space and complex
      operation interface. A correct operator must not only satisfy correctness properties
      of its own code, but it must also maintain managed systems in desired states.
      Unfortunately, end-to-end testing of operators significantly falls short. We
      present Acto, the first automatic end-to-end testing technique for cloud system
      operators. Acto uses a state-centric approach to test an operator together with
      a managed system. Acto continuously instructs an operator to reconcile a system
      to different states and checks if the system successfully reaches those desired
      states. Acto models operations as state transitions and systematically realizes
      state-transition sequences to exercise supported operations in different scenarios.
      Acto''s oracles automatically check whether a system''s state is as desired.
      To date, Acto has helped find 56 serious new bugs (42 were confirmed and 30
      have been fixed) in eleven Kubernetes operators with few false alarms.", "venue":
      "Symposium on Operating Systems Principles", "year": 2023, "referenceCount":
      94, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle",
      "Conference"], "publicationDate": "2023-10-23", "journal": {"name": "Proceedings
      of the 29th Symposium on Operating Systems Principles"}, "citationStyles": {"bibtex":
      "@Book{Gu2023ActoAE,\n author = {Jiawei Tyler Gu and Xudong Sun and Wentao Zhang
      and Yuxuan Jiang and Chen Wang and Mandana Vaziri and Owolabi Legunsen and Tianyi
      Xu},\n booktitle = {Symposium on Operating Systems Principles},\n journal =
      {Proceedings of the 29th Symposium on Operating Systems Principles},\n title
      = {Acto: Automatic End-to-End Testing for Operation Correctness of Cloud System
      Management},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2256468895",
      "name": "Jiawei Tyler Gu"}, {"authorId": "2254001323", "name": "Xudong Sun"},
      {"authorId": "2253832096", "name": "Wentao Zhang"}, {"authorId": "2254844779",
      "name": "Yuxuan Jiang"}, {"authorId": "2254037041", "name": "Chen Wang"}, {"authorId":
      "2253598854", "name": "Mandana Vaziri"}, {"authorId": "3023790", "name": "Owolabi
      Legunsen"}, {"authorId": "2152009085", "name": "Tianyi Xu"}]}, {"paperId": "5eea66aae2d95bc0440f82be8e7ddab106ebb9e5",
      "externalIds": {"DBLP": "conf/ancs/OsinskiC21", "DOI": "10.1145/3493425.3502764",
      "CorpusId": 246002205}, "corpusId": 246002205, "publicationVenue": {"id": "d004c406-1bed-49fd-a0b1-e46b928f0754",
      "name": "Symposium on Architectures for Networking and Communications Systems",
      "type": "conference", "alternate_names": ["Symp Archit Netw Commun Syst", "Architectures
      for Networking and Communications Systems", "ANCS", "Archit Netw Commun Syst"],
      "url": "http://www.wikicfp.com/cfp/program?id=171"}, "url": "https://www.semanticscholar.org/paper/5eea66aae2d95bc0440f82be8e7ddab106ebb9e5",
      "title": "Achieving End-to-End Network Visibility with Host-INT", "abstract":
      "So far, the In-Band Network Telemetry (INT) standard has been implemented mainly
      on P4 programmable switches. Observing packets as they travel through switches
      is knowing only half of the story. In this poster, we present the work in progress
      on Host-INT, an open-source solution based on eBPF and integrated with Kubernetes
      that extends INT support to the Linux network stack. When coupled with a P4-based
      Switch-INT implementation, Host-INT enables end-to-end network visibility.",
      "venue": "Symposium on Architectures for Networking and Communications Systems",
      "year": 2021, "referenceCount": 8, "citationCount": 5, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book"],
      "publicationDate": "2021-12-13", "journal": {"name": "Proceedings of the Symposium
      on Architectures for Networking and Communications Systems"}, "citationStyles":
      {"bibtex": "@Article{Osi\u0144ski2021AchievingEN,\n author = {Tomasz Osi\u0144ski
      and C. Cascone},\n booktitle = {Symposium on Architectures for Networking and
      Communications Systems},\n journal = {Proceedings of the Symposium on Architectures
      for Networking and Communications Systems},\n title = {Achieving End-to-End
      Network Visibility with Host-INT},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "1423789481", "name": "Tomasz Osi\u0144ski"}, {"authorId": "1423731213", "name":
      "C. Cascone"}]}, {"paperId": "5f0198a9b1e8ca5435ee00997c27b577522d8fed", "externalIds":
      {"CorpusId": 235468493}, "corpusId": 235468493, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/5f0198a9b1e8ca5435ee00997c27b577522d8fed",
      "title": "Scalability Benchmarking of Kafka Streams Deployment Options", "abstract":
      "Kubernetes, Kafka, and Kafka Streams are commonly used together in software
      systems. The Theodolite method allows to benchmark the scalability of such systems.
      Kafka Streams provides many configuration options. Thus, it is difficult to
      set the configuration options in the best possible way. Previous research with
      Theodolite, however, considers only few configuration options for the scalability.
      Therefore, we explore further configuration options for Kafka and Kafka Streams
      in this paper. On one hand we apply the topology optimization option, on the
      other hand we focus on high availability and resiliency options. We define different
      parameters for these configuration options and execute the Theodolite benchmark
      with them. Ultimately, we present and discuss the results of the benchmark executions
      and identify the influence of the parameters regarding the scalability of Kafka
      Streams applications.", "venue": "", "year": 2021, "referenceCount": 12, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Vonheiden2021ScalabilityBO,\n
      author = {Bj\u00f6rn Vonheiden},\n title = {Scalability Benchmarking of Kafka
      Streams Deployment Options},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "2113593755", "name": "Bj\u00f6rn Vonheiden"}]}, {"paperId": "5f0c0a50ea70c17f68d6e5d06daaa95defc8217e",
      "externalIds": {"DBLP": "conf/asplos/LiuXLSH22", "DOI": "10.1145/3503222.3507753",
      "CorpusId": 246861895}, "corpusId": 246861895, "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99",
      "name": "International Conference on Architectural Support for Programming Languages
      and Operating Systems", "type": "conference", "alternate_names": ["ASPLOS",
      "Int Conf Archit Support Program Lang Oper Syst", "Archit Support Program Lang
      Oper Syst", "Architectural Support for Programming Languages and Operating Systems"],
      "url": "http://www.acm.org/sigplan/"}, "url": "https://www.semanticscholar.org/paper/5f0c0a50ea70c17f68d6e5d06daaa95defc8217e",
      "title": "Who goes first? detecting go concurrency bugs via message reordering",
      "abstract": "Go is a young programming language invented to build safe and efficient
      concurrent programs. It provides goroutines as lightweight threads and channels
      for inter-goroutine communication. Programmers are encouraged to explicitly
      pass messages through channels to connect goroutines, with the purpose of reducing
      the chance of making programming mistakes and introducing concurrency bugs.
      Go is one of the most beloved programming languages and has already been used
      to build many critical infrastructure software systems in the data-center environment.
      However, a recent study shows that channel-related concurrency bugs are still
      common in Go programs, severely hurting the reliability of the programs. This
      paper presents GFuzz, a dynamic detector that can effectively pinpoint channel-related
      concurrency bugs by mutating the processing orders of concurrent messages. We
      build GFuzz in three steps. We first adopt an effective approach to identify
      concurrent messages and transform a program to process those messages in any
      given order. We then take a fuzzing approach to generate new processing orders
      by mutating exercised ones and rely on execution feedback to prioritize orders
      close to triggering bugs. Finally, we design a runtime sanitizer to capture
      triggered bugs that are missed by the Go runtime. We evaluate GFuzz on seven
      popular Go software systems, including Docker, Kubernetes, and gRPC. GFuzz finds
      184 previously unknown bugs and reports a negligible number of false positives.
      Programmers have already confirmed 124 reports as real bugs and fixed 67 of
      them based on our reporting. A careful inspection of the detected concurrency
      bugs from gRPC shows the effectiveness of each component of GFuzz and confirms
      the components'' rationality.", "venue": "International Conference on Architectural
      Support for Programming Languages and Operating Systems", "year": 2022, "referenceCount":
      76, "citationCount": 5, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle",
      "Conference"], "publicationDate": "2022-02-28", "journal": {"name": "Proceedings
      of the 27th ACM International Conference on Architectural Support for Programming
      Languages and Operating Systems"}, "citationStyles": {"bibtex": "@Book{Liu2022WhoGF,\n
      author = {Ziheng Liu and Shi-Xiong Xia and Yu Liang and Linhai Song and Hong
      Hu},\n booktitle = {International Conference on Architectural Support for Programming
      Languages and Operating Systems},\n journal = {Proceedings of the 27th ACM International
      Conference on Architectural Support for Programming Languages and Operating
      Systems},\n title = {Who goes first? detecting go concurrency bugs via message
      reordering},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2117942851",
      "name": "Ziheng Liu"}, {"authorId": "153813835", "name": "Shi-Xiong Xia"}, {"authorId":
      "2156350306", "name": "Yu Liang"}, {"authorId": "2473596", "name": "Linhai Song"},
      {"authorId": "145531222", "name": "Hong Hu"}]}, {"paperId": "5f155567db3ae799004ca3bf617af1a8e9b7c81a",
      "externalIds": {"MAG": "3114048800", "DOI": "10.5593/sgem2020/2.1/s07.046",
      "CorpusId": 234681824}, "corpusId": 234681824, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/5f155567db3ae799004ca3bf617af1a8e9b7c81a",
      "title": "THE CONCEPTUAL MODEL OF THE HYBRID GEOGRAPHIC INFORMATION SYSTEM BASED
      ON KUBERNETES CONTAINERS AND CLOUD COMPUTING", "abstract": null, "venue": "",
      "year": 2020, "referenceCount": 0, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Geography",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2020-09-20",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Gazul2020THECM,\n
      author = {S. Gazul and V. Kiyaev and I. Anantchenko and O. Shepeleva and O.
      Lobanov},\n title = {THE CONCEPTUAL MODEL OF THE HYBRID GEOGRAPHIC INFORMATION
      SYSTEM BASED ON KUBERNETES CONTAINERS AND CLOUD COMPUTING},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "19239306", "name": "S. Gazul"}, {"authorId": "19164578",
      "name": "V. Kiyaev"}, {"authorId": "103924620", "name": "I. Anantchenko"}, {"authorId":
      "1397337968", "name": "O. Shepeleva"}, {"authorId": "19226244", "name": "O.
      Lobanov"}]}, {"paperId": "5f375c445c53c6b5aa9ec05684fcf9aae1358f80", "externalIds":
      {"MAG": "2741733616", "DBLP": "conf/hotcloud/NadgowdaSI17", "CorpusId": 19784729},
      "corpusId": 19784729, "publicationVenue": {"id": "42ad1c65-dc2f-448c-bbbf-483b016441b3",
      "name": "USENIX Workshop on Hot Topics in Cloud Computing", "type": "conference",
      "alternate_names": ["USENIX conference on Hot Topics in Cloud Ccomputing", "USENIX
      Workshop Hot Top Cloud Comput", "HotCloud", "USENIX conf Hot Top Cloud Ccomputing"]},
      "url": "https://www.semanticscholar.org/paper/5f375c445c53c6b5aa9ec05684fcf9aae1358f80",
      "title": "Paracloud: Bringing Application Insight into Cloud Operations", "abstract":
      "Applications have commonly been oblivious to their cloud runtimes. This is
      primarily because they started their journey in IaaS clouds, running on a guestOS
      inside VMs. Then to increase performance, many guestOSes have been paravirtualized
      making them virtualization aware, so that they can bypass some of the virtualization
      layers, as in virtio. This approach still kept applications unmodified. Recently,
      we are witnessing a rapid adoption of containers due to their packaging benefits,
      high density, fast start-up and low overhead. Applications are increasingly
      being on-boarded to PaaS clouds in the form of application containers or appc,
      where they are run directly on a cloud substrate like Kubernetes or Docker Swarm.
      This shift in deployment practices present an opportunity to make applications
      aware of their cloud. In this paper, we present Paracloud framework for application
      containers and discuss the Paracloud interface (PaCI) for three cloud operations
      namely migration, auto-scaling and load-balancing.", "venue": "USENIX Workshop
      on Hot Topics in Cloud Computing", "year": 2017, "referenceCount": 31, "citationCount":
      6, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Article{Nadgowda2017ParacloudBA,\n author
      = {S. Nadgowda and Sahil Suneja and C. Isci},\n booktitle = {USENIX Workshop
      on Hot Topics in Cloud Computing},\n title = {Paracloud: Bringing Application
      Insight into Cloud Operations},\n year = {2017}\n}\n"}, "authors": [{"authorId":
      "2718536", "name": "S. Nadgowda"}, {"authorId": "40005837", "name": "Sahil Suneja"},
      {"authorId": "1765914", "name": "C. Isci"}]}, {"paperId": "5f3f4c6ead2d0afd752b928b1d8ee3c81b8c4916",
      "externalIds": {"DBLP": "journals/corr/abs-2310-09137", "ArXiv": "2310.09137",
      "DOI": "10.48550/arXiv.2310.09137", "CorpusId": 264127989}, "corpusId": 264127989,
      "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org",
      "alternate_names": ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"},
      "url": "https://www.semanticscholar.org/paper/5f3f4c6ead2d0afd752b928b1d8ee3c81b8c4916",
      "title": "Scaling Performance of Serverless Edge Networking", "abstract": "When
      clustering devices at the edge, inter-node latency poses a significant challenge
      that directly impacts the application performance. In this paper, we experimentally
      examine the impact that inter-node latency has on application performance by
      measuring the throughput of an distributed serverless application in a real
      world testbed. We deploy Knative over a Kubernetes cluster of nodes and emulate
      networking delay between them to compare the performance of applications when
      deployed over a single-site versus multiple distributed computing sites. The
      results show that multi-site edge networks achieve half the throughput compared
      to a deployment hosted at a single site under low processing times conditions,
      whereas the throughput performance significantly improves otherwise.", "venue":
      "arXiv.org", "year": 2023, "referenceCount": 11, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2310.09137",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-13", "journal":
      {"name": "ArXiv", "volume": "abs/2310.09137"}, "citationStyles": {"bibtex":
      "@Article{Michalke2023ScalingPO,\n author = {Marc Michalke and Francisco Carpio
      and A. Jukan},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {Scaling
      Performance of Serverless Edge Networking},\n volume = {abs/2310.09137},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2091438050", "name": "Marc Michalke"},
      {"authorId": "46552388", "name": "Francisco Carpio"}, {"authorId": "1708705",
      "name": "A. Jukan"}]}, {"paperId": "5f5b3b18f2b5a589ef3a9b0b03a1f73d52274e40",
      "externalIds": {"DOI": "10.1038/s41592-021-01059-w", "CorpusId": 231594699,
      "PubMed": "33437045"}, "corpusId": 231594699, "publicationVenue": {"id": "099483df-e8f2-4bee-805d-8a69f07b6cbf",
      "name": "Nature Methods", "type": "journal", "alternate_names": ["Nat Method"],
      "issn": "1548-7091", "url": "http://www.nature.com/", "alternate_urls": ["http://www.nature.com/nmeth/index.html",
      "https://www.nature.com/nmeth/", "http://www.nature.com/nmeth/authors/index.html#aims"]},
      "url": "https://www.semanticscholar.org/paper/5f5b3b18f2b5a589ef3a9b0b03a1f73d52274e40",
      "title": "Publisher Correction: DeepCell Kiosk: scaling deep learning-enabled
      cellular image analysis with Kubernetes.", "abstract": null, "venue": "Nature
      Methods", "year": 2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.nature.com/articles/s41592-021-01059-w.pdf",
      "status": "BRONZE"}, "fieldsOfStudy": ["Medicine"], "s2FieldsOfStudy": [{"category":
      "Medicine", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Biology", "source": "s2-fos-model"}, {"category":
      "Materials Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2021-01-13", "journal": {"name": "Nature methods"}, "citationStyles": {"bibtex":
      "@Article{Bannon2021PublisherCD,\n author = {Dylan Bannon and Erick Moen and
      Morgan Schwartz and Enrico Borba and Takamasa Kudo and N. Greenwald and Vibha
      Vijayakumar and B. Chang and Edward Pao and Erik Osterman and William Graf and
      David Van Valen},\n booktitle = {Nature Methods},\n journal = {Nature methods},\n
      title = {Publisher Correction: DeepCell Kiosk: scaling deep learning-enabled
      cellular image analysis with Kubernetes.},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "91548448", "name": "Dylan Bannon"}, {"authorId": "2065614284",
      "name": "Erick Moen"}, {"authorId": "82899374", "name": "Morgan Schwartz"},
      {"authorId": "1389463040", "name": "Enrico Borba"}, {"authorId": "5864924",
      "name": "Takamasa Kudo"}, {"authorId": "3664488", "name": "N. Greenwald"}, {"authorId":
      "144099385", "name": "Vibha Vijayakumar"}, {"authorId": "2054393394", "name":
      "B. Chang"}, {"authorId": "40587736", "name": "Edward Pao"}, {"authorId": "1987718591",
      "name": "Erik Osterman"}, {"authorId": "2054090660", "name": "William Graf"},
      {"authorId": "6838746", "name": "David Van Valen"}]}, {"paperId": "5f61f1e54fb8fe15f72beea113a47c3f6f9ba6e5",
      "externalIds": {"DOI": "10.2139/ssrn.4536996", "CorpusId": 260908213}, "corpusId":
      260908213, "publicationVenue": {"id": "75d7a8c1-d871-42db-a8e4-7cf5146fdb62",
      "name": "Social Science Research Network", "type": "journal", "alternate_names":
      ["SSRN, Social Science Research Network (SSRN) home page", "SSRN Electronic
      Journal", "Soc Sci Res Netw", "SSRN", "SSRN Home Page", "SSRN Electron J", "Social
      Science Electronic Publishing presents Social Science Research Network"], "issn":
      "1556-5068", "url": "http://www.ssrn.com/", "alternate_urls": ["www.ssrn.com/",
      "https://fatcat.wiki/container/tol7woxlqjeg5bmzadeg6qrg3e", "https://www.wikidata.org/wiki/Q53949192",
      "www.ssrn.com/en", "http://www.ssrn.com/en/", "http://umlib.nl/ssrn", "umlib.nl/ssrn"]},
      "url": "https://www.semanticscholar.org/paper/5f61f1e54fb8fe15f72beea113a47c3f6f9ba6e5",
      "title": "Kubernetes Network Policies and Security Implication Basic Concepts
      and Configuration Guidance", "abstract": null, "venue": "Social Science Research
      Network", "year": 2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Political
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "SSRN Electronic Journal"}, "citationStyles": {"bibtex": "@Article{Qadir2023KubernetesNP,\n
      author = {Syed Muhammed Nouman Qadir},\n booktitle = {Social Science Research
      Network},\n journal = {SSRN Electronic Journal},\n title = {Kubernetes Network
      Policies and Security Implication Basic Concepts and Configuration Guidance},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2229250672", "name": "Syed Muhammed
      Nouman Qadir"}]}, {"paperId": "5f6bb09e4d79e4b1d1b5588114f7365272c0e55b", "externalIds":
      {"DBLP": "conf/middleware/GunasekaranTNKD20", "MAG": "3112236759", "DOI": "10.1145/3423211.3425683",
      "CorpusId": 224821159}, "corpusId": 224821159, "publicationVenue": {"id": "911e7332-8ea8-4e9d-bc20-5572a2523f92",
      "name": "International Middleware Conference", "type": "conference", "alternate_names":
      ["Middleware", "ACM/IFIP/USENIX int conf Middlew", "ACM/IFIP/USENIX international
      conference on Middleware", "Int Middlew Conf"], "url": "https://dl.acm.org/conference/middleware/proceedings"},
      "url": "https://www.semanticscholar.org/paper/5f6bb09e4d79e4b1d1b5588114f7365272c0e55b",
      "title": "Fifer: Tackling Resource Underutilization in the Serverless Era",
      "abstract": "Datacenters are witnessing a rapid surge in the adoption of serverless
      functions for microservices-based applications. A vast majority of these microservices
      typically span less than a second, have strict SLO requirements, and are chained
      together as per the requirements of an application. The aforementioned characteristics
      introduce a new set of challenges, especially in terms of container provisioning
      and management, as the state-of-the-art resource management frameworks, employed
      in serverless platforms, tend to look at microservice-based applications similar
      to conventional monolithic applications. Hence, these frameworks suffer from
      microservice agnostic scheduling and colossal container over-provisioning, especially
      during workload fluctuations, thereby resulting in poor resource utilization.
      In this work, we quantify the above shortcomings using a variety of workloads
      on a multi-node cluster managed by the Kubernetes and Brigade serverless framework.
      To address them, we propose Fifer --- an adaptive resource management framework
      to efficiently manage function-chains on serverless platforms. The key idea
      is to make Fifer (i) utilization conscious by efficiently bin packing jobs to
      fewer containers using function-aware container scaling and intelligent request
      batching, and (ii) at the same time, SLO-compliant by proactively spawning containers
      to avoid cold-starts, thus minimizing the overall response latency. Combining
      these benefits, Fifer improves container utilization and cluster-wide energy
      consumption by 4\u00d7 and 31%, respectively, without compromising on SLO''s,
      when compared to the state-of-the-art schedulers employed by serverless platforms.",
      "venue": "International Middleware Conference", "year": 2020, "referenceCount":
      96, "citationCount": 49, "influentialCitationCount": 3, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2020-12-07",
      "journal": {"name": "Proceedings of the 21st International Middleware Conference"},
      "citationStyles": {"bibtex": "@Book{Gunasekaran2020FiferTR,\n author = {J. Gunasekaran
      and P. Thinakaran and N. Nachiappan and M. Kandemir and C. Das},\n booktitle
      = {International Middleware Conference},\n journal = {Proceedings of the 21st
      International Middleware Conference},\n title = {Fifer: Tackling Resource Underutilization
      in the Serverless Era},\n year = {2020}\n}\n"}, "authors": [{"authorId": "47882166",
      "name": "J. Gunasekaran"}, {"authorId": "2950806", "name": "P. Thinakaran"},
      {"authorId": "2456813", "name": "N. Nachiappan"}, {"authorId": "145879376",
      "name": "M. Kandemir"}, {"authorId": "8948708", "name": "C. Das"}]}, {"paperId":
      "5f7813806cae8f9030310e5f72a36fad3ea369ed", "externalIds": {"DBLP": "journals/ton/BaoPW23",
      "DOI": "10.1109/TNET.2022.3202529", "CorpusId": 252175339}, "corpusId": 252175339,
      "publicationVenue": {"id": "b1aea3ab-edf0-430b-a9c2-cce5469f6b23", "name": "IEEE/ACM
      Transactions on Networking", "type": "journal", "alternate_names": ["IEEE ACM
      Trans Netw", "IEEE ACM Transactions on Networking", "IEEE/ACM Trans Netw"],
      "issn": "1063-6692", "url": "http://portal.acm.org/ton/", "alternate_urls":
      ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=90", "https://ieeexplore.ieee.org/servlet/opac?punumber=90"]},
      "url": "https://www.semanticscholar.org/paper/5f7813806cae8f9030310e5f72a36fad3ea369ed",
      "title": "Deep Learning-Based Job Placement in Distributed Machine Learning
      Clusters With Heterogeneous Workloads", "abstract": "Nowadays, most leading
      IT companies host a variety of distributed machine learning (ML) workloads in
      ML clusters to support AI-driven services, such as speech recognition, machine
      translation, and image processing. While multiple jobs are executed concurrently
      in a shared cluster to improve resource utilization, interference among co-located
      ML jobs can lead to significant performance downgrade. Existing cluster schedulers,
      such as YARN and Mesos, are interference-agnostic in their job placement, leading
      to suboptimal resource efficiency and usage. Some literature has studied interference-aware
      job placement policy, but relies on detailed workload profiling and interference
      modeling, which is not a general solution. In this work, we present Harmony,
      a deep learning-driven ML cluster scheduler that places heterogeneous training
      jobs (either with parameter server architecture or all-reduce architecture)
      in a manner that minimizes interference and maximizes performance (i.e., training
      completion time minimization). The design of Harmony is based on a carefully
      designed deep reinforcement learning (DRL) framework enhanced with reward modeling.
      The DRL integrates a dynamic sequence-to-sequence model with the state-of-the-art
      techniques to stabilize training and improve convergence, including actor-critic
      algorithm, job-aware action space exploration, multi-head attention, and experience
      replay. In view of a common lack of reward samples corresponding to different
      placement decisions, we build an auxiliary sequence-to-sequence reward prediction
      model, which is trained with historical samples and used for producing reward
      for unseen placement. Experiments using real ML workloads in a Kubernetes cluster
      of 6 GPU servers show that Harmony outperforms representative schedulers by
      16%\u201342% in terms of average job completion time.", "venue": "IEEE/ACM Transactions
      on Networking", "year": 2023, "referenceCount": 60, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-04-01", "journal": {"name": "IEEE/ACM
      Transactions on Networking", "pages": "634-647", "volume": "31"}, "citationStyles":
      {"bibtex": "@Article{Bao2023DeepLJ,\n author = {Yixin Bao and Yanghua Peng and
      Chuan Wu},\n booktitle = {IEEE/ACM Transactions on Networking},\n journal =
      {IEEE/ACM Transactions on Networking},\n pages = {634-647},\n title = {Deep
      Learning-Based Job Placement in Distributed Machine Learning Clusters With Heterogeneous
      Workloads},\n volume = {31},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "3393850", "name": "Yixin Bao"}, {"authorId": "9561490", "name": "Yanghua Peng"},
      {"authorId": "2157348432", "name": "Chuan Wu"}]}, {"paperId": "5f87d0db4bdb951d34645059fade3d905b9c9b00",
      "externalIds": {"MAG": "2965886810", "DOI": "10.4324/9781315130569-4", "CorpusId":
      43524239}, "corpusId": 43524239, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5f87d0db4bdb951d34645059fade3d905b9c9b00",
      "title": "Cybernetics in History", "abstract": "S ince the end of World War
      II, I have been working on the many ramifications of the theory of messages.
      Besides the electrical engineering theory of the transmission of messages, there
      is a larger field which includes not only the study of language but the study
      of messages as a means of controlling machinery and society, the development
      of computing machines and other such automata, certain reflections upon psychology
      and the nervous system, and a tentative new theory of scientific method. This
      larger theory of messages is a probabilistic theory, an intrinsic part of the
      movement that owes its origin to Willard Gibbs and which I have described in
      the introduction. Until recently, there was no existing word for this complex
      of ideas, and in order to embrace the whole field by a single term, I felt constrained
      to invent one. Hence \"Cybernetics,\" which I derived from the Greek word kubernetes,
      or \"steersman,\" the same Greek word from which we eventually derive our word
      \"governor.\" Incidentally, I found later that the word had already been used
      by Ampere with reference to political science, and had been introduced in another
      context by a Polish scientist, both uses dating from the earlier part of the
      nineteenth century. I wrote a more or less technical book entitled Cybernetics
      which was published in 1948. In response to a certain demand for me to make
      its ideas acceptable to the lay public, I published the first edition of The
      Human Use of Human Beings in 1950. Since then the subject has grown from a few
      ideas shared by Drs. Claude Shannon, Warren Weaver, and myself, into an established
      region of research. Therefore, I take this opportunity occasioned by the reprinting
      of my book to bring it up to date, and to remove certain defects and inconsequentialities
      in its original structure. In giving the definition of Cybernetics in the original
      book, I classed communication and control together. Why did I do this? When
      I", "venue": "", "year": 2017, "referenceCount": 0, "citationCount": 6, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Philosophy"],
      "s2FieldsOfStudy": [{"category": "Philosophy", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "History", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2017-07-12",
      "journal": {"name": "", "pages": "31-36", "volume": ""}, "citationStyles": {"bibtex":
      "@Inproceedings{Buckley2017CyberneticsIH,\n author = {W. Buckley and N. Wiener},\n
      pages = {31-36},\n title = {Cybernetics in History},\n year = {2017}\n}\n"},
      "authors": [{"authorId": "152293096", "name": "W. Buckley"}, {"authorId": "145707626",
      "name": "N. Wiener"}]}, {"paperId": "5fc4c22c94026f49c9e06129c905ced44f2c0f32",
      "externalIds": {"DBLP": "conf/apnoms/XiaoH22", "DOI": "10.23919/APNOMS56106.2022.9919994",
      "CorpusId": 253186220}, "corpusId": 253186220, "publicationVenue": {"id": "fec9c8ab-68cf-40e4-8236-4baaf5c6ffa5",
      "name": "Asia-Pacific Network Operations and Management Symposium", "type":
      "conference", "alternate_names": ["Asia-pacific Netw Oper Manag Symp", "APNOMS"],
      "url": "http://www.apnoms.org/"}, "url": "https://www.semanticscholar.org/paper/5fc4c22c94026f49c9e06129c905ced44f2c0f32",
      "title": "DScaler: A Horizontal Autoscaler of Microservice Based on Deep Reinforcement
      Learning", "abstract": "With the development of container technology, microservice
      architecture has become a powerful paradigm for cloud computing with efficient
      infrastructure management and large-scale service capabilities. Cloud providers
      require flexible resource management to meet dynamic workloads, such as autoscaling
      and provisioning. As one of the most popular open-source container orchestration
      systems, Kubernetes provides a built-in mechanism, Horizontal Pod Autoscaler
      (HPA), for dynamic resource autoscaling. However, the static rules of HPA are
      not adaptable to highly dynamic workloads. In this paper, we propose a deep
      reinforcement learning-based horizontal autoscaler(DScaler) for autoscaling
      of microservices deployed in Kubernetes. Under two workloads with different
      characteristics, our experiments show that the proposed approach reduces resource
      consumption by 19.90% and 10.80% while reducing SLA violations by 8.56% and
      12.75% compared with HPA, respectively. In addition, our approach can significantly
      reduce resource consumption by about 60% compared to the existing reinforcement
      learning strategy while maintaining SLA within an acceptable level.", "venue":
      "Asia-Pacific Network Operations and Management Symposium", "year": 2022, "referenceCount":
      17, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-09-28", "journal":
      {"name": "2022 23rd Asia-Pacific Network Operations and Management Symposium
      (APNOMS)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Xiao2022DScalerAH,\n
      author = {Zhijiao Xiao and Song Hu},\n booktitle = {Asia-Pacific Network Operations
      and Management Symposium},\n journal = {2022 23rd Asia-Pacific Network Operations
      and Management Symposium (APNOMS)},\n pages = {1-6},\n title = {DScaler: A Horizontal
      Autoscaler of Microservice Based on Deep Reinforcement Learning},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "3279177", "name": "Zhijiao Xiao"}, {"authorId": "2172206389",
      "name": "Song Hu"}]}, {"paperId": "5fc7da9d626d4512acab6bc511a7f20f024b87e2",
      "externalIds": {"DBLP": "journals/ledger/TzenetopoulosMK22", "DOI": "10.5195/ledger.2022.230",
      "CorpusId": 250340975}, "corpusId": 250340975, "publicationVenue": {"id": "6dc5e327-35e7-485d-af5c-6a89140e72e9",
      "name": "Ledger", "issn": "2379-5980", "url": "http://ledgerjournal.org/", "alternate_urls":
      ["http://ledgerjournal.org/ojs/index.php/ledger"]}, "url": "https://www.semanticscholar.org/paper/5fc7da9d626d4512acab6bc511a7f20f024b87e2",
      "title": "HLF-Kubed: Blockchain-Based Resource Monitoring for Edge Clusters",
      "abstract": ". In the past several years, there has been an increased usage
      of smart, always-connected devices at the edge of the network, which provide
      real-time contextual information with low overhead to optimize processes and
      improve how companies and individuals interact, work, and live. The ef\ufb01cient
      management of this huge pool of devices requires runtime monitoring to identify
      potential performance bottlenecks and physical defects. Typical solutions, where
      monitoring data are aggregated in a centralized manner, soon become inef\ufb01cient,
      as they are unable to handle the increased load and become single points of
      failure. In addition, the resource-constrained nature of edge devices calls
      for low-overhead monitoring systems. In this paper, we propose HLF-Kubed , a
      blockchain-based, highly available framework for monitoring edge devices, leveraging
      distributed ledger technology. HLF-Kubed builds upon Kubernetes container orchestrator
      and HyperLedger Fabric frameworks and implements a smart contract through an
      external chaincode for resource usage storing and querying. Our experimental
      results show that our proposed setup forms a low-overhead monitoring solution,
      with an average of 448 MB of memory and 6.8% CPU usage, while introducing 1.1s
      end-to-end latency for store operation and 0.6s for ledger querying respectively.",
      "venue": "Ledger", "year": 2022, "referenceCount": 51, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ledger.pitt.edu/ojs/ledger/article/download/230/224",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "Ledger", "volume":
      "7"}, "citationStyles": {"bibtex": "@Article{Tzenetopoulos2022HLFKubedBR,\n
      author = {Achilleas Tzenetopoulos and Dimosthenis Masouros and Nikolaos Kapsoulis
      and A. Litke and D. Soudris and T. Varvarigou},\n booktitle = {Ledger},\n journal
      = {Ledger},\n title = {HLF-Kubed: Blockchain-Based Resource Monitoring for Edge
      Clusters},\n volume = {7},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2003073966", "name": "Achilleas Tzenetopoulos"}, {"authorId": "21075634", "name":
      "Dimosthenis Masouros"}, {"authorId": "1573547140", "name": "Nikolaos Kapsoulis"},
      {"authorId": "144993939", "name": "A. Litke"}, {"authorId": "144189794", "name":
      "D. Soudris"}, {"authorId": "145122221", "name": "T. Varvarigou"}]}, {"paperId":
      "5fcfc1349525cbafef2b532b450daa47869b2f58", "externalIds": {"DBLP": "conf/hotnets/FuZRS22",
      "DOI": "10.1145/3563766.3564087", "CorpusId": 253524382}, "corpusId": 253524382,
      "publicationVenue": {"id": "89d61e17-5d06-4d45-a0d0-c7b62b0a35b4", "name": "ACM
      Workshop on Hot Topics in Networks", "type": "conference", "alternate_names":
      ["HotNets", "ACM Workshop Hot Top Netw", "Hot Top Netw", "Hot Topics in Networks"],
      "url": "http://www.sigcomm.org/events/hotnets-workshop"}, "url": "https://www.semanticscholar.org/paper/5fcfc1349525cbafef2b532b450daa47869b2f58",
      "title": "The internet of things in a laptop: rapid prototyping for IoT applications
      with digibox", "abstract": "Digibox is a prototyping environment for IoT applications.
      It enables a novel scene-centric prototyping where developers can program an
      ensemble of simulated devices to capture not only their individual but also
      their coordinated behaviors, making it possible to test, debug, and evaluate
      the behaviors of an IoT application. Using Digibox, developers can download
      and reuse existing scenes, customize, and repurpose them towards developing
      new applications; or replicate others'' experiment results from scientific research.
      Digibox''s Kubernetes-based runtime further allows developers to easily scale
      the prototyping environment from a single laptop to a cluster running simulated
      devices and scenes at a scale appropriate to the application.", "venue": "ACM
      Workshop on Hot Topics in Networks", "year": 2022, "referenceCount": 33, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3563766.3564087", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Environmental Science",
      "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2022-11-14", "journal": {"name": "Proceedings of the 21st
      ACM Workshop on Hot Topics in Networks"}, "citationStyles": {"bibtex": "@Book{Fu2022TheIO,\n
      author = {Silvery Fu and Hong Zhang and S. Ratnasamy and I. Stoica},\n booktitle
      = {ACM Workshop on Hot Topics in Networks},\n journal = {Proceedings of the
      21st ACM Workshop on Hot Topics in Networks},\n title = {The internet of things
      in a laptop: rapid prototyping for IoT applications with digibox},\n year =
      {2022}\n}\n"}, "authors": [{"authorId": "32302537", "name": "Silvery Fu"}, {"authorId":
      "2146243836", "name": "Hong Zhang"}, {"authorId": "1699297", "name": "S. Ratnasamy"},
      {"authorId": "144467753", "name": "I. Stoica"}]}, {"paperId": "5fe5f8d0f5b2ddf9ab6ee0bbae124d6b56a58cdd",
      "externalIds": {"DBLP": "journals/corr/abs-2111-02481", "ArXiv": "2111.02481",
      "DOI": "10.1145/3472883.3486976", "CorpusId": 239890181}, "corpusId": 239890181,
      "publicationVenue": {"id": "d13e941e-4cac-4f1d-bdca-77d927e31f1b", "name": "ACM
      Symposium on Cloud Computing", "type": "conference", "alternate_names": ["System-on-Chip
      Conference", "ACM Symp Cloud Comput", "Syst Conf", "Symp Cloud Comput", "Annual
      IEEE International System-on-Chip Conference", "Symposium on Cloud Computing",
      "Annu IEEE Int Syst Conf", "SoCC"], "url": "http://www.ieee-socc.org/"}, "url":
      "https://www.semanticscholar.org/paper/5fe5f8d0f5b2ddf9ab6ee0bbae124d6b56a58cdd",
      "title": "Secure Namespaced Kernel Audit for Containers", "abstract": "Despite
      the wide usage of container-based cloud computing, container auditing for security
      analysis relies mostly on built-in host audit systems, which often lack the
      ability to capture high-fidelity container logs. State-of-the-art reference-monitor-based
      audit techniques greatly improve the quality of audit logs, but their system-wide
      architecture is too costly to be adapted for individual containers. Moreover,
      these techniques typically require extensive kernel modifications, making it
      difficult to deploy in practical settings. In this paper, we present saBPF (secure
      audit BPF), an extension of the eBPF framework capable of deploying secure system-level
      audit mechanisms at the container granularity. We demonstrate the practicality
      of saBPF in Kubernetes by designing an audit framework, an intrusion detection
      system, and a lightweight access control mechanism. We evaluate saBPF and show
      that it is comparable in performance and security guarantees to audit systems
      from the literature that are implemented directly in the kernel.", "venue":
      "ACM Symposium on Cloud Computing", "year": 2021, "referenceCount": 60, "citationCount":
      6, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/2111.02481", "status": "GREEN"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2021-11-01", "journal": {"name":
      "Proceedings of the ACM Symposium on Cloud Computing"}, "citationStyles": {"bibtex":
      "@Article{Lim2021SecureNK,\n author = {S. Lim and Bogdan Stelea and Xueyuan
      Han and Thomas Pasquier},\n booktitle = {ACM Symposium on Cloud Computing},\n
      journal = {Proceedings of the ACM Symposium on Cloud Computing},\n title = {Secure
      Namespaced Kernel Audit for Containers},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "1388700578", "name": "S. Lim"}, {"authorId": "2080573852", "name":
      "Bogdan Stelea"}, {"authorId": "3426485", "name": "Xueyuan Han"}, {"authorId":
      "3176695", "name": "Thomas Pasquier"}]}, {"paperId": "5ff38823427475ca5a02065338f54bc01358ec8d",
      "externalIds": {"DBLP": "journals/spe/AhmedGC21", "MAG": "3087714227", "DOI":
      "10.1002/spe.2898", "CorpusId": 224995556}, "corpusId": 224995556, "publicationVenue":
      {"id": "3da56ce6-4a70-402c-a8b0-7dd39a3273d3", "name": "Software, Practice &
      Experience", "type": "journal", "alternate_names": ["Softw  Pract Exp", "Softw
      Pract  Exp", "Software - Practice and Experience"], "issn": "0038-0644", "url":
      "http://www3.interscience.wiley.com/cgi-bin/jhome/1752", "alternate_urls": ["http://www.interscience.wiley.com/jpages/0038-0644/",
      "https://onlinelibrary.wiley.com/journal/1097024X"]}, "url": "https://www.semanticscholar.org/paper/5ff38823427475ca5a02065338f54bc01358ec8d",
      "title": "KubCG: A dynamic Kubernetes scheduler for heterogeneous clusters",
      "abstract": "Container platforms are increasingly being used to deploy cloud\u2010based
      services. Nevertheless, many cloud services are also demanding graphics processing
      units (GPUs) to accelerate different applications that make use of their parallel
      architecture, such as deep learning or just video processing. Thus, different
      container technologies, such as Docker and Kubernetes, are implementing GPU
      support. Some effort is being devoted to design algorithms to schedule applications
      into heterogeneous computing systems that use CPUs and GPUs together. This article
      is part of this effort, and we describe how to build a dynamic scheduling platform
      for Kubernetes that is able to manage the deployment of Docker containers in
      a heterogeneous cluster, which we call KubCG. This platform implements a new
      scheduler that optimizes the deployment of new containers by taking into account
      the Kubernetes Pod timeline and the historical information about the execution
      of the containers. We have performed different tests to validate this new algorithm,
      and KubCG was able to reduce the time to complete different tasks down to a
      64% of the original time in our different experiments.", "venue": "Software,
      Practice & Experience", "year": 2020, "referenceCount": 27, "citationCount":
      12, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2020-09-19", "journal": {"name": "Software:
      Practice and Experience", "pages": "213 - 234", "volume": "51"}, "citationStyles":
      {"bibtex": "@Article{Ahmed2020KubCGAD,\n author = {Ghofrane El Haj Ahmed and
      F. Gil-Casti\u00f1eira and E. Costa-Montenegro},\n booktitle = {Software, Practice
      & Experience},\n journal = {Software: Practice and Experience},\n pages = {213
      - 234},\n title = {KubCG: A dynamic Kubernetes scheduler for heterogeneous clusters},\n
      volume = {51},\n year = {2020}\n}\n"}, "authors": [{"authorId": "1411101915",
      "name": "Ghofrane El Haj Ahmed"}, {"authorId": "1397971277", "name": "F. Gil-Casti\u00f1eira"},
      {"authorId": "1397913256", "name": "E. Costa-Montenegro"}]}, {"paperId": "5ff5b614fad7b63465cd42053a4f6cd44d7cad93",
      "externalIds": {"DOI": "10.5753/sbesc_estendido.2023.235886", "CorpusId": 265252631},
      "corpusId": 265252631, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5ff5b614fad7b63465cd42053a4f6cd44d7cad93",
      "title": "Escalonamento Horizontal em Kubernetes com Redes Neurais Artificiais
      para Predi\u00e7\u00e3o de Carga", "abstract": "Este artigo apresenta uma abordagem
      inovadora para o escalonamento horizontal autom\u00e1tico em cluster Kubernetes
      (K8s), utilizando Redes Neurais Artificiais. A proposta \u00e9 chamada de ANN-HS
      e em compara\u00e7\u00e3o com o Escalonador Horizontal padr\u00e3o do K8s (HPA),
      o ANN-HS demonstra efici\u00eancia superior em termos de consumo de recursos,
      aloca\u00e7\u00e3o otimizada de r\u00e9plicas, adapta\u00e7\u00e3o flex\u00edvel
      \u00e0 demanda e ader\u00eancia a n\u00edveis de lat\u00eancia. Com modelos
      de regress\u00e3o pr\u00e9-treinados, o ANN-HS oferece ajuste personalizado
      de recursos, promovendo uma alternativa promissora para aprimorar o escalonamento
      horizontal de aplica\u00e7\u00f5es em ambientes de micro-servi\u00e7os.", "venue":
      "Anais Estendidos do XIII Simp\u00f3sio Brasileiro de Engenharia de Sistemas
      Computacionais (SBESC Estendido 2023)", "year": 2023, "referenceCount": 12,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      {"url": "https://sol.sbc.org.br/index.php/sbesc_estendido/article/download/25849/25677",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes":
      null, "publicationDate": "2023-11-21", "journal": {"name": "Anais Estendidos
      do XIII Simp\u00f3sio Brasileiro de Engenharia de Sistemas Computacionais (SBESC
      Estendido 2023)"}, "citationStyles": {"bibtex": "@Article{Silva2023EscalonamentoHE,\n
      author = {L. D. Silva and S\u00e9rgio N. Silva and Marcelo A. C. Fernandes},\n
      booktitle = {Anais Estendidos do XIII Simp\u00f3sio Brasileiro de Engenharia
      de Sistemas Computacionais (SBESC Estendido 2023)},\n journal = {Anais Estendidos
      do XIII Simp\u00f3sio Brasileiro de Engenharia de Sistemas Computacionais (SBESC
      Estendido 2023)},\n title = {Escalonamento Horizontal em Kubernetes com Redes
      Neurais Artificiais para Predi\u00e7\u00e3o de Carga},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "150194349", "name": "L. D. Silva"}, {"authorId": "2267032855",
      "name": "S\u00e9rgio N. Silva"}, {"authorId": "152815993", "name": "Marcelo
      A. C. Fernandes"}]}, {"paperId": "5ffe2bf719082d426566d753fc299d32cfaff8f1",
      "externalIds": {"CorpusId": 261896862}, "corpusId": 261896862, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5ffe2bf719082d426566d753fc299d32cfaff8f1",
      "title": "Leveraging Containers and OpenStack A Comprehensive Review", "abstract":
      "At CERN, several workloads run within containers provisioned by Magnum, these
      include: Reana/RecastThese tools provide a framework for executing reusable
      workflows in High Energy Physics. Containers offer the ability to package the
      analysis software and data in a single, easily shareable unit as well as easy
      scaling out both on-premises and using external resources. Work is scheduled
      as Kubernetes jobs based on Yadage Workflows supporting analysis and data preservation
      activities. single framework provides for easy views on usage accounting, ownership
      and quota. Manila storage drivers for Kubernetes allow transparent provisioning
      of file shares. This supports both the IT department in capacity planning and
      the experiment resource coordinators in defining the priorities for their working
      groups. Resource management policies such as reassignment or expiry of resources
      on departure of staff are handled in consistent workflows.", "venue": "", "year":
      2022, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Physics",
      "source": "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate":
      null, "journal": null, "citationStyles": {"bibtex": "@Inproceedings{None,\n
      title = {Leveraging Containers and OpenStack A Comprehensive Review},\n year
      = {2022}\n}\n"}, "authors": []}, {"paperId": "601011178c174bfc9b1c36220032ce8fb198530d",
      "externalIds": {"DBLP": "journals/grid/Carrion22", "DOI": "10.1007/s10723-022-09629-8",
      "CorpusId": 254248844}, "corpusId": 254248844, "publicationVenue": {"id": "993eb4fa-4cb7-4aed-980e-20e5298efad0",
      "name": "Journal of Grid Computing", "type": "journal", "alternate_names": ["J
      Grid Comput"], "issn": "1570-7873", "url": "https://www.springer.com/journal/10723",
      "alternate_urls": ["https://link.springer.com/journal/10723", "http://www.springer.com/journal/10723"]},
      "url": "https://www.semanticscholar.org/paper/601011178c174bfc9b1c36220032ce8fb198530d",
      "title": "Kubernetes as a Standard Container Orchestrator - A Bibliometric Analysis",
      "abstract": null, "venue": "Journal of Grid Computing", "year": 2022, "referenceCount":
      84, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Review"], "publicationDate": "2022-12-01", "journal": {"name": "Journal of
      Grid Computing", "pages": "1-23", "volume": "20"}, "citationStyles": {"bibtex":
      "@Article{Carri\u00f3n2022KubernetesAA,\n author = {C. Carri\u00f3n},\n booktitle
      = {Journal of Grid Computing},\n journal = {Journal of Grid Computing},\n pages
      = {1-23},\n title = {Kubernetes as a Standard Container Orchestrator - A Bibliometric
      Analysis},\n volume = {20},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "144891586", "name": "C. Carri\u00f3n"}]}, {"paperId": "60122fdb6f87bb188dff7026f75ed426357e39a6",
      "externalIds": {"ArXiv": "2103.03281", "DBLP": "journals/corr/abs-2103-03281",
      "DOI": "10.25080/majora-1b6fd038-007", "CorpusId": 232134994}, "corpusId": 232134994,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/60122fdb6f87bb188dff7026f75ed426357e39a6",
      "title": "CLAIMED, a visual and scalable component library for Trusted AI",
      "abstract": "Deep Learning models are getting more and more popular but constraints
      on explainability, adversarial robustness and fairness are often major concerns
      for production deployment. Although the open source ecosystem is abundant on
      addressing those concerns, fully integrated, end to end systems are lacking
      in open source. Therefore we provide an entirely open source, reusable component
      framework, visual editor and execution engine for production grade machine learning
      on top of Kubernetes, a joint effort between IBM and the University Hospital
      Basel. It uses Kubeflow Pipelines, the AI Explainability360 toolkit, the AI
      Fairness360 toolkit and the Adversarial Robustness Toolkit on top of Elyra,
      Kubeflow, Kubernetes and JupyterLab. Using the Elyra pipeline editor, AI pipelines
      can be developed visually with a set of jupyter notebooks. We explain how we''ve
      created a COVID-19 deep learning classification pipeline based on CT scans.
      We use the toolkit to highlight parts of the images which have been crucial
      for the models decisions. We detect bias against age and gender and finally,
      show how to deploy the model to KFServing to share it across different hospital
      data centers of the Swiss Personalized Health Network. \u00a9 2021 CEUR-WS.
      All rights reserved.", "venue": "SciPy", "year": 2021, "referenceCount": 29,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      {"url": "http://conference.scipy.org/proceedings/scipy2021/pdfs/ivan_nesic.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Medicine"], "s2FieldsOfStudy": [{"category":
      "Medicine", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-03-04", "journal": {"pages": "58-64"}, "citationStyles": {"bibtex": "@Article{Kienzler2021CLAIMEDAV,\n
      author = {Romeo Kienzler and I. Nesic},\n booktitle = {SciPy},\n pages = {58-64},\n
      title = {CLAIMED, a visual and scalable component library for Trusted AI},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "3074587", "name": "Romeo Kienzler"},
      {"authorId": "2142853343", "name": "I. Nesic"}]}, {"paperId": "603978a7f4454cf8c1e64979fcaad7d3806cf2d0",
      "externalIds": {"MAG": "3003568290", "DBLP": "conf/eidwt/YoonHLK19", "DOI":
      "10.1007/978-3-030-39746-3_54", "CorpusId": 212749303}, "corpusId": 212749303,
      "publicationVenue": {"id": "70c7f378-81c2-43f5-b397-87169bbfe393", "name": "International
      Conference on Emerging Intelligent Data and Web Technologies", "type": "conference",
      "alternate_names": ["Int Conf Emerg Intell Data Web Technol", "EIDWT"]}, "url":
      "https://www.semanticscholar.org/paper/603978a7f4454cf8c1e64979fcaad7d3806cf2d0",
      "title": "DevOps Portal Design for SmartX AI Cluster Employing Cloud-Native
      Machine Learning Workflows", "abstract": null, "venue": "International Conference
      on Emerging Intelligent Data and Web Technologies", "year": 2020, "referenceCount":
      3, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-02-24", "journal":
      {"pages": "532-539"}, "citationStyles": {"bibtex": "@Article{Yoon2020DevOpsPD,\n
      author = {GeumSeong Yoon and Jungsu Han and Seunghyun Lee and JongWon Kim},\n
      booktitle = {International Conference on Emerging Intelligent Data and Web Technologies},\n
      pages = {532-539},\n title = {DevOps Portal Design for SmartX AI Cluster Employing
      Cloud-Native Machine Learning Workflows},\n year = {2020}\n}\n"}, "authors":
      [{"authorId": "1569535696", "name": "GeumSeong Yoon"}, {"authorId": "9309263",
      "name": "Jungsu Han"}, {"authorId": "48601795", "name": "Seunghyun Lee"}, {"authorId":
      "47964793", "name": "JongWon Kim"}]}, {"paperId": "60446293825bce8bb9ca80a03cf2ea2eb422a177",
      "externalIds": {"DBLP": "conf/iscc/BuzachisGCCV19", "MAG": "3003697036", "DOI":
      "10.1109/ISCC47284.2019.8969621", "CorpusId": 210971052}, "corpusId": 210971052,
      "publicationVenue": {"id": "159aed30-148b-4b50-99a4-372b0af958d9", "name": "International
      Symposium on Computers and Communications", "type": "conference", "alternate_names":
      ["ISCC", "Int Symp Comput Commun"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1000156/all-proceedings"},
      "url": "https://www.semanticscholar.org/paper/60446293825bce8bb9ca80a03cf2ea2eb422a177",
      "title": "Towards Osmotic Computing: a Blue-Green Strategy for the Fast Re-Deployment
      of Microservices", "abstract": "The rapid development of Cloud, Edge, Fog Computing
      and Internet of Things (IoT) technologies has played a key role in the Industry
      4.0 evolution. In this context, the Osmotic Computing paradigm, theorized in
      2016 as integration between a centralized Cloud layer and Edge and/or IoT layers,
      has further emphasized the Industry 4.0 objectives including productivity and
      Quality of Services (QoS). This emerging paradigm proposes a new elastic management
      model of microservices, where deployment and migration strategies are strongly
      related to the underlaying infrastructure requirements (i.e., load balancing,
      reliability, availability, and so on) and applications (i.e., anomalies detection,
      awareness of the context, proximity, QoS, and so on). Specifically, knowing
      that an Osmotic application must have a failover behavior (highly horizontally/vertically
      scalable, 24 hours 24 available, fault-tolerant and secure), this paper highlights
      the Osmotic ecosystem platform focusing on the implementation of a blue-green
      mechanism for the fast re-deployment of microservices, exploiting emerging technologies,
      such as Docker, Kubernetes, Agento and MongoDB. Experiments shows the time required
      to arrange, deploy and destroy microservices.", "venue": "International Symposium
      on Computers and Communications", "year": 2019, "referenceCount": 25, "citationCount":
      13, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Environmental Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2019-06-01", "journal": {"name": "2019 IEEE Symposium on
      Computers and Communications (ISCC)", "pages": "1-6"}, "citationStyles": {"bibtex":
      "@Article{Buzachis2019TowardsOC,\n author = {Alina Buzachis and A. Galletta
      and A. Celesti and Lorenzo Carnevale and M. Villari},\n booktitle = {International
      Symposium on Computers and Communications},\n journal = {2019 IEEE Symposium
      on Computers and Communications (ISCC)},\n pages = {1-6},\n title = {Towards
      Osmotic Computing: a Blue-Green Strategy for the Fast Re-Deployment of Microservices},\n
      year = {2019}\n}\n"}, "authors": [{"authorId": "41092577", "name": "Alina Buzachis"},
      {"authorId": "5686057", "name": "A. Galletta"}, {"authorId": "1790992", "name":
      "A. Celesti"}, {"authorId": "40484294", "name": "Lorenzo Carnevale"}, {"authorId":
      "1809861", "name": "M. Villari"}]}, {"paperId": "609277b4b63210155939d1785ef92f84c6ae8a60",
      "externalIds": {"DBLP": "conf/ic2e/SoualhiaW22", "DOI": "10.1109/IC2E55432.2022.00034",
      "CorpusId": 253556382}, "corpusId": 253556382, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/609277b4b63210155939d1785ef92f84c6ae8a60",
      "title": "Automated Traces-based Anomaly Detection and Root Cause Analysis in
      Cloud Platforms", "abstract": "Current cloud infrastructures and their applications
      are increasingly complex, with confounding relationships among application elements
      and cloud infrastructure components. This makes timely identification of the
      root causes for faults that occur in such systems an important-yet-challenging
      task. In this paper, we propose a solution that automatically builds a correlation
      model and an anomaly detection model using kernel traces of cloud servers. The
      correlation model is used to capture the dependencies between the various elements
      of the cloud system while the anomaly detection model is used to identify anomalies
      related to specific elements of the system. Upon detection of a fault, our framework
      computes a dependency graph of detected anomalies using the models, which in
      turn is used to perform the root cause analysis. Evaluation results of our proposed
      framework on a Kubernetes cloud show that it can effectively find root causes
      of injected faults with an accuracy rate between 80% and 99.3%, with a low false
      negative rate.", "venue": "2022 IEEE International Conference on Cloud Engineering
      (IC2E)", "year": 2022, "referenceCount": 17, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-09-01", "journal": {"name": "2022 IEEE International
      Conference on Cloud Engineering (IC2E)", "pages": "253-260"}, "citationStyles":
      {"bibtex": "@Article{Soualhia2022AutomatedTA,\n author = {Mbarka Soualhia and
      F. Wuhib},\n booktitle = {2022 IEEE International Conference on Cloud Engineering
      (IC2E)},\n journal = {2022 IEEE International Conference on Cloud Engineering
      (IC2E)},\n pages = {253-260},\n title = {Automated Traces-based Anomaly Detection
      and Root Cause Analysis in Cloud Platforms},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "3298646", "name": "Mbarka Soualhia"}, {"authorId": "2763657",
      "name": "F. Wuhib"}]}, {"paperId": "609b1e3e820cb01688cbf9ac71fb313a624df4a3",
      "externalIds": {"DBLP": "conf/middleware/LiuCBYCDS18", "MAG": "2900903013",
      "DOI": "10.1145/3284028.3284034", "CorpusId": 53716567}, "corpusId": 53716567,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/609b1e3e820cb01688cbf9ac71fb313a624df4a3",
      "title": "A High Performance, Scalable DNS Service for Very Large Scale Container
      Cloud Platforms", "abstract": "Containers and microservices are dominating the
      world of data center and cloud computing. As the scale, dynamism and complexity
      grow, the performance of the DNS system in container clusters becomes vital.
      As the world''s third and China''s largest e-commerce site by revenue, JD.com
      runs one of the world''s largest Kubernetes container clusters in production.
      It is imperative that the DNS system can handle extremely high traffic. In this
      paper, we present ContainerDNS, a high performance DNS system for very large
      scale container clusters with millions of containers. ContainerDNS maximizes
      DNS system performance and scalability by optimizing DNS packet processing and
      using efficient memory and cache management. ContainerDNS has been deployed
      in JD''s container platform with 30,000 servers and 500,000 containers running
      tens of thousands of services and applications. It improves the maximum throughput
      from 130,000 to 9,000,000 QPS, a 67X performance boost comparing to existing
      DNS systems.", "venue": "Middleware Industry", "year": 2018, "referenceCount":
      21, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2018-12-10",
      "journal": {"name": "Proceedings of the 19th International Middleware Conference
      Industry"}, "citationStyles": {"bibtex": "@Book{Liu2018AHP,\n author = {Haifeng
      Liu and Shugang Chen and Yongcheng Bao and Wanli Yang and Yuan Chen and Wei
      Ding and Huasong Shan},\n booktitle = {Middleware Industry},\n journal = {Proceedings
      of the 19th International Middleware Conference Industry},\n title = {A High
      Performance, Scalable DNS Service for Very Large Scale Container Cloud Platforms},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "2109496932", "name": "Haifeng
      Liu"}, {"authorId": "2107907678", "name": "Shugang Chen"}, {"authorId": "8422572",
      "name": "Yongcheng Bao"}, {"authorId": "2117112428", "name": "Wanli Yang"},
      {"authorId": "2144033893", "name": "Yuan Chen"}, {"authorId": "2113832553",
      "name": "Wei Ding"}, {"authorId": "7938294", "name": "Huasong Shan"}]}, {"paperId":
      "60e579dae27552847fb8900acd4b7524f9d40ab9", "externalIds": {"DBLP": "conf/infocom/SenelMCFFM21",
      "DOI": "10.1109/INFOCOMWKSHPS51825.2021.9484475", "CorpusId": 236184670}, "corpusId":
      236184670, "publicationVenue": {"id": "be267cb9-6411-4126-8b64-4847025171ee",
      "name": "Conference on Computer Communications Workshops", "type": "conference",
      "alternate_names": ["INFOCOM WKSHPS", "Conf Comput Commun Work"]}, "url": "https://www.semanticscholar.org/paper/60e579dae27552847fb8900acd4b7524f9d40ab9",
      "title": "EdgeNet: the Global Kubernetes Cluster Testbed", "abstract": "EdgeNet
      is a software-only distributed systems testbed in the family of PlanetLab. It
      is realized as a multitenant global Kubernetes cluster running on volunteered
      virtual machines. In this paper, we describe our modifications to Kubernetes
      which enable trusted execution with accountability on untrusted, volunteered
      hardware, user control of the placement of Kubernetes pods, and control of a
      global cluster from a single central head node.", "venue": "Conference on Computer
      Communications Workshops", "year": 2021, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://hal.archives-ouvertes.fr/hal-03419803/file/EdgeNet_CNERT_2021_demo.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2021-05-10",
      "journal": {"name": "IEEE INFOCOM 2021 - IEEE Conference on Computer Communications
      Workshops (INFOCOM WKSHPS)", "pages": "1-2"}, "citationStyles": {"bibtex": "@Article{Senel2021EdgeNetTG,\n
      author = {Berat Can Senel and Maxime Mouchet and Justin Cappos and Olivier Fourmaux
      and T. Friedman and R. McGeer},\n booktitle = {Conference on Computer Communications
      Workshops},\n journal = {IEEE INFOCOM 2021 - IEEE Conference on Computer Communications
      Workshops (INFOCOM WKSHPS)},\n pages = {1-2},\n title = {EdgeNet: the Global
      Kubernetes Cluster Testbed},\n year = {2021}\n}\n"}, "authors": [{"authorId":
      "27835405", "name": "Berat Can Senel"}, {"authorId": "51202031", "name": "Maxime
      Mouchet"}, {"authorId": "2030168", "name": "Justin Cappos"}, {"authorId": "1683620",
      "name": "Olivier Fourmaux"}, {"authorId": "13744465", "name": "T. Friedman"},
      {"authorId": "1772751", "name": "R. McGeer"}]}, {"paperId": "60f1ccfd1de6dfed0ef26e9b495c76f0835f49b7",
      "externalIds": {"DBLP": "conf/sds/AlawnehA22", "DOI": "10.1109/SDS57574.2022.10062874",
      "CorpusId": 257586579}, "corpusId": 257586579, "publicationVenue": {"id": "4f02ac59-1046-4afe-981b-6f33122b2014",
      "name": "Swiss Conference on Data Science", "type": "conference", "alternate_names":
      ["International Conference on Software Defined Systems", "Swiss Conf Data Sci",
      "SDS", "Int Conf Softw Defin Syst"]}, "url": "https://www.semanticscholar.org/paper/60f1ccfd1de6dfed0ef26e9b495c76f0835f49b7",
      "title": "Expanding DevSecOps Practices and Clarifying the Concepts within Kubernetes
      Ecosystem", "abstract": "DevSecOps principles and practices come with promising
      futures, which are related to integrating security by design within organizational
      processes. These include development, deployment, and operational management.
      For example, DevSecOps practices help securely speed up the processes of application
      delivery; resilience; elasticity; availability, and re-liability. Despite the
      promising future of DevSecOps, it comes with several challenges, and one of
      these is about establishing robust mechanisms for integrating security by design
      within the existing DevOps practices. This paper unifies and redefines DevSecOps
      practices, and then provides several real-life examples clarifying what it means
      to integrate security by design within each practice. Finally, it clarifies
      the concepts by illustrating the roles of DevSecOps practices in securing the
      Kubernetes ecosystem.", "venue": "Swiss Conference on Data Science", "year":
      2022, "referenceCount": 19, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-12-12", "journal": {"name": "2022 Ninth International
      Conference on Software Defined Systems (SDS)", "pages": "1-7"}, "citationStyles":
      {"bibtex": "@Article{Alawneh2022ExpandingDP,\n author = {Muntaha Alawneh and
      I. Abbadi},\n booktitle = {Swiss Conference on Data Science},\n journal = {2022
      Ninth International Conference on Software Defined Systems (SDS)},\n pages =
      {1-7},\n title = {Expanding DevSecOps Practices and Clarifying the Concepts
      within Kubernetes Ecosystem},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2298999", "name": "Muntaha Alawneh"}, {"authorId": "2019018", "name": "I. Abbadi"}]},
      {"paperId": "60f4ad8ee25168e61caddf12571f65f48adeec6f", "externalIds": {"DBLP":
      "conf/apsec/WangMLL22", "DOI": "10.1109/APSEC57359.2022.00066", "CorpusId":
      256944518}, "corpusId": 256944518, "publicationVenue": {"id": "8bcdbd50-f829-4fb4-ab17-bf6bffa1c5a5",
      "name": "Asia-Pacific Software Engineering Conference", "type": "conference",
      "alternate_names": ["Asia-pacific Symp Electromagn Compat", "Asia-pacific Softw
      Eng Conf", "Asia-Pacific Symposium on Electromagnetic Compatibility", "APSEC"],
      "url": "http://www.wikicfp.com/cfp/program?id=205"}, "url": "https://www.semanticscholar.org/paper/60f4ad8ee25168e61caddf12571f65f48adeec6f",
      "title": "Analyzing and Monitoring Kubernetes Microservices based on Distributed
      Tracing and Service Mesh", "abstract": "The microservice system architecture
      (MSA) outperforms the monolithic system architecture in terms of maintainability,
      extensibility, scalability, and fault tolerance. This is prompting a widescale
      migration of software systems from existing monolith systems to MSA. Most microservice
      systems utilize container technology for deployment. The fact that Kubernetes
      (K8s) provides a fully-fledged toolchain for managing container-based applications
      is prompting many organizations to adopt the K8s protocol for microservice system
      deployment and operations. Microservice monitoring is essential to the success
      of any service operation. The collection of logs and aggregation of metrics
      by most existing microservice monitoring systems is somewhat intrusive. Furthermore,
      the heterogeneity of Kubernetes technology means that most monitoring methods
      are inapplicable in situations where microservices are developed for a system
      using a variety of underlying languages and platforms. In the current study,
      we developed a monitoring mechanism that provides various metrics specific to
      microservice systems in a nonintrusive way. The proposed K8s-based microservice
      monitoring system, referred to as KMamiz (Kubernetes-based Microservice Analysis
      and Monitoring using Istio and Zipkin), enables the construction and visualization
      for service-level/endpoint-level dependency graphs and endpoint request chains,
      and the service cohesion/coupling analysis to enhance system quality for the
      development team.", "venue": "Asia-Pacific Software Engineering Conference",
      "year": 2022, "referenceCount": 16, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-12-01", "journal": {"name": "2022 29th Asia-Pacific
      Software Engineering Conference (APSEC)", "pages": "477-481"}, "citationStyles":
      {"bibtex": "@Article{Wang2022AnalyzingAM,\n author = {Yu-Te Wang and Shang-Pin
      Ma and Yue-Jun Lai and Yan-Cih Liang},\n booktitle = {Asia-Pacific Software
      Engineering Conference},\n journal = {2022 29th Asia-Pacific Software Engineering
      Conference (APSEC)},\n pages = {477-481},\n title = {Analyzing and Monitoring
      Kubernetes Microservices based on Distributed Tracing and Service Mesh},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "2108071375", "name": "Yu-Te Wang"},
      {"authorId": "1736499", "name": "Shang-Pin Ma"}, {"authorId": "2207704408",
      "name": "Yue-Jun Lai"}, {"authorId": "2208074493", "name": "Yan-Cih Liang"}]},
      {"paperId": "61020665f9134e56009b6e10606fc21348f59d53", "externalIds": {"DBLP":
      "journals/tosem/RahmanSBP23", "DOI": "10.1145/3579639", "CorpusId": 255547108},
      "corpusId": 255547108, "publicationVenue": {"id": "0730105a-4941-449f-9450-28cba8ae056b",
      "name": "ACM Transactions on Software Engineering and Methodology", "type":
      "journal", "alternate_names": ["ACM Trans Softw Eng Methodol"], "issn": "1049-331X",
      "url": "http://www.acm.org/pubs/contents/journals/tosem/", "alternate_urls":
      ["https://tosem.acm.org/", "http://tosem.acm.org/", "http://www.acm.org/pubs/tosem/",
      "http://portal.acm.org/tosem"]}, "url": "https://www.semanticscholar.org/paper/61020665f9134e56009b6e10606fc21348f59d53",
      "title": "Security Misconfigurations in Open Source Kubernetes Manifests: An
      Empirical Study", "abstract": "Context: Kubernetes has emerged as the de-facto
      tool for automated container orchestration. Business and government organizations
      are increasingly adopting Kubernetes for automated software deployments. Kubernetes
      is being used to provision applications in a wide range of domains, such as
      time series forecasting, edge computing, and high-performance computing. Due
      to such a pervasive presence, Kubernetes-related security misconfigurations
      can cause large-scale security breaches. Thus, a systematic analysis of security
      misconfigurations in Kubernetes manifests, i.e., configuration files used for
      Kubernetes, can help practitioners secure their Kubernetes clusters. Objective:
      The goal of this paper is to help practitioners secure their Kubernetes clusters
      by identifying security misconfigurations that occur in Kubernetes manifests.
      Methodology: We conduct an empirical study with 2,039 Kubernetes manifests mined
      from 92 open-source software repositories to systematically characterize security
      misconfigurations in Kubernetes manifests. We also construct a static analysis
      tool called Security Linter for Kubernetes Manifests (SLI-KUBE) to quantify
      the frequency of the identified security misconfigurations. Results: In all,
      we identify 11 categories of security misconfigurations, such as absent resource
      limit, absent securityContext, and activation of hostIPC. Specifically, we identify
      1,051 security misconfigurations in 2,039 manifests. We also observe the identified
      security misconfigurations affect entities that perform mesh-related load balancing,
      as well as provision pods and stateful applications. Furthermore, practitioners
      agreed to fix 60% of 10 misconfigurations reported by us. Conclusion: Our empirical
      study shows Kubernetes manifests to include security misconfigurations, which
      necessitates security-focused code reviews and application of static analysis
      when Kubernetes manifests are developed.", "venue": "ACM Transactions on Software
      Engineering and Methodology", "year": 2023, "referenceCount": 104, "citationCount":
      10, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3579639", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Review"], "publicationDate": "2023-01-10", "journal": {"name":
      "ACM Transactions on Software Engineering and Methodology", "pages": "1 - 36",
      "volume": "32"}, "citationStyles": {"bibtex": "@Article{Rahman2023SecurityMI,\n
      author = {A. Rahman and Shazibul Islam Shamim and Dibyendu Brinto Bose and Rahul
      Pandita},\n booktitle = {ACM Transactions on Software Engineering and Methodology},\n
      journal = {ACM Transactions on Software Engineering and Methodology},\n pages
      = {1 - 36},\n title = {Security Misconfigurations in Open Source Kubernetes
      Manifests: An Empirical Study},\n volume = {32},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "39864830", "name": "A. Rahman"}, {"authorId": "2036391299", "name":
      "Shazibul Islam Shamim"}, {"authorId": "2120330401", "name": "Dibyendu Brinto
      Bose"}, {"authorId": "40211404", "name": "Rahul Pandita"}]}, {"paperId": "6113224f9c41a9a5b55a09954745fab6e5afdb1d",
      "externalIds": {"DOI": "10.5120/ijca2021921843", "CorpusId": 252018599}, "corpusId":
      252018599, "publicationVenue": {"id": "940c7008-d07d-488d-baa2-1ef7343957dc",
      "name": "International Journal of Computer Applications", "type": "journal",
      "alternate_names": ["INTERNATIONAL JOURNAL OF COMPUTER APPLICATION", "International
      Journal of Computers and Applications", "International journal of mini & microcomputers",
      "Int J Comput Appl", "INT J COMPUT APPL", "Int j mini  microcomput"], "issn":
      "0975-8887", "alternate_issns": ["0702-0481", "1206-212X", "2250-1797"], "url":
      "https://www.ijcaonline.org/", "alternate_urls": ["http://www.tandfonline.com/loi/tjca20#.VbH7kGPLZa4",
      "http://www.actapress.com/Content_of_Journal.aspx?JournalID=130", "http://epe.lac-bac.gc.ca/101/201/300/intl_j_comp_applications/index.html"]},
      "url": "https://www.semanticscholar.org/paper/6113224f9c41a9a5b55a09954745fab6e5afdb1d",
      "title": "A Multi-Containerized Application using Docker Containers and Kubernetes
      Clusters", "abstract": "The Cloud is a virtual environment that provisions massive
      and scalable computing resources and services on a pay-as-you-go basis which
      is also the process of migrating from a physical environment to a virtual environment.
      Virtualization could be achieved either through virtual machines or containers.
      While virtual machines start with a full operating system and all its included
      software hereby making it bulkier, containers are built to contain only the
      necessary libraries and dependencies inside them. There has been a huge problem
      with developing and deploying applications in production and development environments.
      The same apps that work perfectly well in development can show glitches when
      deployed in production thereby making the gap between the Development and Operation
      to be wide which makes the software being deployed to be delivered at a slower
      pace with an increase in maintenance costs. This has necessitated the introduction
      of Docker and Kubernetes to mitigate against this and it will be tested with
      the Fibonacci sequence calculator.", "venue": "International Journal of Computer
      Applications", "year": 2021, "referenceCount": 15, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2021-12-22",
      "journal": {"name": "International Journal of Computer Applications"}, "citationStyles":
      {"bibtex": "@Article{Dayo2021AMA,\n author = {Alowolodu Olufunso Dayo},\n booktitle
      = {International Journal of Computer Applications},\n journal = {International
      Journal of Computer Applications},\n title = {A Multi-Containerized Application
      using Docker Containers and Kubernetes Clusters},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2004996474", "name": "Alowolodu Olufunso Dayo"}]}, {"paperId":
      "612a94737a6b4e22c5858d3f87a8d03c2b499cb9", "externalIds": {"MAG": "2737524122",
      "DBLP": "conf/im/BekasM17", "DOI": "10.23919/INM.2017.7987463", "CorpusId":
      23631428}, "corpusId": 23631428, "publicationVenue": {"id": "6a94f1d5-0b70-4a95-bd5c-2d73cf0e0d9c",
      "name": "IFIP/IEEE Symposium on Integrated Network Management", "type": "conference",
      "alternate_names": ["IM", "Integrated Network Management", "Integr Netw Manag",
      "IFIP/IEEE Symp Integr Netw Manag"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1000381/all-proceedings"},
      "url": "https://www.semanticscholar.org/paper/612a94737a6b4e22c5858d3f87a8d03c2b499cb9",
      "title": "Cross-layer management of a containerized NoSQL data store", "abstract":
      "Internet-scale services increasingly rely on NoSQL data store technologies
      for scalable, highly available data persistence. To increase resource efficiency
      and deployment speed, such services are adopting new deployment models based
      on container technologies. Emerging container management systems (CMS) offer
      new models of interaction with containerized applications, exposing goal-oriented
      management capabilities. In this paper, we study the interaction of a containerized
      NoSQL data store, RethinkDB, with a popular open-source CMS, Kubernetes, demonstrating
      that events exposed by the CMS can be leveraged to drive adaptation actions
      on the NoSQL data store, improving its availability and quality of service.
      Typical adaptation actions in data stores often involve movement of data (e.g.,
      migrating data replicas to a new node) and thus have high overhead. In this
      paper we demonstrate that lower-cost adaptation actions based on targeted reconfigurations
      of replica groups are possible and often offer rapid response to performance
      degradation (such as when a node experiences a temporary resource shortage).
      Such reconfigurations can be exercised by a cross-layer management system that
      bridges between CMS and NoSQL data store. We evaluate a prototype implementation
      of this management system in the context of Kubernetes and RethinkDB using the
      Yahoo Cloud Serving Benchmark on Google Container Engine. Our results demonstrate
      that infrastructure-level events provided by the CMS can drive proactive, low-cost
      data-store adaptation actions that improve overall system manageability, availability,
      and performance.", "venue": "IFIP/IEEE Symposium on Integrated Network Management",
      "year": 2017, "referenceCount": 16, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2017-05-01", "journal": {"name": "2017 IFIP/IEEE Symposium on Integrated Network
      and Service Management (IM)", "pages": "1213-1221"}, "citationStyles": {"bibtex":
      "@Article{Bekas2017CrosslayerMO,\n author = {Evdoxos Bekas and K. Magoutis},\n
      booktitle = {IFIP/IEEE Symposium on Integrated Network Management},\n journal
      = {2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM)},\n
      pages = {1213-1221},\n title = {Cross-layer management of a containerized NoSQL
      data store},\n year = {2017}\n}\n"}, "authors": [{"authorId": "20673854", "name":
      "Evdoxos Bekas"}, {"authorId": "1734219", "name": "K. Magoutis"}]}, {"paperId":
      "612b698bf36ca5adab025ec4f3a708084a1bc784", "externalIds": {"MAG": "2903056208",
      "CorpusId": 170065092}, "corpusId": 170065092, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/612b698bf36ca5adab025ec4f3a708084a1bc784",
      "title": "How Container Clusters Like Kubernetes Change Operations", "abstract":
      null, "venue": "", "year": 2015, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Business", "source": "s2-fos-model"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Burns2015HowCC,\n
      author = {Brendan Burns},\n title = {How Container Clusters Like Kubernetes
      Change Operations},\n year = {2015}\n}\n"}, "authors": [{"authorId": "2056947472",
      "name": "Brendan Burns"}]}, {"paperId": "618060f3cbc2c0b825df55c1f847060d23419f4e",
      "externalIds": {"DBLP": "conf/pdp/MelloneVSLMPACM23", "DOI": "10.1109/PDP59025.2023.00029",
      "CorpusId": 259027891}, "corpusId": 259027891, "publicationVenue": {"id": "d6283871-df25-4880-9c85-46e9830f0d22",
      "name": "International Euromicro Conference on Parallel, Distributed and Network-Based
      Processing", "type": "conference", "alternate_names": ["Int Euromicro Conf Parallel
      Distrib Network-based Process", "PDP", "Parallel Distrib Network-based Process",
      "Parallel, Distributed and Network-Based Processing"], "url": "http://www.euromicro.org/index.html"},
      "url": "https://www.semanticscholar.org/paper/618060f3cbc2c0b825df55c1f847060d23419f4e",
      "title": "A containerized distributed processing platform for autonomous surface
      vehicles: preliminary results for marine litter detection", "abstract": "Autonomous
      Surface Vehicles and their management represent one of the significant challenges
      in coastal and offshore surveying. Although the development of this kind of
      data acquisition device has skyrocketed in the last few years, line guides and
      technological solutions still need to come. On the other hand, this kind of
      robotic vessel''s true potential has yet to be explored. This paper presents
      ArgonautAI, a containerized distributed processing platform for autonomous surface
      vehicles. The proposed ArgonautAI architecture leverage a cluster of single-board
      computers with diverse and different characteristics (computing power, CUDA
      GPUs, FPGAs, GPIOs, PWMs, specialized I/O) orchestrated using Kubernetes and
      a customized programming interface. Furthermore, the proposed solution introduces
      two different types of containers: 1) the platform containers hosting the software
      life support for the platform and 2) the mission containers defined to support
      the survey mission-specific scopes. The firsts manage the vehicle''s instruments
      (e.g. position, attitude, environment, depth), the data storage, the vessel-to-shore
      communication, and so on; the latter host mission-specific software components.
      Finally, as proof of concept of the proposed platform, we present an AI-based
      marine litter detection application using a hierarchical computer vision approach
      on heterogenic onboard computing resources.", "venue": "International Euromicro
      Conference on Parallel, Distributed and Network-Based Processing", "year": 2023,
      "referenceCount": 22, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference", "Review"], "publicationDate":
      "2023-03-01", "journal": {"name": "2023 31st Euromicro International Conference
      on Parallel, Distributed and Network-Based Processing (PDP)", "pages": "144-148"},
      "citationStyles": {"bibtex": "@Article{Mellone2023ACD,\n author = {Gennaro Mellone
      and Ciro Giuseppe de Vita and Dante D. S\u00e1nchez-Gallegos and D. Di Luccio
      and G. Mattei and Francesco Peluso and Pietro Patrizio Ciro Aucelli and A. Ciaramella
      and R. Montella},\n booktitle = {International Euromicro Conference on Parallel,
      Distributed and Network-Based Processing},\n journal = {2023 31st Euromicro
      International Conference on Parallel, Distributed and Network-Based Processing
      (PDP)},\n pages = {144-148},\n title = {A containerized distributed processing
      platform for autonomous surface vehicles: preliminary results for marine litter
      detection},\n year = {2023}\n}\n"}, "authors": [{"authorId": "50661168", "name":
      "Gennaro Mellone"}, {"authorId": "2192208226", "name": "Ciro Giuseppe de Vita"},
      {"authorId": "1404335777", "name": "Dante D. S\u00e1nchez-Gallegos"}, {"authorId":
      "70489657", "name": "D. Di Luccio"}, {"authorId": "30636804", "name": "G. Mattei"},
      {"authorId": "133972496", "name": "Francesco Peluso"}, {"authorId": "2219399203",
      "name": "Pietro Patrizio Ciro Aucelli"}, {"authorId": "1719515", "name": "A.
      Ciaramella"}, {"authorId": "3282873", "name": "R. Montella"}]}, {"paperId":
      "618eef3ab2b0df8e71dea13fdc77493f470505e2", "externalIds": {"DBLP": "conf/ancs/JainMSCD21",
      "DOI": "10.1145/3493425.3502768", "CorpusId": 246008906}, "corpusId": 246008906,
      "publicationVenue": {"id": "d004c406-1bed-49fd-a0b1-e46b928f0754", "name": "Symposium
      on Architectures for Networking and Communications Systems", "type": "conference",
      "alternate_names": ["Symp Archit Netw Commun Syst", "Architectures for Networking
      and Communications Systems", "ANCS", "Archit Netw Commun Syst"], "url": "http://www.wikicfp.com/cfp/program?id=171"},
      "url": "https://www.semanticscholar.org/paper/618eef3ab2b0df8e71dea13fdc77493f470505e2",
      "title": "Kubernetes Load-balancing and related network functions using P4",
      "abstract": "This paper highlights the use of the P4 language for the development
      of a Kubernetes load balancer and related network functions that address scale,
      security, and network performance requirements. Load balancers have multiple
      deployment scenarios from edge to data center clusters, including per-node application
      load distributions. A P4 data plane running on an Infrastructure Processing
      Unit (IPU) can serve as a highly performant, secure and flexible data plane
      for Container Network Interfaces (CNI) like Calico. Using P4, we can identify
      the packet headers and operator specific fields for load balancing with consistent
      service delivery across multi-cloud environments. Challenges like per flow monitoring,
      on-demand autoscaling and adding network policy ACLs (Access Control Lists)
      can be addressed with software and P4 data plane extensions on an IPU, eventually
      paving the path for modernized service mesh delivery.", "venue": "Symposium
      on Architectures for Networking and Communications Systems", "year": 2021, "referenceCount":
      0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2021-12-13",
      "journal": {"name": "Proceedings of the Symposium on Architectures for Networking
      and Communications Systems"}, "citationStyles": {"bibtex": "@Article{Jain2021KubernetesLA,\n
      author = {Nupur Jain and Vinoth Mohan and Anjali Singhai and Debashis Chatterjee
      and Dan Daly},\n booktitle = {Symposium on Architectures for Networking and
      Communications Systems},\n journal = {Proceedings of the Symposium on Architectures
      for Networking and Communications Systems},\n title = {Kubernetes Load-balancing
      and related network functions using P4},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2054069486", "name": "Nupur Jain"}, {"authorId": "1491338205",
      "name": "Vinoth Mohan"}, {"authorId": "2150304124", "name": "Anjali Singhai"},
      {"authorId": "2150287457", "name": "Debashis Chatterjee"}, {"authorId": "40634268",
      "name": "Dan Daly"}]}, {"paperId": "619a54a46afc83fda0c01aff41284d0e4a5d51a6",
      "externalIds": {"DBLP": "journals/jwe/WuGFLGZCZW21", "DOI": "10.13052/jwe1540-9589.2081",
      "CorpusId": 244471129}, "corpusId": 244471129, "publicationVenue": {"id": "362af315-de6f-4a12-a166-32319241ba84",
      "name": "Journal of Web Engineering", "type": "journal", "alternate_names":
      ["J Web Eng"], "issn": "1540-9589", "alternate_issns": ["1544-5976"], "url":
      "http://www.rintonpress.com/journals/jwe/index.html"}, "url": "https://www.semanticscholar.org/paper/619a54a46afc83fda0c01aff41284d0e4a5d51a6",
      "title": "T-DSES: A Blockchain-powered Trusted Decentralized Service Eco-System",
      "abstract": "Existing Web service eco-systems are typically managed in a centralized
      manner, which hinders their further development due to inherent disadvantages
      such as trust issues, interest disputes, value separation and so on. The recently
      emerged blockchains provide distributed ledgers that enable parties who do not
      fully trust each other to maintain a set of global states, which provide a natural
      solution. Based on the INKchain, which is an open-source permissioned blockchain
      mechanism extending the Hyperledger Fabric, this paper proposes Trusted Decentralized
      Service Eco-System (T-DSES). T-DSES achieves not only fundamental functionalities
      of conventional systems, but also offers mechanisms to stimulate participants
      to bring trustworthiness to the whole system. The trustworthiness of T-DSES
      is realized by three strategies: reliable information of services and mashups,
      reliable records of participants\u2019 rights, and reliable measurement of participants\u2019
      contributions. A customized token \u201cSToken\u201d is created to act as the
      media of value circulation. In this paper, the overall framework and detailed
      design of T-DSES are presented, especially including how to utilize Kubernetes
      to establish a cloud-based environment. A tailored Web front-end ensures the
      usability of operations. Over real-world data from ProgrammableWeb.com, analyses
      and experiments have been conducted to verify the feasibility and effectiveness
      of the presented approach.", "venue": "Journal of Web Engineering", "year":
      2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2021-11-19", "journal": {"name": "J.
      Web Eng.", "volume": "20"}, "citationStyles": {"bibtex": "@Article{Wu2021TDSESAB,\n
      author = {Xing Wu and Zhenfeng Gao and Yushun Fan and Xiu Li and Liang Gu and
      Jia Zhang and Chang Chen and Hao Zhang and Qiang Wang},\n booktitle = {Journal
      of Web Engineering},\n journal = {J. Web Eng.},\n title = {T-DSES: A Blockchain-powered
      Trusted Decentralized Service Eco-System},\n volume = {20},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "144534218", "name": "Xing Wu"}, {"authorId": "3181579",
      "name": "Zhenfeng Gao"}, {"authorId": "2257161062", "name": "Yushun Fan"}, {"authorId":
      "2141625029", "name": "Xiu Li"}, {"authorId": "2069591026", "name": "Liang Gu"},
      {"authorId": "2108830301", "name": "Jia Zhang"}, {"authorId": "2118431476",
      "name": "Chang Chen"}, {"authorId": "2144617704", "name": "Hao Zhang"}, {"authorId":
      "2153282701", "name": "Qiang Wang"}]}, {"paperId": "619a8e723845735a9ab94eb33bedc728238c40df",
      "externalIds": {"DBLP": "conf/wosp/SedghpourKT22", "DOI": "10.1145/3489525.3511686",
      "CorpusId": 247681698}, "corpusId": 247681698, "publicationVenue": {"id": "cd492924-29c4-496b-9535-082805f228d8",
      "name": "International Conference on Performance Engineering", "type": "conference",
      "alternate_names": ["Int Conf Perform Eng", "ICPE"], "url": "http://www.wikicfp.com/cfp/program?id=1445"},
      "url": "https://www.semanticscholar.org/paper/619a8e723845735a9ab94eb33bedc728238c40df",
      "title": "An Empirical Study of Service Mesh Traffic Management Policies for
      Microservices", "abstract": "A microservice architecture features hundreds or
      even thousands of small loosely coupled services with multiple instances. Because
      microservice performance depends on many factors including the workload, inter-service
      traffic management is complex in such dynamic environments. Service meshes aim
      to handle this complexity and to facilitate management, observability, and communication
      between microservices. Service meshes provide various traffic management policies
      such as circuit breaking and retry mechanisms, which are claimed to protect
      microservices against overload and increase the robustness of communication
      between microservices. However, there have been no systematic studies on the
      effects of these mechanisms on microservice performance and robustness. Furthermore,
      the exact impact of various tuning parameters for circuit breaking and retries
      are poorly understood. This work presents a large set of experiments conducted
      to investigate these issues using a representative microservice benchmark in
      a Kubernetes testbed with the widely used Istio service mesh. Our experiments
      reveal effective configurations of circuit breakers and retries. The findings
      presented will be useful to engineers seeking to configure service meshes more
      systematically and also open up new areas of research for academics in the area
      of service meshes for (autonomic) microservice resource management.", "venue":
      "International Conference on Performance Engineering", "year": 2022, "referenceCount":
      28, "citationCount": 14, "influentialCitationCount": 2, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3489525.3511686",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book"], "publicationDate": "2022-04-09", "journal": {"name": "Proceedings of
      the 2022 ACM/SPEC on International Conference on Performance Engineering"},
      "citationStyles": {"bibtex": "@Article{Sedghpour2022AnES,\n author = {Mohammad
      Reza Saleh Sedghpour and C. Klein and Johan Tordsson},\n booktitle = {International
      Conference on Performance Engineering},\n journal = {Proceedings of the 2022
      ACM/SPEC on International Conference on Performance Engineering},\n title =
      {An Empirical Study of Service Mesh Traffic Management Policies for Microservices},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "1509126020", "name": "Mohammad
      Reza Saleh Sedghpour"}, {"authorId": "2748720", "name": "C. Klein"}, {"authorId":
      "2548512", "name": "Johan Tordsson"}]}, {"paperId": "61ad6a799eebaefdd4857e3c8fa2605de26a2c27",
      "externalIds": {"MAG": "3000285777", "DOI": "10.2523/iptc-20237-ms", "CorpusId":
      212802132}, "corpusId": 212802132, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/61ad6a799eebaefdd4857e3c8fa2605de26a2c27",
      "title": "Transitioning a Legacy Reservoir Simulator to Cloud Native Services",
      "abstract": "\n The digital transformation journey provides new opportunities
      for running simulations through cloud computing, with flexibility in hardware
      resources and availability of a wide array of software tools that can enhance
      decision-making. This work reviews the benefits of running reservoir simulations
      in a cloud environment and demonstrates the efficiency and cost savings. Additionally,
      a workflow for uncertainty analysis and history matching that integrates data
      analysis and machine-learning tools is presented.\n First, the hardware architecture
      must be designed to meet parallel reservoir simulation needs: significant message
      passing occurs between computer nodes, and for satisfactory performance, these
      nodes must be connected by a low-latency network, rather than be randomly located.
      Second, to ensure portability and easy replication across multiple cloud sites
      and platforms, the software performing the simulations must be containerized.
      Third, to reduce the time required to start a new simulation run, the Kubernetes
      platform is used to optimize resource allocation. Finally, reservoir simulation
      in the cloud is no longer merely the running of the simulation model, but it
      is integrated with data management and data analysis tools for decision-making.
      The cloud-based simulation services discussed herein exhibit good results during
      scale up, when a simulation operation requires a larger number of central processing
      units and/or greater memory, and also during scale out, when thousands of operation
      scenarios are necessary for history matching. The \"pay as you go\" pricing
      model reduces the time and capital costs of acquiring the new computing infrastructure
      to nearly zero, and the effectively unlimited scale-out capability can reduce
      the elapsed time for history matching by 80%. The availability of data centers
      in different regions is good for team collaborations. It serves the data management
      tool well to track history data, perform data mining, extract more information,
      and make decisions.\n Compared to traditional reservoir simulation, the cloud-based
      reservoir simulation software as a service model simplifies the process and
      reduces hardware acquisition and maintenance costs. Integrating intelligent
      data analysis with simulation helps quantify the uncertainty in the model and
      enables improved decisions.", "venue": "", "year": 2020, "referenceCount": 0,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Engineering", "source":
      "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Review"], "publicationDate": "2020-01-13", "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Noor2020TransitioningAL,\n
      author = {Zainub Noor and Wang Qinghua and N. Govindaraju and L\u00fc Jianxin
      and Hui Dong},\n title = {Transitioning a Legacy Reservoir Simulator to Cloud
      Native Services},\n year = {2020}\n}\n"}, "authors": [{"authorId": "100692954",
      "name": "Zainub Noor"}, {"authorId": "2201408665", "name": "Wang Qinghua"},
      {"authorId": "3050319", "name": "N. Govindaraju"}, {"authorId": "2026050607",
      "name": "L\u00fc Jianxin"}, {"authorId": "1476707749", "name": "Hui Dong"}]},
      {"paperId": "61ad7df6ac392ecb470464d2805342622648dc04", "externalIds": {"DBLP":
      "conf/codaspy/Kermabon-Bobinnec22", "DOI": "10.1145/3508398.3511515", "CorpusId":
      248182635}, "corpusId": 248182635, "publicationVenue": {"id": "ebc05d3e-7ef6-450a-9496-e9f4f7118d49",
      "name": "Conference on Data and Application Security and Privacy", "type": "conference",
      "alternate_names": ["CODASPY", "Conf Data Appl Secur Priv"], "url": "http://www.codaspy.org/"},
      "url": "https://www.semanticscholar.org/paper/61ad7df6ac392ecb470464d2805342622648dc04",
      "title": "ProSPEC: Proactive Security Policy Enforcement for Containers", "abstract":
      "By providing lightweight and portable support for cloud native applications,
      container environments have gained significant momentum lately. A container
      orchestrator such as Kubernetes can enable the automatic deployment and maintenance
      of a large number of containerized applications. However, due to its critical
      role, a container orchestrator also attracts a wide range of security threats
      exploiting misconfigurations or implementation flaws. Moreover, enforcing security
      policies at runtime against such security threats becomes far more challenging,
      as the large scale of container environments implies high complexity, while
      the high dynamicity demands a short response time. In this paper, we tackle
      this key security challenge to container environments through a proactive approach,
      namely, ProSPEC. Our approach leverages learning-based prediction to conduct
      the computationally intensive steps (e.g., security verification) in advance,
      while keeping the runtime steps (e.g., policy enforcement) lightweight. Consequently,
      ProSPEC can ensure a practical response time (e.g., less than 10 ms in contrast
      to 600 ms with one of the most popular existing approaches) for large container
      environments (up to 800 Pods).", "venue": "Conference on Data and Application
      Security and Privacy", "year": 2022, "referenceCount": 28, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2022-04-14", "journal": {"name":
      "Proceedings of the Twelfth ACM Conference on Data and Application Security
      and Privacy"}, "citationStyles": {"bibtex": "@Article{Kermabon-Bobinnec2022ProSPECPS,\n
      author = {Hugo Kermabon-Bobinnec and Mahmood Gholipourchoubeh and S. Bagheri
      and Suryadipta Majumdar and Yosr Jarraya and M. Pourzandi and Lingyu Wang},\n
      booktitle = {Conference on Data and Application Security and Privacy},\n journal
      = {Proceedings of the Twelfth ACM Conference on Data and Application Security
      and Privacy},\n title = {ProSPEC: Proactive Security Policy Enforcement for
      Containers},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2162541179",
      "name": "Hugo Kermabon-Bobinnec"}, {"authorId": "2162541405", "name": "Mahmood
      Gholipourchoubeh"}, {"authorId": "32758049", "name": "S. Bagheri"}, {"authorId":
      "2877709", "name": "Suryadipta Majumdar"}, {"authorId": "1825183", "name": "Yosr
      Jarraya"}, {"authorId": "1680923", "name": "M. Pourzandi"}, {"authorId": "145020180",
      "name": "Lingyu Wang"}]}, {"paperId": "61c5d52a4ecf8fdbf61f2de3fa1c509b9e199ccc",
      "externalIds": {"MAG": "3101027546", "DBLP": "journals/corr/abs-2003-02319",
      "ArXiv": "2003.02319", "DOI": "10.1051/EPJCONF/202024504042", "CorpusId": 212414853},
      "corpusId": 212414853, "publicationVenue": {"id": "f2cc63fa-90cb-413d-92ce-003d5244a1e8",
      "name": "EPJ Web of Conferences", "type": "journal", "alternate_names": ["EPJ
      Web Conf", "Epj Web of Conferences", "Epj Web Conf"], "issn": "2100-014X", "url":
      "https://web.archive.org/web/*/https:/www.epj-conferences.org/component/issues/",
      "alternate_urls": ["https://www.epj-conferences.org/", "https://web.archive.org/web/20161128151311/http:/www.epj-conferences.org:80/",
      "https://www.epj-conferences.org/component/issues/"]}, "url": "https://www.semanticscholar.org/paper/61c5d52a4ecf8fdbf61f2de3fa1c509b9e199ccc",
      "title": "Moving the California distributed CMS xcache from bare metal into
      containers using Kubernetes", "abstract": "The University of California system
      maintains excellent networking between its campuses and a number of other Universities
      in California, including Caltech, most of them being connected at 100 Gbps.
      UCSD and Caltech Tier2 centers have joined their disk systems into a single
      logical caching system, with worker nodes from both sites accessing data from
      disks at either site. This successful setup has been in place for the last two
      years. However, coherently managing nodes at multiple physical locations is
      not trivial and requires an update on the operations model used. The Pacific
      Research Platform (PRP) provides Kubernetes resource pool spanning resources
      in the science demilitarized zones (DMZs) in several campuses in California
      and worldwide. We show how we migrated the XCache services from bare-metal deployments
      into containers using the PRP cluster. This paper presents the reasoning behind
      our hardware decisions and the experience in migrating to and operating in a
      mixed environment.", "venue": "EPJ Web of Conferences", "year": 2020, "referenceCount":
      6, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.epj-conferences.org/articles/epjconf/pdf/2020/21/epjconf_chep2020_04042.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science", "Physics"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Physics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2020-03-01", "journal":
      {"name": "ArXiv", "volume": "abs/2003.02319"}, "citationStyles": {"bibtex":
      "@Article{Hernandez2020MovingTC,\n author = {E. Hernandez and M. Tadel and J.
      Balcas and A. Tadel and F. W\u00fcrthwein and Diego Davila and J. Guiang and
      I. Sfiligoi},\n booktitle = {EPJ Web of Conferences},\n journal = {ArXiv},\n
      title = {Moving the California distributed CMS xcache from bare metal into containers
      using Kubernetes},\n volume = {abs/2003.02319},\n year = {2020}\n}\n"}, "authors":
      [{"authorId": "30380638", "name": "E. Hernandez"}, {"authorId": "118094873",
      "name": "M. Tadel"}, {"authorId": "9730829", "name": "J. Balcas"}, {"authorId":
      "2329450", "name": "A. Tadel"}, {"authorId": "9369570", "name": "F. W\u00fcrthwein"},
      {"authorId": "2071891390", "name": "Diego Davila"}, {"authorId": "80033439",
      "name": "J. Guiang"}, {"authorId": "2271565", "name": "I. Sfiligoi"}]}, {"paperId":
      "61dbdc7259249074a35be78e1aebb302da8922cd", "externalIds": {"MAG": "3031316336",
      "CorpusId": 226024912}, "corpusId": 226024912, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/61dbdc7259249074a35be78e1aebb302da8922cd",
      "title": "Kubernetes - A Complete DevOps Cookbook", "abstract": "Leverage Kubernetes
      and container architecture to successfully run production-ready workloads\nKey
      Features\nImplement Kubernetes to orchestrate and scale applications proficiently\n\nLeverage
      the latest features of Kubernetes to resolve common as well as complex problems
      in a cloud-native environment\n\nGain hands-on experience in securing, monitoring,
      and troubleshooting your application\nBook Description\nKubernetes is a popular
      open source orchestration platform for managing containers in a cluster environment.
      With this Kubernetes cookbook, you''ll learn how to implement Kubernetes using
      a recipe-based approach. The book will prepare you to create highly available
      Kubernetes clusters on multiple clouds such as Amazon Web Services (AWS), Google
      Cloud Platform (GCP), Azure, Alibaba, and on-premises data centers.\n\nStarting
      with recipes for installing and configuring Kubernetes instances, you''ll discover
      how to work with Kubernetes clients, services, and key metadata. You''ll then
      learn how to build continuous integration/continuous delivery (CI/CD) pipelines
      for your applications, and understand various methods to manage containers.
      As you advance, you''ll delve into Kubernetes'' integration with Docker and
      Jenkins, and even perform a batch process and configure data volumes. You''ll
      get to grips with methods for scaling, security, monitoring, logging, and troubleshooting.
      Additionally, this book will take you through the latest updates in Kubernetes,
      including volume snapshots, creating high availability clusters with kops, running
      workload operators, new inclusions around kubectl and more.\n\nBy the end of
      this book, you''ll have developed the skills required to implement Kubernetes
      in production and manage containers proficiently.\nWhat you will learn\nDeploy
      cloud-native applications on Kubernetes\n\nAutomate testing in the DevOps workflow\n\nDiscover
      and troubleshoot common storage issues\n\nDynamically scale containerized services
      to manage fluctuating traffic needs\n\nUnderstand how to monitor your containerized
      DevOps environment\n\nBuild DevSecOps into CI/CD pipelines\nWho this book is
      for\nThis Kubernetes book is for developers, IT professionals, and DevOps engineers
      and teams who want to use Kubernetes to manage, scale, and orchestrate applications
      in their organization. Basic understanding of Kubernetes and containerization
      is necessary.", "venue": "", "year": 2020, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2020-03-13",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Karslioglu2020KubernetesA,\n
      author = {Murat Karslioglu},\n title = {Kubernetes - A Complete DevOps Cookbook},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "2007318963", "name": "Murat
      Karslioglu"}]}, {"paperId": "61e73040d630dc244f8fde176e9a9d0f4df1c840", "externalIds":
      {"MAG": "2184511496", "CorpusId": 110554683}, "corpusId": 110554683, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/61e73040d630dc244f8fde176e9a9d0f4df1c840",
      "title": "Networking in Containers and Container Clusters", "abstract": "Containers
      are becoming a popular way of deploying applications quickly, cheaply, and reliably.
      As with the early days of virtual machines, a variety of container networking
      configurations have been proposed to deal with the issues of discovery, flexibility
      and performance. Using Docker we present available networking configurations
      along with many of the popular networking setups, their uses, and their problems
      today. A second aspect we will explore are containers in clusters, as these
      systems rely even more heavily on the network. We use Kubernetes as an example
      of this type of system. We present the network setups of the core components
      of Kubernetes: pods and services.", "venue": "", "year": 2015, "referenceCount":
      3, "citationCount": 32, "influentialCitationCount": 2, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Engineering"], "s2FieldsOfStudy":
      [{"category": "Engineering", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Marmol2015NetworkingIC,\n
      author = {Victor Marmol and Rohit Jnagal and Tim Hockin},\n title = {Networking
      in Containers and Container Clusters},\n year = {2015}\n}\n"}, "authors": [{"authorId":
      "2441569", "name": "Victor Marmol"}, {"authorId": "2738611", "name": "Rohit
      Jnagal"}, {"authorId": "52422913", "name": "Tim Hockin"}]}, {"paperId": "61fd015a9fc1c7a9e20d74761201ba5340069361",
      "externalIds": {"CorpusId": 247774151}, "corpusId": 247774151, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/61fd015a9fc1c7a9e20d74761201ba5340069361",
      "title": "GigaOm Radar for Leveraging Federated Kubernetes", "abstract": null,
      "venue": "", "year": null, "referenceCount": 1, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Misc{None,\n author = {David
      S. Linthicum},\n title = {GigaOm Radar for Leveraging Federated Kubernetes}\n}\n"},
      "authors": [{"authorId": "144643472", "name": "David S. Linthicum"}]}, {"paperId":
      "6201d8d139a45f986624dd0369275088402260d4", "externalIds": {"DBLP": "conf/mcsoc/BenedettiCRC23",
      "DOI": "10.1109/MCSoC60832.2023.00091", "CorpusId": 267024611}, "corpusId":
      267024611, "publicationVenue": {"id": "5b948303-c2c7-4f39-addf-9d6f9c706fc0",
      "name": "International Symposium on Embedded Multicore/Many-core Systems-on-Chip",
      "type": "conference", "alternate_names": ["MCSoC", "Int Symp Embed Multicore/many-core
      Syst"], "url": "http://mcsoc-forum.org"}, "url": "https://www.semanticscholar.org/paper/6201d8d139a45f986624dd0369275088402260d4",
      "title": "Scale Up while Scaling Out Microservices in Video Analytics Pipelines",
      "abstract": "Modern video analytics applications comprise multiple microservices
      chained together as pipelines and executed on container orchestration platforms
      like Kubernetes. Kubernetes automatically handles the scaling of these microservices
      for efficient application execution. There are two popular choices for scaling
      microservices in Kubernetes i.e. scaling Out using Horizontal Pod Autoscaler
      (HPA) and scaling Up using Vertical Pod Autoscaler (VPA). Both these have been
      studied independently, but there isn\u2019t much prior work studying the joint
      scaling of these two. This paper investigates joint scaling, i.e., scaling up
      while scaling out (HPA) is in action. In particular, we focus on scaling up
      CPU resources allocated to the application microservices.We show that allocating
      fixed resources does not work well for different workloads for video analytics
      pipelines. We also show that Kubernetes\u2019 VPA in conjunction with HPA does
      not work well for varying application workloads. As a remedy to this problem,
      in this paper, we propose DataX AutoScaleUp, which performs efficiently scaling
      up of CPU resources allocated to microservices in video analytics pipelines
      while Kubernetes\u2019 HPA is operational. DataX AutoScaleUp uses novel techniques
      to adjust the allocated computing resources to different microservices in video
      analytics pipelines to improve overall application performance. Through real-world
      video analytics applications like Face Recognition and Human Attributes, we
      show that DataX AutoScaleUp can achieve up to 1.45X improvement in application
      processing rate when compared to alternative approaches with fixed CPU allocation
      and dynamic CPU allocation using VPA.", "venue": "International Symposium on
      Embedded Multicore/Many-core Systems-on-Chip", "year": 2023, "referenceCount":
      13, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-12-18", "journal": {"name": "2023 IEEE 16th International
      Symposium on Embedded Multicore/Many-core Systems-on-Chip (MCSoC)", "pages":
      "584-591"}, "citationStyles": {"bibtex": "@Article{Benedetti2023ScaleUW,\n author
      = {Priscilla Benedetti and Giuseppe Coviello and Kunal Rao and S. Chakradhar},\n
      booktitle = {International Symposium on Embedded Multicore/Many-core Systems-on-Chip},\n
      journal = {2023 IEEE 16th International Symposium on Embedded Multicore/Many-core
      Systems-on-Chip (MCSoC)},\n pages = {584-591},\n title = {Scale Up while Scaling
      Out Microservices in Video Analytics Pipelines},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "2279725978", "name": "Priscilla Benedetti"}, {"authorId": "2247837141",
      "name": "Giuseppe Coviello"}, {"authorId": "38170711", "name": "Kunal Rao"},
      {"authorId": "1752242", "name": "S. Chakradhar"}]}, {"paperId": "621d8a25d7bec3c958fe599df672d228bad46cd1",
      "externalIds": {"DBLP": "journals/sncs/MetschVHVIE23", "DOI": "10.1007/s42979-023-01698-0",
      "CorpusId": 257560427}, "corpusId": 257560427, "publicationVenue": {"id": "7a7dc89b-e1a6-44df-a496-46c330a87840",
      "name": "SN Computer Science", "type": "journal", "alternate_names": ["SN Comput
      Sci"], "issn": "2661-8907", "alternate_issns": ["2662-995X"], "url": "https://link.springer.com/journal/42979"},
      "url": "https://www.semanticscholar.org/paper/621d8a25d7bec3c958fe599df672d228bad46cd1",
      "title": "Intent-Driven Orchestration: Enforcing Service Level Objectives for
      Cloud Native Deployments", "abstract": null, "venue": "SN Computer Science",
      "year": 2023, "referenceCount": 23, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-03-17", "journal": {"name": "SN
      Computer Science", "pages": "1-13", "volume": "4"}, "citationStyles": {"bibtex":
      "@Article{Metsch2023IntentDrivenOE,\n author = {Thijs Metsch and Magdalena Viktorsson
      and Adrian Hoban and Monica Vitali and Ravi Iyer and E. Elmroth},\n booktitle
      = {SN Computer Science},\n journal = {SN Computer Science},\n pages = {1-13},\n
      title = {Intent-Driven Orchestration: Enforcing Service Level Objectives for
      Cloud Native Deployments},\n volume = {4},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "1705630", "name": "Thijs Metsch"}, {"authorId": "2211752276",
      "name": "Magdalena Viktorsson"}, {"authorId": "2211749910", "name": "Adrian
      Hoban"}, {"authorId": "143686989", "name": "Monica Vitali"}, {"authorId": "2211750055",
      "name": "Ravi Iyer"}, {"authorId": "1685517", "name": "E. Elmroth"}]}, {"paperId":
      "622366aeb4730e5a002ae814a20d066c05a99c99", "externalIds": {"DOI": "10.3844/jcssp.2022.860.867",
      "CorpusId": 252533332}, "corpusId": 252533332, "publicationVenue": {"id": "449b5e8b-cda2-4a8e-b27b-9b7917ded9eb",
      "name": "Journal of Computer Science", "type": "journal", "alternate_names":
      ["Journal of Computational Science", "J Comput Sci"], "issn": "1549-3636", "alternate_issns":
      ["1877-7503", "2362-0110"], "url": "https://thescipub.com/journals/jcs/", "alternate_urls":
      ["http://ansinet.org/sciencepub/c4p.php?j_id=jcs", "https://www.journals.elsevier.com/journal-of-computational-science",
      "http://journals.sjp.ac.lk/index.php/jcs", "http://www.sciencedirect.com/science/journal/18777503"]},
      "url": "https://www.semanticscholar.org/paper/622366aeb4730e5a002ae814a20d066c05a99c99",
      "title": "Framework for Containers Orchestration to handle the Scientific Workloads
      using Kubernetes", "abstract": ": The lightweight nature of Operating System
      virtualization give birth to the containers, and their high efficiency for application
      deployment prefers its usage in Cloud computing. Containers encapsulate and
      bundle the required dependencies for application development and deployment
      in libs packages as a single entity. The nature of containers eases application
      migration within the High-Performance Computing environment to handle the scientific
      workloads smoothly. Singularity containers are aimed to be only for High-Performance
      Computing (HPC) applications. The existing HPC workload managers are good with
      container monitoring, scheduling, and resource management, but container orchestration
      is always a concern. This study proposes a framework that will ease container
      orchestration using Kubernetes to handle the scientific applications workload.
      HPC cluster is built using interconnected containers in a private cloud environment.
      The architecture is derived based on the required configuration for containers
      to deploy the application and scheduling jobs.", "venue": "Journal of Computer
      Science", "year": 2022, "referenceCount": 17, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://thescipub.com/pdf/jcssp.2022.860.867.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2022-09-01",
      "journal": {"name": "Journal of Computer Science"}, "citationStyles": {"bibtex":
      "@Article{Abhishek2022FrameworkFC,\n author = {M. Abhishek and D. Rao and K.
      Subrahmanyam},\n booktitle = {Journal of Computer Science},\n journal = {Journal
      of Computer Science},\n title = {Framework for Containers Orchestration to handle
      the Scientific Workloads using Kubernetes},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "9102634", "name": "M. Abhishek"}, {"authorId": "47299401", "name":
      "D. Rao"}, {"authorId": "144340734", "name": "K. Subrahmanyam"}]}, {"paperId":
      "622dcdaedf9cbb7a083e4a6c110450f36f3bda43", "externalIds": {"DBLP": "conf/amcis/Lumbard18",
      "MAG": "2899399365", "CorpusId": 53046407}, "corpusId": 53046407, "publicationVenue":
      {"id": "42b29bb0-699b-4502-8619-053ee5448d54", "name": "Americas Conference
      on Information Systems", "type": "conference", "alternate_names": ["Am Conf
      Inf Syst", "AMCIS"], "url": "http://www.wikicfp.com/cfp/program?id=148"}, "url":
      "https://www.semanticscholar.org/paper/622dcdaedf9cbb7a083e4a6c110450f36f3bda43",
      "title": "Shared Design: Design Discourse in Open Source Software Communities",
      "abstract": "Design \u2014 at the junction of technology, organizations, and
      individuals \u2014 is important to Information Systems research. In this study,
      open source software projects provide the context for exploring design. Communities
      often have specialized discourses and vocabularies that are embodied within
      actions of the community. To understand design as a shared process, I propose
      a qualitative field study to examine design discourse in large collaborative
      corporate design processes through interviews and content analysis of trace
      data. I tell a story of shared design as it occurs in three open source software
      communities \u2013 CHAOSS, Kubernetes, and Hyperledger. Specifically, I explore
      the central role of discourse in these complex environments through the lens
      of Stigmergy. Through the examination of discourse and coordination in open
      source projects, I will provide a theoretical critique of Stigmergic Theory
      by extending the many paths of discourse evident in the shared design processes
      associated with open source software development.", "venue": "Americas Conference
      on Information Systems", "year": 2018, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Sociology", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "citationStyles": {"bibtex": "@Article{Lumbard2018SharedDD,\n author =
      {Kevin Lumbard},\n booktitle = {Americas Conference on Information Systems},\n
      title = {Shared Design: Design Discourse in Open Source Software Communities},\n
      year = {2018}\n}\n"}, "authors": [{"authorId": "30449582", "name": "Kevin Lumbard"}]},
      {"paperId": "622eff947cea25d38c4d2c2083bbdd6cb3af5161", "externalIds": {"MAG":
      "3038198785", "DOI": "10.14372/IEMEK.2020.15.3.129", "CorpusId": 226401024},
      "corpusId": 226401024, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/622eff947cea25d38c4d2c2083bbdd6cb3af5161",
      "title": "Kubernetes scheduler Framework Implementation with Realtime Resource
      Monitoring", "abstract": null, "venue": "", "year": 2020, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "129-137", "volume": "15"}, "citationStyles": {"bibtex": "@Inproceedings{\uae40\ud0dc\uc6012020KubernetesSF,\n
      author = {\uae40\ud0dc\uc601 and Lee Jaeryun and Kim Tae Hyun and Ingeol Chun
      and \ubc15\uc81c\ub9cc and Jin\uff0c Sung Geun},\n pages = {129-137},\n title
      = {Kubernetes scheduler Framework Implementation with Realtime Resource Monitoring},\n
      volume = {15},\n year = {2020}\n}\n"}, "authors": [{"authorId": "2056196712",
      "name": "\uae40\ud0dc\uc601"}, {"authorId": "2019187394", "name": "Lee Jaeryun"},
      {"authorId": "150172955", "name": "Kim Tae Hyun"}, {"authorId": "2551349", "name":
      "Ingeol Chun"}, {"authorId": "98674295", "name": "\ubc15\uc81c\ub9cc"}, {"authorId":
      "2019297414", "name": "Jin\uff0c Sung Geun"}]}, {"paperId": "624cb7bd67d322241fa630a445dda61fa5bc7001",
      "externalIds": {"CorpusId": 237431384}, "corpusId": 237431384, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/624cb7bd67d322241fa630a445dda61fa5bc7001",
      "title": "Best Practices for Operating HiveMQ and MQTT on Kubernetes", "abstract":
      null, "venue": "", "year": 2021, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Medicine", "source": "s2-fos-model"}], "publicationTypes": null,
      "publicationDate": null, "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Rohmann2021BestPF,\n
      author = {Christian Rohmann and M. Hofschen},\n title = {Best Practices for
      Operating HiveMQ and MQTT on Kubernetes},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "2125818422", "name": "Christian Rohmann"}, {"authorId": "88164874",
      "name": "M. Hofschen"}]}, {"paperId": "62662c9d0e350d0f07422e7c783450e89f069e39",
      "externalIds": {"DBLP": "conf/ict-dm/GiarreAC23", "DOI": "10.1109/ICT-DM58371.2023.10286946",
      "CorpusId": 264458492}, "corpusId": 264458492, "publicationVenue": {"id": "42cde00d-437d-4bc3-a179-1353dd07f95f",
      "name": "International Conference on Information and Communication Technologies
      for Disaster Management", "type": "conference", "alternate_names": ["ICT-DM",
      "Int Conf Inf Commun Technol Disaster Manag"]}, "url": "https://www.semanticscholar.org/paper/62662c9d0e350d0f07422e7c783450e89f069e39",
      "title": "A Service Migration Strategy for Resilient Multi-Domain Networks in
      Outage Scenarios", "abstract": "Network slicing has emerged as a crucial technology
      in 5G and post-5G networks, enabling the creation of customized logical networks
      on a shared physical infrastructure. However, the problem of service placement,
      which entails determining the optimal deployment of network functions within
      each slice, becomes particularly challenging during outage scenarios. Service
      migration serves as a critical technique for reconfiguring and relocating network
      functions, thereby ensuring the resilience and availability of the slices. This
      paper presents a service migration strategy specifically designed for resilient
      multi-orchestrator multi-domain networks. Our approach considers multidomain
      services composed of components deployed across different network domains using
      Kubernetes clusters. The abstract nature of this migration strategy allows for
      its adaptation to different orchestrators within a cluster, facilitating the
      integration of more diverse and heteroegeneous systems.", "venue": "International
      Conference on Information and Communication Technologies for Disaster Management",
      "year": 2023, "referenceCount": 6, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2023-09-13", "journal": {"name": "2023 International
      Conference on Information and Communication Technologies for Disaster Management
      (ICT-DM)", "pages": "1-4"}, "citationStyles": {"bibtex": "@Article{Giarr\u00e92023ASM,\n
      author = {Federico Giarr\u00e9 and Y. H. Aoul and Soraya Ait Chellouche},\n
      booktitle = {International Conference on Information and Communication Technologies
      for Disaster Management},\n journal = {2023 International Conference on Information
      and Communication Technologies for Disaster Management (ICT-DM)},\n pages =
      {1-4},\n title = {A Service Migration Strategy for Resilient Multi-Domain Networks
      in Outage Scenarios},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2261532977",
      "name": "Federico Giarr\u00e9"}, {"authorId": "1761002", "name": "Y. H. Aoul"},
      {"authorId": "2670227", "name": "Soraya Ait Chellouche"}]}, {"paperId": "626b7816b142af7f951fd0fcf918ce90bd6bae39",
      "externalIds": {"DBLP": "journals/corr/abs-1912-03923", "MAG": "2993784658",
      "CorpusId": 208921272}, "corpusId": 208921272, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/626b7816b142af7f951fd0fcf918ce90bd6bae39",
      "title": "Nova - A rainbow cloud over the Alps", "abstract": "A pooled and shared
      on-demand Infrastructure as a Service (IaaS), based on the Openstack software
      suite, was rolled out on the Grenoble university campus in 2018 and updated
      in 2019.We present the methods used to deploy and manage the infrastructure:
      racadm and preseed for basic system installation, then Kolla for Openstack deployment.
      This latter solution, based on containers for each service, enables a centralised
      and logged configuration (GitLab) of controllers and calculation nodes. The
      solution is the benchmark solution for a reproducible deployment of Openstack.
      We have been able to expand our cloud easily with new nodes. The change in version
      of the basic OS was also successfully tested despite a few small hitches...
      As security is a key element in the proper operation of this type of shared
      service, each project has been made watertight and its data perfectly isolated
      from other projects, thanks to the encryption of all network flows in VXLANs.This
      OpenStack infotainment platform is operational. What is it all for? For example,
      our first users use the Jupyter Notebook through the provision of Jupyterhub
      servers (web portal); the Distributed Health Assessment IT System (SIDES project);
      the continuous integration in connection with the GitLab platform; the test
      for the Kubernetes container scheduler or the calculation and visualisation
      software, etc. Highly varied uses that other platforms had difficulty offering.Nova,
      a new platform, was born.", "venue": "arXiv.org", "year": 2019, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-12-09", "journal": {"name": "ArXiv",
      "volume": "abs/1912.03923"}, "citationStyles": {"bibtex": "@Article{Gibelin2019NovaA,\n
      author = {Nicolas Gibelin and R\u00e9mi Cailletaud and Gabriel Moreau and Jean-Franccois
      Scariot and Gabrielle Feltin and Anthony Defize},\n booktitle = {arXiv.org},\n
      journal = {ArXiv},\n title = {Nova - A rainbow cloud over the Alps},\n volume
      = {abs/1912.03923},\n year = {2019}\n}\n"}, "authors": [{"authorId": "47065287",
      "name": "Nicolas Gibelin"}, {"authorId": "72358913", "name": "R\u00e9mi Cailletaud"},
      {"authorId": "2069794201", "name": "Gabriel Moreau"}, {"authorId": "1452732935",
      "name": "Jean-Franccois Scariot"}, {"authorId": "2084174180", "name": "Gabrielle
      Feltin"}, {"authorId": "1452732615", "name": "Anthony Defize"}]}, {"paperId":
      "6270531fb7731f6f7ecfd02289b3b2c9e302b678", "externalIds": {"MAG": "3209132308",
      "DOI": "10.5281/ZENODO.4083297", "CorpusId": 244963343}, "corpusId": 244963343,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6270531fb7731f6f7ecfd02289b3b2c9e302b678",
      "title": "A National View of Containers and Kubernetes in Research: Shared challenges
      and opportunities", "abstract": "Steven Manos\u200b1\u200b, Kieran Spear\u200b2\u200b,
      Paula A. Martinez\u200b3\u200b , Steve Quenette\u200b4\u200b , Mark Gray\u200b5\u200b,
      Andrew White\u200b6\u200b, ARCOS Working Group\u200b 1\u200bUniversity of Melbourne
      eResearch Centre, Melbourne, Australia 2,6\u200bAustralian Research Data Commons,
      Melbourne, Australia 3\u200bNational Imaging Facility (NIF), University of Queensland,
      Brisbane, Australia 4\u200bMonash University Monash eResearch Centre, Melbourne,
      Australia 5\u200bPawsey Supercomputing Centre, Perth, Australia 7\u200bSee Appendix
      C for list of members and affiliations.", "venue": "", "year": 2020, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://zenodo.org/record/4083297/files/A%20National%20View%20of%20Containers%20and%20Kubernetes%20in%20Research%20-%20v1.0%20for%20community%20consultation%20%281%29.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Business"], "s2FieldsOfStudy": [{"category":
      "Business", "source": "external"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2020-10-13", "journal": {"name":
      "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Manos2020ANV,\n
      author = {Stephen S. Manos and Kieran Spear and P. Martinez and S. Quenette
      and Mark. Gray and Andrew White},\n title = {A National View of Containers and
      Kubernetes in Research: Shared challenges and opportunities},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "67299499", "name": "Stephen S. Manos"}, {"authorId":
      "2143766630", "name": "Kieran Spear"}, {"authorId": "1663603819", "name": "P.
      Martinez"}, {"authorId": "145729689", "name": "S. Quenette"}, {"authorId": "145881764",
      "name": "Mark. Gray"}, {"authorId": "2092205377", "name": "Andrew White"}]},
      {"paperId": "628b5a10c0b56dc1e226e3d0fa2b2b61cee7c9db", "externalIds": {"MAG":
      "2808643375", "CorpusId": 64548270}, "corpusId": 64548270, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/628b5a10c0b56dc1e226e3d0fa2b2b61cee7c9db",
      "title": "The DevOps 2.0 Toolkit: Automating the Continuous Deployment Pipeline
      with Containerized Microservices", "abstract": "This book is about different
      techniques that help us architect software in a better and more efficient way
      with microservices packed as immutable containers, tested and deployed continuously
      to servers that are automatically provisioned with configuration management
      tools. It''s about fast, reliable and continuous deployments with zero-downtime
      and ability to roll-back. It''s about scaling to any number of servers, design
      of self-healing systems capable of recuperation from both hardware and software
      failures and about centralized logging and monitoring of the cluster. In other
      words, this book envelops the whole microservices development and deployment
      lifecycle using some of the latest and greatest practices and tools. We''ll
      use Docker, Kubernetes, Ansible, Ubuntu, Docker Swarm and Docker Compose, Consul,
      etcd, Registrator, confd, and so on. We''ll go through many practices and even
      more tools. Finally, while there will be a lot of theory, this is a hands-on
      book. You won''t be able to complete it by reading it in a metro on a way to
      work. You''ll have to read this book while in front of the computer and get
      your hands dirty.", "venue": "", "year": 2016, "referenceCount": 0, "citationCount":
      19, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2016-02-06", "journal": {"name": "", "volume": ""},
      "citationStyles": {"bibtex": "@Inproceedings{Farcic2016TheD2,\n author = {Viktor
      Farcic},\n title = {The DevOps 2.0 Toolkit: Automating the Continuous Deployment
      Pipeline with Containerized Microservices},\n year = {2016}\n}\n"}, "authors":
      [{"authorId": "70451877", "name": "Viktor Farcic"}]}, {"paperId": "629858428a3426785279ade0d24303dd6880b195",
      "externalIds": {"MAG": "2486872069", "DOI": "10.1007/978-1-4842-1907-2_5", "CorpusId":
      64011660}, "corpusId": 64011660, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/629858428a3426785279ade0d24303dd6880b195",
      "title": "Using PostgreSQL Database", "abstract": null, "venue": "", "year":
      2016, "referenceCount": 0, "citationCount": 3, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "pages": "115-139", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Vohra2016UsingPD,\n author
      = {Deepak Vohra},\n pages = {115-139},\n title = {Using PostgreSQL Database},\n
      year = {2016}\n}\n"}, "authors": [{"authorId": "3026624", "name": "Deepak Vohra"}]},
      {"paperId": "629cedbacbd36c17966a2afa84c2d3527adffca8", "externalIds": {"DOI":
      "10.1007/978-1-4842-7170-4", "CorpusId": 237272154}, "corpusId": 237272154,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/629cedbacbd36c17966a2afa84c2d3527adffca8",
      "title": "Pro Java Microservices with Quarkus and Kubernetes: A Hands-on Guide",
      "abstract": null, "venue": "", "year": 2021, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://link.springer.com/content/pdf/bfm%3A978-1-4842-7170-4%2F1", "status":
      "GREEN"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["Book"], "publicationDate":
      null, "journal": {"name": "Pro Java Microservices with Quarkus and Kubernetes"},
      "citationStyles": {"bibtex": "@Book{Lamouchi2021ProJM,\n author = {Nebrass Lamouchi},\n
      journal = {Pro Java Microservices with Quarkus and Kubernetes},\n title = {Pro
      Java Microservices with Quarkus and Kubernetes: A Hands-on Guide},\n year =
      {2021}\n}\n"}, "authors": [{"authorId": "2124148023", "name": "Nebrass Lamouchi"}]},
      {"paperId": "62a0f3f6d85d44066d9c6e90b646a47522caed75", "externalIds": {"MAG":
      "2910784995", "DOI": "10.1109/IEMCON.2018.8614791", "CorpusId": 58675926}, "corpusId":
      58675926, "publicationVenue": {"id": "04c27a39-9b93-4b31-961a-c38ec6b40bbc",
      "name": "IEEE Annual Information Technology, Electronics and Mobile Communication
      Conference", "type": "conference", "alternate_names": ["IEEE Annu Inf Technol
      Electron Mob Commun Conf", "Int Conf Workshop Comput Commun", "IEMCON", "International
      Conference and Workshop on Computing and Communication"]}, "url": "https://www.semanticscholar.org/paper/62a0f3f6d85d44066d9c6e90b646a47522caed75",
      "title": "Monitoring Resources of Machine Learning Engine In Microservices Architecture",
      "abstract": "Microservices architecture facilitates building distributed scalable
      software products, usually deployed in a cloud environment. Monitoring microservices
      deployed in a Kubernetes orchestrated distributed advanced analytics machine
      learning engines is at the heart of many cloud resource management solutions.
      In addition, measuring resource utilization at more granular level such as per
      query or sub-query basis in an MPP Machine Learning Engine (MLE) is key to resource
      planning and is also the focus of our work. In this paper we propose two mechanisms
      to measure resource utilization in Teradata Machine Learning Engine (MLE). First
      mechanism is the Cluster Resource Monitoring (CRM). CRM is a high-level resource
      measuring mechanism for IT administrators and analytics users to visualize,
      plot, generates alerts and perform live and historical-analytics on overall
      cluster usage statistics. Second mechanism is the Query Resource Monitoring
      (QRM). QRM enables IT administrators and MLE users to measure compute resource
      utilization per individual query and its sub-queries. When query takes long
      time, QRM provides insights. This is useful to identify expensive phases within
      a query that tax certain resources more and skew the work distribution. We show
      the results of proposed mechanisms and highlight use-cases.", "venue": "IEEE
      Annual Information Technology, Electronics and Mobile Communication Conference",
      "year": 2018, "referenceCount": 14, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2018-11-01", "journal": {"name": "2018 IEEE 9th Annual Information Technology,
      Electronics and Mobile Communication Conference (IEMCON)", "pages": "486-492"},
      "citationStyles": {"bibtex": "@Conference{Parekh2018MonitoringRO,\n author =
      {Nikunj Parekh and Swathi Kurunji and Alan Beck},\n booktitle = {IEEE Annual
      Information Technology, Electronics and Mobile Communication Conference},\n
      journal = {2018 IEEE 9th Annual Information Technology, Electronics and Mobile
      Communication Conference (IEMCON)},\n pages = {486-492},\n title = {Monitoring
      Resources of Machine Learning Engine In Microservices Architecture},\n year
      = {2018}\n}\n"}, "authors": [{"authorId": "47365146", "name": "Nikunj Parekh"},
      {"authorId": "3219061", "name": "Swathi Kurunji"}, {"authorId": "2052848687",
      "name": "Alan Beck"}]}, {"paperId": "62ba6f8a812174942afdd2c4620f07b815e790ca",
      "externalIds": {"DBLP": "conf/iccS/OrzechowskiBSK20", "MAG": "3035905455", "PubMedCentral":
      "7302264", "DOI": "10.1007/978-3-030-50371-0_16", "CorpusId": 219799969}, "corpusId":
      219799969, "publicationVenue": {"id": "46990654-eb6c-4674-96bc-ba905dab2a86",
      "name": "International Conference on Conceptual Structures", "type": "conference",
      "alternate_names": ["IEEE Int Conf Commun Syst", "International Conference on
      Computational Science", "ICCS", "International Conference on Curves and Surfaces",
      "Int Conf Concept Struct", "Int Conf Curve Surf", "IEEE International Conference
      on Complex Systems", "IEEE International Conference on Communication Systems",
      "Int Conf Comput Sci", "IEEE Int Conf Complex Syst"], "url": "http://www.wikicfp.com/cfp/program?id=1321",
      "alternate_urls": ["https://link.springer.com/conference/iccs-computsci"]},
      "url": "https://www.semanticscholar.org/paper/62ba6f8a812174942afdd2c4620f07b815e790ca",
      "title": "Reproducibility of Computational Experiments on Kubernetes-Managed
      Container Clouds with HyperFlow", "abstract": null, "venue": "International
      Conference on Conceptual Structures", "year": 2020, "referenceCount": 18, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://link.springer.com/content/pdf/10.1007%2F978-3-030-50371-0_16.pdf",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-05-26", "journal":
      {"name": "Computational Science \u2013 ICCS 2020", "pages": "220 - 233", "volume":
      "12137"}, "citationStyles": {"bibtex": "@Article{Orzechowski2020ReproducibilityOC,\n
      author = {M. Orzechowski and B. Bali\u015b and R. S\u0142ota and J. Kitowski},\n
      booktitle = {International Conference on Conceptual Structures},\n journal =
      {Computational Science \u2013 ICCS 2020},\n pages = {220 - 233},\n title = {Reproducibility
      of Computational Experiments on Kubernetes-Managed Container Clouds with HyperFlow},\n
      volume = {12137},\n year = {2020}\n}\n"}, "authors": [{"authorId": "1763221",
      "name": "M. Orzechowski"}, {"authorId": "1960359", "name": "B. Bali\u015b"},
      {"authorId": "145682061", "name": "R. S\u0142ota"}, {"authorId": "1741908",
      "name": "J. Kitowski"}]}, {"paperId": "62ba74349742de17340f38ade29fee1c988b3e17",
      "externalIds": {"DBLP": "journals/jwe/ParkBCK23", "DOI": "10.13052/jwe1540-9589.2261",
      "CorpusId": 267035759}, "corpusId": 267035759, "publicationVenue": {"id": "362af315-de6f-4a12-a166-32319241ba84",
      "name": "Journal of Web Engineering", "type": "journal", "alternate_names":
      ["J Web Eng"], "issn": "1540-9589", "alternate_issns": ["1544-5976"], "url":
      "http://www.rintonpress.com/journals/jwe/index.html"}, "url": "https://www.semanticscholar.org/paper/62ba74349742de17340f38ade29fee1c988b3e17",
      "title": "Fully Decentralized Horizontal Autoscaling for Burst of Load in Fog
      Computing", "abstract": "With the increasing number of Web of Things devices,
      the network and processing delays in the cloud have also increased. As a solution,
      fog computing has emerged, placing computational resources closer to the user
      to lower the communication overhead and congestion in the cloud. In fog computing
      systems, microservices are deployed as containers, which require an orchestration
      tool like Kubernetes to support service discovery, placement, and recovery.
      A key challenge in the orchestration of microservices is automatically scaling
      the microservices in case of an unpredictable burst of load. In cloud computing,
      a centralized autoscaler can monitor the deployed microservice instances and
      make scaling actions based on the monitored metric values. However, monitoring
      an increasing number of microservices in fog computing can cause excessive network
      overhead and thereby delay the time to scaling action. We propose DESA, a fully
      DEcentralized Self-adaptive Autoscaler through which microservice instances
      make their own scaling decisions, cloning or terminating themselves through
      self-monitoring. We evaluate DESA in a simulated fog computing environment with
      different numbers of fog nodes. Furthermore, we conduct a case study with the
      1998 World Cup website access log, examining DESA\u2019s performance in a realistic
      scenario. The results show that DESA successfully reduces the scaling reaction
      time in large-scale fog computing systems compared to the centralized approach.
      Moreover, DESA resulted in a similar maximum number of instances and lower average
      CPU utilization during bursts of load.", "venue": "Journal of Web Engineering",
      "year": 2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://journals.riverpublishers.com/index.php/JWE/article/download/24669/19151",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-12-26", "journal": {"name": "J.
      Web Eng.", "pages": "849-870", "volume": "22"}, "citationStyles": {"bibtex":
      "@Article{Park2023FullyDH,\n author = {Eun-Chan Park and Kyeong-Deok Baek and
      Eunho Cho and In-Young Ko},\n booktitle = {Journal of Web Engineering},\n journal
      = {J. Web Eng.},\n pages = {849-870},\n title = {Fully Decentralized Horizontal
      Autoscaling for Burst of Load in Fog Computing},\n volume = {22},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2279863932", "name": "Eun-Chan Park"}, {"authorId":
      "150169995", "name": "Kyeong-Deok Baek"}, {"authorId": "2279839946", "name":
      "Eunho Cho"}, {"authorId": "2279838263", "name": "In-Young Ko"}]}, {"paperId":
      "62c0adc8d16d33f35cd67e7ad49197a2b27812d2", "externalIds": {"DBLP": "conf/supercomputer/YuanW20",
      "PubMedCentral": "7571545", "MAG": "3096043732", "DOI": "10.1007/978-3-030-59851-8_24",
      "CorpusId": 224804238}, "corpusId": 224804238, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/62c0adc8d16d33f35cd67e7ad49197a2b27812d2",
      "title": "Bioinformatics Application with Kubeflow for Batch Processing in Clouds",
      "abstract": null, "venue": "ISC Workshops", "year": 2020, "referenceCount":
      0, "citationCount": 9, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://link.springer.com/content/pdf/10.1007%2F978-3-030-59851-8_24.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Biology", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2020-06-22", "journal":
      {"name": "High Performance Computing", "pages": "355 - 367", "volume": "12321"},
      "citationStyles": {"bibtex": "@Article{Yuan2020BioinformaticsAW,\n author =
      {D. Yuan and T. Wildish},\n booktitle = {ISC Workshops},\n journal = {High Performance
      Computing},\n pages = {355 - 367},\n title = {Bioinformatics Application with
      Kubeflow for Batch Processing in Clouds},\n volume = {12321},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "2000028107", "name": "D. Yuan"}, {"authorId": "3100924",
      "name": "T. Wildish"}]}, {"paperId": "62e3f3dfa413d7c4162bb0a86ac3cea792b77d99",
      "externalIds": {"DOI": "10.1109/ICESC51422.2021.9532917", "CorpusId": 237619826},
      "corpusId": 237619826, "publicationVenue": {"id": "a4f30d5d-eda9-47ef-adc5-accd6c401486",
      "name": "International Conference Electronic Systems, Signal Processing and
      Computing Technologies [ICESC-]", "type": "conference", "alternate_names": ["ICESC",
      "Int Conf Electron Syst Signal Process Comput Technol [ICESC"]}, "url": "https://www.semanticscholar.org/paper/62e3f3dfa413d7c4162bb0a86ac3cea792b77d99",
      "title": "Containerization: Cloud Computing based Inspiration Technology for
      Adoption through Docker and Kubernetes", "abstract": "The field of cloud computing
      has been evolving rapidly since inception. Cloud is the virtual pool of resources
      which can be served to the user through SaaS, PaaS and IaaS flavours. No cloud
      can be existed without virtualization. With Virtual Machine, the bare metal
      is virtualized to run multiple Operating System instances. These VMs serve to
      the users for performing the tasks. All are independent units and user has complete
      ownership and control to install the required softwares and use as per the wish.
      The VM solves many problems by optimizing the resources. The developers concern
      that the code is working fine on the development environment, but fail to work
      on testing or production environment due to the environment differences, if
      any. So, the Containerization comes into the picture to address such challenges.
      In this paper, various aspects of Containerization are explored and highlighted.
      The Container runtime environment-Docker and Container orchestration tool-Kubernetes
      are focused and deployed for exploring the possibilities of Containerization
      adoption, which automate the Container deployment, scaling and load balancing.",
      "venue": "International Conference Electronic Systems, Signal Processing and
      Computing Technologies [ICESC-]", "year": 2021, "referenceCount": 13, "citationCount":
      5, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2021-08-04", "journal":
      {"name": "2021 Second International Conference on Electronics and Sustainable
      Communication Systems (ICESC)", "pages": "1996-2003"}, "citationStyles": {"bibtex":
      "@Conference{Hardikar2021ContainerizationCC,\n author = {Sanjay Hardikar and
      Pradeep Ahirwar and S. Rajan},\n booktitle = {International Conference Electronic
      Systems, Signal Processing and Computing Technologies [ICESC-]},\n journal =
      {2021 Second International Conference on Electronics and Sustainable Communication
      Systems (ICESC)},\n pages = {1996-2003},\n title = {Containerization: Cloud
      Computing based Inspiration Technology for Adoption through Docker and Kubernetes},\n
      year = {2021}\n}\n"}, "authors": [{"authorId": "2127994235", "name": "Sanjay
      Hardikar"}, {"authorId": "2094357161", "name": "Pradeep Ahirwar"}, {"authorId":
      "47560716", "name": "S. Rajan"}]}, {"paperId": "62f772c0b9d7c4c7ea059dfccf55d61ed3e43815",
      "externalIds": {"MAG": "2980318185", "CorpusId": 208098296}, "corpusId": 208098296,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/62f772c0b9d7c4c7ea059dfccf55d61ed3e43815",
      "title": "Developing and deploying NFV solutions with OpenStack, Kubernetes
      and Docker", "abstract": "This document explains the deployment of virtualized
      network functions in a private cloud through ONAP, together with the architecture
      used, the machines employed and the software required. ONAP (Open Networking
      Automation Platform) is an open source project of the Linux Foundation, which
      provides a platform for real - time orchestration and automation of physical
      and virtual network functions.ONAP allows designing, orchest rating and managing
      all the elements related to virtualized network functions. In order to deploy
      ONAP, we acquired and installed a cloud infrastructure from scratch following
      the latest market best practices, which included setting up the servers and
      ne twork devices, configuring their NICs and installing all the software required:
      OpenStack, ONAP, etc. Moreover, these software solutions also have to be properly
      configured and installed, something that will be clarified in this paper along
      with the conf iguration of the cloud network. ONAP, being a novel solution,
      is not fully developed. Meaning it has presented many challenges and setbacks
      we have had to overcome in order to deploy it successfully in our environment.
      The final goal of this project is to create an environment in a private cloud
      with working virtualized network functions and to serve as a guide for other
      people who desire to deploy ONAP, overcoming all the obstacles we had to face
      and providing solutions, or at least, alternatives to th e plethora of issues
      they might stumble across, just as we did. Everything discussed in this document
      can be replicated in environments of greater scope than the ones defined in
      the paper, to the point that what is explained can even be applied in produc
      tion scenarios by telephone operators.", "venue": "", "year": 2019, "referenceCount":
      0, "citationCount": 1, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2019-07-23", "journal": {"name":
      "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Luque2019DevelopingAD,\n
      author = {A. Luque},\n title = {Developing and deploying NFV solutions with
      OpenStack, Kubernetes and Docker},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "2071248179", "name": "A. Luque"}]}, {"paperId": "634d035760d9454ac23e4194bb923488f6722243",
      "externalIds": {"DBLP": "conf/ipps/KlosRS21", "DOI": "10.1109/IPDPSW52791.2021.00094",
      "CorpusId": 235639328}, "corpusId": 235639328, "publicationVenue": {"id": "7ddefda0-174f-499a-9dce-855879dd01b7",
      "name": "IEEE International Symposium on Parallel & Distributed Processing,
      Workshops and Phd Forum", "type": "conference", "alternate_names": ["IPDPSW",
      "IEEE Int Symp Parallel  Distrib Process Work Phd Forum"]}, "url": "https://www.semanticscholar.org/paper/634d035760d9454ac23e4194bb923488f6722243",
      "title": "Scalable and Highly Available Multi-Objective Neural Architecture
      Search in Bare Metal Kubernetes Cluster", "abstract": "The interest in deep
      neural networks for solving computer vision task has dramatically increased.
      Due to the heavy influence of the neural networks architecture on its predictive
      accuracy, neural architecture search has gained much attention in recent years.
      This research area typically implies a high computational burden and thus, requires
      high scalability as well as availability to ensure no data loss or waist of
      computational power. Moreover, the thinking of developing applications has changed
      from monolithic once to microservices. Hence, we developed a highly scalable
      and available multi-objective neural architecture search and adopted to the
      modern thinking of developing application by subdividing an already existing,
      monolithic neural architecture search \u2013 based on a genetic algorithm \u2013
      into microservices. Furthermore, we adopted the initial population creation
      by 1,000 mutations of each individual, extended the approach by inception layers,
      implemented it as island model to facilitate scalability and achieved on MNIST,
      Fashion-MNIST and CIFAR-10 dataset 99.75%, 94.35% and 89.90% test accuracy respectively.
      Besides, our model is strongly focused on high availability empowered by the
      deployment in our bare-metal Kubernetes cluster. Our results show that the introduced
      multi-objective neural architecture search can easily handle even the loss of
      nodes and proceed the algorithm within seconds on another node without any loss
      of results or the necessity of human interaction.", "venue": "IEEE International
      Symposium on Parallel & Distributed Processing, Workshops and Phd Forum", "year":
      2021, "referenceCount": 19, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-06-01", "journal": {"name": "2021 IEEE International Parallel and Distributed
      Processing Symposium Workshops (IPDPSW)", "pages": "605-610"}, "citationStyles":
      {"bibtex": "@Article{Klos2021ScalableAH,\n author = {Andreas Klos and Marius
      Rosenbaum and W. Schiffmann},\n booktitle = {IEEE International Symposium on
      Parallel & Distributed Processing, Workshops and Phd Forum},\n journal = {2021
      IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)},\n
      pages = {605-610},\n title = {Scalable and Highly Available Multi-Objective
      Neural Architecture Search in Bare Metal Kubernetes Cluster},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "47279141", "name": "Andreas Klos"}, {"authorId": "1738695600",
      "name": "Marius Rosenbaum"}, {"authorId": "1774458", "name": "W. Schiffmann"}]},
      {"paperId": "637a346f008005c710f81afe24f43318327c518c", "externalIds": {"MAG":
      "3097687033", "DBLP": "conf/icai3/ReveszP20", "CorpusId": 221664375}, "corpusId":
      221664375, "publicationVenue": {"id": "5836d652-d560-49e5-bcca-a468931b361b",
      "name": "International Conference on Applied Informatics", "type": "conference",
      "alternate_names": ["ICAI", "Int Conf Appl Informatics"], "url": "https://icai.itiud.org/",
      "alternate_urls": ["https://icai.uni-eszterhazy.hu"]}, "url": "https://www.semanticscholar.org/paper/637a346f008005c710f81afe24f43318327c518c",
      "title": "Stack Traces in Function as a Service Framework", "abstract": "Containerization
      has become an essential approach in modern software engineering. Docker is a
      widely-used solution for separate services (like database, backend, etc.) and
      run them as a standalone, isolated process instance on the same host kernel.
      Kubernetes is distributed approach over Docker, it supports multiple hosts for
      the deployment. Kubeless is a new approach that aims at the functionwise deployment,
      so every subprogram can be deployed, scaled, operated separately, thererfore
      a functional programming approach can be realized in a modern, highly distributed
      realm. In this paper, we present our framework that provides a programming framework
      over Kubeless. However, many programming development tools are not available
      in this realm. Stack trace is a well-known construct in programming languages
      to follow the function calls. We propose a mechanism to retrieve the stack trace
      for realizing program errors easily.", "venue": "International Conference on
      Applied Informatics", "year": 2020, "referenceCount": 8, "citationCount": 2,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"pages": "280-287"}, "citationStyles": {"bibtex": "@Article{R\u00e9v\u00e9sz2020StackTI,\n
      author = {\u00c1. R\u00e9v\u00e9sz and Norbert Pataki},\n booktitle = {International
      Conference on Applied Informatics},\n pages = {280-287},\n title = {Stack Traces
      in Function as a Service Framework},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "25885417", "name": "\u00c1. R\u00e9v\u00e9sz"}, {"authorId": "2627956", "name":
      "Norbert Pataki"}]}, {"paperId": "638b046555d7aa30e642e5132ec8b85493ff0fe6",
      "externalIds": {"ArXiv": "1902.09636", "DBLP": "journals/corr/abs-1902-09636",
      "MAG": "2917545790", "CorpusId": 67855638}, "corpusId": 67855638, "publicationVenue":
      {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10", "name": "arXiv.org", "alternate_names":
      ["ArXiv"], "issn": "2331-8422", "url": "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/638b046555d7aa30e642e5132ec8b85493ff0fe6",
      "title": "Fractal: Automated Application Scaling", "abstract": "To date, cloud
      applications have used datacenter resources through manual configuration and
      deployment of virtual machines and containers. Current trends see increasing
      use of microservices, where larger applications are split into many small containers,
      to be developed and deployed independently. However, even with the rise of the
      devops movement and orchestration facilities such as Kubernetes, there is a
      tendency to separate development from deployment. We present an exploration
      of a more extreme point on the devops spectrum: Fractal. Developers embed orchestration
      logic inside their application, fully automating the processes of scaling up
      and down. Providing a set of extensions to and an API over the Jitsu platform,
      we outline the design of Fractal and describe the key features of its implementation:
      how an application is self-replicated, how replica lifecycles are managed, how
      failure recovery is handled, and how network traffic is transparently distributed
      between replicas. We present evaluation of a self-scaling website, and demonstrate
      that Fractal is both useful and feasible.", "venue": "arXiv.org", "year": 2019,
      "referenceCount": 33, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2019-02-25", "journal": {"name": "ArXiv", "volume": "abs/1902.09636"},
      "citationStyles": {"bibtex": "@Article{Koleini2019FractalAA,\n author = {M.
      Koleini and Carlos Oviedo and Derek McAuley and Charalampos Rotsos and Anil
      Madhavapeddy and T. Gazagnaire and Magnus Skejgstad and R. Mortier},\n booktitle
      = {arXiv.org},\n journal = {ArXiv},\n title = {Fractal: Automated Application
      Scaling},\n volume = {abs/1902.09636},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "3309461", "name": "M. Koleini"}, {"authorId": "144490401", "name": "Carlos
      Oviedo"}, {"authorId": "144465634", "name": "Derek McAuley"}, {"authorId": "2728305",
      "name": "Charalampos Rotsos"}, {"authorId": "3235603", "name": "Anil Madhavapeddy"},
      {"authorId": "2244509", "name": "T. Gazagnaire"}, {"authorId": "73770733", "name":
      "Magnus Skejgstad"}, {"authorId": "1679929", "name": "R. Mortier"}]}, {"paperId":
      "63a0eef54795f1dc350302544750c0e2569b1f7e", "externalIds": {"MAG": "3098719303",
      "DOI": "10.1051/epjconf/202024507047", "CorpusId": 229256525}, "corpusId": 229256525,
      "publicationVenue": {"id": "f2cc63fa-90cb-413d-92ce-003d5244a1e8", "name": "EPJ
      Web of Conferences", "type": "journal", "alternate_names": ["EPJ Web Conf",
      "Epj Web of Conferences", "Epj Web Conf"], "issn": "2100-014X", "url": "https://web.archive.org/web/*/https:/www.epj-conferences.org/component/issues/",
      "alternate_urls": ["https://www.epj-conferences.org/", "https://web.archive.org/web/20161128151311/http:/www.epj-conferences.org:80/",
      "https://www.epj-conferences.org/component/issues/"]}, "url": "https://www.semanticscholar.org/paper/63a0eef54795f1dc350302544750c0e2569b1f7e",
      "title": "ScienceBox Converging to Kubernetes containers in production for on-premise
      and hybrid clouds for CERNBox, SWAN, and EOS", "abstract": "Docker containers
      are the de-facto standard to package, distribute, and run applications on cloud-based
      infrastructures. Commercial providers and private clouds expand their offer
      with container orchestration engines, making the management of resources and
      containerized applications tightly integrated. The Storage Group of CERN IT
      leverages on container technologies to provide ScienceBox: An integrated software
      bundle with storage and computing services for general purposes and scientific
      use. ScienceBox features distributed scalable storage, sync&share functionalities,
      and a web-based data analysis service, and can be deployed on a single machine
      or scaled-out across multiple servers. ScienceBox has proven to be helpful in
      different contexts, from High Energy Physics analysis to education for high
      schools, and has been successfully deployed on different cloud infrastructure
      and heterogeneous hardware.", "venue": "EPJ Web of Conferences", "year": 2020,
      "referenceCount": 12, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://www.epj-conferences.org/articles/epjconf/pdf/2020/21/epjconf_chep2020_07047.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": null, "journal": {"name": "EPJ Web of Conferences"},
      "citationStyles": {"bibtex": "@Conference{Bocchi2020ScienceBoxCT,\n author =
      {E. Bocchi and L. Canali and Diogo Castro and P. Kothuri and H. G. Labrador
      and M. Malawski and J. Moscicki and P. Mr\u00f3wczynski},\n booktitle = {EPJ
      Web of Conferences},\n journal = {EPJ Web of Conferences},\n title = {ScienceBox
      Converging to Kubernetes containers in production for on-premise and hybrid
      clouds for CERNBox, SWAN, and EOS},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "38640298", "name": "E. Bocchi"}, {"authorId": "3258118", "name": "L. Canali"},
      {"authorId": "73606464", "name": "Diogo Castro"}, {"authorId": "52198626", "name":
      "P. Kothuri"}, {"authorId": "1392749312", "name": "H. G. Labrador"}, {"authorId":
      "1745144", "name": "M. Malawski"}, {"authorId": "29120186", "name": "J. Moscicki"},
      {"authorId": "26956072", "name": "P. Mr\u00f3wczynski"}]}, {"paperId": "63b5449d9c596fd87461c813360140fca08fd35f",
      "externalIds": {"MAG": "2994614856", "DOI": "10.1007/978-1-4842-5519-3_1", "CorpusId":
      213818851}, "corpusId": 213818851, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/63b5449d9c596fd87461c813360140fca08fd35f",
      "title": "Inside Docker Containers", "abstract": null, "venue": "", "year":
      2019, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "pages": "1-16", "volume":
      ""}, "citationStyles": {"bibtex": "@Inproceedings{Buchanan2019InsideDC,\n author
      = {Steve Buchanan and Janaka Rangama and Ned Bellavance},\n pages = {1-16},\n
      title = {Inside Docker Containers},\n year = {2019}\n}\n"}, "authors": [{"authorId":
      "14244223", "name": "Steve Buchanan"}, {"authorId": "66925155", "name": "Janaka
      Rangama"}, {"authorId": "1453137264", "name": "Ned Bellavance"}]}, {"paperId":
      "63b63d6dd0b470d5ad8fefbb3b56134cf9090a4b", "externalIds": {"MAG": "2760491841",
      "CorpusId": 134888196}, "corpusId": 134888196, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/63b63d6dd0b470d5ad8fefbb3b56134cf9090a4b",
      "title": "Development of an autoscaling Big Data system with Docker and Kubernetes",
      "abstract": "El objetivo principal de este Proyecto consistia en el desarrollo
      de una arquitectura Big Data autoescalable utilizando para esto Docker y Kubernetes.
      \nPara obtener dicho resultado, el Proyecto se ha dividido en 3 etapas principales:
      En la primera etapa habia que primero, definir que herramientas y aplicaciones
      utilizariamos para componer la arquitectura y, segundo, conseguir empaquetar
      dichas aplicaciones en contenedores software con Docker. \nLa segunda etapa
      del Proyecto, consistio en la elaboracion de los tests de integracion del Sistema
      necesarios para poder asegurar el correcto funcionamiento de los componentes
      del mismo antes de proceder con la tercera etapa. \nFinalmente, se implemento
      el Sistema utilizando Kubernetes para conseguir que este fuera capaz de reconocer,
      automaticamente, las cargas de proceso a las que esta sometido en cada momento
      y poder asi ajustar sus caracteristicas en funcion de las necesidades de cada
      momento.---ABSTRACT---The main objective of this project consisted on the development
      of an autoscaling Big Data architecture with Docker and Kubernetes. \nTo obtain
      this, the project was divided into 3 different stages: During the first stage,
      It was necessary to first, study the different options to conclude which were
      the best possible tools and applications to use in the architecture, and second,
      to package the chosen applications as software containers using Docker. \nAt
      the second stage, we created the system integration tests necessary to ensure
      the correct functioning of the system and each of its parts before we could
      proceed with the third stage. \nFinally, the system was implemented using Kubernetes
      with the purpose of enabling the system to recognize by itself the amount of
      resources each of its parts is consuming and to auto scale consequently to adjust
      to every moment needs.", "venue": "", "year": 2017, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Geography"], "s2FieldsOfStudy": [{"category": "Geography",
      "source": "external"}], "publicationTypes": null, "publicationDate": "2017-07-01",
      "journal": {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Carrasco2017DevelopmentOA,\n
      author = {Luis Roman Carrasco},\n title = {Development of an autoscaling Big
      Data system with Docker and Kubernetes},\n year = {2017}\n}\n"}, "authors":
      [{"authorId": "145174014", "name": "Luis Roman Carrasco"}]}, {"paperId": "63c25ceba64a3fb6e8e0c9155b091bd9736f744d",
      "externalIds": {"MAG": "2959314337", "CorpusId": 217683327}, "corpusId": 217683327,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/63c25ceba64a3fb6e8e0c9155b091bd9736f744d",
      "title": "Session \"#Kubernetes - Join the hype!\" um ...", "abstract": "Session
      \"#Kubernetes - Join the hype!\" um 12:00 Uhr im Raum Solution Drive. Kommet
      zahlreich! #dvocc16", "venue": "", "year": 2016, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Art"], "s2FieldsOfStudy": [{"category": "Art", "source":
      "external"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "", "volume": ""}, "citationStyles": {"bibtex": "@Inproceedings{Stierand2016Session,\n
      author = {Bj\u00f6rn Stierand},\n title = {Session \"#Kubernetes - Join the
      hype!\" um ...},\n year = {2016}\n}\n"}, "authors": [{"authorId": "52641801",
      "name": "Bj\u00f6rn Stierand"}]}, {"paperId": "63eb15164823fa065e4f684426809266c240f2b1",
      "externalIds": {"DOI": "10.1109/FiCloud58648.2023.00043", "CorpusId": 267327080},
      "corpusId": 267327080, "publicationVenue": {"id": "d2423c06-c1fe-458d-bf8a-cc24aefe3f59",
      "name": "International Conference on Future Internet of Things and Cloud", "type":
      "conference", "alternate_names": ["FiCloud", "Int Conf Future Internet Thing
      Cloud"]}, "url": "https://www.semanticscholar.org/paper/63eb15164823fa065e4f684426809266c240f2b1",
      "title": "A Runtime Trust Evaluation Mechanism in the Service Mesh Architecture",
      "abstract": "With the advancement of cloud-native computing, enterprise software
      is shifting towards a microservice architecture (MSA). In a MSA, the application
      is built as a composite of microservices (also called services) where each service
      is dedicated to providing specific functionalities and communicating via APIs.
      The service mesh is a dedicated infrastructure layer serving as a service-to-service
      communication platform. It is introduced to alleviate the complexity, manageability,
      and interoperability challenges involved in a MSA. Even though the service mesh
      includes APIs to secure service-to-service communication, more functionality
      is needed to handle the perimeter-less and dynamic cloud environment. The existing
      APIs enable security measures based on a pre-defined configuration. However,
      there is no mechanism for dynamic trust evaluation of the participating services,
      which is necessary to protect the application from potential attacks. Attackers
      can exploit a vulnerability caused by a rouge service as a backdoor to compromise
      the application. Thus, there is a need for a trust evaluation mechanism in the
      service mesh to follow zero-trust architecture (ZTA) principles. This paper
      introduces a runtime trust evaluator (RTE) incorporated as a component within
      the service mesh control plane. A RTE can evaluate the trustworthiness of services
      at runtime before establishing service-to-service communications. The core functionality
      of a RTE is to assess the new service invocation requests initiated by a service
      to evaluate the trustworthiness of that service. The RTE collects the services\u2019
      invocation history and other telemetric data to determine the services\u2019
      criticality level for single-point failure. The RTE assesses service invocation
      request attributes to determine the existence of an unauthorized request and
      the impact on the requested service\u2019s criticality level. The result is
      an evaluation of the initiator service\u2019s trustworthiness. We demonstrate
      our approach on an open source microservice application from the Google Cloud
      team called Online Boutique. The environment setup uses Kubernetes as an orchestration
      solution and Istio as the service mesh platform.", "venue": "International Conference
      on Future Internet of Things and Cloud", "year": 2023, "referenceCount": 32,
      "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2023-08-14", "journal":
      {"name": "2023 10th International Conference on Future Internet of Things and
      Cloud (FiCloud)", "pages": "242-249"}, "citationStyles": {"bibtex": "@Conference{Alboqmi2023ART,\n
      author = {Rami Alboqmi and Sharmin Jahan and Rose F. Gamble},\n booktitle =
      {International Conference on Future Internet of Things and Cloud},\n journal
      = {2023 10th International Conference on Future Internet of Things and Cloud
      (FiCloud)},\n pages = {242-249},\n title = {A Runtime Trust Evaluation Mechanism
      in the Service Mesh Architecture},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2189600074", "name": "Rami Alboqmi"}, {"authorId": "1961292470", "name": "Sharmin
      Jahan"}, {"authorId": "2273975499", "name": "Rose F. Gamble"}]}, {"paperId":
      "640ff463d09ba6296d7aec87e73184d5344a0d58", "externalIds": {"MAG": "3042712859",
      "DOI": "10.1109/ITOEC49072.2020.9141552", "CorpusId": 220668471}, "corpusId":
      220668471, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/640ff463d09ba6296d7aec87e73184d5344a0d58",
      "title": "Novel Container Cloud Elastic Scaling Strategy based on Kubernetes",
      "abstract": "Kubernetes is a cluster management system based on container technology,
      which is responsible for managing large-scale containers. However, the existing
      responsive scaling strategy of the Kubernetes platform has a response delay,
      and the resource indicators cannot meet the web system''s requirements for service
      quality. In order to solve this problem, this paper proposes a new container
      cloud elastic scaling strategy, which combines a prediction model and a queuing
      network to automatically predict the arrival rate of requests for web applications
      in the future and find the optimal number of Kubernetes service replica sets.
      Finally, in order to prove that our strategy is effective, a Kubernetes cluster
      is set up in a laboratory environment, and experiments are designed to verify
      it. The results show that our proposed strategy can achieve predictive scaling
      and avoid response delay caused by peak requests. At the same time, our elastic
      scaling strategy can also improve resource utilization to a certain extent.",
      "venue": "2020 IEEE 5th Information Technology and Mechatronics Engineering
      Conference (ITOEC)", "year": 2020, "referenceCount": 6, "citationCount": 8,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2020-06-01", "journal": {"name": "2020 IEEE
      5th Information Technology and Mechatronics Engineering Conference (ITOEC)",
      "pages": "1400-1404"}, "citationStyles": {"bibtex": "@Conference{He2020NovelCC,\n
      author = {Zhigang He},\n booktitle = {2020 IEEE 5th Information Technology and
      Mechatronics Engineering Conference (ITOEC)},\n journal = {2020 IEEE 5th Information
      Technology and Mechatronics Engineering Conference (ITOEC)},\n pages = {1400-1404},\n
      title = {Novel Container Cloud Elastic Scaling Strategy based on Kubernetes},\n
      year = {2020}\n}\n"}, "authors": [{"authorId": "1825669182", "name": "Zhigang
      He"}]}, {"paperId": "64197d1afcf7bbb58788ead4bc32630ed588e727", "externalIds":
      {"MAG": "3094979291", "DBLP": "conf/osdi/SureshLKJNRGOJG20", "CorpusId": 229208744},
      "corpusId": 229208744, "publicationVenue": {"id": "86c43745-31d9-4c1a-b33f-ce3aa0042dbb",
      "name": "USENIX Symposium on Operating Systems Design and Implementation", "type":
      "conference", "alternate_names": ["Oper Syst Des Implement", "Operating Systems
      Design and Implementation", "OSDI", "USENIX Symp Oper Syst Des Implement"]},
      "url": "https://www.semanticscholar.org/paper/64197d1afcf7bbb58788ead4bc32630ed588e727",
      "title": "Building Scalable and Flexible Cluster Managers Using Declarative
      Programming", "abstract": "Cluster managers like Kubernetes and OpenStack are
      notoriously hard to develop, given that they routinely grapple with hard combinatorial
      optimization problems like load balancing, placement, scheduling, and configuration.
      Today, cluster manager developers tackle these problems by developing system-specific
      best effort heuristics, which achieve scalability by significantly sacrificing
      the cluster manager\u2019s decision quality, feature set, and extensibility
      over time. This is proving untenable, as solutions for cluster management problems
      are routinely developed from scratch in the industry to solve largely similar
      problems across different settings. We propose DCM, a radically different architecture
      where developers specify the cluster manager\u2019s behavior declaratively,
      using SQL queries over cluster state stored in a relational database. From the
      SQL specification, the DCM compiler synthesizes a program that, at runtime,
      can be invoked to compute policy-compliant cluster management decisions given
      the latest cluster state. Under the covers, the generated program efficiently
      encodes the cluster state as an optimization problem that can be solved using
      off-the-shelf solvers, freeing developers from having to design ad-hoc heuristics.
      We show that DCM significantly lowers the barrier to building scalable and extensible
      cluster managers. We validate our claim by powering three production-grade systems
      with it: a Kubernetes scheduler, a virtual machine management solution, and
      a distributed transactional datastore.", "venue": "USENIX Symposium on Operating
      Systems Design and Implementation", "year": 2020, "referenceCount": 68, "citationCount":
      13, "influentialCitationCount": 3, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      null, "journal": {"pages": "827-844"}, "citationStyles": {"bibtex": "@Article{Suresh2020BuildingSA,\n
      author = {L. Suresh and Jo\u00e3o Loff and Faria Kalim and S. Jyothi and Nina
      Narodytska and L. Ryzhyk and S. Gamage and B. Oki and Pranshu Jain and Michael
      Gasch},\n booktitle = {USENIX Symposium on Operating Systems Design and Implementation},\n
      pages = {827-844},\n title = {Building Scalable and Flexible Cluster Managers
      Using Declarative Programming},\n year = {2020}\n}\n"}, "authors": [{"authorId":
      "49060428", "name": "L. Suresh"}, {"authorId": "2279802", "name": "Jo\u00e3o
      Loff"}, {"authorId": "8124005", "name": "Faria Kalim"}, {"authorId": "37541666",
      "name": "S. Jyothi"}, {"authorId": "2701535", "name": "Nina Narodytska"}, {"authorId":
      "3150866", "name": "L. Ryzhyk"}, {"authorId": "145953481", "name": "S. Gamage"},
      {"authorId": "1724602", "name": "B. Oki"}, {"authorId": "2066976937", "name":
      "Pranshu Jain"}, {"authorId": "2037726405", "name": "Michael Gasch"}]}, {"paperId":
      "644195326b87a923d278e6582ef76a78d6fe9ae5", "externalIds": {"DBLP": "journals/itpro/KangJC21",
      "DOI": "10.1109/MITP.2020.3034116", "CorpusId": 237245501}, "corpusId": 237245501,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/644195326b87a923d278e6582ef76a78d6fe9ae5",
      "title": "Docker Swarm and Kubernetes Containers for Smart Home Gateway", "abstract":
      "The Internet of Things (IoT) for warehouse automation in new generation industries
      and home gateway in smart homes have very tight latency requirements for data
      computation and response. To satisfy the requirements, many studies have moved
      the computation close to IoT devices by virtualizing the services using containers
      and deploying them on IoT gateways. They do not account for limited resources
      at IoT gateways, and without careful provisioning, IoT gateways can easily become
      overloaded and inevitably increase the computation time. To enable efficient
      service provisioning on IoT gateways, this article presents the empirical evaluation
      of docker swarm and Kubernetes (K8s) container solutions, on resource constrained
      devices such as Raspberry Pi boards. We have used multiple open source intrusion
      detection systems and deep learning based data analytic solutions in our experiments
      to evaluate creation time, CPU utilization, and memory usage. Our results reveal
      that creation time and memory usage of containers are critical factors in constrained
      environments. The lessons learned from our empirical case studies provide essential
      guidelines for micro-services architectures in IoT gateways.", "venue": "IT
      Professional", "year": 2021, "referenceCount": 0, "citationCount": 7, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Environmental Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-07-01", "journal":
      {"name": "IT Professional", "pages": "75-80", "volume": "23"}, "citationStyles":
      {"bibtex": "@Article{Kang2021DockerSA,\n author = {Byungseok Kang and Jaeyeop
      Jeong and Hyunseung Choo},\n booktitle = {IT Professional},\n journal = {IT
      Professional},\n pages = {75-80},\n title = {Docker Swarm and Kubernetes Containers
      for Smart Home Gateway},\n volume = {23},\n year = {2021}\n}\n"}, "authors":
      [{"authorId": "38744397", "name": "Byungseok Kang"}, {"authorId": "83125155",
      "name": "Jaeyeop Jeong"}, {"authorId": "1734679", "name": "Hyunseung Choo"}]},
      {"paperId": "645b67dd95c8d3acfc8b2e30f4bb7abbb06eb0c6", "externalIds": {"DBLP":
      "conf/iot/TzimotoudisMK21", "DOI": "10.1145/3494322.3494358", "CorpusId": 247295972},
      "corpusId": 247295972, "publicationVenue": {"id": "18cb41bf-d23d-4c47-a30d-3f1ef6abfb1b",
      "name": "IoT", "issn": "2624-831X", "url": "https://www.mdpi.com/journal/IoT"},
      "url": "https://www.semanticscholar.org/paper/645b67dd95c8d3acfc8b2e30f4bb7abbb06eb0c6",
      "title": "Demo: Design and Implementation of an Open-Source NB-IoT Core Network",
      "abstract": "Extended adoption of network softwarization is a key feature of
      5G and beyond networks. Embracing control and user plane separation, network
      services comprising the RAN to core chain of network services can be realized
      purely in software, and instantiated in a cloud-native manner. Such network
      softwarization is applicable to all elements of the network, regardless of their
      type (e.g. core cellular vs IoT edge) towards providing a holistic approach
      for the management and operation of the network. This is highly desirable feature
      as the connected devices increase and become denser, especially in the IoT context.
      In this work, we consider the case of a 4G disaggregated core network, that
      supports an NB-IoT cell. We use the OpenAirInterface Core Network open source
      platform, and extend it appropriately to support the signaling and data transfer
      of the NB-IoT cell. By adopting a cloud-native approach, we are able to deploy
      and operate the network in a single click manner, using the Kubernetes framework.",
      "venue": "IoT", "year": 2021, "referenceCount": 9, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Engineering", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Book"], "publicationDate": "2021-11-08", "journal": {"name": "Proceedings of
      the 11th International Conference on the Internet of Things"}, "citationStyles":
      {"bibtex": "@Article{Tzimotoudis2021DemoDA,\n author = {Panagiotis Tzimotoudis
      and N. Makris and T. Korakis},\n booktitle = {IoT},\n journal = {Proceedings
      of the 11th International Conference on the Internet of Things},\n title = {Demo:
      Design and Implementation of an Open-Source NB-IoT Core Network},\n year = {2021}\n}\n"},
      "authors": [{"authorId": "1384028416", "name": "Panagiotis Tzimotoudis"}, {"authorId":
      "2003700882", "name": "N. Makris"}, {"authorId": "144358916", "name": "T. Korakis"}]},
      {"paperId": "645e466b1bda4400a57e9f495705a45d8e58329a", "externalIds": {"DBLP":
      "conf/noms/FukudaWHT22", "DOI": "10.1109/NOMS54207.2022.9789784", "CorpusId":
      249550762}, "corpusId": 249550762, "publicationVenue": {"id": "042bc893-3752-44f7-9e77-c59ce54b1b11",
      "name": "IEEE/IFIP Network Operations and Management Symposium", "type": "conference",
      "alternate_names": ["Network Operations and Management Symposium", "NOMS", "IEEE/IFIP
      Netw Oper Manag Symp", "Netw Oper Manag Symp"], "url": "http://www.comsoc.org/"},
      "url": "https://www.semanticscholar.org/paper/645e466b1bda4400a57e9f495705a45d8e58329a",
      "title": "Fault Report Generation for ICT Systems by Jointly Learning Time-series
      and Text Data", "abstract": "The number of ICT services operated on large-scale
      systems is increasing, and faults in the target systems need to be detected
      for the stability of the services. When a fault occurs in the target system,
      the operators will analyze the monitoring data to identify a root cause and
      determine recovery actions. However, it is becoming inefficient to analyze them
      manually or detect faults with handcrafted rules. In this paper, we propose
      a method of generating human-readable fault reports by leveraging time-series
      data and textual metadata of metrics for detecting faults in a target system.
      It can jointly encode heterogeneous sources of monitoring data and can integrate
      asynchronous metrics of multiple services. To collect realistic datasets in
      a production environment, we conducted experiments by injecting faults into
      an e-commerce service implemented in a Kubernetes cluster. Our evaluation shows
      that the proposed method can generate fault reports appropriately and outperformed
      the baseline method in different scenarios.", "venue": "IEEE/IFIP Network Operations
      and Management Symposium", "year": 2022, "referenceCount": 34, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2022-04-25", "journal": {"name": "NOMS 2022-2022 IEEE/IFIP Network Operations
      and Management Symposium", "pages": "1-9"}, "citationStyles": {"bibtex": "@Article{Fukuda2022FaultRG,\n
      author = {Nobukazu Fukuda and Chaofeng Wu and Shingo Horiuchi and Kenichi Tayama},\n
      booktitle = {IEEE/IFIP Network Operations and Management Symposium},\n journal
      = {NOMS 2022-2022 IEEE/IFIP Network Operations and Management Symposium},\n
      pages = {1-9},\n title = {Fault Report Generation for ICT Systems by Jointly
      Learning Time-series and Text Data},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2008197594", "name": "Nobukazu Fukuda"}, {"authorId": "2115424464", "name":
      "Chaofeng Wu"}, {"authorId": "1491154567", "name": "Shingo Horiuchi"}, {"authorId":
      "2853218", "name": "Kenichi Tayama"}]}, {"paperId": "6485a3518de67202ba3daeab0fded9adcb453fe5",
      "externalIds": {"MAG": "3028767596", "DBLP": "conf/icsa/BaresiQ20", "DOI": "10.1109/ICSA47634.2020.00018",
      "CorpusId": 218909793}, "corpusId": 218909793, "publicationVenue": {"id": "dc5f2e48-3f23-4c26-aa6d-731461dddebe",
      "name": "International Conference on Software Architecture", "type": "conference",
      "alternate_names": ["IEEE/IFIP International Conference on Software Architecture",
      "Int Conf Softw Archit", "ICSA", "IEEE/IFIP Int Conf Softw Archit"], "url":
      "http://icsa-conferences.org/"}, "url": "https://www.semanticscholar.org/paper/6485a3518de67202ba3daeab0fded9adcb453fe5",
      "title": "COCOS: A Scalable Architecture for Containerized Heterogeneous Systems",
      "abstract": "Nowadays software systems are organized around several and heterogeneous
      components. For example, a modern application can be composed of different microservices,
      along with dedicated components for machine learning analytics and recurring
      batch processing jobs. While containers offer a means to deploy the system and
      tackle heterogeneity, these components have different execution models, can
      exploit different resource types (e.g., CPUs and GPUs) and result in completely
      different execution times (milliseconds vs hours). This complexity calls for
      a new, scalable architecture to allow the systems to operate efficiently. This
      paper presents COCOS, an architecture, based on containers and control-theory,
      that is able to manage large and heterogeneous software systems. The architecture
      is based on a three-level hierarchy of controllers that cooperatively enforce
      user-defined requirements on execution times and consumed resources. The paper
      also shows a prototype implementation of COCOS based on Kubernetes, a well-known
      container orchestrator. The evaluation shows the efficiency of COCOS when dealing
      with microservices, Spark jobs and machine learning applications.", "venue":
      "International Conference on Software Architecture", "year": 2020, "referenceCount":
      38, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2020-03-01",
      "journal": {"name": "2020 IEEE International Conference on Software Architecture
      (ICSA)", "pages": "103-113"}, "citationStyles": {"bibtex": "@Article{Baresi2020COCOSAS,\n
      author = {L. Baresi and G. Quattrocchi},\n booktitle = {International Conference
      on Software Architecture},\n journal = {2020 IEEE International Conference on
      Software Architecture (ICSA)},\n pages = {103-113},\n title = {COCOS: A Scalable
      Architecture for Containerized Heterogeneous Systems},\n year = {2020}\n}\n"},
      "authors": [{"authorId": "1704858", "name": "L. Baresi"}, {"authorId": "1500419986",
      "name": "G. Quattrocchi"}]}, {"paperId": "64a9fb27931991a3eb297e6e6b1371be370c2a2f",
      "externalIds": {"DBLP": "conf/icoin/RenL23", "DOI": "10.1109/ICOIN56518.2023.10048906",
      "CorpusId": 257082640}, "corpusId": 257082640, "publicationVenue": {"id": "0e129215-7c25-46c9-b04b-a0e9faabf021",
      "name": "International Conference on Information Networking", "type": "conference",
      "alternate_names": ["Int Conf Inf Netw", "ICOIN"], "url": "http://www.icoin.org/"},
      "url": "https://www.semanticscholar.org/paper/64a9fb27931991a3eb297e6e6b1371be370c2a2f",
      "title": "Blockchain-Based Service Migration for Multi-Access Edge Computing",
      "abstract": "Multi-access edge computing (MEC) extends cloud computing capabilities
      to the edge of the network which enables real-time and low-latency services
      for mobile users. To ensure that the delay requirement of the services is met
      even in the event of user mobility, service migration across different edge
      clusters is needed. Trusted migration and proper destination node selection
      across domains are two key ingredients for cross-edge migration. To this end,
      we propose a blockchain-based service migration framework to establish trust
      among different edge clusters. We use Kubernetes as our cluster orchestrator
      platform for containerized services. In addition, we model the problem as a
      Markov Decision Process (MDP) and employ the asynchronous advantage actor-critic
      (A3C) algorithm to select suitable destinations. The proposed approach is corroborated
      by a simulation study.", "venue": "International Conference on Information Networking",
      "year": 2023, "referenceCount": 12, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2023-01-11", "journal": {"name": "2023 International Conference
      on Information Networking (ICOIN)", "pages": "51-55"}, "citationStyles": {"bibtex":
      "@Article{Ren2023BlockchainBasedSM,\n author = {Shuyang Ren and Choonhwa Lee},\n
      booktitle = {International Conference on Information Networking},\n journal
      = {2023 International Conference on Information Networking (ICOIN)},\n pages
      = {51-55},\n title = {Blockchain-Based Service Migration for Multi-Access Edge
      Computing},\n year = {2023}\n}\n"}, "authors": [{"authorId": "6999155", "name":
      "Shuyang Ren"}, {"authorId": "92671954", "name": "Choonhwa Lee"}]}, {"paperId":
      "64c07170aa613cd16a1ae0a8dd17cf9aa277f3ff", "externalIds": {"DBLP": "journals/fgcs/ShanXZZ23",
      "ArXiv": "2207.01222", "DOI": "10.48550/arXiv.2207.01222", "CorpusId": 250265020},
      "corpusId": 250265020, "publicationVenue": {"id": "e3e1f91c-fe26-4f67-8d15-f7acd8abdf42",
      "name": "Future generations computer systems", "type": "journal", "alternate_names":
      ["Future gener comput syst", "Future Generation Computer Systems", "Future Gener
      Comput Syst"], "issn": "0167-739X", "url": "http://www.elsevier.com/wps/find/journaleditorialboard.cws_home/505611/editorialboard",
      "alternate_urls": ["https://www.journals.elsevier.com/future-generation-computer-systems",
      "http://www.sciencedirect.com/science/journal/0167739X"]}, "url": "https://www.semanticscholar.org/paper/64c07170aa613cd16a1ae0a8dd17cf9aa277f3ff",
      "title": "KubeAdaptor: A Docking Framework for Workflow Containerization on
      Kubernetes", "abstract": "As Kubernetes becomes the infrastructure of the cloud-native
      era, the integration of workflow systems with Kubernetes is gaining more and
      more popularity. To our knowledge, workflow systems employ scheduling algorithms
      that optimize task execution order of workflow to improve performance and execution
      efficiency. However, due to its inherent scheduling mechanism, Kubernetes does
      not execute containerized scheduling following the optimized task execution
      order of workflow amid migrating workflow systems to the Kubernetes platform.
      This inconsistency in task scheduling order seriously degrades the efficiency
      of workflow execution and brings numerous challenges to the containerized process
      of workflow systems on Kubernetes. In this paper, we propose a cloud-native
      workflow engine, also known as KubeAdaptor, a docking framework able to implement
      workflow containerization on Kubernetes, integrate workflow systems with Kubernetes,
      ensuring the consistency of task scheduling order. We introduce the design and
      architecture of the KubeAdaptor, elaborate on the functionality implementation
      and the event-trigger mechanism within the KubeAdaptor. Experimental results
      about four real-world workflows show that the KubeAdaptor ensures the consistency
      of the workflow systems and Kubernetes in the task scheduling order. Compared
      with the baseline Argo workflow engine, the KubeAdaptor achieves better performance
      in terms of the average execution time of task pod, average workflow lifecycle,
      and resource usage rate.", "venue": "Future generations computer systems", "year":
      2022, "referenceCount": 51, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2207.01222",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-07-04", "journal":
      {"name": "Future Gener. Comput. Syst.", "pages": "584-599", "volume": "148"},
      "citationStyles": {"bibtex": "@Article{Shan2022KubeAdaptorAD,\n author = {Chenggang
      Shan and Guan Wang and Yuanqing Xia and Yufeng Zhan and Jinhui Zhang},\n booktitle
      = {Future generations computer systems},\n journal = {Future Gener. Comput.
      Syst.},\n pages = {584-599},\n title = {KubeAdaptor: A Docking Framework for
      Workflow Containerization on Kubernetes},\n volume = {148},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2053160233", "name": "Chenggang Shan"}, {"authorId":
      "2152580737", "name": "Guan Wang"}, {"authorId": "2152311358", "name": "Yuanqing
      Xia"}, {"authorId": "3311244", "name": "Yufeng Zhan"}, {"authorId": "1583807259",
      "name": "Jinhui Zhang"}]}, {"paperId": "64dea8fc65ef9eace8aa1adf5881b3dd3cbb27d9",
      "externalIds": {"CorpusId": 195738420}, "corpusId": 195738420, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/64dea8fc65ef9eace8aa1adf5881b3dd3cbb27d9",
      "title": "Paper Virtualization technology Infrastructure-level metrics Application-level
      metrics Technique Adjustment ability", "abstract": "Container-based cloud applications
      require sophisticated auto-scaling methods in order to operate under different
      workload conditions. The choice of an auto-scaling method may significantly
      affect important service quality parameters, such as response time and resource
      utilization. Current container orchestration systems such as Kubernetes and
      cloud providers such as Amazon EC2 employ auto-scaling rules with static thresholds
      and rely mainly on infrastructure-related monitoring data, such as CPU and memory
      utilization. This paper presents a new dynamic multi-level (DM) auto-scaling
      method with dynamically changing thresholds, which uses not only infrastructure,
      but also application-level monitoring data. The new method is compared with
      seven existing autoscaling methods in different synthetic and real-world workload
      scenarios. Based on experimental results, all eight auto-scaling methods are
      compared according to the response time and the number of instantiated containers.
      The results show that the proposed DM method has better overall performance
      under varied amount of workloads than the other auto-scaling methods. Due to
      satisfactory results, the proposed DM method is implemented in the SWITCH software
      engineering system for time-critical cloud applications.", "venue": "", "year":
      2018, "referenceCount": 46, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "citationStyles": {"bibtex": "@Inproceedings{Taherizadeh2018PaperVT,\n
      author = {S. Taherizadeh and V. Stankovski},\n title = {Paper Virtualization
      technology Infrastructure-level metrics Application-level metrics Technique
      Adjustment ability},\n year = {2018}\n}\n"}, "authors": [{"authorId": "2483329",
      "name": "S. Taherizadeh"}, {"authorId": "3034012", "name": "V. Stankovski"}]},
      {"paperId": "6504ac119f9ec23c80eb1769f9f0c60683943988", "externalIds": {"DBLP":
      "conf/sesame/KatsakiorisANPK23", "DOI": "10.1145/3592533.3592812", "CorpusId":
      258486779}, "corpusId": 258486779, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6504ac119f9ec23c80eb1769f9f0c60683943988",
      "title": "FaaSCell: A Case for Intra-node Resource Management: Work-In-Progress",
      "abstract": "Open-source FaaS platforms have recently shown rapid growth, which
      is usually manifested as extension or specialization of existing cloud-native
      components and systems -mainly over Kubernetes- since they are provably capable
      of standing their ground against production-level needs. Despite its advances,
      the cloud-native ecosystem has focused mostly on container-based deployments
      so far. FaaS workloads'' need for massive colocation [1] without sacrificing
      security guarantees, pushes multi-tenancy to its limits.", "venue": "SESAME@EuroSys",
      "year": 2023, "referenceCount": 1, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3592533.3592812",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2023-05-08",
      "journal": {"name": "Proceedings of the 1st Workshop on SErverless Systems,
      Applications and MEthodologies"}, "citationStyles": {"bibtex": "@Article{Katsakioris2023FaaSCellAC,\n
      author = {Christos Katsakioris and Chloe Alverti and K. Nikas and Stratos Psomadakis
      and Vasileios Karakostas and N. Koziris},\n booktitle = {SESAME@EuroSys},\n
      journal = {Proceedings of the 1st Workshop on SErverless Systems, Applications
      and MEthodologies},\n title = {FaaSCell: A Case for Intra-node Resource Management:
      Work-In-Progress},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2168303863",
      "name": "Christos Katsakioris"}, {"authorId": "1654179980", "name": "Chloe Alverti"},
      {"authorId": "144704414", "name": "K. Nikas"}, {"authorId": "2585804", "name":
      "Stratos Psomadakis"}, {"authorId": "145225900", "name": "Vasileios Karakostas"},
      {"authorId": "1774783", "name": "N. Koziris"}]}, {"paperId": "65052e24f826419ea663476e7bf4736a38832c52",
      "externalIds": {"DBLP": "journals/tjs/MondalPKTD22", "MAG": "3179386656", "DOI":
      "10.1007/S11227-021-03982-3", "CorpusId": 237744679}, "corpusId": 237744679,
      "publicationVenue": {"id": "26ed29a9-64ce-4d6c-9024-8b022fd2fe22", "name": "Journal
      of Supercomputing", "type": "journal", "alternate_names": ["The Journal of Supercomputing",
      "J Supercomput"], "issn": "0920-8542", "url": "http://www.springer.com/computer/programming/journal/11227",
      "alternate_urls": ["https://link.springer.com/journal/11227", "https://www.springer.com/computer/swe/journal/11227?changeHeader"]},
      "url": "https://www.semanticscholar.org/paper/65052e24f826419ea663476e7bf4736a38832c52",
      "title": "Kubernetes in IT administration and serverless computing: An empirical
      study and research challenges", "abstract": null, "venue": "Journal of Supercomputing",
      "year": 2021, "referenceCount": 77, "citationCount": 26, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-07-13", "journal": {"name": "The Journal of Supercomputing", "pages":
      "2937-2987", "volume": "78"}, "citationStyles": {"bibtex": "@Article{Mondal2021KubernetesII,\n
      author = {S. Mondal and Rui Pan and H. Kabir and Tan Tian and Hongning Dai},\n
      booktitle = {Journal of Supercomputing},\n journal = {The Journal of Supercomputing},\n
      pages = {2937-2987},\n title = {Kubernetes in IT administration and serverless
      computing: An empirical study and research challenges},\n volume = {78},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "2203223", "name": "S. Mondal"}, {"authorId":
      "2130098122", "name": "Rui Pan"}, {"authorId": "145349979", "name": "H. Kabir"},
      {"authorId": "2054046903", "name": "Tan Tian"}, {"authorId": "46448389", "name":
      "Hongning Dai"}]}, {"paperId": "6549dd76c3713f054985d5f66e59d34cd2ff6b75", "externalIds":
      {"DBLP": "conf/middleware/XuRF18", "MAG": "2900627793", "DOI": "10.1145/3284028.3284033",
      "CorpusId": 53720598}, "corpusId": 53720598, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/6549dd76c3713f054985d5f66e59d34cd2ff6b75",
      "title": "NBWGuard: Realizing Network QoS for Kubernetes", "abstract": "Kubernetes
      is a very popular and fast-growing container orchestration platform that automates
      the process of deploying and managing multi-container applications at scale.
      Users can specify required and maximum values of resources they need for their
      containers and Kubernetes realizes them by interfacing with lower levels (container
      runtime which in turn can use OS capabilities) of the stack for enforcing them.
      Kubernetes supports differentiated QoS classes - Guaranteed, Burstable, and
      Best-effort - in order of decreasing priority based on the resource size specifications
      for CPU and memory capacity. This allows many applications to obtain a desired
      level of QoS (performance isolation and throughput) when CPU or memory capacity
      management can provide them. However, when workloads may be critically dependent
      for their performance on another resource, namely network bandwidth, Kubernetes
      has no means to meet their QoS needs. Networking between pods in Kubernetes
      is supported with plug-ins and the network resource is not managed directly.
      In this work, we propose NBWGuard, a design for network bandwidth management
      and evaluate its implementation. NBWGuard lets Kubernetes manage network bandwidth
      as a resource (like CPU or memory capacity) while still using plug-ins for realizing
      the network specification desired by users. Consistent with Kubernetes approach
      to application QoS based on resource allocation NBWGuard also supports the 3
      QoS classes: Guaranteed, Burstable, and Best-effort with respect to network
      bandwidth. NBWGuard is evaluated with iperf benchmark on real cloud environment,
      and the evaluation results demonstrate that it is able to provide network bandwidth
      isolation without impact on overall throughput.", "venue": "Middleware Industry",
      "year": 2018, "referenceCount": 27, "citationCount": 23, "influentialCitationCount":
      3, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2018-12-10", "journal": {"name": "Proceedings of the 19th
      International Middleware Conference Industry"}, "citationStyles": {"bibtex":
      "@Book{Xu2018NBWGuardRN,\n author = {Cong Xu and K. Rajamani and Wes Felter},\n
      booktitle = {Middleware Industry},\n journal = {Proceedings of the 19th International
      Middleware Conference Industry},\n title = {NBWGuard: Realizing Network QoS
      for Kubernetes},\n year = {2018}\n}\n"}, "authors": [{"authorId": "2134909701",
      "name": "Cong Xu"}, {"authorId": "2284661", "name": "K. Rajamani"}, {"authorId":
      "3142187", "name": "Wes Felter"}]}]}

      '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Connection:
      - keep-alive
      Content-Length:
      - '2823029'
      Content-Type:
      - application/json
      Date:
      - Sun, 25 Feb 2024 01:51:25 GMT
      Via:
      - 1.1 a5313514fbb2ef971d07fa7af0982586.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - BxZFaT_4QWDduvOrnunFp7hX5d1QhvajUkdq7nHOD27MxYxtWlhgWQ==
      X-Amz-Cf-Pop:
      - GRU3-P4
      X-Cache:
      - Miss from cloudfront
      x-amz-apigw-id:
      - Tq18fEH8vHcElyg=
      x-amzn-Remapped-Connection:
      - keep-alive
      x-amzn-Remapped-Content-Length:
      - '2823029'
      x-amzn-Remapped-Date:
      - Sun, 25 Feb 2024 01:51:25 GMT
      x-amzn-Remapped-Server:
      - gunicorn
      x-amzn-RequestId:
      - 7606eab6-4f05-4f13-a856-108a94cb8ef0
    http_version: HTTP/1.1
    status_code: 200
version: 1
