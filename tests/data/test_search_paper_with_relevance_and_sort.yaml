interactions:
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - api.semanticscholar.org
      user-agent:
      - python-httpx/0.26.0
    method: GET
    uri: https://api.semanticscholar.org/graph/v1/paper/search?query=kubernetes&fields=abstract,authors,citationCount,citationStyles,corpusId,externalIds,fieldsOfStudy,influentialCitationCount,isOpenAccess,journal,openAccessPdf,paperId,publicationDate,publicationTypes,publicationVenue,referenceCount,s2FieldsOfStudy,title,url,venue,year&offset=0&limit=100
  response:
    content: '{"total": 2455, "offset": 0, "next": 100, "data": [{"paperId": "61020665f9134e56009b6e10606fc21348f59d53",
      "externalIds": {"DBLP": "journals/tosem/RahmanSBP23", "DOI": "10.1145/3579639",
      "CorpusId": 255547108}, "corpusId": 255547108, "publicationVenue": {"id": "0730105a-4941-449f-9450-28cba8ae056b",
      "name": "ACM Transactions on Software Engineering and Methodology", "type":
      "journal", "alternate_names": ["ACM Trans Softw Eng Methodol"], "issn": "1049-331X",
      "url": "http://www.acm.org/pubs/contents/journals/tosem/", "alternate_urls":
      ["https://tosem.acm.org/", "http://tosem.acm.org/", "http://www.acm.org/pubs/tosem/",
      "http://portal.acm.org/tosem"]}, "url": "https://www.semanticscholar.org/paper/61020665f9134e56009b6e10606fc21348f59d53",
      "title": "Security Misconfigurations in Open Source Kubernetes Manifests: An
      Empirical Study", "abstract": "Context: Kubernetes has emerged as the de-facto
      tool for automated container orchestration. Business and government organizations
      are increasingly adopting Kubernetes for automated software deployments. Kubernetes
      is being used to provision applications in a wide range of domains, such as
      time series forecasting, edge computing, and high-performance computing. Due
      to such a pervasive presence, Kubernetes-related security misconfigurations
      can cause large-scale security breaches. Thus, a systematic analysis of security
      misconfigurations in Kubernetes manifests, i.e., configuration files used for
      Kubernetes, can help practitioners secure their Kubernetes clusters. Objective:
      The goal of this paper is to help practitioners secure their Kubernetes clusters
      by identifying security misconfigurations that occur in Kubernetes manifests.
      Methodology: We conduct an empirical study with 2,039 Kubernetes manifests mined
      from 92 open-source software repositories to systematically characterize security
      misconfigurations in Kubernetes manifests. We also construct a static analysis
      tool called Security Linter for Kubernetes Manifests (SLI-KUBE) to quantify
      the frequency of the identified security misconfigurations. Results: In all,
      we identify 11 categories of security misconfigurations, such as absent resource
      limit, absent securityContext, and activation of hostIPC. Specifically, we identify
      1,051 security misconfigurations in 2,039 manifests. We also observe the identified
      security misconfigurations affect entities that perform mesh-related load balancing,
      as well as provision pods and stateful applications. Furthermore, practitioners
      agreed to fix 60% of 10 misconfigurations reported by us. Conclusion: Our empirical
      study shows Kubernetes manifests to include security misconfigurations, which
      necessitates security-focused code reviews and application of static analysis
      when Kubernetes manifests are developed.", "venue": "ACM Transactions on Software
      Engineering and Methodology", "year": 2023, "referenceCount": 101, "citationCount":
      10, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3579639", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Review"], "publicationDate": "2023-01-10", "journal": {"name":
      "ACM Transactions on Software Engineering and Methodology", "pages": "1 - 36",
      "volume": "32"}, "citationStyles": {"bibtex": "@Article{Rahman2023SecurityMI,\n
      author = {A. Rahman and Shazibul Islam Shamim and Dibyendu Brinto Bose and Rahul
      Pandita},\n booktitle = {ACM Transactions on Software Engineering and Methodology},\n
      journal = {ACM Transactions on Software Engineering and Methodology},\n pages
      = {1 - 36},\n title = {Security Misconfigurations in Open Source Kubernetes
      Manifests: An Empirical Study},\n volume = {32},\n year = {2023}\n}\n"}, "authors":
      [{"authorId": "39864830", "name": "A. Rahman"}, {"authorId": "2036391299", "name":
      "Shazibul Islam Shamim"}, {"authorId": "2120330401", "name": "Dibyendu Brinto
      Bose"}, {"authorId": "40211404", "name": "Rahul Pandita"}]}, {"paperId": "09bc670eebe5d41038e2025e51f901f69719466a",
      "externalIds": {"DBLP": "journals/tcc/DingWJ23", "DOI": "10.1109/TCC.2022.3161900",
      "CorpusId": 247686844}, "corpusId": 247686844, "publicationVenue": {"id": "7fca7065-fa6f-490b-923e-3ffc07857f1c",
      "name": "IEEE Transactions on Cloud Computing", "type": "journal", "alternate_names":
      ["IEEE Trans Cloud Comput"], "issn": "2168-7161", "url": "https://www.computer.org/web/tcc",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6245519"]},
      "url": "https://www.semanticscholar.org/paper/09bc670eebe5d41038e2025e51f901f69719466a",
      "title": "Kubernetes-Oriented Microservice Placement With Dynamic Resource Allocation",
      "abstract": "Microservices and Kubernetes are widely used in the development
      and operations of cloud-native applications. By providing automated placement
      and scaling, Kubernetes has become the main tool for managing microservices.
      However, existing work and Kubernetes fail to consider the dynamic competition
      and availability of microservices as well as the problem of shared dependency
      libraries among multiple microservice instances. To this end, this article proposes
      an integer nonlinear microservice placement model for Kubernetes with the goal
      of cost minimization. Specifically, we calculate the number of instances based
      on microservice availability and construct a model in which the total resource
      demand of multiple microservice instances exceeds the appropriate proportion
      of node resources when dynamic resource competition exists and the size of the
      shared dependency library is less than the node storage capacity. Finally, this
      article solves the microservice placement model using an improved genetic algorithm.
      The experimental results demonstrate that higher throughput is obtained with
      the same costs and that the same throughput is obtained with lower costs.",
      "venue": "IEEE Transactions on Cloud Computing", "year": 2023, "referenceCount":
      56, "citationCount": 11, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-04-01", "journal": {"name": "IEEE Transactions on Cloud
      Computing", "pages": "1777-1793", "volume": "11"}, "citationStyles": {"bibtex":
      "@Article{Ding2023KubernetesOrientedMP,\n author = {Zhijun Ding and Song Wang
      and Changjun Jiang},\n booktitle = {IEEE Transactions on Cloud Computing},\n
      journal = {IEEE Transactions on Cloud Computing},\n pages = {1777-1793},\n title
      = {Kubernetes-Oriented Microservice Placement With Dynamic Resource Allocation},\n
      volume = {11},\n year = {2023}\n}\n"}, "authors": [{"authorId": "34368858",
      "name": "Zhijun Ding"}, {"authorId": "2117075837", "name": "Song Wang"}, {"authorId":
      "145181317", "name": "Changjun Jiang"}]}, {"paperId": "d11e5c5c08af88ee8abb9ebaa166b1d6fd198501",
      "externalIds": {"DBLP": "journals/csur/Carrion23", "DOI": "10.1145/3539606",
      "CorpusId": 249241278}, "corpusId": 249241278, "publicationVenue": {"id": "7b2adce0-d53f-49d6-8784-b0645604fe62",
      "name": "ACM Computing Surveys", "type": "journal", "alternate_names": ["ACM
      Comput Surv"], "issn": "0360-0300", "url": "http://www.acm.org/pubs/surveys/",
      "alternate_urls": ["http://portal.acm.org/csur", "https://csur.acm.org/", "http://csur.acm.org/"]},
      "url": "https://www.semanticscholar.org/paper/d11e5c5c08af88ee8abb9ebaa166b1d6fd198501",
      "title": "Kubernetes Scheduling: Taxonomy, Ongoing Issues and Challenges", "abstract":
      "Continuous integration enables the development of microservices-based applications
      using container virtualization technology. Container orchestration systems such
      as Kubernetes, which has become the de facto standard, simplify the deployment
      of container-based applications. However, developing efficient and well-defined
      orchestration systems is a challenge. This article focuses specifically on the
      scheduler, a key orchestrator task that assigns physical resources to containers.
      Scheduling approaches are designed based on different Quality of Service (QoS)
      parameters to provide limited response time, efficient energy consumption, better
      resource utilization, and other things. This article aims to establish insight
      knowledge into Kubernetes scheduling, find the main gaps, and thus guide future
      research in the area. Therefore, we conduct a study of empirical research on
      Kubernetes scheduling techniques and present a new taxonomy for Kubernetes scheduling.
      The challenges, future direction, and research opportunities are also discussed.",
      "venue": "ACM Computing Surveys", "year": 2022, "referenceCount": 149, "citationCount":
      57, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2022-06-02", "journal": {"name": "ACM
      Computing Surveys", "pages": "1 - 37", "volume": "55"}, "citationStyles": {"bibtex":
      "@Article{Carri\u00f3n2022KubernetesST,\n author = {C. Carri\u00f3n},\n booktitle
      = {ACM Computing Surveys},\n journal = {ACM Computing Surveys},\n pages = {1
      - 37},\n title = {Kubernetes Scheduling: Taxonomy, Ongoing Issues and Challenges},\n
      volume = {55},\n year = {2022}\n}\n"}, "authors": [{"authorId": "144891586",
      "name": "C. Carri\u00f3n"}]}, {"paperId": "72fe473b4775a7754b019302d4143e7414d54907",
      "externalIds": {"DBLP": "journals/jcloudc/SenjabAAK23", "DOI": "10.1186/s13677-023-00471-1",
      "CorpusId": 259150983}, "corpusId": 259150983, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/72fe473b4775a7754b019302d4143e7414d54907",
      "title": "A survey of Kubernetes scheduling algorithms", "abstract": null, "venue":
      "Journal of Cloud Computing", "year": 2023, "referenceCount": 69, "citationCount":
      8, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://journalofcloudcomputing.springeropen.com/counter/pdf/10.1186/s13677-023-00471-1",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Review"], "publicationDate": "2023-06-13",
      "journal": {"name": "Journal of Cloud Computing", "pages": "1-26", "volume":
      "12"}, "citationStyles": {"bibtex": "@Article{Senjab2023ASO,\n author = {Khaldoun
      Senjab and S. Abbas and Naveed Ahmed and Atta ur Rehman Khan},\n booktitle =
      {Journal of Cloud Computing},\n journal = {Journal of Cloud Computing},\n pages
      = {1-26},\n title = {A survey of Kubernetes scheduling algorithms},\n volume
      = {12},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2134639055", "name":
      "Khaldoun Senjab"}, {"authorId": "2143231490", "name": "S. Abbas"}, {"authorId":
      "2069485521", "name": "Naveed Ahmed"}, {"authorId": "2108328546", "name": "Atta
      ur Rehman Khan"}]}, {"paperId": "87a5716082fe59052cc69d87ec545d3e7f618135",
      "externalIds": {"DBLP": "conf/wosp/KoziolekE23", "DOI": "10.1145/3578244.3583737",
      "CorpusId": 257806032}, "corpusId": 257806032, "publicationVenue": {"id": "cd492924-29c4-496b-9535-082805f228d8",
      "name": "International Conference on Performance Engineering", "type": "conference",
      "alternate_names": ["Int Conf Perform Eng", "ICPE"], "url": "http://www.wikicfp.com/cfp/program?id=1445"},
      "url": "https://www.semanticscholar.org/paper/87a5716082fe59052cc69d87ec545d3e7f618135",
      "title": "Lightweight Kubernetes Distributions: A Performance Comparison of
      MicroK8s, k3s, k0s, and Microshift", "abstract": "With containers becoming a
      prevalent method of software deployment, there is an increasing interest to
      use container orchestration frameworks not only in data centers, but also on
      resource-constrained hardware, such as Internet-of-Things devices, Edge gateways,
      or developer workstations. Consequently, software vendors have released several
      lightweight Kubernetes (K8s) distributions for container orchestration in the
      last few years, but it remains difficult for software developers to select an
      appropriate solution. Existing studies on lightweight K8s distribution performance
      tested only small workloads, showed inconclusive results, and did not cover
      recently released distributions. The contribution of this paper is a comparison
      of MicroK8s, k3s, k0s, and MicroShift, investigating their minimal resource
      usage as well as control plane and data plane performance in stress scenarios.
      While k3s and k0s showed by a small amount the highest control plane throughput
      and MicroShift showed the highest data plane throughput, usability, security,
      and maintainability are additional factors that drive the decision for an appropriate
      distribution.", "venue": "International Conference on Performance Engineering",
      "year": 2023, "referenceCount": 22, "citationCount": 5, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["Book", "JournalArticle"], "publicationDate": "2023-04-15", "journal": {"name":
      "Proceedings of the 2023 ACM/SPEC International Conference on Performance Engineering"},
      "citationStyles": {"bibtex": "@Book{Koziolek2023LightweightKD,\n author = {Heiko
      Koziolek and Nafise Eskandani},\n booktitle = {International Conference on Performance
      Engineering},\n journal = {Proceedings of the 2023 ACM/SPEC International Conference
      on Performance Engineering},\n title = {Lightweight Kubernetes Distributions:
      A Performance Comparison of MicroK8s, k3s, k0s, and Microshift},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2566995", "name": "Heiko Koziolek"}, {"authorId":
      "1397375971", "name": "Nafise Eskandani"}]}, {"paperId": "af5c8877c3a5c95c33f98bb5e1c37993047220fd",
      "externalIds": {"DOI": "10.1109/TLA.2023.10068850", "CorpusId": 257536410},
      "corpusId": 257536410, "publicationVenue": {"id": "3d58f8bf-fe41-4b9c-84c4-5c4299f3041e",
      "name": "IEEE Latin America Transactions", "type": "journal", "alternate_names":
      ["IEEE Lat Am Trans"], "issn": "1548-0992", "url": "https://www.ewh.ieee.org/reg/9/etrans/",
      "alternate_urls": ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=9907",
      "http://ieeexplore.ieee.org/servlet/opac?punumber=9907"]}, "url": "https://www.semanticscholar.org/paper/af5c8877c3a5c95c33f98bb5e1c37993047220fd",
      "title": "An Anomaly-based Detection System for Monitoring Kubernetes Infrastructures",
      "abstract": "Network monitoring is crucial to analyze infrastructure baselines
      and alert whenever an abnormal behavior is observed. However, human effort is
      limited in time and scope since many variables must be considered in real-time.
      In addition, infrastructures such as Kubernetes are complex by nature since
      they do not consider fixed equipment from which to gather data; instead, these
      infrastructures consider distributed, event-driven, and ephemeral containers
      that make it complicated to capture and track metrics. Artificial Intelligence
      models have demonstrated high detection rates for anomaly detection; therefore,
      there is a need to design and implement a global solution to collect complex
      data and orchestrate the whole Machine Learning Operations workflow. This document
      shares the findings and learnings from defining a cloud-native Artificial Intelligence
      infrastructure at Aligo to develop an anomaly-based detection system for monitoring
      on-premise Kubernetes infrastructures. After Chaos Engineering experiments,
      it is shown that the resulting deployed system is strong when alerting outliers
      and that an end-to-end infrastructure has been developed for conducting future
      Artificial Intelligence projects at the company.", "venue": "IEEE Latin America
      Transactions", "year": 2023, "referenceCount": 61, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-03-01",
      "journal": {"name": "IEEE Latin America Transactions", "pages": "457-465", "volume":
      "21"}, "citationStyles": {"bibtex": "@Article{Almaraz-Rivera2023AnAD,\n author
      = {Josue Genaro Almaraz-Rivera},\n booktitle = {IEEE Latin America Transactions},\n
      journal = {IEEE Latin America Transactions},\n pages = {457-465},\n title =
      {An Anomaly-based Detection System for Monitoring Kubernetes Infrastructures},\n
      volume = {21},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2163920810",
      "name": "Josue Genaro Almaraz-Rivera"}]}, {"paperId": "8b98ab4bbd671b55deb31bfded827d806e6cad82",
      "externalIds": {"DBLP": "journals/sensors/PerezRSBW23", "PubMedCentral": "10099054",
      "DOI": "10.3390/s23073395", "CorpusId": 257741838, "PubMed": "37050455"}, "corpusId":
      257741838, "publicationVenue": {"id": "3dbf084c-ef47-4b74-9919-047b40704538",
      "name": "Italian National Conference on Sensors", "type": "conference", "alternate_names":
      ["SENSORS", "IEEE Sens", "Ital National Conf Sens", "IEEE Sensors", "Sensors"],
      "issn": "1424-8220", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/8b98ab4bbd671b55deb31bfded827d806e6cad82",
      "title": "Moving Microgrid Hierarchical Control to an SDN-Based Kubernetes Cluster:
      A Framework for Reliable and Flexible Energy Distribution", "abstract": "Software
      Defined Networking (SDN) is a communication alternative to increase the scalability
      and resilience of microgrid hierarchical control. The common architecture has
      a centralized and monolithic topology, where the controller is highly susceptible
      to latency problems, resiliency, and scalability issues. This paper proposes
      a novel and intelligent control network to improve the performance of microgrid
      communications, solving the typical drawback of monolithic SDN controllers.
      The SDN controller\u2019s functionalities are segregated into microservices
      groups and distributed through a bare-metal Kubernetes cluster. Results are
      presented from PLECS hardware in the loop simulation to validate the seamless
      transition between standard hierarchical control to the SDN networked microgrid.
      The microservices significantly impact the performance of the SDN controller,
      decreasing the latency by 10.76% compared with a monolithic architecture. Furthermore,
      the proposed approach demonstrates a 42.23% decrease in packet loss versus monolithic
      topologies and a 53.41% reduction in recovery time during failures. Combining
      Kubernetes with SDN microservices can eliminate the single point of failure
      in hierarchical control, improve application recovery time, and enhance containerization
      benefits, including security and portability. This proposal represents a reference
      framework for future edge computing and intelligent control approaches in networked
      microgrids.", "venue": "Italian National Conference on Sensors", "year": 2023,
      "referenceCount": 64, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://www.mdpi.com/1424-8220/23/7/3395/pdf?version=1679982278",
      "status": "GOLD"}, "fieldsOfStudy": ["Medicine", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Medicine", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-03-23", "journal": {"name": "Sensors (Basel, Switzerland)",
      "volume": "23"}, "citationStyles": {"bibtex": "@Article{P\u00e9rez2023MovingMH,\n
      author = {Ricardo P\u00e9rez and M. Rivera and Yamisleydi Salgueiro and C. Baier
      and P. Wheeler},\n booktitle = {Italian National Conference on Sensors},\n journal
      = {Sensors (Basel, Switzerland)},\n title = {Moving Microgrid Hierarchical Control
      to an SDN-Based Kubernetes Cluster: A Framework for Reliable and Flexible Energy
      Distribution},\n volume = {23},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2072379147", "name": "Ricardo P\u00e9rez"}, {"authorId": "2070146667", "name":
      "M. Rivera"}, {"authorId": "29810963", "name": "Yamisleydi Salgueiro"}, {"authorId":
      "1856689", "name": "C. Baier"}, {"authorId": "2093002363", "name": "P. Wheeler"}]},
      {"paperId": "cb14a3bc5a603afd02ea40321c9df00f4fed60fe", "externalIds": {"DBLP":
      "journals/corr/abs-2303-03640", "ArXiv": "2303.03640", "DOI": "10.48550/arXiv.2303.03640",
      "CorpusId": 257378203}, "corpusId": 257378203, "publicationVenue": {"id": "bdc2e585-4e48-4e36-8af1-6d859763d405",
      "name": "AAAI Conference on Artificial Intelligence", "type": "conference",
      "alternate_names": ["National Conference on Artificial Intelligence", "National
      Conf Artif Intell", "AAAI Conf Artif Intell", "AAAI"], "url": "http://www.aaai.org/"},
      "url": "https://www.semanticscholar.org/paper/cb14a3bc5a603afd02ea40321c9df00f4fed60fe",
      "title": "AHPA: Adaptive Horizontal Pod Autoscaling Systems on Alibaba Cloud
      Container Service for Kubernetes", "abstract": "The existing resource allocation
      policy for application instances in Kubernetes cannot dynamically adjust according
      to the requirement of business, which would cause an enormous waste of resources
      during fluctuations. Moreover, the emergence of new cloud services puts higher
      resource management requirements. This paper discusses horizontal POD resources
      management in Alibaba Cloud Container Services with a newly deployed AI algorithm
      framework named AHPA - the adaptive horizontal pod auto-scaling system. Based
      on a robust decomposition forecasting algorithm and performance training model,
      AHPA offers an optimal pod number adjustment plan that could reduce POD resources\nand
      maintain business stability. Since being deployed in April 2021, this system
      has expanded to multiple customer scenarios, including logistics, social networks,
      AI audio and video, e-commerce, etc. Compared with the previous algorithms,
      AHPA solves the elastic lag problem, increasing CPU usage by 10% and reducing
      resource cost by more than 20%. In addition, AHPA can automatically perform
      flexible planning according to the predicted business volume without manual
      intervention, significantly saving operation and maintenance costs.", "venue":
      "AAAI Conference on Artificial Intelligence", "year": 2023, "referenceCount":
      28, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "http://arxiv.org/pdf/2303.03640", "status": "CLOSED"},
      "fieldsOfStudy": ["Computer Science", "Engineering"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Engineering", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2023-03-07", "journal": {"pages": "15621-15629"},
      "citationStyles": {"bibtex": "@Article{Zhou2023AHPAAH,\n author = {Zhiqiang
      Zhou and Chaoli Zhang and Lingna Ma and Jing Gu and Huajie Qian and Qingsong
      Wen and Liang Sun and Pengxi Li and Zhimin Tang},\n booktitle = {AAAI Conference
      on Artificial Intelligence},\n pages = {15621-15629},\n title = {AHPA: Adaptive
      Horizontal Pod Autoscaling Systems on Alibaba Cloud Container Service for Kubernetes},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2157867421", "name": "Zhiqiang
      Zhou"}, {"authorId": "2152737103", "name": "Chaoli Zhang"}, {"authorId": "2192693674",
      "name": "Lingna Ma"}, {"authorId": "2216587444", "name": "Jing Gu"}, {"authorId":
      "8778492", "name": "Huajie Qian"}, {"authorId": "3308963", "name": "Qingsong
      Wen"}, {"authorId": "2110940896", "name": "Liang Sun"}, {"authorId": "2152926432",
      "name": "Pengxi Li"}, {"authorId": "48859349", "name": "Zhimin Tang"}]}, {"paperId":
      "45fe7c9ef33358c61bad046eafaedef08bdf732f", "externalIds": {"DBLP": "conf/wsdm/ZhouZZSFWW23",
      "DOI": "10.1145/3539597.3573037", "CorpusId": 257079764}, "corpusId": 257079764,
      "publicationVenue": {"id": "ea38228f-6ed3-4222-a3ce-d963d8cc9516", "name": "Web
      Search and Data Mining", "type": "conference", "alternate_names": ["Web Search
      Data Min", "WSDM"], "url": "http://www.wikicfp.com/cfp/program?id=3158"}, "url":
      "https://www.semanticscholar.org/paper/45fe7c9ef33358c61bad046eafaedef08bdf732f",
      "title": "ElasticDL: A Kubernetes-native Deep Learning Framework with Fault-tolerance
      and Elastic Scheduling", "abstract": "The power of artificial intelligence (AI)
      models originates with sophisticated model architecture as well as the sheer
      size of the model. These large-scale AI models impose new and challenging system
      requirements regarding scalability, reliability, and flexibility. One of the
      most promising solutions in the industry is to train these large-scale models
      on distributed deep-learning frameworks. With the power of all distributed computations,
      it is desired to achieve a training process with excellent scalability, elastic
      scheduling (flexibility), and fault tolerance (reliability). In this paper,
      we demonstrate the scalability, flexibility, and reliability of our open-source
      Elastic Deep Learning (ElasticDL) framework. Our ElasticDL utilizes an open-source
      system, i.e., Kubernetes, for automating deployment, scaling, and management
      of containerized application features to provide fault tolerance and support
      elastic scheduling for DL tasks.", "venue": "Web Search and Data Mining", "year":
      2023, "referenceCount": 16, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle"],
      "publicationDate": "2023-02-27", "journal": {"name": "Proceedings of the Sixteenth
      ACM International Conference on Web Search and Data Mining"}, "citationStyles":
      {"bibtex": "@Book{Zhou2023ElasticDLAK,\n author = {Jun Zhou and Ke Zhang and
      Feng Zhu and Qitao Shi and Wenjing Fang and Lin Wang and Yi Wang},\n booktitle
      = {Web Search and Data Mining},\n journal = {Proceedings of the Sixteenth ACM
      International Conference on Web Search and Data Mining},\n title = {ElasticDL:
      A Kubernetes-native Deep Learning Framework with Fault-tolerance and Elastic
      Scheduling},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2151550753",
      "name": "Jun Zhou"}, {"authorId": "2119059495", "name": "Ke Zhang"}, {"authorId":
      "2075369485", "name": "Feng Zhu"}, {"authorId": "152824863", "name": "Qitao
      Shi"}, {"authorId": "104108744", "name": "Wenjing Fang"}, {"authorId": "2144736678",
      "name": "Lin Wang"}, {"authorId": "2209207345", "name": "Yi Wang"}]}, {"paperId":
      "54b6b766069d50220462dc53f9eca1314822cb28", "externalIds": {"DOI": "10.3390/drones7010035",
      "CorpusId": 255688874}, "corpusId": 255688874, "publicationVenue": {"id": "20f4c07b-44b3-4e7d-8546-e3c11620a21c",
      "name": "Drones", "issn": "2504-446X", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-1077192",
      "alternate_urls": ["https://www.mdpi.com/journal/drones", "https://www.mdpi.com/journal/drones/about",
      "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-1077192"]}, "url":
      "https://www.semanticscholar.org/paper/54b6b766069d50220462dc53f9eca1314822cb28",
      "title": "Software Aging Effects on Kubernetes in Container Orchestration Systems
      for Digital Twin Cloud Infrastructures of Urban Air Mobility", "abstract": "It
      is necessary to develop a vehicle digital twin (DT) for urban air mobility (UAM)
      that uses an accurate, physics-based emulator to model the statics and dynamics
      of a vehicle. This is because the use of digital twins in the operation and
      control of UAM vehicles is essential for the UAM operational digital twin infrastructure
      (UAM-ODT). There are several issues that need to be addressed in this process:
      (i) the lack of digital twin engines for the digitalization (twinization) of
      the dynamics and control of UAM vehicles at the core of UAM-ODT systems; (ii)
      the lack of back-end system engineering in the development of UAM vehicle DTs;
      and (iii) the lack of fault-tolerant mechanisms for the DT cloud back-end system
      to run uninterrupted operations 24/7. On the other hand, software aging and
      rejuvenation are becoming increasingly important in a variety of computing scenarios
      as the demand for reliable and available services increases. With the increasing
      use of containerized systems, there is also a need for an orchestrator to support
      easy management and reduce operational costs. In this paper, an operational
      digital twin (ODT) of a typical urban air mobility (UAM) infrastructure is developed
      on a private cloud system based on Kubernetes using a proposed cloud-in-the-loop
      simulation approach. To ensure the ODT can provide uninterrupted operational
      control and services in UAM around the clock, we propose a methodology for investigating
      software aging in Kubernetes-based containerized clouds. We evaluate the behavior
      of Kubernetes software using the Nginx and K3S tools while they manage pods
      in an accelerated lifetime experiment. We continuously execute operations for
      creating and terminating pods, allowing us to observe the utilization of computing
      resources (e.g., CPU, memory, and I/O), the performance of the Nginx and K3S
      environments, and the response time of an application hosted in those environments.
      In some conditions and for specific metrics, such as virtual memory usage, we
      observed the effects of software aging, including a memory leak that is not
      fully cleared when the cluster is stopped. These issues could lead to system
      performance degradation and eventually compromise the reliability and availability
      of the system when it crashes due to memory space exhaustion or full utilization
      of swap space on the hard disk. This study helps with the deployment and maintenance
      of virtualized environments from the standpoint of system dependability in digital
      twin computing infrastructures where a large number of services are running
      under strict continuity requirements.", "venue": "Drones", "year": 2023, "referenceCount":
      9, "citationCount": 7, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/2504-446X/7/1/35/pdf?version=1672737942",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2023-01-03", "journal": {"name":
      "Drones"}, "citationStyles": {"bibtex": "@Article{Costa2023SoftwareAE,\n author
      = {J. Costa and R. Matos and J. Araujo and Jueying Li and Eunmi Choi and T.
      Nguyen and Jae-Woo Lee and Dugki Min},\n booktitle = {Drones},\n journal = {Drones},\n
      title = {Software Aging Effects on Kubernetes in Container Orchestration Systems
      for Digital Twin Cloud Infrastructures of Urban Air Mobility},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "152700221", "name": "J. Costa"}, {"authorId": "1808023",
      "name": "R. Matos"}, {"authorId": "143974575", "name": "J. Araujo"}, {"authorId":
      "2136077661", "name": "Jueying Li"}, {"authorId": "143691244", "name": "Eunmi
      Choi"}, {"authorId": "2157416142", "name": "T. Nguyen"}, {"authorId": "2108480751",
      "name": "Jae-Woo Lee"}, {"authorId": "144241878", "name": "Dugki Min"}]}, {"paperId":
      "8e853411a33651b57251f5f2bac46b774a180607", "externalIds": {"DBLP": "conf/msr/ZeroualiOR23",
      "DOI": "10.1109/MSR59073.2023.00078", "CorpusId": 259835607}, "corpusId": 259835607,
      "publicationVenue": {"id": "d7907408-25bc-4816-a81d-4e0f2f6482c8", "name": "IEEE
      Working Conference on Mining Software Repositories", "type": "conference", "alternate_names":
      ["IEEE Work Conf Min Softw Repos", "Min Softw Repos", "Mining Software Repositories",
      "MSR"], "url": "https://dl.acm.org/conference/icse/proceedings"}, "url": "https://www.semanticscholar.org/paper/8e853411a33651b57251f5f2bac46b774a180607",
      "title": "Helm Charts for Kubernetes Applications: Evolution, Outdatedness and
      Security Risks", "abstract": "Using Kubernetes for the deployment, management
      and scaling of containerized applications has become a common practice. To facilitate
      the installation and management of these applications, practitioners can use
      the Helm package manager to assemble their configuration files into charts.
      The latter are reusable packages of pre-configured Kubernetes resources that
      can be deployed as a unit. In this paper, we aim to support chart developers
      and users by carrying out a comprehensive study on publicly available charts.
      For 9,482 charts that are distributed via the Artifact Hub repository, we mine
      and collect the list of their metadata, versions, dependencies, maintainers
      and container images. Then, we carry out an empirical analysis to assess the
      state and evolution of charts, as well as the outdatedness and security risks
      of their images. We found that the ecosystem forming around Helm charts is growing
      fast. However, most of the charts are not official with no popularity and no
      license. We also observed that charts tend to release multiple versions, but
      around half of them are still in the initial development phase. When looking
      at the container images used in charts, we found that around half of them are
      outdated and 88.1% of them are exposed to vulnerabilities, jeopardizing 93.7%
      of the charts.", "venue": "IEEE Working Conference on Mining Software Repositories",
      "year": 2023, "referenceCount": 21, "citationCount": 3, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "https://biblio.vub.ac.be/vubirfiles/95082106/main.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2023-05-01", "journal": {"name": "2023 IEEE/ACM
      20th International Conference on Mining Software Repositories (MSR)", "pages":
      "523-533"}, "citationStyles": {"bibtex": "@Article{Zerouali2023HelmCF,\n author
      = {Ahmed Zerouali and R. Opdebeeck and Coen De Roover},\n booktitle = {IEEE
      Working Conference on Mining Software Repositories},\n journal = {2023 IEEE/ACM
      20th International Conference on Mining Software Repositories (MSR)},\n pages
      = {523-533},\n title = {Helm Charts for Kubernetes Applications: Evolution,
      Outdatedness and Security Risks},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "37129683", "name": "Ahmed Zerouali"}, {"authorId": "2023734578", "name": "R.
      Opdebeeck"}, {"authorId": "2502279", "name": "Coen De Roover"}]}, {"paperId":
      "146d185c1f2094d67b7fd367516516aeccea7619", "externalIds": {"DBLP": "journals/access/PhucPK22",
      "DOI": "10.1109/ACCESS.2022.3150867", "CorpusId": 246771065}, "corpusId": 246771065,
      "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26", "name": "IEEE
      Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/146d185c1f2094d67b7fd367516516aeccea7619",
      "title": "Traffic-Aware Horizontal Pod Autoscaler in Kubernetes-Based Edge Computing
      Infrastructure", "abstract": "Container-based Internet of Things (IoT) applications
      in an edge computing environment require autoscaling to dynamically adapt to
      fluctuations in IoT device requests. Although Kubernetes\u2019 horizontal pod
      autoscaler provides the resource autoscaling feature by monitoring the resource
      status of nodes and then making pod adjustments if necessary, it evenly allocates
      pods to worker nodes without considering the imbalance of resource demand between
      nodes in an edge computing environment. This paper proposes the traffic-aware
      horizontal pod autoscaler (THPA), which operates on top of Kubernetes to enable
      real-time traffic-aware resource autoscaling for IoT applications in an edge
      computing environment. THPA performs upscaling and downscaling actions based
      on network traffic information from nodes to improve the quality of IoT services
      in the edge computing infrastructure. Experimental results show that Kubernetes
      with THPA improves the average response time and throughput of IoT applications
      by approximately 150% compared to Kubernetes with the horizontal pod autoscaler.
      This indicates that it is important to provide proper resource scaling according
      to the network traffic distribution to maximize IoT applications performance
      in an edge computing environment.", "venue": "IEEE Access", "year": 2022, "referenceCount":
      36, "citationCount": 21, "influentialCitationCount": 2, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/6287639/9668973/09709810.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "IEEE Access",
      "pages": "18966-18977", "volume": "10"}, "citationStyles": {"bibtex": "@Article{Phuc2022TrafficAwareHP,\n
      author = {Le Hoang Phuc and Linh-An Phan and Taehong Kim},\n booktitle = {IEEE
      Access},\n journal = {IEEE Access},\n pages = {18966-18977},\n title = {Traffic-Aware
      Horizontal Pod Autoscaler in Kubernetes-Based Edge Computing Infrastructure},\n
      volume = {10},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2154156888",
      "name": "Le Hoang Phuc"}, {"authorId": "151095859", "name": "Linh-An Phan"},
      {"authorId": "2338970", "name": "Taehong Kim"}]}, {"paperId": "0bd9e0ab083e78b6513b5f40381dd4b2a53aed02",
      "externalIds": {"DOI": "10.1088/1742-6596/2438/1/012030", "CorpusId": 256897701},
      "corpusId": 256897701, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0bd9e0ab083e78b6513b5f40381dd4b2a53aed02",
      "title": "Distributed file systems performance tests on Kubernetes/Docker clusters",
      "abstract": "Modern data centers need distributed file systems to provide user
      applications with access to data stored on a large number of nodes. The ability
      to mount a distributed file system and leverage its native application programming
      interfaces in a Docker container, combined with the advanced orchestration features
      provided by Kubernetes, can improve flexibility in installing, monitoring and
      recovering data management and transfer services. At INFN-CNAF some distributed
      file systems (i.e. IBM Spectrum Scale, CephFS and Lustre-ZFS) deployment tests
      with Kubernetes and Docker have been conducted recently with positive results.
      The purpose of this paper is to show the throughput scores of the previously
      mentioned file systems when their servers are containerized and run on bare
      metal machines using a container orchestration framework. This is a preliminary
      study: for the time being, only sequential read/write tests have been considered.",
      "venue": "Journal of Physics: Conference Series", "year": 2023, "referenceCount":
      1, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://iopscience.iop.org/article/10.1088/1742-6596/2438/1/012030/pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Physics"], "s2FieldsOfStudy": [{"category":
      "Physics", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Conference"], "publicationDate": "2023-02-01", "journal": {"name": "Journal
      of Physics: Conference Series", "volume": "2438"}, "citationStyles": {"bibtex":
      "@Conference{Fornari2023DistributedFS,\n author = {Federico Fornari and A. Cavalli
      and D. Cesini and A. Falabella and E. Fattibene and L. Morganti and A. Prosperini
      and V. Sapunenko},\n booktitle = {Journal of Physics: Conference Series},\n
      journal = {Journal of Physics: Conference Series},\n title = {Distributed file
      systems performance tests on Kubernetes/Docker clusters},\n volume = {2438},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2058387319", "name": "Federico
      Fornari"}, {"authorId": "152753179", "name": "A. Cavalli"}, {"authorId": "2641540",
      "name": "D. Cesini"}, {"authorId": "5482670", "name": "A. Falabella"}, {"authorId":
      "3274392", "name": "E. Fattibene"}, {"authorId": "3383078", "name": "L. Morganti"},
      {"authorId": "49486213", "name": "A. Prosperini"}, {"authorId": "2865271", "name":
      "V. Sapunenko"}]}, {"paperId": "7b8b80b8cda90b37db7e2d29e22ac131a165769c", "externalIds":
      {"DBLP": "journals/tjs/LiSZCM23", "DOI": "10.1007/s11227-023-05077-7", "CorpusId":
      256625139}, "corpusId": 256625139, "publicationVenue": {"id": "26ed29a9-64ce-4d6c-9024-8b022fd2fe22",
      "name": "Journal of Supercomputing", "type": "journal", "alternate_names": ["The
      Journal of Supercomputing", "J Supercomput"], "issn": "0920-8542", "url": "http://www.springer.com/computer/programming/journal/11227",
      "alternate_urls": ["https://link.springer.com/journal/11227", "https://www.springer.com/computer/swe/journal/11227?changeHeader"]},
      "url": "https://www.semanticscholar.org/paper/7b8b80b8cda90b37db7e2d29e22ac131a165769c",
      "title": "Cost-efficient scheduling algorithms based on beetle antennae search
      for containerized applications in Kubernetes clouds", "abstract": null, "venue":
      "Journal of Supercomputing", "year": 2023, "referenceCount": 48, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-02-05", "journal": {"name": "The
      Journal of Supercomputing", "pages": "10300-10334", "volume": "79"}, "citationStyles":
      {"bibtex": "@Article{Li2023CostefficientSA,\n author = {Hongjian Li and Jie
      Shen and Lei Zheng and Yuzheng Cui and Zhi Mao},\n booktitle = {Journal of Supercomputing},\n
      journal = {The Journal of Supercomputing},\n pages = {10300-10334},\n title
      = {Cost-efficient scheduling algorithms based on beetle antennae search for
      containerized applications in Kubernetes clouds},\n volume = {79},\n year =
      {2023}\n}\n"}, "authors": [{"authorId": "2155566945", "name": "Hongjian Li"},
      {"authorId": "2109647010", "name": "Jie Shen"}, {"authorId": "2115223760", "name":
      "Lei Zheng"}, {"authorId": "2204637065", "name": "Yuzheng Cui"}, {"authorId":
      "2210555662", "name": "Zhi Mao"}]}, {"paperId": "a47eb479a7aa140c14aea10bd5458cf2e0dd575b",
      "externalIds": {"DBLP": "journals/tcc/GoethalsTV22", "MAG": "3095212414", "DOI":
      "10.1109/TCC.2020.3033807", "CorpusId": 229203017}, "corpusId": 229203017, "publicationVenue":
      {"id": "7fca7065-fa6f-490b-923e-3ffc07857f1c", "name": "IEEE Transactions on
      Cloud Computing", "type": "journal", "alternate_names": ["IEEE Trans Cloud Comput"],
      "issn": "2168-7161", "url": "https://www.computer.org/web/tcc", "alternate_urls":
      ["http://ieeexplore.ieee.org/servlet/opac?punumber=6245519"]}, "url": "https://www.semanticscholar.org/paper/a47eb479a7aa140c14aea10bd5458cf2e0dd575b",
      "title": "Extending Kubernetes Clusters to Low-Resource Edge Devices Using Virtual
      Kubelets", "abstract": "In recent years, containers have gained popularity as
      a lightweight virtualization technology. This rise in popularity has gone hand
      in hand with the adoption of microservice architectures, mostly thanks to the
      scalable, ethereal, and isolated nature of containers. More recently, edge devices
      have become powerful enough to be able to run containerized microservices, while
      remaining flexible enough in terms of size and power to be deployed almost anywhere.
      This has triggered research into several container placement strategies involving
      edge networks, leading to concepts such as osmotic computing. While these container
      placement strategies are optimal in terms of workload placement, current container
      orchestrators are often not suitable for running on edge devices due to their
      high resource requirements. In this article, FLEDGE is presented as a Kubernetes-compatible
      container orchestrator based on Virtual Kubelets, aimed primarily at container
      orchestration on low-resource edge devices. Several aspects of low-resource
      container orchestration are examined, such as the choice of container runtime
      and how to realize container networking. A number of evaluations are performed
      to determine how FLEDGE compares to Kubernetes and K3S in terms of resource
      requirements, showing that it needs around 60MiB memory and 78MiB storage to
      run on a Raspberry Pi 3, including all dependencies, which is significantly
      less than both studied alternatives.", "venue": "IEEE Transactions on Cloud
      Computing", "year": 2022, "referenceCount": 55, "citationCount": 20, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://biblio.ugent.be/publication/01GPB050EM8G2FDB26JZYPJXWJ/file/01GPB09K3Y3P3TAFKM737CQCD4.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-10-01", "journal":
      {"name": "IEEE Transactions on Cloud Computing", "pages": "2623-2636", "volume":
      "10"}, "citationStyles": {"bibtex": "@Article{Goethals2022ExtendingKC,\n author
      = {Tom Goethals and F. de Turck and B. Volckaert},\n booktitle = {IEEE Transactions
      on Cloud Computing},\n journal = {IEEE Transactions on Cloud Computing},\n pages
      = {2623-2636},\n title = {Extending Kubernetes Clusters to Low-Resource Edge
      Devices Using Virtual Kubelets},\n volume = {10},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "52223901", "name": "Tom Goethals"}, {"authorId": "2065702132",
      "name": "F. de Turck"}, {"authorId": "1803683", "name": "B. Volckaert"}]}, {"paperId":
      "5b6cc985d757fd92e1b0b500ff404a0abae3aee5", "externalIds": {"DOI": "10.3390/app13148363",
      "CorpusId": 260011422}, "corpusId": 260011422, "publicationVenue": {"id": "136edf8d-0f88-4c2c-830f-461c6a9b842e",
      "name": "Applied Sciences", "type": "journal", "alternate_names": ["Appl Sci"],
      "issn": "2076-3417", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-217814",
      "alternate_urls": ["http://www.mathem.pub.ro/apps/", "https://www.mdpi.com/journal/applsci",
      "http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-217814"]}, "url":
      "https://www.semanticscholar.org/paper/5b6cc985d757fd92e1b0b500ff404a0abae3aee5",
      "title": "OpenFog-Compliant Application-Aware Platform: A Kubernetes Extension",
      "abstract": "Distributed computing paradigms have evolved towards low latency
      and highly virtualized environments. Fog Computing, as its latest iteration,
      enables the usage of Cloud-like services closer to the generators and consumers
      of data. The processing in this layer is performed by Fog Applications, which
      are decomposed into smaller components following the microservice paradigm and
      encapsulated into containers. Current state-of-the-art container orchestrators
      can manage hundreds of simultaneous containers. However, Kubernetes, being the
      de facto standard, does not consider the application itself as a top-level entity,
      which limits its orchestration capabilities. This raises the need to rearchitect
      Kubernetes to benefit from application-awareness, which refers to an orchestration
      method optimized for managing the applications and the set of components that
      comprise them. Thus, this paper proposes an application-aware and OpenFog-compliant
      architecture that manages applications as first-level entities during their
      lifecycle. Furthermore, the proposed architecture allows the definition of organizational
      structures to group subordinated applications based on user-defined hierarchies.
      This logical structuring makes it possible to outline how orchestration should
      be shaped to reflect the operating model of a system or an organization. The
      proposed architecture is implemented as a Kubernetes extension and provided
      as an operator.", "venue": "Applied Sciences", "year": 2023, "referenceCount":
      23, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/2076-3417/13/14/8363/pdf?version=1689838237",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-07-19", "journal": {"name": "Applied
      Sciences"}, "citationStyles": {"bibtex": "@Article{Cuadra2023OpenFogCompliantAP,\n
      author = {Julen Cuadra and Ekaitz Hurtado and F. P\u00e9rez and O. Casquero
      and A. Armentia},\n booktitle = {Applied Sciences},\n journal = {Applied Sciences},\n
      title = {OpenFog-Compliant Application-Aware Platform: A Kubernetes Extension},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "2224150294", "name": "Julen
      Cuadra"}, {"authorId": "2224150753", "name": "Ekaitz Hurtado"}, {"authorId":
      "145770692", "name": "F. P\u00e9rez"}, {"authorId": "2464073", "name": "O. Casquero"},
      {"authorId": "46427456", "name": "A. Armentia"}]}, {"paperId": "f191183fbe43a88268d671642a7d66a461b69e3a",
      "externalIds": {"DBLP": "conf/itsc/LampeRZWKE23", "ArXiv": "2308.07053", "DOI":
      "10.1109/ITSC57777.2023.10422370", "CorpusId": 260887729}, "corpusId": 260887729,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/f191183fbe43a88268d671642a7d66a461b69e3a",
      "title": "RobotKube: Orchestrating Large-Scale Cooperative Multi-Robot Systems
      with Kubernetes and ROS", "abstract": "Modern cyber-physical systems (CPS) such
      as Cooperative Intelligent Transport Systems (C-ITS) are increasingly defined
      by the software which operates these systems. In practice, microservice architectures
      can be employed, which may consist of containerized microservices running in
      a cluster comprised of robots and supporting infrastructure. These microservices
      need to be orchestrated dynamically according to ever changing requirements
      posed at the system. Additionally, these systems are embedded in DevOps processes
      aiming at continually updating and upgrading both the capabilities of CPS components
      and of the system as a whole. In this paper, we present RobotKube, an approach
      to orchestrating containerized microservices for large-scale cooperative multi-robot
      CPS based on Kubernetes. We describe how to automate the orchestration of software
      across a CPS, and include the possibility to monitor and selectively store relevant
      accruing data. In this context, we present two main components of such a system:
      an event detector capable of, e.g., requesting the deployment of additional
      applications, and an application manager capable of automatically configuring
      the required changes in the Kubernetes cluster. By combining the widely adopted
      Kubernetes platform with the Robot Operating System (ROS), we enable the use
      of standard tools and practices for developing, deploying, scaling, and monitoring
      microservices in C-ITS. We demonstrate and evaluate RobotKube in an exemplary
      and reproducible use case that we make publicly available at github.com/ika-rwth-aachen/robotkube.",
      "venue": "2023 IEEE 26th International Conference on Intelligent Transportation
      Systems (ITSC)", "year": 2023, "referenceCount": 38, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2308.07053",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2023-08-14",
      "journal": {"name": "2023 IEEE 26th International Conference on Intelligent
      Transportation Systems (ITSC)", "pages": "2719-2725"}, "citationStyles": {"bibtex":
      "@Article{Lampe2023RobotKubeOL,\n author = {Bastian Lampe and Lennart Reiher
      and L. Zanger and Timo Woopen and Raphael van Kempen and L. Eckstein},\n booktitle
      = {2023 IEEE 26th International Conference on Intelligent Transportation Systems
      (ITSC)},\n journal = {2023 IEEE 26th International Conference on Intelligent
      Transportation Systems (ITSC)},\n pages = {2719-2725},\n title = {RobotKube:
      Orchestrating Large-Scale Cooperative Multi-Robot Systems with Kubernetes and
      ROS},\n year = {2023}\n}\n"}, "authors": [{"authorId": "1880092915", "name":
      "Bastian Lampe"}, {"authorId": "2096607894", "name": "Lennart Reiher"}, {"authorId":
      "98215920", "name": "L. Zanger"}, {"authorId": "81250006", "name": "Timo Woopen"},
      {"authorId": "1672875190", "name": "Raphael van Kempen"}, {"authorId": "143842388",
      "name": "L. Eckstein"}]}, {"paperId": "301c433043fb8e992a0c36e2bb0a2032258e04dd",
      "externalIds": {"DBLP": "journals/fi/DellImmagineSB23", "DOI": "10.3390/fi15070228",
      "CorpusId": 259760671}, "corpusId": 259760671, "publicationVenue": {"id": "c3e5f1c8-9ba7-47e5-acde-53063a69d483",
      "name": "Future Internet", "type": "journal", "issn": "1999-5903", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-156830",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-156830",
      "https://www.mdpi.com/journal/futureinternet"]}, "url": "https://www.semanticscholar.org/paper/301c433043fb8e992a0c36e2bb0a2032258e04dd",
      "title": "KubeHound: Detecting Microservices'' Security Smells in Kubernetes
      Deployments", "abstract": "As microservice-based architectures are increasingly
      adopted, microservices security has become a crucial aspect to consider for
      IT businesses. Starting from a set of \u201csecurity smells\u201d for microservice
      applications that were recently proposed in the literature, we enable the automatic
      detection of such smells in microservice applications deployed with Kubernetes.
      We first introduce possible analysis techniques to automatically detect security
      smells in Kubernetes-deployed microservices. We then demonstrate the practical
      applicability of the proposed techniques by introducing KubeHound, an extensible
      prototype tool for automatically detecting security smells in microservice applications,
      and which already features a selected subset of the discussed analyses. We finally
      show that KubeHound can effectively detect instances of security smells in microservice
      applications by means of controlled experiments and by applying it to existing,
      third-party applications.", "venue": "Future Internet", "year": 2023, "referenceCount":
      11, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/1999-5903/15/7/228/pdf?version=1687932243",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-06-26", "journal": {"name": "Future Internet", "pages":
      "228", "volume": "15"}, "citationStyles": {"bibtex": "@Article{Dell\u2019Immagine2023KubeHoundDM,\n
      author = {Giorgio Dell\u2019Immagine and J. Soldani and Antonio Brogi},\n booktitle
      = {Future Internet},\n journal = {Future Internet},\n pages = {228},\n title
      = {KubeHound: Detecting Microservices'' Security Smells in Kubernetes Deployments},\n
      volume = {15},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2222818753",
      "name": "Giorgio Dell\u2019Immagine"}, {"authorId": "2265546", "name": "J. Soldani"},
      {"authorId": "1787701", "name": "Antonio Brogi"}]}, {"paperId": "deab694f30f57f73d7ba882328b175aa1c0e9f34",
      "externalIds": {"DOI": "10.1109/ACCTCS58815.2023.00040", "CorpusId": 259123533},
      "corpusId": 259123533, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/deab694f30f57f73d7ba882328b175aa1c0e9f34",
      "title": "A Customized Kubernetes Scheduling Algorithm to Improve Resource Utilization
      of Nodes", "abstract": "This article proposes a customized Kubernetes scheduling
      algorithm to improve resource utilization of nodes in a cluster. The algorithm
      is optimized over the default algorithm. The custom algorithm solves two problems,
      that are setting an appropriate Request value and determining the scoring rule.
      The article also evaluates the performance of the custom algorithm. It can be
      seen that the utilization rate of node resources is improved, and load balance
      between nodes in the cluster is better.", "venue": "2023 3rd Asia-Pacific Conference
      on Communications Technology and Computer Science (ACCTCS)", "year": 2023, "referenceCount":
      8, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2023-02-01",
      "journal": {"name": "2023 3rd Asia-Pacific Conference on Communications Technology
      and Computer Science (ACCTCS)", "pages": "588-591"}, "citationStyles": {"bibtex":
      "@Conference{Ning2023ACK,\n author = {An Ning},\n booktitle = {2023 3rd Asia-Pacific
      Conference on Communications Technology and Computer Science (ACCTCS)},\n journal
      = {2023 3rd Asia-Pacific Conference on Communications Technology and Computer
      Science (ACCTCS)},\n pages = {588-591},\n title = {A Customized Kubernetes Scheduling
      Algorithm to Improve Resource Utilization of Nodes},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2072094112", "name": "An Ning"}]}, {"paperId": "b08d72f2ee0b7a7376a1f79fcb2e01709b719729",
      "externalIds": {"DBLP": "conf/noms/LeiterHKBGT23", "DOI": "10.1109/NOMS56928.2023.10154212",
      "CorpusId": 259217735}, "corpusId": 259217735, "publicationVenue": {"id": "042bc893-3752-44f7-9e77-c59ce54b1b11",
      "name": "IEEE/IFIP Network Operations and Management Symposium", "type": "conference",
      "alternate_names": ["Network Operations and Management Symposium", "NOMS", "IEEE/IFIP
      Netw Oper Manag Symp", "Netw Oper Manag Symp"], "url": "http://www.comsoc.org/"},
      "url": "https://www.semanticscholar.org/paper/b08d72f2ee0b7a7376a1f79fcb2e01709b719729",
      "title": "GitOps and Kubernetes Operator-based Network Function Configuration",
      "abstract": "Cloud-native approach has touched network management and automation
      too. Kubernetes as de facto standard for running containerized network functions
      provide ways for network operation too. With the help of Kubernetes Operators
      (Operator Pattern) more and more manual network management work can be automatized
      which fits into the cloud-native ecosystem. In this paper, we present how Kubernetes
      Operators can be used for Netconf-based configuration management while utilizing
      GitOps principles. We provide numerical results to show the power of this type
      of network management.", "venue": "IEEE/IFIP Network Operations and Management
      Symposium", "year": 2023, "referenceCount": 19, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-05-08", "journal": {"name": "NOMS 2023-2023 IEEE/IFIP Network Operations
      and Management Symposium", "pages": "1-5"}, "citationStyles": {"bibtex": "@Article{Leiter2023GitOpsAK,\n
      author = {\u00c1kos Leiter and Attila Hegyi and I. Kisp\u00e1l and P\u00e1l
      B\u00f6\u00f5sy and N\u00e1ndor Galambosi and G\u00e1bor Zsolt Tar},\n booktitle
      = {IEEE/IFIP Network Operations and Management Symposium},\n journal = {NOMS
      2023-2023 IEEE/IFIP Network Operations and Management Symposium},\n pages =
      {1-5},\n title = {GitOps and Kubernetes Operator-based Network Function Configuration},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "51899499", "name": "\u00c1kos
      Leiter"}, {"authorId": "153597247", "name": "Attila Hegyi"}, {"authorId": "69062004",
      "name": "I. Kisp\u00e1l"}, {"authorId": "2220368523", "name": "P\u00e1l B\u00f6\u00f5sy"},
      {"authorId": "8696426", "name": "N\u00e1ndor Galambosi"}, {"authorId": "2220367567",
      "name": "G\u00e1bor Zsolt Tar"}]}, {"paperId": "02eda37891acdbd899aa6c01249917ba94449151",
      "externalIds": {"DOI": "10.3390/math11122675", "CorpusId": 259159738}, "corpusId":
      259159738, "publicationVenue": {"id": "6175efe8-6f8e-4cbe-8cee-d154f4e78627",
      "name": "Mathematics", "issn": "2227-7390", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-283014",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-283014",
      "https://www.mdpi.com/journal/mathematics"]}, "url": "https://www.semanticscholar.org/paper/02eda37891acdbd899aa6c01249917ba94449151",
      "title": "Toward Optimal Load Prediction and Customizable Autoscaling Scheme
      for Kubernetes", "abstract": "Most enterprise customers now choose to divide
      a large monolithic service into large numbers of loosely-coupled, specialized
      microservices, which can be developed and deployed separately. Docker, as a
      light-weight virtualization technology, has been widely adopted to support diverse
      microservices. At the moment, Kubernetes is a portable, extensible, and open-source
      orchestration platform for managing these containerized microservice applications.
      To adapt to frequently changing user requests, it offers an automated scaling
      method, Horizontal Pod Autoscaler (HPA), that can scale itself based on the
      system\u2019s current workload. The native reactive auto-scaling method, however,
      is unable to foresee the system workload scenario in the future to complete
      proactive scaling, leading to QoS (quality of service) violations, long tail
      latency, and insufficient server resource usage. In this paper, we suggest a
      new proactive scaling scheme based on deep learning approaches to make up for
      HPA\u2019s inadequacies as the default autoscaler in Kubernetes. After meticulous
      experimental evaluation and comparative analysis, we use the Gated Recurrent
      Unit (GRU) model with higher prediction accuracy and efficiency as the prediction
      model, supplemented by a stability window mechanism to improve the accuracy
      and stability of the prediction model. Finally, with the third-party custom
      autoscaling framework, Custom Pod Autoscaler (CPA), we packaged our custom autoscaling
      algorithm into a framework and deployed the framework into the real Kubernetes
      cluster. Comprehensive experiment results prove the feasibility of our autoscaling
      scheme, which significantly outperforms the existing Horizontal Pod Autoscaler
      (HPA) approach.", "venue": "Mathematics", "year": 2023, "referenceCount": 28,
      "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      {"url": "https://www.mdpi.com/2227-7390/11/12/2675/pdf?version=1686645006",
      "status": "CLOSED"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-06-12", "journal": {"name": "Mathematics"}, "citationStyles": {"bibtex":
      "@Article{Mondal2023TowardOL,\n author = {S. Mondal and Xiaohai Wu and H. M.
      D. Kabir and Hongning Dai and Kan Ni and Honggang Yuan and Ting Wang},\n booktitle
      = {Mathematics},\n journal = {Mathematics},\n title = {Toward Optimal Load Prediction
      and Customizable Autoscaling Scheme for Kubernetes},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "2203223", "name": "S. Mondal"}, {"authorId": "2108011835",
      "name": "Xiaohai Wu"}, {"authorId": "2038537268", "name": "H. M. D. Kabir"},
      {"authorId": "46448389", "name": "Hongning Dai"}, {"authorId": "2193641674",
      "name": "Kan Ni"}, {"authorId": "2114128823", "name": "Honggang Yuan"}, {"authorId":
      "2155389969", "name": "Ting Wang"}]}, {"paperId": "1fd2b68c9f93a6eae65d772f419ba73438fe3f83",
      "externalIds": {"DBLP": "conf/iscc/BorsattiCFGPSSSTZ23", "DOI": "10.1109/ISCC58397.2023.10217853",
      "CorpusId": 261313991}, "corpusId": 261313991, "publicationVenue": {"id": "159aed30-148b-4b50-99a4-372b0af958d9",
      "name": "International Symposium on Computers and Communications", "type": "conference",
      "alternate_names": ["ISCC", "Int Symp Comput Commun"], "url": "https://ieeexplore.ieee.org/xpl/conhome/1000156/all-proceedings"},
      "url": "https://www.semanticscholar.org/paper/1fd2b68c9f93a6eae65d772f419ba73438fe3f83",
      "title": "Modeling Digital Twins of Kubernetes-Based Applications", "abstract":
      "Kubernetes provides several functions that can help service providers to deal
      with the management of complex container-based applications. However, most of
      these functions need a time-consuming and costly customization process to address
      service-specific requirements. The adoption of Digital Twin (DT) solutions can
      ease the configuration process by enabling the evaluation of multiple configurations
      and custom policies by means of simulation-based what-if scenario analysis.
      To facilitate this process, this paper proposes KubeTwin, a framework to enable
      the definition and evaluation of DTs of Kubernetes applications. Specifically,
      this work presents an innovative simulation-based inference approach to define
      accurate DT models for a Kubernetes environment. We experimentally validate
      the proposed solution by implementing a DT model of an image recognition application
      that we tested under different conditions to verify the accuracy of the DT model.
      The soundness of these results demonstrates the validity of the KubeTwin approach
      and calls for further investigation.", "venue": "International Symposium on
      Computers and Communications", "year": 2023, "referenceCount": 17, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-07-09", "journal": {"name": "2023 IEEE Symposium on Computers and Communications
      (ISCC)", "pages": "219-224"}, "citationStyles": {"bibtex": "@Article{Borsatti2023ModelingDT,\n
      author = {D. Borsatti and W. Cerroni and L. Foschini and G. Grabarnik and Filippo
      Poltronieri and Domenico Scotece and L. Shwartz and C. Stefanelli and M. Tortonesi
      and Mattia Zaccarini},\n booktitle = {International Symposium on Computers and
      Communications},\n journal = {2023 IEEE Symposium on Computers and Communications
      (ISCC)},\n pages = {219-224},\n title = {Modeling Digital Twins of Kubernetes-Based
      Applications},\n year = {2023}\n}\n"}, "authors": [{"authorId": "117434322",
      "name": "D. Borsatti"}, {"authorId": "1756511", "name": "W. Cerroni"}, {"authorId":
      "1748978", "name": "L. Foschini"}, {"authorId": "29935018", "name": "G. Grabarnik"},
      {"authorId": "51025749", "name": "Filippo Poltronieri"}, {"authorId": "29924476",
      "name": "Domenico Scotece"}, {"authorId": "1828069", "name": "L. Shwartz"},
      {"authorId": "1754846", "name": "C. Stefanelli"}, {"authorId": "2797581", "name":
      "M. Tortonesi"}, {"authorId": "2202590658", "name": "Mattia Zaccarini"}]}, {"paperId":
      "0ad36e53d66cb22dc75ed95c4da786631be155ba", "externalIds": {"DOI": "10.47992/ijcsbe.2581.6942.0263",
      "CorpusId": 258562566}, "corpusId": 258562566, "publicationVenue": {"id": "8bf31576-0836-4238-9141-bc1fd437f5fc",
      "name": "International journal of case studies in business, IT, and education",
      "type": "journal", "alternate_names": ["Int j case stud bus IT educ"], "issn":
      "2581-6942", "url": "https://srinivaspublication.com/ijcsbe/"}, "url": "https://www.semanticscholar.org/paper/0ad36e53d66cb22dc75ed95c4da786631be155ba",
      "title": "Secret Management in Managed Kubernetes Services", "abstract": "Purpose:
      Security and Privacy risks are increasing in the industry. Managed Kubernetes
      services help organizations to deploy micro service in the cloud. Securing the
      Secrets used by micro service applications in the cloud is a crucial topic.
      This paper studies how managed Kubernetes service industry secures the application
      Secrets in the cloud.\nDesign/Methodology/Approach: This study includes various
      Kubernetes service providers in the industry. The documentation available in
      the provider website and the published whitepapers are used to understand the
      Secret management technology.\nFindings/Result: Software applications and their
      data are protected in managed cloud services using Secret keys. Across service
      providers, there is a trend and a common approach in managing the Secrets. External
      or remote services integration is an improvement area for the providers. Operators
      have the responsibility of protecting Secrets and ensuring it does not leak
      out.\nOriginality/Value: This paper studies the efforts of different vendors
      to protect the micro service Secrets. This ensures that the organization''s
      critical assets are protected as per regulations and do not lead to financial
      losses. Cloud misconfiguration is one of the most common mistakes leading to
      security attacks, the knowledge of vendor''s features helps to configure the
      cloud services securely.\nPaper Type: Case study", "venue": "International journal
      of case studies in business, IT, and education", "year": 2023, "referenceCount":
      14, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://supublication.com/index.php/ijcsbe/article/download/21/18/35",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-04-29", "journal": {"name": "International Journal
      of Case Studies in Business, IT, and Education"}, "citationStyles": {"bibtex":
      "@Article{Pai2023SecretMI,\n author = {Santosh Pai and Dr. R. Srinivasa Rao
      Kunte},\n booktitle = {International journal of case studies in business, IT,
      and education},\n journal = {International Journal of Case Studies in Business,
      IT, and Education},\n title = {Secret Management in Managed Kubernetes Services},\n
      year = {2023}\n}\n"}, "authors": [{"authorId": "33674088", "name": "Santosh
      Pai"}, {"authorId": "2081976038", "name": "Dr. R. Srinivasa Rao Kunte"}]}, {"paperId":
      "8624d6e9cbee7e6d1b317bbe220bc39698196849", "externalIds": {"DOI": "10.31979/etd.qrrp-3equ",
      "CorpusId": 259227108}, "corpusId": 259227108, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/8624d6e9cbee7e6d1b317bbe220bc39698196849",
      "title": "NoSQL Databases in Kubernetes", "abstract": "With the increasing popularity
      of deploying applications in containers, Kubernetes (K8s) has become one of
      the most accepted container orchestration systems. Kubernetes helps maintain
      containers smoothly and simplifies DevOps with powerful automations. It was
      originally developed as a tool to manage stateless microservices that run seamlessly
      in containers. The ephemeral nature of pods, the smallest deployable unit, in
      Kubernetes was well-aligned with stateless applications since destroying and
      recreating pods didn\u2019t impact applications. There was a need to provision
      solutions around stateful workloads like databases so as to take advantage of
      K8s. This project explores this need, the challenges associated and the available
      solutions for running databases in Kubernetes. Most of the current research
      is focused towards SQL-like databases in K8s even though the DNA of NoSQL distributed
      databases is more aligned with K8s. With no research being done with NoSQL databases,
      this project outlines the process behind setting up two famous NoSQL databases
      in K8s: MongoDB and Cassandra. The project also shows a representative viewpoint
      of the performance comparison between them using the YCSB benchmark. The project
      lays a foundation around the setup of these databases using K8s Operators and
      their benchmarking. The goal of the project is to describe the advantages of
      having databases in K8s, provide developers a clear path for setup and provide
      insights on basic benchmark performance. NoSQL Databases in Kubernetes", "venue":
      "", "year": 2023, "referenceCount": 13, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://scholarworks.sjsu.edu/cgi/viewcontent.cgi?article=2269&context=etd_projects",
      "status": "CLOSED"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "citationStyles": {"bibtex": "@Inproceedings{Mehta2023NoSQLDI,\n author
      = {Parth Mehta},\n title = {NoSQL Databases in Kubernetes},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "50698869", "name": "Parth Mehta"}]}, {"paperId": "2f1c0cd900bafe01e8bfdf3e3726e8d134959222",
      "externalIds": {"DBLP": "conf/icaiic/WooL23", "DOI": "10.1109/ICAIIC57133.2023.10066988",
      "CorpusId": 257721261}, "corpusId": 257721261, "publicationVenue": {"id": "2756e173-d599-4a50-8d52-df1b9492f924",
      "name": "Digital Signal Processing and Signal Processing Education Workshop",
      "type": "conference", "alternate_names": ["International Conference on Artificial
      Intelligence in Information and Communication", "ICAIIC", "Digit Signal Process
      Signal Process Educ Workshop", "Int Conf Artif Intell Inf Commun"]}, "url":
      "https://www.semanticscholar.org/paper/2f1c0cd900bafe01e8bfdf3e3726e8d134959222",
      "title": "Proposal of Docker and Kubernetes Direction through the Event Timeline
      of Kubernetes", "abstract": "Modern developers typically run their workloads
      through cloud-native environments such as Docker and Kubernetes. Docker is a
      platform that runs and manages containers. With the birth of Docker, interest
      in containers and technology has grown. As one of the container orchestration
      tools that control and manage containers running on multiple hosts, Kubernetes
      has a very large share and is used by many cloud companies, making it the standard
      for practical container orchestration tools. Therefore, in this paper, by analyzing
      the Kubernetes event timeline, we present the future direction of Kubernetes
      and Docker, which are key tools in the cloud-native environment.", "venue":
      "Digital Signal Processing and Signal Processing Education Workshop", "year":
      2023, "referenceCount": 50, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2023-02-20", "journal": {"name": "2023 International Conference
      on Artificial Intelligence in Information and Communication (ICAIIC)", "pages":
      "815-820"}, "citationStyles": {"bibtex": "@Article{Woo2023ProposalOD,\n author
      = {Seungchan Woo and Jong-Hyouk Lee},\n booktitle = {Digital Signal Processing
      and Signal Processing Education Workshop},\n journal = {2023 International Conference
      on Artificial Intelligence in Information and Communication (ICAIIC)},\n pages
      = {815-820},\n title = {Proposal of Docker and Kubernetes Direction through
      the Event Timeline of Kubernetes},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2212602435", "name": "Seungchan Woo"}, {"authorId": "2184078475", "name": "Jong-Hyouk
      Lee"}]}, {"paperId": "40e9ecd94713aa6756e6ae128982ed0d572d3951", "externalIds":
      {"DOI": "10.36244/icj.2023.5.11", "CorpusId": 261571707}, "corpusId": 261571707,
      "publicationVenue": {"id": "783f64b6-a804-48d9-9263-2f4ece667d3f", "name": "Infocommunications
      journal", "type": "journal", "alternate_names": ["Infocommunications j"], "issn":
      "0018-2028", "url": "https://www.hiradastechnika.hu/"}, "url": "https://www.semanticscholar.org/paper/40e9ecd94713aa6756e6ae128982ed0d572d3951",
      "title": "Challenges in service discovery for microservices deployed in a Kubernetes
      cluster \u2013 a case stud", "abstract": "With Kubernetes emerging as one of
      the most popular infrastructures in the cloud-native era, the utilization of
      containerization and tools alongside Kubernetes is steadily gaining traction.
      The main goal of this paper is to evaluate the service discovery mechanisms
      and DNS management (CoreDNS) of Kubernetes, and to present a general study of
      an experiment on service discovery challenges. In large scale Kubernetes clusters,
      running pods, services, requests, and workloads can be substantial. The increased
      number of HTTP-requests often result in resource utilization concerns, e.g.,
      spikes of errors [24], [25]. This paper investigates potential optimization
      strategies for enhancing the performance and scalability of CoreDNS in Kubernetes.
      We propose a solution to address the concerns related to CoreDNS and provide
      a detailed explanation of how our implementation enhances service discovery
      functionality. Experimental results in a real-world case show that our solution
      for the CoreDNS ensures consistency of the workload. Compared with the default
      CoreDNS configuration, our customized approach achieves better performance in
      terms of number of errors for requests, average latency of DNS requests, and
      resource usage rate.", "venue": "Infocommunications journal", "year": 2023,
      "referenceCount": 29, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://www.infocommunications.hu/documents/169298/4882687/InfocomJournal_2023_SpecISS_ICAI_11.pdf",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"name": "Infocommunications journal"}, "citationStyles": {"bibtex":
      "@Article{Erdenebat2023ChallengesIS,\n author = {Baasanjargal Erdenebat and
      Bayarjargal Bud and Tam\u00e1s Kozsik},\n booktitle = {Infocommunications journal},\n
      journal = {Infocommunications journal},\n title = {Challenges in service discovery
      for microservices deployed in a Kubernetes cluster \u2013 a case stud},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "1752871161", "name": "Baasanjargal
      Erdenebat"}, {"authorId": "2238104857", "name": "Bayarjargal Bud"}, {"authorId":
      "2269210362", "name": "Tam\u00e1s Kozsik"}]}, {"paperId": "a3f5497447d9486871fd06de44041c797b54d47d",
      "externalIds": {"DOI": "10.1109/InC457730.2023.10263031", "CorpusId": 263229629},
      "corpusId": 263229629, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/a3f5497447d9486871fd06de44041c797b54d47d",
      "title": "Proactive Horizontal Pod Autoscaling in Kubernetes using Bi-LSTM",
      "abstract": "The management and implementation of distributed applications has
      been completely transformed by software containerization technologies. Before
      providing the containers to the clients, they must be correctly scaled. It is
      crucial that cloud service providers efficiently scale and distribute their
      resources and avoid under and over-provisioning of resources. Particularly,
      additional care should be taken for under provisioning of resources to avoid
      crashing of distributed applications. It is hard to manually assign resources
      to customers based on their continuously fluctuating workloads. The resource
      provisioning must be quick and automatic. Kubernetes provides a feature called
      autoscaler which allocates resources dynamically. However, the default autoscaler
      in Kubernetes is reactive as it will scale resources when load comes and allocation
      takes some time to get ready. This reactive nature may decrease the overall
      performance of application deployed. Hence, in this work, we present a proactive
      autoscaler mechanism that employs Bi-LSTM model to anticipate future demands
      and scale the containers automatically. The results using 3 node Kubernetes
      setup reveals that Bi-LSTM performs better than stacked LSTM and proactive autoscaler
      performs better than default Kubernetes autoscaler.", "venue": "2023 IEEE International
      Conference on Contemporary Computing and Communications (InC4)", "year": 2023,
      "referenceCount": 15, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2023-04-21",
      "journal": {"name": "2023 IEEE International Conference on Contemporary Computing
      and Communications (InC4)", "pages": "1-5", "volume": "1"}, "citationStyles":
      {"bibtex": "@Conference{Kakade2023ProactiveHP,\n author = {Soham Kakade and
      Gurutej Abbigeri and Om Prabhu and Akash Dalwayi and N. G. and Somashekar Patil
      and Bhagya Sunag},\n booktitle = {2023 IEEE International Conference on Contemporary
      Computing and Communications (InC4)},\n journal = {2023 IEEE International Conference
      on Contemporary Computing and Communications (InC4)},\n pages = {1-5},\n title
      = {Proactive Horizontal Pod Autoscaling in Kubernetes using Bi-LSTM},\n volume
      = {1},\n year = {2023}\n}\n"}, "authors": [{"authorId": "2248816771", "name":
      "Soham Kakade"}, {"authorId": "2248802171", "name": "Gurutej Abbigeri"}, {"authorId":
      "2248803651", "name": "Om Prabhu"}, {"authorId": "2248824110", "name": "Akash
      Dalwayi"}, {"authorId": "2080058119", "name": "N. G."}, {"authorId": "19253274",
      "name": "Somashekar Patil"}, {"authorId": "9264331", "name": "Bhagya Sunag"}]},
      {"paperId": "4faa0d2106b7776f87e52f8409c61ea4f0882be1", "externalIds": {"PubMedCentral":
      "10058403", "DOI": "10.3390/mi14030651", "CorpusId": 257539952, "PubMed": "36985058"},
      "corpusId": 257539952, "publicationVenue": {"id": "8ecc7f6b-513e-420d-9531-255b48a99a8a",
      "name": "Micromachines", "type": "journal", "issn": "2072-666X", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-165882",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-165882",
      "https://www.mdpi.com/journal/micromachines"]}, "url": "https://www.semanticscholar.org/paper/4faa0d2106b7776f87e52f8409c61ea4f0882be1",
      "title": "K8sSim: A Simulation Tool for Kubernetes Schedulers and Its Applications
      in Scheduling Algorithm Optimization", "abstract": "In recent years, Kubernetes
      (K8s) has become a dominant resource management and scheduling system in the
      cloud. In practical scenarios, short-running cloud workloads are usually scheduled
      through different scheduling algorithms provided by Kubernetes. For example,
      artificial intelligence (AI) workloads are scheduled through different Volcano
      scheduling algorithms, such as GANG_MRP, GANG_LRP, and GANG_BRA. One key challenge
      is that the selection of scheduling algorithms has considerable impacts on job
      performance results. However, it takes a prohibitively long time to select the
      optimal algorithm because applying one algorithm in one single job may take
      a few minutes to complete. This poses the urgent requirement of a simulator
      that can quickly evaluate the performance impacts of different algorithms, while
      also considering scheduling-related factors, such as cluster resources, job
      structures and scheduler configurations. In this paper, we design and implement
      a Kubernetes simulator called K8sSim, which incorporates typical Kubernetes
      and Volcano scheduling algorithms for both generic and AI workloads, and provides
      an accurate simulation of their scheduling process in real clusters. We use
      real cluster traces from Alibaba to evaluate the effectiveness of K8sSim, and
      the evaluation results show that (i) compared to the real cluster, K8sSim can
      accurately evaluate the performance of different scheduling algorithms with
      similar CloseRate (a novel metric we define to intuitively show the simulation
      accuracy), and (ii) it can also quickly obtain the scheduling results of different
      scheduling algorithms by accelerating the scheduling time by an average of 38.56\u00d7.",
      "venue": "Micromachines", "year": 2023, "referenceCount": 35, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.mdpi.com/2072-666X/14/3/651/pdf?version=1678767805", "status":
      "GOLD"}, "fieldsOfStudy": ["Medicine"], "s2FieldsOfStudy": [{"category": "Medicine",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-03-01", "journal":
      {"name": "Micromachines", "volume": "14"}, "citationStyles": {"bibtex": "@Article{Wen2023K8sSimAS,\n
      author = {Shilin Wen and Rui Han and K. Qiu and Xiaoxin Ma and Zeqing Li and
      Hongjie Deng and C. Liu},\n booktitle = {Micromachines},\n journal = {Micromachines},\n
      title = {K8sSim: A Simulation Tool for Kubernetes Schedulers and Its Applications
      in Scheduling Algorithm Optimization},\n volume = {14},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "48242595", "name": "Shilin Wen"}, {"authorId": "2066468959",
      "name": "Rui Han"}, {"authorId": "65729817", "name": "K. Qiu"}, {"authorId":
      "2115722012", "name": "Xiaoxin Ma"}, {"authorId": "2211678185", "name": "Zeqing
      Li"}, {"authorId": "2188322579", "name": "Hongjie Deng"}, {"authorId": "144212455",
      "name": "C. Liu"}]}, {"paperId": "87b54cc8e3e7bd7af0e535e696e5927dafe2058f",
      "externalIds": {"DBLP": "journals/corr/abs-2301-08409", "ArXiv": "2301.08409",
      "DOI": "10.23919/JSEE.2023.000073", "CorpusId": 256080421}, "corpusId": 256080421,
      "publicationVenue": {"id": "56e18226-08f3-4754-97a2-d0431b4fc454", "name": "Journal
      of Systems Engineering and Electronics", "type": "journal", "alternate_names":
      ["J Syst Eng Electron"], "issn": "1004-4132", "alternate_issns": ["1671-1793"],
      "url": "http://erf.sbb.spk-berlin.de/han/caj/eng.oversea.cnki.net/kns55/oldnavi/n_item.aspx?NaviID=48&amp;BaseID=XTGJ&amp;Flg=local&amp;NaviLink="},
      "url": "https://www.semanticscholar.org/paper/87b54cc8e3e7bd7af0e535e696e5927dafe2058f",
      "title": "Adaptive Resource Allocation for Workflow Containerization on Kubernetes",
      "abstract": "In a cloud-native era, the Kubernetes-based workflow engine enables
      workflow containerized execution through the inherent abilities of Kubernetes.
      However, when encountering continuous workflow requests and unexpected resource
      request spikes, the engine is limited to the current workflow load information
      for resource allocation, which lacks the agility and predictability of resource
      allocation, resulting in over and under-provisioning resources. This mechanism
      seriously hinders workflow execution efficiency and leads to high resource waste.
      To overcome these drawbacks, we propose an adaptive resource allocation scheme
      named ARAS for the Kubernetes-based workflow engines. Considering potential
      future workflow task requests within the current task pod''s lifecycle, the
      ARAS uses a resource scaling strategy to allocate resources in response to high-concurrency
      workflow scenarios. The ARAS offers resource discovery, resource evaluation,
      and allocation functionalities and serves as a key component for our tailored
      workflow engine (KubeAdaptor). By integrating the ARAS into KubeAdaptor for
      workflow containerized execution, we demonstrate the practical abilities of
      KubeAdaptor and the advantages of our ARAS. Compared with the baseline algorithm,
      experimental evaluation under three distinct workflow arrival patterns shows
      that ARAS gains time-saving of 9.8% to 40.92% in the average total duration
      of all workflows, time-saving of 26.4% to 79.86% in the average duration of
      individual workflow, and an increase of 1% to 16% in CPU and memory resource
      usage rate.", "venue": "Journal of Systems Engineering and Electronics", "year":
      2023, "referenceCount": 41, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/5971804/10185000/10184981.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-01-20", "journal": {"name": "ArXiv", "volume": "abs/2301.08409"},
      "citationStyles": {"bibtex": "@Article{Shan2023AdaptiveRA,\n author = {Chenggang
      Shan and Chu-ge Wu and Yuanqing Xia and Zehua Guo and Dan Liu and Jinhui Zhang},\n
      booktitle = {Journal of Systems Engineering and Electronics},\n journal = {ArXiv},\n
      title = {Adaptive Resource Allocation for Workflow Containerization on Kubernetes},\n
      volume = {abs/2301.08409},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2053160233", "name": "Chenggang Shan"}, {"authorId": "3429223", "name": "Chu-ge
      Wu"}, {"authorId": "2152311358", "name": "Yuanqing Xia"}, {"authorId": "1956286",
      "name": "Zehua Guo"}, {"authorId": "144645397", "name": "Dan Liu"}, {"authorId":
      "1583807259", "name": "Jinhui Zhang"}]}, {"paperId": "aa03721dcdb3448c3a796e78eb7e4e2b9895539c",
      "externalIds": {"DBLP": "journals/iotj/LaiWW23", "DOI": "10.1109/JIOT.2023.3244545",
      "CorpusId": 256978485}, "corpusId": 256978485, "publicationVenue": {"id": "228761ec-c40a-479b-8309-9dcbe9851bcd",
      "name": "IEEE Internet of Things Journal", "type": "journal", "alternate_names":
      ["IEEE Internet Thing J"], "issn": "2327-4662", "url": "https://www.ieee.org/membership-catalog/productdetail/showProductDetailPage.html?product=PER288-ELE",
      "alternate_urls": ["https://ieeexplore.ieee.org/servlet/opac?punumber=6488907",
      "https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=6488907", "http://ieee-iotj.org/#"]},
      "url": "https://www.semanticscholar.org/paper/aa03721dcdb3448c3a796e78eb7e4e2b9895539c",
      "title": "Delay-Aware Container Scheduling in Kubernetes", "abstract": "Kubernetes
      is a powerful tool to manage containerized applications, which is also regarded
      as one promising platform to support microservices in edge computing. The scheduler
      is a key component of Kubernetes. It allocates each pod (i.e., a set of running
      containers) to one worker node (i.e., a machine). The default scheduler in Kubernetes
      is designed for the cloud environment containing homogeneous nodes. However,
      IoT edge nodes usually have various computing power and network bandwidth. This
      article proposes a delay-aware container scheduling (DACS) algorithm to address
      the issue of node heterogeneity in edge computing. To efficiently assign pods
      to worker nodes, DACS takes account of not only residual resources of worker
      nodes but also potential delays caused by the pod assignment. We build a Kubernetes
      cluster by VMware to evaluate system performance. Experimental results reveal
      that DACS can significantly reduce both processing and network delays, thereby
      helping Kubernetes perform more efficiently in an edge environment.", "venue":
      "IEEE Internet of Things Journal", "year": 2023, "referenceCount": 51, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-07-01", "journal": {"name": "IEEE
      Internet of Things Journal", "pages": "11813-11824", "volume": "10"}, "citationStyles":
      {"bibtex": "@Article{Lai2023DelayAwareCS,\n author = {W. Lai and You-Chiun Wang
      and Syu-Chen Wei},\n booktitle = {IEEE Internet of Things Journal},\n journal
      = {IEEE Internet of Things Journal},\n pages = {11813-11824},\n title = {Delay-Aware
      Container Scheduling in Kubernetes},\n volume = {10},\n year = {2023}\n}\n"},
      "authors": [{"authorId": "34903260", "name": "W. Lai"}, {"authorId": "2115725109",
      "name": "You-Chiun Wang"}, {"authorId": "2208491442", "name": "Syu-Chen Wei"}]},
      {"paperId": "e4cc7df109dba14b8b90924868e2bedc568d53f1", "externalIds": {"DBLP":
      "journals/corr/abs-2301-07479", "ArXiv": "2301.07479", "DOI": "10.48550/arXiv.2301.07479",
      "CorpusId": 255998558}, "corpusId": 255998558, "publicationVenue": {"id": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "name": "arXiv.org", "alternate_names": ["ArXiv"], "issn": "2331-8422", "url":
      "https://arxiv.org"}, "url": "https://www.semanticscholar.org/paper/e4cc7df109dba14b8b90924868e2bedc568d53f1",
      "title": "Extensions for Shared Resource Orchestration in Kubernetes to Support
      RT-Cloud Containers", "abstract": "\u2014 Industries are considering the adoption
      of cloud computing for real-time applications due to current improvements in
      network latencies and the advent of Fog and Edge computing. To create an RT-cloud
      capable of hosting real-time applications, it is increasingly signi \ufb01 cant
      to improve the entire stack, including containerization of applications, and
      their deployment and orchestration across nodes. However, state-of-the-art orchestrators
      (e.g., Kubernetes) and underlying container engines are designed for general
      purpose applications. They ignore orchestration and management of shared resources
      (e.g. memory bandwidth, cache, shared-interconnect) making them unsuitable for
      use with an RT-cloud. Taking inspiration from existing resource management architectures
      for multicore nodes, such as ACTORS, and for distributed mixed-criticality systems,
      such as the DREAMS, we propose a series of extensions in the way shared resources
      are orchestrated by Kubernetes and managed by the underlying Linux layers. Our
      approach allows \ufb01 ne-grained monitoring and allocation of low-level shared
      resources on nodes to provide better isolation to real-time containers and supports
      dynamic orchestration and balancing of containers across the nodes based on
      the availability and demand of shared resources.", "venue": "arXiv.org", "year":
      2023, "referenceCount": 20, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://arxiv.org/pdf/2301.07479",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-01-18", "journal":
      {"name": "ArXiv", "volume": "abs/2301.07479"}, "citationStyles": {"bibtex":
      "@Article{Monaco2023ExtensionsFS,\n author = {Gabriele Monaco and Gautam Gala
      and G. Fohler},\n booktitle = {arXiv.org},\n journal = {ArXiv},\n title = {Extensions
      for Shared Resource Orchestration in Kubernetes to Support RT-Cloud Containers},\n
      volume = {abs/2301.07479},\n year = {2023}\n}\n"}, "authors": [{"authorId":
      "2201746633", "name": "Gabriele Monaco"}, {"authorId": "49560741", "name": "Gautam
      Gala"}, {"authorId": "1805104", "name": "G. Fohler"}]}, {"paperId": "84231d32ec1404efe5d61d46851d3c0c6bd588b9",
      "externalIds": {"DBLP": "journals/tjs/KjorveziroskiF22", "DOI": "10.1007/s11227-022-04430-6",
      "CorpusId": 247724882}, "corpusId": 247724882, "publicationVenue": {"id": "26ed29a9-64ce-4d6c-9024-8b022fd2fe22",
      "name": "Journal of Supercomputing", "type": "journal", "alternate_names": ["The
      Journal of Supercomputing", "J Supercomput"], "issn": "0920-8542", "url": "http://www.springer.com/computer/programming/journal/11227",
      "alternate_urls": ["https://link.springer.com/journal/11227", "https://www.springer.com/computer/swe/journal/11227?changeHeader"]},
      "url": "https://www.semanticscholar.org/paper/84231d32ec1404efe5d61d46851d3c0c6bd588b9",
      "title": "Kubernetes distributions for the edge: serverless performance evaluation",
      "abstract": null, "venue": "Journal of Supercomputing", "year": 2022, "referenceCount":
      71, "citationCount": 19, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-03-24", "journal":
      {"name": "The Journal of Supercomputing", "pages": "13728 - 13755", "volume":
      "78"}, "citationStyles": {"bibtex": "@Article{Kjorveziroski2022KubernetesDF,\n
      author = {Vojdan Kjorveziroski and S. Filiposka},\n booktitle = {Journal of
      Supercomputing},\n journal = {The Journal of Supercomputing},\n pages = {13728
      - 13755},\n title = {Kubernetes distributions for the edge: serverless performance
      evaluation},\n volume = {78},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "66295721", "name": "Vojdan Kjorveziroski"}, {"authorId": "2405761", "name":
      "S. Filiposka"}]}, {"paperId": "4a59e01a614645c53603e1c57aa86bff1301bbe3", "externalIds":
      {"DBLP": "journals/csur/RejibaC23", "DOI": "10.1145/3544788", "CorpusId": 249993349},
      "corpusId": 249993349, "publicationVenue": {"id": "7b2adce0-d53f-49d6-8784-b0645604fe62",
      "name": "ACM Computing Surveys", "type": "journal", "alternate_names": ["ACM
      Comput Surv"], "issn": "0360-0300", "url": "http://www.acm.org/pubs/surveys/",
      "alternate_urls": ["http://portal.acm.org/csur", "https://csur.acm.org/", "http://csur.acm.org/"]},
      "url": "https://www.semanticscholar.org/paper/4a59e01a614645c53603e1c57aa86bff1301bbe3",
      "title": "Custom Scheduling in Kubernetes: A Survey on Common Problems and Solution
      Approaches", "abstract": "Since its release in 2014, Kubernetes has become a
      popular choice for orchestrating containerized workloads at scale. To determine
      the most appropriate node to host a given workload, Kubernetes makes use of
      a scheduler that takes into account a set of hard and soft constraints defined
      by workload owners and cluster administrators. Despite being highly configurable,
      the default Kubernetes scheduler cannot fully meet the requirements of emerging
      applications, such as machine/deep learning workloads and edge computing applications.
      This has led to different proposals of custom Kubernetes schedulers that focus
      on addressing the requirements of the aforementioned applications. Since the
      related literature is growing in this area, we aimed, in this survey, to provide
      a classification of the related literature based on multiple criteria, including
      scheduling objectives as well as the types of considered workloads and environments.
      Additionally, we provide an overview of the main approaches that have been adopted
      to achieve each objective. Finally, we highlight a set of gaps that could be
      leveraged by academia or the industry to drive further research and development
      activities in the area of custom scheduling in Kubernetes.", "venue": "ACM Computing
      Surveys", "year": 2022, "referenceCount": 125, "citationCount": 15, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Review"], "publicationDate": "2022-06-24", "journal": {"name":
      "ACM Computing Surveys", "pages": "1 - 37", "volume": "55"}, "citationStyles":
      {"bibtex": "@Article{Rejiba2022CustomSI,\n author = {Zeineb Rejiba and Javad
      Chamanara},\n booktitle = {ACM Computing Surveys},\n journal = {ACM Computing
      Surveys},\n pages = {1 - 37},\n title = {Custom Scheduling in Kubernetes: A
      Survey on Common Problems and Solution Approaches},\n volume = {55},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "3363541", "name": "Zeineb Rejiba"},
      {"authorId": "2840853", "name": "Javad Chamanara"}]}, {"paperId": "a7934d1e2f0f45d78539b012e58106bb2a590937",
      "externalIds": {"DBLP": "journals/jss/TurinBDDJT23", "ArXiv": "2305.07651",
      "DOI": "10.1016/j.jss.2023.111750", "CorpusId": 258676227}, "corpusId": 258676227,
      "publicationVenue": {"id": "10a4a695-8417-42c7-983d-742df48b3905", "name": "Journal
      of Systems and Software", "type": "journal", "alternate_names": ["J Syst Softw"],
      "issn": "0164-1212", "url": "http://www.elsevier.com/wps/find/journaldescription.cws_home/505732/description#description",
      "alternate_urls": ["http://www.elsevier.com/wps/find/journaldescription.cws_home/505732/description",
      "http://www.sciencedirect.com/science/journal/01641212"]}, "url": "https://www.semanticscholar.org/paper/a7934d1e2f0f45d78539b012e58106bb2a590937",
      "title": "Predicting Resource Consumption of Kubernetes Container Systems using
      Resource Models", "abstract": null, "venue": "Journal of Systems and Software",
      "year": 2023, "referenceCount": 60, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-05-01", "journal": {"name": "J. Syst. Softw.", "pages": "111750", "volume":
      "203"}, "citationStyles": {"bibtex": "@Article{Turin2023PredictingRC,\n author
      = {Gianluca Turin and Andrea Borgarelli and Simone Donetti and Ferruccio Damiani
      and E. Johnsen and S. L. T. Tarifa},\n booktitle = {Journal of Systems and Software},\n
      journal = {J. Syst. Softw.},\n pages = {111750},\n title = {Predicting Resource
      Consumption of Kubernetes Container Systems using Resource Models},\n volume
      = {203},\n year = {2023}\n}\n"}, "authors": [{"authorId": "51924027", "name":
      "Gianluca Turin"}, {"authorId": "2007389365", "name": "Andrea Borgarelli"},
      {"authorId": "31876887", "name": "Simone Donetti"}, {"authorId": "1732808",
      "name": "Ferruccio Damiani"}, {"authorId": "1752361", "name": "E. Johnsen"},
      {"authorId": "1803249", "name": "S. L. T. Tarifa"}]}, {"paperId": "2782cd8f6d0842f5a636896d2b8886bcf7aafaca",
      "externalIds": {"DOI": "10.1088/1742-6596/2438/1/012014", "CorpusId": 256897549},
      "corpusId": 256897549, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2782cd8f6d0842f5a636896d2b8886bcf7aafaca",
      "title": "CernVM-FS ephemeral publishers on Kubernetes", "abstract": "The CernVM
      File System (CernVM-FS) is a global read-only POSIX file system that provides
      scalable and reliable software distribution to numerous scientific collaborations.
      It gives access to more than a billion binary files of experiment application
      software stacks and operating system containers to end user devices, grids,
      clouds, and supercomputers. CernVM-FS is asymmetric by construction. Writing
      into the repository is a centralized operation called publishing, while reading
      is allowed for many clients from many locations. The classic publishing process
      needs a dedicated \u201crelease manager machine\u201d that provides the editable
      repository copy. This classic approach was improved thanks to the introduction
      of the CernVM-FS Gateway that provides concurrent access to the repository backend
      storage through a REST API. In this contribution, we present further improvements
      to the CernVM-FS publishing process. Our main contribution is the construction
      of ephemeral containers that are created on demand and used to provide a temporary,
      editable repository copy for a single publish operation. The container construction
      makes careful use of Linux namespaces and a user-space implementation of overlayfs.
      We further show that both the gateway and the containers used for publishing
      can be instantiated as pods in a kubernetes cluster. Thus, we demonstrate a
      kubernetes-native CernVM-FS publishing workflow.", "venue": "Journal of Physics:
      Conference Series", "year": 2023, "referenceCount": 6, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Physics"],
      "s2FieldsOfStudy": [{"category": "Physics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["Conference"],
      "publicationDate": "2023-02-01", "journal": {"name": "Journal of Physics: Conference
      Series", "volume": "2438"}, "citationStyles": {"bibtex": "@Conference{Valenzuela2023CernVMFSEP,\n
      author = {Andrea Valenzuela and J. Blomer},\n booktitle = {Journal of Physics:
      Conference Series},\n journal = {Journal of Physics: Conference Series},\n title
      = {CernVM-FS ephemeral publishers on Kubernetes},\n volume = {2438},\n year
      = {2023}\n}\n"}, "authors": [{"authorId": "2055017637", "name": "Andrea Valenzuela"},
      {"authorId": "2458191", "name": "J. Blomer"}]}, {"paperId": "f3dd2eb71cbc1eb2dac353b6ed9bb16ccbdad625",
      "externalIds": {"DBLP": "conf/sac/FioriAC22", "DOI": "10.1145/3477314.3507216",
      "CorpusId": 248545792}, "corpusId": 248545792, "publicationVenue": {"id": "d80d58be-58fc-4181-a397-5ac6fd976a47",
      "name": "ACM Symposium on Applied Computing", "type": "conference", "alternate_names":
      ["Sel Area Cryptogr", "Int Conf Sel area Cryptogr", "International Conference
      on Selected areas in Cryptography", "ACM Symp Appl Comput", "Selected Areas
      in Cryptography", "Symposium on Applied Computing", "SAC", "Symp Appl Comput"],
      "url": "https://www.acm.org/publications", "alternate_urls": ["http://sacworkshop.org/"]},
      "url": "https://www.semanticscholar.org/paper/f3dd2eb71cbc1eb2dac353b6ed9bb16ccbdad625",
      "title": "RT-kubernetes: containerized real-time cloud computing", "abstract":
      "This paper presents RT-Kubernetes, a software architecture with the ability
      to deploy real-time software components within containers in cloud infrastructures.
      The deployment of containers with guaranteed CPU scheduling is obtained by using
      a hierarchical real-time scheduler based on the Linux SCHED_DEADLINE policy.
      Preliminary experimental results provide evidence that this new framework succeeds
      in providing timeliness guarantees in the target responsiveness range, while
      achieving strong temporal isolation among containers co-located on the same
      physical hosts.", "venue": "ACM Symposium on Applied Computing", "year": 2022,
      "referenceCount": 21, "citationCount": 14, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://www.iris.sssup.it/bitstream/11382/547151/1/ACM-SAC-2022-RTK8S.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2022-04-25",
      "journal": {"name": "Proceedings of the 37th ACM/SIGAPP Symposium on Applied
      Computing"}, "citationStyles": {"bibtex": "@Book{Fiori2022RTkubernetesCR,\n
      author = {Stefano Fiori and Luca Abeni and T. Cucinotta},\n booktitle = {ACM
      Symposium on Applied Computing},\n journal = {Proceedings of the 37th ACM/SIGAPP
      Symposium on Applied Computing},\n title = {RT-kubernetes: containerized real-time
      cloud computing},\n year = {2022}\n}\n"}, "authors": [{"authorId": "46909137",
      "name": "Stefano Fiori"}, {"authorId": "2380576", "name": "Luca Abeni"}, {"authorId":
      "2575566", "name": "T. Cucinotta"}]}, {"paperId": "bf6b72e287829faa0e25f41a5e5c536a3643bb26",
      "externalIds": {"PubMedCentral": "9030099", "DBLP": "journals/sensors/NguyenPK22",
      "DOI": "10.3390/s22082869", "CorpusId": 248073384, "PubMed": "35458853"}, "corpusId":
      248073384, "publicationVenue": {"id": "3dbf084c-ef47-4b74-9919-047b40704538",
      "name": "Italian National Conference on Sensors", "type": "conference", "alternate_names":
      ["SENSORS", "IEEE Sens", "Ital National Conf Sens", "IEEE Sensors", "Sensors"],
      "issn": "1424-8220", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-142001",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-142001",
      "http://www.mdpi.com/journal/sensors", "https://www.mdpi.com/journal/sensors"]},
      "url": "https://www.semanticscholar.org/paper/bf6b72e287829faa0e25f41a5e5c536a3643bb26",
      "title": "Load-Balancing of Kubernetes-Based Edge Computing Infrastructure Using
      Resource Adaptive Proxy", "abstract": "Kubernetes (K8s) is expected to be a
      key container orchestration tool for edge computing infrastructures owing to
      its various features for supporting container deployment and dynamic resource
      management. For example, its horizontal pod autoscaling feature provides service
      availability and scalability by increasing the number of replicas. kube-proxy
      provides traffic load-balancing between replicas by distributing client requests
      equally to all pods (replicas) of an application in a K8s cluster. However,
      this approach can result in long delays when requests are forwarded to remote
      workers, especially in edge computing environments where worker nodes are geographically
      dispersed. Moreover, if the receiving worker is overloaded, the request-processing
      delay can increase significantly. To overcome these limitations, this paper
      proposes an enhanced load balancer called resource adaptive proxy (RAP). RAP
      periodically monitors the resource status of each pod and the network status
      among worker nodes to aid in load-balancing decisions. Furthermore, it preferentially
      handles requests locally to the maximum extent possible. If the local worker
      node is overloaded, RAP forwards its requests to the best node in the cluster
      while considering resource availability. Our experimental results demonstrated
      that RAP could significantly improve throughput and reduce request latency compared
      with the default load-balancing mechanism of K8s.", "venue": "Italian National
      Conference on Sensors", "year": 2022, "referenceCount": 37, "citationCount":
      11, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://www.mdpi.com/1424-8220/22/8/2869/pdf?version=1649413419", "status":
      "GOLD"}, "fieldsOfStudy": ["Computer Science", "Medicine"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Medicine",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2022-04-01", "journal": {"name": "Sensors
      (Basel, Switzerland)", "volume": "22"}, "citationStyles": {"bibtex": "@Article{Nguyen2022LoadBalancingOK,\n
      author = {Quang-Minh Nguyen and Linh-An Phan and Taehong Kim},\n booktitle =
      {Italian National Conference on Sensors},\n journal = {Sensors (Basel, Switzerland)},\n
      title = {Load-Balancing of Kubernetes-Based Edge Computing Infrastructure Using
      Resource Adaptive Proxy},\n volume = {22},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2161989617", "name": "Quang-Minh Nguyen"}, {"authorId": "151095859",
      "name": "Linh-An Phan"}, {"authorId": "2338970", "name": "Taehong Kim"}]}, {"paperId":
      "4a5127405d01397c66b647c88a07684a65b825d8", "externalIds": {"DBLP": "journals/iotj/WanZYY22",
      "DOI": "10.1109/JIOT.2022.3168085", "CorpusId": 248248960}, "corpusId": 248248960,
      "publicationVenue": {"id": "228761ec-c40a-479b-8309-9dcbe9851bcd", "name": "IEEE
      Internet of Things Journal", "type": "journal", "alternate_names": ["IEEE Internet
      Thing J"], "issn": "2327-4662", "url": "https://www.ieee.org/membership-catalog/productdetail/showProductDetailPage.html?product=PER288-ELE",
      "alternate_urls": ["https://ieeexplore.ieee.org/servlet/opac?punumber=6488907",
      "https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=6488907", "http://ieee-iotj.org/#"]},
      "url": "https://www.semanticscholar.org/paper/4a5127405d01397c66b647c88a07684a65b825d8",
      "title": "KFIML: Kubernetes-Based Fog Computing IoT Platform for Online Machine
      Learning", "abstract": "The massive onsite data produced by the Internet of
      Things (IoT) can bring valuable information and immense potentials, thus empowering
      a new wave of emerging applications. However, with the rapid increase of onsite
      IoT data streams, it has become extremely challenging to develop a scalable
      computing platform and provide a comprehensive workflow for processing IoT data
      streams with lower latency and more intelligence. To this end, we present a
      Kubernetes-based scalable fog computing platform (KFIML), integrating big data
      streaming processing with machine learning (ML)-based applications. We also
      provide a comprehensive IoT data processing workflow, including data access
      and transfer, big data processing, online ML, long-term storage, and monitoring.
      The platform is feasibly validated on a clustered testbed, which comprises a
      master node, IoT broker servers, worker nodes, and a local database server.
      By leveraging the lightweight orchestration system, namely Kubernetes, we can
      readily scale and manage containerized software frameworks on our testbed. The
      big data processing layer utilizes the advanced data flow frameworks such as
      Apache Flink, to support both streaming processing and statistical analysis
      with low latency. In addition, the specified long short-term memory (LSTM)-based
      ML pipelines are employed on the online ML layer, to enable the real-time predictive
      analysis of IoT data streams. The experiments on a real-world smart grid use
      case demonstrate that the container-based KFIML platform can be well-scaled
      with Kubernetes to efficiently perform big data processing increased onsite
      IoT data streams with lower latency and conduct ML-based applications.", "venue":
      "IEEE Internet of Things Journal", "year": 2022, "referenceCount": 49, "citationCount":
      11, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}, {"category":
      "Environmental Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2022-10-01", "journal": {"name": "IEEE Internet of Things
      Journal", "pages": "19463-19476", "volume": "9"}, "citationStyles": {"bibtex":
      "@Article{Wan2022KFIMLKF,\n author = {Ziyu Wan and Zheng Zhang and Rui Yin and
      Guanding Yu},\n booktitle = {IEEE Internet of Things Journal},\n journal = {IEEE
      Internet of Things Journal},\n pages = {19463-19476},\n title = {KFIML: Kubernetes-Based
      Fog Computing IoT Platform for Online Machine Learning},\n volume = {9},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "66892346", "name": "Ziyu Wan"}, {"authorId":
      "2148905956", "name": "Zheng Zhang"}, {"authorId": "145350728", "name": "Rui
      Yin"}, {"authorId": "1703118", "name": "Guanding Yu"}]}, {"paperId": "fadca715f4d0c5da0890d18caf588a4b3c402ddf",
      "externalIds": {"DBLP": "conf/icfec/JuniorMP22", "DOI": "10.1109/icfec54809.2022.00011",
      "CorpusId": 249913646}, "corpusId": 249913646, "publicationVenue": {"id": "3b8ad848-3e85-4325-989f-d77440777eca",
      "name": "International Conference on Fog and Edge Computing", "type": "conference",
      "alternate_names": ["ICFEC", "Int Conf Fog Edge Comput"]}, "url": "https://www.semanticscholar.org/paper/fadca715f4d0c5da0890d18caf588a4b3c402ddf",
      "title": "Good Shepherds Care For Their Cattle: Seamless Pod Migration in Geo-Distributed
      Kubernetes", "abstract": "Container technology has become a very popular choice
      for easing and managing the deployment of cloud applications and services. Container
      orchestration systems such as Kubernetes can automate to a large extent the
      deployment, scaling, and operations for containers across clusters of nodes,
      reducing human errors and saving cost and time. Designed with \"traditional\"
      cloud environments in mind (i.e., large datacenters with close-by machines connected
      by high-speed networks), systems like Kubernetes present some limitations in
      geo-distributed environments where computational workloads are moved to the
      edges of the network, close to where data is being generated/consumed. In geo-distributed
      environments, moving around containers, either to follow moving data sources/sinks
      or due to unpredictable changes in the network substrate, is a rather common
      operation. We present MyceDrive, a stateful resource migration solution natively
      integrated with the Kubernetes orchestrator. We show that geo-distributed Kubernetes
      pod migration is feasible while remaining fully transparent to the migrated
      application as well as its clients, while reducing downtimes up to 7x compared
      to state-of-the-art solutions.", "venue": "International Conference on Fog and
      Edge Computing", "year": 2022, "referenceCount": 28, "citationCount": 9, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://hal.inria.fr/hal-03587358/file/main.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-05-01", "journal":
      {"name": "2022 IEEE 6th International Conference on Fog and Edge Computing (ICFEC)",
      "pages": "26-33"}, "citationStyles": {"bibtex": "@Article{Junior2022GoodSC,\n
      author = {P. S. Junior and D. Miorandi and G. Pierre},\n booktitle = {International
      Conference on Fog and Edge Computing},\n journal = {2022 IEEE 6th International
      Conference on Fog and Edge Computing (ICFEC)},\n pages = {26-33},\n title =
      {Good Shepherds Care For Their Cattle: Seamless Pod Migration in Geo-Distributed
      Kubernetes},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2058290192",
      "name": "P. S. Junior"}, {"authorId": "1763896", "name": "D. Miorandi"}, {"authorId":
      "145074982", "name": "G. Pierre"}]}, {"paperId": "83d5a9faeb733b876506cb741781faea77380357",
      "externalIds": {"DBLP": "conf/ucc/GhafouriKBSGD22", "DOI": "10.1109/UCC56403.2022.00019",
      "CorpusId": 257537535}, "corpusId": 257537535, "publicationVenue": {"id": "d03a5bfe-db75-4dc9-95f3-ae92b081f42c",
      "name": "International Conference on Utility and Cloud Computing", "type": "conference",
      "alternate_names": ["IEEE/ACM Int Conf Util Cloud Comput", "Utility and Cloud
      Computing", "Int Conf Util Cloud Comput", "Util Cloud Comput", "UCC", "IEEE/ACM
      International Conference Utility and Cloud Computing"]}, "url": "https://www.semanticscholar.org/paper/83d5a9faeb733b876506cb741781faea77380357",
      "title": "Mobile-Kube: Mobility-aware and Energy-efficient Service Orchestration
      on Kubernetes Edge Servers", "abstract": "In recent years Kubernetes has become
      the de facto standard in the realm of service orchestration. Despite its great
      benefits, there are still numerous challenges to make it compatible with decentralised
      cloud computing platforms. One of the challenges of mobile edge computing is
      that the location of the users is changing over time. This mobility will constantly
      alter the proximity of the users to their connected services. One solution to
      this problem is to regularly move services to computing nodes near the users.
      However, distributing the services in edge nodes only subject to user movements
      will result in the fragmentation of active nodes. This leads to having active
      nodes that do not use their full capacity. We have proposed a method called
      MobileKube to reduce the latency of Kubernetes applications on mobile edge computing
      devices while maintaining energy consumption at a reasonable level. An experimental
      framework is designed on top of real-world Kubernetes clusters and real-world
      traces of mobile users\u2019 movements have been used to simulate the users\u2019
      mobility. Experimental results show that Mobile-Kube can achieve similar energy
      consumption performance to a heuristic approach that focuses on reducing energy
      consumption only while reducing the latency of services by 43%.", "venue": "International
      Conference on Utility and Cloud Computing", "year": 2022, "referenceCount":
      39, "citationCount": 9, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://qmro.qmul.ac.uk/xmlui/bitstream/123456789/84504/2/Doyle%20Mobile-Kube%3a%20Mobility-aware%202022%20Accepted.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Environmental Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-12-01", "journal":
      {"name": "2022 IEEE/ACM 15th International Conference on Utility and Cloud Computing
      (UCC)", "pages": "82-91"}, "citationStyles": {"bibtex": "@Article{Ghafouri2022MobileKubeMA,\n
      author = {Saeid Ghafouri and Alireza Karami and D. B. Bakhtiarvand and Ali Akbar
      Saleh-Bigdeli and S. S. Gill and Joseph Doyle},\n booktitle = {International
      Conference on Utility and Cloud Computing},\n journal = {2022 IEEE/ACM 15th
      International Conference on Utility and Cloud Computing (UCC)},\n pages = {82-91},\n
      title = {Mobile-Kube: Mobility-aware and Energy-efficient Service Orchestration
      on Kubernetes Edge Servers},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "148049087", "name": "Saeid Ghafouri"}, {"authorId": "2211635337", "name": "Alireza
      Karami"}, {"authorId": "80653780", "name": "D. B. Bakhtiarvand"}, {"authorId":
      "1581570751", "name": "Ali Akbar Saleh-Bigdeli"}, {"authorId": "31043248", "name":
      "S. S. Gill"}, {"authorId": "145662461", "name": "Joseph Doyle"}]}, {"paperId":
      "96f380bcffe3439132410ca3fcc4bf7ecbc14b50", "externalIds": {"DOI": "10.4108/eetsc.v6i18.1197",
      "CorpusId": 249078072}, "corpusId": 249078072, "publicationVenue": {"id": "1016642f-e519-4a79-948d-0a64f5e5f5d1",
      "name": "EAI Endorsed Transactions on Smart Cities", "alternate_names": ["EAI
      Endorsed Trans Smart City"], "issn": "2518-3893", "url": "http://eai.eu/transaction/smart-cities",
      "alternate_urls": ["https://eudl.eu/issue/sc/1/1"]}, "url": "https://www.semanticscholar.org/paper/96f380bcffe3439132410ca3fcc4bf7ecbc14b50",
      "title": "Cloud-Edge Orchestration for Smart Cities: A Review of Kubernetes-based
      Orchestration Architectures", "abstract": "Edge computing offers computational
      resources near data-generating devices to enable low-latency access. Especially
      for smart city contexts, edge computing becomes inevitable for providing real-time
      services, like air quality monitoring systems. Kubernetes, a popular container
      orchestration platform, is often used to efficiently manage containerized applications
      in smart cities. Although it misses essential requirements of edge computing,
      like network-related metrics for scheduling decisions, it is still considered.
      This paper analyzes custom cloud-edge architectures implemented with Kubernetes.
      Specifically, we analyze how essential requirements of edge orchestration in
      smart cities are solved. Also, shortcomings are identified in these architectures
      based on the fundamental requirements of edge orchestration. We conduct a literature
      review to obtain the general requirements of edge computing and edge orchestration
      for our analysis. We map these requirements to the capabilities of Kubernetes-based
      cloud-edge architectures to assess their level of achievement. Issues like using
      network-related metrics and the missing topology-awareness of networks are partially
      solved. However, requirements like real-time resource utilization, fault-tolerance,
      and the placement of container registries are in the early stages. We conclude
      that Kubernetes is an eligible candidate for cloudedge orchestration. When the
      formerly mentioned issues are solved, Kubernetes can successfully contribute
      latency-critical, large-scale, and multi-tenant application deployments for
      smart cities.", "venue": "EAI Endorsed Transactions on Smart Cities", "year":
      2022, "referenceCount": 101, "citationCount": 7, "influentialCitationCount":
      2, "isOpenAccess": true, "openAccessPdf": {"url": "https://publications.eai.eu/index.php/sc/article/download/1197/1028",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Environmental Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["Review"], "publicationDate": "2022-05-25", "journal": {"name": "EAI Endorsed
      Transactions on Smart Cities"}, "citationStyles": {"bibtex": "@Article{B\u00f6hm2022CloudEdgeOF,\n
      author = {Sebastian B\u00f6hm and G. Wirtz},\n booktitle = {EAI Endorsed Transactions
      on Smart Cities},\n journal = {EAI Endorsed Transactions on Smart Cities},\n
      title = {Cloud-Edge Orchestration for Smart Cities: A Review of Kubernetes-based
      Orchestration Architectures},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "38469762", "name": "Sebastian B\u00f6hm"}, {"authorId": "145889900", "name":
      "G. Wirtz"}]}, {"paperId": "796d0692b9c4a4d0c4543e98517c360796ae1670", "externalIds":
      {"DBLP": "conf/icufn/TranVK22", "DOI": "10.1109/icufn55119.2022.9829572", "CorpusId":
      250941110}, "corpusId": 250941110, "publicationVenue": {"id": "5ba115b2-444a-476a-ae16-66bf1b83372f",
      "name": "International Conference on Ubiquitous and Future Networks", "type":
      "conference", "alternate_names": ["Int Conf Ubiquitous Future Netw", "ICUFN"]},
      "url": "https://www.semanticscholar.org/paper/796d0692b9c4a4d0c4543e98517c360796ae1670",
      "title": "A Survey of Autoscaling in Kubernetes", "abstract": "Autoscaling is
      the vital feature of cloud infrastructure to acquire or allocate computing resources
      ondemand, which allows users to automatically scale the resources provisioned
      to the applications without human action under a fluctuating workload to optimize
      the resource cost while satisfying the Quality of Service (QoS) requirements.
      Kubernetes (K8s), the most prevalent container orchestration, provides built-in
      autoscalers to deal with the scaling problem in terms of vertical and horizontal
      at container level but still has some limitations. In this paper, we survey
      the state of the art of existing approaches to solve the problem of container
      autoscaling in Kubernetes, their main characteristics as well as their current
      issues. Based on the analysis, new future directions that can be explored are
      proposed.", "venue": "International Conference on Ubiquitous and Future Networks",
      "year": 2022, "referenceCount": 21, "citationCount": 8, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference",
      "Review"], "publicationDate": "2022-07-05", "journal": {"name": "2022 Thirteenth
      International Conference on Ubiquitous and Future Networks (ICUFN)", "pages":
      "263-265"}, "citationStyles": {"bibtex": "@Article{Tran2022ASO,\n author = {Minh-Ngoc
      Tran and D. Vu and Younghan Kim},\n booktitle = {International Conference on
      Ubiquitous and Future Networks},\n journal = {2022 Thirteenth International
      Conference on Ubiquitous and Future Networks (ICUFN)},\n pages = {263-265},\n
      title = {A Survey of Autoscaling in Kubernetes},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "1557385933", "name": "Minh-Ngoc Tran"}, {"authorId": "2124374654",
      "name": "D. Vu"}, {"authorId": "2084264", "name": "Younghan Kim"}]}, {"paperId":
      "c5d1825555ad1c38501d67496e2cdc251d2d6de4", "externalIds": {"DBLP": "conf/IEEEcloud/BlaiseR22",
      "DOI": "10.1109/CLOUD55607.2022.00022", "CorpusId": 251773164}, "corpusId":
      251773164, "publicationVenue": {"id": "406d9f60-417a-4dc5-a6b7-1fe4689a4ff7",
      "name": "IEEE International Conference on Cloud Computing", "type": "conference",
      "alternate_names": ["Int Conf Cloud Comput [services Soc", "CLOUD", "International
      Conference on Cloud Computing [Services Society]", "IEEE Int Conf Cloud Comput"]},
      "url": "https://www.semanticscholar.org/paper/c5d1825555ad1c38501d67496e2cdc251d2d6de4",
      "title": "Stay at the Helm: secure Kubernetes deployments via graph generation
      and attack reconstruction", "abstract": "In recent years, there has been an
      explosion of attacks directed at microservice-based platforms \u2013 a trend
      that follows closely the massive shift of the digital industries towards these
      environments. Management and operation of container-based microservices is automation-heavy,
      leveraging on container orchestration engines such as Kubernetes (K8s). Helm
      is the package manager of choice for K8s and provides Charts, i.e., configuration
      files that define a programmatic model for application deployments. In this
      paper, we propose a novel methodology for extracting and evaluating the security
      model of Helm Charts. Our proposal extracts a topological graph of the Chart,
      whose nodes and edges are then characterised by security features. We carry
      out risk assessments that refer to the attack tactics of the MITRE ATT&CK framework.
      Furthermore, starting from these scores, we extract the riskiest attack paths.
      We adopt an experimental validation approach by analysing a dataset created
      from multiple publicly accessible Helm Chart repositories. Our methodology reveals
      that, in most cases, they have vulnerabilities that can be exploited through
      complex attack paths.", "venue": "IEEE International Conference on Cloud Computing",
      "year": 2022, "referenceCount": 33, "citationCount": 8, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://hal.archives-ouvertes.fr/hal-03705672/file/Reconstruction_model_Kubernetes.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-07-01",
      "journal": {"name": "2022 IEEE 15th International Conference on Cloud Computing
      (CLOUD)", "pages": "59-69"}, "citationStyles": {"bibtex": "@Article{Blaise2022StayAT,\n
      author = {Agathe Blaise and Filippo Rebecchi},\n booktitle = {IEEE International
      Conference on Cloud Computing},\n journal = {2022 IEEE 15th International Conference
      on Cloud Computing (CLOUD)},\n pages = {59-69},\n title = {Stay at the Helm:
      secure Kubernetes deployments via graph generation and attack reconstruction},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "5860038", "name": "Agathe Blaise"},
      {"authorId": "34941448", "name": "Filippo Rebecchi"}]}, {"paperId": "3c8baa86d137c0270626618aee26c50e8a25eb8f",
      "externalIds": {"DBLP": "conf/ccgrid/MarcheseT22", "DOI": "10.1109/ccgrid54584.2022.00102",
      "CorpusId": 250711219}, "corpusId": 250711219, "publicationVenue": {"id": "57f970eb-366a-4bfa-aa06-2ff70d834806",
      "name": "IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing",
      "type": "conference", "alternate_names": ["Clust Comput Grid", "CCGRID", "IEEE/ACM
      Int Symp Clust Cloud Grid Comput", "IEEE/ACM International Symposium Cluster,
      Cloud and Grid Computing", "Cluster Computing and the Grid", "IEEE/ACM Int Symp
      Clust Cloud Internet Comput"], "url": "http://www.buyya.com/ccgrid/"}, "url":
      "https://www.semanticscholar.org/paper/3c8baa86d137c0270626618aee26c50e8a25eb8f",
      "title": "Network-Aware Container Placement in Cloud-Edge Kubernetes Clusters",
      "abstract": "With the diffusion of Fog and Edge Computing paradigms, new application
      categories have emerged with specific quality of service requirements, in terms
      of communication latency and throughput. The placement of these applications
      on distributed Cloud-Edge environments is a challenging task, because of the
      continuously varying node-to-node network latency and bandwidth on Edge infrastructure.
      Although Kubernetes is the de-facto standard for container orchestration on
      Cloud data centers, its scheduling strategy is not suitable for the placement
      of time critical applications on Edge environments because it does not take
      into account current network conditions, neither communication requirements
      between microservices during its scheduling decisions. In this work we propose
      a network-aware scheduler plugin that extends the default Kubernetes scheduler,
      in order to deal with variable network conditions on cloud-edge clusters and
      run-time communication requirements of microservices. A custom descheduler is
      also proposed that periodically monitors run-time network state and traffic
      exchanged between microservices and evicts Pods from cluster nodes if better
      placement decisions can be done. An evaluation of our scheduling and descheduling
      strategies has been carried out on a sample microservices-based application
      deployed on a test bed environment.", "venue": "IEEE/ACM International Symposium
      on Cluster, Cloud and Internet Computing", "year": 2022, "referenceCount": 15,
      "citationCount": 8, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-05-01", "journal":
      {"name": "2022 22nd IEEE International Symposium on Cluster, Cloud and Internet
      Computing (CCGrid)", "pages": "859-865"}, "citationStyles": {"bibtex": "@Article{Marchese2022NetworkAwareCP,\n
      author = {Angelo Marchese and O. Tomarchio},\n booktitle = {IEEE/ACM International
      Symposium on Cluster, Cloud and Internet Computing},\n journal = {2022 22nd
      IEEE International Symposium on Cluster, Cloud and Internet Computing (CCGrid)},\n
      pages = {859-865},\n title = {Network-Aware Container Placement in Cloud-Edge
      Kubernetes Clusters},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2106438773",
      "name": "Angelo Marchese"}, {"authorId": "1725309", "name": "O. Tomarchio"}]},
      {"paperId": "6b5ce28547bdba5b6ab872b6eec78bcdb785985f", "externalIds": {"DBLP":
      "conf/icit2/JohanssonRNP22", "DOI": "10.1109/ICIT48603.2022.10002757", "CorpusId":
      255478710}, "corpusId": 255478710, "publicationVenue": {"id": "6c1a00cb-4b59-44d6-a887-bfd7c5b3768f",
      "name": "International Conference on Industrial Technology", "type": "conference",
      "alternate_names": ["ICIT", "Int Conf Ind Technol", "IEEE Int Conf Integr Technol",
      "IEEE International Conference on Integration Technology"]}, "url": "https://www.semanticscholar.org/paper/6b5ce28547bdba5b6ab872b6eec78bcdb785985f",
      "title": "Kubernetes Orchestration of High Availability Distributed Control
      Systems", "abstract": "Distributed control systems transform with the Industry
      4.0 paradigm shift. A mesh-like, network-centric topology replaces the traditional
      controller-centered architecture, enforcing the interest of cloud-, fog-, and
      edge-computing, where lightweight container-based virtualization is a cornerstone.
      Kubernetes is a well-known container management system for container orchestration
      in cloud computing. It is gaining traction in edge- and fog-computing due to
      its elasticity and failure recovery properties. Orchestrator failure recovery
      can complement the manual replacement of a failed controller and, combined with
      controller redundancy, provide a pseudo-one-out-of-many redundancy. This paper
      investigates the failure recovery performance obtained from an out-of-the-box
      Kubernetes installation in a distributed control system scenario. We describe
      a Kubernetes based virtualized controller architecture and the software needed
      to set up a bare-metal cluster for control systems. Further, we deploy single
      and redundant configured containerized controllers based on an OPC UA compatible
      industry middleware software on the bare-metal cluster. The controllers expose
      variables with OPC UA PubSub. A script-based daemon introduces node failures,
      and a verification controller measures the downtime when using Kubernetes with
      an industry redundancy solution.", "venue": "International Conference on Industrial
      Technology", "year": 2022, "referenceCount": 20, "citationCount": 8, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-08-22", "journal": {"name": "2022 IEEE International
      Conference on Industrial Technology (ICIT)", "pages": "1-8"}, "citationStyles":
      {"bibtex": "@Article{Johansson2022KubernetesOO,\n author = {Bjarne Johansson
      and Mats R\u00e5gberger and T. Nolte and A. Papadopoulos},\n booktitle = {International
      Conference on Industrial Technology},\n journal = {2022 IEEE International Conference
      on Industrial Technology (ICIT)},\n pages = {1-8},\n title = {Kubernetes Orchestration
      of High Availability Distributed Control Systems},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "1388650585", "name": "Bjarne Johansson"}, {"authorId": "2027026333",
      "name": "Mats R\u00e5gberger"}, {"authorId": "1388261929", "name": "T. Nolte"},
      {"authorId": "1805880", "name": "A. Papadopoulos"}]}, {"paperId": "467522a1cca7a7f852f50c46f6dc47ef4ddc8287",
      "externalIds": {"DBLP": "journals/access/RuizPMMT22", "DOI": "10.1109/ACCESS.2022.3158743",
      "CorpusId": 247405070}, "corpusId": 247405070, "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26",
      "name": "IEEE Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/467522a1cca7a7f852f50c46f6dc47ef4ddc8287",
      "title": "Autoscaling pods on an on-premise Kubernetes infrastructure QoS-aware",
      "abstract": "Cloud systems and microservices are becoming powerful tools for
      businesses. The evidence of the advantages of offering infrastructure, hardware
      or software as a service (IaaS, PaaS, SaaS) is overwhelming. Microservices and
      decoupled applications are increasingly popular. These architectures, based
      on containers, have facilitated the efficient development of complex SaaS applications.
      A big challenge is to manage and design microservices with a massive range of
      different facilities, from processing and data storage to computing predictive
      and prescriptive analytics. Computing providers are mainly based on data centers
      formed of massive and heterogeneous virtualized systems, which are continuously
      growing and diversifying over time. Moreover, these systems require integrating
      into current systems while meeting the Quality of Service (QoS) constraints.
      The primary purpose of this work is to present an on-premise architecture based
      on Kubernetes and docker containers aimed at improving QoS regarding resource
      usage and service level objectives (SLOs). The main contribution of this proposal
      is its dynamic autoscaling capabilities to adjust system resources to the current
      workload while improving QoS.", "venue": "IEEE Access", "year": 2022, "referenceCount":
      37, "citationCount": 8, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://ieeexplore.ieee.org/ielx7/6287639/9668973/09732997.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "IEEE Access", "pages": "1-1", "volume": "PP"}, "citationStyles": {"bibtex":
      "@Article{Ru\u00edz2022AutoscalingPO,\n author = {Llu\u00eds Mas Ru\u00edz and
      P\u00e9rez Pueyo and J. Mateo-Forn\u00e9s and Jordi Vilaplana Mayoral and Francesc
      Solsona Teh\u00e0s},\n booktitle = {IEEE Access},\n journal = {IEEE Access},\n
      pages = {1-1},\n title = {Autoscaling pods on an on-premise Kubernetes infrastructure
      QoS-aware},\n volume = {PP},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2160743714", "name": "Llu\u00eds Mas Ru\u00edz"}, {"authorId": "2095299960",
      "name": "P\u00e9rez Pueyo"}, {"authorId": "1412137948", "name": "J. Mateo-Forn\u00e9s"},
      {"authorId": "2160745011", "name": "Jordi Vilaplana Mayoral"}, {"authorId":
      "133982603", "name": "Francesc Solsona Teh\u00e0s"}]}, {"paperId": "dfd20bb2c1014b985ddd18a9a86ab6b328abc2df",
      "externalIds": {"DBLP": "conf/comsnets/ZhuG22", "DOI": "10.1109/COMSNETS53615.2022.9668504",
      "CorpusId": 245957579}, "corpusId": 245957579, "publicationVenue": {"id": "6afe5f5f-0d54-4e3a-aa07-ed4778cf1405",
      "name": "International Conference on Communication Systems and Networks", "type":
      "conference", "alternate_names": ["Communication Systems and Networks", "Int
      Conf Commun Syst Netw", "COMSNETS", "Commun Syst Netw"], "url": "http://www.comsnets.org/"},
      "url": "https://www.semanticscholar.org/paper/dfd20bb2c1014b985ddd18a9a86ab6b328abc2df",
      "title": "Kub-Sec, an automatic Kubernetes cluster AppArmor profile generation
      engine", "abstract": "Kubernetes (K8s) is one of the best options available
      to deploy applications in large-scale infrastructures. Security has been a big
      concern for all practitioners in the K8s eco-system. Almost all cloud vendors
      have their security solution for K8s cluster, pods, workloads, etc. In recent
      years, a large number of open-source tools and projects related to K8s security
      have emerged to meet the increased demand for enhanced security in these systems.
      Following this general need and trend, we propose a new design for automatic
      K8s cluster AppArmor profile generation. Our design is based on a most recent
      work of automatic AppArmor policy generator for Docker containers called Lic-Sec.
      The system collects the behavioral data of application containers in all worker
      nodes distributively, then centrally transforms the data to AppArmor policies
      for each application container, and enforces the policies without interrupting
      the service. We present a prototype of the system using Google K8s environment
      and with an AppArmor profile for a WordPress personal blog. We show that the
      security policies generated by the system can defend one typical kind of attack
      which targets all WordPress''s XML-RPC interface.", "venue": "International
      Conference on Communication Systems and Networks", "year": 2022, "referenceCount":
      0, "citationCount": 6, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-01-04",
      "journal": {"name": "2022 14th International Conference on COMmunication Systems
      & NETworkS (COMSNETS)", "pages": "129-137"}, "citationStyles": {"bibtex": "@Article{Zhu2022KubSecAA,\n
      author = {Hui Zhu and Christian Gehrmann},\n booktitle = {International Conference
      on Communication Systems and Networks},\n journal = {2022 14th International
      Conference on COMmunication Systems & NETworkS (COMSNETS)},\n pages = {129-137},\n
      title = {Kub-Sec, an automatic Kubernetes cluster AppArmor profile generation
      engine},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2115718334", "name":
      "Hui Zhu"}, {"authorId": "70409177", "name": "Christian Gehrmann"}]}, {"paperId":
      "46aeff64618ed8d4306f52b3c2842145f394bd15", "externalIds": {"DBLP": "journals/tnsm/TokaDFS21",
      "DOI": "10.1109/TNSM.2021.3052837", "CorpusId": 232237085}, "corpusId": 232237085,
      "publicationVenue": {"id": "a00fde74-d8df-4613-b825-0fff9f531d3f", "name": "IEEE
      Transactions on Network and Service Management", "type": "journal", "alternate_names":
      ["IEEE Trans Netw Serv Manag"], "issn": "1932-4537", "url": "http://ejournals.ebsco.com/direct.asp?JournalID=714200",
      "alternate_urls": ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=4275028",
      "http://ieeexplore.ieee.org/servlet/opac?punumber=4275028"]}, "url": "https://www.semanticscholar.org/paper/46aeff64618ed8d4306f52b3c2842145f394bd15",
      "title": "Machine Learning-Based Scaling Management for Kubernetes Edge Clusters",
      "abstract": "Kubernetes, the container orchestrator for cloud-deployed applications,
      offers automatic scaling for the application provider in order to meet the ever-changing
      intensity of processing demand. This auto-scaling feature can be customized
      with a parameter set, but those management parameters are static while incoming
      Web request dynamics often change, not to mention the fact that scaling decisions
      are inherently reactive, instead of being proactive. We set the ultimate goal
      of making cloud-based applications\u2019 management easier and more effective.
      We propose a Kubernetes scaling engine that makes the auto-scaling decisions
      apt for handling the actual variability of incoming requests. In this engine
      various machine learning forecast methods compete with each other via a short-term
      evaluation loop in order to always give the lead to the method that suits best
      the actual request dynamics. We also introduce a compact management parameter
      for the cloud-tenant application provider to easily set their sweet spot in
      the resource over-provisioning vs. SLA violation trade-off. We motivate our
      scaling solution with analytical modeling and evaluation of the current Kubernetes
      behavior. The multi-forecast scaling engine and the proposed management parameter
      are evaluated both in simulations and with measurements on our collected Web
      traces to show the improved quality of fitting provisioned resources to service
      demand. We find that with just a few, but fundamentally different, and competing
      forecast methods, our auto-scaler engine, implemented in Kubernetes, results
      in significantly fewer lost requests with just slightly more provisioned resources
      compared to the default baseline.", "venue": "IEEE Transactions on Network and
      Service Management", "year": 2021, "referenceCount": 43, "citationCount": 55,
      "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2021-03-01", "journal": {"name": "IEEE Transactions on Network and Service
      Management", "pages": "958-972", "volume": "18"}, "citationStyles": {"bibtex":
      "@Article{Toka2021MachineLS,\n author = {L\u00e1szl\u00f3 Toka and Gergely Dobreff
      and Bal\u00e1zs Fodor and Bal\u00e1zs Sonkoly},\n booktitle = {IEEE Transactions
      on Network and Service Management},\n journal = {IEEE Transactions on Network
      and Service Management},\n pages = {958-972},\n title = {Machine Learning-Based
      Scaling Management for Kubernetes Edge Clusters},\n volume = {18},\n year =
      {2021}\n}\n"}, "authors": [{"authorId": "2955111", "name": "L\u00e1szl\u00f3
      Toka"}, {"authorId": "1820938878", "name": "Gergely Dobreff"}, {"authorId":
      "2065166600", "name": "Bal\u00e1zs Fodor"}, {"authorId": "1771457", "name":
      "Bal\u00e1zs Sonkoly"}]}, {"paperId": "a32ced945fd5fb143b1877c97f8bd87ade457dfb",
      "externalIds": {"MAG": "3087685572", "DOI": "10.1038/s41592-020-01023-0", "CorpusId":
      230508285, "PubMed": "33398191"}, "corpusId": 230508285, "publicationVenue":
      {"id": "099483df-e8f2-4bee-805d-8a69f07b6cbf", "name": "Nature Methods", "type":
      "journal", "alternate_names": ["Nat Method"], "issn": "1548-7091", "url": "http://www.nature.com/",
      "alternate_urls": ["http://www.nature.com/nmeth/index.html", "https://www.nature.com/nmeth/",
      "http://www.nature.com/nmeth/authors/index.html#aims"]}, "url": "https://www.semanticscholar.org/paper/a32ced945fd5fb143b1877c97f8bd87ade457dfb",
      "title": "DeepCell Kiosk: scaling deep learning\u2013enabled cellular image
      analysis with Kubernetes", "abstract": null, "venue": "Nature Methods", "year":
      2021, "referenceCount": 38, "citationCount": 76, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "https://authors.library.caltech.edu/91967/1/505032.full.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Medicine", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Medicine", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Biology", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2021-01-01", "journal": {"name": "Nature Methods", "pages":
      "43 - 45", "volume": "18"}, "citationStyles": {"bibtex": "@Article{Bannon2021DeepCellKS,\n
      author = {Dylan Bannon and Erick Moen and Morgan Schwartz and Enrico Borba and
      Takamasa Kudo and N. Greenwald and Vibha Vijayakumar and B. Chang and Edward
      Pao and Erik Osterman and William Graf and David Van Valen},\n booktitle = {Nature
      Methods},\n journal = {Nature Methods},\n pages = {43 - 45},\n title = {DeepCell
      Kiosk: scaling deep learning\u2013enabled cellular image analysis with Kubernetes},\n
      volume = {18},\n year = {2021}\n}\n"}, "authors": [{"authorId": "91548448",
      "name": "Dylan Bannon"}, {"authorId": "2065614284", "name": "Erick Moen"}, {"authorId":
      "82899374", "name": "Morgan Schwartz"}, {"authorId": "1389463040", "name": "Enrico
      Borba"}, {"authorId": "5864924", "name": "Takamasa Kudo"}, {"authorId": "3664488",
      "name": "N. Greenwald"}, {"authorId": "144099385", "name": "Vibha Vijayakumar"},
      {"authorId": "2054393394", "name": "B. Chang"}, {"authorId": "40587736", "name":
      "Edward Pao"}, {"authorId": "1987718591", "name": "Erik Osterman"}, {"authorId":
      "2054090660", "name": "William Graf"}, {"authorId": "6838746", "name": "David
      Van Valen"}]}, {"paperId": "1963447ce4a5f2e96d91fee4fcf8706d6cc9654f", "externalIds":
      {"DBLP": "journals/access/TranVK22", "DOI": "10.1109/ACCESS.2022.3209257", "CorpusId":
      252549304}, "corpusId": 252549304, "publicationVenue": {"id": "2633f5b2-c15c-49fe-80f5-07523e770c26",
      "name": "IEEE Access", "type": "journal", "issn": "2169-3536", "url": "http://www.ieee.org/publications_standards/publications/ieee_access.html",
      "alternate_urls": ["http://ieeexplore.ieee.org/servlet/opac?punumber=6287639"]},
      "url": "https://www.semanticscholar.org/paper/1963447ce4a5f2e96d91fee4fcf8706d6cc9654f",
      "title": "Proactive Stateful Fault-Tolerant System for Kubernetes Containerized
      Services", "abstract": "Recently, the development of Kubernetes (K8s) containerization
      platform has enabled cloud-based, lightweight, highly scalable, and agile services
      in both general and telco use-cases. Ensuring high availability, reliable and
      continuous containerized services is a major requirement of service providers
      to provide fault-tolerance, transparent service experiences to end-users. To
      satisfy this requirement, fault prediction and proactive stateful service recovery
      features must be applied in cloud systems. Prior proactive failure recovery
      approaches mostly focused on either improving fault prediction performance based
      on different machine learning time series forecasting techniques or optimizing
      recovery service placement after fault prediction. However, a mechanism that
      enables stateful containerized service migration from the predicted faulty node
      to the healthy destination node has not been studied. Service migration in previous
      proactive works is only simulated or performed by virtual machine (VM) migration
      techniques. In this paper, we propose a proactive stateful fault-tolerant system
      for K8s containerized services that pipelines a Bidirectional Long Short-Term
      Memory (Bi-LSTM) fault prediction framework and a novel K8s stateful service
      migration mechanism for service recovery. Experimental results show how the
      Bi-LSTM model improved prediction performance against other time-series forecasting
      models used prior proactive works. We then combined the Bi-LSTM fault prediction
      framework with both the default K8s and our stateful migration mechanisms. The
      comparison between these two proactive systems proves our system efficiency
      in terms of reducing Quality of Service (QoS) violation percentage and service
      recovery time.", "venue": "IEEE Access", "year": 2022, "referenceCount": 40,
      "citationCount": 5, "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "IEEE Access", "pages": "102181-102194", "volume": "10"}, "citationStyles":
      {"bibtex": "@Article{Tran2022ProactiveSF,\n author = {Minh-Ngoc Tran and Xuan
      Tuong Vu and Younghan Kim},\n booktitle = {IEEE Access},\n journal = {IEEE Access},\n
      pages = {102181-102194},\n title = {Proactive Stateful Fault-Tolerant System
      for Kubernetes Containerized Services},\n volume = {10},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "1557385933", "name": "Minh-Ngoc Tran"}, {"authorId":
      "2066278848", "name": "Xuan Tuong Vu"}, {"authorId": "2084264", "name": "Younghan
      Kim"}]}, {"paperId": "b22ceba0af15b3583dfba3c3f5f8395235270bfd", "externalIds":
      {"DBLP": "journals/cluster/CardasABNMS23", "DOI": "10.1007/s10586-022-03718-9",
      "CorpusId": 252240104}, "corpusId": 252240104, "publicationVenue": {"id": "f1d0ef3d-4e90-41e9-b454-f589a933654f",
      "name": "Cluster Computing", "type": "journal", "alternate_names": ["Clust Comput"],
      "issn": "1386-7857", "url": "https://www.springer.com/computer/communication+networks/journal/10586",
      "alternate_urls": ["https://link.springer.com/journal/10586", "http://www.springer.com/computer/communication+networks/journal/10586"]},
      "url": "https://www.semanticscholar.org/paper/b22ceba0af15b3583dfba3c3f5f8395235270bfd",
      "title": "On the performance of SQL scalable systems on Kubernetes: a comparative
      study", "abstract": null, "venue": "Cluster Computing", "year": 2022, "referenceCount":
      21, "citationCount": 3, "influentialCitationCount": 1, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://link.springer.com/content/pdf/10.1007/s10586-022-03718-9.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2022-09-09", "journal": {"name": "Cluster Computing", "pages":
      "1935 - 1947", "volume": "26"}, "citationStyles": {"bibtex": "@Article{Cardas2022OnTP,\n
      author = {Cristian Cardas and Jos\u00e9 F. Aldana-Mart\u00edn and A. M. Burgue\u00f1o-Romero
      and Antonio J. Nebro and J. Mateos and J. S\u00e1nchez},\n booktitle = {Cluster
      Computing},\n journal = {Cluster Computing},\n pages = {1935 - 1947},\n title
      = {On the performance of SQL scalable systems on Kubernetes: a comparative study},\n
      volume = {26},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2184862917",
      "name": "Cristian Cardas"}, {"authorId": "2122207337", "name": "Jos\u00e9 F.
      Aldana-Mart\u00edn"}, {"authorId": "2124476567", "name": "A. M. Burgue\u00f1o-Romero"},
      {"authorId": "2184195", "name": "Antonio J. Nebro"}, {"authorId": "144119238",
      "name": "J. Mateos"}, {"authorId": "2218294408", "name": "J. S\u00e1nchez"}]},
      {"paperId": "03e48e840db3e98b517768a4ae88ae95c080aa21", "externalIds": {"DOI":
      "10.14569/ijacsa.2022.0130460", "CorpusId": 248648268}, "corpusId": 248648268,
      "publicationVenue": {"id": "20a3a2f3-532a-4f04-9f3d-1e268e100872", "name": "International
      Journal of Advanced Computer Science and Applications", "type": "journal", "alternate_names":
      ["Int J Adv Comput Sci Appl"], "issn": "2156-5570", "url": "http://sites.google.com/site/ijacsa2010/",
      "alternate_urls": ["http://thesai.org/Publication/Default.aspx", "https://thesai.org/Publications/IJACSA"]},
      "url": "https://www.semanticscholar.org/paper/03e48e840db3e98b517768a4ae88ae95c080aa21",
      "title": "Framework to Deploy Containers using Kubernetes and CI/CD Pipeline",
      "abstract": "\u2014Containers are continuously replacing the usage of virtual
      machines and gaining popularity in terms of scalability and agility in IT Industry.
      The key concept behind containers is Operating system based virtualization.
      In cloud, computing containers are getting deployed in terms of computing instances
      whereas in premises they are getting deployed using Docker as a part of CI/CD
      pipelines using Jenkin Server. When containers are going to be increased in
      number, its deployment and resource management is always a concern which is
      managed using the Kubernetes. Kubernetes is used to deploy and manage the containers
      in an autonomous manner and Rancher is used to manage the Kubernetes Cluster
      in an efficient manner. First Analysis is done for the scheduler, resource management
      which is used by Kubernetes to deploy the containers and proposed a framework
      which will automate the whole process using the helm-charts, ansible scripts
      from container deployment to the management of Kubernetes Cluster in a scalable
      manner. It is fully automated framework and can be used to deploy the scalable
      applications in form of containers as Docker images. CI/CD pipeline is also
      considered using Jenkin Server.", "venue": "International Journal of Advanced
      Computer Science and Applications", "year": 2022, "referenceCount": 20, "citationCount":
      4, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "http://thesai.org/Downloads/Volume13No4/Paper_60-Framework_to_Deploy_Containers_using_Kubernetes_and_CICD_Pipeline.pdf",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "International
      Journal of Advanced Computer Science and Applications"}, "citationStyles": {"bibtex":
      "@Article{Abhishek2022FrameworkTD,\n author = {M. Abhishek and D. Rao and K.
      Subrahmanyam},\n booktitle = {International Journal of Advanced Computer Science
      and Applications},\n journal = {International Journal of Advanced Computer Science
      and Applications},\n title = {Framework to Deploy Containers using Kubernetes
      and CI/CD Pipeline},\n year = {2022}\n}\n"}, "authors": [{"authorId": "9102634",
      "name": "M. Abhishek"}, {"authorId": "47299401", "name": "D. Rao"}, {"authorId":
      "41204470", "name": "K. Subrahmanyam"}]}, {"paperId": "601011178c174bfc9b1c36220032ce8fb198530d",
      "externalIds": {"DBLP": "journals/grid/Carrion22", "DOI": "10.1007/s10723-022-09629-8",
      "CorpusId": 254248844}, "corpusId": 254248844, "publicationVenue": {"id": "993eb4fa-4cb7-4aed-980e-20e5298efad0",
      "name": "Journal of Grid Computing", "type": "journal", "alternate_names": ["J
      Grid Comput"], "issn": "1570-7873", "url": "https://www.springer.com/journal/10723",
      "alternate_urls": ["https://link.springer.com/journal/10723", "http://www.springer.com/journal/10723"]},
      "url": "https://www.semanticscholar.org/paper/601011178c174bfc9b1c36220032ce8fb198530d",
      "title": "Kubernetes as a Standard Container Orchestrator - A Bibliometric Analysis",
      "abstract": null, "venue": "Journal of Grid Computing", "year": 2022, "referenceCount":
      88, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Review"], "publicationDate": "2022-12-01", "journal": {"name": "Journal of
      Grid Computing", "pages": "1-23", "volume": "20"}, "citationStyles": {"bibtex":
      "@Article{Carri\u00f3n2022KubernetesAA,\n author = {C. Carri\u00f3n},\n booktitle
      = {Journal of Grid Computing},\n journal = {Journal of Grid Computing},\n pages
      = {1-23},\n title = {Kubernetes as a Standard Container Orchestrator - A Bibliometric
      Analysis},\n volume = {20},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "144891586", "name": "C. Carri\u00f3n"}]}, {"paperId": "aade0f94c9b68cd6eae361d5183825951f9bf9f2",
      "externalIds": {"DBLP": "conf/aina/AznavouridisTP22", "DOI": "10.1007/978-3-030-99587-4_35",
      "CorpusId": 247844537}, "corpusId": 247844537, "publicationVenue": {"id": "7180f721-a356-48cc-b6cd-dd3ab90a3566",
      "name": "International Conference on Advanced Information Networking and Applications",
      "type": "conference", "alternate_names": ["aina", "Int Conf Adv Inf Netw Appl"],
      "url": "http://www.aina-conference.org/"}, "url": "https://www.semanticscholar.org/paper/aade0f94c9b68cd6eae361d5183825951f9bf9f2",
      "title": "Micro-Service Placement Policies for Cost Optimization in Kubernetes",
      "abstract": null, "venue": "International Conference on Advanced Information
      Networking and Applications", "year": 2022, "referenceCount": 18, "citationCount":
      5, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"pages": "409-420"}, "citationStyles": {"bibtex": "@Article{Aznavouridis2022MicroServicePP,\n
      author = {Alkiviadis Aznavouridis and Konstantinos Tsakos and E. Petrakis},\n
      booktitle = {International Conference on Advanced Information Networking and
      Applications},\n pages = {409-420},\n title = {Micro-Service Placement Policies
      for Cost Optimization in Kubernetes},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2160918061", "name": "Alkiviadis Aznavouridis"}, {"authorId": "2102266665",
      "name": "Konstantinos Tsakos"}, {"authorId": "1729390", "name": "E. Petrakis"}]},
      {"paperId": "967ad7c688e14744ead48b774d4b8a020536a686", "externalIds": {"DBLP":
      "journals/corr/abs-2207-02531", "ArXiv": "2207.02531", "DOI": "10.1109/ICCCBDA56900.2023.10154770",
      "CorpusId": 250311252}, "corpusId": 250311252, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/967ad7c688e14744ead48b774d4b8a020536a686",
      "title": "A Kubernetes \u2018Bridge\u2019 Operator between Cloud and External
      Resources", "abstract": "Many scientific workflows require dedicated compute
      resources, including HPC clusters with optimized software, quantum resources,
      and dedicated hardware cluster systems like Ray, for example. At the same time,
      many scientific workflows today are built on Kubernetes leveraging growing support
      for workflow and support tools. To address the growing demand to support workflows
      on both cloud and dedicated compute resources we present the Bridge Operator,
      a software extension for container orchestration in Kubernetes which facilitates
      the submission and monitoring of long running processes on external systems
      which have their own cluster resources manager (SLURM, LSF, quantum services
      and Ray). The Bridge Operator consists of a custom Kubernetes controller that
      employs a Kubernetes Custom Resource Definition to manage applications. We present
      controller logic to manage the cloud container orchestration and external resource
      workload manager interface, a resource definition to submit HTTP/HTTPS requests
      to the external resource, and a controller pod communicating with the external
      resource manager to submit and manage job execution. The implementation allows
      us to mirror the external resource in Kubernetes pods, which allows the operator
      to use these pods as proxies to control the external system. The implementation
      is agnostic to the choice of resource manager but assumes the system exposes
      a HTTP/HTTPS API for its control/management. The Bridge Operator automates the
      role of a human operator running jobs on a black box external resource as part
      of a complex hybrid workflow on the Cloud.", "venue": "2023 8th International
      Conference on Cloud Computing and Big Data Analytics (ICCCBDA)", "year": 2022,
      "referenceCount": 11, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2207.02531", "status":
      "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-07-06",
      "journal": {"name": "2023 8th International Conference on Cloud Computing and
      Big Data Analytics (ICCCBDA)", "pages": "263-269"}, "citationStyles": {"bibtex":
      "@Article{Lublinsky2022AK,\n author = {B. Lublinsky and E. Jennings and Vikt\u00f3ria
      Spi\u0161akov\u00e1},\n booktitle = {2023 8th International Conference on Cloud
      Computing and Big Data Analytics (ICCCBDA)},\n journal = {2023 8th International
      Conference on Cloud Computing and Big Data Analytics (ICCCBDA)},\n pages = {263-269},\n
      title = {A Kubernetes \u2018Bridge\u2019 Operator between Cloud and External
      Resources},\n year = {2022}\n}\n"}, "authors": [{"authorId": "3281633", "name":
      "B. Lublinsky"}, {"authorId": "49430957", "name": "E. Jennings"}, {"authorId":
      "2172629644", "name": "Vikt\u00f3ria Spi\u0161akov\u00e1"}]}, {"paperId": "60f4ad8ee25168e61caddf12571f65f48adeec6f",
      "externalIds": {"DBLP": "conf/apsec/WangMLL22", "DOI": "10.1109/APSEC57359.2022.00066",
      "CorpusId": 256944518}, "corpusId": 256944518, "publicationVenue": {"id": "8bcdbd50-f829-4fb4-ab17-bf6bffa1c5a5",
      "name": "Asia-Pacific Software Engineering Conference", "type": "conference",
      "alternate_names": ["Asia-pacific Symp Electromagn Compat", "Asia-pacific Softw
      Eng Conf", "Asia-Pacific Symposium on Electromagnetic Compatibility", "APSEC"],
      "url": "http://www.wikicfp.com/cfp/program?id=205"}, "url": "https://www.semanticscholar.org/paper/60f4ad8ee25168e61caddf12571f65f48adeec6f",
      "title": "Analyzing and Monitoring Kubernetes Microservices based on Distributed
      Tracing and Service Mesh", "abstract": "The microservice system architecture
      (MSA) outperforms the monolithic system architecture in terms of maintainability,
      extensibility, scalability, and fault tolerance. This is prompting a widescale
      migration of software systems from existing monolith systems to MSA. Most microservice
      systems utilize container technology for deployment. The fact that Kubernetes
      (K8s) provides a fully-fledged toolchain for managing container-based applications
      is prompting many organizations to adopt the K8s protocol for microservice system
      deployment and operations. Microservice monitoring is essential to the success
      of any service operation. The collection of logs and aggregation of metrics
      by most existing microservice monitoring systems is somewhat intrusive. Furthermore,
      the heterogeneity of Kubernetes technology means that most monitoring methods
      are inapplicable in situations where microservices are developed for a system
      using a variety of underlying languages and platforms. In the current study,
      we developed a monitoring mechanism that provides various metrics specific to
      microservice systems in a nonintrusive way. The proposed K8s-based microservice
      monitoring system, referred to as KMamiz (Kubernetes-based Microservice Analysis
      and Monitoring using Istio and Zipkin), enables the construction and visualization
      for service-level/endpoint-level dependency graphs and endpoint request chains,
      and the service cohesion/coupling analysis to enhance system quality for the
      development team.", "venue": "Asia-Pacific Software Engineering Conference",
      "year": 2022, "referenceCount": 16, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-12-01", "journal": {"name": "2022 29th Asia-Pacific
      Software Engineering Conference (APSEC)", "pages": "477-481"}, "citationStyles":
      {"bibtex": "@Article{Wang2022AnalyzingAM,\n author = {Yu-Te Wang and Shang-Pin
      Ma and Yue-Jun Lai and Yan-Cih Liang},\n booktitle = {Asia-Pacific Software
      Engineering Conference},\n journal = {2022 29th Asia-Pacific Software Engineering
      Conference (APSEC)},\n pages = {477-481},\n title = {Analyzing and Monitoring
      Kubernetes Microservices based on Distributed Tracing and Service Mesh},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "2108071375", "name": "Yu-Te Wang"},
      {"authorId": "1736499", "name": "Shang-Pin Ma"}, {"authorId": "2207704408",
      "name": "Yue-Jun Lai"}, {"authorId": "2208074493", "name": "Yan-Cih Liang"}]},
      {"paperId": "52dadd92c17ba8a6308c3654c079e1f455480ed3", "externalIds": {"DBLP":
      "conf/wcnc/CejudoIS22", "DOI": "10.36227/techrxiv.19169021.v1", "CorpusId":
      247065958}, "corpusId": 247065958, "publicationVenue": {"id": "27235614-bd3e-4d6b-be38-5ede18f4e209",
      "name": "IEEE Wireless Communications and Networking Conference", "type": "conference",
      "alternate_names": ["IEEE Wirel Commun Netw Conf", "WCNC", "Wireless Communications
      and Networking Conference", "Wirel Commun Netw Conf"], "url": "http://www.ieee-wcnc.org/"},
      "url": "https://www.semanticscholar.org/paper/52dadd92c17ba8a6308c3654c079e1f455480ed3",
      "title": "Optimal Offloading of Kubernetes Pods in Three-Tier Networks", "abstract":
      "By pushing resources to far-edge servers located in the proximity of users,
      edge computing can greatly reduce end-to-end transmission delays. Task offloading
      in multi-tier networks refers to the optimization of which tasks should be offloaded
      from the far-edge to the edge and the cloud. Moreover, the containerization
      of applications can further reduce resource and time consumption and, in turn,
      the latency of such applications. Even though Kubernetes has become the de facto
      container orchestrator, not many works have considered the offloading of containerized
      applications in Kubernetes clusters spanning from cloud to far-edge. In this
      work, the problem of offloading Kubernetes tasks (or pods) in three-tier networks
      is formulated and optimized. First, a utility function is presented in terms
      of the cumulative weighted pod response time, and a utility minimization problem
      with central processing unit (CPU) constraints is presented. Based on the optimal
      theoretical solution to this problem, a three-tier offloading decision algorithm
      (TTODA) is developed. Horizontal scaling is considered, and specific hardware
      capabilities of each node are taken into account by setting specific SLAs that
      are fed back to the algorithm. Numerical results show that TTODA outperforms
      a typical Kubernetes QoS model based on first-in, first-served algorithm (FIFSA)
      in terms of utility, average pod response time, and usage of far-edge CPU. Further,
      TTODA achieves an excellent trade-off between performance and computational
      complexity, and thus it can help achieve the requirements of latency-sensitive
      applications. Moreover, TTODA can easily be extended to scenarios with joint
      memory and CPU constraints.", "venue": "IEEE Wireless Communications and Networking
      Conference", "year": 2022, "referenceCount": 0, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-02-22", "journal": {"name": "2022 IEEE Wireless Communications
      and Networking Conference (WCNC)", "pages": "280-285"}, "citationStyles": {"bibtex":
      "@Article{Cejudo2022OptimalOO,\n author = {Estela Carmona Cejudo and Francesco
      Iadanza and M. S. Siddiqui},\n booktitle = {IEEE Wireless Communications and
      Networking Conference},\n journal = {2022 IEEE Wireless Communications and Networking
      Conference (WCNC)},\n pages = {280-285},\n title = {Optimal Offloading of Kubernetes
      Pods in Three-Tier Networks},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "35486214", "name": "Estela Carmona Cejudo"}, {"authorId": "50828656", "name":
      "Francesco Iadanza"}, {"authorId": "33675565", "name": "M. S. Siddiqui"}]},
      {"paperId": "5cb802583cd093fd8b70a093b2ecd7bb6f81b895", "externalIds": {"DBLP":
      "conf/iccS/BalisBS22", "DOI": "10.1007/978-3-031-08754-7_5", "CorpusId": 250076645},
      "corpusId": 250076645, "publicationVenue": {"id": "46990654-eb6c-4674-96bc-ba905dab2a86",
      "name": "International Conference on Conceptual Structures", "type": "conference",
      "alternate_names": ["IEEE Int Conf Commun Syst", "International Conference on
      Computational Science", "ICCS", "International Conference on Curves and Surfaces",
      "Int Conf Concept Struct", "Int Conf Curve Surf", "IEEE International Conference
      on Complex Systems", "IEEE International Conference on Communication Systems",
      "Int Conf Comput Sci", "IEEE Int Conf Complex Syst"], "url": "http://www.wikicfp.com/cfp/program?id=1321",
      "alternate_urls": ["https://link.springer.com/conference/iccs-computsci"]},
      "url": "https://www.semanticscholar.org/paper/5cb802583cd093fd8b70a093b2ecd7bb6f81b895",
      "title": "Auto-scaling of Scientific Workflows in Kubernetes", "abstract": null,
      "venue": "International Conference on Conceptual Structures", "year": 2022,
      "referenceCount": 10, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"pages": "33-40"}, "citationStyles": {"bibtex": "@Article{Bali\u015b2022AutoscalingOS,\n
      author = {B. Bali\u015b and A. Bronski and Mateusz Szarek},\n booktitle = {International
      Conference on Conceptual Structures},\n pages = {33-40},\n title = {Auto-scaling
      of Scientific Workflows in Kubernetes},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "1960359", "name": "B. Bali\u015b"}, {"authorId": "95790281", "name": "A. Bronski"},
      {"authorId": "98286943", "name": "Mateusz Szarek"}]}, {"paperId": "a8da6903b072ccff10700a8d1d9097cd3c2f8e57",
      "externalIds": {"DBLP": "conf/icact/NguyenDTLPNPPNN22", "DOI": "10.23919/ICACT53585.2022.9728817",
      "CorpusId": 247387074}, "corpusId": 247387074, "publicationVenue": {"id": "9cb29d4c-aff5-4a8d-8ae4-6a2cd440519d",
      "name": "International Conference on Advanced Communication Technology", "type":
      "conference", "alternate_names": ["Int Conf Adv Commun Technol", "ICACT"]},
      "url": "https://www.semanticscholar.org/paper/a8da6903b072ccff10700a8d1d9097cd3c2f8e57",
      "title": "Enhancing CNF performance for 5G core network using SR-IOV in Kubernetes",
      "abstract": "Cloud-native containerization is replacing Virtual Machine (VM)
      as the preferred method of application deployment. However, the network requirements
      involved, including high performance and low latency, prove to be a barrier
      to the deployment of fifth-generation (5G) telecommunication applications. Cloud-native
      Function (CNF) enables network functionalities to run in containers instead
      of on traditional bare-metal servers. The success of integrating Single Root
      Input/Output Virtualization (SR-IOV) into Network Function Virtualization (NFV)
      on VMs has motivated our research into using SR-IOV in CNF, in order to address
      the strict network demands. When applied to the Charging Function (CHF) in the
      Cloud-native 5G architecture, our solution resulted in a 30% increase in network
      throughput, compared to the Kubernetes deployment using Calico. Therefore, SR-IOV
      and CPU-Pinning have shown potential in optimizing the performance of Cloud-native
      container-based applications.", "venue": "International Conference on Advanced
      Communication Technology", "year": 2022, "referenceCount": 21, "citationCount":
      5, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-02-13", "journal":
      {"name": "2022 24th International Conference on Advanced Communication Technology
      (ICACT)", "pages": "501-506"}, "citationStyles": {"bibtex": "@Article{Nguyen2022EnhancingCP,\n
      author = {Dinh Tam Nguyen and Ngoc Lam Dao and Van Thuyet Tran and Khac Thuan
      Lang and Thanh-Tu Pham and Phi Hung Le Nguyen and Cong Dan Pham and Tuan Anh
      Pham and D. Nguyen and Huu Thanh Nguyen},\n booktitle = {International Conference
      on Advanced Communication Technology},\n journal = {2022 24th International
      Conference on Advanced Communication Technology (ICACT)},\n pages = {501-506},\n
      title = {Enhancing CNF performance for 5G core network using SR-IOV in Kubernetes},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2159323447", "name": "Dinh Tam
      Nguyen"}, {"authorId": "2152379970", "name": "Ngoc Lam Dao"}, {"authorId": "2159241525",
      "name": "Van Thuyet Tran"}, {"authorId": "2159241308", "name": "Khac Thuan Lang"},
      {"authorId": "2159269755", "name": "Thanh-Tu Pham"}, {"authorId": "49535916",
      "name": "Phi Hung Le Nguyen"}, {"authorId": "2125353185", "name": "Cong Dan
      Pham"}, {"authorId": "2067956056", "name": "Tuan Anh Pham"}, {"authorId": "1447437245",
      "name": "D. Nguyen"}, {"authorId": "2159316418", "name": "Huu Thanh Nguyen"}]},
      {"paperId": "dc5677bb7fa9590124cf8e21481ebd2460593ed9", "externalIds": {"DBLP":
      "conf/netsoft/WangBHLS22", "DOI": "10.1109/NetSoft54395.2022.9844086", "CorpusId":
      251322646}, "corpusId": 251322646, "publicationVenue": {"id": "8d051ed1-e691-49d8-8a57-d7b4a76c4352",
      "name": "IEEE Conference on Network Softwarization", "type": "conference", "alternate_names":
      ["IEEE Conf Netw Softwarization", "NetSoft"]}, "url": "https://www.semanticscholar.org/paper/dc5677bb7fa9590124cf8e21481ebd2460593ed9",
      "title": "A Web-based Orchestrator for Dynamic Service Function Chaining Development
      with Kubernetes", "abstract": "The research community has been moving attention
      from Virtual Network Function (VNF) to Cloud-native Network Function (CNF) since
      cloudification has brought the Network Function Virtualization (NFV) to an advanced
      level. It has already been demonstrated that cloud-native technology brings
      high flexibility and efficiency to large-scale network service deployment compared
      to the traditional VNF with Virtual Machines (VMs). However, more work is needed
      to provide a flexible and reliable Service Function Chaining (SFC) development
      solution in a cloud-native environment. This paper proposes a web-based orchestrator
      system to deploy an SFC use case consisting of multiple CNFs in a multi-node
      Kubernetes cluster using Network Service Mesh (NSM). We demonstrate a cloud-native
      SFC framework that allows users to dynamically create container-based SFC rather
      than the traditional VMs with NFV/SDN controller approach. Further, additional
      work is presented with the support of an open-source monitoring system, Prometheus,
      to validate the SFC path.", "venue": "IEEE Conference on Network Softwarization",
      "year": 2022, "referenceCount": 5, "citationCount": 4, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-06-27", "journal": {"name": "2022 IEEE 8th International
      Conference on Network Softwarization (NetSoft)", "pages": "234-236"}, "citationStyles":
      {"bibtex": "@Article{Wang2022AWO,\n author = {Ziqiang Wang and Abdullah Bittar
      and Changcheng Huang and Chung-Horng Lung and Gauravdeep Shami},\n booktitle
      = {IEEE Conference on Network Softwarization},\n journal = {2022 IEEE 8th International
      Conference on Network Softwarization (NetSoft)},\n pages = {234-236},\n title
      = {A Web-based Orchestrator for Dynamic Service Function Chaining Development
      with Kubernetes},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2117427968",
      "name": "Ziqiang Wang"}, {"authorId": "2174746081", "name": "Abdullah Bittar"},
      {"authorId": "1740408", "name": "Changcheng Huang"}, {"authorId": "144700090",
      "name": "Chung-Horng Lung"}, {"authorId": "1491623786", "name": "Gauravdeep
      Shami"}]}, {"paperId": "c2f4cc1ecc562655131715ccd599d2125633b9ae", "externalIds":
      {"DBLP": "journals/concurrency/HarichaneMB22", "DOI": "10.1002/cpe.7108", "CorpusId":
      249661964}, "corpusId": 249661964, "publicationVenue": {"id": "312ca99c-9149-490d-813e-c60d5e949f65",
      "name": "Concurrency and Computation", "type": "journal", "alternate_names":
      ["Concurr Comput Pract Exp", "Concurrency and Computation: Practice and Experience",
      "Concurr Comput"], "issn": "1532-0626", "url": "http://www3.interscience.wiley.com/cgi-bin/jhome/77004395?CRETRY=1&SRETRY=0",
      "alternate_urls": ["http://www3.interscience.wiley.com/cgi-bin/jtoc?ID=77004395",
      "http://onlinelibrary.wiley.com/journal/10.1002/(ISSN)1532-0634"]}, "url": "https://www.semanticscholar.org/paper/c2f4cc1ecc562655131715ccd599d2125633b9ae",
      "title": "KubeSC\u2010RTP: Smart scheduler for Kubernetes platform on CPU\u2010GPU
      heterogeneous systems", "abstract": "Heterogeneous systems composed of multiple
      CPUs and GPUs are progressively attractive as platforms for high performance
      computing because of their higher performance. Especially with the use of containers
      which are rapidly replacing virtual machines as the compute instance of choice
      in cloud\u2010based deployments such in Kubernetes clusters. The task scheduling
      in a heterogeneous environment became one of the most important issues considered
      by the platform providers. The ability to choose the appropriate device, CPU
      or GPU, has a direct impact on the performance of a particular system. It reduces
      total processing time and increases customer satisfaction. In heterogeneous
      systems, optimizing resource consumption is a critical aspect for cloud service
      providers. Adequate scheduling of an application implies optimization of its
      execution time, which results in resource consumption for the service provider.
      The development of algorithms for scheduling applications in heterogeneous computing
      systems has received a significant amount of attention in recent years. A variety
      of efforts are dedicated to the design of such scheduling algorithms. This article
      is one of those efforts. We present in this work, KubeSC\u2010RTP, a scheduler
      for Kubernetes environment using machine learning based on runtime prediction
      of the applications in order to better select the appropriate device, CPU or
      GPU.", "venue": "Concurrency and Computation", "year": 2022, "referenceCount":
      28, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-06-12", "journal":
      {"name": "Concurrency and Computation: Practice and Experience", "volume": "34"},
      "citationStyles": {"bibtex": "@Article{Harichane2022KubeSCRTPSS,\n author =
      {Ishak Harichane and Sid Ahmed Makhlouf and Ghalem Belalem},\n booktitle = {Concurrency
      and Computation},\n journal = {Concurrency and Computation: Practice and Experience},\n
      title = {KubeSC\u2010RTP: Smart scheduler for Kubernetes platform on CPU\u2010GPU
      heterogeneous systems},\n volume = {34},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "2022819015", "name": "Ishak Harichane"}, {"authorId": "2218228",
      "name": "Sid Ahmed Makhlouf"}, {"authorId": "1759493", "name": "Ghalem Belalem"}]},
      {"paperId": "74abafe4960d6e6c594ff8f3b1bfdfcfc24a7576", "externalIds": {"DBLP":
      "journals/grid/DoganiKS22", "DOI": "10.1007/s10723-022-09634-x", "CorpusId":
      254100417}, "corpusId": 254100417, "publicationVenue": {"id": "993eb4fa-4cb7-4aed-980e-20e5298efad0",
      "name": "Journal of Grid Computing", "type": "journal", "alternate_names": ["J
      Grid Comput"], "issn": "1570-7873", "url": "https://www.springer.com/journal/10723",
      "alternate_urls": ["https://link.springer.com/journal/10723", "http://www.springer.com/journal/10723"]},
      "url": "https://www.semanticscholar.org/paper/74abafe4960d6e6c594ff8f3b1bfdfcfc24a7576",
      "title": "K-AGRUED: A Container Autoscaling Technique for Cloud-based Web Applications
      in Kubernetes Using Attention-based GRU Encoder-Decoder", "abstract": null,
      "venue": "Journal of Grid Computing", "year": 2022, "referenceCount": 67, "citationCount":
      9, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2022-12-01", "journal": {"name": "Journal of Grid Computing", "volume": "20"},
      "citationStyles": {"bibtex": "@Article{Dogani2022KAGRUEDAC,\n author = {Javad
      Dogani and F. Khunjush and Mehdi Seydali},\n booktitle = {Journal of Grid Computing},\n
      journal = {Journal of Grid Computing},\n title = {K-AGRUED: A Container Autoscaling
      Technique for Cloud-based Web Applications in Kubernetes Using Attention-based
      GRU Encoder-Decoder},\n volume = {20},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2146802563", "name": "Javad Dogani"}, {"authorId": "2879154", "name": "F. Khunjush"},
      {"authorId": "2180939523", "name": "Mehdi Seydali"}]}, {"paperId": "c89365f28a429f5e848a9d883fbac272d32fd577",
      "externalIds": {"DBLP": "conf/iecon/SeisaSN22", "ArXiv": "2212.05966", "DOI":
      "10.1109/IECON49645.2022.9968933", "CorpusId": 254458843}, "corpusId": 254458843,
      "publicationVenue": {"id": "625842ea-b2ac-4832-aa41-6bd142cfc9d9", "name": "Annual
      Conference of the IEEE Industrial Electronics Society", "type": "conference",
      "alternate_names": ["Conference of the Industrial Electronics Society", "IECON",
      "Conf Ind Electron Soc", "Annu Conf IEEE Ind Electron Soc"], "issn": "2162-4704",
      "alternate_issns": ["2379-9633"], "url": "http://ieeexplore.ieee.org/xpl/conhome.jsp?punumber=1000352"},
      "url": "https://www.semanticscholar.org/paper/c89365f28a429f5e848a9d883fbac272d32fd577",
      "title": "Comparison between Docker and Kubernetes based Edge Architectures
      for Enabling Remote Model Predictive Control for Aerial Robots", "abstract":
      "Edge computing is becoming more and more popular among researchers who seek
      to take advantage of the edge resources and the minimal time delays, in order
      to run their robotic applications more efficiently. Recently, many edge architectures
      have been proposed, each of them having their advantages and disadvantages,
      depending on each application. In this work, we present two different edge architectures
      for controlling the trajectory of an Unmanned Aerial Vehicle (UAV). The first
      architecture is based on docker containers and the second one is based on kubernetes,
      while the main framework for operating the robot is the Robotic Operating System
      (ROS). The efficiency of the overall proposed scheme is being evaluated through
      extended simulations for comparing the two architectures and the overall results
      obtained.", "venue": "Annual Conference of the IEEE Industrial Electronics Society",
      "year": 2022, "referenceCount": 12, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2212.05966",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Engineering",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-10-17",
      "journal": {"name": "IECON 2022 \u2013 48th Annual Conference of the IEEE Industrial
      Electronics Society", "pages": "1-6"}, "citationStyles": {"bibtex": "@Article{Seisa2022ComparisonBD,\n
      author = {Achilleas Santi Seisa and S. Satpute and G. Nikolakopoulos},\n booktitle
      = {Annual Conference of the IEEE Industrial Electronics Society},\n journal
      = {IECON 2022 \u2013 48th Annual Conference of the IEEE Industrial Electronics
      Society},\n pages = {1-6},\n title = {Comparison between Docker and Kubernetes
      based Edge Architectures for Enabling Remote Model Predictive Control for Aerial
      Robots},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2179236924", "name":
      "Achilleas Santi Seisa"}, {"authorId": "1931832935", "name": "S. Satpute"},
      {"authorId": "1912308", "name": "G. Nikolakopoulos"}]}, {"paperId": "3e0358b64c1d9a7c3b6ff41c52e6e4b95b18c457",
      "externalIds": {"DBLP": "conf/globecom/MargetisVADPTCH22", "DOI": "10.1109/GCWkshps56602.2022.10008690",
      "CorpusId": 255778180}, "corpusId": 255778180, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/3e0358b64c1d9a7c3b6ff41c52e6e4b95b18c457",
      "title": "Validation of NFV management and orchestration on Kubernetes-based
      5G testbed environment", "abstract": "Prior work has shown that the integration
      of Kubernetes orchestration tools with present Network Functions Virtualization
      infrastructures toward Cloud-based 5G deployments may be the key to unlock beyond
      5G communications. However, before we reach that point, further work is required
      to define, implement and validate practical Cloud-native augmentations that
      will enable virtual network functions management and orchestration via Kubernetes
      architectures in existing 5G platforms. In this paper, we present our approach
      in the context of the 5GEPICENTRE project, drawing from ETSI-compliant reference
      implementation frames in order to enhance an experimental 5G testbed with capacity
      to host containerized network applications. We study how the proposal can be
      used to validate key performance indicators on high-demanding 5G applications,
      such as those characteristic of the Public Protection and Disaster Relief vertical.",
      "venue": "2022 IEEE Globecom Workshops (GC Wkshps)", "year": 2022, "referenceCount":
      26, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-12-04", "journal":
      {"name": "2022 IEEE Globecom Workshops (GC Wkshps)", "pages": "844-849"}, "citationStyles":
      {"bibtex": "@Article{Margetis2022ValidationON,\n author = {George Margetis and
      Barbara Valera-Muros and K. C. Apostolakis and Almudena D\u00edaz Zayas and
      L. Panizo and Pedro R. Tomas and Lu\u00eds Cordeiro and Joao Henriques and C.
      Stephanidis},\n booktitle = {2022 IEEE Globecom Workshops (GC Wkshps)},\n journal
      = {2022 IEEE Globecom Workshops (GC Wkshps)},\n pages = {844-849},\n title =
      {Validation of NFV management and orchestration on Kubernetes-based 5G testbed
      environment},\n year = {2022}\n}\n"}, "authors": [{"authorId": "1748008", "name":
      "George Margetis"}, {"authorId": "1416609620", "name": "Barbara Valera-Muros"},
      {"authorId": "2168105", "name": "K. C. Apostolakis"}, {"authorId": "82064010",
      "name": "Almudena D\u00edaz Zayas"}, {"authorId": "3332999", "name": "L. Panizo"},
      {"authorId": "2200548190", "name": "Pedro R. Tomas"}, {"authorId": "144942815",
      "name": "Lu\u00eds Cordeiro"}, {"authorId": "2065428448", "name": "Joao Henriques"},
      {"authorId": "1685903", "name": "C. Stephanidis"}]}, {"paperId": "3985916d3a7d2a941af161e8734570bc608612b9",
      "externalIds": {"DBLP": "conf/aiipcc/HuoLXL22", "DOI": "10.1109/AIIPCC57291.2022.00051",
      "CorpusId": 257786695}, "corpusId": 257786695, "publicationVenue": {"id": "2dacb8db-ce48-46fd-bd2a-fe07bf87cb30",
      "name": "International Conferences on Artificial Intelligence, Information Processing
      and Cloud Computing", "type": "conference", "alternate_names": ["AIIPCC", "Int
      Conf Artif Intell Inf Process Cloud Comput"]}, "url": "https://www.semanticscholar.org/paper/3985916d3a7d2a941af161e8734570bc608612b9",
      "title": "Horizontal Pod Autoscaling based on Kubernetes with Fast Response
      and Slow Shrinkage", "abstract": "Autoscaling is an important part of Kubernetes.
      Horizontal Pod Autoscaling (HPA) schedules cluster resources according to the
      service load status to ensure that services are still running normally when
      the load increases or decreases. But the default HPA is slow and inflexible.
      In scenarios with large load changes, it will scale at a high frequency, resulting
      in a waste of cluster resources and reducing the robustness of the cluster.
      This paper proposes a Fast-response and Slow-shrinkage algorithm. By setting
      the expansion rate, tolerance, window time, etc., the flexibility of scaling
      is increased. When facing the pressure of a sudden increase in traffic, the
      rapid expansion can be optimized in minutes. The algorithm also adopts a cautious
      shrinking strategy to reduce and prevent failures caused by secondary access
      peaks.", "venue": "International Conferences on Artificial Intelligence, Information
      Processing and Cloud Computing", "year": 2022, "referenceCount": 11, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2022-08-01", "journal": {"name": "2022 International Conference on Artificial
      Intelligence, Information Processing and Cloud Computing (AIIPCC)", "pages":
      "203-206"}, "citationStyles": {"bibtex": "@Article{Huo2022HorizontalPA,\n author
      = {Qizheng Huo and Shaonan Li and Yongqiang Xie and Zhongbo Li},\n booktitle
      = {International Conferences on Artificial Intelligence, Information Processing
      and Cloud Computing},\n journal = {2022 International Conference on Artificial
      Intelligence, Information Processing and Cloud Computing (AIIPCC)},\n pages
      = {203-206},\n title = {Horizontal Pod Autoscaling based on Kubernetes with
      Fast Response and Slow Shrinkage},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2169680418", "name": "Qizheng Huo"}, {"authorId": "2210987007", "name": "Shaonan
      Li"}, {"authorId": "49290936", "name": "Yongqiang Xie"}, {"authorId": "46947599",
      "name": "Zhongbo Li"}]}, {"paperId": "310524cfb26eac75daf1710207ed96bd0df0320a",
      "externalIds": {"DBLP": "conf/netsoft/KuranageNBFB22", "DOI": "10.1109/NetSoft54395.2022.9844056",
      "CorpusId": 251323194}, "corpusId": 251323194, "publicationVenue": {"id": "8d051ed1-e691-49d8-8a57-d7b4a76c4352",
      "name": "IEEE Conference on Network Softwarization", "type": "conference", "alternate_names":
      ["IEEE Conf Netw Softwarization", "NetSoft"]}, "url": "https://www.semanticscholar.org/paper/310524cfb26eac75daf1710207ed96bd0df0320a",
      "title": "Deep learning based resource forecasting for 5G core network scaling
      in Kubernetes environment", "abstract": "5G networks are moving towards cloudification
      which gives the telecom operators the flexibility to manage their networks efficiently
      and cost-effectively. Scaling network functions on demand is one of the advantages
      of using container-based deployment in cloud environments. With the continuously
      changing network traffic patterns due to the emerging new 5G use cases, there
      is a need for novel automated network resources management approach in cloud-native
      environments. Considering the scale and the complexity of the 5G network, managing
      resources is a challenge. To address this, we propose a deep learning-based
      resource usage forecasting approach that provides useful insights for decision-making
      in containerized Network Function (CNF) scaling for the Kubernetes environment.
      Kubernetes is a container orchestration tool that becoming popular among Telecom
      operators due to its simplicity. We implemented a testbed in the Kubernetes
      environment to generate a dataset closer to real-world data for deep learning
      model training and evaluated the best-performing model for resource usage forecasting.
      We benchmarked our approach against another deep learning-based resource usage
      forecasting approach which proved our method can provide a highly accurate forecast
      for further horizons.", "venue": "IEEE Conference on Network Softwarization",
      "year": 2022, "referenceCount": 8, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-06-27", "journal": {"name": "2022 IEEE 8th International
      Conference on Network Softwarization (NetSoft)", "pages": "139-144"}, "citationStyles":
      {"bibtex": "@Article{Kuranage2022DeepLB,\n author = {Menuka Perera Jayasuriya
      Kuranage and L. Nuaymi and A. Bouabdallah and Thomas Ferrandiz and P. Bertin},\n
      booktitle = {IEEE Conference on Network Softwarization},\n journal = {2022 IEEE
      8th International Conference on Network Softwarization (NetSoft)},\n pages =
      {139-144},\n title = {Deep learning based resource forecasting for 5G core network
      scaling in Kubernetes environment},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "1646864689", "name": "Menuka Perera Jayasuriya Kuranage"}, {"authorId": "2907264",
      "name": "L. Nuaymi"}, {"authorId": "2712903", "name": "A. Bouabdallah"}, {"authorId":
      "2208856", "name": "Thomas Ferrandiz"}, {"authorId": "40621697", "name": "P.
      Bertin"}]}, {"paperId": "64c07170aa613cd16a1ae0a8dd17cf9aa277f3ff", "externalIds":
      {"DBLP": "journals/fgcs/ShanXZZ23", "ArXiv": "2207.01222", "DOI": "10.48550/arXiv.2207.01222",
      "CorpusId": 250265020}, "corpusId": 250265020, "publicationVenue": {"id": "e3e1f91c-fe26-4f67-8d15-f7acd8abdf42",
      "name": "Future generations computer systems", "type": "journal", "alternate_names":
      ["Future gener comput syst", "Future Generation Computer Systems", "Future Gener
      Comput Syst"], "issn": "0167-739X", "url": "http://www.elsevier.com/wps/find/journaleditorialboard.cws_home/505611/editorialboard",
      "alternate_urls": ["https://www.journals.elsevier.com/future-generation-computer-systems",
      "http://www.sciencedirect.com/science/journal/0167739X"]}, "url": "https://www.semanticscholar.org/paper/64c07170aa613cd16a1ae0a8dd17cf9aa277f3ff",
      "title": "KubeAdaptor: A Docking Framework for Workflow Containerization on
      Kubernetes", "abstract": "As Kubernetes becomes the infrastructure of the cloud-native
      era, the integration of workflow systems with Kubernetes is gaining more and
      more popularity. To our knowledge, workflow systems employ scheduling algorithms
      that optimize task execution order of workflow to improve performance and execution
      efficiency. However, due to its inherent scheduling mechanism, Kubernetes does
      not execute containerized scheduling following the optimized task execution
      order of workflow amid migrating workflow systems to the Kubernetes platform.
      This inconsistency in task scheduling order seriously degrades the efficiency
      of workflow execution and brings numerous challenges to the containerized process
      of workflow systems on Kubernetes. In this paper, we propose a cloud-native
      workflow engine, also known as KubeAdaptor, a docking framework able to implement
      workflow containerization on Kubernetes, integrate workflow systems with Kubernetes,
      ensuring the consistency of task scheduling order. We introduce the design and
      architecture of the KubeAdaptor, elaborate on the functionality implementation
      and the event-trigger mechanism within the KubeAdaptor. Experimental results
      about four real-world workflows show that the KubeAdaptor ensures the consistency
      of the workflow systems and Kubernetes in the task scheduling order. Compared
      with the baseline Argo workflow engine, the KubeAdaptor achieves better performance
      in terms of the average execution time of task pod, average workflow lifecycle,
      and resource usage rate.", "venue": "Future generations computer systems", "year":
      2022, "referenceCount": 51, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2207.01222",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-07-04", "journal":
      {"name": "Future Gener. Comput. Syst.", "pages": "584-599", "volume": "148"},
      "citationStyles": {"bibtex": "@Article{Shan2022KubeAdaptorAD,\n author = {Chenggang
      Shan and Guan Wang and Yuanqing Xia and Yufeng Zhan and Jinhui Zhang},\n booktitle
      = {Future generations computer systems},\n journal = {Future Gener. Comput.
      Syst.},\n pages = {584-599},\n title = {KubeAdaptor: A Docking Framework for
      Workflow Containerization on Kubernetes},\n volume = {148},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2053160233", "name": "Chenggang Shan"}, {"authorId":
      "2152580737", "name": "Guan Wang"}, {"authorId": "2152311358", "name": "Yuanqing
      Xia"}, {"authorId": "3311244", "name": "Yufeng Zhan"}, {"authorId": "1583807259",
      "name": "Jinhui Zhang"}]}, {"paperId": "f6d82668467419812c8ce9d5e9d38c567bdbce94",
      "externalIds": {"DBLP": "conf/ispw/PeckaOV22", "DOI": "10.1145/3529320.3529325",
      "CorpusId": 248835886}, "corpusId": 248835886, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/f6d82668467419812c8ce9d5e9d38c567bdbce94",
      "title": "Privilege Escalation Attack Scenarios on the DevOps Pipeline Within
      a Kubernetes Environment", "abstract": "Companies are misled into thinking they
      solve their security issues by using tooling that is advertised as aligning
      with DevSecOps principles. This paper aims to answer the question: Could the
      misuse of the DevOps pipeline subject applications to malicious behavior? To
      answer the question, we designed a typical DevOps pipeline utilizing Kubernetes
      (K8s) as a case study environment and analyzed the applicable threats. Then,
      we developed four attack scenarios against the case study environment: maliciously
      abusing the user\u2019s privilege of deploying containers within the K8s cluster,
      abusing the Jenkins instance to modify files during the continuous integration,
      delivery, and deployment systems (CI/CD) build phase, modifying the K8s DNS
      layer to expose an internal IP to external traffic, and elevating privileges
      from an account with create, read, update, and delete (CRUD) privileges to root
      privileges. The attacks answer the research question positively: companies should
      design and use a secure DevOps pipeline and not expect that utilizing software
      \u201dadvertised as aligning\u201d with DevSecOps principles alone is sufficient
      to deliver secure software.", "venue": "ICSSP/ICGSE", "year": 2022, "referenceCount":
      26, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3529320.3529325",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Book", "JournalArticle"], "publicationDate": "2022-05-19",
      "journal": {"name": "Proceedings of the International Conference on Software
      and System Processes and International Conference on Global Software Engineering"},
      "citationStyles": {"bibtex": "@Book{Pecka2022PrivilegeEA,\n author = {Nicholas
      Pecka and L. Othmane and A. Valani},\n booktitle = {ICSSP/ICGSE},\n journal
      = {Proceedings of the International Conference on Software and System Processes
      and International Conference on Global Software Engineering},\n title = {Privilege
      Escalation Attack Scenarios on the DevOps Pipeline Within a Kubernetes Environment},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2151791944", "name": "Nicholas
      Pecka"}, {"authorId": "9111351", "name": "L. Othmane"}, {"authorId": "52025876",
      "name": "A. Valani"}]}, {"paperId": "94aec2b71eddd2d420a7e9ef6ab498c2ec210501",
      "externalIds": {"DBLP": "journals/ccfthpc/WuCLXB22", "DOI": "10.1007/s42514-022-00096-x",
      "CorpusId": 248009550}, "corpusId": 248009550, "publicationVenue": {"id": "24061e5a-667f-47e0-8af6-00edcfe20c88",
      "name": "CCF Transactions on High Performance Computing", "type": "journal",
      "alternate_names": ["CCF Trans High Perform Comput"], "issn": "2524-4922", "url":
      "https://link.springer.com/journal/volumesAndIssues/42514"}, "url": "https://www.semanticscholar.org/paper/94aec2b71eddd2d420a7e9ef6ab498c2ec210501",
      "title": "Adaptive processing rate based container provisioning for meshed Micro-services
      in Kubernetes Clouds", "abstract": null, "venue": "CCF Transactions on High
      Performance Computing", "year": 2022, "referenceCount": 41, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2022-04-06", "journal": {"name": "CCF
      Transactions on High Performance Computing", "pages": "165 - 181", "volume":
      "4"}, "citationStyles": {"bibtex": "@Article{Wu2022AdaptivePR,\n author = {Hang
      Wu and Zhicheng Cai and Yamin Lei and Jian Xu and R. Buyya},\n booktitle = {CCF
      Transactions on High Performance Computing},\n journal = {CCF Transactions on
      High Performance Computing},\n pages = {165 - 181},\n title = {Adaptive processing
      rate based container provisioning for meshed Micro-services in Kubernetes Clouds},\n
      volume = {4},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2112252722",
      "name": "Hang Wu"}, {"authorId": "2633759", "name": "Zhicheng Cai"}, {"authorId":
      "2040590546", "name": "Yamin Lei"}, {"authorId": "2110980190", "name": "Jian
      Xu"}, {"authorId": "1709598", "name": "R. Buyya"}]}, {"paperId": "2eeddccbf3028c26a983a42335d8b78dd87d14c0",
      "externalIds": {"DOI": "10.1109/MoNeTec55448.2022.9960769", "CorpusId": 254100053},
      "corpusId": 254100053, "publicationVenue": {"id": "fd3e045b-a11e-468c-a1ba-1f222f6f50b8",
      "name": "Modern Network technologies", "type": "conference", "alternate_names":
      ["MoNeTec", "Mod Netw technol"]}, "url": "https://www.semanticscholar.org/paper/2eeddccbf3028c26a983a42335d8b78dd87d14c0",
      "title": "Development of Docker and Kubernetes Orchestration Platforms for Industrial
      Internet of Things Service Migration", "abstract": "This paper has considered
      an architecture for building the Industrial Internet of Things (IIoT) using
      edge computing technology. The levels of this architecture and their respective
      roles are described, as are the benefits of implementing Mobile Edge Computing
      (MEC) in IIoT, the model of the considered smart factory, and the case in which
      the application must be migrated from the cloud to the edge device. As part
      of the explanation for the selection of technologies used in coordinating migration
      for a network with edge computing, the concepts of designing software based
      on a microservice architecture were considered, as well as virtualization and
      containerization technologies. The Docker containerization technology and the
      Kubernetes orchestration system are explored in depth to facilitate the migration
      of cloud-based applications to the peripheral.", "venue": "Modern Network technologies",
      "year": 2022, "referenceCount": 16, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2022-10-27", "journal": {"name": "2022 International Conference on Modern Network
      Technologies (MoNeTec)", "pages": "1-6"}, "citationStyles": {"bibtex": "@Conference{Muthanna2022DevelopmentOD,\n
      author = {Mohammed Saleh Ali Muthanna and Alexey Tselykh},\n booktitle = {Modern
      Network technologies},\n journal = {2022 International Conference on Modern
      Network Technologies (MoNeTec)},\n pages = {1-6},\n title = {Development of
      Docker and Kubernetes Orchestration Platforms for Industrial Internet of Things
      Service Migration},\n year = {2022}\n}\n"}, "authors": [{"authorId": "30862878",
      "name": "Mohammed Saleh Ali Muthanna"}, {"authorId": "2141943557", "name": "Alexey
      Tselykh"}]}, {"paperId": "ffa009011e1ac56203c5e33f7850c447ae6c7e89", "externalIds":
      {"ArXiv": "2301.13624", "DBLP": "journals/corr/abs-2301-13624", "DOI": "10.1109/CSCC55931.2022.00056",
      "CorpusId": 256220529}, "corpusId": 256220529, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/ffa009011e1ac56203c5e33f7850c447ae6c7e89",
      "title": "A Kubernetes-Based Edge Architecture for Controlling the Trajectory
      of a Resource-Constrained Aerial Robot by Enabling Model Predictive Control",
      "abstract": "In recent years, cloud and edge architectures have gained tremendous
      focus for offloading computationally heavy applications. From machine learning
      and Internet of Thing (IOT) to industrial procedures and robotics, cloud computing
      have been used extensively for data processing and storage purposes, thanks
      to its \u201cinfinite\u201d resources. On the other hand, cloud computing is
      characterized by long time delays due to the long distance between the cloud
      servers and the machine requesting the resources. In contrast, edge computing
      provides almost real-time services since edge servers are located significantly
      closer to the source of data. This capability sets edge computing as an ideal
      option for real-time applications, like high level control, for resource-constrained
      platforms. In order to utilized the edge resources, several technologies, with
      basic ones as containers and orchestrators like kubernetes, have been developed
      to provide an environment with many different features, based on each application''s
      requirements. In this context, this works presents the implementation and evaluation
      of a novel edge architecture based on kubernetes orchestration for controlling
      the trajectory of a resource-constrained Unmanned Aerial Vehicle (UAV) by enabling
      Model Predictive Control (MPC).", "venue": "2022 26th International Conference
      on Circuits, Systems, Communications and Computers (CSCC)", "year": 2022, "referenceCount":
      12, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/2301.13624", "status": "GREEN"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Engineering", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-07-01", "journal":
      {"name": "2022 26th International Conference on Circuits, Systems, Communications
      and Computers (CSCC)", "pages": "290-295"}, "citationStyles": {"bibtex": "@Article{Seisa2022AKE,\n
      author = {Achilleas Santi Seisa and S. Satpute and G. Nikolakopoulos},\n booktitle
      = {2022 26th International Conference on Circuits, Systems, Communications and
      Computers (CSCC)},\n journal = {2022 26th International Conference on Circuits,
      Systems, Communications and Computers (CSCC)},\n pages = {290-295},\n title
      = {A Kubernetes-Based Edge Architecture for Controlling the Trajectory of a
      Resource-Constrained Aerial Robot by Enabling Model Predictive Control},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "2179236924", "name": "Achilleas Santi
      Seisa"}, {"authorId": "1931832935", "name": "S. Satpute"}, {"authorId": "1912308",
      "name": "G. Nikolakopoulos"}]}, {"paperId": "497f8953bf150bd956e4431be0a1e95567fdf704",
      "externalIds": {"DOI": "10.1109/ICSTSN53084.2022.9761317", "CorpusId": 248407300},
      "corpusId": 248407300, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/497f8953bf150bd956e4431be0a1e95567fdf704",
      "title": "Enhanced Load Balancing in Kubernetes Cluster By Minikube", "abstract":
      "Kubernetes is a container orchestration tool for configuring and managing containerized
      applications in different deployment environments. The orchestration means that
      defined workflow procedure that leads to running of applications in various
      isolated environments. This containerizing environment leads to an OS level
      virtualization and from that we can run multiple services on single host. This
      Kubernetes helps to scheduling and managing clusters. that act as an ecosystem
      for managing cluster of containers. This Kubernetes environment have a manual
      load balancing for providing high availability.so efforts should be taken to
      manage load balancing of cluster and monitoring of each deployment.", "venue":
      "2022 International Conference on Smart Technologies and Systems for Next Generation
      Computing (ICSTSN)", "year": 2022, "referenceCount": 0, "citationCount": 3,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["Conference"], "publicationDate": "2022-03-25", "journal":
      {"name": "2022 International Conference on Smart Technologies and Systems for
      Next Generation Computing (ICSTSN)", "pages": "1-5"}, "citationStyles": {"bibtex":
      "@Conference{Khalel2022EnhancedLB,\n author = {M. M. Khalel and M. Arul Pugazhendhi
      and G. Raj},\n booktitle = {2022 International Conference on Smart Technologies
      and Systems for Next Generation Computing (ICSTSN)},\n journal = {2022 International
      Conference on Smart Technologies and Systems for Next Generation Computing (ICSTSN)},\n
      pages = {1-5},\n title = {Enhanced Load Balancing in Kubernetes Cluster By Minikube},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2163627915", "name": "M. M.
      Khalel"}, {"authorId": "2163139081", "name": "M. Arul Pugazhendhi"}, {"authorId":
      "2006763874", "name": "G. Raj"}]}, {"paperId": "cc6fe047d5cba50852b1a09beb8b3ef851d39940",
      "externalIds": {"DOI": "10.1109/CONECCT55679.2022.9865718", "CorpusId": 251957899},
      "corpusId": 251957899, "publicationVenue": {"id": "5513d05f-d4ea-4f12-a6b9-3c91cb4c1b6f",
      "name": "IEEE International Conference on Electronics, Computing and Communication
      Technologies", "type": "conference", "alternate_names": ["CONECCT", "IEEE Int
      Conf Electron Comput Commun Technol"]}, "url": "https://www.semanticscholar.org/paper/cc6fe047d5cba50852b1a09beb8b3ef851d39940",
      "title": "Performance Study of Kubernetes Cluster Deployed on Openstack,VMs
      and BareMetal", "abstract": "Kubernetes is an OpenSource Orchestration tool
      used for deploying and managing containerized applications at scale. Kubernetes
      easily manages the cluster with a master and worker nodes in which the Pods
      are been hosted. Nowadays many Cloud Infrastructure Providers like AWS, GoogleCloud,
      and Microsoft Azure understand the importance of Kubernetes and have added these
      services to their products. Openstack is a novel and highly manageable OpenSource
      cloud IaaS platform where the components manage huge pools of compute, storage,
      and networking resources. In this experimental work we studied and compared
      the local deployment of Kubernetes Cluster using minikube with the VM deployment
      and OpenStack deployment. A demo application with microservices Architecture
      has been taken for this study in which we compare the CPU and Memory Usage on
      the deployment of the cluster in OpenStack, VMs and BareMetal. The preliminary
      results show that the bare-metal deployment outperforms the other deployments
      in both Computing and Memory intensive applications.", "venue": "IEEE International
      Conference on Electronics, Computing and Communication Technologies", "year":
      2022, "referenceCount": 12, "citationCount": 3, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
      "2022-07-08", "journal": {"name": "2022 IEEE International Conference on Electronics,
      Computing and Communication Technologies (CONECCT)", "pages": "1-5"}, "citationStyles":
      {"bibtex": "@Conference{Sai2022PerformanceSO,\n author = {Yeddula Sai and Dhanush
      Reddy and N. Ganesan and Padumati Saikiran and Reddy and Prof. B. Thangaraju},\n
      booktitle = {IEEE International Conference on Electronics, Computing and Communication
      Technologies},\n journal = {2022 IEEE International Conference on Electronics,
      Computing and Communication Technologies (CONECCT)},\n pages = {1-5},\n title
      = {Performance Study of Kubernetes Cluster Deployed on Openstack,VMs and BareMetal},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2286080276", "name": "Yeddula
      Sai"}, {"authorId": "2286186258", "name": "Dhanush Reddy"}, {"authorId": "1645077715",
      "name": "N. Ganesan"}, {"authorId": "2286082173", "name": "Padumati Saikiran"},
      {"authorId": "2286073988", "name": "Reddy"}, {"authorId": "2248801562", "name":
      "Prof. B. Thangaraju"}]}, {"paperId": "ca890df59bb580d62abe1eb487d643b35654861d",
      "externalIds": {"DBLP": "conf/cits/KarypiadisNMMV22", "DOI": "10.1109/cits55221.2022.9832990",
      "CorpusId": 250966319}, "corpusId": 250966319, "publicationVenue": {"id": "ea10882c-32ca-4793-aaab-ea15c0a0c73a",
      "name": "International Conference on Computer, Information and Telecommunication
      Systems", "type": "conference", "alternate_names": ["Int Conf Comput Inf Telecommun
      Syst", "CITS"]}, "url": "https://www.semanticscholar.org/paper/ca890df59bb580d62abe1eb487d643b35654861d",
      "title": "SCAL-E: An Auto Scaling Agent for Optimum Big Data Load Balancing
      in Kubernetes Environments", "abstract": "During the past years, the issue of
      effectively balancing incoming big data streams has been under serious research.
      It still allows for new solutions, even if load balancing is already being addressed
      by multiple frameworks. This paper proposes a smart agent, named \u201cSCAL-E\u201c
      that achieves balancing of big data loads and lives within the Kubernetes Environment.
      SCAL-E takes advantage of MongoDB\u2019s scaling, replicating & sharding capabilities
      and decides when to increase or decrease its repository\u2019s sub-components,
      based on the incoming load. This way, SCAL-E assures of proper resource allocation
      and gives efficiency to the jobs of big data storing & forwarding.", "venue":
      "International Conference on Computer, Information and Telecommunication Systems",
      "year": 2022, "referenceCount": 6, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2022-07-13", "journal":
      {"name": "2022 International Conference on Computer, Information and Telecommunication
      Systems (CITS)", "pages": "1-5"}, "citationStyles": {"bibtex": "@Article{Karypiadis2022SCALEAA,\n
      author = {Efstratios Karypiadis and Anastasios Nikolakopoulos and Achilleas
      Marinakis and Vrettos Moulos and T. Varvarigou},\n booktitle = {International
      Conference on Computer, Information and Telecommunication Systems},\n journal
      = {2022 International Conference on Computer, Information and Telecommunication
      Systems (CITS)},\n pages = {1-5},\n title = {SCAL-E: An Auto Scaling Agent for
      Optimum Big Data Load Balancing in Kubernetes Environments},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2178762003", "name": "Efstratios Karypiadis"}, {"authorId":
      "1726712660", "name": "Anastasios Nikolakopoulos"}, {"authorId": "35066141",
      "name": "Achilleas Marinakis"}, {"authorId": "2339157", "name": "Vrettos Moulos"},
      {"authorId": "145122221", "name": "T. Varvarigou"}]}, {"paperId": "e784559b1a5a5de94db0eca69f10a378a627b170",
      "externalIds": {"DBLP": "conf/wcre/ReileCHJHG22", "ArXiv": "2207.06811", "DOI":
      "10.48550/arXiv.2207.06811", "CorpusId": 250526427}, "corpusId": 250526427,
      "publicationVenue": {"id": "d8655d54-1311-417a-91f7-c5c6daf8fba2", "name": "IEEE
      International Conference on Software Analysis, Evolution, and Reengineering",
      "type": "conference", "alternate_names": ["IEEE Int Conf Softw Anal Evol Reengineering",
      "SANER"], "url": "http://www.informatik.uni-stuttgart.de/ifi/ps/reengineering/"},
      "url": "https://www.semanticscholar.org/paper/e784559b1a5a5de94db0eca69f10a378a627b170",
      "title": "Bunk8s: Enabling Easy Integration Testing of Microservices in Kubernetes",
      "abstract": "Microservice architecture is the common choice for cloud applications
      these days since each individual microservice can be independently modified,
      replaced, and scaled. However, the complexity of microservice applications requires
      automated testing with a focus on the interactions between the services. While
      this is achievable with end-to-end tests, they are error-prone, brittle, expensive
      to write, time-consuming to run, and require the entire application to be deployed.
      Integration tests are an alternative to end-to-end tests since they have a smaller
      test scope and require the deployment of a significantly fewer number of services.
      The de-facto standard for deploying microservice applications in the cloud is
      containers with Kubernetes being the most widely used container orchestration
      platform. To support the integration testing of microservices in Kubernetes,
      several tools such as Octopus, Istio, and Jenkins exist. However, each of these
      tools either lack crucial functionality or lead to a substantial increase in
      the complexity and growth of the tool landscape when introduced into a project.
      To this end, we present Bunk8s, a tool for integration testing of microservice
      applications in Kubernetes that overcomes the limitations of these existing
      tools. Bunk8s is independent of the test framework used for writing integration
      tests, independent of the used CI/CD infrastructure, and supports test result
      publishing. A video demonstrating the functioning of our tool is available from
      https://www.youtube.com/watch?v=e8wbS25O4Bo.", "venue": "IEEE International
      Conference on Software Analysis, Evolution, and Reengineering", "year": 2022,
      "referenceCount": 13, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "http://arxiv.org/pdf/2207.06811", "status":
      "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-03-01",
      "journal": {"name": "2022 IEEE International Conference on Software Analysis,
      Evolution and Reengineering (SANER)", "pages": "459-463"}, "citationStyles":
      {"bibtex": "@Article{Reile2022Bunk8sEE,\n author = {Christoph Reile and Mohak
      Chadha and Valentin Hauner and Anshul Jindal and Benjamin Hofmann and M. Gerndt},\n
      booktitle = {IEEE International Conference on Software Analysis, Evolution,
      and Reengineering},\n journal = {2022 IEEE International Conference on Software
      Analysis, Evolution and Reengineering (SANER)},\n pages = {459-463},\n title
      = {Bunk8s: Enabling Easy Integration Testing of Microservices in Kubernetes},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2176185725", "name": "Christoph
      Reile"}, {"authorId": "8766032", "name": "Mohak Chadha"}, {"authorId": "41017686",
      "name": "Valentin Hauner"}, {"authorId": "38833592", "name": "Anshul Jindal"},
      {"authorId": "2176184504", "name": "Benjamin Hofmann"}, {"authorId": "3240465",
      "name": "M. Gerndt"}]}, {"paperId": "c9591a68fd6dbc7a52cdef076c213c81775f4c1b",
      "externalIds": {"DBLP": "journals/tjs/Zhu0Z22", "DOI": "10.1007/s11227-022-04381-y",
      "CorpusId": 247514247}, "corpusId": 247514247, "publicationVenue": {"id": "26ed29a9-64ce-4d6c-9024-8b022fd2fe22",
      "name": "Journal of Supercomputing", "type": "journal", "alternate_names": ["The
      Journal of Supercomputing", "J Supercomput"], "issn": "0920-8542", "url": "http://www.springer.com/computer/programming/journal/11227",
      "alternate_urls": ["https://link.springer.com/journal/11227", "https://www.springer.com/computer/swe/journal/11227?changeHeader"]},
      "url": "https://www.semanticscholar.org/paper/c9591a68fd6dbc7a52cdef076c213c81775f4c1b",
      "title": "A comparative performance study of spark on kubernetes", "abstract":
      null, "venue": "Journal of Supercomputing", "year": 2022, "referenceCount":
      36, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2022-03-16", "journal": {"name": "The Journal of Supercomputing",
      "pages": "13298 - 13322", "volume": "78"}, "citationStyles": {"bibtex": "@Article{Zhu2022ACP,\n
      author = {Changpeng Zhu and B. Han and Yinliang Zhao},\n booktitle = {Journal
      of Supercomputing},\n journal = {The Journal of Supercomputing},\n pages = {13298
      - 13322},\n title = {A comparative performance study of spark on kubernetes},\n
      volume = {78},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2141110", "name":
      "Changpeng Zhu"}, {"authorId": "71649694", "name": "B. Han"}, {"authorId": "35213482",
      "name": "Yinliang Zhao"}]}, {"paperId": "270f5d2f2a39f918e3c3c1bd136acd17b93f91b6",
      "externalIds": {"DBLP": "conf/nof/ZerwasKUARWK22", "DOI": "10.1109/NoF55974.2022.9942649",
      "CorpusId": 253543367}, "corpusId": 253543367, "publicationVenue": {"id": "966ed49f-abb2-4051-a7e7-c966d9426b85",
      "name": "International Conference on Network of the Future", "type": "conference",
      "alternate_names": ["Int Conf Netw Future", "NoF", "NOF", "International Conference
      on Network of Future"]}, "url": "https://www.semanticscholar.org/paper/270f5d2f2a39f918e3c3c1bd136acd17b93f91b6",
      "title": "KAPET\u00c1NIOS: Automated Kubernetes Adaptation through a Digital
      Twin", "abstract": "This demo presents a self-operating Kubernetes (K8s) cluster
      that uses digital twinning and machine learning to autonomously adapt its Horizontal
      Pod Autoscaler (HPA) to workload changes. The demo uses a digital twin of a
      K8s cluster to gather performance statistics and learn a model for the workload.
      With the model, the cluster autonomously adjusts HPA parameters for better performance.
      The demo illustrates this process and shows that the requested pod seconds decrease
      by ~37 %, while the request latency stays mostly unaffected.", "venue": "International
      Conference on Network of the Future", "year": 2022, "referenceCount": 12, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://mediatum.ub.tum.de/doc/1688820/document.pdf", "status": "GREEN"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": "2022-10-05", "journal": {"name": "2022 13th
      International Conference on Network of the Future (NoF)", "pages": "1-3"}, "citationStyles":
      {"bibtex": "@Article{Zerwas2022KAPET\u00c1NIOSAK,\n author = {Johannes Zerwas
      and Patrick Kr\u00e4mer and Razvan-Mihai Ursu and Navidreza Asadi and Phil Rodgers
      and Leon Wong and W. Kellerer},\n booktitle = {International Conference on Network
      of the Future},\n journal = {2022 13th International Conference on Network of
      the Future (NoF)},\n pages = {1-3},\n title = {KAPET\u00c1NIOS: Automated Kubernetes
      Adaptation through a Digital Twin},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "66850064", "name": "Johannes Zerwas"}, {"authorId": "2169674538", "name": "Patrick
      Kr\u00e4mer"}, {"authorId": "2165526212", "name": "Razvan-Mihai Ursu"}, {"authorId":
      "2187926743", "name": "Navidreza Asadi"}, {"authorId": "2190914129", "name":
      "Phil Rodgers"}, {"authorId": "2054542303", "name": "Leon Wong"}, {"authorId":
      "9358170", "name": "W. Kellerer"}]}, {"paperId": "a858cf1bbe48d723666bb3da4c226590f708ec47",
      "externalIds": {"DOI": "10.47750/pnr.2022.13.s04.186", "CorpusId": 252893488},
      "corpusId": 252893488, "publicationVenue": {"id": "3f4e1caf-45e3-4eca-8e26-21fba1856053",
      "name": "Journal of Pharmaceutical Negative Results", "type": "journal", "alternate_names":
      ["J Pharm Negat Result"], "issn": "0976-9234", "url": "http://www.pnrjournal.com/"},
      "url": "https://www.semanticscholar.org/paper/a858cf1bbe48d723666bb3da4c226590f708ec47",
      "title": "Estimating the Deployment Time for Cloud Applications using Novel
      Google Kubernetes Cloud Service over Microsoft Kubernetes Cloud Service", "abstract":
      "Aim: The aim of the study is to estimate the time to deploy cloud applications
      using novel google kubernetes cloud service over microsoft kubernetes cloud
      service. Materials and Methods: Sample groups that are considered in the project
      can be classified into two each has 20 samples, one for Novel google kubernetes
      cloud service and other for Microsoft kubernetes cloud service, which are tested
      using 0.80 for G-power to determine the sample size and for t-test analysis.
      20 cloud applications have been used in each group for estimating deployment
      time. Results: The novel google kubernetes cloud service with efficient accuracy
      of 83.40%, which by far seems to be better than the Microsoft kubernetes cloud
      service which gives around 61.60%. The significance is around 0.222 (p>0.05)
      and therefore there is a statistical insignificant difference among the study
      group. Conclusion: Novel Google kubernetes cloud service seems to be better
      in deploying cloud applications over the Microsoft kubernetes cloud service.",
      "venue": "Journal of Pharmaceutical Negative Results", "year": 2022, "referenceCount":
      26, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.pnrjournal.com/index.php/home/article/download/1367/1141/1680",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2022-01-01",
      "journal": {"name": "Journal of Pharmaceutical Negative Results"}, "citationStyles":
      {"bibtex": "@Article{Kumar2022EstimatingTD,\n author = {Sai Vimal Kumar},\n
      booktitle = {Journal of Pharmaceutical Negative Results},\n journal = {Journal
      of Pharmaceutical Negative Results},\n title = {Estimating the Deployment Time
      for Cloud Applications using Novel Google Kubernetes Cloud Service over Microsoft
      Kubernetes Cloud Service},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2239632756", "name": "Sai Vimal Kumar"}]}, {"paperId": "38a25937bc5b98ec1bca31abea594f5704564220",
      "externalIds": {"DBLP": "conf/icufn/LeiterKHFGHKB22", "DOI": "10.1109/icufn55119.2022.9829576",
      "CorpusId": 250944553}, "corpusId": 250944553, "publicationVenue": {"id": "5ba115b2-444a-476a-ae16-66bf1b83372f",
      "name": "International Conference on Ubiquitous and Future Networks", "type":
      "conference", "alternate_names": ["Int Conf Ubiquitous Future Netw", "ICUFN"]},
      "url": "https://www.semanticscholar.org/paper/38a25937bc5b98ec1bca31abea594f5704564220",
      "title": "Intent-based 5G UPF configuration via Kubernetes Operators in the
      Edge", "abstract": "The expected growing number of edge clouds in the telecommunication
      industry requires new types of configuration management approaches in order
      to deal with the increased complexity. The Kubernetes Operator pattern widely
      used for lifecycle management of cloud native applications could be also applied
      to network management and configuration. In this paper we present our approach
      on using Kubernetes Operators to automatically adapt the configuration of the
      edge-located User Plane Functions (UPFs) to intents coming from an Edge Application.
      The owner of the Edge Application does not need to deal with network-related
      configuration as the chain of Kubernetes Operators manage it. Furthermore, we
      also provide numerical results about the speed of automatic configuration.",
      "venue": "International Conference on Ubiquitous and Future Networks", "year":
      2022, "referenceCount": 18, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-07-05", "journal": {"name": "2022 Thirteenth International
      Conference on Ubiquitous and Future Networks (ICUFN)", "pages": "186-189"},
      "citationStyles": {"bibtex": "@Article{Leiter2022Intentbased5U,\n author = {\u00c1kos
      Leiter and I. Kisp\u00e1l and Attila Hegyi and P. Fazekas and N\u00e1ndor Galambosi
      and P. Hegyi and P\u00e9ter Kulics and J\u00f3zsef B\u00edr\u00f3},\n booktitle
      = {International Conference on Ubiquitous and Future Networks},\n journal =
      {2022 Thirteenth International Conference on Ubiquitous and Future Networks
      (ICUFN)},\n pages = {186-189},\n title = {Intent-based 5G UPF configuration
      via Kubernetes Operators in the Edge},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "51899499", "name": "\u00c1kos Leiter"}, {"authorId": "69062004", "name": "I.
      Kisp\u00e1l"}, {"authorId": "153597247", "name": "Attila Hegyi"}, {"authorId":
      "2181619", "name": "P. Fazekas"}, {"authorId": "8696426", "name": "N\u00e1ndor
      Galambosi"}, {"authorId": "48085082", "name": "P. Hegyi"}, {"authorId": "2178508412",
      "name": "P\u00e9ter Kulics"}, {"authorId": "2063102580", "name": "J\u00f3zsef
      B\u00edr\u00f3"}]}, {"paperId": "c69314c2a56e2372c298ce70ddd1aab7ad64a573",
      "externalIds": {"DBLP": "conf/apcc/NguyenK22", "DOI": "10.1109/APCC55198.2022.9943782",
      "CorpusId": 253554875}, "corpusId": 253554875, "publicationVenue": {"id": "9039088a-b047-49bc-b12a-3334017ad93d",
      "name": "Asia-Pacific Conference on Communications", "type": "conference", "alternate_names":
      ["APCC", "Asia-pacific Conf Commun"], "issn": "2163-0771"}, "url": "https://www.semanticscholar.org/paper/c69314c2a56e2372c298ce70ddd1aab7ad64a573",
      "title": "A Design of Resource Allocation Structure for Multi-Tenant Services
      in Kubernetes Cluster", "abstract": "Nowadays, for multi-tenant cloud, there
      are plenty of Kubernetes-based open-source projects that do extraordinary in
      management, isolation multitenancy. These systems allow multiple customers to
      share the same clusters by dividing them into multiple logical clusters. To
      satisfy each tenant different workload demand, resource allocation is handled
      manually by the multi-tenant system administrator. However, this static resource
      provisioning method cannot adapt to address workload bursting or scaling enough
      Pod to serve at peak hour and scaling down the number of Pods at least hour.
      In our paper, we propose a design of dynamic resource allocation in Kubernetes
      multi-tenancy system to address the missing dynamic resource allocation in the
      multi-tenant Kubernetes control plane. We start with a controller interacting
      with the multi-tenant system, which offers dynamic resource allocation, automated
      scheduling workloads, and policies-based placement. We also present the preliminary
      results demonstrating the applicability of allocating resources to tenants''
      applications and services to adapt to workloads changes. Our initial results
      show fast Pod creation time with the help of a policies-based scheduler and
      a resources allocator to tenant''s applications.", "venue": "Asia-Pacific Conference
      on Communications", "year": 2022, "referenceCount": 8, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
      "publicationDate": "2022-10-19", "journal": {"name": "2022 27th Asia Pacific
      Conference on Communications (APCC)", "pages": "651-654"}, "citationStyles":
      {"bibtex": "@Article{Nguyen2022ADO,\n author = {Nguyen Thanh Nguyen and Younghan
      Kim},\n booktitle = {Asia-Pacific Conference on Communications},\n journal =
      {2022 27th Asia Pacific Conference on Communications (APCC)},\n pages = {651-654},\n
      title = {A Design of Resource Allocation Structure for Multi-Tenant Services
      in Kubernetes Cluster},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2191041447",
      "name": "Nguyen Thanh Nguyen"}, {"authorId": "2084264", "name": "Younghan Kim"}]},
      {"paperId": "09adb20a56c65dc46c6ab42d1c3b220cb954093b", "externalIds": {"DOI":
      "10.1109/ISMODE56940.2022.10180973", "CorpusId": 259978081}, "corpusId": 259978081,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/09adb20a56c65dc46c6ab42d1c3b220cb954093b",
      "title": "Docker and Kubernetes Pipeline for DevOps Software Defect Prediction
      with MLOps Approach", "abstract": "Software defects are common when it comes
      to software development. However, in reality, this is very detrimental for companies
      and organizations that are developing software. Prediction of software defects
      in the early stages of development can be a solution to this problem. Of course,
      the method used needs to be considered when developing a model for predicting
      software defects. The software continues to experience development, so the prediction
      model must always be updated so that it can adapt to existing conditions. This
      study proposes the MLOps approach, which combines development and operation
      processes to develop a software defect prediction model. We will create a prediction
      model and then create a Docker and Kubernetes pipeline to automate the entire
      software defect prediction process so that it can speed up the development process
      and have good performance. We are comparing the performance evaluation results
      of the proposed method with the traditional method, which is run manually by
      Docker. The results showed that the entire source dataset had a fairly good
      accuracy rate of 76%-83% and a good recall rate of 79%-94%. The precision and
      recall values were also very good. Apart from that, it also produces a good
      Fl-score value of 84%-90%. And the development time until the model\u2019s release
      is shorter: the average time is 7:02 minutes. Performance monitoring on the
      built-in web server is also easy to do and shows very good results. The web
      server can receive up to 156. $6/$sec requests in all models based on the dataset
      used, with the highest error rate at 45.03%. The use of the Docker and Kubernetes
      pipelines with the MLOps approach has been proven to have good performance,
      and the development of software defect models can be sped up.", "venue": "2022
      2nd International Seminar on Machine Learning, Optimization, and Data Science
      (ISMODE)", "year": 2022, "referenceCount": 24, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2022-12-22", "journal": {"name": "2022 2nd International
      Seminar on Machine Learning, Optimization, and Data Science (ISMODE)", "pages":
      "248-253"}, "citationStyles": {"bibtex": "@Article{Bahaweres2022DockerAK,\n
      author = {Rizal Broer Bahaweres and Aldi Zulfikar and I. Hermadi and A. Suroso
      and Y. Arkeman},\n booktitle = {2022 2nd International Seminar on Machine Learning,
      Optimization, and Data Science (ISMODE)},\n journal = {2022 2nd International
      Seminar on Machine Learning, Optimization, and Data Science (ISMODE)},\n pages
      = {248-253},\n title = {Docker and Kubernetes Pipeline for DevOps Software Defect
      Prediction with MLOps Approach},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "9123178", "name": "Rizal Broer Bahaweres"}, {"authorId": "2193848581", "name":
      "Aldi Zulfikar"}, {"authorId": "2141788191", "name": "I. Hermadi"}, {"authorId":
      "9349049", "name": "A. Suroso"}, {"authorId": "9366129", "name": "Y. Arkeman"}]},
      {"paperId": "622366aeb4730e5a002ae814a20d066c05a99c99", "externalIds": {"DOI":
      "10.3844/jcssp.2022.860.867", "CorpusId": 252533332}, "corpusId": 252533332,
      "publicationVenue": {"id": "449b5e8b-cda2-4a8e-b27b-9b7917ded9eb", "name": "Journal
      of Computer Science", "type": "journal", "alternate_names": ["Journal of Computational
      Science", "J Comput Sci"], "issn": "1549-3636", "alternate_issns": ["1877-7503",
      "2362-0110"], "url": "https://thescipub.com/journals/jcs/", "alternate_urls":
      ["http://ansinet.org/sciencepub/c4p.php?j_id=jcs", "https://www.journals.elsevier.com/journal-of-computational-science",
      "http://journals.sjp.ac.lk/index.php/jcs", "http://www.sciencedirect.com/science/journal/18777503"]},
      "url": "https://www.semanticscholar.org/paper/622366aeb4730e5a002ae814a20d066c05a99c99",
      "title": "Framework for Containers Orchestration to handle the Scientific Workloads
      using Kubernetes", "abstract": ": The lightweight nature of Operating System
      virtualization give birth to the containers, and their high efficiency for application
      deployment prefers its usage in Cloud computing. Containers encapsulate and
      bundle the required dependencies for application development and deployment
      in libs packages as a single entity. The nature of containers eases application
      migration within the High-Performance Computing environment to handle the scientific
      workloads smoothly. Singularity containers are aimed to be only for High-Performance
      Computing (HPC) applications. The existing HPC workload managers are good with
      container monitoring, scheduling, and resource management, but container orchestration
      is always a concern. This study proposes a framework that will ease container
      orchestration using Kubernetes to handle the scientific applications workload.
      HPC cluster is built using interconnected containers in a private cloud environment.
      The architecture is derived based on the required configuration for containers
      to deploy the application and scheduling jobs.", "venue": "Journal of Computer
      Science", "year": 2022, "referenceCount": 17, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://thescipub.com/pdf/jcssp.2022.860.867.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2022-09-01",
      "journal": {"name": "Journal of Computer Science"}, "citationStyles": {"bibtex":
      "@Article{Abhishek2022FrameworkFC,\n author = {M. Abhishek and D. Rao and K.
      Subrahmanyam},\n booktitle = {Journal of Computer Science},\n journal = {Journal
      of Computer Science},\n title = {Framework for Containers Orchestration to handle
      the Scientific Workloads using Kubernetes},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "9102634", "name": "M. Abhishek"}, {"authorId": "47299401", "name":
      "D. Rao"}, {"authorId": "144340734", "name": "K. Subrahmanyam"}]}, {"paperId":
      "b9e971be43afc0c25660eb027cb83d54579e9bc6", "externalIds": {"DOI": "10.1007/s41605-022-00356-y",
      "CorpusId": 252744433}, "corpusId": 252744433, "publicationVenue": {"id": "595deea7-102a-41ee-bd84-f68fd7e5e5d4",
      "name": "Radiation Detection Technology and Methods", "alternate_names": ["Radiat
      Detect Technol Method"], "issn": "2509-9949", "url": "https://link.springer.com/journal/41605"},
      "url": "https://www.semanticscholar.org/paper/b9e971be43afc0c25660eb027cb83d54579e9bc6",
      "title": "A new deployment method of the archiver application with Kubernetes
      for the CAFe facility", "abstract": null, "venue": "Radiation Detection Technology
      and Methods", "year": 2022, "referenceCount": 28, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Engineering", "source": "s2-fos-model"}, {"category": "Physics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2022-10-05", "journal": {"name":
      "Radiation Detection Technology and Methods", "pages": "508 - 518", "volume":
      "6"}, "citationStyles": {"bibtex": "@Article{Wang2022AND,\n author = {Rui Wang
      and Yuhui Guo and N. Xie and Ruifeng Gu and Zhaoyang Li},\n booktitle = {Radiation
      Detection Technology and Methods},\n journal = {Radiation Detection Technology
      and Methods},\n pages = {508 - 518},\n title = {A new deployment method of the
      archiver application with Kubernetes for the CAFe facility},\n volume = {6},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2283315181", "name": "Rui Wang"},
      {"authorId": "2107822832", "name": "Yuhui Guo"}, {"authorId": "2057542442",
      "name": "N. Xie"}, {"authorId": "116881614", "name": "Ruifeng Gu"}, {"authorId":
      "2187148936", "name": "Zhaoyang Li"}]}, {"paperId": "d322d2f9a731ee5e3bf0a4b8c6b61090fd31e720",
      "externalIds": {"DOI": "10.1109/ICAICTA56449.2022.9932943", "CorpusId": 253251797},
      "corpusId": 253251797, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d322d2f9a731ee5e3bf0a4b8c6b61090fd31e720",
      "title": "Autoscaling Based on Response Time Prediction for Microservice Application
      in Kubernetes", "abstract": "Containerized application are evolving along with
      the microservice architectures in distributed application development. This
      trend shows the importance of managing and orchestrating containerized applications
      thus applications can operate properly. One of the aspects of container orchestration
      is scaling or increasing the application\u2019s ability to handle more requests.
      In this study, an autoscaler based on response time prediction is developed
      for microservice applications in Kubernetes environment. The prediction function
      is developed using a machine learning model that features performance metrics
      at the microservice and node levels. The response time prediction is then used
      to calculate the number of pods required by the application to meet the target
      response time. Our experiment shows that the proposed autoscaler can serve more
      requests that match the target response time compare with the Kubernetes Horizontal
      Pod Autoscaler (HPA) that are using CPU usage as the target. However, as the
      consequence, the proposed autoscaler consumes more resources than the Kubernetes
      HPA.", "venue": "2022 9th International Conference on Advanced Informatics:
      Concepts, Theory and Applications (ICAICTA)", "year": 2022, "referenceCount":
      10, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-09-28",
      "journal": {"name": "2022 9th International Conference on Advanced Informatics:
      Concepts, Theory and Applications (ICAICTA)", "pages": "1-6"}, "citationStyles":
      {"bibtex": "@Conference{Pramesti2022AutoscalingBO,\n author = {Annisa Ayu Pramesti
      and A. I. Kistijantoro},\n booktitle = {2022 9th International Conference on
      Advanced Informatics: Concepts, Theory and Applications (ICAICTA)},\n journal
      = {2022 9th International Conference on Advanced Informatics: Concepts, Theory
      and Applications (ICAICTA)},\n pages = {1-6},\n title = {Autoscaling Based on
      Response Time Prediction for Microservice Application in Kubernetes},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "2189470061", "name": "Annisa Ayu
      Pramesti"}, {"authorId": "1717867", "name": "A. I. Kistijantoro"}]}, {"paperId":
      "b7849eaf5ec6ad1f25a4d2b6f20381c22471b180", "externalIds": {"DBLP": "conf/cnsm/SpatharakisDVDA22",
      "DOI": "10.23919/CNSM55787.2022.9965056", "CorpusId": 254153274}, "corpusId":
      254153274, "publicationVenue": {"id": "7a0ab88e-224a-475b-9ea6-e66a6b3448c8",
      "name": "Conference on Network and Service Management", "type": "conference",
      "alternate_names": ["Conf Netw Serv Manag", "CNSM"], "url": "http://www.cnsm-conf.org/"},
      "url": "https://www.semanticscholar.org/paper/b7849eaf5ec6ad1f25a4d2b6f20381c22471b180",
      "title": "Distributed Resource Autoscaling in Kubernetes Edge Clusters", "abstract":
      "Maximizing the performance of modern applications requires timely resource
      management of the virtualized resources. However, proactively deploying resources
      for meeting specific application requirements subject to a dynamic workload
      profile of incoming requests is extremely challenging. To this end, the fundamental
      problems of task scheduling and resource autoscaling must be jointly addressed.
      This paper presents a scalable architecture compatible with the decentralized
      nature of Kubernetes [1], to solve both. Exploiting the stability guarantees
      of a novel AIMD-like task scheduling solution, we dynamically redirect the incoming
      requests towards the containerized application. To cope with dynamic workloads,
      a prediction mechanism allows us to estimate the number of incoming requests.
      Additionally, a Machine Learning-based (ML) Application Profiling Modeling is
      introduced to address the scaling, by co-designing the theoretically-computed
      service rates obtained from the AIMD algorithm with the current performance
      metrics. The proposed solution is compared with the state-of-the-art autoscaling
      techniques under a realistic dataset in a small edge infrastructure and the
      trade-off between resource utilization and QoS violations are analyzed. Our
      solution provides better resource utilization by reducing CPU cores by 8% with
      only an acceptable increase in QoS violations.", "venue": "Conference on Network
      and Service Management", "year": 2022, "referenceCount": 15, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://pure.qub.ac.uk/files/390648006/cnsm_2022_7pages_6_.pdf", "status":
      "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-10-31",
      "journal": {"name": "2022 18th International Conference on Network and Service
      Management (CNSM)", "pages": "163-169"}, "citationStyles": {"bibtex": "@Article{Spatharakis2022DistributedRA,\n
      author = {Dimitrios Spatharakis and Ioannis Dimolitsas and E. Vlahakis and Dimitrios
      Dechouniotis and N. Athanasopoulos and S. Papavassiliou},\n booktitle = {Conference
      on Network and Service Management},\n journal = {2022 18th International Conference
      on Network and Service Management (CNSM)},\n pages = {163-169},\n title = {Distributed
      Resource Autoscaling in Kubernetes Edge Clusters},\n year = {2022}\n}\n"}, "authors":
      [{"authorId": "73769210", "name": "Dimitrios Spatharakis"}, {"authorId": "1411234556",
      "name": "Ioannis Dimolitsas"}, {"authorId": "51954349", "name": "E. Vlahakis"},
      {"authorId": "1890827", "name": "Dimitrios Dechouniotis"}, {"authorId": "9288759",
      "name": "N. Athanasopoulos"}, {"authorId": "1699526", "name": "S. Papavassiliou"}]},
      {"paperId": "1b5abedbb9224c9a5db9b8d74533c1cec20886b4", "externalIds": {"DBLP":
      "journals/algorithms/DeckerKK22", "DOI": "10.3390/a15070234", "CorpusId": 250257544},
      "corpusId": 250257544, "publicationVenue": {"id": "e95c8d18-09be-464f-a3cf-5b2637f0eff6",
      "name": "Algorithms", "type": "journal", "issn": "1999-4893", "url": "http://www.e-helvetica.nb.admin.ch/directAccess?callnumber=bel-150910",
      "alternate_urls": ["http://nbn-resolving.de/urn/resolver.pl?urn=urn:nbn:ch:bel-150910",
      "http://www.mdpi.com/journal/algorithms", "http://www.mdpi.com/journal/algorithms/"]},
      "url": "https://www.semanticscholar.org/paper/1b5abedbb9224c9a5db9b8d74533c1cec20886b4",
      "title": "Performance Evaluation of Open-Source Serverless Platforms for Kubernetes",
      "abstract": "Serverless computing has grown massively in popularity over the
      last few years, and has provided developers with a way to deploy function-sized
      code units without having to take care of the actual servers or deal with logging,
      monitoring, and scaling of their code. High-performance computing (HPC) clusters
      can profit from improved serverless resource sharing capabilities compared to
      reservation-based systems such as Slurm. However, before running self-hosted
      serverless platforms in HPC becomes a viable option, serverless platforms must
      be able to deliver a decent level of performance. Other researchers have already
      pointed out that there is a distinct lack of studies in the area of comparative
      benchmarks on serverless platforms, especially for open-source self-hosted platforms.
      This study takes a step towards filling this gap by systematically benchmarking
      two promising self-hosted Kubernetes-based serverless platforms in comparison.
      While the resulting benchmarks signal potential, they demonstrate that many
      opportunities for performance improvements in serverless computing are being
      left on the table.", "venue": "Algorithms", "year": 2022, "referenceCount":
      18, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/1999-4893/15/7/234/pdf?version=1657104195",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-07-02", "journal":
      {"name": "Algorithms", "pages": "234", "volume": "15"}, "citationStyles": {"bibtex":
      "@Article{Decker2022PerformanceEO,\n author = {Jonathan Decker and P. Kasprzak
      and J. Kunkel},\n booktitle = {Algorithms},\n journal = {Algorithms},\n pages
      = {234},\n title = {Performance Evaluation of Open-Source Serverless Platforms
      for Kubernetes},\n volume = {15},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "143801067", "name": "Jonathan Decker"}, {"authorId": "2069726067", "name":
      "P. Kasprzak"}, {"authorId": "1682255", "name": "J. Kunkel"}]}, {"paperId":
      "06fc8912ca8e044f8ac9b0a04712f62c66332313", "externalIds": {"DOI": "10.1109/ICCWorkshops53468.2022.9915023",
      "CorpusId": 253046906}, "corpusId": 253046906, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/06fc8912ca8e044f8ac9b0a04712f62c66332313",
      "title": "Demo: A Decision Support System for Task Offloading Optimization in
      Cloud-to-Far-Edge Kubernetes Networks", "abstract": "Edge computing techniques
      together with application containerization can greatly reduce the end-to-end
      latency of delay-sensitive applications. Kubernetes is recognized as the most
      popular production-grade container orchestrator. In this paper, we demonstrate
      a decision support system (DSS) that supports custom Kubernetes quality of system
      (QoS) models, and which takes into account specific, heterogeneous hardware
      capabilities at all network nodes. Specifically, we demonstrate the implementation
      of a Kubernetes QoS model based on a three-tier offloading decision algorithm
      (TTODA) and its integration into the DSS.", "venue": "2022 IEEE International
      Conference on Communications Workshops (ICC Workshops)", "year": 2022, "referenceCount":
      14, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-05-16",
      "journal": {"name": "2022 IEEE International Conference on Communications Workshops
      (ICC Workshops)", "pages": "1-2"}, "citationStyles": {"bibtex": "@Conference{Carmona-Cejudo2022DemoAD,\n
      author = {Estela Carmona-Cejudo and Francesco Iadanza},\n booktitle = {2022
      IEEE International Conference on Communications Workshops (ICC Workshops)},\n
      journal = {2022 IEEE International Conference on Communications Workshops (ICC
      Workshops)},\n pages = {1-2},\n title = {Demo: A Decision Support System for
      Task Offloading Optimization in Cloud-to-Far-Edge Kubernetes Networks},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "2188490932", "name": "Estela Carmona-Cejudo"},
      {"authorId": "50828656", "name": "Francesco Iadanza"}]}, {"paperId": "46030c3822447e1be5bf81c3dbb0c08dfa0c1817",
      "externalIds": {"DBLP": "conf/globecom/SekigawaST22", "DOI": "10.1109/GCWkshps56602.2022.10008579",
      "CorpusId": 255777436}, "corpusId": 255777436, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/46030c3822447e1be5bf81c3dbb0c08dfa0c1817",
      "title": "Toward a Cloud-Native Telecom Infrastructure: Analysis and Evaluations
      of Kubernetes Networking", "abstract": "To realize a 6G network, Cloud-Native
      is a key technology for improving the scalability, agility, and resilience of
      telecom networks. Kubernetes is the de-facto standard container orchestrator
      and adaptation to the Cloud-Native Network Function (CNF) infrastructure is
      progressing. However, several discrepancies exist between standard Kubernetes
      networking and CNF networking. In this paper, we analyze the discrepancies and
      clarify the telecom network requirements for Kubernetes. Then, we perform qualitative
      and quantitative evaluations on several network extensions developed as open-source
      software. From the results, we discuss the extensions that satisfy the requirements
      and represent the suitable combinations of network extensions for several CNF
      use cases.", "venue": "2022 IEEE Globecom Workshops (GC Wkshps)", "year": 2022,
      "referenceCount": 19, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-12-04", "journal":
      {"name": "2022 IEEE Globecom Workshops (GC Wkshps)", "pages": "838-843"}, "citationStyles":
      {"bibtex": "@Article{Sekigawa2022TowardAC,\n author = {Shu Sekigawa and C. Sasaki
      and A. Tagami},\n booktitle = {2022 IEEE Globecom Workshops (GC Wkshps)},\n
      journal = {2022 IEEE Globecom Workshops (GC Wkshps)},\n pages = {838-843},\n
      title = {Toward a Cloud-Native Telecom Infrastructure: Analysis and Evaluations
      of Kubernetes Networking},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "46763871", "name": "Shu Sekigawa"}, {"authorId": "34764472", "name": "C. Sasaki"},
      {"authorId": "3242560", "name": "A. Tagami"}]}, {"paperId": "d8bcd84314397c1c0901154c49c2b74a9ab18e81",
      "externalIds": {"ArXiv": "2209.01077", "DBLP": "conf/cloudnet/SebrechtsRBGVT22",
      "DOI": "10.1109/CloudNet55617.2022.9978884", "CorpusId": 252070794}, "corpusId":
      252070794, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d8bcd84314397c1c0901154c49c2b74a9ab18e81",
      "title": "Adapting Kubernetes controllers to the edge: on-demand control planes
      using Wasm and WASI", "abstract": "Kubernetes\u2019 high resource requirements
      hamper its adoption in constrained environments such as the edge and fog. Its
      extensible control plane is a significant contributor to this, consisting of
      long-lived processes called \"controllers\" that constantly listen for state
      changes and use resources even when they are not needed. This paper presents
      a WebAssembly-based framework for running lightweight controllers on-demand,
      only when they are needed. This framework extends the WebAssembly System Interface
      (WASI), in order to run Kubernetes controllers as lightweight Wasm modules.
      The framework runs these Wasm controllers in a modified version of Wasmtime,
      the reference WebAssembly (Wasm) runtime, that swaps idle controllers to disk
      and activates them when needed. A thorough evaluation shows this framework achieves
      a 64% memory reduction compared to traditional container-based controller frameworks.",
      "venue": "2022 IEEE 11th International Conference on Cloud Networking (CloudNet)",
      "year": 2022, "referenceCount": 31, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://biblio.ugent.be/publication/01GQ7A1P6376N6P9P3XM3W7MFB/file/01GQ7A2VFAYVVMC2D4G585GBDJ.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2022-09-02",
      "journal": {"name": "2022 IEEE 11th International Conference on Cloud Networking
      (CloudNet)", "pages": "195-202"}, "citationStyles": {"bibtex": "@Article{Sebrechts2022AdaptingKC,\n
      author = {Merlijn Sebrechts and Tim Ramlot and Sander Borny and Tom Goethals
      and B. Volckaert and F. Turck},\n booktitle = {2022 IEEE 11th International
      Conference on Cloud Networking (CloudNet)},\n journal = {2022 IEEE 11th International
      Conference on Cloud Networking (CloudNet)},\n pages = {195-202},\n title = {Adapting
      Kubernetes controllers to the edge: on-demand control planes using Wasm and
      WASI},\n year = {2022}\n}\n"}, "authors": [{"authorId": "32059621", "name":
      "Merlijn Sebrechts"}, {"authorId": "2184032784", "name": "Tim Ramlot"}, {"authorId":
      "9005677", "name": "Sander Borny"}, {"authorId": "52223901", "name": "Tom Goethals"},
      {"authorId": "1803683", "name": "B. Volckaert"}, {"authorId": "1715957", "name":
      "F. Turck"}]}, {"paperId": "30f44eb497575a5ebb366cb4c03001b18188a8f3", "externalIds":
      {"DBLP": "journals/corr/abs-2211-11487", "ArXiv": "2211.11487", "DOI": "10.1109/HPCC-DSS-SmartCity-DependSys57074.2022.00068",
      "CorpusId": 253734513}, "corpusId": 253734513, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/30f44eb497575a5ebb366cb4c03001b18188a8f3",
      "title": "Fine-Grained Scheduling for Containerized HPC Workloads in Kubernetes
      Clusters", "abstract": "Containerization technology offers lightweight OS-level
      virtualization, and enables portability, reproducibility, and flexibility by
      packing applications with low performance overhead and low effort to maintain
      and scale them. Moreover, container orchestrators (e.g., Kubernetes) are widely
      used in the Cloud to manage large clusters running many containerized applications.
      However, scheduling policies that consider the performance nuances of containerized
      High Performance Computing (HPC) workloads have not been well-explored yet.
      This paper conducts fine-grained scheduling policies for containerized HPC workloads
      in Kubernetes clusters, focusing especially on partitioning each job into a
      suitable multi-container deployment according to the application profile. We
      implement our scheduling schemes on different layers of management (application
      and infrastructure), so that each component has its own focus and algorithms
      but still collaborates with others. Our results show that our fine-grained scheduling
      policies outperform baseline and baseline with CPU/memory affinity enabled policies,
      reducing the overall response time by 35% and 19%, respectively, and also improving
      the makespan by 34% and 11%, respectively. They also provide better usability
      and flexibility to specify HPC workloads than other comparable HPC Cloud frameworks,
      while providing better scheduling efficiency thanks to their multi-layered approach.",
      "venue": "2022 IEEE 24th Int Conf on High Performance Computing & Communications;
      8th Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int
      Conf on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys)",
      "year": 2022, "referenceCount": 26, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://upcommons.upc.edu/bitstream/2117/386006/3/HPCC_2022__Camera_Ready_.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-11-21", "journal":
      {"name": "2022 IEEE 24th Int Conf on High Performance Computing & Communications;
      8th Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int
      Conf on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys)",
      "pages": "275-284"}, "citationStyles": {"bibtex": "@Article{Liu2022FineGrainedSF,\n
      author = {Peini Liu and Jordi Guitart},\n booktitle = {2022 IEEE 24th Int Conf
      on High Performance Computing & Communications; 8th Int Conf on Data Science
      & Systems; 20th Int Conf on Smart City; 8th Int Conf on Dependability in Sensor,
      Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys)},\n journal
      = {2022 IEEE 24th Int Conf on High Performance Computing & Communications; 8th
      Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int Conf
      on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys)},\n
      pages = {275-284},\n title = {Fine-Grained Scheduling for Containerized HPC
      Workloads in Kubernetes Clusters},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2692262", "name": "Peini Liu"}, {"authorId": "143814317", "name": "Jordi Guitart"}]},
      {"paperId": "ea4a7e32e61ddb9599932dd597c48b2ec0114112", "externalIds": {"DOI":
      "10.1109/IC3SIS54991.2022.9885293", "CorpusId": 252311879}, "corpusId": 252311879,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ea4a7e32e61ddb9599932dd597c48b2ec0114112",
      "title": "Detection, Analysis and Countermeasures for Container based Misconfiguration
      using Docker and Kubernetes", "abstract": "In the era of a fast, productive
      project delivery lifecycle, the technologies like Docker containers are used
      in mass for deployment as well as development and production phases of the SDLC
      (Software Development Life Cycle) phase. Container technology changed ways of
      application packaging and delivery methods with the efforts of deploying them
      as a service in the cloud environment. Docker is a leading technology that automates
      the process of deployment of containers. Kubernetes is a container management
      tool that helps to automate multiple container deployment, descaling, and load
      balancing. Container technology brings a new, faster, and easier way of achieving
      software building phases, but it also comes with a cost of security. As containers
      are lightweight and are a cloud-based technology for implementing virtualization
      in a unique way of itself, it also brings security concerns with it, that can
      give adversaries a way to exploit the containerization process and cause security
      attacks within the containers. Such attacks may be caused due to misconfiguration
      of containers while deploying the containers at the early phase, which leads
      to a vulnerable environment ready to be exploited by adversaries or which creates
      vulnerabilities that can cause havoc. The purpose of the research is to analyze
      the container deployment misconfigurations, which may be the first step of defense
      for container security that is required to evade further exploitation before
      it occurs. The attempt is to give possible container deployment security policies
      that can help secure the cloud environment from security attacks with proper
      configurations done during the deployment phase of containers. The proposed
      system may be used to implement a tool that can possibly detect the misconfigurations
      and help secure the process.", "venue": "2022 International Conference on Computing,
      Communication, Security and Intelligent Systems (IC3SIS)", "year": 2022, "referenceCount":
      14, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate": "2022-06-23",
      "journal": {"name": "2022 International Conference on Computing, Communication,
      Security and Intelligent Systems (IC3SIS)", "pages": "1-6"}, "citationStyles":
      {"bibtex": "@Conference{Mahajan2022DetectionAA,\n author = {Vijay Mahajan and
      S. Mane},\n booktitle = {2022 International Conference on Computing, Communication,
      Security and Intelligent Systems (IC3SIS)},\n journal = {2022 International
      Conference on Computing, Communication, Security and Intelligent Systems (IC3SIS)},\n
      pages = {1-6},\n title = {Detection, Analysis and Countermeasures for Container
      based Misconfiguration using Docker and Kubernetes},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "2069925917", "name": "Vijay Mahajan"}, {"authorId":
      "2891519", "name": "S. Mane"}]}, {"paperId": "e977c0d25c5aeb9ccea264a231922dd24d3b14a3",
      "externalIds": {"DBLP": "conf/infocom/HanS0WL21", "ArXiv": "2101.06582", "DOI":
      "10.1109/INFOCOM42981.2021.9488701", "CorpusId": 231632115}, "corpusId": 231632115,
      "publicationVenue": {"id": "7f92b1d2-f2b3-454d-adbe-ff02c83fe404", "name": "IEEE
      Conference on Computer Communications", "type": "conference", "alternate_names":
      ["INFOCOM", "IEEE Conf Comput Commun"], "url": "http://www.ieee-infocom.org/"},
      "url": "https://www.semanticscholar.org/paper/e977c0d25c5aeb9ccea264a231922dd24d3b14a3",
      "title": "Tailored Learning-Based Scheduling for Kubernetes-Oriented Edge-Cloud
      System", "abstract": "Kubernetes (k8s) has the potential to merge the distributed
      edge and the cloud but lacks a scheduling framework specifically for edge-cloud
      systems. Besides, the hierarchical distribution of heterogeneous resources and
      the complex dependencies among requests and resources make the modeling and
      scheduling of k8s-oriented edge-cloud systems particularly sophisticated. In
      this paper, we introduce KaiS, a learning-based scheduling framework for such
      edge-cloud systems to improve the long-term throughput rate of request processing.
      First, we design a coordinated multi-agent actor-critic algorithm to cater to
      decentralized request dispatch and dynamic dispatch spaces within the edge cluster.
      Second, for diverse system scales and structures, we use graph neural networks
      to embed system state information, and combine the embedding results with multiple
      policy networks to reduce the orchestration dimensionality by stepwise scheduling.
      Finally, we adopt a two-time-scale scheduling mechanism to harmonize request
      dispatch and service orchestration, and present the implementation design of
      deploying the above algorithms compatible with native k8s components. Experiments
      using real workload traces show that KaiS can successfully learn appropriate
      scheduling policies, irrespective of request arrival patterns and system scales.
      Moreover, KaiS can enhance the average system throughput rate by 14.3% while
      reducing scheduling cost by 34.7% compared to baselines.", "venue": "IEEE Conference
      on Computer Communications", "year": 2021, "referenceCount": 30, "citationCount":
      33, "influentialCitationCount": 4, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/2101.06582", "status": "GREEN"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Conference"], "publicationDate": "2021-01-17", "journal":
      {"name": "IEEE INFOCOM 2021 - IEEE Conference on Computer Communications", "pages":
      "1-10"}, "citationStyles": {"bibtex": "@Article{Han2021TailoredLS,\n author
      = {Yiwen Han and Shihao Shen and Xiaofei Wang and Shiqiang Wang and Victor C.
      M. Leung},\n booktitle = {IEEE Conference on Computer Communications},\n journal
      = {IEEE INFOCOM 2021 - IEEE Conference on Computer Communications},\n pages
      = {1-10},\n title = {Tailored Learning-Based Scheduling for Kubernetes-Oriented
      Edge-Cloud System},\n year = {2021}\n}\n"}, "authors": [{"authorId": "46874570",
      "name": "Yiwen Han"}, {"authorId": "2072819892", "name": "Shihao Shen"}, {"authorId":
      "2108503009", "name": "Xiaofei Wang"}, {"authorId": "50695457", "name": "Shiqiang
      Wang"}, {"authorId": "143698682", "name": "Victor C. M. Leung"}]}, {"paperId":
      "9430ebc9985d455e33e2e4820d1a96deed289929", "externalIds": {"DBLP": "conf/infocom/WojciechowskiOL21",
      "DOI": "10.1109/INFOCOM42981.2021.9488670", "CorpusId": 236480338}, "corpusId":
      236480338, "publicationVenue": {"id": "7f92b1d2-f2b3-454d-adbe-ff02c83fe404",
      "name": "IEEE Conference on Computer Communications", "type": "conference",
      "alternate_names": ["INFOCOM", "IEEE Conf Comput Commun"], "url": "http://www.ieee-infocom.org/"},
      "url": "https://www.semanticscholar.org/paper/9430ebc9985d455e33e2e4820d1a96deed289929",
      "title": "NetMARKS: Network Metrics-AwaRe Kubernetes Scheduler Powered by Service
      Mesh", "abstract": "Container technology has revolutionized the way software
      is being packaged and run. The telecommunications industry, now challenged with
      the 5G transformation, views containers as the best way to achieve agile infrastructure
      that can serve as a stable base for high throughput and low latency for 5G edge
      applications. These challenges make optimal scheduling of performance-sensitive
      containerized workflows a matter of emerging importance. Meanwhile, the wide
      adoption of Kubernetes across industries has placed it as a de-facto standard
      for container orchestration. Several attempts have been made to improve Kubernetes
      scheduling, but the existing solutions either do not respect current scheduling
      rules or only considered a static infrastructure viewpoint.To address this,
      we propose NetMARKS - a novel approach to Kubernetes pod scheduling that uses
      dynamic network metrics collected with Istio Service Mesh. This solution improves
      Kubernetes scheduling while being fully backward compatible. We validated our
      solution using different workloads and processing layouts. Based on our analysis,
      NetMARKS can reduce application response time up to 37 percent and save up to
      50 percent of inter-node bandwidth in a fully automated manner. This significant
      improvement is crucial to Kubernetes adoption in 5G use cases, especially for
      multi-access edge computing and machine-to-machine communication.", "venue":
      "IEEE Conference on Computer Communications", "year": 2021, "referenceCount":
      36, "citationCount": 33, "influentialCitationCount": 2, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2021-05-10",
      "journal": {"name": "IEEE INFOCOM 2021 - IEEE Conference on Computer Communications",
      "pages": "1-9"}, "citationStyles": {"bibtex": "@Article{Wojciechowski2021NetMARKSNM,\n
      author = {Lukasz Wojciechowski and Krzysztof Opasiak and Jakub Latusek and Maciej
      Wereski and Victor Morales and Taewan Kim and Moonki Hong},\n booktitle = {IEEE
      Conference on Computer Communications},\n journal = {IEEE INFOCOM 2021 - IEEE
      Conference on Computer Communications},\n pages = {1-9},\n title = {NetMARKS:
      Network Metrics-AwaRe Kubernetes Scheduler Powered by Service Mesh},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "102558423", "name": "Lukasz Wojciechowski"},
      {"authorId": "82016628", "name": "Krzysztof Opasiak"}, {"authorId": "1412040047",
      "name": "Jakub Latusek"}, {"authorId": "2121370304", "name": "Maciej Wereski"},
      {"authorId": "2121370302", "name": "Victor Morales"}, {"authorId": "2111182710",
      "name": "Taewan Kim"}, {"authorId": "2069750224", "name": "Moonki Hong"}]},
      {"paperId": "4144c2213394ef924b0ee478796b91c663873101", "externalIds": {"DBLP":
      "conf/eurosys/JefferyHM21", "ArXiv": "2104.02423", "DOI": "10.1145/3434770.3459730",
      "CorpusId": 233033937}, "corpusId": 233033937, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4144c2213394ef924b0ee478796b91c663873101",
      "title": "Rearchitecting Kubernetes for the Edge", "abstract": "Recent years
      have seen Kubernetes emerge as a primary choice for container orchestration.
      Kubernetes largely targets the cloud environment but new use cases require performant,
      available and scalable orchestration at the edge. Kubernetes stores all cluster
      state in etcd, a strongly consistent key-value store. We find that at larger
      etcd cluster sizes, offering higher availability, write request latency significantly
      increases and throughput decreases similarly. Coupled with approximately 30%
      of Kubernetes requests being writes, this directly impacts the request latency
      and availability of Kubernetes, reducing its suitability for the edge. We revisit
      the requirement of strong consistency and propose an eventually consistent approach
      instead. This enables higher performance, availability and scalability whilst
      still supporting the broad needs of Kubernetes. This aims to make Kubernetes
      much more suitable for performance-critical, dynamically-scaled edge solutions.",
      "venue": "EdgeSys@EuroSys", "year": 2021, "referenceCount": 39, "citationCount":
      34, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3434770.3459730", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle", "Book"], "publicationDate": "2021-04-06", "journal": {"name":
      "Proceedings of the 4th International Workshop on Edge Systems, Analytics and
      Networking"}, "citationStyles": {"bibtex": "@Article{Jeffery2021RearchitectingKF,\n
      author = {A. Jeffery and H. Howard and R. Mortier},\n booktitle = {EdgeSys@EuroSys},\n
      journal = {Proceedings of the 4th International Workshop on Edge Systems, Analytics
      and Networking},\n title = {Rearchitecting Kubernetes for the Edge},\n year
      = {2021}\n}\n"}, "authors": [{"authorId": "2064222200", "name": "A. Jeffery"},
      {"authorId": "143982431", "name": "H. Howard"}, {"authorId": "1679929", "name":
      "R. Mortier"}]}, {"paperId": "a3bf947d1c5433eebb728f47fa7870c176bb25cd", "externalIds":
      {"DBLP": "conf/infocom/KangZO22", "DOI": "10.1109/infocomwkshps54753.2022.9798103",
      "CorpusId": 249899340}, "corpusId": 249899340, "publicationVenue": {"id": "be267cb9-6411-4126-8b64-4847025171ee",
      "name": "Conference on Computer Communications Workshops", "type": "conference",
      "alternate_names": ["INFOCOM WKSHPS", "Conf Comput Commun Work"]}, "url": "https://www.semanticscholar.org/paper/a3bf947d1c5433eebb728f47fa7870c176bb25cd",
      "title": "Implementation of Service Function Chain Deployment with Allocation
      Models in Kubernetes", "abstract": "Service function chain (SFC) allocation
      problems have been studied in previous works. Models with different objectives
      decide the allocations of functions in chains. Currently, the allocation strategies
      cannot be applied in Kubernetes automatically so that the performance of these
      models cannot be evaluated. There is a lack of existing tools which can connect
      the allocation models and function deployments for SFCs. We implement an open
      virtual network based SFC-compatible network plugin for Kubernetes. We implement
      two controllers for creating SFCs among existing functions and SFC deployments
      without existing functions which can be cooperated with allocation models. The
      plugin allocates the functions in chains according to the given models and connects
      each function in chains by setting suitable flow entries in Kubernetes. Our
      demonstrations validate the implementation at last.", "venue": "Conference on
      Computer Communications Workshops", "year": 2022, "referenceCount": 0, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2022-05-02", "journal": {"name": "IEEE INFOCOM 2022 - IEEE Conference on Computer
      Communications Workshops (INFOCOM WKSHPS)", "pages": "1-2"}, "citationStyles":
      {"bibtex": "@Article{Kang2022ImplementationOS,\n author = {R. Kang and Mengfei
      Zhu and E. Oki},\n booktitle = {Conference on Computer Communications Workshops},\n
      journal = {IEEE INFOCOM 2022 - IEEE Conference on Computer Communications Workshops
      (INFOCOM WKSHPS)},\n pages = {1-2},\n title = {Implementation of Service Function
      Chain Deployment with Allocation Models in Kubernetes},\n year = {2022}\n}\n"},
      "authors": [{"authorId": "1638071782", "name": "R. Kang"}, {"authorId": "2116503162",
      "name": "Mengfei Zhu"}, {"authorId": "46530992", "name": "E. Oki"}]}, {"paperId":
      "c315b68420c9133cf9402a4617a37adc773a2558", "externalIds": {"DOI": "10.1109/PhDEDITS56681.2022.9955300",
      "CorpusId": 253795691}, "corpusId": 253795691, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/c315b68420c9133cf9402a4617a37adc773a2558",
      "title": "Reinforcement Learning based Autoscaling for Kafka-centric Microservices
      in Kubernetes", "abstract": "Microservices and Kafka have become a perfect match
      for enabling the Event-driven Architecture and this encourages microservices
      integration with various opensource platforms in the world of Cloud Native applications.
      Kubernetes is an opensource container orchestration platform, that can enable
      high availability, and scalability for Kafkacentric microservices. Kubernetes
      supports diverse autoscaling mechanisms like Horizontal Pod Autoscaler (HPA),
      Vertical Pod Autoscaler (VPA) and Cluster Autoscaler (CA). Among others, HPA
      automatically scales the number of pods based on the default Resource Metrics,
      which includes CPU and memory usage. With Prometheus integration, custom metrics
      for an application can be monitored. In a Kafkacentric microservices, processing
      time and speed depends on the number of messages published. There is a need
      for auto scaling policy which can be based on the number of messages processed.
      This paper proposes a new autoscaling policy, which scales Kafka-centric microservices
      deployed in an eventdriven deployment architecture, using a Reinforcement Learning
      model.", "venue": "2022 IEEE 4th PhD Colloquium on Emerging Domain Innovation
      and Technology for Society (PhD EDITS)", "year": 2022, "referenceCount": 4,
      "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2022-11-04", "journal": {"name":
      "2022 IEEE 4th PhD Colloquium on Emerging Domain Innovation and Technology for
      Society (PhD EDITS)", "pages": "1-2"}, "citationStyles": {"bibtex": "@Article{Joyce2022ReinforcementLB,\n
      author = {Josephine Eskaline Joyce and Shoney Sebastian},\n booktitle = {2022
      IEEE 4th PhD Colloquium on Emerging Domain Innovation and Technology for Society
      (PhD EDITS)},\n journal = {2022 IEEE 4th PhD Colloquium on Emerging Domain Innovation
      and Technology for Society (PhD EDITS)},\n pages = {1-2},\n title = {Reinforcement
      Learning based Autoscaling for Kafka-centric Microservices in Kubernetes},\n
      year = {2022}\n}\n"}, "authors": [{"authorId": "2191858665", "name": "Josephine
      Eskaline Joyce"}, {"authorId": "51390348", "name": "Shoney Sebastian"}]}, {"paperId":
      "e42c599536916be224c1f8e3684facad15f69179", "externalIds": {"DBLP": "conf/ispdc/HassS22",
      "DOI": "10.1109/ISPDC55340.2022.00026", "CorpusId": 253270922}, "corpusId":
      253270922, "publicationVenue": {"id": "e4234c06-44ff-4933-9c39-2c903ce54ee1",
      "name": "International Symposium on Parallel and Distributed Computing", "type":
      "conference", "alternate_names": ["ISPDC", "Int Symp Parallel Distrib Comput"],
      "url": "http://www.wikicfp.com/cfp/program?id=1742"}, "url": "https://www.semanticscholar.org/paper/e42c599536916be224c1f8e3684facad15f69179",
      "title": "Workload Deployment and Configuration Reconciliation at Scale in Kubernetes-Based
      Edge-Cloud Continuums", "abstract": "Continuum computing promises the abstraction
      of physical node location and node platform stack in order to create a seamless
      application deployment and execution across edges and cloud data centres. For
      industrial IoT applications, the demand to generate data insights in conjunction
      with an installed base of increasingly capable edge devices is calling for appropriate
      continuum computing interfaces. Derived from a case study in industrial water
      flow monitoring and based on the industry\u2019s de-facto standard Kubernetes
      to deploy complex containerised workloads, we present an appropriate continuum
      deployment mechanism based on custom Kubernetes controllers and CI/CD, called
      Kontinuum Controller. Through synthetic experiments and a holistic cross-provider
      deployment, we investigate its scalability with emphasis on reconciling adjusted
      configuration per application and per node, a critical requirement by industrial
      customers. Our findings convey that Kubernetes by default would enter undesirable
      oscillation already for modestly sized deployments. Thus, we also discuss possible
      solutions.", "venue": "International Symposium on Parallel and Distributed Computing",
      "year": 2022, "referenceCount": 37, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Environmental
      Science", "source": "s2-fos-model"}, {"category": "Engineering", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2022-07-01", "journal":
      {"name": "2022 21st International Symposium on Parallel and Distributed Computing
      (ISPDC)", "pages": "121-128"}, "citationStyles": {"bibtex": "@Article{Hass2022WorkloadDA,\n
      author = {D. Hass and Josef Spillner},\n booktitle = {International Symposium
      on Parallel and Distributed Computing},\n journal = {2022 21st International
      Symposium on Parallel and Distributed Computing (ISPDC)},\n pages = {121-128},\n
      title = {Workload Deployment and Configuration Reconciliation at Scale in Kubernetes-Based
      Edge-Cloud Continuums},\n year = {2022}\n}\n"}, "authors": [{"authorId": "2081859787",
      "name": "D. Hass"}, {"authorId": "1765470", "name": "Josef Spillner"}]}, {"paperId":
      "971e4cf7becb79ee92f9e9355dcf38232ed41fe8", "externalIds": {"DOI": "10.47750/pnr.2022.13.s04.183",
      "CorpusId": 252890016}, "corpusId": 252890016, "publicationVenue": {"id": "3f4e1caf-45e3-4eca-8e26-21fba1856053",
      "name": "Journal of Pharmaceutical Negative Results", "type": "journal", "alternate_names":
      ["J Pharm Negat Result"], "issn": "0976-9234", "url": "http://www.pnrjournal.com/"},
      "url": "https://www.semanticscholar.org/paper/971e4cf7becb79ee92f9e9355dcf38232ed41fe8",
      "title": "Estimating the Time to Deploy Containerized Application using Novel
      Kubernetes based Microservice Architecture over VMware Workstation based Virtualization
      Architecture", "abstract": "Aim: The aim of the study is to estimate the time
      to deploy containerized applications using novel kubernetes based microservice
      architecture over VMware workstation based virtualization architecture. Materials
      and Methods: Sample groups that are considered in the project can be classified
      into two each has 20 samples, one for Microservice architecture and other for
      Virtualization architecture, which are tested using 0.80 for G-power to determine
      the sample size and for t-test analysis. 20 containerized applications have
      been used in each group for estimating deployment time. Results: The azure kubernetes
      based feature of Microservice architecture with efficient accuracy of 60%, which
      by far seems to be better than the Virtualization architecture which gives around
      54.40%. The significance is around 0.482 (p<0.05) and therefore there is a statistical
      insignificant difference among the study group. Conclusion: Novel Kubernetes
      based microservice architecture seems to be better in deploying containerized
      applications over the VMware workstation based virtualization architecture.",
      "venue": "Journal of Pharmaceutical Negative Results", "year": 2022, "referenceCount":
      17, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.pnrjournal.com/index.php/home/article/download/1363/1136/1675",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2022-01-01",
      "journal": {"name": "Journal of Pharmaceutical Negative Results"}, "citationStyles":
      {"bibtex": "@Article{Kumar2022EstimatingTT,\n author = {Sai Vimal Kumar and
      K. Malathi},\n booktitle = {Journal of Pharmaceutical Negative Results},\n journal
      = {Journal of Pharmaceutical Negative Results},\n title = {Estimating the Time
      to Deploy Containerized Application using Novel Kubernetes based Microservice
      Architecture over VMware Workstation based Virtualization Architecture},\n year
      = {2022}\n}\n"}, "authors": [{"authorId": "2239632756", "name": "Sai Vimal Kumar"},
      {"authorId": "2241682551", "name": "K. Malathi"}]}, {"paperId": "e4719ee8265220e7c36edd4b3f3efaad6f6670ab",
      "externalIds": {"DOI": "10.47750/pnr.2022.13.s04.184", "CorpusId": 252892415},
      "corpusId": 252892415, "publicationVenue": {"id": "3f4e1caf-45e3-4eca-8e26-21fba1856053",
      "name": "Journal of Pharmaceutical Negative Results", "type": "journal", "alternate_names":
      ["J Pharm Negat Result"], "issn": "0976-9234", "url": "http://www.pnrjournal.com/"},
      "url": "https://www.semanticscholar.org/paper/e4719ee8265220e7c36edd4b3f3efaad6f6670ab",
      "title": "Managing the Stateful Applications for High Availability using Novel
      Kubernetes based Microservice Architecture over Cloud based Azure Virtualization
      Architecture", "abstract": "Aim: The aim of the study is to estimate the high
      availability of stateful applications using novel kubernetes based microservice
      architecture over cloud based azure virtualization architecture. Materials and
      Methods: Sample groups that are considered in the project can be classified
      into two each has 20 samples, one for Microservice architecture and other for
      Virtualization architecture, which are tested using 0.80 for G-power to determine
      the sample size and for t-test analysis. 20 stateful applications have been
      used in each group for estimating high availability. Results: The novel kubernetes
      based microservice architecture with efficient accuracy of 90.20%,which by far
      seems to be better than the cloud based azure virtualization architecture which
      gives around 88.20%. The significance is around 0.329 (p>0.05) and therefore
      there is a statistical insignificant difference among the study group. Conclusion:
      Novel Kubernetes based microservice architecture seems to be better for stateful
      applications over the cloud based azure virtualization architecture.", "venue":
      "Journal of Pharmaceutical Negative Results", "year": 2022, "referenceCount":
      30, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.pnrjournal.com/index.php/home/article/download/1364/1138/1677",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2022-01-01",
      "journal": {"name": "Journal of Pharmaceutical Negative Results"}, "citationStyles":
      {"bibtex": "@Article{Kumar2022ManagingTS,\n author = {Sai Vimal Kumar},\n booktitle
      = {Journal of Pharmaceutical Negative Results},\n journal = {Journal of Pharmaceutical
      Negative Results},\n title = {Managing the Stateful Applications for High Availability
      using Novel Kubernetes based Microservice Architecture over Cloud based Azure
      Virtualization Architecture},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2239632756", "name": "Sai Vimal Kumar"}]}, {"paperId": "02f00e57d6bd663cbc399d9032f9ad2894f0dee4",
      "externalIds": {"DBLP": "conf/xsede/SfiligoiDW22", "ArXiv": "2205.01004", "DOI":
      "10.1145/3491418.3535123", "CorpusId": 248496129}, "corpusId": 248496129, "publicationVenue":
      {"id": "b85446b1-9eb7-4d6d-bfde-e2b0c6b2cfb6", "name": "Practice and Experience
      in Advanced Research Computing", "type": "conference", "alternate_names": ["PEARC",
      "Pract Exp Adv Res Comput"], "url": "https://www.pearc.org/"}, "url": "https://www.semanticscholar.org/paper/02f00e57d6bd663cbc399d9032f9ad2894f0dee4",
      "title": "Auto-scaling HTCondor pools using Kubernetes compute resources", "abstract":
      "HTCondor has been very successful in managing globally distributed, pleasantly
      parallel scientific workloads, especially as part of the Open Science Grid.
      HTCondor system design makes it ideal for integrating compute resources provisioned
      from anywhere, but it has very limited native support for autonomously provisioning
      resources managed by other solutions. This work presents a solution that allows
      for autonomous, demand-driven provisioning of Kubernetes-managed resources.
      A high-level overview of the employed architectures is presented, paired with
      the description of the setups used in both on-prem and Cloud deployments in
      support of several Open Science Grid communities. The experience suggests that
      the described solution should be generally suitable for contributing Kubernetes-based
      resources to existing HTCondor pools.", "venue": "Practice and Experience in
      Advanced Research Computing", "year": 2022, "referenceCount": 15, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://dl.acm.org/doi/pdf/10.1145/3491418.3535123", "status": "BRONZE"}, "fieldsOfStudy":
      ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Engineering", "source": "s2-fos-model"}, {"category": "Environmental Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book", "Review"],
      "publicationDate": "2022-05-02", "journal": {"name": "Practice and Experience
      in Advanced Research Computing"}, "citationStyles": {"bibtex": "@Article{Sfiligoi2022AutoscalingHP,\n
      author = {I. Sfiligoi and T. DeFanti and F. W\u00fcrthwein},\n booktitle = {Practice
      and Experience in Advanced Research Computing},\n journal = {Practice and Experience
      in Advanced Research Computing},\n title = {Auto-scaling HTCondor pools using
      Kubernetes compute resources},\n year = {2022}\n}\n"}, "authors": [{"authorId":
      "2271565", "name": "I. Sfiligoi"}, {"authorId": "2029117", "name": "T. DeFanti"},
      {"authorId": "9369570", "name": "F. W\u00fcrthwein"}]}]}

      '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Connection:
      - keep-alive
      Content-Length:
      - '298799'
      Content-Type:
      - application/json
      Date:
      - Sat, 09 Mar 2024 20:38:11 GMT
      Via:
      - 1.1 b57cb95c712a6029fa533d1474f7a2d6.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - i_d1gTFr4An0UFb9_USqj_OL-dx7ZzgXN6oGfYpSAMeJyEASRQJBtg==
      X-Amz-Cf-Pop:
      - GRU3-P4
      X-Cache:
      - Miss from cloudfront
      x-amz-apigw-id:
      - UYRL5EWnPHcEpBQ=
      x-amzn-Remapped-Connection:
      - keep-alive
      x-amzn-Remapped-Content-Length:
      - '298799'
      x-amzn-Remapped-Date:
      - Sat, 09 Mar 2024 20:38:11 GMT
      x-amzn-Remapped-Server:
      - gunicorn
      x-amzn-RequestId:
      - 4b02ad2c-886a-401a-b35d-d2314188e19a
    http_version: HTTP/1.1
    status_code: 200
version: 1
