interactions:
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - partner.semanticscholar.org
      user-agent:
      - python-httpx/0.24.1
      x-api-key:
      - C0lOxNwpbR2bJnuIFSjL5ilYOjeUa6mrENswCAd0
    method: GET
    uri: https://partner.semanticscholar.org/recommendations/v1/papers/forpaper/10.1145/3544585.3544600?&fields=abstract,authors,citationCount,corpusId,externalIds,fieldsOfStudy,influentialCitationCount,isOpenAccess,journal,openAccessPdf,paperId,publicationDate,publicationTypes,publicationVenue,referenceCount,s2FieldsOfStudy,title,url,venue,year&limit=100&from=all-cs
  response:
    content: '{"recommendedPapers": [{"paperId": "9c1ab0728d90e35992fe24a1fc43b076e8229eb5",
      "externalIds": {"MAG": "761778066", "CorpusId": 117069249}, "corpusId": 117069249,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/9c1ab0728d90e35992fe24a1fc43b076e8229eb5",
      "title": "Another view on two graph orientation problems", "abstract": "Note:
      PRO 00.07 Reference ROSO-CONF-2000-007 Record created on 2006-02-13, modified
      on 2016-08-08", "venue": "", "year": 2000, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "152", "volume": ""}, "authors": [{"authorId": "2918362", "name": "A. Prodon"}]},
      {"paperId": "dce1fa5033aafd205a2151cb188ce6e117d9dfdc", "externalIds": {"MAG":
      "2137393438", "DBLP": "conf/bmei/YaoY09", "DOI": "10.1109/BMEI.2009.5304812",
      "CorpusId": 2524651}, "corpusId": 2524651, "publicationVenue": "e33b5b9a-d6c0-40c7-93a4-ca5dd12c1837",
      "url": "https://www.semanticscholar.org/paper/dce1fa5033aafd205a2151cb188ce6e117d9dfdc",
      "title": "A Note on the Definition of a Tree", "abstract": "Very often trees
      appear in computer science. For example, information is often stored in treelike
      data structures and the execution of many recursive programs can be regarded
      as a traversal of a tree. Moreover, trees are efficiently used to verify many
      very difficult problems which are still open now. As known, leaves in a tree
      play an important role in the Steiner tree problem. We show that a connected
      graph G is a tree if and only if n1(G) = 2+ \u2211 d\u22653(d\u22122)nd(G),
      where ni(G) is the number of vertices of degree i of G with respect to \u03b4(G)
      \u2264 i \u2264 \u0394(G), and the number \u03c6(G) of faces of a planar graph
      G can be expressed as \u03c6(G) = 2 + 1 2 \u2211 d\u22653(d \u2212 2)nd(G).",
      "venue": "International Conference on BioMedical Engineering and Informatics",
      "year": 2009, "referenceCount": 6, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2009-10-30", "journal": {"name": "2009 2nd International Conference on Biomedical
      Engineering and Informatics", "pages": "1-5"}, "authors": [{"authorId": "145685008",
      "name": "Ming Yao"}, {"authorId": "145323141", "name": "B. Yao"}]}, {"paperId":
      "7a75ccca8fa9b0e27d933634a975e0c86a15b4d1", "externalIds": {"MAG": "595300436",
      "CorpusId": 117863185}, "corpusId": 117863185, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/7a75ccca8fa9b0e27d933634a975e0c86a15b4d1",
      "title": "PROBLEMS IN TOPOLOGICAL GRAPH THEORY : QUESTIONS I CAN''T ANSWER",
      "abstract": ". This paper describes my Problems in Topological Graph Theory,
      which can be accessed through the world-wide-web at This list of problems is
      constantly being revised; the interested reader is encour-aged to submit additions
      and updates.", "venue": "", "year": 1999, "referenceCount": 7, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "89-92", "volume": "47"}, "authors": [{"authorId": "2569739", "name": "D. Archdeacon"}]},
      {"paperId": "ab3eeec31a5e9a68e2387a375cd126e74c35459c", "externalIds": {"DBLP":
      "books/hal/Bessy12", "MAG": "2288843953", "CorpusId": 11829132}, "corpusId":
      11829132, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ab3eeec31a5e9a68e2387a375cd126e74c35459c",
      "title": "Some problems in graph theory and graphs algorithmic theory", "abstract":
      "This document is a long abstract of my research work, concerning graph theory
      and algorithms on graphs. It summarizes some results, gives ideas of the proof
      for some of them and presents the context of the different topics together with
      some interesting open questions connected to them The first part precises the
      notations used in the rest of the paper; the second part deals with some problems
      on cycles in digraphs; the third part is an overview of two graph coloring problems
      and one problem on structures in colored graphs; finally the fourth part focus
      on some results in algorithmic graph theory, mainly in parametrized complexity.",
      "venue": "", "year": 2012, "referenceCount": 175, "citationCount": 2, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate": "2012-02-09",
      "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "2768268", "name":
      "S. Bessy"}]}, {"paperId": "3f41043996c8e1d39f93aae84010e811b70a240f", "externalIds":
      {"DOI": "10.31219/osf.io/a496n", "CorpusId": 240340516}, "corpusId": 240340516,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3f41043996c8e1d39f93aae84010e811b70a240f",
      "title": "Another graph partitioning optimization problem", "abstract": "This
      paper de\ufb01nes yet another graph partitioning problem in the form of a combinatorial
      optimization problem. A reduction from 3-way Cut (cf. [1]) problem shows that
      our claim holds.", "venue": "", "year": 2018, "referenceCount": 1, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://osf.io/a496n/download", "status": "GREEN"}, "fieldsOfStudy": null,
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2018-08-04", "journal": null, "authors": [{"authorId":
      "145327695", "name": "T. Nguyen"}]}, {"paperId": "2ae438b18ad450248214ee81a129c4561b0fae3b",
      "externalIds": {"MAG": "2289646049", "ArXiv": "1504.00341", "DBLP": "journals/corr/Farina15",
      "CorpusId": 14836448}, "corpusId": 14836448, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/2ae438b18ad450248214ee81a129c4561b0fae3b",
      "title": "A linear time algorithm to compute the impact of all the articulation
      points", "abstract": "The articulation points of an undirected connected graphs
      are those vertices whose removal increases the number of connected components
      of the graph, i.e. the vertices whose removal disconnects the graph. However,
      not all the articulation points are equal: the removal of some of them might
      end in a single vertex disconnected from the graph, whilst in other cases the
      graph can be split in several small pieces. In order to measure the effect of
      the removal of an articulation point, in \\cite{AFL12} has been proposed the
      impact, defined as the number of vertices that get disconnected from the main
      (largest) surviving connected component (CC). In this paper we present the first
      linear time algorithm ($\\mathcal{O}(m+n)$ for a graph with $n$ vertices and
      $m$ edges) to compute the impact of all the articulation points of the graph,
      thus improving from the $\\mathcal{O}(a(m+n))\\approx\\mathcal{O}(nm+n^2)$ of
      the na\\\"ive algorithm, with $a$ being the number of articulation points of
      the graph.", "venue": "arXiv.org", "year": 2015, "referenceCount": 6, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "external"}, {"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2015-04-01", "journal": {"name": "ArXiv", "volume": "abs/1504.00341"},
      "authors": [{"authorId": "81885589", "name": "Gabriele Farina"}]}, {"paperId":
      "66e10ae20ff7bc6d8c83fc909a328a931c06b56c", "externalIds": {"MAG": "1581266644",
      "DOI": "10.1007/978-3-642-03822-8_3", "CorpusId": 60992213}, "corpusId": 60992213,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/66e10ae20ff7bc6d8c83fc909a328a931c06b56c",
      "title": "Minimum Spanning Trees", "abstract": null, "venue": "", "year": 2010,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "", "pages": "19-32", "volume": ""}, "authors": [{"authorId":
      "1703063", "name": "W. Hochst\u00e4ttler"}, {"authorId": "50475819", "name":
      "Alexander Schliep"}]}, {"paperId": "1a79452afce78c44961ebde28310a1ae93889563",
      "externalIds": {"MAG": "2075729213", "DBLP": "journals/comgeo/AichholzerBBBKR15",
      "DOI": "10.1016/j.comgeo.2015.01.002", "CorpusId": 43596885}, "corpusId": 43596885,
      "publicationVenue": "d9046364-b534-4cb3-9e20-4dafd5fac877", "url": "https://www.semanticscholar.org/paper/1a79452afce78c44961ebde28310a1ae93889563",
      "title": "Reprint of: Theta-3 is connected", "abstract": null, "venue": "Computational
      geometry", "year": 2015, "referenceCount": 11, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2015-07-01", "journal": {"name": "Comput. Geom.", "pages": "407-414", "volume":
      "48"}, "authors": [{"authorId": "1722964", "name": "O. Aichholzer"}, {"authorId":
      "1730095", "name": "S. Bae"}, {"authorId": "143880377", "name": "Luis Barba"},
      {"authorId": "144435719", "name": "P. Bose"}, {"authorId": "31721430", "name":
      "Matias Korman"}, {"authorId": "1774223", "name": "Andr\u00e9 van Renssen"},
      {"authorId": "1784150", "name": "Perouz Taslakian"}, {"authorId": "1806582",
      "name": "S. Verdonschot"}]}, {"paperId": "8606499bc45921285c6a7bfe10fc751009bece08",
      "externalIds": {"ArXiv": "1306.3916", "DBLP": "journals/corr/abs-1306-3916",
      "MAG": "2950261448", "DOI": "10.1016/j.jcta.2014.02.006", "CorpusId": 12043969},
      "corpusId": 12043969, "publicationVenue": "8a32f160-84d2-4c72-b3ab-c5de11116574",
      "url": "https://www.semanticscholar.org/paper/8606499bc45921285c6a7bfe10fc751009bece08",
      "title": "Two notions of unit distance graphs", "abstract": null, "venue": "Journal
      of combinatorial theory. Series A", "year": 2013, "referenceCount": 14, "citationCount":
      25, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "external"}, {"category": "Mathematics", "source": "s2-fos-model"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2013-06-17", "journal": {"name": "J. Comb. Theory, Ser.
      A", "pages": "1-17", "volume": "125"}, "authors": [{"authorId": "1734327", "name":
      "N. Alon"}, {"authorId": "1679129", "name": "A. Kupavskii"}]}, {"paperId": "4e41012ae05c58130fcf02fc47f65ec4620fafae",
      "externalIds": {"CorpusId": 16808789}, "corpusId": 16808789, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/4e41012ae05c58130fcf02fc47f65ec4620fafae",
      "title": "A 2-Level Cactus Tree Model for the System of Minimum and Minimum+1
      Edge . . .", "abstract": "3] Ye. Dinitz, \\The 3-edge components and the structural
      description of all 3-edge cuts in a graph\", 5] Ye. Dinitz and Z. Nutov, \\A
      2-level cactus tree model for the minimum and minimum+1 edge cuts in a graph
      and its incremental maintenance\", Proc. the 27th Symposium on Theory of Computing,
      1995, 509{518. 6] Ye. Dinitz and Z. Nutov, \\A 2-level cactus tree model for
      the minimum and mini-mum+1 edge cuts in a graph and its incremental maintenance.
      Part I: the odd case\", a manuscript. 7] Ye. Dinitz and Z. Nutov, \\Cactus-tree
      type models for families of bisections of a set\", a manuscript. 8] Ye. Dinitz
      and A. Vainshtein, \\The connectivity carcass of a vertex subset in a graph
      and its incremental maintenance\", 37 The worst case time for each query is
      O(1). The initialization time is polynomial in n, and the space required is
      O(n). Relying on 17], the complexity of incremental maintaining can be reduced
      to O((u + q + n)(u + q; n)). Notice that the above complexities of maintenance
      can be reduced substituting each instance of n by n +2 in the following way.
      At the preprocessing stage, we can build the quotient graph G 0 by shrinking
      each of the n 0 +2 (0 + 2)-classes of G into a single supervertex and apply
      our algorithm to G 0 , with n 0 +2 supervertices, instead of G. In this version,
      the current (0 + 2)-class of a vertex v of G is found as the current (0 + 2)-class
      of the supervertex of G 0 corresponding to the initial (0 + 2)-class of v. This
      is done via two queries, where nding the supervertex can be supported by a static
      data structure in O(1) time. 5 Concluding remarks 1. Observe that the properties
      mentioned in Theorem 4.1 are similar to those of the cactus tree model for the
      minimum cuts, though more complicated. Since the structure of the modeling cuts
      is explicit and, in a sense, simple, and since the representation is compact,
      our model seems to be convenient to represent the minimum and minimum+1 cuts
      of graphs in various applications. 2. It is likely that the 2-level cactus model
      can be a useful tool for handling edge-augmentation problems when the increase
      of the connectivity is 2. Another possible direction is to use our representation
      for eeective maintenance of optimal augmentation sets of an incremental \u2026",
      "venue": "", "year": 1998, "referenceCount": 8, "citationCount": 5, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "143817739",
      "name": "J. Leeuwen"}]}, {"paperId": "d8656b9f127cb92a41d5eec5eb6d5cc32519aa7f",
      "externalIds": {"DBLP": "conf/isaac/FeuersteinM93", "MAG": "2159546206", "DOI":
      "10.7155/jgaa.00009", "CorpusId": 10367924}, "corpusId": 10367924, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/d8656b9f127cb92a41d5eec5eb6d5cc32519aa7f",
      "title": "Memory Paging for Connectivity and Path Problems in Graphs", "abstract":
      "We extend the Paging Problem to the case in which the items that are stored
      in the cache memory represent information about a graph. We propose on-line
      algorithms for two dierent connectivity problems in this context, for particular
      classes of graphs and under dierent cost assumptions. In the Path-paging problem
      we assume that the cache contains edges of the graph and queries to be answered
      are of the kind \\report a path from i to j\"; to answer the query it is necessary
      to have in memory all the edges of a path from i to j. In this case the answer
      to a query is not a single piece of information stored in memory. In the Connectivity
      problem the edges of the transitive closure of a given graph are stored in memory
      and we want to answer connectivity queries. In order to positively answer connectivity
      queries of the type \\is i connected with j?\", it is possible to answer the
      query even if the cache does not contain the edge (i;j). Most of our algorithms
      are optimal and fairly simple.", "venue": "J. Graph Algorithms Appl.", "year":
      1993, "referenceCount": 23, "citationCount": 20, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "1993-12-15", "journal": {"name": "J. Graph Algorithms Appl.", "pages": "1-22",
      "volume": "2"}, "authors": [{"authorId": "2722051", "name": "E. Feuerstein"},
      {"authorId": "1387446686", "name": "A. Marchetti-Spaccamela"}]}, {"paperId":
      "684a91792d08bad9234d318790984a7b6e617475", "externalIds": {"MAG": "2291246510",
      "ArXiv": "1311.4852", "CorpusId": 119659504}, "corpusId": 119659504, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/684a91792d08bad9234d318790984a7b6e617475",
      "title": "On the construction of tree decompositions of hypercubes", "abstract":
      "There are different concepts regarding to tree decomposition of a graph $G$.
      For the Hypercube $Q_n$, these concepts have been shown to have many applications.
      But some diverse papers on this subject make it difficult to follow what is
      precisely known. In this note first we will mention some known results on the
      tree decomposition of hypercubes and then introduce new explicit constructions
      for the previously known and unknown cases.", "venue": "", "year": 2013, "referenceCount":
      12, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2013-11-19", "journal": {"name":
      "arXiv: Combinatorics", "volume": ""}, "authors": [{"authorId": "20737423",
      "name": "Negin Karisani"}, {"authorId": "1730392", "name": "E. Mahmoodian"}]},
      {"paperId": "7d07c676ee276d10630aca0c1bc83556814a2711", "externalIds": {"CorpusId":
      11559782}, "corpusId": 11559782, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/7d07c676ee276d10630aca0c1bc83556814a2711",
      "title": "Some Notes on the Dynamic Connectivity Lower Bound ?", "abstract":
      "We want to encode a graph of n vertices in a data structure supporting the
      following operations: \u2013 insert edge(u, v): inserts and edge connecting
      vertex u to vertex v in the graph encoding. \u2013 delete edge(u, v): removes
      from the encoding the edge between u and v. \u2013 connected(u, v): answers
      yes if there is a path connecting u to v in the encoded graph, otherwise answers
      no. The first two are update operations, while the third is a query operation.
      Solutions: Not comparable, but exhibiting the existence of update-query trade-off.",
      "venue": "", "year": 2005, "referenceCount": 7, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "1711327",
      "name": "Orestis Telelis"}]}, {"paperId": "992986c934747fa5cb333463f7d65ebb45eb70ab",
      "externalIds": {"ArXiv": "1707.08047", "MAG": "2747715876", "CorpusId": 51814361},
      "corpusId": 51814361, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/992986c934747fa5cb333463f7d65ebb45eb70ab",
      "title": "Not Conway''s 99-Graph Problem", "abstract": "Conway''s 99-graph problem
      is the second problem amongst the five 1000\\$ 2017 open problems set. Four
      out of the five remain unsolved to this day, including the 99-graph problem.
      In this paper we quote Conway''s definition of the problem and give an alternative
      interpretation of it, which we humorously name \"not Conway''s 99-graph problem\".
      We solve the alternative interpretation completely.", "venue": "", "year": 2017,
      "referenceCount": 2, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2017-07-25", "journal": {"name":
      "arXiv: Combinatorics", "volume": ""}, "authors": [{"authorId": "102924564",
      "name": "Sa\u2019ar Zehavi"}, {"authorId": "102823772", "name": "Ivo Fagundes
      David de Olivera"}]}, {"paperId": "ebc079eb670e72206703c9177f162d8a1ea0d441",
      "externalIds": {"MAG": "2169751036", "DOI": "10.1109/24.210269", "CorpusId":
      124292011}, "corpusId": 124292011, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ebc079eb670e72206703c9177f162d8a1ea0d441",
      "title": "Comments on \"Enumeration of all minimal cutsets for a node pair in
      a graph", "abstract": "The commenters point out that the algorithm of S.A. Kumar
      and S.H. Lee for the enumeration of all minimal s-t cutsets is defective (see
      ibid., vol.R-26, p.51-5, April 1979). It is illustrated through an example that
      their algorithm misses several minimal cutsets. The commenters cite two reasons
      for this: the adjacency problem and the back-vertex problem. >", "venue": "",
      "year": 1993, "referenceCount": 3, "citationCount": 8, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "1993-03-01", "journal": {"name": "IEEE Transactions on Reliability", "pages":
      "44-45", "volume": "42"}, "authors": [{"authorId": "52026059", "name": "V. Sankar"},
      {"authorId": "145193793", "name": "V. C. Prasad"}, {"authorId": "46455433",
      "name": "K. Rao"}]}, {"paperId": "9e40076a7a90309285bb2b284bc698ad51159627",
      "externalIds": {"MAG": "2952226354", "DBLP": "journals/corr/abs-1209-0700",
      "ArXiv": "1209.0700", "DOI": "10.1016/j.ipl.2013.01.016", "CorpusId": 7040381},
      "corpusId": 7040381, "publicationVenue": "44ecc2bb-f8fd-4c6d-bd54-30ca098be91d",
      "url": "https://www.semanticscholar.org/paper/9e40076a7a90309285bb2b284bc698ad51159627",
      "title": "A simple test on 2-vertex- and 2-edge-connectivity", "abstract": null,
      "venue": "Information Processing Letters", "year": 2012, "referenceCount": 17,
      "citationCount": 75, "influentialCitationCount": 10, "isOpenAccess": true, "openAccessPdf":
      {"url": "https://arxiv.org/pdf/1209.0700", "status": "GREEN"}, "fieldsOfStudy":
      ["Mathematics", "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2012-09-04", "journal": {"name": "Inf. Process. Lett.", "pages": "241-244",
      "volume": "113"}, "authors": [{"authorId": "34189607", "name": "Jens M. Schmidt"}]},
      {"paperId": "d4e1ca419f3ea59a360cffbaad3ebe2068e4c744", "externalIds": {"MAG":
      "2187431552", "CorpusId": 124224316}, "corpusId": 124224316, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/d4e1ca419f3ea59a360cffbaad3ebe2068e4c744",
      "title": "On construction for tree decomposition of hypercube Qn", "abstract":
      "Hypercube Qn is a graph in which the vertices are all binary vectors of length
      n, and two vertices are adjacent if and only if their components dier in exactly
      one place. There are dierent concepts regarding to tree decomposition of a graph
      G. For Qn, these concepts have been shown to have many applications. But some
      diverse papers on this subject make it dicult to follow what is precisely known.
      In this note first we will mention some known results on the tree decomposition
      of hypercubes and then introduce a new explicit constructions for the previously
      known and unknown cases.", "venue": "", "year": 2012, "referenceCount": 15,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "authors":
      [{"authorId": "20737423", "name": "Negin Karisani"}, {"authorId": "1730392",
      "name": "E. Mahmoodian"}]}, {"paperId": "18b1598183996e8d972e57ab95a6c7d26ea92a06",
      "externalIds": {"CorpusId": 15846985}, "corpusId": 15846985, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/18b1598183996e8d972e57ab95a6c7d26ea92a06",
      "title": "Reports in Informatics Issn 0333-3590 Lex M versus Mcs-m Lex M versus
      Mcs-m", "abstract": "We study the problem of minimal triangulation of graphs.
      One of the first algorithms to solve this problem is Lex M, which was presented
      in 1976. A new algorithm, and a simplification of Lex M, called MCS-M was presented
      in 2002. In this paper we compare these two algorithms and show that they produce
      the same set of chordal graphs, answering an open question mentioned by the
      authors of MCS-M.", "venue": "", "year": 2004, "referenceCount": 15, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "2286924", "name": "Yngve Villanger"},
      {"authorId": "2104665959", "name": "Lex M versus MCS-M"}]}, {"paperId": "aa527b1d24845fa1cf9e491859cdfdb0db8c61a9",
      "externalIds": {"DBLP": "journals/int/ChaplickMUW16", "MAG": "3013687770", "ArXiv":
      "1411.1021", "CorpusId": 1683194}, "corpusId": 1683194, "publicationVenue":
      "ae788ef3-e4c4-426e-bf0b-f281847fdf26", "url": "https://www.semanticscholar.org/paper/aa527b1d24845fa1cf9e491859cdfdb0db8c61a9",
      "title": "A Note on Concurrent Graph Sharing Games", "abstract": "In the concurrent
      graph sharing game, two players, called First and Second, share the vertices
      of a connected graph with positive vertex-weights summing up to $1$ as follows.
      The game begins with First taking any vertex. In each proceeding round, the
      player with the smaller sum of collected weights so far chooses a non-taken
      vertex adjacent to a vertex which has been taken, i.e., the set of all taken
      vertices remains connected and one new vertex is taken in every round. (It is
      assumed that no two subsets of vertices have the same sum of weights.) One can
      imagine the players consume their taken vertex over a time proportional to its
      weight, before choosing a next vertex. In this note we show that First has a
      strategy to guarantee vertices of weight at least $1/3$ regardless of the graph
      and how it is weighted. This is best-possible already when the graph is a cycle.
      Moreover, if the graph is a tree First can guarantee vertices of weight at least
      $1/2$, which is clearly best-possible.", "venue": "Integers", "year": 2014,
      "referenceCount": 12, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2014-11-04", "journal":
      {"name": "Integers", "pages": "G1", "volume": "16"}, "authors": [{"authorId":
      "1798388", "name": "S. Chaplick"}, {"authorId": "1786777", "name": "Piotr Micek"},
      {"authorId": "1740764", "name": "T. Ueckerdt"}, {"authorId": "2101467", "name":
      "Veit Wiechert"}]}, {"paperId": "a0b8115d23bbaf919dd37e5741507e9233ccb14f",
      "externalIds": {"MAG": "2073087946", "DBLP": "journals/dm/Keqin85", "DOI": "10.1016/0012-365X(85)90067-6",
      "CorpusId": 21338101}, "corpusId": 21338101, "publicationVenue": "2f38f299-9909-4c8e-a12e-76fca8afb42e",
      "url": "https://www.semanticscholar.org/paper/a0b8115d23bbaf919dd37e5741507e9233ccb14f",
      "title": "A problem on algebraic graph theory", "abstract": null, "venue": "Discrete
      Mathematics", "year": 1985, "referenceCount": 3, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "1985-03-01", "journal": {"name": "Discret. Math.", "pages": "107-109", "volume":
      "54"}, "authors": [{"authorId": "66446769", "name": "Feng Keqin"}]}, {"paperId":
      "69d31752e09d8d5ec96ba7dfcccfab9b03666b84", "externalIds": {"DBLP": "journals/dam/FialaGKLP12",
      "MAG": "2099793997", "DOI": "10.1016/j.dam.2011.02.004", "CorpusId": 17425083},
      "corpusId": 17425083, "publicationVenue": "8287474c-2cf8-4dfe-b1c6-cf6119d879ab",
      "url": "https://www.semanticscholar.org/paper/69d31752e09d8d5ec96ba7dfcccfab9b03666b84",
      "title": "Distance three labelings of trees", "abstract": null, "venue": "Discrete
      Applied Mathematics", "year": 2012, "referenceCount": 41, "citationCount": 11,
      "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "external"}, {"category": "Computer Science", "source":
      "external"}, {"category": "Mathematics", "source": "s2-fos-model"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2012-04-01", "journal": {"name": "Discret. Appl. Math.",
      "pages": "764-779", "volume": "160"}, "authors": [{"authorId": "40160286", "name":
      "J. Fiala"}, {"authorId": "1720941", "name": "P. Golovach"}, {"authorId": "144775704",
      "name": "Jan Kratochv\u00edl"}, {"authorId": "1718606", "name": "B. Lidick\u00fd"},
      {"authorId": "8867084", "name": "D. Paulusma"}]}, {"paperId": "792a229a1447fd7d7b37b32a67230d4107d18103",
      "externalIds": {"MAG": "2157246792", "DBLP": "journals/combinatorics/Domshlak02",
      "DOI": "10.37236/1640", "CorpusId": 5301836}, "corpusId": 5301836, "publicationVenue":
      "98ea9a6a-c9d7-4b4e-97ec-ee582bd62fa2", "url": "https://www.semanticscholar.org/paper/792a229a1447fd7d7b37b32a67230d4107d18103",
      "title": "On Recursively Directed Hypercubes", "abstract": "In this paper we
      introduce the recursively directed hypercubes , and analyze some of their structural
      properties. We show that every recursively directed hypercube is acyclic, and
      has a unique pair of source and sink nodes. The main contribution of the paper
      is an analysis of distances between the nodes in such a graph. We show that
      the distance from the source node to any other node, and from any node to the
      sink node is bounded by $n+1$, where $n$ is the dimension of the hypercube,
      but the diameter of a recursively directed hypercube may be exponential in $n$.",
      "venue": "Electronic Journal of Combinatorics", "year": 2001, "referenceCount":
      13, "citationCount": 10, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.combinatorics.org/ojs/index.php/eljc/article/download/v9i1r23/pdf",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2001-05-07", "journal": {"name": "Electron.
      J. Comb.", "volume": "9"}, "authors": [{"authorId": "1735824", "name": "C. Domshlak"}]},
      {"paperId": "586b6a34456a13e5d32a6f8bc6c4f9e96f848e2a", "externalIds": {"DBLP":
      "journals/networks/PandaD07", "MAG": "1976179294", "DOI": "10.1002/net.20198",
      "CorpusId": 3978885}, "corpusId": 3978885, "publicationVenue": "69d79d4c-49aa-4c2b-b616-80100a634f67",
      "url": "https://www.semanticscholar.org/paper/586b6a34456a13e5d32a6f8bc6c4f9e96f848e2a",
      "title": "On tree 3\u2010spanners in directed path graphs", "abstract": "A spanning
      tree T of a graph G is said to be a tree t\u2010spanner if the distance between
      any two vertices in T is at most t times their distance in G. While the complexity
      of the problem of recognizing whether a graph has a tree t\u2010spanner is known
      for any fixed t\u22603, the case t = 3 is still open. H.\u2010O. Le and V. B.
      Le (1999, Networks, 34(2), 81\u201087) have shown that every directed path graph
      admits a tree 3\u2010spanner by proposing an algorithm to construct a tree 3\u2010spanner
      of a given directed path graph. In this paper, we point out a flaw in their
      algorithm by producing a directed path graph for which their algorithm fails
      to produce a tree 3\u2010spanner although the graph admits a tree 3\u2010spanner.
      Furthermore, we show that directed path graphs need not admit tree 3\u2010spanners
      in general. Next, we show that directed path graphs of diameter two always admit
      tree 2\u2010spanners and hence tree 3\u2010spanners. Finally, we show that a
      tree 2\u2010spanner of a diameter two directed path graph can be constructed
      in linear time. \u00a9 2007 Wiley Periodicals, Inc. NETWORKS, Vol. 50(3), 203\u2013210
      2007", "venue": "Networks", "year": 2007, "referenceCount": 21, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://onlinelibrary.wiley.com/doi/pdfdirect/10.1002/net.20198", "status":
      "BRONZE"}, "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2007-10-01", "journal": {"name": "Networks",
      "volume": "50"}, "authors": [{"authorId": "34775605", "name": "B. S. Panda"},
      {"authorId": "48806821", "name": "Anita Das"}]}, {"paperId": "44a97b79ed90f17e8dbe58e330624f7d398ab729",
      "externalIds": {"MAG": "1986475947", "DOI": "10.1007/BF01068311", "CorpusId":
      119895681}, "corpusId": 119895681, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/44a97b79ed90f17e8dbe58e330624f7d398ab729",
      "title": "A method of constructing minimal failure cuts", "abstract": null,
      "venue": "", "year": 1991, "referenceCount": 2, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "1991-05-01", "journal": {"name": "Cybernetics and Systems Analysis", "pages":
      "320-323", "volume": "27"}, "authors": [{"authorId": "2070405946", "name": "D.
      Alekseev"}]}, {"paperId": "134d037b6745d85a659f73fac50d3bed63ce163b", "externalIds":
      {"DBLP": "conf/wg/PatrignaniP01", "MAG": "1924888395", "DOI": "10.1007/3-540-45477-2_26",
      "CorpusId": 5152374}, "corpusId": 5152374, "publicationVenue": "d62ca42c-06bc-40ff-9463-4ec00915599b",
      "url": "https://www.semanticscholar.org/paper/134d037b6745d85a659f73fac50d3bed63ce163b",
      "title": "The Complexity of the Matching-Cut Problem", "abstract": null, "venue":
      "International Workshop on Graph-Theoretic Concepts in Computer Science", "year":
      2001, "referenceCount": 8, "citationCount": 45, "influentialCitationCount":
      6, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2001-06-14", "journal": {"pages": "284-295"}, "authors":
      [{"authorId": "1737726", "name": "M. Patrignani"}, {"authorId": "1721655", "name":
      "M. Pizzonia"}]}, {"paperId": "1caf25b50a3e7c00a1f8e0e1f7065e8af2f3259d", "externalIds":
      {"MAG": "2112910303", "DOI": "10.1109/99.537087", "CorpusId": 122860357}, "corpusId":
      122860357, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1caf25b50a3e7c00a1f8e0e1f7065e8af2f3259d",
      "title": "Making connections [graph theory]", "abstract": "One of the problems
      that occurs repeatedly in scientific computing is deciding whether an object
      is connected or disconnected. It happens that this question is related to finding
      a spanning tree for a graph. In other words, if you have a set of points with
      connections between some pairs of them, you would like the least number of connections
      that still keeps the set connected. You can find this minimum spanning tree
      with a method called depth first search, among other ways. The paper addresses
      the question of determining connected components.", "venue": "", "year": 1996,
      "referenceCount": 0, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "IEEE Computational Science and Engineering", "pages":
      "9-12", "volume": "3"}, "authors": [{"authorId": "2645879", "name": "I. Beichl"},
      {"authorId": "21851704", "name": "F. Sullivan"}]}, {"paperId": "de25af6fb22d43b90f5bc1ddf585d379751e6845",
      "externalIds": {"DBLP": "journals/corr/abs-2104-09312", "ArXiv": "2104.09312",
      "CorpusId": 233297077}, "corpusId": 233297077, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/de25af6fb22d43b90f5bc1ddf585d379751e6845",
      "title": "Minimizing the total weighted pairwise connection time in network
      construction problems", "abstract": "It is required to find an optimal order
      of constructing the edges of a network so as to minimize the sum of the weighted
      connection times of relevant pairs of vertices. Construction can be performed
      anytime anywhere in the network, with a fixed overall construction speed. The
      problem is strongly NP-hard even on stars. We present polynomial algorithms
      for the problem on trees with a fixed number of leaves, and on general networks
      with a fixed number of relevant pairs.", "venue": "arXiv.org", "year": 2021,
      "referenceCount": 11, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-04-19", "journal":
      {"name": "ArXiv", "volume": "abs/2104.09312"}, "authors": [{"authorId": "1711724",
      "name": "I. Averbakh"}]}, {"paperId": "6ae70c6bfc7358907949aa8b5bdbdd191661a860",
      "externalIds": {"MAG": "2551173872", "ArXiv": "1611.06529", "DBLP": "journals/corr/GawrychowskiU16",
      "CorpusId": 6802546}, "corpusId": 6802546, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/6ae70c6bfc7358907949aa8b5bdbdd191661a860",
      "title": "A note on distance labeling in planar graphs", "abstract": "A distance
      labeling scheme is an assignments of labels, that is binary strings, to all
      nodes of a graph, so that the distance between any two nodes can be computed
      from their labels and the labels are as short as possible. A major open problem
      is to determine the complexity of distance labeling in unweighted and undirected
      planar graphs. It is known that, in such a graph on $n$ nodes, some labels must
      consist of $\\Omega(n^{1/3})$ bits, but the best known labeling scheme uses
      labels of length $O(\\sqrt{n}\\log n)$ [Gavoille, Peleg, P\\''erennes, and Raz,
      J. Algorithms, 2004]. We show that, in fact, labels of length $O(\\sqrt{n})$
      are enough.", "venue": "arXiv.org", "year": 2016, "referenceCount": 12, "citationCount":
      12, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "external"}, {"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2016-11-20", "journal": {"name": "ArXiv",
      "volume": "abs/1611.06529"}, "authors": [{"authorId": "1683786", "name": "Pawe\u0142
      Gawrychowski"}, {"authorId": "144469774", "name": "P. Uzna\u0144ski"}]}, {"paperId":
      "f57a44bf74f695a5dd4b696bc539813182089f72", "externalIds": {"CorpusId": 6742442},
      "corpusId": 6742442, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/f57a44bf74f695a5dd4b696bc539813182089f72",
      "title": "On determining number and metric dimension of graphs", "abstract":
      "This paper initiates a study on the problem of computing the difference between
      the metric dimension and the determining number of graphs. We provide new proofs
      and results on the determining number of trees and Cartesian products of graphs
      and establish some lower bounds on the difference between the two parameters.",
      "venue": "", "year": 2007, "referenceCount": 22, "citationCount": 34, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": [{"authorId": "144514502", "name": "J. C\u00e1ceres"},
      {"authorId": "144420364", "name": "D. Garijo"}, {"authorId": "1893590", "name":
      "M. L. Puertas"}, {"authorId": "1714475", "name": "C. Seara"}]}, {"paperId":
      "9b4a45a72c26db4e15a78ca224c14d733a3e6922", "externalIds": {"MAG": "2000595973",
      "DBLP": "conf/spaa/EvenL92", "DOI": "10.1145/140901.140908", "CorpusId": 13516309},
      "corpusId": 13516309, "publicationVenue": "43893b55-fde6-4e2b-9d2e-c15a669a1f94",
      "url": "https://www.semanticscholar.org/paper/9b4a45a72c26db4e15a78ca224c14d733a3e6922",
      "title": "Layered cross product\u2014a technique to construct interconnection
      networks", "abstract": "We introduce a Layered Cross Product \u2014 A Technique
      to Construct Interconnection Networks Shimon Even* and Ami Litmant Computer
      Science Department Technion, Israel Institute of Technology Haifa, Israel 32000
      Layered Cross Product, LCP, of layered graphs and show that several well known
      networks are LCP-S of simple layered graphs, such as trees. Some important properties
      of these networks are shown to be trivial consequences, once a network is presented
      as an LCP of simpler graphs. We believe that this new tool will make the construction
      of new networks easier, and it will simplify the study of the properties of
      known and new networks.", "venue": "ACM Symposium on Parallelism in Algorithms
      and Architectures", "year": 1992, "referenceCount": 11, "citationCount": 14,
      "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "1992-06-01", "journal": {"pages": "60-69"}, "authors": [{"authorId": "1733075",
      "name": "S. Even"}, {"authorId": "145903595", "name": "A. Litman"}]}, {"paperId":
      "19868844fa517ea03f47feb71042b2629676fc0e", "externalIds": {"CorpusId": 13296182},
      "corpusId": 13296182, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/19868844fa517ea03f47feb71042b2629676fc0e",
      "title": "2 F eb 2 00 5 How to count trees ?", "abstract": "We propose a new
      topological invariant of unlabeled trees of N nodes. The invariant is a set
      of N \u00d7 2 matrices of integers, with j k d i,j and vi as the matrix elements,
      where di,j are the elements of the distance matrix and vi denotes i-th node''s
      degree and k \u2208 Z. To compare the invariant calculated for possibly different
      graphs, the matrix rows are ordered with respect to first column, and \u2014
      if necessary \u2014 with respect to the second one. We use the new invariant
      to evaluate from below the number of topologically different unlabeled trees
      up to N = 17. The results slightly exceed the asymptotic evaluation of Otter.",
      "venue": "", "year": 2005, "referenceCount": 9, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "102699689", "name": "S. Piec"}, {"authorId":
      "3209892", "name": "K. Malarz"}, {"authorId": "98639388", "name": "K. K. lakowski"}]},
      {"paperId": "c54a575be47b73220196ba56a03b6131164b3819", "externalIds": {"MAG":
      "2256395349", "DOI": "10.17969/JN.V13I1.840", "CorpusId": 124538007}, "corpusId":
      124538007, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/c54a575be47b73220196ba56a03b6131164b3819",
      "title": "IDENTIFY CONNECTIVITY GRAPH USING A MODIFIED PR\u00dcFER\u2019S ALGORITHM
      LABELLING TREES", "abstract": "Connectivity of graph easily can be given when
      we see it with the bare of eyes, but needs an algorithm that can assure the
      connectivity in computerization. Some graphs require the connectivity in their
      definitions, such as Hamiltonian graph, Eulerian graph and tree. The connectivity
      become important in order to solve any of graphs'' problems by using computer
      technology. Most of the algorithm cannot run perfectly, if the graph which is
      given was not connected. It is happened to Djikstra and Prufer graphs for example.
      However, this study will provide the solution by modifying Prufer algorithm
      to show the connectivity in the graph.", "venue": "", "year": 2013, "referenceCount":
      8, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2013-03-01",
      "journal": {"name": "", "volume": "13"}, "authors": [{"authorId": "2078170710",
      "name": "Al Aiyub"}, {"authorId": "103356282", "name": "M. Ihsan"}, {"authorId":
      "18154757", "name": "Rahma Zuhra"}]}, {"paperId": "5942616aef4c13559cc08a1b30a92703efbffc15",
      "externalIds": {"CorpusId": 18995}, "corpusId": 18995, "publicationVenue": null,
      "url": "https://www.semanticscholar.org/paper/5942616aef4c13559cc08a1b30a92703efbffc15",
      "title": "MICHAEL J. PELSMAJER Brief Research Summary (October 2007)", "abstract":
      "Mostly I study graph theory: sometimes more as mathematics (structural, extremal)
      and sometimes more as computer science (algorithms, complexity), although one
      often helps with the other, and I have interests (graph drawing, tree-width)
      that fall squarely in the middle of of the two fields. As for topics, I have
      not particularly specialized or restricted the types of problems I work on.
      Rather, as I look back it seems that for the most part, I selected projects
      based simply on niceness: of a problem, the people involved, and whether there
      is an application. Unfortunately my style of working makes it harder to quickly
      summarize my work, even assuming that the reader knows is familiar with basic
      graph theory concepts (terminology will agree with [84] or [27] whenever possible.)
      However, this is what I must do next. Unless specified otherwise, all graphs
      are assumed to be simple, and G is a graph on n vertices.", "venue": "", "year":
      2007, "referenceCount": 78, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "1709295",
      "name": "M. J. Pelsmajer"}]}, {"paperId": "556bb7c8892c0a5b4e467dd9a0ae29eb70606f77",
      "externalIds": {"CorpusId": 44830960}, "corpusId": 44830960, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/556bb7c8892c0a5b4e467dd9a0ae29eb70606f77",
      "title": "1 : 2 2-Connectivity in Directed Graphs", "abstract": "We survey some
      recent results on 2-edge and 2-vertex connectivity problems in directed graphs.
      Despite being complete analogs of the corresponding notions on undirected graphs,
      in digraphs 2vertex and 2-edge connectivity have a much richer and more complicated
      structure. It is thus not surprising that 2-connectivity problems on directed
      graphs appear to be more difficult than on undirected graphs. For undirected
      graphs it has been known for over 40 years how to compute all bridges, articulation
      points, 2-edgeand 2-vertex-connected components in linear time, by simply using
      depth-first search. In the case of digraphs, however, the very same problems
      have been much more challenging and required the development of new tools and
      techniques. 1998 ACM Subject Classification E.1 [Graphs and Networks] Trees,
      F.2.2 [Nonnumerical Algorithms and Problems] Computations on Discrete Structures,
      G.2.2 [Graph Algorithms] Trees", "venue": "", "year": 2016, "referenceCount":
      33, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate": null, "journal":
      null, "authors": [{"authorId": "2317777", "name": "L. Georgiadis"}, {"authorId":
      "1688493", "name": "G. Italiano"}, {"authorId": "3170658", "name": "Nikos Parotsidis"}]},
      {"paperId": "4d39232a5b86f1a09a5d0fd88266cca9940dfac6", "externalIds": {"MAG":
      "2144852945", "DOI": "10.1109/TCS.1985.1085721", "CorpusId": 122814169}, "corpusId":
      122814169, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4d39232a5b86f1a09a5d0fd88266cca9940dfac6",
      "title": "An approximate formula for counting trees in a graph", "abstract":
      "In the paper, an approximate formula for counting trees in a graph is presented.
      The formula estimates the change in the number of trees of a reference graph
      after adding or removing a certain number of lines to obtain a graph with the
      same number of lines as the graph considered. It is assumed that the reference
      graph and the graph analyzed have the same number of points. It is also assumed
      that the number of trees of a reference graph changes with a change in the number
      of lines identically as in a uniform graph. Special classes of reference graphs
      are discussed and formulas for counting trees are given.", "venue": "", "year":
      1985, "referenceCount": 11, "citationCount": 10, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "1985-04-01",
      "journal": {"name": "IEEE Transactions on Circuits and Systems", "pages": "382-385",
      "volume": "32"}, "authors": [{"authorId": "49421541", "name": "J. Wojciechowski"}]},
      {"paperId": "87f8c7e5d93dc3f8e376bcc117d5917a3ef42105", "externalIds": {"DBLP":
      "conf/wg/1992", "MAG": "2487390077", "DOI": "10.1007/3-540-56402-0", "CorpusId":
      1572251}, "corpusId": 1572251, "publicationVenue": "2f5d0e8a-faad-4f10-b323-2b2e3c439a78",
      "url": "https://www.semanticscholar.org/paper/87f8c7e5d93dc3f8e376bcc117d5917a3ef42105",
      "title": "Graph-Theoretic Concepts in Computer Science", "abstract": null, "venue":
      "Lecture Notes in Computer Science", "year": 1992, "referenceCount": 0, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://link.springer.com/content/pdf/bfm:978-3-540-47554-5/1?pdf=chapter%20toc",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"volume": "657"},
      "authors": [{"authorId": "1744120", "name": "F. Fomin"}]}, {"paperId": "30287549b01c0846d04be53574b4525f4b61fcb6",
      "externalIds": {"MAG": "806160400", "CorpusId": 118380540}, "corpusId": 118380540,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/30287549b01c0846d04be53574b4525f4b61fcb6",
      "title": "Disjoint euclidean paths problem (DEPP)", "abstract": "Note: PRO 91.03
      Reference ROSO-CONF-1991-001 Record created on 2006-02-13, modified on 2016-08-08",
      "venue": "", "year": 1991, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "pages": "10", "volume":
      ""}, "authors": [{"authorId": "2159430", "name": "T. Liebling"}]}, {"paperId":
      "12bc78410570753c46db1f61e2250440d39c2fc2", "externalIds": {"MAG": "2503004676",
      "CorpusId": 56074483}, "corpusId": 56074483, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/12bc78410570753c46db1f61e2250440d39c2fc2",
      "title": "A Lower Bound on the Degree Distance in a Tree", "abstract": "For
      a graph G =( V,E), the degree distance of G is defined as DD(G )= {u,v}\u2286V
      (G) (dG(u )+ dG(v))dG(u,v) where dG(u) (or d(u)) is the degree of the vertex
      uG , and dG(u,v )i s the distance between u and v. This paper gets a lower bound
      on the degree distance in a tree in terms of the order and diameter of the tree.
      Mathematics Subject Classification: 05C05, 05C12", "venue": "", "year": 2010,
      "referenceCount": 9, "citationCount": 10, "influentialCitationCount": 1, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "1937986", "name":
      "Shubo Chen"}, {"authorId": "2116390163", "name": "Zhijun Guo"}]}, {"paperId":
      "565d3857b8f6838bd66aea49733c4e3389a8c188", "externalIds": {"MAG": "2385244139",
      "CorpusId": 124587805}, "corpusId": 124587805, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/565d3857b8f6838bd66aea49733c4e3389a8c188",
      "title": "A Polynomial Algorithm for Double-Weight Arborescence", "abstract":
      "In this paper, according to a real example, we build the model of finding the
      minimum parametric double-weight arborescence in a double-weight directed graph.
      By solving a series of other problems p2(l), we deduce an algorithm which is
      polynomial and produces the desired arborescence.", "venue": "", "year": 2002,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "2103487151", "name": "Tang Ze-ying"}]},
      {"paperId": "6d97217d4557cd4e9cb774bc745c10ac44dc3984", "externalIds": {"DBLP":
      "journals/dam/LalouTK16", "MAG": "2063077688", "DOI": "10.1016/j.dam.2015.01.043",
      "CorpusId": 5581065}, "corpusId": 5581065, "publicationVenue": "8287474c-2cf8-4dfe-b1c6-cf6119d879ab",
      "url": "https://www.semanticscholar.org/paper/6d97217d4557cd4e9cb774bc745c10ac44dc3984",
      "title": "Component-cardinality-constrained critical node problem in graphs",
      "abstract": null, "venue": "Discrete Applied Mathematics", "year": 2016, "referenceCount":
      32, "citationCount": 35, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2016-09-10", "journal":
      {"name": "Discret. Appl. Math.", "pages": "150-163", "volume": "210"}, "authors":
      [{"authorId": "3428079", "name": "M. Lalou"}, {"authorId": "3054756", "name":
      "Mohammed Amin Tahraoui"}, {"authorId": "1710654", "name": "H. Kheddouci"}]},
      {"paperId": "fb20cd2ae4da866a9f8fa54de724d367f09ff235", "externalIds": {"DBLP":
      "journals/dm/Peroche83", "MAG": "2013751569", "DOI": "10.1016/0012-365X(83)90121-8",
      "CorpusId": 42546040}, "corpusId": 42546040, "publicationVenue": "2f38f299-9909-4c8e-a12e-76fca8afb42e",
      "url": "https://www.semanticscholar.org/paper/fb20cd2ae4da866a9f8fa54de724d367f09ff235",
      "title": "On several sorts of connectivity", "abstract": null, "venue": "Discrete
      Mathematics", "year": 1983, "referenceCount": 4, "citationCount": 21, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"name": "Discret. Math.", "pages": "267-277", "volume": "46"},
      "authors": [{"authorId": "2798115", "name": "B. P\u00e9roche"}]}, {"paperId":
      "7efc39fd108df88049b06bf37b23a627dcab729f", "externalIds": {"CorpusId": 14922096},
      "corpusId": 14922096, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/7efc39fd108df88049b06bf37b23a627dcab729f",
      "title": "Graph Connectivity and Network Coding", "abstract": "Graph Connectivity
      and Network Coding LEUNG, Kai Man Master of Philosophy Department of Computer
      Science and Engineering The Chinese University of Hong Kong 2011 In this thesis
      we present a new algebraic formulation to compute edge connectivities in a directed
      graph, using the ideas developed in network coding. This reduces the problem
      of computing edge connectivities to solving systems of linear equations, thus
      allowing us to use tools in linear algebra to design new algorithms. Using the
      algebraic formulation we obtain faster algorithms for computing single source
      edge connectivities and all pairs edge connectivities, in some settings the
      amortized time to compute the edge connectivity for one pair is sublinear. Through
      this connection, we have also found an interesting use of expanders and superconcentrators
      to design fast algorithms for some graph connectivity problems.", "venue": "",
      "year": 2011, "referenceCount": 63, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "120973945",
      "name": "K. Man"}]}, {"paperId": "c29c51bf234ef1d8789d7c4f122e89c64c41aff2",
      "externalIds": {"MAG": "1642842063", "DOI": "10.1007/978-1-4757-3188-0_5", "CorpusId":
      118965482}, "corpusId": 118965482, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/c29c51bf234ef1d8789d7c4f122e89c64c41aff2",
      "title": "An exercise in graph theory", "abstract": null, "venue": "", "year":
      2000, "referenceCount": 0, "citationCount": 10, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2000-09-01", "journal": {"name": "", "pages": "41-74",
      "volume": ""}, "authors": [{"authorId": "12725412", "name": "J. S. Moore"}]},
      {"paperId": "728c866563ccdf33fb0cbcd2f87dfd3b8a472866", "externalIds": {"MAG":
      "2341394972", "CorpusId": 124153883}, "corpusId": 124153883, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/728c866563ccdf33fb0cbcd2f87dfd3b8a472866",
      "title": "Listing All Plane Graphs (Extended Abstract)", "abstract": "In this
      paper we give a simple algorithm to generate all con- nected rooted plane graphs
      with at most m edges. A \"rooted\" plane graph is a plane graph with one designated
      (directed) edge on the outer face. The algorithm uses O(m) space and generates
      such graphs in O(1) time per graph on average without duplications. The algorithm
      does not output the entire graph but the difference from the previous graph.
      By modifying the algorithm we can generate all connected (non-rooted) plane
      graphs with at most m edges in O(m 3 ) time per graph.", "venue": "", "year":
      2008, "referenceCount": 11, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "", "volume": ""}, "authors": [{"authorId": "1681066", "name": "Katsuhisa
      Yamanaka"}, {"authorId": "1687506", "name": "Shin-Ichi Nakano"}, {"authorId":
      "153641225", "name": "T. Kiryu"}]}, {"paperId": "b0ca9b00b3a82a0b155aee04dd496a91d868c092",
      "externalIds": {"MAG": "2034321641", "DOI": "10.1109/13.34180", "CorpusId":
      62682292}, "corpusId": 62682292, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/b0ca9b00b3a82a0b155aee04dd496a91d868c092",
      "title": "A note on definitions of trees", "abstract": "A number of definitions
      of trees appear in various courses of a computer engineering curriculum such
      as circuits or data structures. It is shown that a commonly used recursive definition
      of a tree is equivalent to a graph-theoretic definition. This puts the recursive
      definition in a better perspective relative to the various equivalent forms
      of graph-based trees. Pedagogically, as both types of definitions are often
      introduced to students even in the same course, this approach should provide
      a strong basis for students to understand their relationship. >", "venue": "",
      "year": 1989, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "1989-08-01", "journal": {"name": "IEEE Transactions
      on Education", "pages": "396-398", "volume": "32"}, "authors": [{"authorId":
      "1707980", "name": "F. Petry"}, {"authorId": "47197659", "name": "R. P. Tucci"}]},
      {"paperId": "a5bf5c7b1c31306cf51d405d3ce38728454b6ccf", "externalIds": {"MAG":
      "2083394054", "DBLP": "journals/ipl/Reif87", "DOI": "10.1016/0020-0190(87)90095-0",
      "CorpusId": 9520804}, "corpusId": 9520804, "publicationVenue": "44ecc2bb-f8fd-4c6d-bd54-30ca098be91d",
      "url": "https://www.semanticscholar.org/paper/a5bf5c7b1c31306cf51d405d3ce38728454b6ccf",
      "title": "A Topological Approach to Dynamic Graph Connectivity", "abstract":
      null, "venue": "Information Processing Letters", "year": 1987, "referenceCount":
      15, "citationCount": 45, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "1987-04-20", "journal":
      {"name": "Inf. Process. Lett.", "pages": "65-70", "volume": "25"}, "authors":
      [{"authorId": "1749706", "name": "J. Reif"}]}, {"paperId": "cb027c2ec2cafa91de1e8de6f6f8170a013bd197",
      "externalIds": {"MAG": "2424483143", "DBLP": "journals/ipl/Laihonen16", "DOI":
      "10.1016/j.ipl.2016.06.002", "CorpusId": 38121305}, "corpusId": 38121305, "publicationVenue":
      "44ecc2bb-f8fd-4c6d-bd54-30ca098be91d", "url": "https://www.semanticscholar.org/paper/cb027c2ec2cafa91de1e8de6f6f8170a013bd197",
      "title": "The metric dimension for resolving several objects", "abstract": null,
      "venue": "Information Processing Letters", "year": 2016, "referenceCount": 13,
      "citationCount": 9, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2016-11-01", "journal": {"name": "Inf.
      Process. Lett.", "pages": "694-700", "volume": "116"}, "authors": [{"authorId":
      "1764078", "name": "T. Laihonen"}]}, {"paperId": "44ba2ac3658e9360247ca3af2116710484cde26b",
      "externalIds": {"ArXiv": "1911.11494", "CorpusId": 235732408}, "corpusId": 235732408,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/44ba2ac3658e9360247ca3af2116710484cde26b",
      "title": "The Sitting Closer to Friends than Enemies Problem in Trees", "abstract":
      "A metric space $\\mathcal{T}$ is a \\emph{real tree} if for any pair of points
      $x, y \\in \\mathcal{T}$ all topological embeddings $\\sigma$ of the segment
      $[0,1]$ into $\\mathcal{T}$, such that $\\sigma (0)=x$ and $\\sigma (1)=y$,
      have the same image (which is then a geodesic segment from $x$ to $y$). A \\emph{signed
      graph} is a graph where each edge has a positive or negative sign. The \\emph{Sitting
      Closer to Friends than Enemies} problem in trees has a signed graph $S$ as an
      input. The purpose is to determine if there exists an injective mapping (called
      \\emph{valid distance drawing}) from $V(S)$ to the points of a real tree such
      that, for every $u \\in V(S)$, for every positive neighbor $v$ of $u$, and negative
      neighbor $w$ of $u$, the distance between $v$ and $u$ is smaller than the distance
      between $w$ and $u$. In this work, we show that a complete signed graph has
      a valid distance drawing in a real tree if and only if its subgraph composed
      of all (and only) its positive edges has an intersection representation by unit
      balls in a real tree. Besides, as an instrumental result, we show that a graph
      has an intersection representation by unit balls in a real tree if and only
      if it has an intersection representation by proper balls, and if and only if
      it has an intersection representation by arbitrary balls in a real tree.", "venue":
      "", "year": 2019, "referenceCount": 16, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2019-11-26",
      "journal": null, "authors": [{"authorId": "145927996", "name": "R. Becerra"},
      {"authorId": "145040052", "name": "Christopher Thraves Caro"}]}, {"paperId":
      "e01c0c8c212280bbfe3054090f7b5f8de652dd8c", "externalIds": {"MAG": "2892380699",
      "DBLP": "journals/jam/KolaGN18", "DOI": "10.1155/2018/8186345", "CorpusId":
      53294391}, "corpusId": 53294391, "publicationVenue": "7fca2e40-f552-41ac-9a64-d76dc15c981b",
      "url": "https://www.semanticscholar.org/paper/e01c0c8c212280bbfe3054090f7b5f8de652dd8c",
      "title": "Infinitely Many Trees with Maximum Number of Holes Zero, One, and
      Two", "abstract": "<jats:p>An <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M1\"><mml:mi>L</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-coloring of a simple connected graph
      <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M2\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>
      is an assignment <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M3\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math> of nonnegative
      integers to the vertices of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M4\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math> such that <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M5\"><mml:mfenced open=\"|\"
      close=\"|\" separators=\"|\"><mml:mrow><mml:mi>f</mml:mi><mml:mfenced separators=\"|\"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:mi>f</mml:mi><mml:mfenced
      separators=\"|\"><mml:mrow><mml:mi>v</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>\u2a7e</mml:mo><mml:mn
      mathvariant=\"normal\">2</mml:mn></mml:math> if <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M6\"><mml:mi>d</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo
      stretchy=\"false\">)</mml:mo><mml:mo>=</mml:mo><mml:mn mathvariant=\"normal\">1</mml:mn></mml:math>
      and <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M7\"><mml:mfenced
      open=\"|\" close=\"|\" separators=\"|\"><mml:mrow><mml:mi>f</mml:mi><mml:mfenced
      separators=\"|\"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:mi>f</mml:mi><mml:mfenced
      separators=\"|\"><mml:mrow><mml:mi>v</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>\u2a7e</mml:mo><mml:mn
      mathvariant=\"normal\">1</mml:mn></mml:math> if <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M8\"><mml:mi>d</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo
      stretchy=\"false\">)</mml:mo><mml:mo>=</mml:mo><mml:mn mathvariant=\"normal\">2</mml:mn></mml:math>
      for all <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M9\"><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>,
      where <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M10\"><mml:mi>d</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math> denotes the distance between <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M11\"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:math>
      and <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M12\"><mml:mrow><mml:mi>v</mml:mi></mml:mrow></mml:math>
      in <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M13\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>.
      The span of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M14\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math>
      is the maximum color assigned by <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M15\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math>. The span of a
      graph <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M16\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>,
      denoted by <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M17\"><mml:mi>\u03bb</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>,
      is the minimum of span over all <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M18\"><mml:mi>L</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-colorings on <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M19\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>. An <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M20\"><mml:mi>L</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-coloring of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M21\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math> with span <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M22\"><mml:mi>\u03bb</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
      is called a span coloring of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M23\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>. An <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M24\"><mml:mi>L</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-coloring <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M25\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math> is said to be
      irreducible if there exists no <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M26\"><mml:mi>L</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-coloring g such that <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M27\"><mml:mi>g</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo
      stretchy=\"false\">)</mml:mo><mml:mo>\u2a7d</mml:mo><mml:mi>f</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
      for all <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M28\"><mml:mi>u</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
      and <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M29\"><mml:mi>g</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy=\"false\">)</mml:mo><mml:mo><</mml:mo><mml:mi>f</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
      for some <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M30\"><mml:mi>v</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>.
      If <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M31\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math>
      is an <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M32\"><mml:mi>L</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-coloring with span <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M33\"><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:math>, then <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M34\"><mml:mi>h</mml:mi><mml:mo>\u2208</mml:mo><mml:mfenced
      open=\"{\" close=\"}\" separators=\"|\"><mml:mrow><mml:mn mathvariant=\"normal\">0,1</mml:mn><mml:mo>,</mml:mo><mml:mn
      mathvariant=\"normal\">2</mml:mn><mml:mo>,</mml:mo><mml:mo>\u2026</mml:mo><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:mfenced></mml:math>
      is a hole if there is no <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M35\"><mml:mi>v</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
      such that <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M36\"><mml:mi>f</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy=\"false\">)</mml:mo><mml:mo>=</mml:mo><mml:mi>h</mml:mi></mml:math>.
      The maximum number of holes over all irreducible span colorings of <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M37\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>
      is denoted by <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M38\"><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mrow><mml:mi>\u03bb</mml:mi></mml:mrow></mml:msub><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>.
      A tree <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M39\"><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:math>
      with maximum degree <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M40\"><mml:mrow><mml:mi mathvariant=\"normal\">\u0394</mml:mi></mml:mrow></mml:math>
      having span <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M41\"><mml:mi
      mathvariant=\"normal\">\u0394</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant=\"normal\">1</mml:mn></mml:math>
      is referred to as Type-I tree; otherwise it is Type-II. In this paper, we give
      a method to construct infinitely many trees with at least one hole from a one-hole
      tree and infinitely many two-hole trees from a two-hole tree. Also, using the
      method, we construct infinitely many Type-II trees with maximum number of holes
      one and two. Further, we give a sufficient condition for a Type-II tree with
      maximum number of holes zero.</jats:p>", "venue": "Journal of Applied Mathematics",
      "year": 2018, "referenceCount": 9, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://downloads.hindawi.com/journals/jam/2018/8186345.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Art", "source": "s2-fos-model"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Chemistry", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2018-09-20", "journal":
      {"name": "J. Appl. Math.", "pages": "8186345:1-8186345:14", "volume": "2018"},
      "authors": [{"authorId": "2051257", "name": "S. Kola"}, {"authorId": "9424517",
      "name": "Balakrishna Gudla"}, {"authorId": "144129258", "name": "P. K. Niranjan"}]},
      {"paperId": "6edf478da45763afc3b484d478d67dd848be8ca6", "externalIds": {"MAG":
      "2089540962", "DOI": "10.1287/MNSC.25.1.105", "CorpusId": 207232914}, "corpusId":
      207232914, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6edf478da45763afc3b484d478d67dd848be8ca6",
      "title": "Note\u2014A Simple Edge Elimination Criterion in a Search for the
      Center of a Graph", "abstract": "This note proposes a new edge elimination criterion
      in an algorithm whose purpose is to locate the center of a graph. The new criterion
      requites the same amount of information and computation but generates a stronger
      lower bound. It therefore reduces substantially the number of edges that have
      to be checked thoroughly, at a high computational cost, for a possible center
      point along them.", "venue": "", "year": 1979, "referenceCount": 3, "citationCount":
      6, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://pubsonline.informs.org/doi/pdf/10.1287/mnsc.25.1.105", "status": "BRONZE"},
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "Management
      Science", "pages": "105-107", "volume": "25"}, "authors": [{"authorId": "48118154",
      "name": "J. Halpern"}]}, {"paperId": "8a7dd8a1dd5df5d45022f070d34a722e612a2450",
      "externalIds": {"MAG": "1575019333", "CorpusId": 116911195}, "corpusId": 116911195,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/8a7dd8a1dd5df5d45022f070d34a722e612a2450",
      "title": "Algorithm for constructing strongly connected components in digraphs",
      "abstract": "This thesis gives a detailed description of an algorithm for finding
      strongly connected \ncomponents in a directed graph. The reader requires no
      prior knowledge of graph theory \nor algorithm analisys. We start by introducing
      graph theory as a problem space and a \nframework for a given algorithm. We
      define some fundamental constructs such as: what \nis a digraph, what are strongly
      connected components, and what are their basic properties. \n A description
      of a theoretical model of computation comes next. It serves as a founda- \ntion
      for the study of algorithm complexity and its correctness in general. We learn
      what \nis an algorithm, what is its complexity and correctness. \n In order
      to analyse the algorithm for constructing strongly connected components of \na
      given digraf we need to get familiar with basic datastructures and mathematical
      tools \nfor algorithm construction. In the core of the thesis we present the
      algorithm of Tarjan, \nof Kusaraju-Sharir and the algorithm of Cheriyan-Mehlhorn/Gabow,
      together with the \nanalisys of their complexity and proof of their correctenes.
      We deal with how the graph \nis presented in our model of computation and with
      mathematical theorems that are used \nas building blocks for the construction
      and analisys of the three algorithms.", "venue": "", "year": 2012, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2012-12-01",
      "journal": null, "authors": [{"authorId": "2105230970", "name": "Nikola Iva\u010di\u010d"}]},
      {"paperId": "23c5af63ab87f826ab7e0bf77664d39b6ec4d223", "externalIds": {"DBLP":
      "conf/walcom/YamanakaN08a", "MAG": "2126143638", "DOI": "10.7155/jgaa.00174",
      "CorpusId": 5866531}, "corpusId": 5866531, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/23c5af63ab87f826ab7e0bf77664d39b6ec4d223",
      "title": "Listing All Plane Graphs", "abstract": "In this paper we give a simple
      algorithm to generate all connected rooted plane graphs with at most m edges.
      A \"rooted\" plane graph is a plane graph with one designated (directed) edge
      on the outer face. The algorithm uses O(m) space and generates such graphs in
      O(1) time per graph on average without duplications. The algorithm does not
      output the entire graph but the difference from the previous graph. By modifying
      the algorithm we can generate all connected (non-rooted) plane graphs with at
      most m edges in O(m3) time per graph.", "venue": "J. Graph Algorithms Appl.",
      "year": 2008, "referenceCount": 17, "citationCount": 14, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2008-02-07", "journal": {"name": "J. Graph Algorithms Appl.", "pages": "5-18",
      "volume": "13"}, "authors": [{"authorId": "1681066", "name": "Katsuhisa Yamanaka"},
      {"authorId": "1687506", "name": "Shin-Ichi Nakano"}]}, {"paperId": "971c4660c7412ed191401ceae66eab0b8fec60d4",
      "externalIds": {"DBLP": "conf/wg/FluiterB97", "MAG": "2150867067", "DOI": "10.1007/BFb0024496",
      "CorpusId": 7113419}, "corpusId": 7113419, "publicationVenue": "d62ca42c-06bc-40ff-9463-4ec00915599b",
      "url": "https://www.semanticscholar.org/paper/971c4660c7412ed191401ceae66eab0b8fec60d4",
      "title": "Parallel Algorithms for Treewidth Two", "abstract": null, "venue":
      "International Workshop on Graph-Theoretic Concepts in Computer Science", "year":
      1997, "referenceCount": 20, "citationCount": 10, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "https://dspace.library.uu.nl/bitstream/handle/1874/18710/bodlaender_97_parallel.pdf?sequence=1&isAllowed=y",
      "status": "GREEN"}, "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "1997-06-18", "journal":
      {"pages": "157-170"}, "authors": [{"authorId": "2902137", "name": "B. D. Fluiter"},
      {"authorId": "1741169", "name": "H. Bodlaender"}]}, {"paperId": "861bff22c2427c54c8de0f15c8b16eb03077771f",
      "externalIds": {"MAG": "2008945525", "DOI": "10.1093/TEAMAT/HRP013", "CorpusId":
      119473881}, "corpusId": 119473881, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/861bff22c2427c54c8de0f15c8b16eb03077771f",
      "title": "Real world graph connectivity", "abstract": "We present the topic
      of graph connectivity along with a famous theorem of Menger in the real-world
      setting of the national computer network infrastructure of National LambdaRail.
      We include a set of exercises where students reinforce their understanding of
      graph connectivity by analysing the National LambdaRail network. Finally, we
      give suggestions for using this module as a project in an undergraduate mathematics
      course.", "venue": "", "year": 2009, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2009-09-01", "journal": {"name":
      "Teaching Mathematics and Its Applications", "pages": "159-161", "volume": "28"},
      "authors": [{"authorId": "101630984", "name": "Joy Lind"}, {"authorId": "38907363",
      "name": "D. Narayan"}]}, {"paperId": "cfcbf32607fcfce25cb5bfc1bb51a61620b8072f",
      "externalIds": {"MAG": "1553747859", "CorpusId": 8590650}, "corpusId": 8590650,
      "publicationVenue": "16b6dc15-5de5-48a8-9654-2d56e80ca1d6", "url": "https://www.semanticscholar.org/paper/cfcbf32607fcfce25cb5bfc1bb51a61620b8072f",
      "title": "Graph relabeling with stacked labels", "abstract": "This paper describes
      a new problem in graph theory called the GRAPH RELABELING WITH STACKED LABELS.
      Given a simple and connected graph G = (V, E), two labelings L and \u013d of
      G, the problem is to make a series of transformation from \u226aG, L\u226b to
      \u226aG, \u013d \u226b, where \u226aG, L\u226b is the graph G with labeling
      L. The transformation in consideration here is a flip operation. A flip operation
      allows a pair of stacked labels in two adjacent vertices to exchange places
      between vertices in a certain fashion. In this paper we show that this problem
      in general is insolvable. We precisely characterize the solvability for this
      problem when G is either a path graph or a tree and in the process we also have
      polynomial time algorithms to solve the problem in both cases. Additionally,
      we also show that our algorithm is exact and provably fastest in the case G
      is a path graph. Potential applications and open problems are also discussed.",
      "venue": "International Conference on Electrical Engineering/Electronics, Computer,
      Telecommunications and Information Technology", "year": 2010, "referenceCount":
      27, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2010-05-19", "journal": {"name":
      "ECTI-CON2010: The 2010 ECTI International Confernce on Electrical Engineering/Electronics,
      Computer, Telecommunications and Information Technology", "pages": "1245-1249"},
      "authors": [{"authorId": "48619893", "name": "P. Patthamalai"}, {"authorId":
      "2218459", "name": "Sanpawat Kantabutra"}]}, {"paperId": "d617860cdca995b03f4c4820ac706c6494c9ffdb",
      "externalIds": {"MAG": "2347066391", "CorpusId": 124237654}, "corpusId": 124237654,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d617860cdca995b03f4c4820ac706c6494c9ffdb",
      "title": "Treewidth of the Product of Two Complete Graphs", "abstract": "We
      determine in this paper the treewidth of K(subscript m)\u00d7K(subscript n).
      Our result is that: If both m and n are even and m\u2265n, or m is odd and n
      is even, or both m and n are odd and n\u2265m, then the treewidth of K(subscript
      m)\u00d7K(subscript n) is (The equation is abbreviated). This is exactly the
      bandwidth of K(subscript m)\u00d7K(subscript n).", "venue": "", "year": 2004,
      "referenceCount": 0, "citationCount": 1, "influentialCitationCount": 1, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2004-02-01", "journal": {"name":
      "", "pages": "62-68", "volume": "8"}, "authors": [{"authorId": "145078777",
      "name": "Jinjiang Yuan"}, {"authorId": "103598153", "name": "Lai-Xing Luo"}]},
      {"paperId": "4c3ae383bc78e0bd076dcbe65ce29078ead49c44", "externalIds": {"CorpusId":
      14039765}, "corpusId": 14039765, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4c3ae383bc78e0bd076dcbe65ce29078ead49c44",
      "title": "Labeling Schemes 14.1 Adjacency", "abstract": "Imagine you want to
      repeatedly query a huge graph, e.g., a social or a road network. For example,
      you might need to find out whether two nodes are connected, or what the distance
      between two nodes is. Since the graph is so large, you distribute it among multiple
      servers in your data center. Theorem 14.1. It is possible to assign labels of
      size 2 log n bits to nodes in a tree so that for every pair u, v of nodes, it
      is easy to tell whether u is adjacent to v by just looking at u and v''s labels.
      Proof. Choose a root in the tree arbitrarily so that every non-root node has
      a parent. The label of each node u consists of two parts: The ID of u (from
      1 to n), and the ID of u''s parent (or nothing if u is the root). Remarks: \u2022
      What we have constructed above is called a labeling scheme, more precisely a
      labeling scheme for adjacency in trees. Formally, a labeling scheme is defined
      as follows. Definition 14.2. A labeling scheme consists of an encoder e and
      a decoder d. The encoder e assigns to each node v a label e(v). The decoder
      d receives the labels of the nodes in question and returns an answer to some
      query. The largest size (in bits) of a label assigned to a node is called the
      label size of the labeling scheme. Remarks: \u2022 In Theorem 14.1, the decoder
      receives two node labels e(u) and e(v), and its answer is Yes or No, depending
      on whether u and v are adjacent or not. The label size is 2 log n. \u2022 The
      label size is the complexity measure we are going to focus on in this chapter.
      The run-time of the encoder and the decoder are two other complexity measures
      that are studied in the literature.", "venue": "", "year": null, "referenceCount":
      16, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": []}, {"paperId": "5023d9b2e6f33238310562edc03f8ee37d34effc",
      "externalIds": {"CorpusId": 17326515}, "corpusId": 17326515, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5023d9b2e6f33238310562edc03f8ee37d34effc",
      "title": "Labeling Schemes 14.1 Adjacency", "abstract": "Imagine you want to
      repeatedly query a huge graph, e.g., a social or a road network. For example,
      you might need to find out whether two nodes are connected, or what the distance
      between two nodes is. Since the graph is so large, you distribute it among multiple
      servers in your data center. Theorem 14.1. It is possible to assign labels of
      size 2 log n bits to nodes in a tree so that for every pair u, v of nodes, it
      is easy to tell whether u is adjacent to v by just looking at u and v''s labels.
      Proof. Choose a root in the tree arbitrarily so that every non-root node has
      a parent. The label of each node u consists of two parts: The ID of u (from
      1 to n), and the ID of u''s parent (or nothing if u is the root). Remarks: \u2022
      What we have constructed above is called a labeling scheme, more precisely a
      labeling scheme for adjacency in trees. Formally, a labeling scheme is defined
      as follows. Definition 14.2. A labeling scheme consists of an encoder e and
      a decoder d. The encoder e assigns to each node v a label e(v). The decoder
      d receives the labels of the nodes in question and returns an answer to some
      query. The largest size (in bits) of a label assigned to a node is called the
      label size of the labeling scheme. Remarks: \u2022 In Theorem 14.1, the decoder
      receives two node labels e(u) and e(v), and its answer is Yes or No, depending
      on whether u and v are adjacent or not. The label size is 2 log n. \u2022 The
      label size is the complexity measure we are going to focus on in this chapter.
      The run-time of the encoder and the decoder are two other complexity measures
      that are studied in the literature.", "venue": "", "year": null, "referenceCount":
      16, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": []}, {"paperId": "a867daf4878fb8e9b90197c1cebb5ccb92f752f3",
      "externalIds": {"MAG": "184432384", "DOI": "10.1007/BFB0043820", "CorpusId":
      117956368}, "corpusId": 117956368, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/a867daf4878fb8e9b90197c1cebb5ccb92f752f3",
      "title": "An algorithm for getting a minimum cut-set of a graph", "abstract":
      null, "venue": "", "year": 1986, "referenceCount": 2, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "", "pages": "17-24", "volume": ""}, "authors": [{"authorId": "49616149",
      "name": "I. Arany"}]}, {"paperId": "54b072145a2dbb60ab6ce49da51d71854ed98318",
      "externalIds": {"DBLP": "journals/corr/abs-2306-14103", "ArXiv": "2306.14103",
      "DOI": "10.48550/arXiv.2306.14103", "CorpusId": 259252347}, "corpusId": 259252347,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/54b072145a2dbb60ab6ce49da51d71854ed98318",
      "title": "On finding 2-cuts and 3-edge-connected components in parallel", "abstract":
      "Given a connected undirected multigraph G (a graph that may contain parallel
      edges), the algorithm of [19] finds the 3-edge-connected components of $G$ in
      linear time using an innovative graph contraction technique based on a depth-first
      search. In [21], it was shown that the algorithm can be extended to produce
      a Mader construction sequence for each 3-edge-connected component, a cactus
      representation of the 2-cuts (cut-pairs) of each 2-edge-connected component
      of $G$, and the 1-cuts (bridges) at the same time. In this paper, we further
      extend the algorithm of [19] to generate the 2-cuts and the 3-edge-connected
      components of $G$ simultaneously in linear time by performing only one depth-first
      search over the input graph. Previously known algorithms solve the two problems
      separately in multiple phases.", "venue": "arXiv.org", "year": 2023, "referenceCount":
      26, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-06-25", "journal": {"name": "ArXiv", "volume": "abs/2306.14103"},
      "authors": [{"authorId": "2159047", "name": "Yung H. Tsin"}]}, {"paperId": "c57502b5fa4546a1e609fadda79a4e620f990b71",
      "externalIds": {"MAG": "1889088108", "DBLP": "conf/stacs/Schmidt10", "ArXiv":
      "0912.2561", "DOI": "10.4230/LIPIcs.STACS.2010.2491", "CorpusId": 8821420},
      "corpusId": 8821420, "publicationVenue": "2e8ac273-26de-40d6-9f96-09286b1016f1",
      "url": "https://www.semanticscholar.org/paper/c57502b5fa4546a1e609fadda79a4e620f990b71",
      "title": "Construction Sequences and Certifying 3-Connectedness", "abstract":
      "Given two $3$-connected graphs $G$ and $H$, a \\emph{construction sequence}
      constructs $G$ from $H$ (e.\\,g. from the $K_4$) with three basic operations,
      called the \\emph{Barnette-Gr\\\"unbaum operations}. These operations are known
      to be able to construct all $3$-connected graphs. We extend this result by identifying
      every intermediate graph in the construction sequence with a subdivision in
      $G$ and showing under some minor assumptions that there is still a construction
      sequence to $G$ when we start from an \\emph{arbitrary prescribed} $H$-subdivision.
      This leads to the first algorithm that computes a construction sequence in time
      $O(|V(G)|^2)$. As an application, we develop a certificate for the $3$-connectedness
      of graphs that can be easily computed and verified. Based on this, a certifying
      test on $3$-connectedness is designed.%Finding certifying algorithms is a major
      goal for problems where the efficient solutions known are complicated. \n \nTutte
      proved that every $3$-connected graph on more than $4$ nodes has a \\emph{contractible
      edge}. Barnette and Gr\\\"unbaum proved the existence of a \\emph{removable
      edge} in the same setting. We show that the sequence of contractions and the
      sequence of removals from $G$ to the $K_4$ can be computed in $O(|V|^2)$ time
      by extending Barnette and Gr\\\"unbaum''s theorem. As an application, we derive
      a certificate for the $3$-connectedness of graphs that can be easily computed
      and verified.", "venue": "Symposium on Theoretical Aspects of Computer Science",
      "year": 2009, "referenceCount": 18, "citationCount": 17, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
      "2009-12-13", "journal": {"name": "ArXiv", "volume": "abs/0912.2561"}, "authors":
      [{"authorId": "34189607", "name": "Jens M. Schmidt"}]}, {"paperId": "b6e3f991a632aa101fdceac0eebf4d24b5317545",
      "externalIds": {"MAG": "2059993753", "DOI": "10.1007/BF01342974", "CorpusId":
      120717284}, "corpusId": 120717284, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/b6e3f991a632aa101fdceac0eebf4d24b5317545",
      "title": "A note on the number of functional digraphs", "abstract": null, "venue":
      "", "year": 1961, "referenceCount": 3, "citationCount": 20, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "1961-04-01", "journal": {"name": "Mathematische Annalen", "pages": "109-110",
      "volume": "143"}, "authors": [{"authorId": "35145569", "name": "R. Read"}]},
      {"paperId": "503aa41c1fe2792ecc8d7d2cd6fca1b147d1f6b7", "externalIds": {"MAG":
      "2050565077", "DBLP": "journals/dam/CoppersmithV85", "DOI": "10.1016/0166-218X(85)90057-5",
      "CorpusId": 205054039}, "corpusId": 205054039, "publicationVenue": "8287474c-2cf8-4dfe-b1c6-cf6119d879ab",
      "url": "https://www.semanticscholar.org/paper/503aa41c1fe2792ecc8d7d2cd6fca1b147d1f6b7",
      "title": "Solving NP-hard problems in ''almost trees'': Vertex cover", "abstract":
      null, "venue": "Discrete Applied Mathematics", "year": 1985, "referenceCount":
      6, "citationCount": 16, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "Discret. Appl. Math.", "pages": "27-45", "volume": "10"}, "authors":
      [{"authorId": "1716227", "name": "D. Coppersmith"}, {"authorId": "1727975",
      "name": "U. Vishkin"}]}, {"paperId": "517821f1b1be054a27f119d3a98e1c933033353c",
      "externalIds": {"DBLP": "journals/endm/FominTT05", "MAG": "2031760049", "DOI":
      "10.1016/j.endm.2005.06.032", "CorpusId": 5761752}, "corpusId": 5761752, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/517821f1b1be054a27f119d3a98e1c933033353c",
      "title": "Connected Graph Searching in Outerplanar Graphs", "abstract": null,
      "venue": "Electron. Notes Discret. Math.", "year": 2005, "referenceCount": 6,
      "citationCount": 27, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2005-10-15", "journal": {"name": "Electron.
      Notes Discret. Math.", "pages": "213-216", "volume": "22"}, "authors": [{"authorId":
      "1744120", "name": "F. Fomin"}, {"authorId": "1724691", "name": "D. Thilikos"},
      {"authorId": "2553209", "name": "Ioan Todinca"}]}, {"paperId": "3088eda9d62f89b7785a4c78d6b303414c6b3a19",
      "externalIds": {"CorpusId": 50156591}, "corpusId": 50156591, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/3088eda9d62f89b7785a4c78d6b303414c6b3a19",
      "title": "Description of my Research", "abstract": "I study algorithms in graphs,
      maily applied to the spreading of the information in telecommunications networks.
      I study the structure of graphs and some routing problems through graph searching
      games. In these games, a team of searchers aims at capturing a fugitive in a
      graph. The mobile agents follow the paths in the graph with bounded or unbounded
      speed and satisfying some constraints. The (NP-hard) problem is to minimize
      the number of searchers required to capture the fugitive. Two main variants
      have been studied: the graph searching games where mobile agents move simultaneously,
      and the cos and robber games where searchers and fugitive move by turns. These
      two variants are very different since they have not the same algorithmic applications,
      and the tools used for their study are completely different too. My contributions
      have their applications mainly in routing problems in Wavelength-Division Multiplexing
      (WDM) networks, large scale networks (e.g., the Internet) and wireless networks.
      All these networks are facing difficult problems, e.g., either NP-complete problems
      or problems that become difficult to be handled because of networks size. To
      deal with this, my approach consists into taking advantage of specific structural
      properties of real instances for the design of efficient algorithms. My objectives
      are twofold. On the one hand, I want to understand which structural properties
      can help to solve problems relative to the spreading of the information in networks,
      and for this prurpose, I am interested in determining which properties are shared
      by real networks. On the other hand, I want to develop (via the graph searching
      paradigm) new algorithmic tools to use these properties efficiently. My main
      contributions deal with:", "venue": "", "year": 2011, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "1736014", "name": "N. Nisse"}]},
      {"paperId": "eb17edc2bdc92f508ecc47beaef909b3007902a0", "externalIds": {"MAG":
      "2727900420", "CorpusId": 126363148}, "corpusId": 126363148, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/eb17edc2bdc92f508ecc47beaef909b3007902a0",
      "title": "On the Basis Number of Products of Graphs", "abstract": "On the Basis
      Number of Products of Graphs\u060c \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649
      \u0627\u0644\u0646\u0635 \u0627\u0644\u0643\u0627\u0645\u0644 \u064a\u0631\u062c\u0649
      \u0632\u064a\u0627\u0631\u0629 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u062d\u0633\u064a\u0646
      \u0628\u0646 \u0637\u0644\u0627\u0644 \u0641\u064a \u062c\u0627\u0645\u0639\u0629
      \u0627\u0644\u064a\u0631\u0645\u0648\u0643 \u0627\u0648 \u0632\u064a\u0627\u0631\u0629
      \u0645\u0648\u0642\u0639\u0647\u0627 \u0627\u0644\u0627\u0644\u0643\u062a\u0631\u0648\u0646\u064a",
      "venue": "", "year": 1995, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "103567357",
      "name": "\u0650Al Rhayyel"}, {"authorId": "2057407942", "name": "Ahmad"}, {"authorId":
      "104066358", "name": "Batayneh"}, {"authorId": "2055518085", "name": "Muhammad
      Saleh"}]}, {"paperId": "af7b21d18b60fccecf0606a9045372c85323810a", "externalIds":
      {"ArXiv": "2112.08768", "DOI": "10.1007/s00009-022-02096-1", "CorpusId": 245218679},
      "corpusId": 245218679, "publicationVenue": "c603edbc-1d22-4459-b06e-57b66fa07c05",
      "url": "https://www.semanticscholar.org/paper/af7b21d18b60fccecf0606a9045372c85323810a",
      "title": "Resolving sets tolerant to failures in three-dimensional grids", "abstract":
      null, "venue": "Mediterranean Journal of Mathematics", "year": 2021, "referenceCount":
      29, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://link.springer.com/content/pdf/10.1007/s00009-022-02096-1.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "external"}, {"category": "Mathematics", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-12-16", "journal": {"name":
      "Mediterranean Journal of Mathematics", "volume": "19"}, "authors": [{"authorId":
      "37109659", "name": "M. Mora"}, {"authorId": "2121925337", "name": "Mar\u00eda
      Jos\u00e9 Souto-Salorio"}, {"authorId": "2079603269", "name": "Ana D. Tarr''io-Tobar"}]},
      {"paperId": "aaf530fca7b0ceeafc99c56cebf3315e3d133ad4", "externalIds": {"MAG":
      "2748838085", "DBLP": "conf/gd/BrandenburgEGKLM03", "DOI": "10.1007/978-3-540-24595-7_55",
      "CorpusId": 7414828}, "corpusId": 7414828, "publicationVenue": "9e547474-7cce-44ae-a90c-095a421ac30f",
      "url": "https://www.semanticscholar.org/paper/aaf530fca7b0ceeafc99c56cebf3315e3d133ad4",
      "title": "Selected Open Problems in Graph Drawing", "abstract": null, "venue":
      "International Symposium Graph Drawing and Network Visualization", "year": 2003,
      "referenceCount": 134, "citationCount": 61, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://link.springer.com/content/pdf/10.1007%2F978-3-540-24595-7_55.pdf",
      "status": "BRONZE"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2003-09-21",
      "journal": {"pages": "515-539"}, "authors": [{"authorId": "51222769", "name":
      "F. Brandenburg"}, {"authorId": "1719358", "name": "D. Eppstein"}, {"authorId":
      "1679615", "name": "M. Goodrich"}, {"authorId": "9374807", "name": "S. Kobourov"},
      {"authorId": "1716384", "name": "G. Liotta"}, {"authorId": "1724469", "name":
      "Petra Mutzel"}]}, {"paperId": "3d0cc2ac43900e11db1f7ae7b0c2f4ebee7d9435", "externalIds":
      {"MAG": "3004278482", "DOI": "10.12737/978686", "CorpusId": 214470152}, "corpusId":
      214470152, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3d0cc2ac43900e11db1f7ae7b0c2f4ebee7d9435",
      "title": "Fundamentals of the theory and algorithms on graphs", "abstract":
      "The textbook describes the main theoretical principles of graph theory, the
      main tasks to be solved using graph structures, and General methods of their
      solution and specific algorithms, with estimates of their complexity. I covered
      a lot of the examples given questions to test knowledge and tasks for independent
      decisions. Along with the control tasks to verify the theoretical training provided
      practical assignments to develop programs to study topics of graph theory. \nMeets
      the requirements of Federal state educational standards of higher education
      of the last generation. \nDesigned for undergraduate and graduate programs,
      studying information technology, for in-depth training in analysis and design
      of systems of complex structure. Also the guide can be useful to specialists
      of the IT sphere in the study of algorithmic aspects of graph theory.", "venue":
      "", "year": 2020, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2020-01-30", "journal": {"name": "", "volume": ""},
      "authors": [{"authorId": "98208987", "name": "N. Gdanskiy"}]}, {"paperId": "4dfeacdc2d7bd1beea4adc14f287c39766063578",
      "externalIds": {"MAG": "2373444390", "CorpusId": 124617066}, "corpusId": 124617066,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4dfeacdc2d7bd1beea4adc14f287c39766063578",
      "title": "Some Problems on Tree", "abstract": "In the paper a definition of
      the complete order on tree is given.A property of is proved and some known results
      in the theory of ordinal numbers is proved by this property,which makes the
      proving process much simpler.", "venue": "", "year": 2007, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "Journal
      of Longyan University", "volume": ""}, "authors": [{"authorId": "1476608113",
      "name": "Huang Zhong-q"}]}, {"paperId": "62753b79c4b7fd86d93318e00689aa0d71c893b3",
      "externalIds": {"MAG": "2914264140", "CorpusId": 126734667}, "corpusId": 126734667,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/62753b79c4b7fd86d93318e00689aa0d71c893b3",
      "title": "Tree decompositions and linear time algorithms", "abstract": "This
      thesis concerns tree decompositions. Trees are one of the simplest and most
      well understood class of graphs. A tree decomposition of a graph improves our
      understanding of the graph in a similar way. For example, as a consequence of
      Robertson and Seymour''s groundbreaking work in the theory of graph minors,
      there are linear time algorithms for NP-hard problem on graphs that admit a
      tree decomposition of a certain type. We classify existing tree decompositions
      and examine what makes a tree decomposition unique. \nThe first result of this
      thesis is a linear time algorithm for building a tree decomposition for the
      class of graphs that exclude K 5 as a minor. The second result is a significant
      modification to this algorithm which results in a linear time algorithm to construct
      the tree decomposition for graphs which exclude a special set of paths. These
      are vertex disjoint paths between two pairs of input vertices (s1, t1), (s2,
      t 2), one from s1 to t 1 and the other from s2 to t 2. \nWe then use these tree
      decompositions to improve the running time of existing algorithms and extend
      the allowed input of other algorithms from planar graphs to graphs that exclude
      K5 as a minor.", "venue": "", "year": 2012, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "authors":
      [{"authorId": "143882390", "name": "B. Reed"}, {"authorId": "2158122714", "name":
      "Zhentao Li"}]}, {"paperId": "0746a30ff43eb1cbd782c9d7804d5293475a6ecb", "externalIds":
      {"DBLP": "journals/dm/Graaf04", "MAG": "133854143", "DOI": "10.1016/j.disc.2003.11.002",
      "CorpusId": 232201}, "corpusId": 232201, "publicationVenue": "2f38f299-9909-4c8e-a12e-76fca8afb42e",
      "url": "https://www.semanticscholar.org/paper/0746a30ff43eb1cbd782c9d7804d5293475a6ecb",
      "title": "Directed Triangles in Directed Graphs", "abstract": null, "venue":
      "Discrete Mathematics", "year": 1992, "referenceCount": 4, "citationCount":
      18, "influentialCitationCount": 3, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science", "Mathematics", "Chemistry"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "external"}, {"category": "Chemistry", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "1992-12-11", "journal": {"name": "Mathematics eJournal"}, "authors": [{"authorId":
      "2564387", "name": "M. D. Graaf"}]}, {"paperId": "a7b7109bc90704628a6083f6b364aec3519a377f",
      "externalIds": {"MAG": "960413108", "DOI": "10.1007/978-3-642-16533-7_9", "CorpusId":
      117550070}, "corpusId": 117550070, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/a7b7109bc90704628a6083f6b364aec3519a377f",
      "title": "Split and List", "abstract": null, "venue": "", "year": 2010, "referenceCount":
      11, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "153-160", "volume": ""}, "authors": [{"authorId": "1744120", "name": "F. Fomin"},
      {"authorId": "1732843", "name": "D. Kratsch"}]}, {"paperId": "5577ca442f26ccf3ea1377d99b90e2feade37c12",
      "externalIds": {"MAG": "1486664114", "DBLP": "conf/ciac/EvenL94", "DOI": "10.1007/3-540-57811-0_11",
      "CorpusId": 45082310}, "corpusId": 45082310, "publicationVenue": "dc657ba2-0928-4ef1-80aa-d5001fc79764",
      "url": "https://www.semanticscholar.org/paper/5577ca442f26ccf3ea1377d99b90e2feade37c12",
      "title": "A Unified Scheme for Routing in Expander Based Networks", "abstract":
      null, "venue": "International/Italian Conference on Algorithms and Complexity",
      "year": 1994, "referenceCount": 4, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "1994-03-01", "journal": {"pages": "125-135"},
      "authors": [{"authorId": "1733075", "name": "S. Even"}, {"authorId": "145903595",
      "name": "A. Litman"}]}, {"paperId": "ac6003100b4283d00d43a1b93d954937344d6943",
      "externalIds": {"CorpusId": 54724481}, "corpusId": 54724481, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/ac6003100b4283d00d43a1b93d954937344d6943",
      "title": "Title Dynamic tree shortcut with constant degree", "abstract": "Given
      a rooted tree with n nodes, the tree shortcut problem is to add a set of shortcut
      edges to the tree such that the shortest path from each node to any of its ancestors
      is of length O(logn) and the degree increment of each node is constant. We consider
      in this paper the dynamic version of the problem, which supports node insertion
      and deletion. For insertion, a node can be inserted as a leaf node or an internal
      node by sub-dividing an existing edge. For deletion, a leaf node can be deleted,
      or an internal node can be merged with its single child. We propose an algorithm
      that maintains a set of shortcut edges in O(logn) time for an insertion or deletion.",
      "venue": "", "year": 2015, "referenceCount": 14, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "30479380",
      "name": "H. Chan"}, {"authorId": "2154765398", "name": "Xiaowei Wu"}, {"authorId":
      "2115363106", "name": "Chenzi Zhang"}, {"authorId": "2582262", "name": "Zhichao
      Zhao"}]}, {"paperId": "5403e6b102e76c32661aac2f0c6cbf25cc2b8384", "externalIds":
      {"MAG": "2053325021", "DBLP": "journals/dm/KobeissiM02", "DOI": "10.1016/S0012-365X(01)00086-3",
      "CorpusId": 46084327}, "corpusId": 46084327, "publicationVenue": "2f38f299-9909-4c8e-a12e-76fca8afb42e",
      "url": "https://www.semanticscholar.org/paper/5403e6b102e76c32661aac2f0c6cbf25cc2b8384",
      "title": "Spanning graphs of hypercubes: starlike and double starlike trees",
      "abstract": null, "venue": "Discrete Mathematics", "year": 2002, "referenceCount":
      6, "citationCount": 9, "influentialCitationCount": 2, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2002-02-06", "journal":
      {"name": "Discret. Math.", "pages": "231-239", "volume": "244"}, "authors":
      [{"authorId": "73176734", "name": "M. Kobeissi"}, {"authorId": "3038176", "name":
      "M. Mollard"}]}, {"paperId": "c08dace68db893edb2b0a12fe7ee5ea34003b1e6", "externalIds":
      {"MAG": "70027040", "CorpusId": 115845989}, "corpusId": 115845989, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/c08dace68db893edb2b0a12fe7ee5ea34003b1e6",
      "title": "Finding Minimum Spanning Trees in O(m alpha(m,n)) Time", "abstract":
      "We describe a deterministic minimum spanning tree algorithm running in time
      O(m alpha(m,n)), where alpha is a natural inverse of Ackermann''''s function
      and m and n are the number of edges and vertices, respectively. This improves
      upon the O(m alpha(m,n) log alpha(m,n)) bound established by Chazelle in 1997.
      A similar O(m alpha(m,n))-time algorithm was discovered independently by Chazelle,
      predating the algorithm presented here by many months. This paper may still
      be of interest for its alternative exposition.", "venue": "", "year": 1999,
      "referenceCount": 0, "citationCount": 7, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "1999-10-01",
      "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "1727806", "name":
      "S. Pettie"}]}, {"paperId": "aebc2583ecf2e5f2e0ec36f23d54126d750a8694", "externalIds":
      {"DBLP": "journals/dam/Labahn89", "MAG": "1993220006", "DOI": "10.1016/0166-218X(89)90024-3",
      "CorpusId": 27613778}, "corpusId": 27613778, "publicationVenue": "8287474c-2cf8-4dfe-b1c6-cf6119d879ab",
      "url": "https://www.semanticscholar.org/paper/aebc2583ecf2e5f2e0ec36f23d54126d750a8694",
      "title": "Extremal broadcasting problems", "abstract": null, "venue": "Discrete
      Applied Mathematics", "year": 1989, "referenceCount": 13, "citationCount": 11,
      "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "1989-05-01", "journal": {"name": "Discret. Appl. Math.",
      "pages": "139-155", "volume": "23"}, "authors": [{"authorId": "1736181", "name":
      "R. Labahn"}]}, {"paperId": "accf2a191a4f6d7ff06fbdfdba6c1b1215df0c37", "externalIds":
      {"DBLP": "conf/soda/KawarabayashiK10", "DOI": "10.1007/s00493-014-2828-6", "CorpusId":
      38749149}, "corpusId": 38749149, "publicationVenue": "b4329971-63d6-4dd2-8f0b-d6e549d6c3a3",
      "url": "https://www.semanticscholar.org/paper/accf2a191a4f6d7ff06fbdfdba6c1b1215df0c37",
      "title": "The edge-disjoint paths problem in Eulerian graphs and 4-edge-connected
      graphs", "abstract": null, "venue": "Combinatorica", "year": 2014, "referenceCount":
      39, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2014-08-05", "journal":
      {"name": "Combinatorica", "pages": "477 - 495", "volume": "35"}, "authors":
      [{"authorId": "1743527", "name": "K. Kawarabayashi"}, {"authorId": "38575557",
      "name": "Yusuke Kobayashi"}]}, {"paperId": "71ef32ab507b86f6511cc1a032997d22d518de1e",
      "externalIds": {"DOI": "10.1017/9781108592376", "CorpusId": 242723869}, "corpusId":
      242723869, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/71ef32ab507b86f6511cc1a032997d22d518de1e",
      "title": "Topics in Algorithmic Graph Theory", "abstract": "Algorithmic graph
      theory has been expanding at an extremely rapid rate since the middle of the
      twentieth century, in parallel with the growth of computer science and the accompanying
      utilization of computers, where efficient algorithms have been a prime goal.
      This book presents material on developments of graph algorithms and related
      concepts that will be of value to both mathematicians and computer scientists,
      at a level suitable for graduate students, researchers and instructors. The
      15 expository chapters, written by acknowledged international experts on their
      subjects, focus on the development and application of algorithms to solve particular
      problems. All chapters have been carefully edited to enhance readability and
      to standardize the chapter structure as well as the terminology and notation.
      The editors provide basic background material in graph theory, and a chapter
      written by the book\u2019s Academic Consultant, Martin Charles Golumbic (University
      of Haifa, Israel), provides background material on algorithms connected with
      graph theory.", "venue": "", "year": null, "referenceCount": 0, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "77888938", "name": "Borkar"}]}, {"paperId":
      "2a12a79854e96701cd7412745809a59da42b86de", "externalIds": {"DOI": "10.1007/s00453-015-0075-x",
      "CorpusId": 253968945}, "corpusId": 253968945, "publicationVenue": "300eb16f-ce6c-495a-8da3-2e691bf9051d",
      "url": "https://www.semanticscholar.org/paper/2a12a79854e96701cd7412745809a59da42b86de",
      "title": "Certifying 3-Edge-Connectivity", "abstract": null, "venue": "Algorithmica",
      "year": 2015, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://arxiv.org/pdf/1211.6553",
      "status": "GREEN"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2015-09-22",
      "journal": {"name": "Algorithmica", "pages": "309 - 335", "volume": "77"}, "authors":
      [{"authorId": "1698752", "name": "K. Mehlhorn"}, {"authorId": "2055264790",
      "name": "Adrian Neumann"}, {"authorId": "34189607", "name": "Jens M. Schmidt"}]},
      {"paperId": "5f356ae9c8d7b9babfb43ad0f1db94159da38651", "externalIds": {"CorpusId":
      14621452}, "corpusId": 14621452, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5f356ae9c8d7b9babfb43ad0f1db94159da38651",
      "title": "Partitioning the Edges of a Planar Graph into Two Partial K-Trees",
      "abstract": "In this paper we prove two results on partitioning the edges of
      a planar graph into two partial k-trees, for fixed values of k. Interest in
      this class of partitioning problems arises since many intractable graph and
      network problems admit polynomial time solutions on k-trees and their subgraphs
      (partial k-trees). The first result shows that every planar graph is a union
      of two partial 3-trees. Furthermore, such a partitioning can be computed in
      linear time. Second, we show a recursive procedure to construct an infinite
      family of planar graphs in which every member does not admit a partitioning
      into a partial 1-tree (forest) and a partial 2-tree (series-parallel graph).",
      "venue": "", "year": 1988, "referenceCount": 25, "citationCount": 15, "influentialCitationCount":
      2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": [{"authorId": "1751772", "name": "E. Elmallah"},
      {"authorId": "1809509", "name": "C. Colbourn"}]}, {"paperId": "a6cebc1cb595fdb2807c29d8ea1224606f7275af",
      "externalIds": {"MAG": "2792169227", "DOI": "10.1080/03081087.2018.1438984",
      "CorpusId": 125392320}, "corpusId": 125392320, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/a6cebc1cb595fdb2807c29d8ea1224606f7275af",
      "title": "Minimizing algebraic connectivity over graphs made with some given
      blocks", "abstract": "ABSTRACT This article describes the structure of the graph
      minimizing the algebraic connectivity among all connected graphs made with some
      given blocks with fixed number of pendant blocks, the blocks that have exactly
      one point of articulation. As an application, we conclude that over all graphs
      made with given blocks, the algebraic connectivity is minimum for a graph whose
      block structure is a path.", "venue": "", "year": 2019, "referenceCount": 15,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2019-05-04", "journal": {"name": "Linear and Multilinear
      Algebra", "pages": "911 - 925", "volume": "67"}, "authors": [{"authorId": "40187145",
      "name": "D. Kalita"}, {"authorId": "122387521", "name": "K. Sarma"}]}, {"paperId":
      "3a0c48d07fbc5ed47927aecfdbb3755c70a202bb", "externalIds": {"MAG": "3164570297",
      "DOI": "10.3897/RIO.7.E68600", "CorpusId": 235364971}, "corpusId": 235364971,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3a0c48d07fbc5ed47927aecfdbb3755c70a202bb",
      "title": "Commentary - Methods to find all the edges on any of the shortest
      paths between two given nodes of a directed acyclic graph", "abstract": "This
      article puts forth all the existing methods proposed by the various authors
      of the Stack Exchange community to find all the edges on any shortest path between
      two given nodes of a directed acyclic graph. For a directed acyclic graph with
      N number of nodes, an exponential number of paths are possible between any two
      given nodes and, thus, it is not feasible to compute every path and find the
      shortest ones in polynomial time to generate a set of all edges that contribute
      or make any of the shortest paths. The methods discussed in this article are
      not limited only to this specific use case, but have a much broader scope in
      graph theory, dynamic programming and counting problems. Generally, various
      other questions and answers, raised on the community portal having similar scope
      to those that the users specifically seek, do not receive sufficient hits and,
      hence, enough attention and votes for various reasons worth contemplating. Therefore,
      this article also aims to highlight the various scopes of the methods discussed
      in this article and acknowledge the efforts of the authors, moderators and contributors
      of the Stack Exchange community for their expertise and time to write precise
      answers and share their opinions and advice. Finally, it also appeals to all
      the other beneficiaries in the community to use their privileges responsibly
      and upvote the posted answers, if they helped solve their queries, as one upvote
      is free of cost. \u2021 \u00a7 \u00a9 Ahire D, Jadhav O. This is an open access
      article distributed under the terms of the Creative Commons Attribution License
      (CC BY 4.0), which permits unrestricted use, distribution, and reproduction
      in any medium, provided the original author and source are credited.", "venue":
      "", "year": 2021, "referenceCount": 36, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://riojournal.com/article/68600/download/pdf/",
      "status": "GOLD"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2021-05-25", "journal": {"name": "Research Ideas and Outcomes", "volume": "7"},
      "authors": [{"authorId": "100923266", "name": "Deepak Tatyaji Ahire"}, {"authorId":
      "2107575525", "name": "O. Jadhav"}]}, {"paperId": "0060bb0fb1e2ababd590f7d38e40c0e23c183b7f",
      "externalIds": {"MAG": "2225125597", "CorpusId": 123846129}, "corpusId": 123846129,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0060bb0fb1e2ababd590f7d38e40c0e23c183b7f",
      "title": "\u041f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u0430\u044f
      \u043f\u0440\u0438\u0431\u043b\u0438\u0436\u0435\u043d\u043d\u0430\u044f \u0441\u0445\u0435\u043c\u0430
      \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u0447\u0438 \u0430\u043f\u043f\u0440\u043e\u043a\u0441\u0438\u043c\u0430\u0446\u0438\u0438
      \u043d\u0435\u043f\u043b\u043e\u0442\u043d\u044b\u0445 \u0433\u0440\u0430\u0444\u043e\u0432",
      "abstract": "A version of the graph approximation problem is considered: one
      has to find a nearest graph to the given one which has at most two connected
      components each of which is the complete graph. An asymptotically optimal algorithm
      and a polynomial approximation scheme for this problem on nondense graphs are
      proposed.", "venue": "", "year": 2007, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "101447713",
      "name": "\u0412. \u041f. \u0418\u043b\u044c\u0435\u0432"}, {"authorId": "102680084",
      "name": "\u0410. \u0410. \u041d\u0430\u0432\u0440\u043e\u0446\u043a\u0430\u044f"},
      {"authorId": "103225695", "name": "\u0410. \u0421. \u0422\u0430\u043b\u0435\u0432\u043d\u0438\u043d"}]},
      {"paperId": "7e7b79e9097a701e5db1bb0144744fae6e3144f8", "externalIds": {"MAG":
      "2406364470", "DOI": "10.1007/978-3-642-04295-9_18", "CorpusId": 124683199},
      "corpusId": 124683199, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/7e7b79e9097a701e5db1bb0144744fae6e3144f8",
      "title": "Preliminaries on Graphs", "abstract": null, "venue": "", "year": 1997,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "279-281", "volume": ""}, "authors": [{"authorId": "1936261", "name": "M. Deza"},
      {"authorId": "143961444", "name": "M. Laurent"}]}, {"paperId": "56052738a4986e067e2a8ec8b9e6300fbf571a9d",
      "externalIds": {"MAG": "2438182419", "CorpusId": 123717880}, "corpusId": 123717880,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/56052738a4986e067e2a8ec8b9e6300fbf571a9d",
      "title": "The structure of minimum cuts with applications to graph augmentation",
      "abstract": "The subject of this thesis is the structure of minimum cuts in
      a graph and its algorithmic implications. We are primarily (but not exclusively)
      concerned with two families of edge cuts in undirected graphs: connectivity
      cuts and multiterminal cuts. We derive simple and compact representations for
      these sets of cuts, and devise efficient algorithms to construct them. The advantage
      of these representations is that information about the cuts in the set can be
      easily extracted, and cuts from the set with special properties can be readily
      output. We also demonstrate how these structures can be used to design an efficient
      and simple solution to the Edge Augmentation Problem. \nThe problem of finding
      the smallest set of edges to add to a graph so that its edge-connectivity increases
      by a specified amount is called the Edge Augmentation Problem; this is a basic
      problem in network design and a fundamental graph theoretic question. We present
      a simple solution to this problem and some variants of it for undirected graphs.
      The running time of our solution improves over the previous solutions (for most
      inputs), and for the case where the connectivity increases by one, our solution
      is particularly simple and efficient. The solution makes an extensive use of
      several structures that represent selected collections of minimum cuts in the
      graph. \nA minimum-weight set of edges whose removal from the graph makes the
      graph unconnected is called a connectivity cut. The family of connectivity cuts
      in an undirected graph can be represented by a simple cactus structure. We present
      a parallel (${\\cal RNC})$ algorithm to construct this cactus, and give an alternative
      representation to this family of cuts which consists of $n-1$ Directed Acyclic
      Graphs. \nThe collection of minimum cuts between every possible pair of vertices
      are called multiterminal cuts. A classical representation of multiterminal cuts
      is the cut tree structure. We generalize the cut tree structure to node-weighted
      graphs and directed graphs. For undirected graphs, we show that a small set
      of selected $n-1$ Directed Acyclic Graphs contains all the essential information
      about multiterminal cuts. We show how to efficiently obtain a representation
      of the set of minimum cuts for every single pair of vertices from this selected
      (small) set of Directed Acyclic Graphs.", "venue": "", "year": 1992, "referenceCount":
      0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "authors": [{"authorId": "39936732", "name": "D. Naor"}]}, {"paperId":
      "875883ccc49269bb3fc6ba5fcf824fad8ba084ad", "externalIds": {"DBLP": "journals/corr/GiscardKW16",
      "MAG": "2951865167", "ArXiv": "1612.05531", "DOI": "10.1007/s00453-019-00552-1",
      "CorpusId": 15676701}, "corpusId": 15676701, "publicationVenue": "300eb16f-ce6c-495a-8da3-2e691bf9051d",
      "url": "https://www.semanticscholar.org/paper/875883ccc49269bb3fc6ba5fcf824fad8ba084ad",
      "title": "A General Purpose Algorithm for Counting Simple Cycles and Simple
      Paths of Any Length", "abstract": null, "venue": "Algorithmica", "year": 2016,
      "referenceCount": 48, "citationCount": 23, "influentialCitationCount": 2, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://eprints.whiterose.ac.uk/142675/1/Algo.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2016-12-16", "journal":
      {"name": "Algorithmica", "pages": "2716 - 2737", "volume": "81"}, "authors":
      [{"authorId": "144790942", "name": "P. Giscard"}, {"authorId": "1810077", "name":
      "Nils M. Kriege"}, {"authorId": "2111010157", "name": "Richard C. Wilson"}]},
      {"paperId": "44c0c2491b5aa73ee95e0bda5b74b6adda501142", "externalIds": {"DBLP":
      "journals/jmma/YoonKM11", "MAG": "2011697549", "DOI": "10.1007/s10852-011-9154-4",
      "CorpusId": 29974347}, "corpusId": 29974347, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/44c0c2491b5aa73ee95e0bda5b74b6adda501142",
      "title": "A Note on Edge-based Graph Partitioning and its Linear Algebraic Structure",
      "abstract": null, "venue": "J. Math. Model. Algorithms", "year": 2011, "referenceCount":
      27, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2011-09-01", "journal":
      {"name": "Journal of Mathematical Modelling and Algorithms", "pages": "269-276",
      "volume": "10"}, "authors": [{"authorId": "29774015", "name": "Yourim Yoon"},
      {"authorId": "46254373", "name": "Yong-Hyuk Kim"}, {"authorId": "1776999", "name":
      "B. Moon"}]}, {"paperId": "1198e6d067355048710c5779a8741a052f31e562", "externalIds":
      {"DBLP": "journals/corr/abs-1904-09470", "ArXiv": "1904.09470", "MAG": "2970947052",
      "DOI": "10.1007/s00453-021-00817-8", "CorpusId": 128316967}, "corpusId": 128316967,
      "publicationVenue": "300eb16f-ce6c-495a-8da3-2e691bf9051d", "url": "https://www.semanticscholar.org/paper/1198e6d067355048710c5779a8741a052f31e562",
      "title": "Cluster Deletion on Interval Graphs and Split Related Graphs", "abstract":
      null, "venue": "Algorithmica", "year": 2019, "referenceCount": 35, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://drops.dagstuhl.de/opus/volltexte/2019/10956/pdf/LIPIcs-MFCS-2019-12.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-04-20", "journal": {"name": "Algorithmica",
      "pages": "2018 - 2046", "volume": "83"}, "authors": [{"authorId": "38685168",
      "name": "A. Konstantinidis"}, {"authorId": "37950286", "name": "Charis Papadopoulos"}]},
      {"paperId": "03573aad4891ff4f38915bfd04c1d18ab706d40d", "externalIds": {"MAG":
      "1874409985", "CorpusId": 119884288}, "corpusId": 119884288, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/03573aad4891ff4f38915bfd04c1d18ab706d40d",
      "title": "Path Based Development Of Connectivity Algorithms", "abstract": "This
      paper presents notions of 1- and 2-connectivity. It starts with 1-connectivity
      of directed graphs, and it then examines 2-connectivity of undirected graphs.
      Depth-first search is the method of choice to calculate low order connectivity
      information.\u00a0 The algorithms which are designed for connectivity properties
      are originally due to Tarjan [1]. This paper follows the path-based development
      of [2], which simplifies the algorithms to eliminate the depth-first spanning
      tree.", "venue": "", "year": 2013, "referenceCount": 10, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2013-07-31", "journal": {"name":
      "International journal of innovative research and development", "volume": "2"},
      "authors": [{"authorId": "1753656527", "name": "G. Srinivasu"}, {"authorId":
      "144838792", "name": "B. V. Prasad"}]}, {"paperId": "9a6f0190353a828928583bedd675c58963095a24",
      "externalIds": {"MAG": "1927931645", "DBLP": "conf/dagstuhl/EiglspergerFK99",
      "DOI": "10.1007/3-540-44969-8_6", "CorpusId": 17438392}, "corpusId": 17438392,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/9a6f0190353a828928583bedd675c58963095a24",
      "title": "Orthogonal Graph Drawing", "abstract": null, "venue": "Drawing Graphs",
      "year": 2001, "referenceCount": 4, "citationCount": 52, "influentialCitationCount":
      2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2001-05-01", "journal": {"pages": "121-171"}, "authors":
      [{"authorId": "1778284", "name": "Markus Eiglsperger"}, {"authorId": "1707693",
      "name": "S. Fekete"}, {"authorId": "145740280", "name": "G. Klau"}]}, {"paperId":
      "18b6ebe072acea50056f79b7be35a9ff2e9a0f8e", "externalIds": {"MAG": "1977370680",
      "DBLP": "journals/ipl/ChangWYP14", "DOI": "10.1016/j.ipl.2014.06.015", "CorpusId":
      5609959}, "corpusId": 5609959, "publicationVenue": "44ecc2bb-f8fd-4c6d-bd54-30ca098be91d",
      "url": "https://www.semanticscholar.org/paper/18b6ebe072acea50056f79b7be35a9ff2e9a0f8e",
      "title": "A comment on \"Independent spanning trees in crossed cubes\"", "abstract":
      null, "venue": "Information Processing Letters", "year": 2014, "referenceCount":
      17, "citationCount": 18, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2014-12-01", "journal":
      {"name": "Inf. Process. Lett.", "pages": "734-739", "volume": "114"}, "authors":
      [{"authorId": "145147821", "name": "Jou-Ming Chang"}, {"authorId": "2987330",
      "name": "Jhen-Ding Wang"}, {"authorId": "2109646891", "name": "Jinn-Shyong Yang"},
      {"authorId": "144238393", "name": "Kung-Jui Pai"}]}, {"paperId": "e565345495506d631fc76a1b8a3cc296e3da051a",
      "externalIds": {"MAG": "2610729195", "DBLP": "conf/adhoc-now/Subramani05", "DOI":
      "10.1007/11561354_27", "CorpusId": 10522214}, "corpusId": 10522214, "publicationVenue":
      "545e003c-aab7-4115-a724-aafc6e16715d", "url": "https://www.semanticscholar.org/paper/e565345495506d631fc76a1b8a3cc296e3da051a",
      "title": "Stressing is Better Than Relaxing for Negative Cost Cycle Detection
      in Networks", "abstract": null, "venue": "International Conference on Ad-Hoc,
      Mobile and Wireless Networks", "year": 2005, "referenceCount": 7, "citationCount":
      5, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2005-10-06", "journal": {"pages": "320-333"}, "authors": [{"authorId": "145322647",
      "name": "K. Subramani"}]}, {"paperId": "45d6d0e25db0487a618436987b728c801167feb7",
      "externalIds": {"ArXiv": "1908.00092", "MAG": "2965553244", "DBLP": "journals/gc/BalkoGKKP22",
      "DOI": "10.1007/s00373-021-02419-1", "CorpusId": 199064227}, "corpusId": 199064227,
      "publicationVenue": "5ab12487-eaf0-4207-905d-168a4e222ee7", "url": "https://www.semanticscholar.org/paper/45d6d0e25db0487a618436987b728c801167feb7",
      "title": "Hypergraph Based Berge Hypergraphs", "abstract": null, "venue": "Graphs
      and Combinatorics", "year": 2019, "referenceCount": 36, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "http://arxiv.org/pdf/1908.00092", "status": "GREEN"}, "fieldsOfStudy": ["Mathematics",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2019-07-31", "journal": {"name": "Graphs and Combinatorics", "volume": "38"},
      "authors": [{"authorId": "2392008", "name": "M. Balko"}, {"authorId": "2887635",
      "name": "D\u00e1niel Gerbner"}, {"authorId": "2912043", "name": "D. Kang"},
      {"authorId": "1965116", "name": "Younjin Kim"}, {"authorId": "1683108", "name":
      "C. Palmer"}]}, {"paperId": "3fbf01476b92b195edfaef5f0026e3b5ce42c572", "externalIds":
      {"DBLP": "journals/corr/abs-2002-04727", "MAG": "3005984214", "ArXiv": "2002.04727",
      "DOI": "10.2139/ssrn.4074791", "CorpusId": 211082851}, "corpusId": 211082851,
      "publicationVenue": "93644c5d-eeed-4394-8d63-4eb9216ba3e3", "url": "https://www.semanticscholar.org/paper/3fbf01476b92b195edfaef5f0026e3b5ce42c572",
      "title": "A simple certifying algorithm for 3-edge-connectivity", "abstract":
      "A linear-time certifying algorithm for 3-edge-connectivity is presented. Given
      an undirected graph G, if G is 3-edge-connected, the algorithm generates a construction
      sequence as a positive certificate for G. Otherwise, the algorithm decomposes
      G into its 3-edge-connected components and at the same time generates a construction
      sequence for each connected component as well as the bridges and a cactus representation
      of the cut-pairs in G. All of these are done by making only one pass over G
      using an innovative graph contraction technique. Moreover, the graph need not
      be 2-edge-connected.", "venue": "Theoretical Computer Science", "year": 2020,
      "referenceCount": 42, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2002.04727", "status":
      "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2020-02-11", "journal": {"name": "Theor. Comput. Sci.", "pages": "113760",
      "volume": "951"}, "authors": [{"authorId": "2159047", "name": "Yung H. Tsin"}]},
      {"paperId": "314c01f6ba10eff0ce3a78bb5ea28a588958a3e4", "externalIds": {"MAG":
      "2797959561", "DOI": "10.1007/978-3-319-73235-0_12", "CorpusId": 126414994},
      "corpusId": 126414994, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/314c01f6ba10eff0ce3a78bb5ea28a588958a3e4",
      "title": "Algebraic and Dynamic Graph Algorithms", "abstract": null, "venue":
      "", "year": 2018, "referenceCount": 20, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate":
      null, "journal": {"name": "", "pages": "369-393", "volume": ""}, "authors":
      [{"authorId": "1691511", "name": "K. Erciyes"}]}, {"paperId": "b446b4d71035752b330f7d60859e5ee4d13f5406",
      "externalIds": {"MAG": "151723213", "DOI": "10.1007/978-3-322-91579-5_5", "CorpusId":
      118680024}, "corpusId": 118680024, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/b446b4d71035752b330f7d60859e5ee4d13f5406",
      "title": "Introduction to Graph Theory and Shortest Spanning Trees", "abstract":
      null, "venue": "", "year": 2000, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "pages": "105-116", "volume":
      ""}, "authors": [{"authorId": "1683928", "name": "H. Hamacher"}, {"authorId":
      "1734499", "name": "K. Klamroth"}]}, {"paperId": "d10b7fc73704190eaa576a0ce3567c90d3c19f36",
      "externalIds": {"MAG": "2032370604", "DBLP": "journals/acta/Tarjan76", "DOI":
      "10.1007/BF00268499", "CorpusId": 12044793}, "corpusId": 12044793, "publicationVenue":
      "0c66bac6-fc2b-46b2-8953-fda36a3cefd5", "url": "https://www.semanticscholar.org/paper/d10b7fc73704190eaa576a0ce3567c90d3c19f36",
      "title": "Edge-disjoint spanning trees and depth-first search", "abstract":
      null, "venue": "Acta Informatica", "year": 1976, "referenceCount": 23, "citationCount":
      163, "influentialCitationCount": 12, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "1976-06-01", "journal":
      {"name": "Acta Informatica", "pages": "171-185", "volume": "6"}, "authors":
      [{"authorId": "1721050", "name": "R. Tarjan"}]}, {"paperId": "5ca9b88971a3d11d3fee21d58fdcca903e793420",
      "externalIds": {"MAG": "1519398705", "DOI": "10.4995/MSEL.2011.3086", "CorpusId":
      117931125}, "corpusId": 117931125, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5ca9b88971a3d11d3fee21d58fdcca903e793420",
      "title": "Un problema a resolver con los algoritmos de caminos m\u00e1s cortos",
      "abstract": "Graph theory solves, via a good modelization, a very large number
      of problems in different areas. This is why, this theory has been having an
      exponential increase in the last years. One of the basic problems that this
      theory solves is to obtain the shortest path between two points. In order to
      illustrate this problem, to motivate its study and to introduce the student
      in the world of the mathematical modelization and its large range of possibilities,
      we present a specific case: to help the police to catch the authors of a theft.
      The solution consists of representing the city where it took place by a no directed
      positive weighted graph and to apply the Floyd\u2019s algorithm mixed with a
      reasoning of combinatorial type. At the end of the exercise, we can assure that
      the thieves cannot escape, by using another concept of graph theory, the vertex-cut.",
      "venue": "", "year": 2011, "referenceCount": 4, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://polipapers.upv.es/index.php/MSEL/article/download/3086/3190",
      "status": "GOLD"}, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2011-06-05",
      "journal": {"name": "Modelling in Science Education and Learning", "pages":
      "263-273", "volume": "4"}, "authors": [{"authorId": "2053283871", "name": "Cristina
      Jord\u00e1n"}, {"authorId": "47524994", "name": "J. Burriel"}, {"authorId":
      "2090603959", "name": "Raquel Herr\u00e1iz"}]}]}

      '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Connection:
      - keep-alive
      Content-Length:
      - '156365'
      Content-Type:
      - application/json
      Date:
      - Wed, 13 Sep 2023 21:45:43 GMT
      Via:
      - 1.1 7e35b683005d768b7c720f84f8a9e476.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - Q__OMFyND8u0QfNiE6YFAMmVIz5pTsOdcYdYuQRIlPQsHO0gVs6ciQ==
      X-Amz-Cf-Pop:
      - EWR53-C1
      X-Cache:
      - Miss from cloudfront
      x-amz-apigw-id:
      - LNwNFH2yvHcFdsQ=
      x-amzn-Remapped-Connection:
      - keep-alive
      x-amzn-Remapped-Content-Length:
      - '156365'
      x-amzn-Remapped-Date:
      - Wed, 13 Sep 2023 21:45:43 GMT
      x-amzn-Remapped-Server:
      - gunicorn
      x-amzn-RequestId:
      - 9f7f856d-20ab-4f15-855f-0014b8a353b1
    http_version: HTTP/1.1
    status_code: 200
version: 1
