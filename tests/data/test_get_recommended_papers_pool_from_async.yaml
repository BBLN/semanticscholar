interactions:
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - api.semanticscholar.org
      user-agent:
      - python-httpx/0.25.1
    method: GET
    uri: https://api.semanticscholar.org/recommendations/v1/papers/forpaper/10.1145/3544585.3544600?&fields=abstract,authors,citationCount,corpusId,externalIds,fieldsOfStudy,influentialCitationCount,isOpenAccess,journal,openAccessPdf,paperId,publicationDate,publicationTypes,publicationVenue,referenceCount,s2FieldsOfStudy,title,url,venue,year&limit=100&from=all-cs
  response:
    content: '{"recommendedPapers": [{"paperId": "9c1ab0728d90e35992fe24a1fc43b076e8229eb5",
      "externalIds": {"MAG": "761778066", "CorpusId": 117069249}, "corpusId": 117069249,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/9c1ab0728d90e35992fe24a1fc43b076e8229eb5",
      "title": "Another view on two graph orientation problems", "abstract": "Note:
      PRO 00.07 Reference ROSO-CONF-2000-007 Record created on 2006-02-13, modified
      on 2016-08-08", "venue": "", "year": 2000, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "152", "volume": ""}, "authors": [{"authorId": "2918362", "name": "A. Prodon"}]},
      {"paperId": "fd46b52af508ff4b625b5855dbe822f8c81fb9e6", "externalIds": {"CorpusId":
      35175169}, "corpusId": 35175169, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/fd46b52af508ff4b625b5855dbe822f8c81fb9e6",
      "title": "Solutions Midterm Exam 2 Solutions Problem", "abstract": "Answer:
      O(n log n) Justification: The running time satisfies T (n) = 3T (dn/3e) + \u0398(n
      log n). Master theorem: Here a = b = 3 and the work term has the from nb a log
      n for k = 1. So the solution has the from T (n) = nb a log n = n log n. (b)
      Suppose you are given a directed graph G = (V, E) with lengths ` : E \u2192
      R for each edge, a source node s and a list of candidate distances d(v) (where
      d(v) is the claimed to be the length of the shortest path from s to v in G).
      What is the running time of the fastest algorithm which checks whether the distances
      d are correct?", "venue": "", "year": 2010, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
      [{"authorId": "39765787", "name": "Adam D. Smith"}]}, {"paperId": "3d1b511ed028a3a948fb647e9bf70699dde74562",
      "externalIds": {"ArXiv": "2104.04810", "DOI": "10.1007/978-3-030-83823-2_3",
      "CorpusId": 233210190}, "corpusId": 233210190, "publicationVenue": "03d8c2a4-d329-4119-82c2-72e9a4bee91b",
      "url": "https://www.semanticscholar.org/paper/3d1b511ed028a3a948fb647e9bf70699dde74562",
      "title": "Nested Cycles with No Geometric Crossings", "abstract": null, "venue":
      "Trends in Mathematics", "year": 2021, "referenceCount": 18, "citationCount":
      14, "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/2104.04810", "status": "GREEN"}, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2021-04-10", "journal": {"name": "Trends in Mathematics"}, "authors": [{"authorId":
      "2072817790", "name": "Irene Gil Fern''andez"}, {"authorId": "2116670242", "name":
      "Jaehoon Kim"}, {"authorId": "1965116", "name": "Younjin Kim"}, {"authorId":
      "2118902602", "name": "Hong Liu"}]}, {"paperId": "7a75ccca8fa9b0e27d933634a975e0c86a15b4d1",
      "externalIds": {"MAG": "595300436", "CorpusId": 117863185}, "corpusId": 117863185,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/7a75ccca8fa9b0e27d933634a975e0c86a15b4d1",
      "title": "PROBLEMS IN TOPOLOGICAL GRAPH THEORY : QUESTIONS I CAN''T ANSWER",
      "abstract": ". This paper describes my Problems in Topological Graph Theory,
      which can be accessed through the world-wide-web at This list of problems is
      constantly being revised; the interested reader is encour-aged to submit additions
      and updates.", "venue": "", "year": 1999, "referenceCount": 7, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "89-92", "volume": "47"}, "authors": [{"authorId": "2569739", "name": "D. Archdeacon"}]},
      {"paperId": "893e0ac2174b2dbbdbc18c8d223bbcfc7883afc3", "externalIds": {"MAG":
      "2952332314", "DBLP": "journals/mp/Lee19", "ArXiv": "1607.05122", "DOI": "10.1007/s10107-018-1255-7",
      "CorpusId": 3001121}, "corpusId": 3001121, "publicationVenue": "127cc63d-75ce-4cfb-9d35-18641daba70c",
      "url": "https://www.semanticscholar.org/paper/893e0ac2174b2dbbdbc18c8d223bbcfc7883afc3",
      "title": "Partitioning a graph into small pieces with applications to path transversal",
      "abstract": null, "venue": "Mathematical programming", "year": 2016, "referenceCount":
      43, "citationCount": 48, "influentialCitationCount": 2, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/1607.05122", "status": "GREEN"},
      "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2016-07-18", "journal": {"name": "Mathematical Programming",
      "pages": "1 - 19", "volume": "177"}, "authors": [{"authorId": "37359504", "name":
      "Euiwoong Lee"}]}, {"paperId": "ab3eeec31a5e9a68e2387a375cd126e74c35459c", "externalIds":
      {"MAG": "2288843953", "DBLP": "books/hal/Bessy12", "CorpusId": 11829132}, "corpusId":
      11829132, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ab3eeec31a5e9a68e2387a375cd126e74c35459c",
      "title": "Some problems in graph theory and graphs algorithmic theory", "abstract":
      "This document is a long abstract of my research work, concerning graph theory
      and algorithms on graphs. It summarizes some results, gives ideas of the proof
      for some of them and presents the context of the different topics together with
      some interesting open questions connected to them The first part precises the
      notations used in the rest of the paper; the second part deals with some problems
      on cycles in digraphs; the third part is an overview of two graph coloring problems
      and one problem on structures in colored graphs; finally the fourth part focus
      on some results in algorithmic graph theory, mainly in parametrized complexity.",
      "venue": "", "year": 2012, "referenceCount": 173, "citationCount": 2, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate": "2012-02-09",
      "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "2768268", "name":
      "S. Bessy"}]}, {"paperId": "3f41043996c8e1d39f93aae84010e811b70a240f", "externalIds":
      {"DOI": "10.31219/osf.io/a496n", "CorpusId": 240340516}, "corpusId": 240340516,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3f41043996c8e1d39f93aae84010e811b70a240f",
      "title": "Another graph partitioning optimization problem", "abstract": "This
      paper de\ufb01nes yet another graph partitioning problem in the form of a combinatorial
      optimization problem. A reduction from 3-way Cut (cf. [1]) problem shows that
      our claim holds.", "venue": "", "year": 2018, "referenceCount": 1, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://figshare.com/articles/journal_contribution/Another_graph_partitioning_optimization_problem/7750913/1/files/14423672.pdf",
      "status": "GREEN"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2018-08-04",
      "journal": null, "authors": [{"authorId": "145327695", "name": "T. Nguyen"}]},
      {"paperId": "2b9564a2937a60152160680f173debb6f141c5cd", "externalIds": {"CorpusId":
      48440673}, "corpusId": 48440673, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2b9564a2937a60152160680f173debb6f141c5cd",
      "title": "Lecture Notes on Union-find", "abstract": "Kruskal\u2019s algorithm
      for minimum weight spanning trees starts with a collection of single-node trees
      and adds edges until it has constructed a spanning tree. At each step, it must
      decide if adding the edge under consideration would create a cycle. If so, the
      edge would not be added to the spanning tree; if not, it will. In this lecture
      we will consider an efficient data structure for checking if adding an edge
      to a partial spanning tree would create a cycle, a so-called union-find structure.",
      "venue": "", "year": 2011, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": [{"authorId": "1723967", "name": "F. Pfenning"}]},
      {"paperId": "66ffbc9d663cb9d3cfb51dd3aa45f3576f763191", "externalIds": {"MAG":
      "2109692093", "DBLP": "reference/algo/Pettie16a", "DOI": "10.1007/978-1-4939-2864-4_239",
      "CorpusId": 16114117}, "corpusId": 16114117, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/66ffbc9d663cb9d3cfb51dd3aa45f3576f763191",
      "title": "Minimum Spanning Trees", "abstract": null, "venue": "Encyclopedia
      of Algorithms", "year": 2011, "referenceCount": 50, "citationCount": 51, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics", "Geography"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Mathematics", "source": "external"},
      {"category": "Geography", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2011-02-15", "journal": {"pages":
      "1322-1325"}, "authors": [{"authorId": "2239410324", "name": "Seth Pettie"}]},
      {"paperId": "66ffbc9d663cb9d3cfb51dd3aa45f3576f763191", "externalIds": {"MAG":
      "2109692093", "DBLP": "reference/algo/Pettie16a", "DOI": "10.1007/978-1-4939-2864-4_239",
      "CorpusId": 16114117}, "corpusId": 16114117, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/66ffbc9d663cb9d3cfb51dd3aa45f3576f763191",
      "title": "Minimum Spanning Trees", "abstract": null, "venue": "Encyclopedia
      of Algorithms", "year": 2011, "referenceCount": 50, "citationCount": 51, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics", "Geography"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Mathematics", "source": "external"},
      {"category": "Geography", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2011-02-15", "journal": {"pages":
      "1322-1325"}, "authors": [{"authorId": "2239410324", "name": "Seth Pettie"}]},
      {"paperId": "8606499bc45921285c6a7bfe10fc751009bece08", "externalIds": {"DBLP":
      "journals/jct/AlonK14", "ArXiv": "1306.3916", "MAG": "2077152698", "DOI": "10.1016/j.jcta.2014.02.006",
      "CorpusId": 12043969}, "corpusId": 12043969, "publicationVenue": "8a32f160-84d2-4c72-b3ab-c5de11116574",
      "url": "https://www.semanticscholar.org/paper/8606499bc45921285c6a7bfe10fc751009bece08",
      "title": "Two notions of unit distance graphs", "abstract": null, "venue": "Journal
      of combinatorial theory. Series A", "year": 2013, "referenceCount": 14, "citationCount":
      25, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "external"}, {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2013-06-17", "journal": {"name": "J.
      Comb. Theory, Ser. A", "pages": "1-17", "volume": "125"}, "authors": [{"authorId":
      "1734327", "name": "N. Alon"}, {"authorId": "1679129", "name": "A. Kupavskii"}]},
      {"paperId": "992986c934747fa5cb333463f7d65ebb45eb70ab", "externalIds": {"ArXiv":
      "1707.08047", "MAG": "2747715876", "CorpusId": 51814361}, "corpusId": 51814361,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/992986c934747fa5cb333463f7d65ebb45eb70ab",
      "title": "Not Conway''s 99-Graph Problem", "abstract": "Conway''s 99-graph problem
      is the second problem amongst the five 1000\\$ 2017 open problems set. Four
      out of the five remain unsolved to this day, including the 99-graph problem.
      In this paper we quote Conway''s definition of the problem and give an alternative
      interpretation of it, which we humorously name \"not Conway''s 99-graph problem\".
      We solve the alternative interpretation completely.", "venue": "", "year": 2017,
      "referenceCount": 2, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2017-07-25",
      "journal": {"name": "arXiv: Combinatorics", "volume": ""}, "authors": [{"authorId":
      "102924564", "name": "Sa\u2019ar Zehavi"}, {"authorId": "102823772", "name":
      "Ivo Fagundes David de Olivera"}]}, {"paperId": "49f0e32f5d4a20f1890c29f2abef56700a8fdd6f",
      "externalIds": {"MAG": "2360271695", "CorpusId": 124166039}, "corpusId": 124166039,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/49f0e32f5d4a20f1890c29f2abef56700a8fdd6f",
      "title": "Correctly Master Broken Circle Method with Graph Theory", "abstract":
      "The article points out the errors about \"Broken Circle Method\"of some books
      by using the theory about \"Directed Tree\" and \"Weighted Graph\"and at the
      same time it introduces two kinds of new methods.It also explains in detail
      how to use \"Broken Circle Method\"correctly.", "venue": "", "year": 2007, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "1470902398", "name": "Pan Su-zhen"}]},
      {"paperId": "e848d9507658660551e2d0d9033d4a4d1742bd86", "externalIds": {"CorpusId":
      18862674}, "corpusId": 18862674, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/e848d9507658660551e2d0d9033d4a4d1742bd86",
      "title": "Notes on the Net \u2013 Tree Construction Algorithm", "abstract":
      "(a) Let rmax = maxp 6=q\u2208P dP (p, q) and rmin = minp6=q\u2208P dP (p, q).
      Let p\u2217 \u2208 P be arbitrary. Clearly, we have P \u2282 B(p\u2217, rmax).
      Let i be the smallest integer such that rmax \u2264 2rmin. Then, we have log2(rmax/rmin)
      = log2(\u03a6(P )) \u2264 i < log2(\u03a6(P )) + 1. By definition of the doubling
      constant, the ball B(p\u2217, rmax) can be covered by at most \u03bbi+1 < \u03bblog2(\u03a6(P
      ))+2 balls of radius at most rmax/2. However, for any p \u2208 P , we have B(p,
      rmax/2) \u2229 P = {p}. It follows that |P | \u2264 \u03bbO(log \u03a6), as
      desired.", "venue": "", "year": 2006, "referenceCount": 6, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
      [{"authorId": "1734000", "name": "A. M. So"}]}, {"paperId": "18b1598183996e8d972e57ab95a6c7d26ea92a06",
      "externalIds": {"CorpusId": 15846985}, "corpusId": 15846985, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/18b1598183996e8d972e57ab95a6c7d26ea92a06",
      "title": "Reports in Informatics Issn 0333-3590 Lex M versus Mcs-m Lex M versus
      Mcs-m", "abstract": "We study the problem of minimal triangulation of graphs.
      One of the first algorithms to solve this problem is Lex M, which was presented
      in 1976. A new algorithm, and a simplification of Lex M, called MCS-M was presented
      in 2002. In this paper we compare these two algorithms and show that they produce
      the same set of chordal graphs, answering an open question mentioned by the
      authors of MCS-M.", "venue": "", "year": 2004, "referenceCount": 15, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
      [{"authorId": "2286924", "name": "Yngve Villanger"}, {"authorId": "2104665959",
      "name": "Lex M versus MCS-M"}]}, {"paperId": "6c5881c95aa4c376c662c2c39292f19c2ceb9899",
      "externalIds": {"MAG": "2350474652", "CorpusId": 124329471}, "corpusId": 124329471,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6c5881c95aa4c376c662c2c39292f19c2ceb9899",
      "title": "A Probe into AND/OR Graph Search AJgorithms", "abstract": "The AND/OR
      graph search algorithms are discussed. We analyze their complexity, and emphasize
      their advantages and shortcomings as well. Some improved points are put forward.
      In addition, we porbe into an analogy search method.", "venue": "", "year":
      1999, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": [{"authorId": "71730312", "name": "Yang Xian-ze"}]},
      {"paperId": "a0b8115d23bbaf919dd37e5741507e9233ccb14f", "externalIds": {"DBLP":
      "journals/dm/Keqin85", "MAG": "2073087946", "DOI": "10.1016/0012-365X(85)90067-6",
      "CorpusId": 21338101}, "corpusId": 21338101, "publicationVenue": "2f38f299-9909-4c8e-a12e-76fca8afb42e",
      "url": "https://www.semanticscholar.org/paper/a0b8115d23bbaf919dd37e5741507e9233ccb14f",
      "title": "A problem on algebraic graph theory", "abstract": null, "venue": "Discrete
      Mathematics", "year": 1985, "referenceCount": 3, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "1985-03-01", "journal": {"name": "Discret. Math.", "pages":
      "107-109", "volume": "54"}, "authors": [{"authorId": "66446769", "name": "Feng
      Keqin"}]}, {"paperId": "69d31752e09d8d5ec96ba7dfcccfab9b03666b84", "externalIds":
      {"DBLP": "journals/dam/FialaGKLP12", "MAG": "2099793997", "DOI": "10.1016/j.dam.2011.02.004",
      "CorpusId": 17425083}, "corpusId": 17425083, "publicationVenue": "8287474c-2cf8-4dfe-b1c6-cf6119d879ab",
      "url": "https://www.semanticscholar.org/paper/69d31752e09d8d5ec96ba7dfcccfab9b03666b84",
      "title": "Distance three labelings of trees", "abstract": null, "venue": "Discrete
      Applied Mathematics", "year": 2012, "referenceCount": 41, "citationCount": 11,
      "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "external"}, {"category": "Computer Science", "source":
      "external"}, {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2012-04-01", "journal": {"name": "Discret.
      Appl. Math.", "pages": "764-779", "volume": "160"}, "authors": [{"authorId":
      "40160286", "name": "J. Fiala"}, {"authorId": "1720941", "name": "P. Golovach"},
      {"authorId": "144775704", "name": "Jan Kratochv\u00edl"}, {"authorId": "1718606",
      "name": "Bernard Lidick\u00fd"}, {"authorId": "8867084", "name": "D. Paulusma"}]},
      {"paperId": "2f26a895f5579f8dd234aef5fd4f55404d8ddd3b", "externalIds": {"MAG":
      "2407136895", "ArXiv": "1901.05206", "DBLP": "journals/jact/Ziemianski20", "DOI":
      "10.1007/s41468-019-00040-z", "CorpusId": 119305057}, "corpusId": 119305057,
      "publicationVenue": "f434f649-1188-4297-9bd8-58942db8a135", "url": "https://www.semanticscholar.org/paper/2f26a895f5579f8dd234aef5fd4f55404d8ddd3b",
      "title": "Spaces of directed paths on pre-cubical sets II", "abstract": null,
      "venue": "Journal of Applied and Computational Topology", "year": 2016, "referenceCount":
      27, "citationCount": 13, "influentialCitationCount": 3, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Physics", "Computer
      Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"},
      {"category": "Physics", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2016-05-26", "journal":
      {"name": "Journal of Applied and Computational Topology", "pages": "45 - 78",
      "volume": "4"}, "authors": [{"authorId": "2095292704", "name": "Krzysztof Ziemia''nski"}]},
      {"paperId": "2c5eb355a56549858391adee075629cc753b2de5", "externalIds": {"CorpusId":
      221791526}, "corpusId": 221791526, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2c5eb355a56549858391adee075629cc753b2de5",
      "title": "1 A First Encounter with Graphs", "abstract": "There is not much fun
      in listing basic definitions about graphs (this is quite a bad introduction
      to start with!) but if we seek a rigorous presentation of results and proofs,
      then we cannot avoid giving accurate definitions of the objects that we will
      manipulate, but hopefully nice examples will also come quickly. In this book,
      we assume that the reader has a basic (or, at least a naive) knowledge of sets
      and operations on them.", "venue": "", "year": 2016, "referenceCount": 13, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": []}, {"paperId": "586b6a34456a13e5d32a6f8bc6c4f9e96f848e2a",
      "externalIds": {"DBLP": "journals/networks/PandaD07", "DOI": "10.1002/net.20198",
      "CorpusId": 3978885}, "corpusId": 3978885, "publicationVenue": "69d79d4c-49aa-4c2b-b616-80100a634f67",
      "url": "https://www.semanticscholar.org/paper/586b6a34456a13e5d32a6f8bc6c4f9e96f848e2a",
      "title": "On tree 3\u2010spanners in directed path graphs", "abstract": "A spanning
      tree T of a graph G is said to be a tree t\u2010spanner if the distance between
      any two vertices in T is at most t times their distance in G. While the complexity
      of the problem of recognizing whether a graph has a tree t\u2010spanner is known
      for any fixed t\u22603, the case t = 3 is still open. H.\u2010O. Le and V. B.
      Le (1999, Networks, 34(2), 81\u201087) have shown that every directed path graph
      admits a tree 3\u2010spanner by proposing an algorithm to construct a tree 3\u2010spanner
      of a given directed path graph. In this paper, we point out a flaw in their
      algorithm by producing a directed path graph for which their algorithm fails
      to produce a tree 3\u2010spanner although the graph admits a tree 3\u2010spanner.
      Furthermore, we show that directed path graphs need not admit tree 3\u2010spanners
      in general. Next, we show that directed path graphs of diameter two always admit
      tree 2\u2010spanners and hence tree 3\u2010spanners. Finally, we show that a
      tree 2\u2010spanner of a diameter two directed path graph can be constructed
      in linear time. \u00a9 2007 Wiley Periodicals, Inc. NETWORKS, Vol. 50(3), 203\u2013210
      2007", "venue": "Networks", "year": 2007, "referenceCount": 21, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2007-10-01", "journal":
      {"name": "Networks", "volume": "50"}, "authors": [{"authorId": "2246625318",
      "name": "B. S. Panda"}, {"authorId": "48806821", "name": "Anita Das"}]}, {"paperId":
      "115bb1a8a7b45745649202af73524517c191b9ea", "externalIds": {"CorpusId": 54193941},
      "corpusId": 54193941, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/115bb1a8a7b45745649202af73524517c191b9ea",
      "title": "Graph Theory 2017 \u2013 EPFL \u2013", "abstract": "The first is a
      multigraph, which can have multiple edges and loops; the corresponding definition
      would allow the edge set and the edges to be multisets. The second is a directed
      graph, in which every edge has a direction; in the corresponding definition
      the edges would be ordered pairs instead of two-element subsets. In this course
      we mostly avoid these variants for simplicity, although they are certainly very
      useful objects. The graphs of these type appear, e.g., when trying to model
      Internet: represent sites (or web pages) as vertices, and links", "venue": "",
      "year": 2017, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "1679129", "name": "A. Kupavskii"}]},
      {"paperId": "586b6a34456a13e5d32a6f8bc6c4f9e96f848e2a", "externalIds": {"DBLP":
      "journals/networks/PandaD07", "DOI": "10.1002/net.20198", "CorpusId": 3978885},
      "corpusId": 3978885, "publicationVenue": "69d79d4c-49aa-4c2b-b616-80100a634f67",
      "url": "https://www.semanticscholar.org/paper/586b6a34456a13e5d32a6f8bc6c4f9e96f848e2a",
      "title": "On tree 3\u2010spanners in directed path graphs", "abstract": "A spanning
      tree T of a graph G is said to be a tree t\u2010spanner if the distance between
      any two vertices in T is at most t times their distance in G. While the complexity
      of the problem of recognizing whether a graph has a tree t\u2010spanner is known
      for any fixed t\u22603, the case t = 3 is still open. H.\u2010O. Le and V. B.
      Le (1999, Networks, 34(2), 81\u201087) have shown that every directed path graph
      admits a tree 3\u2010spanner by proposing an algorithm to construct a tree 3\u2010spanner
      of a given directed path graph. In this paper, we point out a flaw in their
      algorithm by producing a directed path graph for which their algorithm fails
      to produce a tree 3\u2010spanner although the graph admits a tree 3\u2010spanner.
      Furthermore, we show that directed path graphs need not admit tree 3\u2010spanners
      in general. Next, we show that directed path graphs of diameter two always admit
      tree 2\u2010spanners and hence tree 3\u2010spanners. Finally, we show that a
      tree 2\u2010spanner of a diameter two directed path graph can be constructed
      in linear time. \u00a9 2007 Wiley Periodicals, Inc. NETWORKS, Vol. 50(3), 203\u2013210
      2007", "venue": "Networks", "year": 2007, "referenceCount": 21, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2007-10-01", "journal":
      {"name": "Networks", "volume": "50"}, "authors": [{"authorId": "2246625318",
      "name": "B. S. Panda"}, {"authorId": "48806821", "name": "Anita Das"}]}, {"paperId":
      "44a97b79ed90f17e8dbe58e330624f7d398ab729", "externalIds": {"MAG": "1986475947",
      "DOI": "10.1007/BF01068311", "CorpusId": 119895681}, "corpusId": 119895681,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/44a97b79ed90f17e8dbe58e330624f7d398ab729",
      "title": "A method of constructing minimal failure cuts", "abstract": null,
      "venue": "", "year": 1991, "referenceCount": 2, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "1991-05-01", "journal": {"name": "Cybernetics and Systems Analysis", "pages":
      "320-323", "volume": "27"}, "authors": [{"authorId": "2070405946", "name": "D.
      Alekseev"}]}, {"paperId": "4b6da1a83bdd79202663cc2fe04addbbc74111cf", "externalIds":
      {"DBLP": "phd/ca/Chaplick12", "MAG": "2564348232", "CorpusId": 125344771}, "corpusId":
      125344771, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4b6da1a83bdd79202663cc2fe04addbbc74111cf",
      "title": "Path Graphs and PR-trees", "abstract": "The PR-tree data structure
      is introduced to characterize the sets of path-tree models of path graphs. We
      further characterize the sets of directed path-tree models of directed path
      graphs with a slightly restricted form of the PR-tree called the Strong PR-tree.
      Additionally, via PR-trees and Strong PR-trees, we characterize path graphs
      and directed path graphs by their Split Decompositions. Two distinct approaches
      (Split Decomposition and Reduction ) are presented to construct a PR-tree that
      captures the path-tree models of a given graph G = (V, E) with n = |V| and m
      = |E|. An implementation of the split decomposition approach is presented which
      runs in O (nm) time. Similarly, an implementation of the reduction approach
      is presented which runs in O (A(n + m) nm) time (where A(s) is the inverse of
      Ackermann''s function arising from Union-Find [40]). Also, from a PR-tree, an
      algorithm to construct a corresponding Strong PR-tree is given which runs in
      O (n + m) time. The sizes of the PR-trees and Strong PR-trees produced by these
      approaches are O (n + m) with respect to the given graph. Furthermore, we demonstrate
      that an implicit form of the PR-tree and Strong PR-tree can be represented in
      O (n) space.", "venue": "", "year": 2012, "referenceCount": 0, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "1798388",
      "name": "S. Chaplick"}]}, {"paperId": "f6c952628d866f8418533aa4c70e5ca71c888f88",
      "externalIds": {"MAG": "2053469126", "DBLP": "journals/dam/Babel00", "DOI":
      "10.1016/S0166-218X(99)00140-7", "CorpusId": 20123365}, "corpusId": 20123365,
      "publicationVenue": "8287474c-2cf8-4dfe-b1c6-cf6119d879ab", "url": "https://www.semanticscholar.org/paper/f6c952628d866f8418533aa4c70e5ca71c888f88",
      "title": "Recognition and Isomorphism of Tree-like P4-connected Graphs", "abstract":
      null, "venue": "Discrete Applied Mathematics", "year": 2000, "referenceCount":
      18, "citationCount": 9, "influentialCitationCount": 4, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2000-02-01", "journal":
      {"name": "Discret. Appl. Math.", "pages": "295-315", "volume": "99"}, "authors":
      [{"authorId": "3213320", "name": "Luitpold Babel"}]}, {"paperId": "c356f3289bfbb1cdbe916c4385dcce9140cc7cba",
      "externalIds": {"DBLP": "conf/csr/GeorgiadisNP11", "MAG": "1890074740", "ArXiv":
      "1012.4938", "DOI": "10.1007/s00224-013-9450-7", "CorpusId": 14769261}, "corpusId":
      14769261, "publicationVenue": "2f29fc80-b44b-4da3-9bad-0ac6d02b8c58", "url":
      "https://www.semanticscholar.org/paper/c356f3289bfbb1cdbe916c4385dcce9140cc7cba",
      "title": "Join-Reachability Problems in Directed Graphs", "abstract": null,
      "venue": "Theory of Computing Systems", "year": 2010, "referenceCount": 33,
      "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf":
      {"url": "https://arxiv.org/pdf/1012.4938", "status": "GREEN"}, "fieldsOfStudy":
      ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Mathematics", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2010-12-22", "journal": {"name": "Theory of Computing Systems", "pages": "347
      - 379", "volume": "55"}, "authors": [{"authorId": "2317777", "name": "L. Georgiadis"},
      {"authorId": "1701558", "name": "Stavros D. Nikolopoulos"}, {"authorId": "2952169",
      "name": "Leonidas Palios"}]}, {"paperId": "6363e363304b962a0a8745a3cfa71e1a546b10d1",
      "externalIds": {"CorpusId": 201913660}, "corpusId": 201913660, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/6363e363304b962a0a8745a3cfa71e1a546b10d1",
      "title": "On Edge Product Cordial Labeling of Some Product Related Graphs",
      "abstract": "An edge product cordial labeling is a variant of product cordial
      labeling. We have explored this concept in the context of different graph products.",
      "venue": "", "year": 2014, "referenceCount": 13, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Biology", "source": "s2-fos-model"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "32056272", "name": "S. Vaidya"},
      {"authorId": "102980368", "name": "C. M. Barasara"}]}, {"paperId": "1caf25b50a3e7c00a1f8e0e1f7065e8af2f3259d",
      "externalIds": {"MAG": "2112910303", "DOI": "10.1109/99.537087", "CorpusId":
      122860357}, "corpusId": 122860357, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1caf25b50a3e7c00a1f8e0e1f7065e8af2f3259d",
      "title": "Making connections [graph theory]", "abstract": "One of the problems
      that occurs repeatedly in scientific computing is deciding whether an object
      is connected or disconnected. It happens that this question is related to finding
      a spanning tree for a graph. In other words, if you have a set of points with
      connections between some pairs of them, you would like the least number of connections
      that still keeps the set connected. You can find this minimum spanning tree
      with a method called depth first search, among other ways. The paper addresses
      the question of determining connected components.", "venue": "", "year": 1996,
      "referenceCount": 0, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "IEEE Computational Science and Engineering", "pages":
      "9-12", "volume": "3"}, "authors": [{"authorId": "2645879", "name": "I. Beichl"},
      {"authorId": "21851704", "name": "F. Sullivan"}]}, {"paperId": "de25af6fb22d43b90f5bc1ddf585d379751e6845",
      "externalIds": {"DBLP": "journals/corr/abs-2104-09312", "ArXiv": "2104.09312",
      "CorpusId": 233297077}, "corpusId": 233297077, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/de25af6fb22d43b90f5bc1ddf585d379751e6845",
      "title": "Minimizing the total weighted pairwise connection time in network
      construction problems", "abstract": "It is required to find an optimal order
      of constructing the edges of a network so as to minimize the sum of the weighted
      connection times of relevant pairs of vertices. Construction can be performed
      anytime anywhere in the network, with a fixed overall construction speed. The
      problem is strongly NP-hard even on stars. We present polynomial algorithms
      for the problem on trees with a fixed number of leaves, and on general networks
      with a fixed number of relevant pairs.", "venue": "arXiv.org", "year": 2021,
      "referenceCount": 13, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2021-04-19", "journal":
      {"name": "ArXiv", "volume": "abs/2104.09312"}, "authors": [{"authorId": "1711724",
      "name": "I. Averbakh"}]}, {"paperId": "b5d5ff30b6ee8307ed167bb45b479fe2cd17e48b",
      "externalIds": {"DBLP": "conf/fun/RytterS12", "MAG": "148236311", "DOI": "10.1007/978-3-642-30347-0_34",
      "CorpusId": 41106666}, "corpusId": 41106666, "publicationVenue": "65c96e9a-f50c-4de5-9d90-08c9301d3d34",
      "url": "https://www.semanticscholar.org/paper/b5d5ff30b6ee8307ed167bb45b479fe2cd17e48b",
      "title": "Computing Maximum Hamiltonian Paths in Complete Graphs with Tree Metric",
      "abstract": null, "venue": "Fun with Algorithms", "year": 2012, "referenceCount":
      4, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2012-06-04", "journal":
      {"pages": "346-356"}, "authors": [{"authorId": "1687977", "name": "W. Rytter"},
      {"authorId": "2392894", "name": "Bartosz Szreder"}]}, {"paperId": "5655cd5fa1119a5ec7f1afa14fb46f0a8e4c67c8",
      "externalIds": {"CorpusId": 259327048}, "corpusId": 259327048, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/5655cd5fa1119a5ec7f1afa14fb46f0a8e4c67c8",
      "title": "COMP 3804 \u2014 Solutions Assignment 3 Question 1", "abstract": "(2.1)
      Draw the DFS -forest obtained by running algorithm DFS; the pseudocode is given
      at the end of this assignment. Algorithm DFS uses algorithm Explore as a subroutine.
      The pseudocode for this subroutine is also given at the end of this assignment.
      Classify each edge as a tree edge, forward edge, back edge, or cross edge. In
      the DFS forest, give the preand post-number of each vertex. Whenever there is
      a choice of vertices, pick the one that is alphabetically first.", "venue":
      "", "year": 2022, "referenceCount": 13, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": []}, {"paperId":
      "3f5efa3ccb50258eadd5328e5824447d1f7dcb78", "externalIds": {"DBLP": "conf/stoc/DolevHSS84",
      "MAG": "2102024624", "DOI": "10.1145/800057.808723", "CorpusId": 15233558},
      "corpusId": 15233558, "publicationVenue": "8113a511-e0d9-4231-a1bc-0bf5d0212a4e",
      "url": "https://www.semanticscholar.org/paper/3f5efa3ccb50258eadd5328e5824447d1f7dcb78",
      "title": "A new look at fault tolerant network routing", "abstract": "Consider
      a communication network G in which a limited number of link and/or node faults
      F might occur. A routing &rgr; for the network (a fixed path between each pair
      of nodes) must be chosen without any knowledge of which components might become
      faulty. Choosing a good routing corresponds to bounding the diameter of the
      surviving route graph R(G,&rgr;)/F, where two nonfaulty nodes are joined by
      an edge if there are no faults on the route between them. We prove a number
      of results concerning the diameter of surviving route graphs. We show that if
      &rgr; is a minimal length routing, then the diameter of R(G,&rgr;)/F can be
      on the order of the number of nodes of G, even if F consists of only a single
      node. However, if G is the n-dimensional cube, the diameter of R(G,&rgr;)/F\u22643
      for any minimal length routing &rgr; and any set of faults F with |F|<n. We
      also show that if F consists only of edges and does not disconnect G, then the
      diameter of R(G,&rgr;)/F is \u2264 3|F|+1, while if F consists only of nodes
      and does not disconnect G, then the diameter of R(G,&rgr;)/F is \u2264 the sum
      of the degrees of the nodes in F, where in both cases &rgr; is an arbitrary
      minimal length routing. We conclude with one of the most important contributions
      of this paper: a list of interesting and apparently difficult open problems.",
      "venue": "Symposium on the Theory of Computing", "year": 1984, "referenceCount":
      8, "citationCount": 56, "influentialCitationCount": 3, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "1984-12-01", "journal": {"pages": "526-535"}, "authors": [{"authorId": "1740191",
      "name": "D. Dolev"}, {"authorId": "1691828", "name": "Joseph Y. Halpern"}, {"authorId":
      "4000309", "name": "B. Simons"}, {"authorId": "144406233", "name": "H. Strong"}]},
      {"paperId": "9b4a45a72c26db4e15a78ca224c14d733a3e6922", "externalIds": {"DBLP":
      "conf/spaa/EvenL92", "MAG": "2000595973", "DOI": "10.1145/140901.140908", "CorpusId":
      13516309}, "corpusId": 13516309, "publicationVenue": "43893b55-fde6-4e2b-9d2e-c15a669a1f94",
      "url": "https://www.semanticscholar.org/paper/9b4a45a72c26db4e15a78ca224c14d733a3e6922",
      "title": "Layered cross product\u2014a technique to construct interconnection
      networks", "abstract": "We introduce a Layered Cross Product \u2014 A Technique
      to Construct Interconnection Networks Shimon Even* and Ami Litmant Computer
      Science Department Technion, Israel Institute of Technology Haifa, Israel 32000
      Layered Cross Product, LCP, of layered graphs and show that several well known
      networks are LCP-S of simple layered graphs, such as trees. Some important properties
      of these networks are shown to be trivial consequences, once a network is presented
      as an LCP of simpler graphs. We believe that this new tool will make the construction
      of new networks easier, and it will simplify the study of the properties of
      known and new networks.", "venue": "ACM Symposium on Parallelism in Algorithms
      and Architectures", "year": 1992, "referenceCount": 11, "citationCount": 13,
      "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "1992-06-01", "journal": {"pages": "60-69"}, "authors": [{"authorId": "1733075",
      "name": "S. Even"}, {"authorId": "145903595", "name": "A. Litman"}]}, {"paperId":
      "53ff71bdce845c27ca44097d4c87792991827664", "externalIds": {"MAG": "2907875989",
      "DBLP": "conf/isaac/LoS18", "DOI": "10.4230/LIPIcs.ISAAC.2018.38", "CorpusId":
      54448302}, "corpusId": 54448302, "publicationVenue": "01259446-be8e-4510-a20c-cf0cb92f2a75",
      "url": "https://www.semanticscholar.org/paper/53ff71bdce845c27ca44097d4c87792991827664",
      "title": "A Cut Tree Representation for Pendant Pairs", "abstract": "Two vertices
      v and w of a graph G are called a pendant pair if the maximal number of edge-disjoint
      paths in G between them is precisely min{d(v), d(w)}, where d denotes the degree
      function. The importance of pendant pairs stems from the fact that they are
      the key ingredient in one of the simplest and most widely used algorithms for
      the minimum cut problem today. Mader showed 1974 that every simple graph with
      minimum degree \u03b4 contains \u03a9(\u03b42) pendant pairs; this is the best
      bound known so far. We improve this result by showing that every simple graph
      G with minimum degree \u03b4 \u2265 5 or with edge-connectivity \u03bb \u2265
      4 or with vertex-connectivity \u03ba \u2265 3 contains in fact \u03a9(\u03b4|V
      |) pendant pairs. We prove that this bound is tight from several perspectives,
      and that \u03a9(\u03b4|V |) pendant pairs can be computed efficiently, namely
      in linear time when a Gomory-Hu tree is given. Our method utilizes a new cut
      tree representation of graphs. 2012 ACM Subject Classification Mathematics of
      computing \u2192 Graph theory, Mathematics of computing \u2192 Graph algorithms",
      "venue": "International Symposium on Algorithms and Computation", "year": 2018,
      "referenceCount": 16, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null,
      "journal": {"pages": "38:1-38:9"}, "authors": [{"authorId": "22238802", "name":
      "O. S. Lo"}, {"authorId": "34189607", "name": "Jens M. Schmidt"}]}, {"paperId":
      "7dc3433d22de7f3438014a6f703dba14ca5bce29", "externalIds": {"MAG": "2088408040",
      "DOI": "10.1016/0898-1221(91)90191-6", "CorpusId": 122854146}, "corpusId": 122854146,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/7dc3433d22de7f3438014a6f703dba14ca5bce29",
      "title": "Total exchange algorithms on \u2018sandwich graphs\u2019", "abstract":
      null, "venue": "", "year": 1991, "referenceCount": 2, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "Computers & Mathematics With Applications", "pages": "45-48", "volume":
      "22"}, "authors": [{"authorId": "2968332", "name": "K. Coolsaet"}, {"authorId":
      "2829390", "name": "V. Fack"}]}, {"paperId": "1f155d99f0ed9b913816fce103bff39e7c0e615e",
      "externalIds": {"MAG": "2000675724", "ArXiv": "cond-mat/0501594", "DOI": "10.1142/S0129183105008114",
      "CorpusId": 14367739}, "corpusId": 14367739, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/1f155d99f0ed9b913816fce103bff39e7c0e615e",
      "title": "How To Count Trees", "abstract": "We propose a new topological invariant
      of unlabeled trees of N nodes. The invariant is a set of N\u00d72 matrices of
      integers, with \u2211j kdi, j and vi as the matrix elements, where di, j are
      the elements of the distance matrix and vi denotes ith node''s degree and k\u2208\u2115.
      To compare the invariant calculated for possibly different graphs, the matrix
      rows are ordered with respect to the first column, and, if necessary, with respect
      to the second one. We use the new invariant to evaluate from below the number
      of topologically different unlabeled trees up to N =17. The results slightly
      exceed the asymptotic evaluation of Otter.", "venue": "", "year": 2005, "referenceCount":
      12, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/cond-mat/0501594", "status":
      "GREEN"}, "fieldsOfStudy": ["Mathematics", "Physics"], "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "external"}, {"category": "Physics", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2005-01-25",
      "journal": {"name": "International Journal of Modern Physics C", "pages": "1527-1534",
      "volume": "16"}, "authors": [{"authorId": "102699689", "name": "S. Piec"}, {"authorId":
      "3209892", "name": "K. Malarz"}, {"authorId": "35283720", "name": "K. Ku\u0142akowski"}]},
      {"paperId": "b29e4c6a8fdd99f37bf9b27ca2f205f1912fc235", "externalIds": {"MAG":
      "3169545093", "DOI": "10.1155/2021/9958077", "CorpusId": 236277885}, "corpusId":
      236277885, "publicationVenue": "7dca74ab-1f45-4640-8345-73db5a41d0fa", "url":
      "https://www.semanticscholar.org/paper/b29e4c6a8fdd99f37bf9b27ca2f205f1912fc235",
      "title": "Distance Two Surjective Labelling of Paths and Interval Graphs", "abstract":
      "<jats:p>Graph labelling problem has been broadly studied for a long period
      for its applications, especially in frequency assignment in (mobile) communication
      system, <jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M1\">\n                        <mi>X</mi>\n                     </math>\n                  </jats:inline-formula>-ray
      crystallography, circuit design, etc. Nowadays, surjective <jats:inline-formula>\n                     <math
      xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"M2\">\n                        <mi>L</mi>\n                        <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                           <mrow>\n                              <mn>2,1</mn>\n                           </mrow>\n                        </mfenced>\n                     </math>\n                  </jats:inline-formula>-labelling
      is a well-studied problem. Motivated from the <jats:inline-formula>\n                     <math
      xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"M3\">\n                        <mi>L</mi>\n                        <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                           <mrow>\n                              <mn>2,1</mn>\n                           </mrow>\n                        </mfenced>\n                     </math>\n                  </jats:inline-formula>-labelling
      problem and the importance of surjective <jats:inline-formula>\n                     <math
      xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"M4\">\n                        <mi>L</mi>\n                        <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                           <mrow>\n                              <mn>2,1</mn>\n                           </mrow>\n                        </mfenced>\n                     </math>\n                  </jats:inline-formula>-labelling
      problem, we consider surjective <jats:inline-formula>\n                     <math
      xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"M5\">\n                        <mi>L</mi>\n                        <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                           <mrow>\n                              <mn>2,1</mn>\n                           </mrow>\n                        </mfenced>\n                     </math>\n                  </jats:inline-formula>-labelling
      (<jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M6\">\n                        <mtext>SL</mtext>\n                        <mn>21</mn>\n                     </math>\n                  </jats:inline-formula>-labelling)
      problems for paths and interval graphs. For any graph <jats:inline-formula>\n                     <math
      xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"M7\">\n                        <mi>G</mi>\n                        <mo>=</mo>\n                        <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                           <mrow>\n                              <mi>V</mi>\n                              <mo>,</mo>\n                              <mi>E</mi>\n                           </mrow>\n                        </mfenced>\n                     </math>\n                  </jats:inline-formula>,
      an <jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M8\">\n                        <mtext>SL</mtext>\n                        <mn>21</mn>\n                     </math>\n                  </jats:inline-formula>-labelling
      is a mapping <jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M9\">\n                        <mi>\u03c6</mi>\n                        <mo>:</mo>\n                        <mi>V</mi>\n                        <mo>\u27f6</mo>\n                        <mfenced
      open=\"{\" close=\"}\" separators=\"|\">\n                           <mrow>\n                              <mn>1,2</mn>\n                              <mo>,</mo>\n                              <mo>\u2026</mo>\n                              <mo>,</mo>\n                              <mi>n</mi>\n                           </mrow>\n                        </mfenced>\n                     </math>\n                  </jats:inline-formula>
      so that, for every pair of nodes <jats:inline-formula>\n                     <math
      xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"M10\">\n                        <mi>u</mi>\n                     </math>\n                  </jats:inline-formula>
      and <jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M11\">\n                        <mi>v</mi>\n                     </math>\n                  </jats:inline-formula>,
      if <jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M12\">\n                        <mi>d</mi>\n                        <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                           <mrow>\n                              <mi>u</mi>\n                              <mo>,</mo>\n                              <mi>v</mi>\n                           </mrow>\n                        </mfenced>\n                        <mo>=</mo>\n                        <mn>1</mn>\n                     </math>\n                  </jats:inline-formula>,
      then <jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M13\">\n                        <mfenced open=\"|\" close=\"|\" separators=\"|\">\n                           <mrow>\n                              <mi>\u03c6</mi>\n                              <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                                 <mrow>\n                                    <mi>u</mi>\n                                 </mrow>\n                              </mfenced>\n                              <mo>\u2212</mo>\n                              <mi>\u03c6</mi>\n                              <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                                 <mrow>\n                                    <mi>v</mi>\n                                 </mrow>\n                              </mfenced>\n                           </mrow>\n                        </mfenced>\n                        <mo>\u2265</mo>\n                        <mn>2</mn>\n                     </math>\n                  </jats:inline-formula>;
      and if <jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M14\">\n                        <mi>d</mi>\n                        <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                           <mrow>\n                              <mi>u</mi>\n                              <mo>,</mo>\n                              <mi>v</mi>\n                           </mrow>\n                        </mfenced>\n                        <mo>=</mo>\n                        <mn>2</mn>\n                     </math>\n                  </jats:inline-formula>,
      then <jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M15\">\n                        <mfenced open=\"|\" close=\"|\" separators=\"|\">\n                           <mrow>\n                              <mi>\u03c6</mi>\n                              <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                                 <mrow>\n                                    <mi>u</mi>\n                                 </mrow>\n                              </mfenced>\n                              <mo>\u2212</mo>\n                              <mi>\u03c6</mi>\n                              <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                                 <mrow>\n                                    <mi>v</mi>\n                                 </mrow>\n                              </mfenced>\n                           </mrow>\n                        </mfenced>\n                        <mo>\u2265</mo>\n                        <mn>1</mn>\n                     </math>\n                  </jats:inline-formula>,
      and every label <jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M16\">\n                        <mn>1,2</mn>\n                        <mo>,</mo>\n                        <mo>\u2026</mo>\n                        <mo>,</mo>\n                        <mi>n</mi>\n                     </math>\n                  </jats:inline-formula>
      is used exactly once, where <jats:inline-formula>\n                     <math
      xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"M17\">\n                        <mi>d</mi>\n                        <mfenced
      open=\"(\" close=\")\" separators=\"|\">\n                           <mrow>\n                              <mi>u</mi>\n                              <mo>,</mo>\n                              <mi>v</mi>\n                           </mrow>\n                        </mfenced>\n                     </math>\n                  </jats:inline-formula>
      represents the distance between the nodes <jats:inline-formula>\n                     <math
      xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"M18\">\n                        <mi>u</mi>\n                     </math>\n                  </jats:inline-formula>
      and <jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M19\">\n                        <mi>v</mi>\n                     </math>\n                  </jats:inline-formula>,
      and <jats:inline-formula>\n                     <math xmlns=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M20\">\n                        <mi>n</mi>\n                     </math>\n                  </jats:inline-formula>
      is the number of nodes of graph <jats:inline-formula>\n                     <math
      xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"M21\">\n                        <mi>G</mi>\n                     </math>\n                  </jats:inline-formula>.
      In the present article, it is proved that any path <jats:inline-formula>\n                     <math
      xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"M22\">\n                        <msub>\n                           <mrow>\n                              <mi>P</mi>\n                           </mrow>\n                           <mrow>\n                              <mi>n</mi>\n                           </mrow>\n                        </ms",
      "venue": "Discrete Dynamics in Nature and Society", "year": 2021, "referenceCount":
      45, "citationCount": 12, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://downloads.hindawi.com/journals/ddns/2021/9958077.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "external"}, {"category": "Mathematics", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-06-07", "journal": {"name":
      "Discrete Dynamics in Nature and Society"}, "authors": [{"authorId": "90666756",
      "name": "Sk Amanathulla"}, {"authorId": "144703761", "name": "G. Muhiuddin"},
      {"authorId": "1403763431", "name": "D. Al-Kadi"}, {"authorId": "2054108119",
      "name": "M. Pal"}]}, {"paperId": "c54a575be47b73220196ba56a03b6131164b3819",
      "externalIds": {"MAG": "2256395349", "DOI": "10.17969/JN.V13I1.840", "CorpusId":
      124538007}, "corpusId": 124538007, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/c54a575be47b73220196ba56a03b6131164b3819",
      "title": "IDENTIFY CONNECTIVITY GRAPH USING A MODIFIED PR\u00dcFER\u2019S ALGORITHM
      LABELLING TREES", "abstract": "Connectivity of graph easily can be given when
      we see it with the bare of eyes, but needs an algorithm that can assure the
      connectivity in computerization. Some graphs require the connectivity in their
      definitions, such as Hamiltonian graph, Eulerian graph and tree. The connectivity
      become important in order to solve any of graphs'' problems by using computer
      technology. Most of the algorithm cannot run perfectly, if the graph which is
      given was not connected. It is happened to Djikstra and Prufer graphs for example.
      However, this study will provide the solution by modifying Prufer algorithm
      to show the connectivity in the graph.", "venue": "", "year": 2013, "referenceCount":
      8, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2013-03-01",
      "journal": {"name": "", "volume": "13"}, "authors": [{"authorId": "2078170710",
      "name": "Al Aiyub"}, {"authorId": "103356282", "name": "M. Ihsan"}, {"authorId":
      "18154757", "name": "Rahma Zuhra"}]}, {"paperId": "18af3d49eb31ba3a348de3c47986ed49600b356c",
      "externalIds": {"CorpusId": 262215522}, "corpusId": 262215522, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/18af3d49eb31ba3a348de3c47986ed49600b356c",
      "title": "Algorithms Example Sheet 4 : Problems Solution Notes", "abstract":
      "(e) (Maybe only a few of these) Show that the following de nitions are equivalent
      to the de nition of a tree: i. A tree is one component of a forest. (A forest
      is an acyclic graph.) ii. A tree is a connected graph with at most V \u2212
      1 edges. iii. A tree is a minimally connected graph; removing any edge disconnects
      the graph. iv. A tree is an acyclic graph with at least V \u2212 1 edges. v.
      A tree is a maximally acyclic graph; adding an edge between any two vertices
      creates a cycle. vi. A tree is a graph that contains a unique path between each
      pair of vertices.", "venue": "", "year": 2022, "referenceCount": 15, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
      []}, {"paperId": "5942616aef4c13559cc08a1b30a92703efbffc15", "externalIds":
      {"CorpusId": 18995}, "corpusId": 18995, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5942616aef4c13559cc08a1b30a92703efbffc15",
      "title": "MICHAEL J. PELSMAJER Brief Research Summary (October 2007)", "abstract":
      "Mostly I study graph theory: sometimes more as mathematics (structural, extremal)
      and sometimes more as computer science (algorithms, complexity), although one
      often helps with the other, and I have interests (graph drawing, tree-width)
      that fall squarely in the middle of of the two fields. As for topics, I have
      not particularly specialized or restricted the types of problems I work on.
      Rather, as I look back it seems that for the most part, I selected projects
      based simply on niceness: of a problem, the people involved, and whether there
      is an application. Unfortunately my style of working makes it harder to quickly
      summarize my work, even assuming that the reader knows is familiar with basic
      graph theory concepts (terminology will agree with [84] or [27] whenever possible.)
      However, this is what I must do next. Unless specified otherwise, all graphs
      are assumed to be simple, and G is a graph on n vertices.", "venue": "", "year":
      2007, "referenceCount": 78, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "1709295", "name": "M. J. Pelsmajer"}]},
      {"paperId": "6fbd4bab086f429baa2764e38d172c33c8a33737", "externalIds": {"DOI":
      "10.1515/9783110635485-002", "CorpusId": 241127096}, "corpusId": 241127096,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6fbd4bab086f429baa2764e38d172c33c8a33737",
      "title": "2 The stable marriage problem", "abstract": "A large part of the course
      will address ways of \u201cdealing\u201d with NP-hard optimization problems.
      Recall that these are problems that (unless P = NP) do not have polynomial time
      algorithms. One example is Vertex Cover. A vertex cover is a subset of vertices
      in a graph such that every edge in the graph is incident on at least one of
      the vertices. The associated optimization problem, Vertex Cover, is to find
      a minimal vertex cover\u2014 i.e., one with the smallest possible number of
      vertices. Here are some ways we will address NP-hard optimization problems:",
      "venue": "Optimal Transport", "year": 2021, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2021-01-18", "journal": {"name":
      "Optimal Transport"}, "authors": [{"authorId": "1717488", "name": "D. Melkebeek"}]},
      {"paperId": "b3235fbf2a5dce8978bbd36e0f28a9cb05426305", "externalIds": {"CorpusId":
      17937215}, "corpusId": 17937215, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/b3235fbf2a5dce8978bbd36e0f28a9cb05426305",
      "title": "Advanced Algorithms Course. Lecture Notes. Part 3 Disjoint Paths and
      Routing", "abstract": "Given a directed graph with m edges, and k node pairs
      (s i , t i), we wish to find directed paths from s i to t i for as many as possible
      indices i, that do not share any edges. We also call such paths edge-disjoint.
      This is a fundamental problem in routing in networks. Imagine that we want to
      send goods, information, etc., from source nodes to destination nodes along
      available directed paths, without unreasonable congestion. In general we cannot
      send everything simultaneously, but we may try and maximize the number of served
      requests. The problem is NP-complete (which we do not prove here), but we present
      an algorithm with approximation ratio O(\u221a m). The square root is a \" small
      \" function, still the quality of the solution deteriorates with growing network
      size. This result seems to be poor, but it is the best possible guarantee one
      can achieve in polynomial time, and still better than no guarantee at all. As
      often, the idea of a greedy algorithm is simple: Short paths should minimize
      the chances of conflicts with other paths, and the shortest paths can be computed
      efficiently. Therefore, the proposed algorithm just chooses a shortest path
      that connects some yet unconnected pair and adds it to the solution, as long
      as possible. After every step we delete the edges of the path used, in order
      to avoid collisions with paths chosen later. However, the idea is not as powerful
      as one might hope: In each step there could exist many short paths to choose
      from, and we may easily miss a good one, since we only take length as selection
      criterion. But at least we can prove the O(\u221a m) factor, as follows. Let
      I * and I denote the set of indices i of the pairs (s i , t i) connected by
      the optimal and the greedy solution, respectively. Let P * i and P i denote
      the selected paths for index i.", "venue": "", "year": null, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": []}, {"paperId": "4d39232a5b86f1a09a5d0fd88266cca9940dfac6",
      "externalIds": {"MAG": "2144852945", "DOI": "10.1109/TCS.1985.1085721", "CorpusId":
      122814169}, "corpusId": 122814169, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4d39232a5b86f1a09a5d0fd88266cca9940dfac6",
      "title": "An approximate formula for counting trees in a graph", "abstract":
      "In the paper, an approximate formula for counting trees in a graph is presented.
      The formula estimates the change in the number of trees of a reference graph
      after adding or removing a certain number of lines to obtain a graph with the
      same number of lines as the graph considered. It is assumed that the reference
      graph and the graph analyzed have the same number of points. It is also assumed
      that the number of trees of a reference graph changes with a change in the number
      of lines identically as in a uniform graph. Special classes of reference graphs
      are discussed and formulas for counting trees are given.", "venue": "", "year":
      1985, "referenceCount": 11, "citationCount": 10, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "1985-04-01", "journal": {"name": "IEEE Transactions on Circuits and Systems",
      "pages": "382-385", "volume": "32"}, "authors": [{"authorId": "49421541", "name":
      "J. Wojciechowski"}]}, {"paperId": "87f8c7e5d93dc3f8e376bcc117d5917a3ef42105",
      "externalIds": {"DBLP": "conf/wg/1992", "DOI": "10.1007/3-540-56402-0", "CorpusId":
      1572251}, "corpusId": 1572251, "publicationVenue": "2f5d0e8a-faad-4f10-b323-2b2e3c439a78",
      "url": "https://www.semanticscholar.org/paper/87f8c7e5d93dc3f8e376bcc117d5917a3ef42105",
      "title": "Graph-Theoretic Concepts in Computer Science", "abstract": null, "venue":
      "Lecture Notes in Computer Science", "year": 1992, "referenceCount": 0, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"volume": "657"}, "authors": []},
      {"paperId": "b4f6791c75533491c27b7d3858da428ebef17e6b", "externalIds": {"MAG":
      "2487390077", "CorpusId": 38037591}, "corpusId": 38037591, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/b4f6791c75533491c27b7d3858da428ebef17e6b",
      "title": "Graph-Theoretic Concepts in Computer Science", "abstract": "We study
      the problem of simultaneously embedding several graphs on the same vertex set
      in such a way that edges common to two or more graphs are represented by the
      same curve. This problem is known as simultaneously embedding graphs with fixed
      edges. We show that this problem is closely related to the weak realizability
      problem: Can a graph be drawn such that all edge crossings occur in a given
      set of edge pairs? By exploiting this relationship we can explain why the simultaneous
      embedding problem is challenging, both from a computational and a combinatorial
      point of view. More precisely, we prove that simultaneously embedding graphs
      with fixed edges is NP-complete even for three planar graphs. For two planar
      graphs the complexity status is still open.", "venue": "", "year": 2006, "referenceCount":
      0, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "volume":
      ""}, "authors": [{"authorId": "1744120", "name": "F. Fomin"}]}, {"paperId":
      "bc273d1ef032da0def56f9824d5b4d2ccdf28f23", "externalIds": {"MAG": "2608652533",
      "DOI": "10.7494/OPMATH.2017.37.4.501", "CorpusId": 20668424}, "corpusId": 20668424,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/bc273d1ef032da0def56f9824d5b4d2ccdf28f23",
      "title": "Spanning trees with a bounded number of leaves", "abstract": "In 1998,
      H. Broersma and H. Tuinstra proved that: Given a connected graph \\(G\\) with
      \\(n\\geq 3\\) vertices, if \\(d(u)+d(v)\\geq n-k+1\\) for all non-adjacent
      vertices \\(u\\) and \\(v\\) of \\(G\\) (\\(k\\geq 1\\)), then \\(G\\) has a
      spanning tree with at most \\(k\\) leaves. In this paper, we generalize this
      result by using implicit degree sum condition of \\(t\\) (\\(2\\leq t\\leq k\\))
      independent vertices and we prove what follows: Let \\(G\\) be a connected graph
      on \\(n\\geq 3\\) vertices and \\(k\\geq 2\\) be an integer. If the implicit
      degree sum of any \\(t\\) independent vertices is at least \\(\\frac{t(n-k)}{2}+1\\)
      for (\\(k\\geq t\\geq 2\\)), then \\(G\\) has a spanning tree with at most \\(k\\)
      leaves.", "venue": "", "year": 2017, "referenceCount": 13, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "Opuscula
      Mathematica", "pages": "501-508", "volume": "37"}, "authors": [{"authorId":
      "3165098", "name": "Junqing Cai"}, {"authorId": "3262237", "name": "E. Flandrin"},
      {"authorId": "2152297901", "name": "Hao Li"}, {"authorId": "2112590308", "name":
      "Qiang Sun"}]}, {"paperId": "30287549b01c0846d04be53574b4525f4b61fcb6", "externalIds":
      {"MAG": "806160400", "CorpusId": 118380540}, "corpusId": 118380540, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/30287549b01c0846d04be53574b4525f4b61fcb6",
      "title": "Disjoint euclidean paths problem (DEPP)", "abstract": "Note: PRO 91.03
      Reference ROSO-CONF-1991-001 Record created on 2006-02-13, modified on 2016-08-08",
      "venue": "", "year": 1991, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "pages": "10", "volume":
      ""}, "authors": [{"authorId": "2159430", "name": "T. Liebling"}]}, {"paperId":
      "7007b7dbee34b7b87919b081289c96c4de92a183", "externalIds": {"CorpusId": 14915223},
      "corpusId": 14915223, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/7007b7dbee34b7b87919b081289c96c4de92a183",
      "title": "Lecture 3 Shortest paths , graph diameter", "abstract": "Today we
      will talk about algorithms for finding shortest paths in a graph. We will also
      talk about algorithms for finding the diameter of a graph. There are two types
      of shortest-path problems: single-source shortest paths and all-pairs shortest
      paths. Single-source shortest paths. In the single-source shortest paths problem
      (SSSP), we are given a graph G = (V, E) and a source node s \u2208 V , and we
      must compute d(s, v) for all v \u2208 V. If the graph is unweighted, we can
      solve this in O(m + n) time by breadth-first search (BFS). If the graph has
      nonnegative integer weights, we can use Dijkstra''s algorithm with Fibonacci
      heaps, yielding a runtime of O(m + n log n). When G is undirected, Thorup (1999)
      [1] improved this runtime to O(m + n), in the \" word-RAM \" model of computation,
      in which the weights fit in words in memory, and operations on word integers
      take constant time. All-pairs shortest paths. In the all-pairs shortest paths
      problem (APSP), we are given a graph G = (V, E) and we must compute the distances
      between all pairs of vertices. The prior work on APSP is as follows. If G is
      unweighted, we can compute APSP in O(mn) time using breadth-first search from
      every source node. For dense graphs, one can obtain better running times using
      fast matrix multiplication. Seidel [4] showed that APSP in undirected graphs
      with n nodes can be computed in O(n 2.38) time, which is the fastest known running
      time for n \u00d7 n matrix multiplication. The problem seems harder in directed
      graphs. Zwick [5] showed that one can again use matrix multiplication for APSP
      in directed graphs, however obtaining the slower O(n 2.54) running time. Unfortunately,
      the theoretically fast algorithms for matrix multiplication are largely impractical.
      For instance, their running times hide large constant factors. Because of this,
      researchers often talk about searching for \" combinatorial \" algorithms for
      APSP, i.e. algorithms that do not use matrix multiplication as a black box,
      but hopefully use more practical methods. Open problem: Is there an O(n 3\u2212\u01eb)
      time algorithm (for some constant \u01eb > 0) for all-pairs shortest paths in
      unweighted graphs that doesn''t use matrix multiplication? Consider now APSP
      when the input graph has integer edge weights. If the edge weights are nonnegative,
      then APSP can be done in O(mn + n 2 log n) time by \u2026", "venue": "", "year":
      null, "referenceCount": 8, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": []}, {"paperId": "12bc78410570753c46db1f61e2250440d39c2fc2",
      "externalIds": {"MAG": "2503004676", "CorpusId": 56074483}, "corpusId": 56074483,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/12bc78410570753c46db1f61e2250440d39c2fc2",
      "title": "A Lower Bound on the Degree Distance in a Tree", "abstract": "For
      a graph G =( V,E), the degree distance of G is defined as DD(G )= {u,v}\u2286V
      (G) (dG(u )+ dG(v))dG(u,v) where dG(u) (or d(u)) is the degree of the vertex
      uG , and dG(u,v )i s the distance between u and v. This paper gets a lower bound
      on the degree distance in a tree in terms of the order and diameter of the tree.
      Mathematics Subject Classification: 05C05, 05C12", "venue": "", "year": 2010,
      "referenceCount": 9, "citationCount": 10, "influentialCitationCount": 1, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "1937986", "name":
      "Shubo Chen"}, {"authorId": "2116390163", "name": "Zhijun Guo"}]}, {"paperId":
      "76e3749acb06db8a04d2d19cff03ca5af60e9da1", "externalIds": {"MAG": "2613982400",
      "CorpusId": 125578588}, "corpusId": 125578588, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/76e3749acb06db8a04d2d19cff03ca5af60e9da1",
      "title": "Connections between labellings of trees", "abstract": "There are many
      long-standing conjectures related with some labellings of trees. It is important
      to connect labellings that are related with conjectures. We find some connections
      between known labellings of simple graphs.", "venue": "", "year": 2017, "referenceCount":
      0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2017-04-01", "journal": {"name":
      "Bulletin of The Iranian Mathematical Society", "pages": "275-283", "volume":
      "43"}, "authors": [{"authorId": "145323141", "name": "B. Yao"}, {"authorId":
      "49544451", "name": "X. Liu"}, {"authorId": "100573736", "name": "M. Yao"}]},
      {"paperId": "7efc39fd108df88049b06bf37b23a627dcab729f", "externalIds": {"CorpusId":
      14922096}, "corpusId": 14922096, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/7efc39fd108df88049b06bf37b23a627dcab729f",
      "title": "Graph Connectivity and Network Coding", "abstract": "Graph Connectivity
      and Network Coding LEUNG, Kai Man Master of Philosophy Department of Computer
      Science and Engineering The Chinese University of Hong Kong 2011 In this thesis
      we present a new algebraic formulation to compute edge connectivities in a directed
      graph, using the ideas developed in network coding. This reduces the problem
      of computing edge connectivities to solving systems of linear equations, thus
      allowing us to use tools in linear algebra to design new algorithms. Using the
      algebraic formulation we obtain faster algorithms for computing single source
      edge connectivities and all pairs edge connectivities, in some settings the
      amortized time to compute the edge connectivity for one pair is sublinear. Through
      this connection, we have also found an interesting use of expanders and superconcentrators
      to design fast algorithms for some graph connectivity problems.", "venue": "",
      "year": 2011, "referenceCount": 63, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "120973945", "name": "K. Man"}]},
      {"paperId": "6c91fc6e18f2c5206106ab076a758eb289a1f190", "externalIds": {"MAG":
      "2258367452", "DBLP": "journals/corr/DarmannPS15a", "ArXiv": "1511.07847", "DOI":
      "10.1016/j.dam.2017.01.024", "CorpusId": 10956380}, "corpusId": 10956380, "publicationVenue":
      "8287474c-2cf8-4dfe-b1c6-cf6119d879ab", "url": "https://www.semanticscholar.org/paper/6c91fc6e18f2c5206106ab076a758eb289a1f190",
      "title": "The shortest connection game", "abstract": null, "venue": "Discrete
      Applied Mathematics", "year": 2015, "referenceCount": 20, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2015-11-24", "journal": {"name": "ArXiv", "volume": "abs/1511.07847"},
      "authors": [{"authorId": "2378382", "name": "Andreas Darmann"}, {"authorId":
      "1710552", "name": "U. Pferschy"}, {"authorId": "2069110368", "name": "Joachim
      Schauer"}]}, {"paperId": "728c866563ccdf33fb0cbcd2f87dfd3b8a472866", "externalIds":
      {"MAG": "2341394972", "CorpusId": 124153883}, "corpusId": 124153883, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/728c866563ccdf33fb0cbcd2f87dfd3b8a472866",
      "title": "Listing All Plane Graphs (Extended Abstract)", "abstract": "In this
      paper we give a simple algorithm to generate all con- nected rooted plane graphs
      with at most m edges. A \"rooted\" plane graph is a plane graph with one designated
      (directed) edge on the outer face. The algorithm uses O(m) space and generates
      such graphs in O(1) time per graph on average without duplications. The algorithm
      does not output the entire graph but the difference from the previous graph.
      By modifying the algorithm we can generate all connected (non-rooted) plane
      graphs with at most m edges in O(m 3 ) time per graph.", "venue": "", "year":
      2008, "referenceCount": 11, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      {"name": "", "volume": ""}, "authors": [{"authorId": "1681066", "name": "Katsuhisa
      Yamanaka"}, {"authorId": "1687506", "name": "Shin-Ichi Nakano"}, {"authorId":
      "153641225", "name": "Tenjin-cho Kiryu"}]}, {"paperId": "1f155d99f0ed9b913816fce103bff39e7c0e615e",
      "externalIds": {"MAG": "2000675724", "ArXiv": "cond-mat/0501594", "DOI": "10.1142/S0129183105008114",
      "CorpusId": 14367739}, "corpusId": 14367739, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/1f155d99f0ed9b913816fce103bff39e7c0e615e",
      "title": "How To Count Trees", "abstract": "We propose a new topological invariant
      of unlabeled trees of N nodes. The invariant is a set of N\u00d72 matrices of
      integers, with \u2211j kdi, j and vi as the matrix elements, where di, j are
      the elements of the distance matrix and vi denotes ith node''s degree and k\u2208\u2115.
      To compare the invariant calculated for possibly different graphs, the matrix
      rows are ordered with respect to the first column, and, if necessary, with respect
      to the second one. We use the new invariant to evaluate from below the number
      of topologically different unlabeled trees up to N =17. The results slightly
      exceed the asymptotic evaluation of Otter.", "venue": "", "year": 2005, "referenceCount":
      12, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/cond-mat/0501594", "status":
      "GREEN"}, "fieldsOfStudy": ["Mathematics", "Physics"], "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "external"}, {"category": "Physics", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2005-01-25",
      "journal": {"name": "International Journal of Modern Physics C", "pages": "1527-1534",
      "volume": "16"}, "authors": [{"authorId": "102699689", "name": "S. Piec"}, {"authorId":
      "3209892", "name": "K. Malarz"}, {"authorId": "35283720", "name": "K. Ku\u0142akowski"}]},
      {"paperId": "a5bf5c7b1c31306cf51d405d3ce38728454b6ccf", "externalIds": {"DBLP":
      "journals/ipl/Reif87", "MAG": "2083394054", "DOI": "10.1016/0020-0190(87)90095-0",
      "CorpusId": 9520804}, "corpusId": 9520804, "publicationVenue": "44ecc2bb-f8fd-4c6d-bd54-30ca098be91d",
      "url": "https://www.semanticscholar.org/paper/a5bf5c7b1c31306cf51d405d3ce38728454b6ccf",
      "title": "A Topological Approach to Dynamic Graph Connectivity", "abstract":
      null, "venue": "Information Processing Letters", "year": 1987, "referenceCount":
      15, "citationCount": 43, "influentialCitationCount": 1, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "1987-04-20", "journal":
      {"name": "Inf. Process. Lett.", "pages": "65-70", "volume": "25"}, "authors":
      [{"authorId": "1749706", "name": "J. Reif"}]}, {"paperId": "c2ae6004d8c9b414902090474658a08cea1adc7e",
      "externalIds": {"DBLP": "journals/algorithmica/JafargholiV16", "MAG": "2781523124",
      "DOI": "10.1007/s00453-014-9946-9", "CorpusId": 2711332}, "corpusId": 2711332,
      "publicationVenue": "300eb16f-ce6c-495a-8da3-2e691bf9051d", "url": "https://www.semanticscholar.org/paper/c2ae6004d8c9b414902090474658a08cea1adc7e",
      "title": "3SUM\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym}
      \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs}
      \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$\\mathrm
      {3SUM}$$\\end{document}, 3XOR\\documentclass[12pt]{minimal} ", "abstract": null,
      "venue": "Algorithmica", "year": 2014, "referenceCount": 28, "citationCount":
      5, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "external"}, {"category": "Mathematics", "source": "s2-fos-model"}, {"category":
      "Physics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2014-10-28", "journal": {"name": "Algorithmica", "pages":
      "326 - 343", "volume": "74"}, "authors": [{"authorId": "2112237", "name": "Zahra
      Jafargholi"}, {"authorId": "1743196", "name": "Emanuele Viola"}]}, {"paperId":
      "4b148178dc02c2be49d3f7a345e3bef5ad2d24ac", "externalIds": {"DBLP": "journals/dm/HansenHQ97",
      "MAG": "2911416038", "DOI": "10.1016/S0012-365X(96)00187-2", "CorpusId": 15219368},
      "corpusId": 15219368, "publicationVenue": "2f38f299-9909-4c8e-a12e-76fca8afb42e",
      "url": "https://www.semanticscholar.org/paper/4b148178dc02c2be49d3f7a345e3bef5ad2d24ac",
      "title": "Splitting trees", "abstract": null, "venue": "Discrete Mathematics",
      "year": 1997, "referenceCount": 7, "citationCount": 16, "influentialCitationCount":
      4, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "1997-03-15", "journal": {"name": "Discret. Math.", "pages": "403-419", "volume":
      "165-166"}, "authors": [{"authorId": "144250254", "name": "P. Hansen"}, {"authorId":
      "144324792", "name": "A. Hertz"}, {"authorId": "2403178", "name": "Nicolas Quinodoz"}]},
      {"paperId": "e01c0c8c212280bbfe3054090f7b5f8de652dd8c", "externalIds": {"DBLP":
      "journals/jam/KolaGN18", "MAG": "2892380699", "DOI": "10.1155/2018/8186345",
      "CorpusId": 53294391}, "corpusId": 53294391, "publicationVenue": "7fca2e40-f552-41ac-9a64-d76dc15c981b",
      "url": "https://www.semanticscholar.org/paper/e01c0c8c212280bbfe3054090f7b5f8de652dd8c",
      "title": "Infinitely Many Trees with Maximum Number of Holes Zero, One, and
      Two", "abstract": "<jats:p>An <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M1\"><mml:mi>L</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-coloring of a simple connected graph
      <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M2\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>
      is an assignment <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M3\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math> of nonnegative
      integers to the vertices of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M4\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math> such that <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M5\"><mml:mfenced open=\"|\"
      close=\"|\" separators=\"|\"><mml:mrow><mml:mi>f</mml:mi><mml:mfenced separators=\"|\"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:mi>f</mml:mi><mml:mfenced
      separators=\"|\"><mml:mrow><mml:mi>v</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>\u2a7e</mml:mo><mml:mn
      mathvariant=\"normal\">2</mml:mn></mml:math> if <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M6\"><mml:mi>d</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo
      stretchy=\"false\">)</mml:mo><mml:mo>=</mml:mo><mml:mn mathvariant=\"normal\">1</mml:mn></mml:math>
      and <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M7\"><mml:mfenced
      open=\"|\" close=\"|\" separators=\"|\"><mml:mrow><mml:mi>f</mml:mi><mml:mfenced
      separators=\"|\"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:mi>f</mml:mi><mml:mfenced
      separators=\"|\"><mml:mrow><mml:mi>v</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>\u2a7e</mml:mo><mml:mn
      mathvariant=\"normal\">1</mml:mn></mml:math> if <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M8\"><mml:mi>d</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo
      stretchy=\"false\">)</mml:mo><mml:mo>=</mml:mo><mml:mn mathvariant=\"normal\">2</mml:mn></mml:math>
      for all <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M9\"><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>,
      where <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M10\"><mml:mi>d</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math> denotes the distance between <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M11\"><mml:mrow><mml:mi>u</mml:mi></mml:mrow></mml:math>
      and <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M12\"><mml:mrow><mml:mi>v</mml:mi></mml:mrow></mml:math>
      in <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M13\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>.
      The span of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M14\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math>
      is the maximum color assigned by <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M15\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math>. The span of a
      graph <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M16\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>,
      denoted by <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M17\"><mml:mi>\u03bb</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>,
      is the minimum of span over all <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M18\"><mml:mi>L</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-colorings on <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M19\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>. An <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M20\"><mml:mi>L</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-coloring of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M21\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math> with span <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M22\"><mml:mi>\u03bb</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
      is called a span coloring of <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M23\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>. An <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M24\"><mml:mi>L</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-coloring <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M25\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math> is said to be
      irreducible if there exists no <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M26\"><mml:mi>L</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-coloring g such that <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M27\"><mml:mi>g</mml:mi><mml:mo stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo
      stretchy=\"false\">)</mml:mo><mml:mo>\u2a7d</mml:mo><mml:mi>f</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
      for all <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M28\"><mml:mi>u</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
      and <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M29\"><mml:mi>g</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy=\"false\">)</mml:mo><mml:mo><</mml:mo><mml:mi>f</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
      for some <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M30\"><mml:mi>v</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>.
      If <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M31\"><mml:mrow><mml:mi>f</mml:mi></mml:mrow></mml:math>
      is an <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M32\"><mml:mi>L</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mn mathvariant=\"normal\">2,1</mml:mn><mml:mo
      stretchy=\"false\">)</mml:mo></mml:math>-coloring with span <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M33\"><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:math>, then <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M34\"><mml:mi>h</mml:mi><mml:mo>\u2208</mml:mo><mml:mfenced
      open=\"{\" close=\"}\" separators=\"|\"><mml:mrow><mml:mn mathvariant=\"normal\">0,1</mml:mn><mml:mo>,</mml:mo><mml:mn
      mathvariant=\"normal\">2</mml:mn><mml:mo>,</mml:mo><mml:mo>\u2026</mml:mo><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:mfenced></mml:math>
      is a hole if there is no <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M35\"><mml:mi>v</mml:mi><mml:mo>\u2208</mml:mo><mml:mi>V</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>
      such that <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M36\"><mml:mi>f</mml:mi><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy=\"false\">)</mml:mo><mml:mo>=</mml:mo><mml:mi>h</mml:mi></mml:math>.
      The maximum number of holes over all irreducible span colorings of <mml:math
      xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M37\"><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:math>
      is denoted by <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M38\"><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mrow><mml:mi>\u03bb</mml:mi></mml:mrow></mml:msub><mml:mo
      stretchy=\"false\">(</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy=\"false\">)</mml:mo></mml:math>.
      A tree <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M39\"><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:math>
      with maximum degree <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\"
      id=\"M40\"><mml:mrow><mml:mi mathvariant=\"normal\">\u0394</mml:mi></mml:mrow></mml:math>
      having span <mml:math xmlns:mml=\"http://www.w3.org/1998/Math/MathML\" id=\"M41\"><mml:mi
      mathvariant=\"normal\">\u0394</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant=\"normal\">1</mml:mn></mml:math>
      is referred to as Type-I tree; otherwise it is Type-II. In this paper, we give
      a method to construct infinitely many trees with at least one hole from a one-hole
      tree and infinitely many two-hole trees from a two-hole tree. Also, using the
      method, we construct infinitely many Type-II trees with maximum number of holes
      one and two. Further, we give a sufficient condition for a Type-II tree with
      maximum number of holes zero.</jats:p>", "venue": "Journal of Applied Mathematics",
      "year": 2018, "referenceCount": 12, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://downloads.hindawi.com/journals/jam/2018/8186345.pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Art", "source": "s2-fos-model"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Chemistry", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2018-09-20", "journal":
      {"name": "J. Appl. Math.", "pages": "8186345:1-8186345:14", "volume": "2018"},
      "authors": [{"authorId": "2051257", "name": "S. Kola"}, {"authorId": "9424517",
      "name": "Balakrishna Gudla"}, {"authorId": "144129258", "name": "P. K. Niranjan"}]},
      {"paperId": "23c5af63ab87f826ab7e0bf77664d39b6ec4d223", "externalIds": {"MAG":
      "2106713240", "DBLP": "journals/jgaa/YamanakaN09", "DOI": "10.7155/jgaa.00174",
      "CorpusId": 5866531}, "corpusId": 5866531, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/23c5af63ab87f826ab7e0bf77664d39b6ec4d223",
      "title": "Listing All Plane Graphs", "abstract": "In this paper we give a simple
      algorithm to generate all connected rooted plane graphs with at most m edges.
      A \"rooted\" plane graph is a plane graph with one designated (directed) edge
      on the outer face. The algorithm uses O(m) space and generates such graphs in
      O(1) time per graph on average without duplications. The algorithm does not
      output the entire graph but the difference from the previous graph. By modifying
      the algorithm we can generate all connected (non-rooted) plane graphs with at
      most m edges in O(m3) time per graph.", "venue": "J. Graph Algorithms Appl.",
      "year": 2008, "referenceCount": 15, "citationCount": 15, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2008-02-07", "journal": {"name": "J. Graph Algorithms Appl.", "pages": "5-18",
      "volume": "13"}, "authors": [{"authorId": "1681066", "name": "Katsuhisa Yamanaka"},
      {"authorId": "1687506", "name": "Shin-Ichi Nakano"}]}, {"paperId": "861bff22c2427c54c8de0f15c8b16eb03077771f",
      "externalIds": {"MAG": "2008945525", "DOI": "10.1093/TEAMAT/HRP013", "CorpusId":
      119473881}, "corpusId": 119473881, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/861bff22c2427c54c8de0f15c8b16eb03077771f",
      "title": "Real world graph connectivity", "abstract": "We present the topic
      of graph connectivity along with a famous theorem of Menger in the real-world
      setting of the national computer network infrastructure of National LambdaRail.
      We include a set of exercises where students reinforce their understanding of
      graph connectivity by analysing the National LambdaRail network. Finally, we
      give suggestions for using this module as a project in an undergraduate mathematics
      course.", "venue": "", "year": 2009, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2009-09-01", "journal": {"name":
      "Teaching Mathematics and Its Applications", "pages": "159-161", "volume": "28"},
      "authors": [{"authorId": "101630984", "name": "Joy Lind"}, {"authorId": "38907363",
      "name": "D. Narayan"}]}, {"paperId": "0ef7173ce669bcbd09eea176ac0797c440bf3326",
      "externalIds": {"DBLP": "journals/dm/Diestel92", "MAG": "2066590241", "DOI":
      "10.1016/0012-365X(92)90650-5", "CorpusId": 36870388}, "corpusId": 36870388,
      "publicationVenue": "2f38f299-9909-4c8e-a12e-76fca8afb42e", "url": "https://www.semanticscholar.org/paper/0ef7173ce669bcbd09eea176ac0797c440bf3326",
      "title": "The end structure of a graph: recent results and open problems", "abstract":
      null, "venue": "Discrete Mathematics", "year": 1992, "referenceCount": 22, "citationCount":
      39, "influentialCitationCount": 6, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "external"}, {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "1992-05-15", "journal": {"name": "Discret.
      Math.", "pages": "313-327", "volume": "100"}, "authors": [{"authorId": "1709976",
      "name": "R. Diestel"}]}, {"paperId": "6d915cbd8a02325e735b4af90dbd4b269263f3c5",
      "externalIds": {"MAG": "2970045796", "CorpusId": 203233532}, "corpusId": 203233532,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6d915cbd8a02325e735b4af90dbd4b269263f3c5",
      "title": "Allurement of Some Graph Algorithms", "abstract": "The last five decades
      have witnessed an upsurge of interest and activity in graph theory, particularly
      among mathematicians and engineers. It has recently emerged as a subject in
      its own right, as well as being an important mathematical tool in such diverse
      subjects as operational research, computer science, networking, mobile computing,
      sociology and many other fields. This book is devoted entirely to computational
      aspects of graph theory, including graph-theoretic algorithms. The book provide
      some new algorithms of graph theory such as generation all spanning trees, minimal
      spanning tree generation, graph colouring algorithm, importance of some special
      graphs in networking, hiding information and applications of graphs in different
      areas. The book is useful for graduate and post graduate students of science
      and engineering and new research scholar to motivate them in the field of graph
      theory.", "venue": "", "year": 2012, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2012-03-14",
      "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "3084335", "name":
      "S. Pal"}, {"authorId": "1882382", "name": "S. S. Sarma"}]}, {"paperId": "d617860cdca995b03f4c4820ac706c6494c9ffdb",
      "externalIds": {"MAG": "2347066391", "CorpusId": 124237654}, "corpusId": 124237654,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d617860cdca995b03f4c4820ac706c6494c9ffdb",
      "title": "Treewidth of the Product of Two Complete Graphs", "abstract": "We
      determine in this paper the treewidth of K(subscript m)\u00d7K(subscript n).
      Our result is that: If both m and n are even and m\u2265n, or m is odd and n
      is even, or both m and n are odd and n\u2265m, then the treewidth of K(subscript
      m)\u00d7K(subscript n) is (The equation is abbreviated). This is exactly the
      bandwidth of K(subscript m)\u00d7K(subscript n).", "venue": "", "year": 2004,
      "referenceCount": 0, "citationCount": 1, "influentialCitationCount": 1, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2004-02-01", "journal": {"name":
      "", "pages": "62-68", "volume": "8"}, "authors": [{"authorId": "145078777",
      "name": "Jinjiang Yuan"}, {"authorId": "103598153", "name": "Lai-Xing Luo"}]},
      {"paperId": "5023d9b2e6f33238310562edc03f8ee37d34effc", "externalIds": {"CorpusId":
      17326515}, "corpusId": 17326515, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5023d9b2e6f33238310562edc03f8ee37d34effc",
      "title": "Labeling Schemes 14.1 Adjacency", "abstract": "Imagine you want to
      repeatedly query a huge graph, e.g., a social or a road network. For example,
      you might need to find out whether two nodes are connected, or what the distance
      between two nodes is. Since the graph is so large, you distribute it among multiple
      servers in your data center. Theorem 14.1. It is possible to assign labels of
      size 2 log n bits to nodes in a tree so that for every pair u, v of nodes, it
      is easy to tell whether u is adjacent to v by just looking at u and v''s labels.
      Proof. Choose a root in the tree arbitrarily so that every non-root node has
      a parent. The label of each node u consists of two parts: The ID of u (from
      1 to n), and the ID of u''s parent (or nothing if u is the root). Remarks: \u2022
      What we have constructed above is called a labeling scheme, more precisely a
      labeling scheme for adjacency in trees. Formally, a labeling scheme is defined
      as follows. Definition 14.2. A labeling scheme consists of an encoder e and
      a decoder d. The encoder e assigns to each node v a label e(v). The decoder
      d receives the labels of the nodes in question and returns an answer to some
      query. The largest size (in bits) of a label assigned to a node is called the
      label size of the labeling scheme. Remarks: \u2022 In Theorem 14.1, the decoder
      receives two node labels e(u) and e(v), and its answer is Yes or No, depending
      on whether u and v are adjacent or not. The label size is 2 log n. \u2022 The
      label size is the complexity measure we are going to focus on in this chapter.
      The run-time of the encoder and the decoder are two other complexity measures
      that are studied in the literature.", "venue": "", "year": null, "referenceCount":
      16, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": []}, {"paperId": "7f0de389496dc9da885130959321a580e5544f08",
      "externalIds": {"DBLP": "conf/soda/Obdrzalek06", "MAG": "2163940503", "DOI":
      "10.1145/1109557.1109647", "CorpusId": 14409151}, "corpusId": 14409151, "publicationVenue":
      "5545566b-c0b8-418c-83a5-a986a4657572", "url": "https://www.semanticscholar.org/paper/7f0de389496dc9da885130959321a580e5544f08",
      "title": "DAG-width: connectivity measure for directed graphs", "abstract":
      "Tree-width is a very useful connectivity measure for undirected graphs. We
      propose a new definition, called DAG-width, for directed graphs which measures
      how close a graph is to a directed acyclic graph. In addition we define a cops-and-robber
      game and show that this game characterises exactly the class of graphs of bounded
      DAG-width. A comparison of DAG-width with tree-width and directed tree-width
      follows. Finally we show that NP-complete problems can be solved in polynomial
      time on graphs of bounded DAG-width.", "venue": "ACM-SIAM Symposium on Discrete
      Algorithms", "year": 2006, "referenceCount": 9, "citationCount": 93, "influentialCitationCount":
      11, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2006-01-22", "journal": {"pages": "814-821"}, "authors": [{"authorId": "2619678",
      "name": "J. Obdr\u017e\u00e1lek"}]}, {"paperId": "0552ea6f7d8f5eae5981870e938871e9228bb2a3",
      "externalIds": {"MAG": "2406931340", "DBLP": "reference/crc/GiacomoDL13", "DOI":
      "10.1201/b15385-11", "CorpusId": 41289834}, "corpusId": 41289834, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/0552ea6f7d8f5eae5981870e938871e9228bb2a3",
      "title": "Spine and Radial Drawings", "abstract": "University of Perugia 8.1
      Layered Drawings of Undirected Graphs. . . . . . . . . . . . . . . . . . 1 8.2
      A Unified Framework for Spine and Radial Drawings . . 1 8.3 Results . . . .
      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
      . . . . . . . . . . . . . . . 1 Spine Drawings in the General Scenario \u2022
      Radial Drawings in the General Scenario \u2022 Summary for the General Scenario
      \u2022 Further Constrained-scenarios 8.4 Related Problems . . . . . . . . .
      . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 Hamiltonicity
      \u2022 Point-set Embeddability 8.5 Open Problems and Future Research Directions
      . . . . . . . . . 3", "venue": "Handbook of Graph Drawing and Visualization",
      "year": 2013, "referenceCount": 45, "citationCount": 7, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": {"pages": "247-284"}, "authors": [{"authorId": "7448104", "name":
      "E. D. Giacomo"}, {"authorId": "1713172", "name": "W. Didimo"}, {"authorId":
      "1716384", "name": "G. Liotta"}]}, {"paperId": "b6e3f991a632aa101fdceac0eebf4d24b5317545",
      "externalIds": {"MAG": "2059993753", "DOI": "10.1007/BF01342974", "CorpusId":
      120717284}, "corpusId": 120717284, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/b6e3f991a632aa101fdceac0eebf4d24b5317545",
      "title": "A note on the number of functional digraphs", "abstract": null, "venue":
      "", "year": 1961, "referenceCount": 3, "citationCount": 20, "influentialCitationCount":
      1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "1961-04-01", "journal": {"name": "Mathematische Annalen", "pages": "109-110",
      "volume": "143"}, "authors": [{"authorId": "35145569", "name": "R. Read"}]},
      {"paperId": "3088eda9d62f89b7785a4c78d6b303414c6b3a19", "externalIds": {"CorpusId":
      50156591}, "corpusId": 50156591, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3088eda9d62f89b7785a4c78d6b303414c6b3a19",
      "title": "Description of my Research", "abstract": "I study algorithms in graphs,
      maily applied to the spreading of the information in telecommunications networks.
      I study the structure of graphs and some routing problems through graph searching
      games. In these games, a team of searchers aims at capturing a fugitive in a
      graph. The mobile agents follow the paths in the graph with bounded or unbounded
      speed and satisfying some constraints. The (NP-hard) problem is to minimize
      the number of searchers required to capture the fugitive. Two main variants
      have been studied: the graph searching games where mobile agents move simultaneously,
      and the cos and robber games where searchers and fugitive move by turns. These
      two variants are very different since they have not the same algorithmic applications,
      and the tools used for their study are completely different too. My contributions
      have their applications mainly in routing problems in Wavelength-Division Multiplexing
      (WDM) networks, large scale networks (e.g., the Internet) and wireless networks.
      All these networks are facing difficult problems, e.g., either NP-complete problems
      or problems that become difficult to be handled because of networks size. To
      deal with this, my approach consists into taking advantage of specific structural
      properties of real instances for the design of efficient algorithms. My objectives
      are twofold. On the one hand, I want to understand which structural properties
      can help to solve problems relative to the spreading of the information in networks,
      and for this prurpose, I am interested in determining which properties are shared
      by real networks. On the other hand, I want to develop (via the graph searching
      paradigm) new algorithmic tools to use these properties efficiently. My main
      contributions deal with:", "venue": "", "year": 2011, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
      [{"authorId": "1736014", "name": "N. Nisse"}]}, {"paperId": "9aaac449eab8c37f2d63c8ab38169980e28c6f7c",
      "externalIds": {"DBLP": "conf/mfcs/ConteGMRV18", "MAG": "2889304343", "DOI":
      "10.4230/LIPIcs.MFCS.2018.84", "CorpusId": 52115514}, "corpusId": 52115514,
      "publicationVenue": "8341fde2-3e67-4fde-bb5c-6f0320d7f114", "url": "https://www.semanticscholar.org/paper/9aaac449eab8c37f2d63c8ab38169980e28c6f7c",
      "title": "Listing Subgraphs by Cartesian Decomposition", "abstract": "We investigate
      a decomposition technique for listing problems in graphs and set systems. It
      is based on the Cartesian product of some iterators, which list the solutions
      of simpler problems. Our ideas applies to several problems, and we illustrate
      one of them in depth, namely, listing all minimum spanning trees of a weighted
      graph G . Here iterators over the spanning trees for unweighted graphs can be
      obtained by a suitable modi\ufb01cation of the listing algorithm by [Shioura
      et al., SICOMP 1997], and the decomposition of G is obtained by suitably partitioning
      its edges according to their weights. By combining these iterators in a Cartesian
      product scheme that employs Gray coding, we give the \ufb01rst algorithm which
      lists all minimum spanning trees of G in constant delay, where the delay is
      the time elapsed between any two consecutive outputs. Our solution requires
      polynomial preprocessing time and uses polynomial space.", "venue": "International
      Symposium on Mathematical Foundations of Computer Science", "year": 2018, "referenceCount":
      34, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://inria.hal.science/hal-01964703/document",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null,
      "journal": {"pages": "84:1-84:16"}, "authors": [{"authorId": "1856525", "name":
      "A. Conte"}, {"authorId": "1776817", "name": "R. Grossi"}, {"authorId": "145180394",
      "name": "Andrea Marino"}, {"authorId": "145381429", "name": "Romeo Rizzi"},
      {"authorId": "3441063", "name": "Luca Versari"}]}, {"paperId": "5b948e1039c2894a7e8592b360a68d1e3c18093e",
      "externalIds": {"MAG": "2574893499", "CorpusId": 125636278}, "corpusId": 125636278,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5b948e1039c2894a7e8592b360a68d1e3c18093e",
      "title": "A New and Efficient Framework for the Graph Isomorphism Problem",
      "abstract": "This paper provides a new framework to study graph structure. It
      enables us to define graph orthogonality and a new metrics on graphs. Furthermore,
      it enables us to define the coordinate representation of graphs with respect
      to an ordered set of graphs, which benefits us in the graph isomorphism problem.
      If any graph of set $A$ has a unique coordinates with respect to a graph set
      $ B$, then, we call $B$ is a basis for the graphs set $A$. Having a basis, any
      graph finds a unique coordinates. Thus, the graph isomorphism problem equals
      to comparison of the coordinates. This fact provides a formal approach to study
      the computational complexity of the graph isomorphism problem, i.e. finding
      a suitable basis. We have shown that graphs on at most 3log(n) vertices make
      a basis for almost every $n$-vertex graphs. This fact, easily, results that
      graph isomorphism problem can be solved in $\\exp(6\\log^2(n))$ time for almost
      every pair of $n$-vertex graphs.", "venue": "", "year": 2017, "referenceCount":
      0, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2017-01-10", "journal": {"name":
      "arXiv: Combinatorics", "volume": ""}, "authors": [{"authorId": "3161363", "name":
      "Ameneh Farhadian"}]}, {"paperId": "eb17edc2bdc92f508ecc47beaef909b3007902a0",
      "externalIds": {"MAG": "2727900420", "CorpusId": 126363148}, "corpusId": 126363148,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/eb17edc2bdc92f508ecc47beaef909b3007902a0",
      "title": "On the Basis Number of Products of Graphs", "abstract": "On the Basis
      Number of Products of Graphs\u060c \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649
      \u0627\u0644\u0646\u0635 \u0627\u0644\u0643\u0627\u0645\u0644 \u064a\u0631\u062c\u0649
      \u0632\u064a\u0627\u0631\u0629 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u062d\u0633\u064a\u0646
      \u0628\u0646 \u0637\u0644\u0627\u0644 \u0641\u064a \u062c\u0627\u0645\u0639\u0629
      \u0627\u0644\u064a\u0631\u0645\u0648\u0643 \u0627\u0648 \u0632\u064a\u0627\u0631\u0629
      \u0645\u0648\u0642\u0639\u0647\u0627 \u0627\u0644\u0627\u0644\u0643\u062a\u0631\u0648\u0646\u064a",
      "venue": "", "year": 1995, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "103567357",
      "name": "\u0650Al Rhayyel"}, {"authorId": "2057407942", "name": "Ahmad"}, {"authorId":
      "104066358", "name": "Batayneh"}, {"authorId": "2055518085", "name": "Muhammad
      Saleh"}]}, {"paperId": "1dfef99e1270aaff5706e8f971079e6b28eff037", "externalIds":
      {"MAG": "1539946414", "ArXiv": "0708.2363", "DBLP": "journals/corr/abs-0708-2363",
      "CorpusId": 8327367}, "corpusId": 8327367, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/1dfef99e1270aaff5706e8f971079e6b28eff037",
      "title": "On a constructive characterization of a class of trees related to
      pairs of disjoint matchings", "abstract": "For a graph consider the pairs of
      disjoint matchings which union contains as many edges as possible, and define
      a parameter $\\alpha$ which eqauls the cardinality of the largest matching in
      those pairs. Also, define $\\betta$ to be the cardinality of a maximum matching
      of the graph. \nWe give a constructive characterization of trees which satisfy
      the $\\alpha$=$\\betta$ equality. The proof of our main theorem is based on
      a new decomposition algorithm obtained for trees.", "venue": "arXiv.org", "year":
      2007, "referenceCount": 10, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2007-08-17", "journal": {"name": "ArXiv", "volume": "abs/0708.2363"},
      "authors": [{"authorId": "2590935", "name": "R. Kamalian"}, {"authorId": "3017940",
      "name": "V. Mkrtchyan"}]}, {"paperId": "3d0cc2ac43900e11db1f7ae7b0c2f4ebee7d9435",
      "externalIds": {"MAG": "3004278482", "DOI": "10.12737/978686", "CorpusId": 214470152},
      "corpusId": 214470152, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3d0cc2ac43900e11db1f7ae7b0c2f4ebee7d9435",
      "title": "Fundamentals of the theory and algorithms on graphs", "abstract":
      "The textbook describes the main theoretical principles of graph theory, the
      main tasks to be solved using graph structures, and General methods of their
      solution and specific algorithms, with estimates of their complexity. I covered
      a lot of the examples given questions to test knowledge and tasks for independent
      decisions. Along with the control tasks to verify the theoretical training provided
      practical assignments to develop programs to study topics of graph theory. \nMeets
      the requirements of Federal state educational standards of higher education
      of the last generation. \nDesigned for undergraduate and graduate programs,
      studying information technology, for in-depth training in analysis and design
      of systems of complex structure. Also the guide can be useful to specialists
      of the IT sphere in the study of algorithmic aspects of graph theory.", "venue":
      "", "year": 2020, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2020-01-30", "journal": {"name": "", "volume": ""},
      "authors": [{"authorId": "98208987", "name": "N. Gdanskiy"}]}, {"paperId": "62753b79c4b7fd86d93318e00689aa0d71c893b3",
      "externalIds": {"MAG": "2914264140", "CorpusId": 126734667}, "corpusId": 126734667,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/62753b79c4b7fd86d93318e00689aa0d71c893b3",
      "title": "Tree decompositions and linear time algorithms", "abstract": "This
      thesis concerns tree decompositions. Trees are one of the simplest and most
      well understood class of graphs. A tree decomposition of a graph improves our
      understanding of the graph in a similar way. For example, as a consequence of
      Robertson and Seymour''s groundbreaking work in the theory of graph minors,
      there are linear time algorithms for NP-hard problem on graphs that admit a
      tree decomposition of a certain type. We classify existing tree decompositions
      and examine what makes a tree decomposition unique. \nThe first result of this
      thesis is a linear time algorithm for building a tree decomposition for the
      class of graphs that exclude K 5 as a minor. The second result is a significant
      modification to this algorithm which results in a linear time algorithm to construct
      the tree decomposition for graphs which exclude a special set of paths. These
      are vertex disjoint paths between two pairs of input vertices (s1, t1), (s2,
      t 2), one from s1 to t 1 and the other from s2 to t 2. \nWe then use these tree
      decompositions to improve the running time of existing algorithms and extend
      the allowed input of other algorithms from planar graphs to graphs that exclude
      K5 as a minor.", "venue": "", "year": 2012, "referenceCount": 0, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": {"name": "", "volume": ""}, "authors":
      [{"authorId": "143882390", "name": "B. Reed"}, {"authorId": "2158122714", "name":
      "Zhentao Li"}]}, {"paperId": "0746a30ff43eb1cbd782c9d7804d5293475a6ecb", "externalIds":
      {"MAG": "133854143", "DBLP": "journals/dm/Graaf04", "DOI": "10.1016/j.disc.2003.11.002",
      "CorpusId": 232201}, "corpusId": 232201, "publicationVenue": "2f38f299-9909-4c8e-a12e-76fca8afb42e",
      "url": "https://www.semanticscholar.org/paper/0746a30ff43eb1cbd782c9d7804d5293475a6ecb",
      "title": "Directed Triangles in Directed Graphs", "abstract": null, "venue":
      "Discrete Mathematics", "year": 1992, "referenceCount": 4, "citationCount":
      18, "influentialCitationCount": 3, "isOpenAccess": true, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science", "Mathematics", "Chemistry"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "external"}, {"category": "Chemistry", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "1992-12-11", "journal": {"name": "Mathematics eJournal"},
      "authors": [{"authorId": "2564387", "name": "M. D. Graaf"}]}, {"paperId": "fa55238055191f8b883d2d53c1c80b3a245c3ef0",
      "externalIds": {"CorpusId": 211731377}, "corpusId": 211731377, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/fa55238055191f8b883d2d53c1c80b3a245c3ef0",
      "title": "The complexity of an exotic edge coloring of graphs", "abstract":
      "Coloring the nodes of a graph is a commonly used preprocessing method to speed
      up clique search procedures. For the very same purpose we propose coloring the
      edges of the graph. It will be shown that the recommended type of edge coloring
      leads to an NP-complete problem. Therefore in practical computations we should
      rely on some approximate algorithm.", "venue": "", "year": 2013, "referenceCount":
      9, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": [{"authorId": "50000066", "name": "S. Szab\u00f3"}]}, {"paperId":
      "a7b7109bc90704628a6083f6b364aec3519a377f", "externalIds": {"MAG": "960413108",
      "DOI": "10.1007/978-3-642-16533-7_9", "CorpusId": 117550070}, "corpusId": 117550070,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/a7b7109bc90704628a6083f6b364aec3519a377f",
      "title": "Split and List", "abstract": null, "venue": "", "year": 2010, "referenceCount":
      11, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "153-160", "volume": ""}, "authors": [{"authorId": "1744120", "name": "F. Fomin"},
      {"authorId": "1732843", "name": "D. Kratsch"}]}, {"paperId": "be321f475fd1b16de63a35a4837c513047726c84",
      "externalIds": {"MAG": "571104468", "DOI": "10.1007/978-93-86279-39-2", "CorpusId":
      60208286}, "corpusId": 60208286, "publicationVenue": "bc7b42bd-b718-4916-a4c6-4fca77895ace",
      "url": "https://www.semanticscholar.org/paper/be321f475fd1b16de63a35a4837c513047726c84",
      "title": "A First Course in Graph Theory and Combinatorics", "abstract": null,
      "venue": "Texts and Readings in Mathematics", "year": 2009, "referenceCount":
      0, "citationCount": 11, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2009-05-15", "journal": {"name": "Texts and Readings in Mathematics"}, "authors":
      [{"authorId": "2977327", "name": "S. Cioab\u0103"}, {"authorId": "145440258",
      "name": "M. Murty"}]}, {"paperId": "c08dace68db893edb2b0a12fe7ee5ea34003b1e6",
      "externalIds": {"MAG": "70027040", "CorpusId": 115845989}, "corpusId": 115845989,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/c08dace68db893edb2b0a12fe7ee5ea34003b1e6",
      "title": "Finding Minimum Spanning Trees in O(m alpha(m,n)) Time", "abstract":
      "We describe a deterministic minimum spanning tree algorithm running in time
      O(m alpha(m,n)), where alpha is a natural inverse of Ackermann''''s function
      and m and n are the number of edges and vertices, respectively. This improves
      upon the O(m alpha(m,n) log alpha(m,n)) bound established by Chazelle in 1997.
      A similar O(m alpha(m,n))-time algorithm was discovered independently by Chazelle,
      predating the algorithm presented here by many months. This paper may still
      be of interest for its alternative exposition.", "venue": "", "year": 1999,
      "referenceCount": 0, "citationCount": 7, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "1999-10-01",
      "journal": {"name": "", "volume": ""}, "authors": [{"authorId": "1727806", "name":
      "S. Pettie"}]}, {"paperId": "9ce45d16df52419b0e6932de76b8dc34cb0162fd", "externalIds":
      {"MAG": "2545608", "DBLP": "journals/actaC/PferschyWY94", "CorpusId": 11379371},
      "corpusId": 11379371, "publicationVenue": "396366a4-a1ba-422b-a9ff-1471ee08eab8",
      "url": "https://www.semanticscholar.org/paper/9ce45d16df52419b0e6932de76b8dc34cb0162fd",
      "title": "Partitioning Graphs into Two Trees", "abstract": "We investigate the
      problem of partitioning the edges of a graph into two trees of equal size. We
      prove that this problem is NP-complete in general, but can be solved in polynomial
      time on series-parallel graphs.", "venue": "Acta Cybernetica", "year": 1994,
      "referenceCount": 3, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
      {"name": "Acta Cybern.", "pages": "233-240", "volume": "11"}, "authors": [{"authorId":
      "1710552", "name": "U. Pferschy"}, {"authorId": "1729250", "name": "G. Woeginger"},
      {"authorId": "1797165", "name": "E. Yao"}]}, {"paperId": "accf2a191a4f6d7ff06fbdfdba6c1b1215df0c37",
      "externalIds": {"DBLP": "conf/soda/KawarabayashiK10", "DOI": "10.1007/s00493-014-2828-6",
      "CorpusId": 38749149}, "corpusId": 38749149, "publicationVenue": "b4329971-63d6-4dd2-8f0b-d6e549d6c3a3",
      "url": "https://www.semanticscholar.org/paper/accf2a191a4f6d7ff06fbdfdba6c1b1215df0c37",
      "title": "The edge-disjoint paths problem in Eulerian graphs and 4-edge-connected
      graphs", "abstract": null, "venue": "Combinatorica", "year": 2014, "referenceCount":
      39, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2014-08-05", "journal": {"name": "Combinatorica", "pages": "477 - 495", "volume":
      "35"}, "authors": [{"authorId": "1743527", "name": "K. Kawarabayashi"}, {"authorId":
      "38575557", "name": "Yusuke Kobayashi"}]}, {"paperId": "2c98687a33fb6e85b26c5cb7bb9454ab0eb78554",
      "externalIds": {"MAG": "2008488810", "DOI": "10.1007/S00233-006-0619-0", "CorpusId":
      119431792}, "corpusId": 119431792, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2c98687a33fb6e85b26c5cb7bb9454ab0eb78554",
      "title": "A Problem on Central Cryptogroups", "abstract": null, "venue": "",
      "year": 2006, "referenceCount": 3, "citationCount": 2, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2006-10-26",
      "journal": {"name": "Semigroup Forum", "pages": "261-266", "volume": "73"},
      "authors": [{"authorId": "2158130183", "name": "Guoxin Liu"}, {"authorId": "2108312216",
      "name": "Jiangang Zhang"}]}, {"paperId": "1822a208ad17c2686816acfac6badfc4f83d179a",
      "externalIds": {"DBLP": "journals/jco/AuroraSM16", "MAG": "1978027652", "DOI":
      "10.1007/s10878-015-9868-8", "CorpusId": 10409881}, "corpusId": 10409881, "publicationVenue":
      "8bac02b0-60d4-4ce1-a898-19b26a2da9a4", "url": "https://www.semanticscholar.org/paper/1822a208ad17c2686816acfac6badfc4f83d179a",
      "title": "Partial degree bounded edge packing problem for graphs and k\\documentclass[12pt]{minimal}
      \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb}
      \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt}
      \\begin{document}$$k$$\\end{do", "abstract": null, "venue": "Journal of combinatorial
      optimization", "year": 2015, "referenceCount": 12, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2015-04-07", "journal": {"name": "Journal of Combinatorial
      Optimization", "pages": "159 - 173", "volume": "32"}, "authors": [{"authorId":
      "33240829", "name": "Pawan Aurora"}, {"authorId": "40575626", "name": "Sumit
      Singh"}, {"authorId": "5008699", "name": "Shashank K. Mehta"}]}, {"paperId":
      "71ef32ab507b86f6511cc1a032997d22d518de1e", "externalIds": {"DOI": "10.1017/9781108592376",
      "CorpusId": 242723869}, "corpusId": 242723869, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/71ef32ab507b86f6511cc1a032997d22d518de1e",
      "title": "Topics in Algorithmic Graph Theory", "abstract": "Algorithmic graph
      theory has been expanding at an extremely rapid rate since the middle of the
      twentieth century, in parallel with the growth of computer science and the accompanying
      utilization of computers, where efficient algorithms have been a prime goal.
      This book presents material on developments of graph algorithms and related
      concepts that will be of value to both mathematicians and computer scientists,
      at a level suitable for graduate students, researchers and instructors. The
      15 expository chapters, written by acknowledged international experts on their
      subjects, focus on the development and application of algorithms to solve particular
      problems. All chapters have been carefully edited to enhance readability and
      to standardize the chapter structure as well as the terminology and notation.
      The editors provide basic background material in graph theory, and a chapter
      written by the book\u2019s Academic Consultant, Martin Charles Golumbic (University
      of Haifa, Israel), provides background material on algorithms connected with
      graph theory.", "venue": "", "year": null, "referenceCount": 0, "citationCount":
      3, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "77888938", "name": "Borkar"}]}, {"paperId":
      "5f356ae9c8d7b9babfb43ad0f1db94159da38651", "externalIds": {"CorpusId": 14621452},
      "corpusId": 14621452, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5f356ae9c8d7b9babfb43ad0f1db94159da38651",
      "title": "Partitioning the Edges of a Planar Graph into Two Partial K-Trees",
      "abstract": "In this paper we prove two results on partitioning the edges of
      a planar graph into two partial k-trees, for fixed values of k. Interest in
      this class of partitioning problems arises since many intractable graph and
      network problems admit polynomial time solutions on k-trees and their subgraphs
      (partial k-trees). The first result shows that every planar graph is a union
      of two partial 3-trees. Furthermore, such a partitioning can be computed in
      linear time. Second, we show a recursive procedure to construct an infinite
      family of planar graphs in which every member does not admit a partitioning
      into a partial 1-tree (forest) and a partial 2-tree (series-parallel graph).",
      "venue": "", "year": 1988, "referenceCount": 25, "citationCount": 15, "influentialCitationCount":
      2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "1751772", "name": "E. Elmallah"},
      {"authorId": "1809509", "name": "C. Colbourn"}]}, {"paperId": "a6cebc1cb595fdb2807c29d8ea1224606f7275af",
      "externalIds": {"MAG": "2792169227", "DOI": "10.1080/03081087.2018.1438984",
      "CorpusId": 125392320}, "corpusId": 125392320, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/a6cebc1cb595fdb2807c29d8ea1224606f7275af",
      "title": "Minimizing algebraic connectivity over graphs made with some given
      blocks", "abstract": "ABSTRACT This article describes the structure of the graph
      minimizing the algebraic connectivity among all connected graphs made with some
      given blocks with fixed number of pendant blocks, the blocks that have exactly
      one point of articulation. As an application, we conclude that over all graphs
      made with given blocks, the algebraic connectivity is minimum for a graph whose
      block structure is a path.", "venue": "", "year": 2019, "referenceCount": 15,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2019-05-04", "journal": {"name": "Linear and Multilinear
      Algebra", "pages": "911 - 925", "volume": "67"}, "authors": [{"authorId": "40187145",
      "name": "D. Kalita"}, {"authorId": "122387521", "name": "K. Sarma"}]}, {"paperId":
      "ae86599f668ecc5f13d93e890088264a798cfa72", "externalIds": {"CorpusId": 254587768},
      "corpusId": 254587768, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ae86599f668ecc5f13d93e890088264a798cfa72",
      "title": "Grafos B2-EPG Split Split B2-EPG Graphs", "abstract": ",", "venue":
      "", "year": null, "referenceCount": 21, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": [{"authorId": "2065285443", "name": "Lu\u00eds
      Marinho"}, {"authorId": "2195417805", "name": "K. A. Silva"}, {"authorId": "144417417",
      "name": "T. Santos"}]}, {"paperId": "3a0c48d07fbc5ed47927aecfdbb3755c70a202bb",
      "externalIds": {"MAG": "3164570297", "DOI": "10.3897/RIO.7.E68600", "CorpusId":
      235364971}, "corpusId": 235364971, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/3a0c48d07fbc5ed47927aecfdbb3755c70a202bb",
      "title": "Commentary - Methods to find all the edges on any of the shortest
      paths between two given nodes of a directed acyclic graph", "abstract": "This
      article puts forth all the existing methods proposed by the various authors
      of the Stack Exchange community to find all the edges on any shortest path between
      two given nodes of a directed acyclic graph. For a directed acyclic graph with
      N number of nodes, an exponential number of paths are possible between any two
      given nodes and, thus, it is not feasible to compute every path and find the
      shortest ones in polynomial time to generate a set of all edges that contribute
      or make any of the shortest paths. The methods discussed in this article are
      not limited only to this specific use case, but have a much broader scope in
      graph theory, dynamic programming and counting problems. Generally, various
      other questions and answers, raised on the community portal having similar scope
      to those that the users specifically seek, do not receive sufficient hits and,
      hence, enough attention and votes for various reasons worth contemplating. Therefore,
      this article also aims to highlight the various scopes of the methods discussed
      in this article and acknowledge the efforts of the authors, moderators and contributors
      of the Stack Exchange community for their expertise and time to write precise
      answers and share their opinions and advice. Finally, it also appeals to all
      the other beneficiaries in the community to use their privileges responsibly
      and upvote the posted answers, if they helped solve their queries, as one upvote
      is free of cost. \u2021 \u00a7 \u00a9 Ahire D, Jadhav O. This is an open access
      article distributed under the terms of the Creative Commons Attribution License
      (CC BY 4.0), which permits unrestricted use, distribution, and reproduction
      in any medium, provided the original author and source are credited.", "venue":
      "", "year": 2021, "referenceCount": 36, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2021-05-25", "journal": {"name": "Research Ideas and
      Outcomes", "volume": "7"}, "authors": [{"authorId": "100923266", "name": "Deepak
      Tatyaji Ahire"}, {"authorId": "2107575525", "name": "O. Jadhav"}]}, {"paperId":
      "7e7b79e9097a701e5db1bb0144744fae6e3144f8", "externalIds": {"MAG": "2406364470",
      "DOI": "10.1007/978-3-642-04295-9_18", "CorpusId": 124683199}, "corpusId": 124683199,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/7e7b79e9097a701e5db1bb0144744fae6e3144f8",
      "title": "Preliminaries on Graphs", "abstract": null, "venue": "", "year": 1997,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": {"name": "", "pages":
      "279-281", "volume": ""}, "authors": [{"authorId": "1936261", "name": "M. Deza"},
      {"authorId": "143961444", "name": "M. Laurent"}]}, {"paperId": "f015221e7625f562ae9b7b2b4ced3047e3bb5513",
      "externalIds": {"DBLP": "conf/latin/KaplanMRS16", "MAG": "2617281177", "ArXiv":
      "1510.01072", "DOI": "10.1007/s00453-017-0308-2", "CorpusId": 1354742}, "corpusId":
      1354742, "publicationVenue": "300eb16f-ce6c-495a-8da3-2e691bf9051d", "url":
      "https://www.semanticscholar.org/paper/f015221e7625f562ae9b7b2b4ced3047e3bb5513",
      "title": "Routing in Unit Disk Graphs", "abstract": null, "venue": "Algorithmica",
      "year": 2015, "referenceCount": 21, "citationCount": 21, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "http://arxiv.org/pdf/1510.01072",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science", "Mathematics", "Physics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Physics", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2015-10-05", "journal": {"name": "Algorithmica", "pages":
      "830 - 848", "volume": "80"}, "authors": [{"authorId": "145325898", "name":
      "Haim Kaplan"}, {"authorId": "3293840", "name": "Wolfgang Mulzer"}, {"authorId":
      "1696906", "name": "L. Roditty"}, {"authorId": "2571208", "name": "Paul Seiferth"}]},
      {"paperId": "875883ccc49269bb3fc6ba5fcf824fad8ba084ad", "externalIds": {"DBLP":
      "journals/algorithmica/GiscardKW19", "ArXiv": "1612.05531", "MAG": "2951865167",
      "DOI": "10.1007/s00453-019-00552-1", "CorpusId": 15676701}, "corpusId": 15676701,
      "publicationVenue": "300eb16f-ce6c-495a-8da3-2e691bf9051d", "url": "https://www.semanticscholar.org/paper/875883ccc49269bb3fc6ba5fcf824fad8ba084ad",
      "title": "A General Purpose Algorithm for Counting Simple Cycles and Simple
      Paths of Any Length", "abstract": null, "venue": "Algorithmica", "year": 2016,
      "referenceCount": 50, "citationCount": 23, "influentialCitationCount": 1, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://eprints.whiterose.ac.uk/142675/1/Algo.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2016-12-16", "journal":
      {"name": "Algorithmica", "pages": "2716 - 2737", "volume": "81"}, "authors":
      [{"authorId": "144790942", "name": "P. Giscard"}, {"authorId": "1810077", "name":
      "Nils M. Kriege"}, {"authorId": "2111010157", "name": "Richard C. Wilson"}]},
      {"paperId": "85179a3c4be8fc06bf752e0b6b737fb89254c8bc", "externalIds": {"MAG":
      "2082200949", "DBLP": "journals/dam/AssmannK83", "DOI": "10.1016/0166-218X(83)90065-3",
      "CorpusId": 7463552}, "corpusId": 7463552, "publicationVenue": "8287474c-2cf8-4dfe-b1c6-cf6119d879ab",
      "url": "https://www.semanticscholar.org/paper/85179a3c4be8fc06bf752e0b6b737fb89254c8bc",
      "title": "The number of rounds needed to exchange information within a graph",
      "abstract": null, "venue": "Discrete Applied Mathematics", "year": 1983, "referenceCount":
      8, "citationCount": 8, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "1983-07-01", "journal":
      {"name": "Discret. Appl. Math.", "pages": "117-125", "volume": "6"}, "authors":
      [{"authorId": "2250794", "name": "S. Assmann"}, {"authorId": "2690317", "name":
      "D. Kleitman"}]}, {"paperId": "3fc6ba35ec606ed2f2484919c2ded0069e64d5be", "externalIds":
      {"CorpusId": 198923431}, "corpusId": 198923431, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/3fc6ba35ec606ed2f2484919c2ded0069e64d5be",
      "title": "Beyond-Planar Graphs : Combinatorics , Models and Algorithms", "abstract":
      "This report documents the program and the outcomes of Dagstuhl Seminar 19092
      \u201cBeyond-Planar Graphs: Combinatorics, Models and Algorithms\u201d which
      brought together 36 researchers in the areas of graph theory, combinatorics,
      computational geometry, and graph drawing. This seminar continued the work initiated
      in Dagstuhl Seminar 16452 \u201cBeyond-Planar Graphs: Algorithmics and Combinatorics\u201d
      and focused on the exploration of structural properties and the development
      of algorithms for so-called beyond-planar graphs, i.e., non-planar graphs that
      admit a drawing with topological constraints such as specific types of crossings,
      or with some forbidden crossing patterns. The seminar began with four talks
      about the results of scientific collaborations originating from the previous
      Dagstuhl seminar. Next we discussed open research problems about beyond planar
      graphs, such as their combinatorial structures (e.g., book thickness, queue
      number), their topology (e.g., simultaneous embeddability, gap planarity, quasi-quasiplanarity),
      their geometric representations (e.g., representations on few segments or arcs),
      and applications (e.g., manipulation of graph drawings by untangling operations).
      Six working groups were formed that investigated several of the open research
      questions. In addition, talks on related subjects and recent conference contributions
      were presented in the morning opening sessions. Abstracts of all talks and a
      report from each working group are included in this report. Seminar February
      24 \u2013 March 1, 2019 \u2013 http://www.dagstuhl.de/19092 2012 ACM Subject
      Classification Computing methodologies\u2192 Combinatorial algorithms, Mathematics
      of computing \u2192 Graph algorithms, Theory of computation \u2192 Computational
      geometry, Human-centered computing \u2192 Graph drawings", "venue": "", "year":
      2019, "referenceCount": 43, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2202720642",
      "name": "Seok-Hee Hong"}, {"authorId": "143918409", "name": "M. Kaufmann"},
      {"authorId": "1702379", "name": "J. Pach"}, {"authorId": "34645916", "name":
      "Csaba D. T\u00f3th"}]}, {"paperId": "9819587807b8ea5d336ad874e243268800cb8460",
      "externalIds": {"DBLP": "journals/endm/TsuchiyaOI00", "MAG": "2059727661", "DOI":
      "10.1016/S1571-0653(05)80191-X", "CorpusId": 38740195}, "corpusId": 38740195,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/9819587807b8ea5d336ad874e243268800cb8460",
      "title": "On construction of bound graphs", "abstract": null, "venue": "Electron.
      Notes Discret. Math.", "year": 2000, "referenceCount": 6, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "external"}, {"category": "Computer Science", "source":
      "external"}, {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2000-07-01", "journal": {"name": "Electron.
      Notes Discret. Math.", "pages": "299-302", "volume": "5"}, "authors": [{"authorId":
      "2668648", "name": "M. Tsuchiya"}, {"authorId": "32093060", "name": "Kenjiro
      Ogawa"}, {"authorId": "3005289", "name": "Shin-ichi Iwai"}]}, {"paperId": "44c0c2491b5aa73ee95e0bda5b74b6adda501142",
      "externalIds": {"MAG": "2011697549", "DBLP": "journals/jmma/YoonKM11", "DOI":
      "10.1007/s10852-011-9154-4", "CorpusId": 29974347}, "corpusId": 29974347, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/44c0c2491b5aa73ee95e0bda5b74b6adda501142",
      "title": "A Note on Edge-based Graph Partitioning and its Linear Algebraic Structure",
      "abstract": null, "venue": "J. Math. Model. Algorithms", "year": 2011, "referenceCount":
      27, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2011-09-01", "journal":
      {"name": "Journal of Mathematical Modelling and Algorithms", "pages": "269-276",
      "volume": "10"}, "authors": [{"authorId": "29774015", "name": "Yourim Yoon"},
      {"authorId": "46254373", "name": "Yong-Hyuk Kim"}, {"authorId": "1776999", "name":
      "B. Moon"}]}, {"paperId": "1198e6d067355048710c5779a8741a052f31e562", "externalIds":
      {"MAG": "2970947052", "DBLP": "journals/corr/abs-1904-09470", "ArXiv": "1904.09470",
      "DOI": "10.1007/s00453-021-00817-8", "CorpusId": 128316967}, "corpusId": 128316967,
      "publicationVenue": "300eb16f-ce6c-495a-8da3-2e691bf9051d", "url": "https://www.semanticscholar.org/paper/1198e6d067355048710c5779a8741a052f31e562",
      "title": "Cluster Deletion on Interval Graphs and Split Related Graphs", "abstract":
      null, "venue": "Algorithmica", "year": 2019, "referenceCount": 35, "citationCount":
      2, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://drops.dagstuhl.de/opus/volltexte/2019/10956/pdf/LIPIcs-MFCS-2019-12.pdf",
      "status": "GREEN"}, "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2019-04-20", "journal": {"name": "Algorithmica",
      "pages": "2018 - 2046", "volume": "83"}, "authors": [{"authorId": "38685168",
      "name": "A. Konstantinidis"}, {"authorId": "37950286", "name": "Charis Papadopoulos"}]},
      {"paperId": "03573aad4891ff4f38915bfd04c1d18ab706d40d", "externalIds": {"MAG":
      "1874409985", "CorpusId": 119884288}, "corpusId": 119884288, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/03573aad4891ff4f38915bfd04c1d18ab706d40d",
      "title": "Path Based Development Of Connectivity Algorithms", "abstract": "This
      paper presents notions of 1- and 2-connectivity. It starts with 1-connectivity
      of directed graphs, and it then examines 2-connectivity of undirected graphs.
      Depth-first search is the method of choice to calculate low order connectivity
      information.\u00a0 The algorithms which are designed for connectivity properties
      are originally due to Tarjan [1]. This paper follows the path-based development
      of [2], which simplifies the algorithms to eliminate the depth-first spanning
      tree.", "venue": "", "year": 2013, "referenceCount": 10, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2013-07-31", "journal": {"name":
      "International journal of innovative research and development", "volume": "2"},
      "authors": [{"authorId": "1753656527", "name": "G. Srinivasu"}, {"authorId":
      "144838792", "name": "B. V. Prasad"}]}, {"paperId": "ed410d502f1cfdaa30c78646b77eeb446905b17c",
      "externalIds": {"CorpusId": 7737139}, "corpusId": 7737139, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/ed410d502f1cfdaa30c78646b77eeb446905b17c",
      "title": "Notes on Binary Dumbbell Trees", "abstract": "Dumbbell trees were
      introduced in [1]. A detailed description of non-binary dumbbell trees appears
      in Chapter 11 of [3]. These notes show how binary dumbbell trees can be obtained,
      and how they can be used to construct, in O(n log n) time, a spanner of bounded
      degree and weight proportional to O(log n) times the weight of a minimum spanning
      tree. The reader is assumed to be familiar with the split tree and the well-separated
      pair decomposition (WSPD), as described, e.g., in Chapter 9 of [3]. 1 Dumbbells
      Let S be a set of n points in R. For any subset A of S, we denote its bounding
      box by R(A). Let T be the split tree for S. For any node u in T , let Su be
      the set of all points in S that are stored in the subtree of u. Consider the
      WSPD that is obtained from T . Each of the O(n) pairs {A,B} in this WSPD is
      represented by two nodes, say u and v, of T : The set A is equal to the set
      Su, whereas the set B is equal to the set Sv. For each pair {A,B} in the WSPD,
      we define its dumbbell to be the geometric region consisting of the two bounding
      boxes R(A) and R(B), together with the line segment joining the centers of these
      boxes. The two bounding boxes are called the heads of the dumbbell. The length
      of the dumbbell is defined to be the length of the line segment joining the
      centers of the two heads. The size of a head is defined to be the length of
      its longest side.", "venue": "", "year": 2012, "referenceCount": 5, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
      [{"authorId": "144426843", "name": "M. Smid"}]}, {"paperId": "539b865108eaed6ee9006e5c91a19282d55453e4",
      "externalIds": {"ArXiv": "1810.07259", "MAG": "2897913155", "DBLP": "journals/corr/abs-1810-07259",
      "CorpusId": 52988223}, "corpusId": 52988223, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/539b865108eaed6ee9006e5c91a19282d55453e4",
      "title": "Nearly Optimal Space Efficient Algorithm for Depth First Search",
      "abstract": "We design a space-efficient algorithm for performing depth-first
      search traversal(DFS) of a graph in $O(m+n\\log^* n)$ time using $O(n)$ bits
      of space. While a normal DFS algorithm results in a DFS-tree (in case the graph
      is connected), our space bounds do not permit us even to store such a tree.
      However, our algorithm correctly outputs all edges of the DFS-tree. \nThe previous
      best algorithm (which used $O(n)$ working space) took $O(m \\log n)$ time (Asano,
      Izumi, Kiyomi, Konagaya, Ono, Otachi, Schweitzer, Tarui, Uehara (ISAAC 2014)
      and Elmasry, Hagerup, Krammer (STACS 2015)). The main open question left behind
      in this area was to design faster algorithm for DFS using $O(n)$ bits of space.
      Our algorithm answers this open question as it has a nearly optimal running
      time (as the DFS takes $O(m+n)$ time even if there is no space restriction).",
      "venue": "arXiv.org", "year": 2018, "referenceCount": 28, "citationCount": 4,
      "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics", "Computer Science"], "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "external"}, {"category": "Computer Science", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2018-10-16", "journal": {"name": "ArXiv",
      "volume": "abs/1810.07259"}, "authors": [{"authorId": "145182864", "name": "Jayesh
      Choudhari"}, {"authorId": "143874825", "name": "Manoj Gupta"}, {"authorId":
      "32598725", "name": "Shivdutt Sharma"}]}]}

      '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Connection:
      - keep-alive
      Content-Length:
      - '165074'
      Content-Type:
      - application/json
      Date:
      - Tue, 21 Nov 2023 04:26:31 GMT
      Via:
      - 1.1 97d891785cd24c4beaf3832c02f5cf04.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - a7CyWNNtSwleyJxX-I-M3lurzjrKCg4T2m7PZ7EJx7ANGBYw9A_5sg==
      X-Amz-Cf-Pop:
      - GRU3-P4
      X-Cache:
      - Miss from cloudfront
      x-amz-apigw-id:
      - OuyqqHkPvHcENsA=
      x-amzn-Remapped-Connection:
      - keep-alive
      x-amzn-Remapped-Content-Length:
      - '165074'
      x-amzn-Remapped-Date:
      - Tue, 21 Nov 2023 04:26:31 GMT
      x-amzn-Remapped-Server:
      - gunicorn
      x-amzn-RequestId:
      - 4a396999-da13-4ecb-a1c3-f1fa0b6bd05c
    http_version: HTTP/1.1
    status_code: 200
version: 1
