interactions:
- request:
    body: '{"positivePaperIds": ["10.1145/3544585.3544600", "10.1145/301250.301271"],
      "negativePaperIds": null}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '100'
      content-type:
      - application/json
      host:
      - api.semanticscholar.org
      user-agent:
      - python-httpx/0.25.1
    method: POST
    uri: https://api.semanticscholar.org/recommendations/v1/papers/?&fields=abstract,authors,citationCount,corpusId,externalIds,fieldsOfStudy,influentialCitationCount,isOpenAccess,journal,openAccessPdf,paperId,publicationDate,publicationTypes,publicationVenue,referenceCount,s2FieldsOfStudy,title,url,venue,year&limit=100
  response:
    content: '{"recommendedPapers": [{"paperId": "b7725bae3b7abbae468ad7f949085fc49441f862",
      "externalIds": {"DBLP": "journals/corr/abs-2310-00782", "ArXiv": "2310.00782",
      "DOI": "10.48550/arXiv.2310.00782", "CorpusId": 263605518}, "corpusId": 263605518,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/b7725bae3b7abbae468ad7f949085fc49441f862",
      "title": "Distributed Deterministic Exact Minimum Weight Cycle and Multi Source
      Shortest Paths in Near Linear Rounds in CONGEST model", "abstract": "We present
      new deterministic algorithms for computing distributed weighted minimum weight
      cycle (MWC) in undirected and directed graphs and distributed weighted all nodes
      shortest cycle (ANSC) in directed graphs. Our algorithms for these problems
      run in $\\tilde{O}(n)$ rounds in the CONGEST model on graphs with arbitrary
      non-negative edge weights, matching the lower bound up to polylogarithmic factors.
      Before our work, no near linear rounds deterministic algorithms were known for
      these problems. The previous best bound for solving these problems deterministically
      requires an initial computation of all pairs shortest paths (APSP) on the given
      graph, followed by post-processing of $O(n)$ rounds, and in total takes $\\tilde{O}(n^{4/3})$
      rounds, using deterministic APSP~\\cite{AR-SPAA20}. The main component of our
      new $\\tilde{O}(n)$ rounds algorithms is a deterministic technique for constructing
      a sequence of successive blocker sets. These blocker sets are then treated as
      source nodes to compute $h$-hop shortest paths, which can then be used to compute
      candidate shortest cycles whose hop length lies in a particular range. The shortest
      cycles can then be obtained by selecting the cycle with the minimum weight from
      all these candidate cycles. Additionally using the above blocker set sequence
      technique, we also obtain $\\tilde{O}(n)$ rounds deterministic algorithm for
      the multi-source shortest paths problem (MSSP) for both directed and undirected
      graphs, given that the size of the source set is at most $\\sqrt{n}$. This new
      result for MSSP can be a step towards obtaining a $o(n^{4/3})$ rounds algorithm
      for deterministic APSP. We also believe that our new blocker set sequence technique
      may have potential applications for other distributed algorithms.", "venue":
      "arXiv.org", "year": 2023, "referenceCount": 25, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2310.00782",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-01", "journal":
      {"name": "ArXiv", "volume": "abs/2310.00782"}, "authors": [{"authorId": "3245439",
      "name": "U. Agarwal"}]}, {"paperId": "18af3d49eb31ba3a348de3c47986ed49600b356c",
      "externalIds": {"CorpusId": 262215522}, "corpusId": 262215522, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/18af3d49eb31ba3a348de3c47986ed49600b356c",
      "title": "Algorithms Example Sheet 4 : Problems Solution Notes", "abstract":
      "(e) (Maybe only a few of these) Show that the following de nitions are equivalent
      to the de nition of a tree: i. A tree is one component of a forest. (A forest
      is an acyclic graph.) ii. A tree is a connected graph with at most V \u2212
      1 edges. iii. A tree is a minimally connected graph; removing any edge disconnects
      the graph. iv. A tree is an acyclic graph with at least V \u2212 1 edges. v.
      A tree is a maximally acyclic graph; adding an edge between any two vertices
      creates a cycle. vi. A tree is a graph that contains a unique path between each
      pair of vertices.", "venue": "", "year": 2022, "referenceCount": 15, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": null, "journal": null, "authors":
      []}, {"paperId": "c72922f376dfe39943bfc9a4bf60a2a204746108", "externalIds":
      {"DBLP": "journals/corr/abs-2309-13225", "ArXiv": "2309.13225", "DOI": "10.48550/arXiv.2309.13225",
      "CorpusId": 262459325}, "corpusId": 262459325, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/c72922f376dfe39943bfc9a4bf60a2a204746108",
      "title": "Faster Approximate All Pairs Shortest Paths", "abstract": "The all
      pairs shortest path problem (APSP) is one of the foundational problems in computer
      science. For weighted dense graphs on $n$ vertices, no truly sub-cubic algorithms
      exist to compute APSP exactly even for undirected graphs. This is popularly
      known as the APSP conjecture and has played a prominent role in developing the
      field of fine-grained complexity. The seminal result of Seidel uses fast matrix
      multiplication (FMM) to compute APSP on unweighted undirected graphs exactly
      in $\\tilde{O}(n^{\\omega})$ time, where $\\omega=2.372$. Even for unweighted
      undirected graphs, it is not possible to obtain a $(2-\\epsilon)$-approximation
      of APSP in $o(n^\\omega)$ time. In this paper, we provide a multitude of new
      results for multiplicative and additive approximations of APSP in undirected
      graphs for both unweighted and weighted cases. We provide new algorithms for
      multiplicative 2-approximation of unweighted graphs: a deterministic one that
      runs in $\\tilde{O}(n^{2.072})$ time and a randomized one that runs in $\\tilde{O}(n^{2.032})$
      on expectation improving upon the best known bound of $\\tilde{O}(n^{2.25})$
      by Roditty (STOC, 2023). For $2$-approximating paths of length $\\geq k$, $k
      \\geq 4$, we provide the first improvement after Dor, Halperin, Zwick (2000)
      for dense graphs even just using combinatorial methods, and then improve it
      further using FMM. We next consider additive approximations, and provide improved
      bounds for all additive $\\beta$-approximations, $\\beta \\geq 4$. For weighted
      graphs, we show that by allowing small additive errors along with an $(1+\\epsilon)$-multiplicative
      approximation, it is possible to improve upon Zwick''s $\\tilde{O}(n^\\omega)$
      algorithm. Our results point out the crucial role that FMM can play even on
      approximating APSP on unweighted undirected graphs, and reveal new bottlenecks
      towards achieving a quadratic running time to approximate APSP.", "venue": "arXiv.org",
      "year": 2023, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2309.13225",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-09-23", "journal":
      {"name": "ArXiv", "volume": "abs/2309.13225"}, "authors": [{"authorId": "2241280443",
      "name": "Barna Saha"}, {"authorId": "2064452190", "name": "Christopher Ye"}]},
      {"paperId": "36781fef1d7ccef626d70ee6dd0cc60edf4dda0d", "externalIds": {"ArXiv":
      "2311.02520", "DBLP": "journals/corr/abs-2311-02520", "DOI": "10.48550/arXiv.2311.02520",
      "CorpusId": 265033825}, "corpusId": 265033825, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/36781fef1d7ccef626d70ee6dd0cc60edf4dda0d",
      "title": "Single-Source Shortest Paths with Negative Real Weights in O\u0303(mn8/9)
      Time", "abstract": "This paper presents a randomized algorithm for the problem
      of single-source shortest paths on directed graphs with real (both positive
      and negative) edge weights. Given an input graph with $n$ vertices and $m$ edges,
      the algorithm completes in $\\tilde{O}(mn^{8/9})$ time with high probability.
      For real-weighted graphs, this result constitutes the first asymptotic improvement
      over the classic $O(mn)$-time algorithm variously attributed to Shimbel, Bellman,
      Ford, and Moore.", "venue": "arXiv.org", "year": 2023, "referenceCount": 16,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-11-04", "journal":
      {"name": "ArXiv", "volume": "abs/2311.02520"}, "authors": [{"authorId": "5619883",
      "name": "Jeremy T. Fineman"}]}, {"paperId": "5fa73fc39e455905e46dd34f7d09384724ff32cd",
      "externalIds": {"ArXiv": "2311.10014", "CorpusId": 265221462}, "corpusId": 265221462,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5fa73fc39e455905e46dd34f7d09384724ff32cd",
      "title": "On the Number of Shortest Paths in Graphs", "abstract": "It is proved
      that the number of shortest paths between two vertices of distance $t$ in a
      graph with degrees bounded by $\\Delta$ is at most $2 \\cdot (\\frac{\\Delta}{2})^t$.
      This improves upon the na\\\"ive $\\Delta (\\Delta-1) ^{t-1}$ bound.", "venue":
      "", "year": 2023, "referenceCount": 3, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2023-11-16", "journal": null, "authors": [{"authorId": "1707057", "name": "I.
      Benjamini"}, {"authorId": "2183345965", "name": "Elad Tzalik"}]}, {"paperId":
      "d22a65afb18667e645b720cf0dc9328da21a4626", "externalIds": {"ArXiv": "2311.09364",
      "CorpusId": 265220962}, "corpusId": 265220962, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/d22a65afb18667e645b720cf0dc9328da21a4626",
      "title": "The Structure of Metrizable Graphs", "abstract": "A consistent path
      system in a graph $G$ is an intersection-closed collection of paths, with exactly
      one path between any two vertices in $G$. We call $G$ metrizable if every consistent
      path system in it is the system of geodesic paths defined by assigning some
      positive lengths to its edges. We show that metrizable graphs are, in essence,
      subdivisions of a small family of basic graphs with additional compliant edges.
      In particular, we show that every metrizable graph with 11 vertices or more
      is outerplanar plus one vertex.", "venue": "", "year": 2023, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-11-15",
      "journal": null, "authors": [{"authorId": "2256995764", "name": "Maria Chudnovsky"},
      {"authorId": "1838053297", "name": "Daniel Cizma"}, {"authorId": "52529268",
      "name": "N. Linial"}]}, {"paperId": "b08a99b58093c0fcc7b8028212a5ce472ef2a536",
      "externalIds": {"DOI": "10.26554/sti.2023.8.4.684-690", "CorpusId": 263618034},
      "corpusId": 263618034, "publicationVenue": "63523fad-a4a2-4f63-95aa-8497f6aa7db0",
      "url": "https://www.semanticscholar.org/paper/b08a99b58093c0fcc7b8028212a5ce472ef2a536",
      "title": "Solving the Shortest Total Path Length Spanning Tree Problem Using
      the Modified Sollin and Modified Dijkstra Algorithms", "abstract": "In a weighted
      connected graph, the shortest total path length spanning tree problem is a problem
      when we need to discover the spanning tree with the lowest total cost of all
      pairwise distances between its vertices. This problem is also known as the minimum
      routing cost spanning tree (MRCST). In this study, we will discuss the Modified
      Sollin and Modified Dijkstra Algorithms to solve that problem which implemented
      on 300 problems are complete graphs of orders 10 to 100 in increments of 10,
      where every order consists of 30 problems. The results show that the performance
      of the Modified Dijkstra and the Modified Sollin Algorithms are slightly similar.
      On orders 10, 20, 30, 60, and 80, the Modified Dijkstra Algorithm performs better
      than the Modified Sollin, however on orders 40, 50, 70, 90, and 100, the Modified
      Sollin performs better.", "venue": "Science and Technology Indonesia", "year":
      2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": true, "openAccessPdf": {"url": "https://sciencetechindonesia.com/index.php/jsti/article/download/893/367",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Business", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-01", "journal":
      {"name": "Science and Technology Indonesia"}, "authors": [{"authorId": "9442264",
      "name": "W. Wamiliana"}, {"authorId": "2128233541", "name": "Reni Permata Sari"},
      {"authorId": "2253607932", "name": "Astri Reformasari"}, {"authorId": "2253607944",
      "name": "Jani Suparman"}, {"authorId": "121235418", "name": "A. Junaidi"}]},
      {"paperId": "60220c76b8c58d7bbb63ccee456efe9653a400c7", "externalIds": {"ArXiv":
      "2310.07862", "CorpusId": 263908811}, "corpusId": 263908811, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/60220c76b8c58d7bbb63ccee456efe9653a400c7",
      "title": "An $\\tilde\\Omega\\big(\\sqrt{\\log |T|}\\big)$ Lower Bound for Steiner
      Point Removal", "abstract": "In the Steiner point removal (SPR) problem, we
      are given a (weighted) graph $G$ and a subset $T$ of its vertices called terminals,
      and the goal is to compute a (weighted) graph $H$ on $T$ that is a minor of
      $G$, such that the distance between every pair of terminals is preserved to
      within some small multiplicative factor, that is called the stretch of $H$.
      It has been shown that on general graphs we can achieve stretch $O(\\log |T|)$
      [Filtser, 2018]. On the other hand, the best-known stretch lower bound is $8$
      [Chan-Xia-Konjevod-Richa, 2006], which holds even for trees. In this work, we
      show an improved lower bound of $\\tilde\\Omega\\big(\\sqrt{\\log |T|}\\big)$.",
      "venue": "", "year": 2023, "referenceCount": 13, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-10-11",
      "journal": null, "authors": [{"authorId": "2257514335", "name": "Yu Chen"},
      {"authorId": "2257413646", "name": "Zihan Tan"}]}, {"paperId": "ec42618a8884a4e02197f0eb3727d8d5776195d7",
      "externalIds": {"DBLP": "journals/corr/abs-2309-16594", "ArXiv": "2309.16594",
      "DOI": "10.48550/arXiv.2309.16594", "CorpusId": 263132532}, "corpusId": 263132532,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/ec42618a8884a4e02197f0eb3727d8d5776195d7",
      "title": "Deterministic Fully Dynamic SSSP and More", "abstract": "We present
      the first non-trivial fully dynamic algorithm maintaining exact single-source
      distances in unweighted graphs. This resolves an open problem stated by Sankowski
      [COCOON 2005] and van den Brand and Nanongkai [FOCS 2019]. Previous fully dynamic
      single-source distances data structures were all approximate, but so far, non-trivial
      dynamic algorithms for the exact setting could only be ruled out for polynomially
      weighted graphs (Abboud and Vassilevska Williams, [FOCS 2014]). The exact unweighted
      case remained the main case for which neither a subquadratic dynamic algorithm
      nor a quadratic lower bound was known. Our dynamic algorithm works on directed
      graphs, is deterministic, and can report a single-source shortest paths tree
      in subquadratic time as well. Thus we also obtain the first deterministic fully
      dynamic data structure for reachability (transitive closure) with subquadratic
      update and query time. This answers an open problem of van den Brand, Nanongkai,
      and Saranurak [FOCS 2019]. Finally, using the same framework we obtain the first
      fully dynamic data structure maintaining all-pairs $(1+\\epsilon)$-approximate
      distances within non-trivial sub-$n^\\omega$ worst-case update time while supporting
      optimal-time approximate shortest path reporting at the same time. This data
      structure is also deterministic and therefore implies the first known non-trivial
      deterministic worst-case bound for recomputing the transitive closure of a digraph.",
      "venue": "arXiv.org", "year": 2023, "referenceCount": 83, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/2309.16594", "status": "CLOSED"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-09-28", "journal": {"name": "ArXiv",
      "volume": "abs/2309.16594"}, "authors": [{"authorId": "145549761", "name": "J.
      V. D. Brand"}, {"authorId": "47775561", "name": "Adam Karczmarz"}]}, {"paperId":
      "f3e660cf035ca0700c29eea8cc3f672d49f08855", "externalIds": {"ArXiv": "2311.03321",
      "DBLP": "journals/corr/abs-2311-03321", "DOI": "10.48550/arXiv.2311.03321",
      "CorpusId": 265043813}, "corpusId": 265043813, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/f3e660cf035ca0700c29eea8cc3f672d49f08855",
      "title": "Exact Shortest Paths with Rational Weights on the Word RAM", "abstract":
      "Exact computation of shortest paths in weighted graphs has been traditionally
      studied in one of two settings. First, one can assume that the edge weights
      are real numbers and all the performed operations on reals (typically comparisons
      and additions) take constant time. Classical Dijkstra''s and Bellman-Ford algorithms
      have been described in this setting. More efficient exact shortest paths algorithms
      have been obtained for integer-weighted graphs. Integrality assumption not only
      enables faster algorithms but also allows implementing the aforementioned algorithms
      in a much more realistic word RAM model where only arithmetic operations on
      $O(\\log{n})$-bit integers are performed in constant time. On the word RAM one
      can as efficiently exactly encode even \\emph{rational-weighted} instances with
      $O(\\log{n})$-bit numerators and denominators. However, the known exact real-weighted
      shortest paths algorithms, run on such a rational input, can easily encounter
      intermediate values of $\\Theta(n)$ bits if represented exactly. This leads
      to a factor-$\\Omega(n)$ slowdown on the word RAM. At the same time, the scaling
      algorithms suited for integer weights do not produce exact solutions for rational
      inputs without dramatically increasing their accuracy. In this paper, we design
      randomized exact single-source shortest paths algorithms for rational-weighted
      graphs on the word RAM. Most importantly, in the non-negative case, we obtain
      a near-linear time algorithm matching Dijkstra''s algorithm running time up
      to polylogarithmic factors. In presence of negative weights, we give an $\\tilde{O}(n^{2.5})$-time
      algorithm breaking through the best known strongly polynomial bound attained
      by Bellman-Ford for sufficiently dense graphs.", "venue": "arXiv.org", "year":
      2023, "referenceCount": 37, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-11-06", "journal": {"name": "ArXiv", "volume": "abs/2311.03321"}, "authors":
      [{"authorId": "2265582496", "name": "Adam Karczmarz"}, {"authorId": "36025798",
      "name": "Wojciech Nadara"}, {"authorId": "2265581814", "name": "Marek Sokolowski"}]},
      {"paperId": "6475fbe52d7191727767364b963fba5ca683e6bc", "externalIds": {"ArXiv":
      "2310.14575", "DBLP": "journals/corr/abs-2310-14575", "DOI": "10.48550/arXiv.2310.14575",
      "CorpusId": 264426413}, "corpusId": 264426413, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/6475fbe52d7191727767364b963fba5ca683e6bc",
      "title": "Listing 6-Cycles", "abstract": "Listing copies of small subgraphs
      (such as triangles, $4$-cycles, small cliques) in the input graph is an important
      and well-studied problem in algorithmic graph theory. In this paper, we give
      a simple algorithm that lists $t$ (non-induced) $6$-cycles in an $n$-node undirected
      graph in $\\tilde O(n^2+t)$ time. This nearly matches the fastest known algorithm
      for detecting a $6$-cycle in $O(n^2)$ time by Yuster and Zwick (1997). Previously,
      a folklore $O(n^2+t)$-time algorithm was known for the task of listing $4$-cycles.",
      "venue": "arXiv.org", "year": 2023, "referenceCount": 40, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-10-23", "journal": {"name": "ArXiv",
      "volume": "abs/2310.14575"}, "authors": [{"authorId": "2261132179", "name":
      "Ce Jin"}, {"authorId": "2259957386", "name": "Virginia Vassilevska Williams"},
      {"authorId": "2261360528", "name": "Renfei Zhou"}]}, {"paperId": "20931ae3bf0527718843620ee5bc8301161d80fb",
      "externalIds": {"CorpusId": 264553600}, "corpusId": 264553600, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/20931ae3bf0527718843620ee5bc8301161d80fb",
      "title": "E\ufb00icient enumeration of graph orientations with sources", "abstract":
      "An orientation of an undirected graph is obtained by assigning a direction
      to each of its edges. It is called cyclic when a directed cycle appears, and
      acyclic otherwise. We study efficient algorithms for enumerating the orientations
      of an undirected graph. To get the full picture, we consider both the cases
      of acyclic and cyclic orientations, under some rules specifying which nodes
      are the sources (i.e. their incident edges are all directed outwards). Our enumeration
      algorithms use linear space and provide new bounds for the delay, which isthemaximumelapsedtimebetweentheoutputofanytwoconsecutivelylistedsolutions.
      We obtain a delay of O ( m ) for acyclic orientations and \u02dc O ( m ) for
      cyclic ones. When just a single source is specified, these delays become O (
      m \u00b7 n ) and O ( m \u00b7 h + h 3 ), respectively, where h is the girth
      of the graph without the given source. When multiple sources are specified,
      the delays are the same as in the single source case. .", "venue": "", "year":
      null, "referenceCount": 30, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "1856525", "name": "A. Conte"}, {"authorId":
      "2244629507", "name": "Roberto Grossi"}, {"authorId": "145180394", "name": "Andrea
      Marino"}, {"authorId": "2171386252", "name": "R. Rizzi"}]}, {"paperId": "4073aab43709ee5535f00c1a164d090b3e48e749",
      "externalIds": {"ArXiv": "2309.16995", "DBLP": "journals/corr/abs-2309-16995",
      "DOI": "10.48550/arXiv.2309.16995", "CorpusId": 263310756}, "corpusId": 263310756,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/4073aab43709ee5535f00c1a164d090b3e48e749",
      "title": "Max Weight Independent Set in sparse graphs with no long claws", "abstract":
      "We revisit the recent polynomial-time algorithm for the MAX WEIGHT INDEPENDENT
      SET (MWIS) problem in bounded-degree graphs that do not contain a fixed graph
      whose every component is a subdivided claw as an induced subgraph [Abrishami,
      Dibek, Chudnovsky, Rz\\k{a}\\.zewski, SODA 2022]. First, we show that with an
      arguably simpler approach we can obtain a faster algorithm with running time
      $n^{\\mathcal{O}(\\Delta^2)}$, where $n$ is the number of vertices of the instance
      and $\\Delta$ is the maximum degree. Then we combine our technique with known
      results concerning tree decompositions and provide a polynomial-time algorithm
      for MWIS in graphs excluding a fixed graph whose every component is a subdivided
      claw as an induced subgraph, and a fixed biclique as a subgraph.", "venue":
      "arXiv.org", "year": 2023, "referenceCount": 46, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2309.16995",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-09-29", "journal": {"name": "ArXiv", "volume": "abs/2309.16995"}, "authors":
      [{"authorId": "9429084", "name": "Tara Abrishami"}, {"authorId": "1797007",
      "name": "M. Chudnovsky"}, {"authorId": "1740436", "name": "Marcin Pilipczuk"},
      {"authorId": "1466473068", "name": "Pawel Rzka.zewski"}]}, {"paperId": "3d79721998b20ad9088e0631af4d5d7bb22ac028",
      "externalIds": {"CorpusId": 264552200}, "corpusId": 264552200, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/3d79721998b20ad9088e0631af4d5d7bb22ac028",
      "title": "Antichain Graphs", "abstract": "\u2014A vertex u \u2208 V 1 in a bipartite
      graph G ( V 1 \u222a V 2 , E ) is redundant if all the vertices of V 2 that
      are adjacent to u are also adjacent to a vertex w ( (cid:54) = u ) in V 1 .
      In other words, N G ( u ) \u2286 N G ( w ) . Such vertices increase the cost
      of the network (when it is a communication network) or increase the unnecessary
      membership of the network (when it is a social network). An ideal cost effective
      network is the one where there is no redundant vertex. In this article, we model
      the above type of networks using graphs and call them antichain graphs. We characterize
      such graphs and study their properties. We show that if G and H are antichain
      graphs then so is their cartesian product G \u00d7 H . We design few more methods
      to construct new antichain graphs from the existing ones. We also present generating
      procedures, which generate some regular and biregular antichain graphs. We de\ufb01ne
      a critical edge with reference to the antichain property. We also characterize
      the critical edge.", "venue": "", "year": null, "referenceCount": 12, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": [{"authorId": "2262175916", "name": "Shahistha"}, {"authorId":
      "2262180021", "name": "Arathi Bhat"}, {"authorId": "2262176463", "name": "K.
      A. Bhat"}]}, {"paperId": "87cae42bd323119e97645c79d651290156ed3cbd", "externalIds":
      {"CorpusId": 264308486}, "corpusId": 264308486, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/87cae42bd323119e97645c79d651290156ed3cbd",
      "title": "Modi\ufb01ed and Improved Algorithm for Finding a Median Path with
      a Speci\ufb01c Length ( (cid:96) ) for a Tree Network", "abstract": ": The median
      path problem (min-sum criterion) is a common problem in graph theory and tree
      networks. This problem is open to study because its applications are growing
      and extending in different \ufb01elds, such as providing insight for decision-makers
      when selecting the optimal location for non-emergency services, including railroad
      lines, highways, pipelines, and transit routes. Also, the min-sum criterion
      can deal with several networks in different applications. The location problem
      has traditionally been concerned with the optimal location of a single-point
      facility at either a vertex or along an edge in a network. Recently, numerous
      investigators have investigated this classic problem and have studied the location
      of many facilities, such as paths, trees, and cycles. The concept of the median,
      which measures the centrality of a vertex in a graph, is extended to the paths
      in a graph. In this paper, we consider the problem of locating path-shaped facilities
      on a tree network. A new modi\ufb01ed and improved algorithm for \ufb01nding
      a median single path facility of a speci\ufb01ed length in a tree network is
      proposed. The median criterion for optimality considers the sum of the distances
      from all vertices of the tree to the path facility. This problem under the median
      criterion is called the (cid:96) -core problem. The distance between any two
      vertices in the tree is equal to the length of the unique path connecting them.
      This location problem usually has applications in distributed database systems,
      pipelines, the design of public transportation routes, and communication networks.",
      "venue": "", "year": null, "referenceCount": 26, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2784505",
      "name": "J. \u017derovnik"}, {"authorId": "3143167", "name": "D. R. Poklukar"},
      {"authorId": "29398849", "name": "A. Aboutahoun"}, {"authorId": "2163041958",
      "name": "S. Mahdi"}, {"authorId": "2260359132", "name": "Mahmoud El-Alem"},
      {"authorId": "2233699618", "name": "Mohamed ALrashidi"}]}, {"paperId": "6fa93b7cca9f7b72a7de8b6e6a2446834e999a4f",
      "externalIds": {"ArXiv": "2311.06402", "DBLP": "journals/corr/abs-2311-06402",
      "DOI": "10.48550/arXiv.2311.06402", "CorpusId": 265150152}, "corpusId": 265150152,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/6fa93b7cca9f7b72a7de8b6e6a2446834e999a4f",
      "title": "A Dynamic Shortest Paths Toolbox: Low-Congestion Vertex Sparsifiers
      and their Applications", "abstract": "We present a general toolbox, based on
      new vertex sparsifiers, for designing data structures to maintain shortest paths
      in dynamic graphs. In an $m$-edge graph undergoing edge insertions and deletions,
      our data structures give the first algorithms for maintaining (a) $m^{o(1)}$-approximate
      all-pairs shortest paths (APSP) with \\emph{worst-case} update time $m^{o(1)}$
      and query time $\\tilde{O}(1)$, and (b) a tree $T$ that has diameter no larger
      than a subpolynomial factor times the diameter of the underlying graph, where
      each update is handled in amortized subpolynomial time. In graphs undergoing
      only edge deletions, we develop a simpler and more efficient data structure
      to maintain a $(1+\\epsilon)$-approximate single-source shortest paths (SSSP)
      tree $T$ in a graph undergoing edge deletions in amortized time $m^{o(1)}$ per
      update. Our data structures are deterministic. The trees we can maintain are
      not subgraphs of $G$, but embed with small edge congestion into $G$. This is
      in stark contrast to previous approaches and is useful for algorithms that internally
      use trees to route flow. To illustrate the power of our new toolbox, we show
      that our SSSP data structure gives simple deterministic implementations of flow-routing
      MWU methods in several contexts, where previously only randomized methods had
      been known. To obtain our toolbox, we give the first algorithm that, given a
      graph $G$ undergoing edge insertions and deletions and a dynamic terminal set
      $A$, maintains a vertex sparsifier $H$ that approximately preserves distances
      between terminals in $A$, consists of at most $|A|m^{o(1)}$ vertices and edges,
      and can be updated in worst-case time $m^{o(1)}$. Crucially, our vertex sparsifier
      construction allows us to maintain a low edge-congestion embedding of $H$ into
      $G$, which is needed for our applications.", "venue": "arXiv.org", "year": 2023,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-11-10", "journal":
      {"name": "ArXiv", "volume": "abs/2311.06402"}, "authors": [{"authorId": "2989695",
      "name": "Rasmus Kyng"}, {"authorId": "12769070", "name": "Simon Meierhans"},
      {"authorId": "1491009274", "name": "M. Gutenberg"}]}, {"paperId": "b805da21f801a7f369dc8bd3e5d7b07a4b350132",
      "externalIds": {"ArXiv": "2310.05315", "DBLP": "journals/corr/abs-2310-05315",
      "DOI": "10.48550/arXiv.2310.05315", "CorpusId": 263830459}, "corpusId": 263830459,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/b805da21f801a7f369dc8bd3e5d7b07a4b350132",
      "title": "Sub-quadratic (1+\\eps)-approximate Euclidean Spanners, with Applications",
      "abstract": "We study graph spanners for point-set in the high-dimensional Euclidean
      space. On the one hand, we prove that spanners with stretch<\\sqrt{2} and subquadratic
      size are not possible, even if we add Steiner points. On the other hand, if
      we add extra nodes to the graph (non-metric Steiner points), then we can obtain
      (1+\\eps)-approximate spanners of subquadratic size. We show how to construct
      a spanner of size n^{2-\\Omega(\\eps^3)}, as well as a directed version of the
      spanner of size n^{2-\\Omega(\\eps^2)}. We use our directed spanner to obtain
      an algorithm for computing (1+\\eps)-approximation to Earth-Mover Distance (optimal
      transport) between two sets of size n in time n^{2-\\Omega(\\eps^2)}.", "venue":
      "arXiv.org", "year": 2023, "referenceCount": 41, "citationCount": 1, "influentialCitationCount":
      1, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2310.05315",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-09", "journal":
      {"name": "ArXiv", "volume": "abs/2310.05315"}, "authors": [{"authorId": "2257000933",
      "name": "Alexandr Andoni"}, {"authorId": "2257389044", "name": "Hengjie Zhang"}]},
      {"paperId": "a5048a9856bc7fbbb73ddfb71c96bf382ef078f7", "externalIds": {"CorpusId":
      265046081}, "corpusId": 265046081, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/a5048a9856bc7fbbb73ddfb71c96bf382ef078f7",
      "title": "Approximate and Randomized algorithms for Computing a Second Hamiltonian
      Cycle \u2217", "abstract": "In this paper we consider the following problem:
      Given a Hamiltonian graph G , and a Hamiltonian cycle C of G , can we compute
      a second Hamiltonian cycle C \u2032 \u0338 = C of G , and if yes, how quickly?
      If the input graph G satisfies certain conditions (e.g. if every vertex of G
      is odd, or if the minimum degree is large enough), it is known that such a second
      Hamiltonian cycle always exists. Despite substantial efforts, no subexponential-time
      algorithm is known for this problem. In this paper we relax the problem of computing
      a second Hamiltonian cycle in two ways. First, we consider approximating the
      length of a second cycle on n -vertex graphs with minimum degree \u03b4 and
      maximum degree \u2206. We provide a linear-time algorithm for computing a cycle
      C \u2032 \u0338 = C of length at least n \u2212 4 \u03b1 ( \u221a n + 2 \u03b1
      ) + 8, where \u03b1 = \u2206 \u2212 2 \u03b4 \u2212 2 . Our second relaxation
      of the problem is probabilistic. We propose a randomized algorithm which computes
      a second Hamiltonian cycle with high probability , given that the input graph
      G has a large enough minimum degree. More specifically, we prove that for every
      0 < p \u2264 0 . 02, if the minimum degree of G is at least 8 p log 2 \u221a
      8 n + 4, then a second Hamiltonian cycle can be computed with probability at
      least 1 \u2212 1 n (cid:16) 50 p 4 + 1 (cid:17) in poly ( n ) \u00b7 2 4 pn
      time. Our results imply that, when the minimum degree \u03b4 is sufficiently
      large, we can compute with high probability a second Hamiltonian cycle faster
      than any known deterministic algorithm.", "venue": "", "year": null, "referenceCount":
      25, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": [{"authorId": "144439648", "name": "Argyrios Deligkas"}, {"authorId":
      "2265606994", "name": "\u2021. GeorgeB.Mertzios"}, {"authorId": "2265604850",
      "name": "\u00a7. PaulG.Spirakis"}, {"authorId": "2265606217", "name": "\u00b6.
      ViktorZamaraev"}]}, {"paperId": "da5de653ae38206fc2975b2dcd1ad15e65dbb203",
      "externalIds": {"CorpusId": 264097619}, "corpusId": 264097619, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/da5de653ae38206fc2975b2dcd1ad15e65dbb203",
      "title": "APPROXIMATION ALGORITHMS FOR PATH TSP", "abstract": "The Traveling
      Salesman Problem (TSP), one of the best-studied NP-hard problems, asks for the
      minimum-length Hamiltonian cycle in a weighted graph, i.e. the shortest cycle
      on the graph that traverses every vertex once. Particular study has been devoted
      to the relaxation of Metric TSP, in which visiting vertices multiple times is
      allowed. Metric TSP encapsulates the intuitive notion of a traveling salesman,
      and has applications towards routing and scheduling. Like the general TSP, Metric
      TSP is NP-complete. Because of this, much work has gone into finding efficient
      approximation algorithms to Metric TSP. A generalization to the Metric TSP problem,
      called Metric Path TSP (or often just Path TSP), asks for the shortest path
      between two fixed vertices which visits every vertex at least once. There have
      recently been a flurry of gradual improvements to polynomial-time approximation
      algorithms to Path TSP. This paper will focus on the following two recent breakthroughs
      in Path TSP.", "venue": "", "year": 2021, "referenceCount": 11, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "2257960420", "name": "Gaurav Arya"},
      {"authorId": "2258287627", "name": "And CARL SCHILDKRAUT"}, {"authorId": "2258289647",
      "name": "Nicolas Suter"}]}, {"paperId": "e0d1ecf45633ffa6cf6f86f4ec2b27ee6a51238b",
      "externalIds": {"ArXiv": "2310.04332", "DBLP": "journals/corr/abs-2310-04332",
      "DOI": "10.48550/arXiv.2310.04332", "CorpusId": 263830141}, "corpusId": 263830141,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/e0d1ecf45633ffa6cf6f86f4ec2b27ee6a51238b",
      "title": "On the Parameterized Complexity of Multiway Near-Separator", "abstract":
      "We study a new graph separation problem called Multiway Near-Separator. Given
      an undirected graph $G$, integer $k$, and terminal set $T \\subseteq V(G)$,
      it asks whether there is a vertex set $S \\subseteq V(G) \\setminus T$ of size
      at most $k$ such that in graph $G-S$, no pair of distinct terminals can be connected
      by two pairwise internally vertex-disjoint paths. Hence each terminal pair can
      be separated in $G-S$ by removing at most one vertex. The problem is therefore
      a generalization of (Node) Multiway Cut, which asks for a vertex set for which
      each terminal is in a different component of $G-S$. We develop a fixed-parameter
      tractable algorithm for Multiway Near-Separator running in time $2^{O(k \\log
      k)} * n^{O(1)}$. Our algorithm is based on a new pushing lemma for solutions
      with respect to important separators, along with two problem-specific ingredients.
      The first is a polynomial-time subroutine to reduce the number of terminals
      in the instance to a polynomial in the solution size $k$ plus the size of a
      given suboptimal solution. The second is a polynomial-time algorithm that, given
      a graph $G$ and terminal set $T \\subseteq V(G)$ along with a single vertex
      $x \\in V(G)$ that forms a multiway near-separator, computes a 14-approximation
      for the problem of finding a multiway near-separator not containing $x$.", "venue":
      "arXiv.org", "year": 2023, "referenceCount": 31, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-06", "journal": {"name": "ArXiv", "volume": "abs/2310.04332"}, "authors":
      [{"authorId": "1780259", "name": "B. Jansen"}, {"authorId": "2109934555", "name":
      "S. K. Roy"}]}, {"paperId": "e61b289b4edcd5fe76b0cdc97571b77c34101064", "externalIds":
      {"ArXiv": "2311.04140", "DBLP": "journals/corr/abs-2311-04140", "DOI": "10.48550/arXiv.2311.04140",
      "CorpusId": 265043738}, "corpusId": 265043738, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/e61b289b4edcd5fe76b0cdc97571b77c34101064",
      "title": "A Nearly Linear-Time Distributed Algorithm for Exact Maximum Matching",
      "abstract": "In this paper, we propose a randomized $\\tilde{O}(\\mu(G))$-round
      algorithm for the maximum cardinality matching problem in the CONGEST model,
      where $\\mu(G)$ means the maximum size of a matching of the input graph $G$.
      The proposed algorithm substantially improves the current best worst-case running
      time. The key technical ingredient is a new randomized algorithm of finding
      an augmenting path of length $\\ell$ with high probability within $\\tilde{O}(\\ell)$
      rounds, which positively settles an open problem left in the prior work by Ahmadi
      and Kuhn [DISC''20]. The idea of our augmenting path algorithm is based on a
      recent result by Kitamura and Izumi [IEICE Trans.''22], which efficiently identifies
      a sparse substructure of the input graph containing an augmenting path, following
      a new concept called \\emph{alternating base trees}. Their algorithm, however,
      resorts to a centralized approach of collecting the entire information of the
      substructure into a single vertex for constructing an augmenting path. The technical
      highlight of this paper is to provide a fully-decentralized counterpart of such
      a centralized method. To develop the algorithm, we prove several new structural
      properties of alternating base trees, which are of independent interest.", "venue":
      "arXiv.org", "year": 2023, "referenceCount": 27, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-11-07", "journal": {"name": "ArXiv", "volume": "abs/2311.04140"}, "authors":
      [{"authorId": "1702108", "name": "Taisuke Izumi"}, {"authorId": "2051654925",
      "name": "Naoki Kitamura"}, {"authorId": "2266465209", "name": "Yutaro Yamaguchi"}]},
      {"paperId": "728e09073e2a93a2cd95f285ccfab5a159365431", "externalIds": {"DBLP":
      "journals/corr/abs-2309-16045", "ArXiv": "2309.16045", "DOI": "10.48550/arXiv.2309.16045",
      "CorpusId": 263130928}, "corpusId": 263130928, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/728e09073e2a93a2cd95f285ccfab5a159365431",
      "title": "Minimum Monotone Tree Decomposition of Density Functions Defined on
      Graphs", "abstract": "Monotone trees - trees with a function defined on their
      vertices that decreases the further away from a root node one travels, are a
      natural model for a process that weakens the further one gets from its source.
      Given an aggregation of monotone trees, one may wish to reconstruct the individual
      monotone components. A natural representation of such an aggregation would be
      a graph. While many methods have been developed for extracting hidden graph
      structure from datasets, which makes obtaining such an aggregation possible,
      decomposing such graphs into the original monotone trees is algorithmically
      challenging. Recently, a polynomial time algorithm has been developed to extract
      a minimum cardinality collection of monotone trees (M-Tree Set) from a given
      density tree - but no such algorithm exists for density graphs that may contain
      cycles. In this work, we prove that extracting such minimum M-Tree Sets of density
      graphs is NP-Complete. We additionally prove three additional variations of
      the problem - such as the minimum M-Tree Set such that the intersection between
      any two monotone trees is either empty or contractible (SM-Tree Set) - are also
      NP-Complete. We conclude by providing some approximation algorithms, highlighted
      by a 3-approximation algorithm for computing the minimum SM-Tree Set for density
      cactus graphs.", "venue": "arXiv.org", "year": 2023, "referenceCount": 23, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/2309.16045", "status": "CLOSED"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-09-27", "journal": {"name": "ArXiv", "volume": "abs/2309.16045"}, "authors":
      [{"authorId": "1580250968", "name": "Lucas Magee"}, {"authorId": "2248133432",
      "name": "Yusu Wang"}]}, {"paperId": "c23e0cf66aea69b00d47175fddacf6f5f3ae22e5",
      "externalIds": {"ArXiv": "2311.03262", "DBLP": "journals/corr/abs-2311-03262",
      "DOI": "10.48550/arXiv.2311.03262", "CorpusId": 265033784}, "corpusId": 265033784,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/c23e0cf66aea69b00d47175fddacf6f5f3ae22e5",
      "title": "On Finding Optimal (Dynamic) Arborescences", "abstract": "Let G =
      (V, E) be a directed and weighted graph with vertex set V of size n and edge
      set E of size m, such that each edge (u, v) \\in E has a real-valued weight
      w(u, c). An arborescence in G is a subgraph T = (V, E'') such that for a vertex
      u \\in V, the root, there is a unique path in T from u to any other vertex v
      \\in V. The weight of T is the sum of the weights of its edges. In this paper,
      given G, we are interested in finding an arborescence in G with minimum weight,
      i.e., an optimal arborescence. Furthermore, when G is subject to changes, namely
      edge insertions and deletions, we are interested in efficiently maintaining
      a dynamic arborescence in G. This is a well known problem with applications
      in several domains such as network design optimization and in phylogenetic inference.
      In this paper we revisit algorithmic ideas proposed by several authors for this
      problem, we provide detailed pseudo-code as well as implementation details,
      and we present experimental results on large scale-free networks and on phylogenetic
      inference. Our implementation is publicly available at \\url{https://gitlab.com/espadas/optimal-arborescences}.",
      "venue": "arXiv.org", "year": 2023, "referenceCount": 32, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-11-06", "journal": {"name": "ArXiv",
      "volume": "abs/2311.03262"}, "authors": [{"authorId": "2265491997", "name":
      "Joaquim Espada"}, {"authorId": "2265490562", "name": "Alexandre P. Francisco"},
      {"authorId": "2265490999", "name": "Tatiana Rocher"}, {"authorId": "2258832918",
      "name": "Lu''is M. S. Russo"}, {"authorId": "143607092", "name": "C\u00e1tia
      Vaz"}]}, {"paperId": "45d748ea773b14555c08332091ee982690c71ec3", "externalIds":
      {"ArXiv": "2311.02708", "DBLP": "journals/corr/abs-2311-02708", "DOI": "10.48550/arXiv.2311.02708",
      "CorpusId": 265033411}, "corpusId": 265033411, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/45d748ea773b14555c08332091ee982690c71ec3",
      "title": "Highly Connected Steiner Subgraph - Parameterized Algorithms and Applications
      to Hitting Set Problems", "abstract": "Given a simple connected undirected graph
      G = (V, E), a set X \\subseteq V(G), and integers k and p, STEINER SUBGRAPH
      EXTENSION problem asks if there exists a set S \\supseteq X with at most k vertices
      such that G[S] is p-edge-connected. This is a natural generalization of a well-studied
      problem STEINER TREE (set p=1 and X as the set of all terminals). In this paper,
      we initiate the study of STEINER SUBGRAPH EXTENSION from the perspective of
      parameterized complexity and give a fixed-parameter algorithm parameterized
      by k and p on graphs of bounded degeneracy. In case we remove the assumption
      of the input graph being bounded degenerate, then the STEINER SUBGRAPH EXTENSION
      problem becomes W[1]-hard. Besides being an independent advance on the parameterized
      complexity of network design problems, our result has natural applications.
      In particular, we use our result to obtain singly exponential-time FPT algorithms
      for several vertex deletion problem studied in the literature, where the goal
      is to delete a smallest set of vertices such that (i) the resulting graph belongs
      to a specific hereditary graph class, and (ii) the deleted set of vertices induces
      a p-edge-connected subgraph of the input graph.", "venue": "arXiv.org", "year":
      2023, "referenceCount": 43, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-11-05", "journal": {"name": "ArXiv", "volume": "abs/2311.02708"}, "authors":
      [{"authorId": "47899951", "name": "E. Eiben"}, {"authorId": "40661141", "name":
      "Diptapriyo Majumdar"}, {"authorId": "1730552", "name": "M. Ramanujan"}]}, {"paperId":
      "79bac7a281e89a1aa57c1e44e82468cda7310859", "externalIds": {"ArXiv": "2310.18719",
      "CorpusId": 264590255}, "corpusId": 264590255, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/79bac7a281e89a1aa57c1e44e82468cda7310859",
      "title": "Oriented trees and paths in digraphs", "abstract": "Which conditions
      ensure that a digraph contains all oriented paths of some given length, or even
      a all oriented trees of some given size, as a subgraph? One possible condition
      could be that the host digraph is a tournament of a certain order. In arbitrary
      digraphs and oriented graphs, conditions on the chromatic number, on the edge
      density, on the minimum outdegree and on the minimum semidegree have been proposed.
      In this survey, we review the known results, and highlight some open questions
      in the area.", "venue": "", "year": 2023, "referenceCount": 64, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["Review"], "publicationDate": "2023-10-28", "journal":
      null, "authors": [{"authorId": "2262444196", "name": "Maya Stein"}]}, {"paperId":
      "26c53ea80d132f604fd403e1bb68ce0a1f42ecf6", "externalIds": {"CorpusId": 264558370},
      "corpusId": 264558370, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/26c53ea80d132f604fd403e1bb68ce0a1f42ecf6",
      "title": "MIT Open Access Articles Graph homomorphisms between trees", "abstract":
      "In this paper we study several problems concerning the number of homomorphisms
      of trees. We begin with an algorithm for the number of homomorphisms from a
      tree to any graph. By using this algorithm and some transformations on trees,
      we study various extremal problems about the number of homomorphisms of trees.
      These applications include a far reaching generalization and a dual of Bollob\u00b4as
      and Tyomkyn\u2019s result concerning the number of walks in trees. Some other
      main results of the paper are the following. Denote by hom( H, G ) the number
      of homomorphisms from a graph H to a graph G . For any tree T m on m vertices
      we give a general lower bound for hom( T m , G ) by certain entropies of Markov
      chains de\ufb01ned on the graph G . As a particular case, we show that for any
      graph G ,", "venue": "", "year": null, "referenceCount": 20, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": [{"authorId": "2262242879", "name": "P\u00b4eter Csikv\u00b4ari"},
      {"authorId": "2262260144", "name": "Zhicong Lin"}]}, {"paperId": "e974a0ec5de1f730b0b3307906b77f6b10658e02",
      "externalIds": {"DOI": "10.1002/jgt.23049", "CorpusId": 264314844}, "corpusId":
      264314844, "publicationVenue": "d7d15b42-f092-422f-8287-cb47ffe4a422", "url":
      "https://www.semanticscholar.org/paper/e974a0ec5de1f730b0b3307906b77f6b10658e02",
      "title": "Uniformly 3\u2010connected graphs", "abstract": "Let be a positive
      integer. A graph is said to be uniformly \u2010connected if between any pair
      of vertices the maximum number of independent paths is exactly . Dawes showed
      that all minimally 3\u2010connected graphs can be constructed from such that
      every graph in each intermediate step is also minimally 3\u2010connected. In
      this paper, we generalize Dawes'' result to uniformly 3\u2010connected graphs.
      We give a constructive characterization of the class of uniformly 3\u2010connected
      graphs which differs from the characterization provided by G\u00f6ring et al.,
      where their characterization requires the set of all 3\u2010connected and 3\u2010regular
      graphs as a starting set, the new characterization requires only the graph .
      Eventually, we obtain a tight bound on the number of edges in uniformly 3\u2010connected
      graphs.", "venue": "Journal of Graph Theory", "year": 2023, "referenceCount":
      11, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-10-17", "journal": {"name": "Journal of Graph Theory"},
      "authors": [{"authorId": "2238178412", "name": "Liqiong Xu"}]}, {"paperId":
      "ccb9bf8dcf349e84da127f1023d8b72a9df1c26b", "externalIds": {"CorpusId": 265259066},
      "corpusId": 265259066, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ccb9bf8dcf349e84da127f1023d8b72a9df1c26b",
      "title": "Packing Lower Bounds for Cluster Editing", "abstract": "Cluster Editing
      is the problem of finding a minimal set of edge modifications to transform a
      given graph into a cluster graph - a graph whose connected components are cliques.
      A set of induced, vertex pair disjoint paths of length two in the given graph
      is a lower bound for the number of required edge modifications. To find such
      sets, we define and examine a type of intersection graph, the P 3 - intersection
      graph , that models which induced paths of length two, called P 3 s, in a given
      graph share a vertex pair. Now, any independent set on the P 3 -intersection
      graph yields a lower bound for the Cluster Editing problem on the given graph.
      Unfortunately, Maximum Independent Set generally is NP-hard. However, the complexity
      on P 3 -intersection graphs is unknown. In this work, we show that the neighbourhood
      of every vertex in a P 3 -intersection graph can be partitioned into three cliques
      characterized by which vertex pair the contained vertices share with the respective
      vertex. We also prove that edges between these cliques strictly follow a specific
      structure. Additionally, we briefly discuss possible approaches to show the
      NP-hardness of Maximum Independent Set on P 3 -intersection graphs. Finally,
      we transfer the concept of P 3 -intersection graphs to stars and paths of arbitrary
      length. We find that it is infeasible to compute a maximum independent set on
      these types of intersection graphs.", "venue": "", "year": null, "referenceCount":
      27, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": [{"authorId": "2267072777", "name": "September Karlsruhe"}]},
      {"paperId": "ccc9a6b5fab4a4ae080ddb72303e69730013d495", "externalIds": {"DOI":
      "10.1088/1742-6596/2571/1/012019", "CorpusId": 263919672}, "corpusId": 263919672,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ccc9a6b5fab4a4ae080ddb72303e69730013d495",
      "title": "On metric dimensions of flower graphs", "abstract": "The metric dimension
      of a connected graph G is the smallest number of nodes (resolving set) required
      to identify all other nodes based on shortest path distances uniquely. The notion
      of resolving set is vital in robotic navigation and to create various plan of
      action for the mastermind game. If certain vertices of a set S \u2282 V(G) resolve
      each pair of nodes u and v of G, then that set is a resolving set. A metric
      basis represents the lowest number of nodes in the set S. In this study, we
      describe the distance matrix and metric dimension of sunflower graphs and flower
      snarks.", "venue": "Journal of Physics: Conference Series", "year": 2023, "referenceCount":
      14, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://iopscience.iop.org/article/10.1088/1742-6596/2571/1/012019/pdf",
      "status": "GOLD"}, "fieldsOfStudy": ["Physics"], "s2FieldsOfStudy": [{"category":
      "Physics", "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2023-10-01",
      "journal": {"name": "Journal of Physics: Conference Series", "volume": "2571"},
      "authors": [{"authorId": "103552360", "name": "A. Girisha"}, {"authorId": "2257425625",
      "name": "P. Rajendra"}, {"authorId": "2257424749", "name": "U. Vijaya Chandra
      Kumar"}, {"authorId": "2257425678", "name": "S. Pushpa"}]}, {"paperId": "e76f9b873fb29eedb374a064bbf30f149c8102f9",
      "externalIds": {"ArXiv": "2311.08042", "CorpusId": 265157802}, "corpusId": 265157802,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/e76f9b873fb29eedb374a064bbf30f149c8102f9",
      "title": "Quantum Algorithms for Graph Coloring and other Partitioning, Covering,
      and Packing Problems", "abstract": "Let U be a universe on n elements, let k
      be a positive integer, and let F be a family of (implicitly defined) subsets
      of U. We consider the problems of partitioning U into k sets from F, covering
      U with k sets from F, and packing k non-intersecting sets from F into U. Classically,
      these problems can be solved via inclusion-exclusion in O*(2^n) time [BjorklundHK09].
      Quantumly, there are faster algorithms for graph coloring with running time
      O(1.9140^n) [ShimizuM22] and for Set Cover with a small number of sets with
      running time O(1.7274^n |F|^O(1)) [AmbainisBIKPV19]. In this paper, we give
      a quantum speedup for Set Partition, Set Cover, and Set Packing whenever there
      is a classical enumeration algorithm that lends itself to a quadratic quantum
      speedup, which, for any subinstance on a subset X of U, enumerates at least
      one member of a k-partition, k-cover, or k-packing (if one exists) restricted
      to (or projected onto, in the case of k-cover) the set X in O*(c^{|X|}) time
      with c<2. Our bounded-error quantum algorithm runs in O*((2+c)^(n/2)) for Set
      Partition, Set Cover, and Set Packing. When c<=1.147899, our algorithm is slightly
      faster than O*((2+c)^(n/2)); when c approaches 1, it matches the running time
      of [AmbainisBIKPV19] for Set Cover when |F| is subexponential in n. For Graph
      Coloring, we further improve the running time to O(1.7956^n) by leveraging faster
      algorithms for coloring with a small number of colors to better balance our
      divide-and-conquer steps. For Domatic Number, we obtain a O((2-\\epsilon)^n)
      running time for some \\epsilon>0.", "venue": "", "year": 2023, "referenceCount":
      25, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Physics"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Physics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2023-11-14", "journal": null, "authors": [{"authorId":
      "2266466435", "name": "Serge Gaspers"}, {"authorId": "2266496661", "name": "Jerry
      Zirui Li"}]}, {"paperId": "82f4328b36ea496dbad7568a4bb36ba251cf806f", "externalIds":
      {"CorpusId": 263305949}, "corpusId": 263305949, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/82f4328b36ea496dbad7568a4bb36ba251cf806f",
      "title": "University of Birmingham Tiling problems in edge-ordered graphs",
      "abstract": "Given graphs F and G , a perfect F -tiling in G is a collection
      of vertex-disjoint copies of F in G that together cover all the vertices in
      G . The study of the minimum degree threshold forcing a perfect F -tiling in
      a graph G has a long history, culminating in the K\u00fchn\u2013Osthus theorem
      [Combinatorica 2009] which resolves this problem, up to an additive constant,
      for all graphs F . We initiate the study of the analogous question for edge-ordered
      graphs. In particular, we characterize for which edge-ordered graphs F this
      problem is well-de\ufb01ned. We also apply the absorbing method to asymptotically
      determine the minimum degree threshold for forcing a perfect P -tiling in an
      edge-ordered graph, where P is any \ufb01xed monotone path.", "venue": "", "year":
      2023, "referenceCount": 20, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2249347540",
      "name": "Igor Araujo"}, {"authorId": "1478297809", "name": "Sim\u00f3n Piga"},
      {"authorId": "2456435", "name": "Andrew Treglown"}, {"authorId": "153378704",
      "name": "Zimu Xiang"}]}, {"paperId": "84f853ce559e3dce92f88d56974d4425f5cac23a",
      "externalIds": {"DBLP": "journals/corr/abs-2310-20325", "ArXiv": "2310.20325",
      "DOI": "10.48550/arXiv.2310.20325", "CorpusId": 264803618}, "corpusId": 264803618,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/84f853ce559e3dce92f88d56974d4425f5cac23a",
      "title": "A polynomial-time OPT\u03b5-approximation algorithm for maximum independent
      set of connected subgraphs in a planar graph", "abstract": "In the Maximum Independent
      Set of Objects problem, we are given an $n$-vertex planar graph $G$ and a family
      $\\mathcal{D}$ of $N$ objects, where each object is a connected subgraph of
      $G$. The task is to find a subfamily $\\mathcal{F} \\subseteq \\mathcal{D}$
      of maximum cardinality that consists of pairwise disjoint objects. This problem
      is $\\mathsf{NP}$-hard and is equivalent to the problem of finding the maximum
      number of pairwise disjoint polygons in a given family of polygons in the plane.
      As shown by Adamaszek et al. (J. ACM ''19), the problem admits a \\emph{quasi-polynomial
      time approximation scheme} (QPTAS): a $(1-\\varepsilon)$-approximation algorithm
      whose running time is bounded by $2^{\\mathrm{poly}(\\log(N),1/\\epsilon)} \\cdot
      n^{\\mathcal{O}(1)}$. Nevertheless, to the best of our knowledge, in the polynomial-time
      regime only the trivial $\\mathcal{O}(N)$-approximation is known for the problem
      in full generality. In the restricted setting where the objects are pseudolines
      in the plane, Fox and Pach (SODA ''11) gave an $N^{\\varepsilon}$-approximation
      algorithm with running time $N^{2^{\\tilde{\\mathcal{O}}(1/\\varepsilon)}}$,
      for any $\\varepsilon>0$. In this work, we present an $\\text{OPT}^{\\varepsilon}$-approximation
      algorithm for the problem that runs in time $N^{\\tilde{\\mathcal{O}}(1/\\varepsilon^2)}
      n^{\\mathcal{O}(1)}$, for any $\\varepsilon>0$, thus improving upon the result
      of Fox and Pach both in terms of generality and in terms of the running time.
      Our approach combines the methodology of Voronoi separators, introduced by Marx
      and Pilipczuk (TALG ''22), with a new analysis of the approximation factor.",
      "venue": "arXiv.org", "year": 2023, "referenceCount": 21, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-10-31", "journal": {"name": "ArXiv",
      "volume": "abs/2310.20325"}, "authors": [{"authorId": "1493264326", "name":
      "Jana Cslovjecsek"}, {"authorId": "1749507", "name": "Michal Pilipczuk"}, {"authorId":
      "3427447", "name": "Karol Wegrzycki"}]}, {"paperId": "e0a9ea9af7b7975d4933da7d416164655ea83fd7",
      "externalIds": {"CorpusId": 264938558}, "corpusId": 264938558, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/e0a9ea9af7b7975d4933da7d416164655ea83fd7",
      "title": "(1 , 2) -rainbow connection number at most 3 in connected dense graphs",
      "abstract": "Let G be an edge-colored connected graph G . A path P in the graph
      G is called l -rainbow path if each subpath of length at most l + 1 is rainbow.
      The graph G is called ( k, l ) -rainbow connected if any two vertices in G are
      connected by at least k pairwise internally vertex-disjoint l -rainbow paths.
      The smallest number of colors needed in order to make G ( k, l ) -rainbow connected
      is called the ( k, l ) -rainbow connection number of G and denoted by rc k,l
      ( G ) . In this paper, we consider the (1 , 2) -rainbow connection number at
      most 3 in some connected dense graphs. Our main results are as follows: (1)
      Let n \u2265 7 be an integer and G be a connected graph of order n . If \u03c9
      ( G ) \u2265 n \u2212 3 , then rc 1 , 2 ( G ) \u2264 3 . Moreover, the bound
      of the clique number is sharpness. (2) Let n \u2265 7 be an integer and G be
      a connected graph of order n . If | E ( G ) | \u2265 (cid:0) n \u2212 3 2 (cid:1)
      + 7 , then rc 1 , 2 ( G ) \u2264 3 .", "venue": "", "year": null, "referenceCount":
      19, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": [{"authorId": "8031449", "name": "Trung Duy
      Doan"}, {"authorId": "2264854327", "name": "Le Thi"}, {"authorId": "2265016139",
      "name": "Duyen"}]}, {"paperId": "d920e20c811933141193b1d4f1088e7fa8b43c44",
      "externalIds": {"DBLP": "journals/corr/abs-2309-13827", "ArXiv": "2309.13827",
      "DOI": "10.48550/arXiv.2309.13827", "CorpusId": 262466343}, "corpusId": 262466343,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/d920e20c811933141193b1d4f1088e7fa8b43c44",
      "title": "A simple linear-time algorithm for generating auxiliary 3-edge-connected
      subgraphs", "abstract": "A linear-time algorithm for generating auxiliary subgraphs
      for the 3-edge-connected components of a connected multigraph is presented.
      The algorithm uses an innovative graph contraction operation and makes only
      one pass over the graph. By contrast, the previously best-known algorithms make
      multiple passes over the graph to decompose it into its 2-edge-connected components
      or 2-vertex-connected components, then its 3-edge-connected components or 3-vertex-connected
      components, and then construct a cactus representation for the 2-cuts to generate
      the auxiliary subgraphs for the 3-edge-connected components.", "venue": "arXiv.org",
      "year": 2023, "referenceCount": 20, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2309.13827",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-09-25", "journal":
      {"name": "ArXiv", "volume": "abs/2309.13827"}, "authors": [{"authorId": "2159047",
      "name": "Yung H. Tsin"}]}, {"paperId": "ebfe3011cab2ec38a58c5318eb3249fea0d50177",
      "externalIds": {"CorpusId": 264938259}, "corpusId": 264938259, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/ebfe3011cab2ec38a58c5318eb3249fea0d50177",
      "title": "Characterizations of J -Total Dominating Sets of Some Graphs", "abstract":
      ". Let G be a graph with no isolated vertex. A subset M \u2286 V ( G ) is called
      a J -open set if N G ( a ) \\ N G ( b ) \u0338 = \u2205 and N G ( b ) \\ N G
      ( a ) \u0338 = \u2205 \u2200 a, b \u2208 M, where a \u0338 = b . If in addition,
      M is a total dominating in G , then we call M a J -total dominating set in G
      . The maximum cardinality among all J -total dominating set in G , denoted by
      \u03b3 Jt ( G ), is called the J -total domination number of G . In this paper,
      we characterize J -total dominating sets in some special graphs and join of
      two graphs, and we use these results to obtain formulas for the parameters of
      these graphs. Moreover, we determine its relationships with other known parameters
      in graph theory. Finally, we derive the lower bound of the parameter for the
      corona of two graphs.", "venue": "", "year": null, "referenceCount": 13, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": [{"authorId": "2164003442", "name": "Javier A. Hassan"}, {"authorId":
      "2226174325", "name": "Jahiri Manditong"}, {"authorId": "2261182805", "name":
      "Alcyn R. Bakkang"}, {"authorId": "2202992182", "name": "Sisteta U. Kamdon"},
      {"authorId": "2263994203", "name": "Jeffrey Imer Salim"}]}, {"paperId": "ef2be64d21a3e56dc6f9102d286efa9cbe94d90e",
      "externalIds": {"DOI": "10.3390/math11194068", "CorpusId": 263166603}, "corpusId":
      263166603, "publicationVenue": "6175efe8-6f8e-4cbe-8cee-d154f4e78627", "url":
      "https://www.semanticscholar.org/paper/ef2be64d21a3e56dc6f9102d286efa9cbe94d90e",
      "title": "An Inverse Approach for Finding Graphs with a Failed Zero Forcing
      Number of k", "abstract": "For a given a graph G, the zero forcing number of
      G, Z(G), is the smallest cardinality of any set S of vertices on which repeated
      applications of the forcing rule results in all vertices being included in S.
      The forcing rule is as follows: if a vertex v is in S, and exactly one neighbor
      u of v is not in S, then u is added to S in the next iteration. The failed zero
      forcing number of a graph was introduced by Fetcie, Jacob, and Saavedra and
      was defined as the cardinality of the largest set of vertices which fails to
      force all vertices in the graph. In 2021, Gomez et al. proved that there were
      exactly 15 graphs with a failed zero forcing number of two, but their proof
      was complicated, requiring the analysis of many graph families. We present an
      \u201cinverse\u201d approach where we start with a set of vertices S and then
      see which graphs have S as a maximum-sized failed zero forcing set. This results
      in not only a shorter proof but characterizes which graphs have a particular
      failed zero forcing set. In our proof, we characterize the graphs which have
      a failed zero forcing set S where |S|=2, meaning considering all simple graphs
      of order two as induced subgraphs. This approach also has greater potential
      for characterizing graphs where F(G)>2 since many general arguments on the structure
      of graphs are developed in this type of analysis and are applicable for failed
      zero forcing sets of any size.", "venue": "Mathematics", "year": 2023, "referenceCount":
      7, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://www.mdpi.com/2227-7390/11/19/4068/pdf?version=1695702073",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-09-25", "journal": {"name": "Mathematics"}, "authors": [{"authorId": "2248446771",
      "name": "Chirag Kaudan"}, {"authorId": "2249548457", "name": "Rachel Taylor"},
      {"authorId": "2248438986", "name": "Darren A. Narayan"}]}, {"paperId": "885d4ffc9e1544562e87d2af9ecd2276aae6e5de",
      "externalIds": {"DBLP": "journals/corr/abs-2309-17419", "ArXiv": "2309.17419",
      "DOI": "10.48550/arXiv.2309.17419", "CorpusId": 263310540}, "corpusId": 263310540,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/885d4ffc9e1544562e87d2af9ecd2276aae6e5de",
      "title": "Enumerating minimal solution sets for metric graph problems", "abstract":
      "Problems from metric graph theory such as Metric Dimension, Geodetic Set, and
      Strong Metric Dimension have recently had a strong impact on the field of parameterized
      complexity by being the first problems in NP to admit double-exponential lower
      bounds in the treewidth, and even in the vertex cover number for the latter.
      We initiate the study of enumerating minimal solution sets for these problems
      and show that they are also of great interest in enumeration. More specifically,
      we show that enumerating minimal resolving sets in graphs and minimal geodetic
      sets in split graphs are equivalent to hypergraph dualization, arguably one
      of the most important open problems in algorithmic enumeration. This provides
      two new natural examples to a question that emerged in different works this
      last decade: for which vertex (or edge) set graph property $\\Pi$ is the enumeration
      of minimal (or maximal) subsets satisfying $\\Pi$ equivalent to hypergraph dualization?
      As only very few properties are known to fit within this context -- namely,
      properties related to minimal domination -- our results make significant progress
      in characterizing such properties, and provide new angles of approach for tackling
      hypergraph dualization. In a second step, we consider cases where our reductions
      do not apply, namely graphs with no long induced paths, and show these cases
      to be mainly tractable.", "venue": "arXiv.org", "year": 2023, "referenceCount":
      93, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/2309.17419", "status": "CLOSED"},
      "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "external"}, {"category": "Mathematics", "source": "s2-fos-model"}, {"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-09-29", "journal": {"name": "ArXiv", "volume": "abs/2309.17419"},
      "authors": [{"authorId": "9545403", "name": "Benjamin Bergougnoux"}, {"authorId":
      "15525460", "name": "Oscar Defrain"}, {"authorId": "30400913", "name": "Fionn
      Mc Inerney"}]}, {"paperId": "640f1750d9516db7b704f07453ddf24824733060", "externalIds":
      {"DBLP": "journals/corr/abs-2310-09678", "ArXiv": "2310.09678", "DOI": "10.48550/arXiv.2310.09678",
      "CorpusId": 264146246}, "corpusId": 264146246, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/640f1750d9516db7b704f07453ddf24824733060",
      "title": "Tree Containment Above Minimum Degree is FPT", "abstract": "According
      to the classic Chv{\\''{a}}tal''s Lemma from 1977, a graph of minimum degree
      $\\delta(G)$ contains every tree on $\\delta(G)+1$ vertices. Our main result
      is the following algorithmic\"extension\"of Chv\\''{a}tal''s Lemma: For any
      $n$-vertex graph $G$, integer $k$, and a tree $T$ on at most $\\delta(G)+k$
      vertices, deciding whether $G$ contains a subgraph isomorphic to $T$, can be
      done in time $f(k)\\cdot n^{\\mathcal{O}(1)}$ for some function $f$ of $k$ only.
      The proof of our main result is based on an interplay between extremal graph
      theory and parameterized algorithms.", "venue": "arXiv.org", "year": 2023, "referenceCount":
      47, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-14", "journal":
      {"name": "ArXiv", "volume": "abs/2310.09678"}, "authors": [{"authorId": "2256637009",
      "name": "Fedor V. Fomin"}, {"authorId": "1720941", "name": "P. Golovach"}, {"authorId":
      "51152870", "name": "Danil Sagunov"}, {"authorId": "145418662", "name": "Kirill
      Simonov"}]}, {"paperId": "d1a5ca7706269f12aa79a0dbb45f60639d398cf4", "externalIds":
      {"ArXiv": "2310.03849", "DBLP": "journals/corr/abs-2310-03849", "DOI": "10.48550/arXiv.2310.03849",
      "CorpusId": 263829726}, "corpusId": 263829726, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/d1a5ca7706269f12aa79a0dbb45f60639d398cf4",
      "title": "On two conjectures about the intersection of longest paths and cycles",
      "abstract": "A conjecture attributed to Smith states that every pair of longest
      cycles in a $k$-connected graph intersect each other in at least $k$ vertices.
      In this paper, we show that every pair of longest cycles in a~$k$-connected
      graph on $n$ vertices intersect each other in at least~$\\min\\{n,8k-n-16\\}$
      vertices, which confirms Smith''s conjecture when $k\\geq (n+16)/7$. An analog
      conjecture for paths instead of cycles was stated by Hippchen. By a simple reduction,
      we relate both conjectures, showing that Hippchen''s conjecture is valid when
      either $k \\leq 6$ or $k \\geq (n+9)/7$.", "venue": "arXiv.org", "year": 2023,
      "referenceCount": 10, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics", "Computer Science"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-05", "journal": {"name": "ArXiv", "volume": "abs/2310.03849"}, "authors":
      [{"authorId": "2257411922", "name": "Juan Guti''errez"}, {"authorId": "11709880",
      "name": "C. Valqui"}]}, {"paperId": "3c870b4f464b3ecdfc2e77bf6146de7de0a60056",
      "externalIds": {"CorpusId": 264485341}, "corpusId": 264485341, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/3c870b4f464b3ecdfc2e77bf6146de7de0a60056",
      "title": "Solving Power Dominating Set with Branch and Bound", "abstract": "Power
      dominating set is a graph problem that asks for the smallest subset of vertices
      that can observe all vertices. Observation is defined by two rules. The first
      one states that all neighbors of the power dominating set are observed. This
      is identical to dominating set, of which power dominating set is an extension.
      The second rule allows for propagation of the observation status to vertices
      that are the only unobserved neighbor of an observed vertex. Like dominating
      set, power dominating set is NP-complete. Multiple approaches for solving power
      dominating set have been presented across literature, including a formulation
      as an integer linear program. In this thesis, we present an algorithm based
      on branch and bound. We derive a variety of lower and upper bounds to the optimal
      solution and relate power dominating set to a graph covering problem. Moreover,
      we discuss different strategies for branching. The implementation of our algorithm
      outperforms the reference solution based on an integer linear program for small
      graphs but is slower on larger instances.", "venue": "", "year": null, "referenceCount":
      15, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": []}, {"paperId": "05bab4802fd4d2335203cd4d65faa45613f552c6",
      "externalIds": {"DBLP": "journals/corr/abs-2310-05494", "ArXiv": "2310.05494",
      "DOI": "10.48550/arXiv.2310.05494", "CorpusId": 263830088}, "corpusId": 263830088,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/05bab4802fd4d2335203cd4d65faa45613f552c6",
      "title": "Finding a Minimum Spanning Tree with a Small Non-Terminal Set", "abstract":
      "In this paper, we study the problem of finding a minimum weight spanning tree
      that contains each vertex in a given subset $V_{\\rm NT}$ of vertices as an
      internal vertex. This problem, called Minimum Weight Non-Terminal Spanning Tree,
      includes $s$-$t$ Hamiltonian Path as a special case, and hence it is NP-hard.
      In this paper, we first observe that Non-Terminal Spanning Tree, the unweighted
      counterpart of Minimum Weight Non-Terminal Spanning Tree, is already NP-hard
      on some special graph classes. Moreover, it is W[1]-hard when parameterized
      by clique-width. In contrast, we give a $3k$-vertex kernel and $O^*(2^k)$-time
      algorithm, where $k$ is the size of non-terminal set $V_{\\rm NT}$. The latter
      algorithm can be extended to Minimum Weight Non-Terminal Spanning Tree with
      the restriction that each edge has a polynomially bounded integral weight. We
      also show that Minimum Weight Non-Terminal Spanning Tree is fixed-parameter
      tractable parameterized by the number of edges in the subgraph induced by the
      non-terminal set $V_{\\rm NT}$, extending the fixed-parameter tractability of
      Minimum Weight Non-Terminal Spanning Tree to the general case. Finally, we give
      several results for structural parameterization.", "venue": "arXiv.org", "year":
      2023, "referenceCount": 44, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2310.05494",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-09", "journal": {"name": "ArXiv", "volume": "abs/2310.05494"}, "authors":
      [{"authorId": "1739295", "name": "T. Hanaka"}, {"authorId": "2253414815", "name":
      "Yasuaki Kobayashi"}]}, {"paperId": "6d70d835b4739da641fb4ef8371b5d6a87787f83",
      "externalIds": {"DBLP": "journals/corr/abs-2309-16892", "ArXiv": "2309.16892",
      "DOI": "10.48550/arXiv.2309.16892", "CorpusId": 263310517}, "corpusId": 263310517,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/6d70d835b4739da641fb4ef8371b5d6a87787f83",
      "title": "Kernels for the Disjoint Paths Problem on Subclasses of Chordal Graphs",
      "abstract": "Given an undirected graph $G$ and a multiset of $k$ terminal pairs
      $\\mathcal{X}$, the Vertex-Disjoint Paths (\\VDP) and Edge-Disjoint Paths (\\EDP)
      problems ask whether $G$ has $k$ pairwise internally vertex-disjoint paths and
      $k$ pairwise edge-disjoint paths, respectively, connecting every terminal pair
      in~$\\mathcal{X}$. In this paper, we study the kernelization complexity of \\VDP~and~\\EDP~on
      subclasses of chordal graphs. For \\VDP, we design a $4k$ vertex kernel on split
      graphs and an $\\mathcal{O}(k^2)$ vertex kernel on well-partitioned chordal
      graphs. We also show that the problem becomes polynomial-time solvable on threshold
      graphs. For \\textsc{EDP}, we first prove that the problem is $\\mathsf{NP}$-complete
      on complete graphs. Then, we design an $\\mathcal{O}(k^{2.75})$ vertex kernel
      for \\EDP~on split graphs, and improve it to a $7k+1$ vertex kernel on threshold
      graphs. Lastly, we provide an $\\mathcal{O}(k^2)$ vertex kernel for \\EDP~on
      block graphs and a $2k+1$ vertex kernel for clique paths. Our contributions
      improve upon several results in the literature, as well as resolve an open question
      by Heggernes et al.~[Theory Comput. Syst., 2015].", "venue": "arXiv.org", "year":
      2023, "referenceCount": 47, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2309.16892",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}, {"category": "Computer Science", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-09-28", "journal":
      {"name": "ArXiv", "volume": "abs/2309.16892"}, "authors": [{"authorId": "1723442104",
      "name": "Juhi Chaudhary"}, {"authorId": "35483478", "name": "Harmender Gahlawat"},
      {"authorId": "2247604993", "name": "Micha\u0142 W\u0142odarczyk"}, {"authorId":
      "1876496", "name": "M. Zehavi"}]}, {"paperId": "e5f063b210f0d9576dad90010d17c73a11b4eea3",
      "externalIds": {"ArXiv": "2310.00557", "CorpusId": 263334520}, "corpusId": 263334520,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/e5f063b210f0d9576dad90010d17c73a11b4eea3",
      "title": "Outerplanar Tur\\''an number of a cycle", "abstract": "A graph is
      outerplanar if it has a planar drawing for which all vertices belong to the
      outer face of the drawing. Let $H$ be a graph. The outerplanar Tur\\''an number
      of $H$, denoted by $ex_\\mathcal{OP}(n,H)$, is the maximum number of edges in
      an $n$-vertex outerplanar graph which does not contain $H$ as a subgraph. In
      2021, L. Fang et al. determined the outerplanar Tur\\''an number of cycles and
      paths. In this paper, we use techniques of dual graph to give a shorter proof
      for the sharp upperbound of $ex_\\mathcal{OP}(n,C_k)\\leq \\frac{(2k - 5)(kn
      - k - 1)}{k^2 - 2k - 1}$.", "venue": "", "year": 2023, "referenceCount": 8,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2023-10-01", "journal": null,
      "authors": [{"authorId": "102332665", "name": "Ervin GyHori"}, {"authorId":
      "2249763871", "name": "Guilherme Zeus Dantas e Moura"}, {"authorId": "2214769389",
      "name": "Runtian Zhou"}]}, {"paperId": "738fd9f505573b46d4c73ffec53323b362b5b7fa",
      "externalIds": {"ArXiv": "2311.03185", "CorpusId": 265033297}, "corpusId": 265033297,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/738fd9f505573b46d4c73ffec53323b362b5b7fa",
      "title": "Spanning trees in pseudorandom graphs via sorting networks", "abstract":
      "We show that $(n,d,\\lambda)$-graphs with $\\lambda=O(d/\\log^3 n)$ are universal
      with respect to all bounded degree spanning trees. This significantly improves
      upon the previous best bound due to Han and Yang of the form $\\lambda=d/\\exp{(O(\\sqrt{\\log
      n}))}$, and makes progress towards a problem of Alon, Krivelevich, and Sudakov
      from 2007. Our proof relies on the existence of sorting networks of logarithmic
      depth, as given by a celebrated construction of Ajtai, Koml\\''os and Szemer\\''edi.
      Using this construction, we show that the classical vertex-disjoint paths problem
      can be solved for a set of vertices fixed in advance.", "venue": "", "year":
      2023, "referenceCount": 22, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-11-06",
      "journal": null, "authors": [{"authorId": "2265490118", "name": "Joseph Hyde"},
      {"authorId": "2265489666", "name": "Natasha Morrison"}, {"authorId": "1468629139",
      "name": "Alp Muyesser"}, {"authorId": "2219270548", "name": "Mat''ias Pavez-Sign''e"}]},
      {"paperId": "81ac92f4c1915723a6055f092c70684bd28d1a56", "externalIds": {"DOI":
      "10.24996/ijs.2023.64.9.29", "CorpusId": 263651104}, "corpusId": 263651104,
      "publicationVenue": "7559cd16-a567-406d-a1b4-bb7a97bb82ed", "url": "https://www.semanticscholar.org/paper/81ac92f4c1915723a6055f092c70684bd28d1a56",
      "title": "Further Results on Graceful Antimagic Graphs", "abstract": "\u00a0\u00a0\u00a0\u00a0
      Graceful labeling of a graph \u00a0with q edges is assigned the labels for its
      vertices by some integers from the set such that no two vertices received the
      same label, where each edge is assigned the absolute value of the difference
      between the labels of its end vertices and the resulting edge labeling running
      from 1 to \u00a0inclusive. An edge labeling of a graph G is called vertex anntimagic,
      if all vertex weights are pairwise distinct, where the vertex weight of a vertex
      under an edge labeling is the sum of the label of all edges incident with that
      vertex. \u00a0In this paper, we address the problem of finding graceful antimagic
      labelin for split of the star graph , \u00a0graph, \u00a0graph, jellyfish graph
      , Dragon graph , kite graph (\u00a0and the double comb graph ,", "venue": "Iraqi
      Journal of Science", "year": 2023, "referenceCount": 7, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://ijs.uobaghdad.edu.iq/index.php/eijs/article/download/8128/4081", "status":
      "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-09-30", "journal": {"name": "Iraqi Journal of Science"}, "authors": [{"authorId":
      "2203004492", "name": "Noor K. Shawkat"}, {"authorId": "145812520", "name":
      "M. A. Ahmed"}]}, {"paperId": "55ce8f8e522a9085be778a5882524d08f1da1011", "externalIds":
      {"ArXiv": "2311.01808", "CorpusId": 265019360}, "corpusId": 265019360, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/55ce8f8e522a9085be778a5882524d08f1da1011",
      "title": "Diameter of uniform spanning trees on random weighted graphs", "abstract":
      "For any edge weight distribution, we consider the uniform spanning tree (UST)
      on finite graphs with i.i.d. random edge weights. We show that, for bounded
      degree expander graphs and finite boxes of ${\\mathbb Z}^d$, the diameter of
      the UST is of order $n^{1/2+o(1)}$ with high probability, where $n$ is the number
      of vertices.", "venue": "", "year": 2023, "referenceCount": 30, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2023-11-03", "journal": null,
      "authors": [{"authorId": "2265385994", "name": "Luca Makowiec"}, {"authorId":
      "2265386512", "name": "Michele Salvi"}, {"authorId": "2265468124", "name": "Rongfeng
      Sun"}]}, {"paperId": "f91a2fe7aee4ce5d1c0a5ec72a7b075dac041f50", "externalIds":
      {"DBLP": "conf/acda/StausKMS23", "DOI": "10.1137/1.9781611977714.1", "CorpusId":
      264171621}, "corpusId": 264171621, "publicationVenue": "61905003-1147-4a93-bd84-17b6c34e3d7c",
      "url": "https://www.semanticscholar.org/paper/f91a2fe7aee4ce5d1c0a5ec72a7b075dac041f50",
      "title": "Exact Algorithms for Group Closeness Centrality", "abstract": "The
      Group Closeness Centrality problem asks, given a graph G and an integer k ,
      for a vertex set S of size k such that the sum of distances from the vertices
      of V \\ S to S is minimal. Being a generalization of the NP-hard Dominating
      Set problem, Group Close-ness Centrality is NP-hard as well and W[2]-hard with
      respect to k meaning that it presumably has no algorithm with running time f
      ( k ) \u00b7 n O (1) . We first show that, in contrast to Dominating Set , Group
      Close-ness Centrality remains W[2]-hard when restricted to graphs with constant
      maximum degree. We then develop and evaluate two new exact algorithms for Group
      Closeness Centrality , one based on branch-and-bound and one based on a new
      ILP formulation. We further show how to embed both approaches in an iterative
      method that allows to solve the problem without computing all pairwise distances
      in G . Our experiments show that on small and medium-sized real-world networks,
      the new ILP formulation substantially outperforms a previous ILP formulation
      and that the branch-and-bound algorithm is competitive with the new ILP formulation
      for small values of k .", "venue": "Conference on Applied and Computational
      Discrete Algorithms", "year": 2023, "referenceCount": 33, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      null, "journal": {"pages": "1-12"}, "authors": [{"authorId": "2258948378", "name":
      "Luca Pascal Staus"}, {"authorId": "1682510", "name": "Christian Komusiewicz"},
      {"authorId": "1490530070", "name": "Nils Morawietz"}, {"authorId": "2056715135",
      "name": "Frank Sommer"}]}, {"paperId": "d5924b6e1da00142c05bade5dd8b4e1346d60528",
      "externalIds": {"CorpusId": 262150371}, "corpusId": 262150371, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/d5924b6e1da00142c05bade5dd8b4e1346d60528",
      "title": "Taille minimum des codes identi(cid:12)ants dans les graphes", "abstract":
      "Let G be a simple, undirected graph with vertex set V . For v 2 V and r (cid:21)
      1, we denote by B G;r ( v ) the ball of radius r and centre v . A set C (cid:18)
      V is said to be an r - identifying code in G if the sets B G;r ( v ) \\ C ,
      v 2 V , are all nonempty and distinct. A graph G admitting an r - identifying
      code is called r -twin-free , and in this case the size of a smallest r -identifying
      code in G is denoted by (cid:13) r ( G ). We study the following structural
      problem: let G be an r -twin-free graph, and G (cid:3) be a graph obtained from
      G by adding or deleting a vertex, or by adding or deleting an edge. If G (cid:3)
      is still r -twin-free, we compare the behaviours of (cid:13) r ( G ) and (cid:13)
      r ( G (cid:3) ), establishing results on their possible di(cid:11)erences and
      ratios.", "venue": "", "year": null, "referenceCount": 21, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": [{"authorId": "2085610932", "name": "I. Charon"}, {"authorId":
      "2029677841", "name": "Olivier Hudry"}, {"authorId": "103974700", "name": "A.
      Lobstein"}]}, {"paperId": "9ebd6f15abf2406f977b037f61bd1d812466f0b8", "externalIds":
      {"ArXiv": "2311.10055", "CorpusId": 265221371}, "corpusId": 265221371, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/9ebd6f15abf2406f977b037f61bd1d812466f0b8",
      "title": "The Minimum Clique Routing Problem on Cycles", "abstract": "In the
      Minimum Clique Routing Problem on Cycles \\textsc{MCRPC} we are given a cycle
      together with a set of demands (weighted origin-destination pairs) and the goal
      is to route all the pairs minimizing the maximum weighted clique of the intersection
      graph induced by the routing. The vertices of this graph are the demands with
      their corresponding weights and two demands are adjacent when their routes share
      at least one arc. In this work we are not only interested in the \\textsc{MCRPC}
      but also in two natural subproblems. First, we consider the situation where
      the demands are disjoint, in the sense that every two demands do not share any
      of their corresponding ends. Second, we analyze the subproblem where the weights
      of the routes are all equal. We first show that the problem is NP-complete even
      in the subproblem of disjoint demands. For the case of arbitrary weights, we
      exhibit a simple combinatorial 2-approximation algorithm and a $\\frac{3}{2}$-approximation
      algorithm based on rounding a solution of a relaxation of an integer linear
      programming formulation of our problem. Finally, we give a Fixed Parameter Tractable
      algorithm for the case of uniform weights, whose parameter is related to the
      maximum degree of the intersection graph induced by any routing.", "venue":
      "", "year": 2023, "referenceCount": 16, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science", "Mathematics"], "s2FieldsOfStudy": [{"category": "Computer Science",
      "source": "external"}, {"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-11-16",
      "journal": null, "authors": [{"authorId": "2266841067", "name": "Mariana Escalante"},
      {"authorId": "145899701", "name": "M. Matamala"}, {"authorId": "2266840158",
      "name": "Iv''an Rapaport"}, {"authorId": "2888039", "name": "Paola B. Tolomei"},
      {"authorId": "2266841117", "name": "Luis Miguel Torres"}]}, {"paperId": "d2665d5d1f6add3d6de0fd42355d88dcc142cc0c",
      "externalIds": {"ArXiv": "2309.15597", "CorpusId": 263151419}, "corpusId": 263151419,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d2665d5d1f6add3d6de0fd42355d88dcc142cc0c",
      "title": "Connected graphs with a given dissociation number attaining the minimum
      spectral radius", "abstract": "A dissociation set of a graph is a set of vertices
      which induces a subgraph with maximum degree less than or equal to one. The
      dissociation number of a graph is the maximum cardinality of its dissociation
      sets. In this paper, we study the connected graphs of order $n$ with a given
      dissociation number that attains the minimum spectral radius. We characterize
      these graphs when the dissociation number is in $\\{n-1,~n-2,~\\lceil2n/3\\rceil,~\\lfloor2n/3\\rfloor,~2\\}$.
      We also prove that these graphs are trees when the dissociation number is larger
      than $\\lceil {2n}/{3}\\rceil$.", "venue": "", "year": 2023, "referenceCount":
      29, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-09-27",
      "journal": null, "authors": [{"authorId": "2247878989", "name": "Zejun Huang"},
      {"authorId": "2247869792", "name": "Jiahui Liu"}, {"authorId": "2248325855",
      "name": "Xinwei Zhang"}]}, {"paperId": "99d3b81493ac2d1dce390d6ccfa086aea9087893",
      "externalIds": {"ArXiv": "2310.12889", "DBLP": "journals/corr/abs-2310-12889",
      "DOI": "10.48550/arXiv.2310.12889", "CorpusId": 264306148}, "corpusId": 264306148,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/99d3b81493ac2d1dce390d6ccfa086aea9087893",
      "title": "An Enumerative Perspective on Connectivity", "abstract": "Connectivity
      (or equivalently, unweighted maximum flow) is an important measure in graph
      theory and combinatorial optimization. Given a graph $G$ with vertices $s$ and
      $t$, the connectivity $\\lambda(s,t)$ from $s$ to $t$ is defined to be the maximum
      number of edge-disjoint paths from $s$ to $t$ in $G$. Much research has gone
      into designing fast algorithms for computing connectivities in graphs. Previous
      work showed that it is possible to compute connectivities for all pairs of vertices
      in directed graphs with $m$ edges in $\\tilde{O}(m^\\omega)$ time [Chueng, Lau,
      and Leung, FOCS 2011], where $\\omega \\in [2,2.3716)$ is the exponent of matrix
      multiplication. For the related problem of computing\"small connectivities,\"it
      was recently shown that for any positive integer $k$, we can compute $\\min(k,\\lambda(s,t))$
      for all pairs of vertices $(s,t)$ in a directed graph with $n$ nodes in $\\tilde{O}((kn)^\\omega)$
      time [Akmal and Jin, ICALP 2023]. In this paper, we present an alternate exposition
      of these $\\tilde{O}(m^\\omega)$ and $\\tilde{O}((kn)^\\omega)$ time algorithms,
      with simpler proofs of correctness. Earlier proofs were somewhat indirect, introducing
      an elegant but ad hoc\"flow vector framework\"for showing correctness of these
      algorithms. In contrast, we observe that these algorithms for computing exact
      and small connectivity values can be interpreted as testing whether certain
      generating functions enumerating families of edge-disjoint paths are nonzero.
      This new perspective yields more transparent proofs, and ties the approach for
      these problems more closely to the literature surrounding algebraic graph algorithms.",
      "venue": "arXiv.org", "year": 2023, "referenceCount": 16, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-10-19", "journal": {"name": "ArXiv",
      "volume": "abs/2310.12889"}, "authors": [{"authorId": "2045344", "name": "Shyan
      S. Akmal"}]}, {"paperId": "008c08709c12f29623d5df852f538502d66f56d8", "externalIds":
      {"CorpusId": 263780047}, "corpusId": 263780047, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/008c08709c12f29623d5df852f538502d66f56d8",
      "title": "Reconstruction of 2-connected parity graphs", "abstract": "A graph
      G is reconstructible if it is determined up to isomorphism from the collection
      of all one-vertex deleted unlabeled subgraphs of G . A graph G is a parity graph
      if for every pair of vertices ( u, v ) of G , the lengths of all induced paths
      joining u and v have the same parity. A domino is a cycle on six vertices with
      only one chord joining a pair of vertices at distance 3. It is shown that all
      2-connected graphs G , with diam( G ) = 2 or diam( G ) = diam( G ) = 3, such
      that G is a domino-free parity graph or a triangle-free graph of girth 5, are
      reconstructible.", "venue": "", "year": 2021, "referenceCount": 14, "citationCount":
      1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": [{"authorId": "50819123", "name": "P. D. Priya"}, {"authorId":
      "3164062", "name": "S. Monikandan"}]}, {"paperId": "386950036bc163cd10589fbecea628daf0f3dfd4",
      "externalIds": {"CorpusId": 263305386}, "corpusId": 263305386, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/386950036bc163cd10589fbecea628daf0f3dfd4",
      "title": "More applications of the d -neihgbor equivalence: acyclicity and connectivity
      constraints", "abstract": ". In this paper, we design a framework to obtain
      e\ufb03cient algorithms for several problems with a global constraint (acyclicity
      or connectivity) such as Connected Dominating Set , Node Weighted Steiner Tree
      , Maximum Induced Tree , Longest Induced Path , and Feedback Vertex Set . We
      design a meta-algorithm that solves all these problems and whose running time
      is upper bounded by 2 O ( k ) \u00b7 n O (1) , 2 O ( k log( k )) \u00b7 n O
      (1) , 2 O ( k 2 ) \u00b7 n O (1) and n O ( k ) where k is respectively the clique-width,
      Q -rank-width, rank-width and maximum induced matching width of a given decomposition.
      Our meta-algorithm simpli\ufb01es and uni\ufb01es the known algorithms for each
      of the parameters and its running time matches asymptotically also the running
      times of the best known algorithms for basic NP -hard problems such as Vertex
      Cover and Dominating Set . Our framework is based on the d -neighbor equivalence
      de\ufb01ned in [Bui-Xuan, Telle and Vatshelle, TCS 2013]. The results we obtain
      highlight the importance of this equivalence relation on the algorithmic applications
      of width measures. We also prove that our framework could be useful for W [1]
      -hard problems parameterized by clique-width such as Max Cut and Maximum Minimal
      Cut . For these latter problems, we obtain n O ( k ) , n O ( k ) and n 2 O (
      k ) time algorithms where k is respectively the clique-width, the Q -rank-width
      and the rank-width of the input graph.", "venue": "", "year": 2023, "referenceCount":
      36, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": [{"authorId": "9545403", "name": "Benjamin
      Bergougnoux"}, {"authorId": "2577879", "name": "M. Kant\u00e9"}]}, {"paperId":
      "522042fdde5e7ab154bf92bc1dd9d82ee2969c10", "externalIds": {"CorpusId": 263781403},
      "corpusId": 263781403, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/522042fdde5e7ab154bf92bc1dd9d82ee2969c10",
      "title": "SEMI-RECONSTRUCTION OF GRAPHS OF CONNECTIVITY 2", "abstract": ". Recall
      that the deck of a graph G is the collection of subgraphs G \u2212 v for all
      vertices v of the graph G . We prove that at most two graphs of connectivity
      2 and minimal degree at least 3 can have the same deck. Let D ( G ) be a deck
      of a 2 -connected graph G . We describe an algorithm which construct by the
      deck D ( G ) of a 2 -connected graph G with minimal degree at least 3 two graphs
      G 1 ,G 2 such that G \u2208 { G 1 ,G 2 } .", "venue": "", "year": 2020, "referenceCount":
      11, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": [{"authorId": "31268248", "name": "D. Karpov"}]},
      {"paperId": "64f41f5712fbdac2361b48fb2179104e763277b1", "externalIds": {"ArXiv":
      "2310.11580", "CorpusId": 264289203}, "corpusId": 264289203, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/64f41f5712fbdac2361b48fb2179104e763277b1",
      "title": "Optimal Hamilton covers and linear arboricity for random graphs",
      "abstract": "In his seminal 1976 paper, P\\''osa showed that for all $p\\geq
      C\\log n/n$, the binomial random graph $G(n,p)$ is with high probability Hamiltonian.
      This leads to the following natural questions, which have been extensively studied:
      How well is it typically possible to cover all edges of $G(n,p)$ with Hamilton
      cycles? How many cycles are necessary? In this paper we show that for $ p\\geq
      C\\log n/n$, we can cover $G\\sim G(n,p)$ with precisely $\\lceil\\Delta(G)/2\\rceil$
      Hamilton cycles. Our result is clearly best possible both in terms of the number
      of required cycles, and the asymptotics of the edge probability $p$, since it
      starts working at the weak threshold needed for Hamiltonicity. This resolves
      a problem of Glebov, Krivelevich and Szab\\''o, and improves upon previous work
      of Hefetz, K\\\"uhn, Lapinskas and Osthus, and of Ferber, Kronenberg and Long,
      essentially closing a long line of research on Hamiltonian packing and covering
      problems in random graphs.", "venue": "", "year": 2023, "referenceCount": 25,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"},
      {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": "2023-10-17", "journal": null, "authors": [{"authorId":
      "2202411253", "name": "Nemanja Dragani''c"}, {"authorId": "46519055", "name":
      "Stefan Glock"}, {"authorId": "2202410619", "name": "David Munh''a Correia"},
      {"authorId": "1715847", "name": "B. Sudakov"}]}, {"paperId": "14c1e7b87eb0b944c03e74c1359864cec8665a8b",
      "externalIds": {"DBLP": "journals/corr/abs-2311-01026", "ArXiv": "2311.01026",
      "DOI": "10.48550/arXiv.2311.01026", "CorpusId": 264935673}, "corpusId": 264935673,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/14c1e7b87eb0b944c03e74c1359864cec8665a8b",
      "title": "A Constant Factor Approximation for Directed Feedback Vertex Set in
      Graphs of Bounded Genus", "abstract": "The minimum directed feedback vertex
      set problem consists in finding the minimum set of vertices that should be removed
      in order to make a directed graph acyclic. This is a well-known NP-hard optimization
      problem with applications in various fields, such as VLSI chip design, bioinformatics
      and transaction processing deadlock prevention and node-weighted network design.
      We show a constant factor approximation for the directed feedback vertex set
      problem in graphs of bounded genus.", "venue": "arXiv.org", "year": 2023, "referenceCount":
      18, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-11-02", "journal":
      {"name": "ArXiv", "volume": "abs/2311.01026"}, "authors": [{"authorId": "2265305017",
      "name": "Hao Sun"}]}, {"paperId": "f1b355bbbdfa9b0eb9f660b85080891b8485a5a4",
      "externalIds": {"ArXiv": "2311.06232", "DBLP": "journals/corr/abs-2311-06232",
      "DOI": "10.48550/arXiv.2311.06232", "CorpusId": 265128711}, "corpusId": 265128711,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/f1b355bbbdfa9b0eb9f660b85080891b8485a5a4",
      "title": "Better Sparsifiers for Directed Eulerian Graphs", "abstract": "Spectral
      sparsification for directed Eulerian graphs is a key component in the design
      of fast algorithms for solving directed Laplacian linear systems. Directed Laplacian
      linear system solvers are crucial algorithmic primitives to fast computation
      of fundamental problems on random walks, such as computing stationary distribution,
      hitting and commute time, and personalized PageRank vectors. While spectral
      sparsification is well understood for undirected graphs and it is known that
      for every graph $G,$ $(1+\\varepsilon)$-sparsifiers with $O(n\\varepsilon^{-2})$
      edges exist [Batson-Spielman-Srivastava, STOC ''09] (which is optimal), the
      best known constructions of Eulerian sparsifiers require $\\Omega(n\\varepsilon^{-2}\\log^4
      n)$ edges and are based on short-cycle decompositions [Chu et al., FOCS ''18].
      In this paper, we give improved constructions of Eulerian sparsifiers, specifically:
      1. We show that for every directed Eulerian graph $\\vec{G},$ there exist an
      Eulerian sparsifier with $O(n\\varepsilon^{-2} \\log^2 n \\log^2\\log n + n\\varepsilon^{-4/3}\\log^{8/3}
      n)$ edges. This result is based on combining short-cycle decompositions [Chu-Gao-Peng-Sachdeva-Sawlani-Wang,
      FOCS ''18, SICOMP] and [Parter-Yogev, ICALP ''19], with recent progress on the
      matrix Spencer conjecture [Bansal-Meka-Jiang, STOC ''23]. 2. We give an improved
      analysis of the constructions based on short-cycle decompositions, giving an
      $m^{1+\\delta}$-time algorithm for any constant $\\delta>0$ for constructing
      Eulerian sparsifiers with $O(n\\varepsilon^{-2}\\log^3 n)$ edges.", "venue":
      "arXiv.org", "year": 2023, "referenceCount": 9, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-11-10", "journal": {"name": "ArXiv", "volume": "abs/2311.06232"}, "authors":
      [{"authorId": "2274555", "name": "Sushant Sachdeva"}, {"authorId": "2052302616",
      "name": "Anvith Thudi"}, {"authorId": "2173468996", "name": "Yibin Zhao"}]},
      {"paperId": "493dc8b97778a15845cb32a334c467fce1a39010", "externalIds": {"CorpusId":
      264409859}, "corpusId": 264409859, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/493dc8b97778a15845cb32a334c467fce1a39010",
      "title": "On the parameterized complexity of non-hereditary relaxations of clique",
      "abstract": "We investigate the parameterized complexity of several problems
      formalizing cluster identification in graphs. In other words we ask whether
      a graph contains a large enough and sufficiently connected subgraph. We study
      here three relaxations of Clique : s - Club and s - Clique , in which the relaxation
      is focused on the distances in respectively the cluster and the original graph,
      and \u03b3 - Complete Subgraph in which the relaxation is made on the minimal
      degree in the cluster. As these three problems are known to be NP -hard, we
      study here their parameterized complexities. We prove that s - Club and s -
      Clique are NP -hard even restricted to graphs of degeneracy \u2264 3 whenever
      s \u2265 3 , and to graphs of degeneracy \u2264 2 whenever s \u2265 5 , which
      is a strictly stronger result than its W[1] -hardness parameterized by the degeneracy.
      Concerning \u03b3 - Complete Subgraph , we prove that it is W [1]-hard parameterized
      both by the degeneracy, implying the W[1] -hardness parameterized by the number
      of vertices in the \u03b3 - complete-subgraph, and by the number of elements
      outside the \u03b3 -complete subgraph.", "venue": "", "year": null, "referenceCount":
      27, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": [{"authorId": "2089557597", "name": "Ambroise Baril"}, {"authorId":
      "2261153809", "name": "\u2020. AntoineCastillon"}, {"authorId": "2130013569",
      "name": "Nacim Oijid"}]}, {"paperId": "1942621b327d6bf65e3aea0488efcbee222ab316",
      "externalIds": {"ArXiv": "2311.10706", "CorpusId": 265281547}, "corpusId": 265281547,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1942621b327d6bf65e3aea0488efcbee222ab316",
      "title": "Cactus Representations in Polylogarithmic Max-flow via Maximal Isolating
      Mincuts", "abstract": "A cactus representation of a graph, introduced by Dinitz
      et al. in 1976, is an edge sparsifier of $O(n)$ size that exactly captures all
      global minimum cuts of the graph. It is a central combinatorial object that
      has been a key ingredient in almost all algorithms for the connectivity augmentation
      problems and for maintaining minimum cuts under edge insertions (e.g. [NGM97],
      [CKL+22], [Hen97]). This sparsifier was generalized to Steiner cactus for a
      vertex set $T$, which can be seen as a vertex sparsifier of $O(|T|)$ size that
      captures all partitions of $T$ corresponding to a $T$-Steiner minimum cut, and
      also hypercactus, an analogous concept in hypergraphs. These generalizations
      further extend the applications of cactus to the Steiner and hypergraph settings.
      In a long line of work on fast constructions of cactus and its generalizations,
      a near-linear time construction of cactus was shown by [Karger and Panigrahi
      2009]. Unfortunately, their technique based on tree packing inherently does
      not generalize. The state-of-the-art algorithms for Steiner cactus and hypercactus
      are still slower than linear time by a factor of $\\Omega(|T|)$ [DV94] and $\\Omega(n)$
      [CX17], respectively. We show how to construct both Steiner cactus and hypercactus
      using polylogarithmic calls to max flow, which gives the first almost-linear
      time algorithms of both problems. The constructions immediately imply almost-linear-time
      connectivity augmentation algorithms in the Steiner and hypergraph settings,
      as well as speed up the incremental algorithm for maintaining minimum cuts in
      hypergraphs by a factor of $n$. The key technique behind our result is a novel
      variant of the influential isolating mincut technique [LP20, AKL+21] which we
      called maximal isolating mincuts. This technique makes the isolating mincuts
      to be\"more balanced\"which, we believe, will likely be useful in future applications.",
      "venue": "", "year": 2023, "referenceCount": 52, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "s2-fos-model"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2023-11-17", "journal": null, "authors": [{"authorId": null, "name": "Zhongtian
      He"}, {"authorId": null, "name": "Shang-En Huang"}, {"authorId": "2993556",
      "name": "Thatchaphol Saranurak"}]}, {"paperId": "f9956d067daf0f08328aef035184a6ecfdf74e74",
      "externalIds": {"DBLP": "journals/corr/abs-2310-15754", "ArXiv": "2310.15754",
      "DOI": "10.48550/arXiv.2310.15754", "CorpusId": 264439385}, "corpusId": 264439385,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/f9956d067daf0f08328aef035184a6ecfdf74e74",
      "title": "Linear MIM-width of the Square of Trees", "abstract": "Graph parameters
      measure the amount of structure (or lack thereof) in a graph that makes it amenable
      to being decomposed in a way that facilitates dynamic programming. Graph decompositions
      and their associated parameters are important both in practice (as a tool for
      designing robust algorithms for NP-hard problems) and in theory (relating large
      classes of problems to the graphs on which they are solvable in polynomial time).
      Linear MIM-width is a variant of the graph parameter MIM-width, introduced by
      Vatshelle. MIM-width is a parameter that is constant for many classes of graphs.
      Most graph classes which have been shown to have constant MIM-width also have
      constant linear MIM-width. However, computing the (linear) MIM-width of graphs,
      or showing that it is hard, has proven to be a huge challenge. To date, the
      only graph class with unbounded linear MIM-width, whose linear MIM-width can
      be computed in polynomial time, is the trees. In this follow-up, we show that
      for any tree $T$ with linear MIM-width $k$, the linear MIM-width of its square
      $T^2$ always lies between $k$ and $2k$, and that these bounds are tight for
      all $k$.", "venue": "arXiv.org", "year": 2023, "referenceCount": 25, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-10-24", "journal": {"name": "ArXiv",
      "volume": "abs/2310.15754"}, "authors": [{"authorId": "1416899968", "name":
      "Svein H\u00f8gemo"}]}, {"paperId": "d47c7305e511cd955e8501497e392cd470f33e62",
      "externalIds": {"ArXiv": "2310.12777", "CorpusId": 264305735}, "corpusId": 264305735,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d47c7305e511cd955e8501497e392cd470f33e62",
      "title": "Proximity and Remoteness in Graphs: a survey", "abstract": "The proximity
      $\\pi = \\pi (G)$ of a connected graph $G$ is the minimum, over all vertices,
      of the average distance from a vertex to all others. Similarly, the maximum
      is called the remoteness and denoted by $\\rho = \\rho (G)$. The concepts of
      proximity and remoteness, first defined in 2006, attracted the attention of
      several researchers in Graph Theory. Their investigation led to a considerable
      number of publications. In this paper, we present a survey of the research work.",
      "venue": "", "year": 2023, "referenceCount": 52, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate":
      "2023-10-01", "journal": null, "authors": [{"authorId": "2191129669", "name":
      "M. Aouchiche"}, {"authorId": "35712989", "name": "B. Rather"}]}, {"paperId":
      "ebf229b29031d131f8b93652cfe9a1d4325a7c68", "externalIds": {"DOI": "10.54254/2755-2721/17/20230939",
      "CorpusId": 264452380}, "corpusId": 264452380, "publicationVenue": "38ef5a81-0fad-4de7-abc2-0fb847d3ece7",
      "url": "https://www.semanticscholar.org/paper/ebf229b29031d131f8b93652cfe9a1d4325a7c68",
      "title": "The comparison of three MST algorithms", "abstract": "The minimum
      spanning tree, connecting all the nodes of a connected, weighted graph with
      the minimum possible total edge weight, is a fundamental concept of graph theory.
      Thus, how to find the minimum spanning tree (MST) with higher efficiency appears
      to be crucial. Three kinds of algorithms for this problem have already been
      developed: Kruskal, Prim, Boruvka. In order to make readers have a better understanding
      of the three algorithms in the process of studying and teaching, this paper
      uses the method of comparing to indicate the differences and commonalities between
      these three algorithms, draws a conclusion afterwards, and points out the most
      suitable situations to apply them in the end: Kruskals algorithm is suitable
      in sparse graphs while Prims algorithm and Boruvkas algorithm are suitable in
      dense graphs.", "venue": "Applied and Computational Engineering", "year": 2023,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://ace.ewapublishing.org/media/bc6b61343ff94a9e83f17d09be46b967.marked.pdf",
      "status": "HYBRID"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-23", "journal": {"name": "Applied and Computational Engineering"},
      "authors": [{"authorId": "2261892104", "name": "Rener Zhang"}]}, {"paperId":
      "93e0d9c9e2eb8df0651fb8dac2c4c584080d9fab", "externalIds": {"ArXiv": "2310.06192",
      "CorpusId": 263828753}, "corpusId": 263828753, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/93e0d9c9e2eb8df0651fb8dac2c4c584080d9fab",
      "title": "Cup Stacking in Graphs", "abstract": "Here we introduce a new game
      on graphs, called cup stacking, following a line of what can be considered as
      $0$-, $1$-, or $2$-person games such as chip firing, percolation, graph burning,
      zero forcing, cops and robbers, graph pebbling, and graph pegging, among others.
      It can be more general, but the most basic scenario begins with a single cup
      on each vertex of a graph. For a vertex with $k$ cups on it we can move all
      its cups to a vertex at distance $k$ from it, provided the second vertex already
      has at least one cup on it. The object is to stack all cups onto some pre-described
      target vertex. We say that a graph is stackable if this can be accomplished
      for all possible target vertices. In this paper we study cup stacking on many
      families of graphs, developing a characterization of stackability in graphs
      and using it to prove the stackability of complete graphs, paths, cycles, grids,
      the Petersen graph, many Kneser graphs, some trees, cubes of dimension up to
      20,\"somewhat balanced\"complete $t$-partite graphs, and Hamiltonian diameter
      two graphs. Additionally we use the Gallai-Edmonds Structure Theorem, the Edmonds
      Blossom Algorithm, and the Hungarian algorithm to devise a polynomial algorithm
      to decide if a diameter two graph is stackable. Our proof that cubes up to dimension
      20 are stackable uses Kleitman''s Symmetric Chain Decomposition and the new
      result of Merino, M\\\"utze, and Namrata that all generalized Johnson graphs
      (excluding the Petersen graph) are Hamiltonian. We conjecture that all cubes
      and higher-dimensional grids are stackable, and leave the reader with several
      open problems, questions, and generalizations.", "venue": "", "year": 2023,
      "referenceCount": 17, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2023-10-09",
      "journal": null, "authors": [{"authorId": "2256986065", "name": "Paul Fay"},
      {"authorId": "2238209381", "name": "Glenn Hurlbert"}, {"authorId": "2256986054",
      "name": "Maya Tennant"}]}, {"paperId": "03f51688e6cef50131464d132e4bbfa8ddf1e23e",
      "externalIds": {"DOI": "10.29020/nybg.ejpam.v16i4.4862", "CorpusId": 264897082},
      "corpusId": 264897082, "publicationVenue": "22921587-ada0-4369-8529-c5425d67c0d9",
      "url": "https://www.semanticscholar.org/paper/03f51688e6cef50131464d132e4bbfa8ddf1e23e",
      "title": "Outer-Convex Hop Domination in Graphs Under Some Binary Operations",
      "abstract": "Let G be a graph with vertex and edge sets V (G) and E(G), respectively.
      A set C \u2286 V (G) is called an outer-convex hop dominating if for every two
      vertices x, y \u2208 V (G) \\ C, the vertex set of every x\u2212y geodesic is
      contained in V (G) \\ C and for every a \u2208 V (G) \\ C, there exists b \u2208
      C such that dG(a, b) = 2. The minimum cardinality of an outer-convex hop dominating
      set of G, denoted by \u0303\u03b3conh(G), is called the outer-convex hop domination
      number of G. In this paper, we generate some formulas for the parameters of
      some special graphs and graphs under some binary operations by characterizing
      first the outer-convex hop dominating sets of each of thesegraphs. Moreover,
      we establish realization result that identifies and determines the connection
      of this parameter with the standard hop domination parameter. It shows that
      given any graph, this new parameter is always greater than or equal to the standard
      hop domination parameter.", "venue": "European Journal of Pure and Applied Mathematics",
      "year": 2023, "referenceCount": 13, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ejpam.com/index.php/ejpam/article/download/4862/1487",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-30", "journal": {"name": "European Journal of Pure and Applied Mathematics"},
      "authors": [{"authorId": "2264857852", "name": "Al-Amin Y. Isahac"}, {"authorId":
      "2164003442", "name": "Javier A. Hassan"}, {"authorId": "104099664", "name":
      "Ladznar S. Laja"}, {"authorId": "95191064", "name": "Hounam B. Copel"}]}, {"paperId":
      "525fab13fff3e8dd68dd6f7a186fcf4f84438961", "externalIds": {"DOI": "10.47443/dml.2023.131",
      "CorpusId": 265154142}, "corpusId": 265154142, "publicationVenue": "1c15dba9-7b4c-452a-b74c-ece85c5c643e",
      "url": "https://www.semanticscholar.org/paper/525fab13fff3e8dd68dd6f7a186fcf4f84438961",
      "title": "Some results about ID-path-factor critical graphs", "abstract": "Let
      G be a graph of order n . A spanning subgraph F of G is said to be a P \u2265
      k -factor of G if every component of F is a path with at least k vertices, where
      k \u2265 2 . In this paper, we introduce the concept of an ID-P \u2265 k -factor
      critical graph; a graph G is said to be an ID-P \u2265 k -factor critical graph
      if for any independent set I of G , G \u2212 I admits a P \u2265 k -factor.
      We prove that a graph G of a given order is an ID-P \u2265 2 -factor critical
      graph if its binding number is at least 2 . We also prove that a graph G of
      a \ufb01xed order is an ID-P \u2265 3 -factor critical graph if its binding
      number is at least 94 . Furthermore, we show that the obtained results are the
      best possible in some sense.", "venue": "Discrete Mathematics Letters", "year":
      2023, "referenceCount": 13, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-11-13", "journal": {"name": "Discrete
      Mathematics Letters"}, "authors": [{"authorId": "2887314", "name": "Zhiren Sun"},
      {"authorId": "35840822", "name": "Sizhong Zhou"}]}, {"paperId": "c0cfd3ed12cf831aa97e8a731865620eb5b0cc35",
      "externalIds": {"DOI": "10.47974/jios-1141", "CorpusId": 263844261}, "corpusId":
      263844261, "publicationVenue": "a8d3f485-7623-41d7-9888-9fc7c046ccb3", "url":
      "https://www.semanticscholar.org/paper/c0cfd3ed12cf831aa97e8a731865620eb5b0cc35",
      "title": "Fair dominating sets of paths", "abstract": "Let G = (V, E) \u00a0be
      a simple graph. A dominating set of G is a subset D \u2286 V such that every
      vertex not in D is adjacent to at least one vertex in D. The cardinality of
      the smallest dominating set of G, denoted by g(G), \u00a0is the domination number
      of G. For i \u2265 1, \u00a0a i-fair dominating set (iFD-set) in G, is a dominating
      set S such that |N(v) \u2229 D| = i for every vertex \u00a0v \u2208 V\\D. A
      fair dominating set, in G is a iFD-set for some integer i \u2265 1. \u00a0In
      this paper, we present the structure of fair dominating sets of a path and also
      we count the number of these sets.", "venue": "Journal of Information and Optimization
      Sciences", "year": 2023, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": null, "journal": {"name": "Journal of
      Information and Optimization Sciences"}, "authors": [{"authorId": "34606741",
      "name": "S. Alikhani"}, {"authorId": "103531123", "name": "Maryam Safazadeh"}]},
      {"paperId": "026165b38e8c0f7693c332cf9a39da9a6b849587", "externalIds": {"ArXiv":
      "2309.13428", "DBLP": "journals/corr/abs-2309-13428", "DOI": "10.48550/arXiv.2309.13428",
      "CorpusId": 262465077}, "corpusId": 262465077, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/026165b38e8c0f7693c332cf9a39da9a6b849587",
      "title": "Approximation Algorithms for the Two-Watchman Route in a Simple Polygon",
      "abstract": "The two-watchman route problem is that of computing a pair of closed
      tours in an environment so that the two tours together see the whole environment
      and some length measure on the two tours is minimized. Two standard measures
      are: the minmax measure, where we want the tours where the longest of them has
      smallest length, and the minsum measure, where we want the tours for which the
      sum of their lengths is the smallest. It is known that computing a minmax two-watchman
      route is NP-hard for simple rectilinear polygons and thus also for simple polygons.
      Also, any c-approximation algorithm for the minmax two-watchman route is automatically
      a 2c-approximation algorithm for the minsum two-watchman route. We exhibit two
      constant factor approximation algorithms for computing minmax two-watchman routes
      in simple polygons with approximation factors 5.969 and 11.939, having running
      times O(n^8) and O(n^4) respectively, where n is the number of vertices of the
      polygon. We also use the same techniques to obtain a 6.922-approximation for
      the fixed two-watchman route problem running in O(n^2) time, i.e., when two
      starting points of the two tours are given as input.", "venue": "arXiv.org",
      "year": 2023, "referenceCount": 37, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2309.13428",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-09-23", "journal": {"name": "ArXiv", "volume": "abs/2309.13428"},
      "authors": [{"authorId": "1705462", "name": "Bengt J. Nilsson"}, {"authorId":
      "2624017", "name": "E. Packer"}]}, {"paperId": "7bda0566f7d77cbdadb5ac19eef64687e4c3e99c",
      "externalIds": {"DOI": "10.29020/nybg.ejpam.v16i4.4883", "CorpusId": 264893933},
      "corpusId": 264893933, "publicationVenue": "22921587-ada0-4369-8529-c5425d67c0d9",
      "url": "https://www.semanticscholar.org/paper/7bda0566f7d77cbdadb5ac19eef64687e4c3e99c",
      "title": "J-Domination in Graphs", "abstract": "Let G be a graph. A subset D
      = {d1, d2, \u00b7 \u00b7 \u00b7 , dm} of vertices of G is called a J-set ifNG[di]
      \\ NG[dj ] \u0338= \u2205 for every i \u0338= j, where i, j \u2208 {1, 2, .
      . . , m}. A J-set is called a J-dominatingset of G if D = {d1, d2, . . . , dm}
      is a dominating set of G. The J-domination number of G, denotedby \u03b3J (G),
      is the maximum cardinality of a J-dominating set of G. In this paper, we introducethis
      new concept and we establish formulas and properties on some classes of graphs
      and in joinof two graphs. Upper and lower bounds of J-domination parameter with
      respect to the order of agraph and other parameters in graph theory are obtained.
      In addition, we present realization resultinvolving this parameter and the standard
      domination. Moreover, we characterize J-dominatingsets in some classes of graphs
      and join of two graphs and finally determine the exact value of theparameter
      of each of these graphs.", "venue": "European Journal of Pure and Applied Mathematics",
      "year": 2023, "referenceCount": 14, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ejpam.com/index.php/ejpam/article/download/4883/1490",
      "status": "GOLD"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-30", "journal": {"name": "European Journal of Pure and Applied Mathematics"},
      "authors": [{"authorId": "2164003442", "name": "Javier A. Hassan"}, {"authorId":
      "2263994203", "name": "Jeffrey Imer Salim"}]}, {"paperId": "6986356ad901241412ee571d813a911cdc0cc6ad",
      "externalIds": {"CorpusId": 264044504}, "corpusId": 264044504, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/6986356ad901241412ee571d813a911cdc0cc6ad",
      "title": "Traveling Salesman in LaGrange, Georgia", "abstract": "In the \ufb01eld
      of graph theory in mathematics, the Traveling Salesman Problem determines an
      optimized closed loop through multiple locations. We apply this problem to various
      destinations throughout LaGrange, Georgia to solve for minimum time and distance
      paths. This problem has many applications where one needs to determine optimal
      routes for visiting every location in a predetermined list. Here, present and
      demonstrate the Traveling Salesman Problem and then we apply this problem to
      the scenario of visiting the popular locations in LaGrange, Georgia while minimizing
      distance and time. When given multiple locations, what is the the most ef\ufb01-cient
      way to visit each of them? This a common scenario, known as a Traveling Salesman
      Problem (TSP) and can be applied in many situations. For example, when considering
      LaGrange College, many prospective students may like to see what the city has
      to offer before making a \ufb01nal decision. We consider the scenic areas in
      LaGrange, Georgia and construct a Traveling Salesman Problem around visiting
      those locations with a prospective student. Before we apply this problem to
      our given scenario, let\u2019s \ufb01rst demonstrate a basic example, and then
      discuss how we have chosen to implement this process using Matlab.", "venue":
      "", "year": 2021, "referenceCount": 3, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "1749219251",
      "name": "Holston Sebaugh"}, {"authorId": "2257992732", "name": "PhD Stacey L.
      Ernstberger"}]}, {"paperId": "5a679950b4a326d61a969c1a25256a094a85da69", "externalIds":
      {"DOI": "10.1051/ro/2023173", "CorpusId": 265004428}, "corpusId": 265004428,
      "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5a679950b4a326d61a969c1a25256a094a85da69",
      "title": "2-power domination number for Knodel graphs and its application in
      communication networks", "abstract": "In a graph G, if each node v\u2208V (G)\\S
      is connected to some node in S, then the set S of nodes is referred to as a
      dominating set. The domination number of G is the minimum cardinality of all
      dominating sets of G and is represented by \u03b3(G). If a dominating set S
      monitors every node in the system under a set of guidelines for power systems
      monitoring, then the set S is referred to as a power-dominating set of G. The
      power domination number of G is the least number of vertices of a power dominating
      set of G. A generalization of power domination is the k-power domination in
      a graph G. The k-power domination number of G is the minimum cardinality of
      all k-power dominating sets of G and is represented by \u03b3p,k(G). In this
      paper, we have obtained the 2-power domination number represented by \u03b3p,2(G)
      for 4-regular Kn\u00a8odel graphs and given the lower bound for 5-regular Kn\u00a8odel
      graphs.", "venue": "RAIRO - Operations Research", "year": 2023, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Engineering", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-11-03", "journal": {"name": "RAIRO - Operations Research"}, "authors":
      [{"authorId": "2265279220", "name": "R. Sundara Rajan"}, {"authorId": "2190999446",
      "name": "Arulanand S"}, {"authorId": "2265282905", "name": "S. Prabhu"}, {"authorId":
      "1733032", "name": "I. Rajasingh"}]}, {"paperId": "9159fa7ee870d0a189bd5418506fbe3ffd0f2177",
      "externalIds": {"ArXiv": "2310.05784", "DBLP": "journals/corr/abs-2310-05784",
      "DOI": "10.48550/arXiv.2310.05784", "CorpusId": 263830303}, "corpusId": 263830303,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/9159fa7ee870d0a189bd5418506fbe3ffd0f2177",
      "title": "The Parameterised Complexity of Integer Multicommodity Flow", "abstract":
      "The Integer Multicommodity Flow problem has been studied extensively in the
      literature. However, from a parameterised perspective, mostly special cases,
      such as the Disjoint Paths problem, have been considered. Therefore, we investigate
      the parameterised complexity of the general Integer Multicommodity Flow problem.
      We show that the decision version of this problem on directed graphs for a constant
      number of commodities, when the capacities are given in unary, is XNLP-complete
      with pathwidth as parameter and XALP-complete with treewidth as parameter. When
      the capacities are given in binary, the problem is NP-complete even for graphs
      of pathwidth at most 13. We give related results for undirected graphs. These
      results imply that the problem is unlikely to be fixed-parameter tractable by
      these parameters. In contrast, we show that the problem does become fixed-parameter
      tractable when weighted tree partition width (a variant of tree partition width
      for edge weighted graphs) is used as parameter.", "venue": "arXiv.org", "year":
      2023, "referenceCount": 38, "citationCount": 1, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2310.05784",
      "status": "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-09", "journal": {"name": "ArXiv", "volume": "abs/2310.05784"}, "authors":
      [{"authorId": "1741169", "name": "H. Bodlaender"}, {"authorId": "2114427988",
      "name": "Isja Mannens"}, {"authorId": "73768637", "name": "Jelle J. Oostveen"},
      {"authorId": "2047309487", "name": "Sukanya Pandey"}, {"authorId": "1711983",
      "name": "E. J. V. Leeuwen"}]}, {"paperId": "9a1d5d086b0f53de2233f636f9e72289582221d0",
      "externalIds": {"CorpusId": 264429459}, "corpusId": 264429459, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/9a1d5d086b0f53de2233f636f9e72289582221d0",
      "title": "for a Simple Polygon", "abstract": "Let V be (the boundary of) a simple
      polygon with n vertices. For a vertex p oiV, let <f>{p) be the set of points
      on V that are farthest from p, where the distance between two points is the
      length of the (Euclidean) shortest path that connects them without intersecting
      the interior of V. In this paper, we present an 0(n log n) algorithm to compute
      a member of <f>{p) for every vertex p of V. As a corollary, the external diameter
      of V can also be computed in the same time.", "venue": "", "year": null, "referenceCount":
      9, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": [{"authorId": "2261554741", "name": "Pankaj
      K. Agarwal"}, {"authorId": "2261381267", "name": "Alok Aggarwal''"}, {"authorId":
      "145456791", "name": "B. Aronov"}, {"authorId": "2169842208", "name": "S. Kosaraju"},
      {"authorId": "1771729", "name": "B. Schieber"}, {"authorId": "2261315481", "name":
      "Subhash Suri"}, {"authorId": "2261312053", "name": "Mercer Street"}, {"authorId":
      "48538380", "name": "N. York"}, {"authorId": "2261554743", "name": "Pasikaj
      K. Agarwal"}, {"authorId": "2261381267", "name": "Alok Aggarwal''"}, {"authorId":
      "2169842208", "name": "S. Kosaraju"}, {"authorId": "2261310220", "name": "Baruch
      Schieber and"}, {"authorId": "2261315481", "name": "Subhash Suri"}, {"authorId":
      "2261315363", "name": "Mercer St"}]}, {"paperId": "efd35f6f66c9b44f3eaf0980317e28dff0c6d282",
      "externalIds": {"CorpusId": 263707870}, "corpusId": 263707870, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/efd35f6f66c9b44f3eaf0980317e28dff0c6d282",
      "title": "CAHIER DU LAMSADE", "abstract": "We study a variation of the vertex
      cover problem where it is required that the graph induced by the vertex cover
      is connected. We prove that this problem is polynomial in chordal graphs, has
      a PTAS in planar graphs, is APX -hard in bipartite graphs and is 5/3-approximable
      in any class of graphs where the vertex cover problem is polynomial (in particular
      in bipartite graphs). Finally, dealing with hypergraphs, we study the complexity
      and the approximability of two natural generalizations.", "venue": "", "year":
      2020, "referenceCount": 32, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2076520661",
      "name": "B. Escoffier"}, {"authorId": "2092508900", "name": "L. Gourv\u00e8s"},
      {"authorId": "134192207", "name": "J. Monnot"}]}, {"paperId": "e3ff8ec262cd5ad80c38aeb1f17e334158b4d6d1",
      "externalIds": {"DBLP": "journals/corr/abs-2310-15401", "ArXiv": "2310.15401",
      "DOI": "10.48550/arXiv.2310.15401", "CorpusId": 264439629}, "corpusId": 264439629,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/e3ff8ec262cd5ad80c38aeb1f17e334158b4d6d1",
      "title": "Graph decomposition via edge edits into a union of regular graphs",
      "abstract": "Suppose a finite, unweighted, combinatorial graph $G = (V,E)$ is
      the union of several (degree-)regular graphs which are then additionally connected
      with a few additional edges. $G$ will then have only a small number of vertices
      $v \\in V$ with the property that one of their neighbors $(v,w) \\in E$ has
      a higher degree $\\mbox{deg}(w)>\\mbox{deg}(v)$. We prove the converse statement:
      if a graph has few vertices having a neighbor with higher degree and satisfies
      a mild regularity condition, then, via adding and removing a few edges, the
      graph can be turned into a disjoint union of (distance-)regular graphs. The
      number of edge operations depends on the maximum degree and number of vertices
      with a higher degree neighbor but is independent of the size of $|V|$.", "venue":
      "arXiv.org", "year": 2023, "referenceCount": 14, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics",
      "Computer Science"], "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "external"}, {"category":
      "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-23", "journal": {"name": "ArXiv", "volume": "abs/2310.15401"}, "authors":
      [{"authorId": "2261392528", "name": "Tony Zeng"}]}, {"paperId": "6cb2836a6d9ae76b4f6e8c0a1cde54e5ae379e6a",
      "externalIds": {"CorpusId": 263314311}, "corpusId": 263314311, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/6cb2836a6d9ae76b4f6e8c0a1cde54e5ae379e6a",
      "title": "L ( h , k )-Labeling of Circulant Graphs", "abstract": "An ( , ) L
      h k -labeling of a graph G is an assignment of non-negative integers to the
      vertices such that if two vertices u and v are adjacent then they receive labels
      that differ by at least h, and when u and v are not adjacent but there is a
      two-hop path between them, then they receive labels that differ by at least
      k. The span \u03bb of such a labeling is the difference between the largest
      and the smallest vertex labels assigned. Let ( ) kh G \u03bb denote the least
      \u03bb such that G admits an ( , ) L h k -labeling using labels from {0,1, ,
      } \u03bb \uf04c . A Cayley graph of group is called circulant graph of order
      n, if the group is isomorphic to n \uf05a . In this paper, initially we investigate
      the ( , ) L h k -labeling for circulant graphs with \u201clarge\u201d connection
      sets, and then we extend our observation and find the span of ( , ) L h k -labeling
      for any circulants of order n.", "venue": "", "year": 2023, "referenceCount":
      10, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": [{"authorId": "2062178", "name": "Sarbari
      Mitra"}, {"authorId": "51925926", "name": "Soumya Bhoumik"}]}, {"paperId": "dacfda09df9d7e5683ebaf9521c7f49f41ea20c8",
      "externalIds": {"DBLP": "journals/corr/abs-2309-16629", "ArXiv": "2309.16629",
      "DOI": "10.48550/arXiv.2309.16629", "CorpusId": 263132469}, "corpusId": 263132469,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/dacfda09df9d7e5683ebaf9521c7f49f41ea20c8",
      "title": "A Deterministic Almost-Linear Time Algorithm for Minimum-Cost Flow",
      "abstract": "We give a deterministic $m^{1+o(1)}$ time algorithm that computes
      exact maximum flows and minimum-cost flows on directed graphs with $m$ edges
      and polynomially bounded integral demands, costs, and capacities. As a consequence,
      we obtain the first running time improvement for deterministic algorithms that
      compute maximum-flow in graphs with polynomial bounded capacities since the
      work of Goldberg-Rao [J.ACM ''98]. Our algorithm builds on the framework of
      Chen-Kyng-Liu-Peng-Gutenberg-Sachdeva [FOCS ''22] that computes an optimal flow
      by computing a sequence of $m^{1+o(1)}$-approximate undirected minimum-ratio
      cycles. We develop a deterministic dynamic graph data-structure to compute such
      a sequence of minimum-ratio cycles in an amortized $m^{o(1)}$ time per edge
      update. Our key technical contributions are deterministic analogues of the vertex
      sparsification and edge sparsification components of the data-structure from
      Chen et al. For the vertex sparsification component, we give a method to avoid
      the randomness in Chen et al. which involved sampling random trees to recurse
      on. For the edge sparsification component, we design a deterministic algorithm
      that maintains an embedding of a dynamic graph into a sparse spanner. We also
      show how our dynamic spanner can be applied to give a deterministic data structure
      that maintains a fully dynamic low-stretch spanning tree on graphs with polynomially
      bounded edge lengths, with subpolynomial average stretch and subpolynomial amortized
      time per edge update.", "venue": "arXiv.org", "year": 2023, "referenceCount":
      86, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/2309.16629", "status": "CLOSED"},
      "fieldsOfStudy": ["Computer Science", "Mathematics"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Mathematics", "source":
      "external"}, {"category": "Computer Science", "source": "s2-fos-model"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-09-28", "journal": {"name": "ArXiv", "volume": "abs/2309.16629"},
      "authors": [{"authorId": "145549761", "name": "J. V. D. Brand"}, {"authorId":
      "152875291", "name": "L. Chen"}, {"authorId": "2989695", "name": "Rasmus Kyng"},
      {"authorId": "47909156", "name": "Y. Liu"}, {"authorId": "2247940114", "name":
      "Richard Peng"}, {"authorId": "1491009274", "name": "M. Gutenberg"}, {"authorId":
      "2274555", "name": "Sushant Sachdeva"}, {"authorId": "2357926", "name": "Aaron
      Sidford"}]}, {"paperId": "841dc12a53636e03e4540603f375128d170abef3", "externalIds":
      {"ArXiv": "2310.09033", "CorpusId": 264128170}, "corpusId": 264128170, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/841dc12a53636e03e4540603f375128d170abef3",
      "title": "On distance magic quasi wreath graphs", "abstract": "A graph of order
      $n$ is said to be distance magic if it admits a bijective labeling of its vertices
      with integers from 1 to $n$ such that each vertex has the same sum of the labels
      of its neighbors. It turns out that up to order 10 the only connected tetravalent
      distance magic graphs are the well known wreath graphs, while for each of the
      orders 12, 14 and 16 there is one additional tetravalent distance magic graph
      of that order. We introduce a generalization of wreath graphs, the so-called
      quasi wreath graphs, and classify all distance magic graphs among them. This
      way we obtain infinitely many new tetravalent distance magic graphs. Moreover,
      the two non-wreath graphs of orders 12 and 14 are quasi wreath graphs while
      the one of order 16 can be obtained from a quasi wreath graph of order 14 using
      a simple construction due to Kov\\''a\\v{r}, Fron\\v{c}ek and Kov\\''a\\v{r}ov\\''a.",
      "venue": "", "year": 2023, "referenceCount": 10, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2023-10-13", "journal": null, "authors": [{"authorId": "2258550932", "name":
      "Ksenija Rozman"}, {"authorId": "103153857", "name": "Primovz vSparl"}]}, {"paperId":
      "4460dfad0fe9a159e1c85a8a156ce3578c24447e", "externalIds": {"ArXiv": "2310.05248",
      "CorpusId": 263831495}, "corpusId": 263831495, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/4460dfad0fe9a159e1c85a8a156ce3578c24447e",
      "title": "A Hall-type condition for path covers in bipartite graphs", "abstract":
      "Let $G$ be a bipartite graph with bipartition $(X,Y)$. Inspired by a hypergraph
      problem, we seek an upper bound on the number of disjoint paths needed to cover
      all the vertices of $X$. We conjecture that a Hall-type sufficient condition
      holds based on the maximum value of $|S|-|\\mathsf\\Lambda(S)|$, where $S\\subseteq
      X$ and $\\mathsf\\Lambda(S)$ is the set of all vertices in $Y$ with at least
      two neighbors in $S$. This condition is also a necessary one for a hereditary
      version of the problem, where we delete vertices from $X$ and try to cover the
      remaining vertices by disjoint paths. The conjecture holds when $G$ is a forest,
      has maximum degree $3$, or is regular with high girth, and we prove those results
      in this paper.", "venue": "", "year": 2023, "referenceCount": 16, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Mathematics"], "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2023-10-08", "journal": null,
      "authors": [{"authorId": "144177928", "name": "Mikhail Lavrov"}, {"authorId":
      "2756335", "name": "Jennifer Vandenbussche"}]}, {"paperId": "55c58563e21b3aa5ffb69d09dd3cafc126d92265",
      "externalIds": {"CorpusId": 264495452}, "corpusId": 264495452, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/55c58563e21b3aa5ffb69d09dd3cafc126d92265",
      "title": "A Counter Example For Neighbourhood Number Less Than Edge Covering
      Number Of a Graph", "abstract": "\u2014The open neighbourhood N ( v ) of a vertex
      v \u2208 V, is the set of all vertices adjacent to v . Then N [ v ] = N ( v
      ) \u222a{ v } is called the enclave of v . We say that a vertex v \u2208 V ,
      n -covers an edge x \u2208 X if x \u2208 (cid:104) N [ v ] (cid:105) , the subgraph
      induced by the set N [ v ] . The n -covering number \u03c1 n ( G ) introduced
      by Sampathkumar and Neeralagi [18] is the minimum number of vertices needed
      to n -cover all the edges of G . In this paper one of the results proved in
      [18] is disproved by exhibiting an in\ufb01nite class of graphs as counter example.
      Further, an expression for number of triangles in any graph is established.
      In addition, the properties of clique regular graphs has been studied.", "venue":
      "", "year": null, "referenceCount": 19, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2055251310",
      "name": "S. Bhat"}, {"authorId": "2065974065", "name": "R. S. Bhat"}, {"authorId":
      "2055251619", "name": "S. G. Bhat"}, {"authorId": "70302239", "name": "S. Udupa"},
      {"authorId": "2261776698", "name": "Nagara Vinayaka"}, {"authorId": "2055251310",
      "name": "S. Bhat"}, {"authorId": "2065974065", "name": "R. S. Bhat"}, {"authorId":
      "2055251619", "name": "S. G. Bhat"}]}, {"paperId": "dbf3763b9f4ba1db85e37cfc72a3e27aa2469cde",
      "externalIds": {"CorpusId": 262134351}, "corpusId": 262134351, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/dbf3763b9f4ba1db85e37cfc72a3e27aa2469cde",
      "title": "A fully distributed scheme to turn a network into a small world",
      "abstract": "We investigate the problem of e\ufb03ciently preprocessing a large
      network, in a fully distributed manner, so that the resulting network is a navigable
      small world. Namely, if the network has bounded growth, by adding a single entry
      in a distributed manner to each routing table (using O ( n ) rounds and O (polylog
      n ) space), we obtain a network in which the greedy routing algorithm computes
      paths of polylogarithmic expected length between any pair of nodes. A bounded
      growth graph is a graph of constant expansion rate, i.e. the number of nodes
      within distance 2 r from a given node is at most a constant times the number
      of nodes within distance r . These graphs are considered as a relevant framework
      for real networks as Peer-to-peer networks where our scheme could be used to
      considerably improve the routing speed over time. We also extends our algorithm
      to graphs of polylogarithmic expansion rate. Recent small world models provide
      augmentation processes of large graph classes into navigable small worlds via
      the addition of new random links to each node. However, the computation of the
      required random links distribution kept these processes unrealistic for large
      decentralized networks. Our algorithm, based on a careful sampling of a set
      of leader nodes, bypasses these limitations.", "venue": "", "year": 2006, "referenceCount":
      21, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      null, "journal": null, "authors": [{"authorId": "3047028", "name": "Philippe
      Duchon"}, {"authorId": "1750406", "name": "N. Hanusse"}, {"authorId": "2704707",
      "name": "E. Lebhar"}, {"authorId": "2243998645", "name": "Nicolas Schabanel
      Janvier"}]}, {"paperId": "371fb44ef6443ecbd9810b40cedbb93de20caf90", "externalIds":
      {"DBLP": "conf/ecai/TanB23", "DOI": "10.3233/FAIA230531", "CorpusId": 264290160},
      "corpusId": 264290160, "publicationVenue": "5aca6456-76d5-4208-84d8-a6b60228b52b",
      "url": "https://www.semanticscholar.org/paper/371fb44ef6443ecbd9810b40cedbb93de20caf90",
      "title": "Intractability of Optimal Multi-Agent Pathfinding on Directed Graphs",
      "abstract": ". In Multi-Agent Pathfinding ( MAPF ) problems, multiple agents
      move simultaneously to reach their individual destinations without colliding
      with each other. The computational complexity of the problem has been extensively
      studied for undirected graphs over the past decades. However, plan existence
      for Directed MAPF ( diMAPF ) was only recently studied and was shown to be in
      PSPACE as well as NP-hard. In this paper, we study the optimization versions
      (on makespan and on travel distance of agents) of diMAPF problems and show that
      they remain NP-hard even when various important non-trivial restrictions are
      imposed (e.g., when considering the problem on directed, acyclic, and planar
      graphs where the vertex-degrees are bounded). We have also provide membership
      results, thus presenting the first set of NP-completeness results for various
      optimal diMAPF variants.", "venue": "European Conference on Artificial Intelligence",
      "year": 2023, "referenceCount": 28, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": true, "openAccessPdf": {"url": "https://ebooks.iospress.nl/pdf/doi/10.3233/FAIA230531",
      "status": "HYBRID"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
      "Conference"], "publicationDate": null, "journal": {"pages": "2315-2321"}, "authors":
      [{"authorId": "2259979956", "name": "Xing Tan"}, {"authorId": "2259964617",
      "name": "Pascal Bercher"}]}, {"paperId": "30f789f2b60af0ea595c5aed316b095f6f38ebe2",
      "externalIds": {"DBLP": "journals/corr/abs-2310-18518", "ArXiv": "2310.18518",
      "DOI": "10.48550/arXiv.2310.18518", "CorpusId": 264590666}, "corpusId": 264590666,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/30f789f2b60af0ea595c5aed316b095f6f38ebe2",
      "title": "Reconfiguration of plane trees in convex geometric graphs", "abstract":
      "A non-crossing spanning tree of a set of points in the plane is a spanning
      tree whose edges pairwise do not cross. Avis and Fukuda in 1996 proved that
      there always exists a flip sequence of length at most $2n-4$ between any pair
      of non-crossing spanning trees (where $n$ denotes the number of points). Hernando
      et al. proved that the length of a minimal flip sequence can be of length at
      least $\\frac 32 n$. Two recent results of Aichholzer et al. and Bousquet et
      al. improved the Avis and Fukuda upper bound by proving that there always exists
      a flip sequence of length respectively at most $2n - \\log n$ and $2n - \\sqrt{n}$.
      We improve the upper bound by a linear factor for the first time in 25 years
      by proving that there always exists a flip sequence between any pair of non-crossing
      spanning trees $T_1,T_2$ of length at most $c n$ where $c \\approx 1.95$. Our
      result is actually stronger since we prove that, for any two trees $T_1,T_2$,
      there exists a flip sequence from $T_1$ to $T_2$ of length at most $c |T_1 \\setminus
      T_2|$. We also improve the best lower bound in terms of the symmetric difference
      by proving that there exists a pair of trees $T_1,T_2$ such that a minimal flip
      sequence has length $\\frac 53 |T_1 \\setminus T_2|$, improving the lower bound
      of Hernando et al. by considering the symmetric difference instead of the number
      of vertices. We generalize this lower bound construction to non-crossing flips
      (where we close the gap between upper and lower bounds) and rotations.", "venue":
      "arXiv.org", "year": 2023, "referenceCount": 18, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-10-27", "journal": {"name": "ArXiv",
      "volume": "abs/2310.18518"}, "authors": [{"authorId": "2262446813", "name":
      "Nicolas Bousquet"}, {"authorId": "2211905353", "name": "Lucas de Meyer"}, {"authorId":
      "103112769", "name": "Th\u00e9o Pierron"}, {"authorId": "1381115284", "name":
      "Alexandra Wesolek"}]}, {"paperId": "9e59ab87d4a465d341ab3cff6786ac7e98c92d58",
      "externalIds": {"ArXiv": "2310.07350", "DBLP": "journals/corr/abs-2310-07350",
      "DOI": "10.48550/arXiv.2310.07350", "CorpusId": 263835200}, "corpusId": 263835200,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/9e59ab87d4a465d341ab3cff6786ac7e98c92d58",
      "title": "Choosing optimal parameters for a distributed multi-constrained QoS
      routing", "abstract": "We consider several basic questions on distributed routing
      in directed graphs with multiple additive costs, or metrics, and multiple constraints.
      Distributed routing in this sense is used in several protocols, such as IS-IS
      and OSPF. A practical approach to the multi-constraint routing problem is to,
      first, combine the metrics into a single `composite'' metric, and then apply
      one-to-all shortest path algorithms, e.g. Dijkstra, in order to find shortest
      path trees. We show that, in general, even if a feasible path exists and is
      known for every source and destination pair, it is impossible to guarantee a
      distributed routing under several constraints. We also study the question of
      choosing the optimal `composite'' metric. We show that under certain mathematical
      assumptions we can efficiently find a convex combination of several metrics
      that maximizes the number of discovered feasible paths. Sometimes it can be
      done analytically, and is in general possible using what we call a ''smart iterative
      approach''. We illustrate these findings by extensive experiments on several
      typical network topologies.", "venue": "arXiv.org", "year": 2023, "referenceCount":
      20, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
      "openAccessPdf": {"url": "https://arxiv.org/pdf/2310.07350", "status": "CLOSED"},
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Computer Science", "source":
      "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-11", "journal": {"name": "ArXiv", "volume": "abs/2310.07350"}, "authors":
      [{"authorId": "2257039101", "name": "Sergey Komech"}, {"authorId": "2257040187",
      "name": "Andrey Kupavskii"}, {"authorId": "2257041768", "name": "Alexei Vezolainen"}]},
      {"paperId": "0341039b666f2c3448d15ffbd89fd31f4d02a59b", "externalIds": {"CorpusId":
      264132663}, "corpusId": 264132663, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/0341039b666f2c3448d15ffbd89fd31f4d02a59b",
      "title": "University of Birmingham The multicolour size-Ramsey number of powers
      of paths", "abstract": ". Given a positive integer s , a graph G is s -Ramsey
      for a graph H , denoted G \u00d1 p H q s , if every s -colouring of the edges
      of G contains a monochromatic copy of H . The s -colour size-Ramsey number \u02c6
      r s p H q of a graph H is de\ufb01ned to be \u02c6 r s p H q \u201c min t| E
      p G q| : G \u00d1 p H q s u . We prove that, for all positive integers k and
      s , we have \u02c6 r s p P kn q \u201c O p n q , where P kn is the k th power
      of the n -vertex path P n .", "venue": "", "year": 2018, "referenceCount": 28,
      "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
      null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
      "journal": null, "authors": [{"authorId": "2258673537", "name": "Jie Han"},
      {"authorId": "2559855", "name": "Matthew Jenssen"}, {"authorId": "2258586266",
      "name": "Guilherme YOSHIHARU KOHAYAKAWA"}, {"authorId": "2258587640", "name":
      "Oliveira Mota"}, {"authorId": "37996213", "name": "Barnaby Roberts"}]}, {"paperId":
      "80dde5a9d9d437c40a0e93ce05fb47c67cff0a28", "externalIds": {"DBLP": "journals/corr/abs-2310-05839",
      "ArXiv": "2310.05839", "DOI": "10.48550/arXiv.2310.05839", "CorpusId": 263830617},
      "corpusId": 263830617, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/80dde5a9d9d437c40a0e93ce05fb47c67cff0a28",
      "title": "Directed Symmetric Multicut is W[1]-hard", "abstract": "Given a directed
      graph $G$ and a set of vertex pairs $\\{(s_1,t_1), \\dots, (s_m, t_m)\\}$, the
      Directed Symmetric Multicut problem asks to delete the minimum number of edges
      from $G$ to separate every pair $(s_i, t_i)$ into distinct strong components.
      Eiben, Rambaud and Wahlstr\\\"om [IPEC 2022] initiated the study of this problem
      parameterized by the solution size. They gave a fixed-parameter tractable 2-approximation
      algorithm, and left the exact parameterized complexity status as an open question.
      We answer their question in negative, showing that Directed Symmetric Multicut
      is W[1]-hard.", "venue": "arXiv.org", "year": 2023, "referenceCount": 12, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
      "https://arxiv.org/pdf/2310.05839", "status": "CLOSED"}, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-10-09", "journal": {"name": "ArXiv", "volume": "abs/2310.05839"}, "authors":
      [{"authorId": "2257001088", "name": "George Osipov"}, {"authorId": "2257000501",
      "name": "Marcin Pilipczuk"}]}, {"paperId": "04bbe473a7885e603441c20daf4b3296a43967a5",
      "externalIds": {"ArXiv": "2311.03225", "DBLP": "journals/corr/abs-2311-03225",
      "DOI": "10.48550/arXiv.2311.03225", "CorpusId": 265033442}, "corpusId": 265033442,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/04bbe473a7885e603441c20daf4b3296a43967a5",
      "title": "Dichotomies for Tree Minor Containment with Structural Parameters",
      "abstract": "The problem of determining whether a graph $G$ contains another
      graph $H$ as a minor, referred to as the minor containment problem, is a fundamental
      problem in the field of graph algorithms. While it is NP-complete when $G$ and
      $H$ are general graphs, it is sometimes tractable on more restricted graph classes.
      This study focuses on the case where both $G$ and $H$ are trees, known as the
      tree minor containment problem. Even in this case, the problem is known to be
      NP-complete. In contrast, polynomial-time algorithms are known for the case
      when both trees are caterpillars or when the maximum degree of $H$ is a constant.
      Our research aims to clarify the boundary of tractability and intractability
      for the tree minor containment problem. Specifically, we provide dichotomies
      for the computational complexities of the problem based on three structural
      parameters: the diameter, pathwidth, and path eccentricity.", "venue": "arXiv.org",
      "year": 2023, "referenceCount": 20, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
      Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
      "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
      "2023-11-06", "journal": {"name": "ArXiv", "volume": "abs/2311.03225"}, "authors":
      [{"authorId": "2097465499", "name": "Tatsuya Gima"}, {"authorId": "51115043",
      "name": "Soh Kumabe"}, {"authorId": "2265491211", "name": "Kazuhiro Kurita"},
      {"authorId": "2187057737", "name": "Yuto Okada"}, {"authorId": "2689016", "name":
      "Y. Otachi"}]}, {"paperId": "46240cb1496eec95391c7c9597494e2790942471", "externalIds":
      {"CorpusId": 263708549}, "corpusId": 263708549, "publicationVenue": null, "url":
      "https://www.semanticscholar.org/paper/46240cb1496eec95391c7c9597494e2790942471",
      "title": "The Erd\ufb01s-Ko-Rado properties of various graphs containing singletons",
      "abstract": "Let G = ( V, E ) be a graph. For r \u2265 1 , let I ( r ) G be
      the family of independent vertex r -sets of G . For v \u2208 V ( G ) , let I
      ( r ) G ( v ) denote the star { A \u2208 I ( r ) G : v \u2208 A } . G is said
      to be r-EKR if there exists v \u2208 V ( G ) such that |A| \u2264 |I ( r ) G
      ( v ) | for any non-star family A of pair-wise intersecting sets in I ( r )
      G . If the inequality is strict, then G is strictly r -EKR . Let \u0393 be the
      family of graphs that are disjoint unions of complete graphs, paths, cycles,
      including at least one singleton. Holroyd, Spencer and Talbot proved that, if
      G \u2208 \u0393 and 2 r is no larger than the number of connected components
      of G , then G is r -EKR. However, Holroyd and Talbot conjectured that, if G
      is any graph and 2 r is no larger than \u00b5 ( G ) , the size of a smallest
      maximal independent vertex set of G , then G is r -EKR, and strictly so if 2
      r < \u00b5 ( G ) . We show that in fact, if G \u2208 \u0393 and 2 r is no larger
      than the independence number of G , then G is r -EKR; we do this by proving
      the result for all graphs that are in a suitable larger set \u0393 0 ) \u0393
      . We also con(cid:28)rm the conjecture for graphs in an even larger set \u0393
      00 ) \u0393 0 .", "venue": "", "year": 2010, "referenceCount": 23, "citationCount":
      0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Mathematics", "source":
      "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
      null, "authors": [{"authorId": "2239453977", "name": "Peter Borg"}, {"authorId":
      "2642349", "name": "F. Holroyd"}]}, {"paperId": "1f60e333b2d69c3d7df5ea84d2b8b74d719f8bc4",
      "externalIds": {"CorpusId": 264042912}, "corpusId": 264042912, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/1f60e333b2d69c3d7df5ea84d2b8b74d719f8bc4",
      "title": "An Algorithmic Approach to Determining Spectra of Orders of ( \ud835\udc58,
      \ud835\udc54 ) -Graphs", "abstract": "A ( \ud835\udc58,\ud835\udc54 ) - graph
      \u0393 , \ud835\udc58 \u2265 2 ,\ud835\udc54 \u2265 3 , is \ud835\udc58 -regular
      of girth \ud835\udc54 . We refer to the complete set of possible orders of connected
      ( \ud835\udc58,\ud835\udc54 ) -graphs for each pair of parameters ( \ud835\udc58,\ud835\udc54
      ) as the spectrum of orders of ( \ud835\udc58,\ud835\udc54 ) -graphs ; or the
      ( \ud835\udc58,\ud835\udc54 ) -spectrum . The smallest member of the ( \ud835\udc58,\ud835\udc54
      ) -spectrum is the order \ud835\udc5b ( \ud835\udc58,\ud835\udc54 ) of a smallest
      ( \ud835\udc58,\ud835\udc54 ) -graph; called a ( \ud835\udc58,\ud835\udc54 )
      -cage . Determining the complete spectrum of orders of connected ( \ud835\udc58,\ud835\udc54
      ) -graphs for a specific pair ( \ud835\udc58,\ud835\udc54 ) is extremely difficult
      as it requires (among other things) determining the cage order \ud835\udc5b
      ( \ud835\udc58,\ud835\udc54 ) , which is a notoriously hard problem. This paper
      provides an algorithmic approach for producing ( \ud835\udc58,\ud835\udc54 )
      -graphs of larger orders from smaller ( \ud835\udc58,\ud835\udc54 ) -graphs
      in a manner allowing for repeated applications. We use this approach to determine/estimate
      the smallest member \ud835\udc41 ( \ud835\udc58,\ud835\udc54 ) of a ( \ud835\udc58,\ud835\udc54
      ) -spectrum having the property that starting from \ud835\udc41 ( \ud835\udc58,\ud835\udc54
      ) all (even; in case of odd \ud835\udc58 ) \ud835\udc5b \u2265 \ud835\udc41
      ( \ud835\udc58,\ud835\udc54 ) belong to the ( \ud835\udc58,\ud835\udc54 ) -spectrum;
      i.e., for all (even) \ud835\udc5b \u2265 \ud835\udc41 ( \ud835\udc58,\ud835\udc54
      ) , there exists a ( \ud835\udc58,\ud835\udc54 ) -graph of order \ud835\udc5b
      .", "venue": "", "year": 2023, "referenceCount": 4, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2187830691",
      "name": "L. C. Eze"}, {"authorId": "3310316", "name": "R. Jajcay"}, {"authorId":
      "2257977677", "name": "Dominika Mih\u00e1lov\u00e1"}]}, {"paperId": "8ff7716dd4d73ec9c2a1a7912650d950548d6b61",
      "externalIds": {"ArXiv": "2310.12051", "DBLP": "journals/corr/abs-2310-12051",
      "DOI": "10.48550/arXiv.2310.12051", "CorpusId": 264289210}, "corpusId": 264289210,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/8ff7716dd4d73ec9c2a1a7912650d950548d6b61",
      "title": "Simpler and Higher Lower Bounds for Shortcut Sets", "abstract": "We
      provide a variety of lower bounds for the well-known shortcut set problem: how
      much can one decrease the diameter of a directed graph on $n$ vertices and $m$
      edges by adding $O(n)$ or $O(m)$ of shortcuts from the transitive closure of
      the graph. Our results are based on a vast simplification of the recent construction
      of Bodwin and Hoppenworth [FOCS 2023] which was used to show an $\\widetilde{\\Omega}(n^{1/4})$
      lower bound for the $O(n)$-sized shortcut set problem. We highlight that our
      simplification completely removes the use of the convex sets by B\\''ar\\''any
      and Larman [Math. Ann. 1998] used in all previous lower bound constructions.
      Our simplification also removes the need for randomness and further removes
      some log factors. This allows us to generalize the construction to higher dimensions,
      which in turn can be used to show the following results. For $O(m)$-sized shortcut
      sets, we show an $\\Omega(n^{1/5})$ lower bound, improving on the previous best
      $\\Omega(n^{1/8})$ lower bound. For all $\\varepsilon>0$, we show that there
      exists a $\\delta>0$ such that there are $n$-vertex $O(n)$-edge graphs $G$ where
      adding any shortcut set of size $O(n^{2-\\varepsilon})$ keeps the diameter of
      $G$ at $\\Omega(n^\\delta)$. This improves the sparsity of the constructed graph
      compared to a known similar result by Hesse [SODA 2003]. We also consider the
      sourcewise setting for shortcut sets: given a graph $G=(V,E)$, a set $S\\subseteq
      V$, how much can we decrease the sourcewise diameter of $G$, $\\max_{(s, v)
      \\in S \\times V, \\text{dist}(s, v)<\\infty} \\text{dist}(s,v)$ by adding a
      set of edges $H$ from the transitive closure of $G$? We show that for any integer
      $d \\ge 2$, there exists a graph $G=(V, E)$ on $n$ vertices and $S \\subseteq
      V$ with $|S| = \\widetilde{\\Theta}(n^{3/(d+3)})$, such that when adding $O(n)$
      or $O(m)$ shortcuts, the sourcewise diameter is $\\widetilde{\\Omega}(|S|^{1/3})$.",
      "venue": "arXiv.org", "year": 2023, "referenceCount": 0, "citationCount": 0,
      "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
      "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
      Science", "source": "external"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-18", "journal":
      {"name": "ArXiv", "volume": "abs/2310.12051"}, "authors": [{"authorId": "2259957386",
      "name": "Virginia Vassilevska Williams"}, {"authorId": "10032840", "name": "Yinzhan
      Xu"}, {"authorId": "2259965987", "name": "Zixuan Xu"}]}, {"paperId": "253c6ad873119a8b910be2513798bfef694afc16",
      "externalIds": {"CorpusId": 264376214}, "corpusId": 264376214, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/253c6ad873119a8b910be2513798bfef694afc16",
      "title": "\u0394 -coloring", "abstract": "We present a randomized distributed
      algorithm that computes a (cid:2) -coloring in any non-complete graph with maximum
      degree (cid:2) \u2265 4 in O ( log (cid:2)) + 2 O ( \u221a loglog n ) rounds,
      as well as a randomized algorithm that computes a (cid:2) -coloring in O ((
      log log n ) 2 ) rounds when (cid:2) \u2208 [ 3 , O ( 1 ) ] . Both these algorithms
      improve on an O ( log 3 n / log (cid:2)) -round algorithm of Panconesi and Srinivasan
      (STOC\u201993), which has remained the state of the art for the past 25years.
      Moreover, the latter algorithm gets (exponentially) closer to an (cid:3)( log
      log n ) round lower bound of Brandt et al. (STOC\u201916).", "venue": "", "year":
      null, "referenceCount": 43, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2260810098",
      "name": "Mohsen Gha\ufb00ari"}, {"authorId": "2074844153", "name": "Juho Hirvonen"},
      {"authorId": "2138064874", "name": "F. Kuhn"}, {"authorId": "2957419", "name":
      "Yannic Maus"}]}, {"paperId": "3c04d73772eb4c83d60e11fc63b93d9b422035ef", "externalIds":
      {"ArXiv": "2311.04865", "CorpusId": 265050499}, "corpusId": 265050499, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/3c04d73772eb4c83d60e11fc63b93d9b422035ef",
      "title": "Computing the $5$-Edge-Connected Components in Linear Time", "abstract":
      "We provide a deterministic algorithm for computing the $5$-edge-connected components
      of an undirected multigraph in linear time. There were probably good indications
      that this computation can be performed in linear time, but no such algorithm
      was actually known prior to this work. Thus, our paper answers a theoretical
      question, and sheds light on the possibility that a solution may exist for general
      $k$. A key component in our algorithm is an oracle for answering connectivity
      queries for pairs of vertices in the presence of at most four edge-failures.
      Specifically, the oracle has size $O(n)$, it can be constructed in linear time,
      and it answers connectivity queries in the presence of at most four edge-failures
      in worst-case constant time, where $n$ denotes the number of vertices of the
      graph. We note that this is a result of independent interest. Our paper can
      be considered as a follow-up of recent work on computing the $4$-edge-connected
      components in linear time. However, in dealing with the computation of the $5$-edge-connected
      components, we are faced with unique challenges that do not appear when dealing
      with lower connectivity. The problem is that the $4$-edge cuts in $3$-edge-connected
      graphs are entangled in various complicated ways, that make it difficult to
      organize them in a compact way. Here we provide a novel analysis of those cuts,
      that reveals the existence of various interesting structures. These can be exploited
      so that we can disentangle and collect only those cuts that are essential in
      computing the $5$-edge-connected components. This analysis may provide a clue
      for a general solution for the $k$-edge-connected components, or other related
      graph connectivity problems.", "venue": "", "year": 2023, "referenceCount":
      0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": null, "publicationDate": "2023-11-08", "journal": null,
      "authors": [{"authorId": "1799420373", "name": "E. Kosinas"}]}, {"paperId":
      "7627001b04cada6b7e878b8d6061a66d63bcba2a", "externalIds": {"DBLP": "journals/corr/abs-2310-08243",
      "ArXiv": "2310.08243", "DOI": "10.48550/arXiv.2310.08243", "CorpusId": 263909540},
      "corpusId": 263909540, "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10",
      "url": "https://www.semanticscholar.org/paper/7627001b04cada6b7e878b8d6061a66d63bcba2a",
      "title": "Computing Twin-Width Parameterized by the Feedback Edge Number", "abstract":
      "The problem of whether and how one can compute the twin-width of a graph --
      along with an accompanying contraction sequence -- lies at the forefront of
      the area of algorithmic model theory. While significant effort has been aimed
      at obtaining a fixed-parameter approximation for the problem when parameterized
      by twin-width, here we approach the question from a different perspective and
      consider whether one can obtain (near-)optimal contraction sequences under a
      larger parameterization, notably the feedback edge number $k$. As our main contributions,
      under this parameterization we obtain (1) a linear bikernel for the problem
      of either computing a $2$-contraction sequence or determining that none exists
      and (2) an approximate fixed-parameter algorithm which computes an $\\ell$-contraction
      sequence (for an arbitrary specified $\\ell$) or determines that the twin-width
      of the input graph is at least $\\ell$. These algorithmic results rely on newly
      obtained insights into the structure of optimal contraction sequences, and as
      a byproduct of these we also slightly tighten the bound on the twin-width of
      graphs with small feedback edge number.", "venue": "arXiv.org", "year": 2023,
      "referenceCount": 36, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      true, "openAccessPdf": {"url": "https://arxiv.org/pdf/2310.08243", "status":
      "CLOSED"}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
      "Computer Science", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-12", "journal":
      {"name": "ArXiv", "volume": "abs/2310.08243"}, "authors": [{"authorId": "2257348672",
      "name": "Jakub Balab''an"}, {"authorId": "3050679", "name": "R. Ganian"}, {"authorId":
      "2151794831", "name": "Mathis Rocton"}]}, {"paperId": "6f59d3f637f930e4ceb226335817f17109aad5c9",
      "externalIds": {"DBLP": "journals/corr/abs-2310-15152", "ArXiv": "2310.15152",
      "DOI": "10.48550/arXiv.2310.15152", "CorpusId": 264436505}, "corpusId": 264436505,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/6f59d3f637f930e4ceb226335817f17109aad5c9",
      "title": "Sampling Balanced Forests of Grids in Polynomial Time", "abstract":
      "We prove that a polynomial fraction of the set of $k$-component forests in
      the $m \\times n$ grid graph have equal numbers of vertices in each component.
      This resolves a conjecture of Charikar, Liu, Liu, and Vuong. It also establishes
      the first provably polynomial-time algorithm for (exactly or approximately)
      sampling balanced grid graph partitions according to the spanning tree distribution,
      which weights each $k$-partition according to the product, across its $k$ pieces,
      of the number of spanning trees of each piece. Our result has applications to
      understanding political districtings, where there is an underlying graph of
      indivisible geographic units that must be partitioned into $k$ population-balanced
      connected subgraphs. In this setting, tree-weighted partitions have interesting
      geometric properties, and this has stimulated significant effort to develop
      methods to sample them.", "venue": "arXiv.org", "year": 2023, "referenceCount":
      29, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
      "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Mathematics"],
      "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
      {"category": "Mathematics", "source": "external"}, {"category": "Computer Science",
      "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-23", "journal":
      {"name": "ArXiv", "volume": "abs/2310.15152"}, "authors": [{"authorId": "2261363027",
      "name": "Sarah Cannon"}, {"authorId": "2261362737", "name": "Wesley Pegden"},
      {"authorId": "2261362639", "name": "Jamie Tucker-Foltz"}]}, {"paperId": "c4a3862fbeee131296298c47342a90bd15b74c39",
      "externalIds": {"DOI": "10.5614/ejgta.2023.11.2.4", "CorpusId": 264895820},
      "corpusId": 264895820, "publicationVenue": "e8d05569-ee3c-416e-88fa-8ee27bedfe78",
      "url": "https://www.semanticscholar.org/paper/c4a3862fbeee131296298c47342a90bd15b74c39",
      "title": "On balance and consistency preserving 2-path signed graphs", "abstract":
      "Let \u03a3 = ( G, \u03c3 ) be a balanced and canonically consistent signed
      graph. The 2-path signed graph \u03a3#\u03a3 = ( G 2 , \u03c3 \u2032 ) of \u03a3
      has the underlying graph as G 2 and the sign \u03c3 \u2032 ( uv ) of an edge
      uv in it is \u2212 1 whenever in each uv -path of length 2 in \u03a3 all edges
      are negative; otherwise \u03c3 \u2032 ( uv ) is 1 . Here, G 2 is the graph obtained
      from G by adding an edge between u and v if there is a path of length 2 between
      them. In this article, we have investigated balancedness and canonically consistency
      of 2-path signed graphs \u03a3#\u03a3 of a balanced and canonically consistent
      signed graph \u03a3 . The problem has been resolved completely for cycles, star
      graphs and trees.", "venue": "Electronic Journal of Graph Theory and Applications",
      "year": 2023, "referenceCount": 26, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      ["JournalArticle"], "publicationDate": "2023-10-24", "journal": {"name": "Electronic
      Journal of Graph Theory and Applications"}, "authors": [{"authorId": "2222354745",
      "name": "Kshittiz Chettri"}, {"authorId": "2264715171", "name": "Biswajit Deb"},
      {"authorId": "2263878340", "name": "Anjan Gautam"}]}, {"paperId": "30b14435c1dce5f8d39854627b03320dbbdfa4f9",
      "externalIds": {"ArXiv": "2310.12096", "DBLP": "journals/corr/abs-2310-12096",
      "DOI": "10.48550/arXiv.2310.12096", "CorpusId": 264288858}, "corpusId": 264288858,
      "publicationVenue": "1901e811-ee72-4b20-8f7e-de08cd395a10", "url": "https://www.semanticscholar.org/paper/30b14435c1dce5f8d39854627b03320dbbdfa4f9",
      "title": "Vital Edges for (s, t)-mincut: Efficient Algorithms, Compact Structures,
      and Optimal Sensitivity Oracle", "abstract": "Let G be a directed weighted graph
      (DiGraph) on n vertices and m edges with source s and sink t. An edge in G is
      vital if its removal reduces the capacity of (s,t)-mincut. Since the seminal
      work of Ford and Fulkerson, a long line of work has been done on computing the
      most vital edge and all vital edges of G. Unfortunately, after 60 years, the
      existing results are for undirected or unweighted graphs. We present the following
      result for DiGraph, which solves an open problem stated by Ausiello et al. 1.
      There is an algorithm that computes all vital edges as well as the most vital
      edge of G using O(n) maxflow computations. Vital edges play a crucial role in
      the design of Sensitivity Oracle (SO) for (s,t)-mincut. For directed graphs,
      the only existing SO is for unweighted graphs by Picard and Queyranne. We present
      the first and optimal SO for DiGraph. 2. (a) There is an O(n) space SO that
      can report in O(1) time the capacity of (s,t)-mincut and (b) an O($n^2$) space
      SO that can report an (s,t)-mincut in O(n) time after failure/insertion of an
      edge. For unweighted graphs, Picard and Queyranne designed an O(m) space DAG
      that stores and characterizes all mincuts for all vital edges. Conversely, there
      is a set containing at most n-1 (s,t)-cuts such that at least one mincut for
      every vital edge belongs to the set. We generalize these results for DiGraph.
      3. (a) There is a set containing at most n-1 (s,t)-cuts such that at least one
      mincut for every vital edge is present in the set. (b) We design two compact
      structures for storing and characterizing all mincuts for all vital edges, (i)
      O(m) space DAG for partial characterization and (ii) O(mn) space structure for
      complete characterization. To arrive at our results, we develop new techniques,
      especially a generalization of maxflow-mincut theorem by Ford and Fulkerson,
      which might be of independent interest.", "venue": "arXiv.org", "year": 2023,
      "referenceCount": 0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
      false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "external"}, {"category": "Computer
      Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source": "s2-fos-model"}],
      "publicationTypes": ["JournalArticle"], "publicationDate": "2023-10-18", "journal":
      {"name": "ArXiv", "volume": "abs/2310.12096"}, "authors": [{"authorId": "1748594",
      "name": "Surender Baswana"}, {"authorId": "2173928959", "name": "Koustav Bhanja"}]},
      {"paperId": "cb3abe0515adfc7ea67601ac21e0206d7cae02b7", "externalIds": {"CorpusId":
      263772255}, "corpusId": 263772255, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/cb3abe0515adfc7ea67601ac21e0206d7cae02b7",
      "title": "Locally Checkable Labeling Problems in Rooted Trees in the Online-LOCAL
      Model of Computation", "abstract": "There are many ways to classify algorithms.
      Online algorithms, for example, are algorithms that have to be able to handle
      input one element at a time. Offline algorithms, on the other hand, have access
      to the whole input. In the case of online graph algorithms, the structure of
      the underlying graph is fixed. The graph is revealed to the algorithm one node
      at a time. When a node is revealed, the algorithm has to decide its output for
      that node, and it cannot change its decision later. Another way to classify
      algorithms is to divide them into centralized and distributed algorithms. In
      the case of graph algorithms, a centralized algorithm is a completely separate
      entity from the graph. When the nodes (or edges) of the graph are active parties
      in the execution of the algorithm, the algorithm is called a distributed algorithm.
      One commonly used model of distributed computation is the LOCAL model. In the
      LOCAL model, all nodes are computing their own part of the result in parallel.
      The nodes only see their own local neighborhood and need to base their decision
      only on this local view. In this thesis, I introduce the online-LOCAL model,
      which combines the power of online graph algorithms and LOCAL algorithms. Like
      online graph algorithms, online-LOCAL algorithms need to react to nodes being
      revealed one at a time. Unlike online graph algorithms, online-LOCAL algorithms
      also get to see the local neighborhood around the nodes before needing to make
      their decisions. The online-LOCAL model is a very strong model of computation.
      In general, there are problems that are trivial in the online-LOCAL model, but
      difficult to solve with online graph algorithms and LOCAL algorithms. In this
      thesis, I restrict my attention to the class of problems known as locally checkable
      labeling problems. These are a broad class of problems for which a solution
      is valid if it looks valid in all local neighborhoods. In particular, I show
      that for locally checkable labeling problems in rooted regular trees, the online-LOCAL
      model is approximately as powerful as the LOCAL model.", "venue": "", "year":
      2022, "referenceCount": 25, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2256455131",
      "name": "Henrik Lievonen"}]}, {"paperId": "73199c38a3676393356fa4c3a188b8debc5f6c0a",
      "externalIds": {"CorpusId": 264176282}, "corpusId": 264176282, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/73199c38a3676393356fa4c3a188b8debc5f6c0a",
      "title": "Theory and Applications of Graphs Theory and Applications of Graphs",
      "abstract": "Let \u03bb ( G ) denote the smallest number of vertices that can
      be removed from a non-empty graph G so that the resulting graph has a smaller
      maximum degree. In a recent paper, we proved that if n is the number of vertices
      of G , k is the maximum degree of G , and t is the number of vertices of degree
      k , then \u03bb ( G ) \u2264 n +( k \u2212 1) t 2 k . We also showed that \u03bb
      ( G ) \u2264 nk +1 if G is a tree. In this paper, we provide a new proof of
      the \ufb01rst bound and use it to determine the graphs that attain the bound,
      and we also determine the trees that attain the second bound.", "venue": "",
      "year": 2023, "referenceCount": 14, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2259127903",
      "name": "Peter Borg"}]}, {"paperId": "be90b968295c60de4149b04ef8bd1d6df1f041ce",
      "externalIds": {"DOI": "10.15379/ijmst.v10i1.2988", "CorpusId": 265014799},
      "corpusId": 265014799, "publicationVenue": "23007714-247e-429d-a0a9-997eccb67f49",
      "url": "https://www.semanticscholar.org/paper/be90b968295c60de4149b04ef8bd1d6df1f041ce",
      "title": "Regular Restrained Domination in Middle Graph", "abstract": "In this
      paper, we introduce the new concept called regular restrained domination in
      middle graph.A set S ? V[M(G)] is a restrained dominating set if every vertex
      in V-S is adjacent to a vertex in S and another vertex in V-S. Note that every
      graph has a restrained dominating set, since S=V is such a set. Let \u00a0?rr[M(G)]
      denote the size of a smallest restrained dominating set. Also we study the graph
      theoretic properties of ?rr[M(G)] and many bounds were obtained in terms of
      elements of G and its relationships with other domination parameters were found.",
      "venue": "International Journal of Membrane Science and Technology", "year":
      2023, "referenceCount": 8, "citationCount": 0, "influentialCitationCount": 0,
      "isOpenAccess": true, "openAccessPdf": {"url": "https://cosmosscholars.com/phms/index.php/ijmst/article/download/2988/1936",
      "status": "BRONZE"}, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
      "publicationDate": "2023-11-01", "journal": {"name": "International Journal
      of Membrane Science and Technology"}, "authors": [{"authorId": "100749035",
      "name": "M. H. Muddebihal"}, {"authorId": "2265332092", "name": "Shobha Mahadevappa"}]},
      {"paperId": "6b1ca3b5a16666845696f71c127f85788bb9445f", "externalIds": {"ArXiv":
      "2310.18202", "CorpusId": 264555692}, "corpusId": 264555692, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/6b1ca3b5a16666845696f71c127f85788bb9445f",
      "title": "Abundance: Asymmetric Graph Removal Lemmas and Integer Solutions to
      Linear Equations", "abstract": "We prove that a large family of pairs of graphs
      satisfy a polynomial dependence in asymmetric graph removal lemmas. In particular,
      we give an unexpected answer to a question of Gishboliner, Shapira, and Wigderson
      by showing that for every $t \\geqslant 4$, there are $K_t$-abundant graphs
      of chromatic number $t$. Using similar methods, we also extend work of Ruzsa
      by proving that a set $\\mathcal{A} \\subset \\{1,\\dots,N\\}$ which avoids
      solutions with distinct integers to an equation of genus at least two has size
      $\\mathcal{O}(\\sqrt{N})$. The best previous bound was $N^{1 - o(1)}$ and the
      exponent of $1/2$ is best possible in such a result. Finally, we investigate
      the relationship between polynomial dependencies in asymmetric removal lemmas
      and the problem of avoiding integer solutions to equations. The results suggest
      a potentially deep correspondence. Many open questions remain.", "venue": "",
      "year": 2023, "referenceCount": 26, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Mathematics"],
      "s2FieldsOfStudy": [{"category": "Mathematics", "source": "external"}, {"category":
      "Mathematics", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
      "2023-10-27", "journal": null, "authors": [{"authorId": "102483775", "name":
      "Ant\u00f3nio Gir\u00e3o"}, {"authorId": "2058668781", "name": "Eoin Hurley"},
      {"authorId": "1469113013", "name": "Freddie Illingworth"}, {"authorId": "2202694816",
      "name": "L. Michel"}]}, {"paperId": "6704702025e900701da7bda4d8eb390e7cec5021",
      "externalIds": {"CorpusId": 263308350}, "corpusId": 263308350, "publicationVenue":
      null, "url": "https://www.semanticscholar.org/paper/6704702025e900701da7bda4d8eb390e7cec5021",
      "title": "CHARACTERIZATION OF THE GRAPHS WITH", "abstract": "The intersection
      graph of a family 8TI of sets has the sets in %\u2019 as vertices and an edge
      between two sets iff they have nonempty intersection. Following Roberts [4]
      the boxicity b(G) of a graph G is defined as the smallest d such that G is the
      intersection graph of boxes in Euclidean d-space, i.e. parallelepipeds with
      edges parallel to the coordinate axes. In this paper we will give a combinatorial
      characterization of the graphs with b(G)s2, called boxicity 2-graphs, by means
      of the arrangement of zeros and ones in special matrices attached to the graph.",
      "venue": "", "year": 2001, "referenceCount": 4, "citationCount": 0, "influentialCitationCount":
      0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
      [{"category": "Mathematics", "source": "s2-fos-model"}], "publicationTypes":
      null, "publicationDate": null, "journal": null, "authors": [{"authorId": "2249220800",
      "name": "Martin"}, {"authorId": "2249522063", "name": "Quest"}]}]}

      '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Connection:
      - keep-alive
      Content-Length:
      - '202337'
      Content-Type:
      - application/json
      Date:
      - Tue, 21 Nov 2023 04:26:50 GMT
      Via:
      - 1.1 feb2cae68b8552b88ccb4488144416be.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - fzBsAwK8Q3I3Rv0YkP0uNBPYagx9IJfpG7X8FwlxLQ-vWLdsUsuOKA==
      X-Amz-Cf-Pop:
      - GRU3-P4
      X-Cache:
      - Miss from cloudfront
      x-amz-apigw-id:
      - OuytRGmcPHcEFxg=
      x-amzn-Remapped-Connection:
      - keep-alive
      x-amzn-Remapped-Content-Length:
      - '202337'
      x-amzn-Remapped-Date:
      - Tue, 21 Nov 2023 04:26:50 GMT
      x-amzn-Remapped-Server:
      - gunicorn
      x-amzn-RequestId:
      - 9ba54842-f531-4dd6-a813-8e8a87669666
    http_version: HTTP/1.1
    status_code: 200
version: 1
